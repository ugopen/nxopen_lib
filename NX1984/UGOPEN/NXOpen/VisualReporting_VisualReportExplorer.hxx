#ifndef NXOpen_VISUALREPORTING_VISUALREPORTEXPLORER_HXX_INCLUDED
#define NXOpen_VISUALREPORTING_VISUALREPORTEXPLORER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     VisualReporting_VisualReportExplorer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/VisualReporting_GroupLabel.hxx>
#include <NXOpen/libnxopencpp_visualreporting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace VisualReporting
    {
        class VisualReportExplorer;
    }
    namespace VisualReporting
    {
        class VisualReportManager;
    }
    class NXObject;
    namespace VisualReporting
    {
        class GroupLabel;
    }
    namespace VisualReporting
    {
        class VisualReportExplorerImpl;
        /**
                The Explorer of the results of a visual report.
                The Visual Report Explorer enables a report to focus on specified objects
                or on a particular group in the visual report.
             <br> To obtain an instance of this class, refer to @link NXOpen::VisualReporting::VisualReportManager  NXOpen::VisualReporting::VisualReportManager @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_VISUALREPORTINGEXPORT  VisualReportExplorer
        {
            /** Represents whether Explore Report mode is on or off.
                    */
            public: enum ExploreReportOption
            {
                ExploreReportOptionOff/** Explore Visual Report results is off */,
                ExploreReportOptionOn/** Explore Visual Report results is on */
            };

            /** When the set of objects to report upon is changed, should the 
                        contents of the set be replaced or extended.
                    */
            public: enum ReportOnObjectsOption
            {
                ReportOnObjectsOptionReplace/** Replace the existing set of objects */,
                ReportOnObjectsOptionAdd/** Add to the existing set of objects */
            };

            /** Status reported by @link NXOpen::VisualReporting::VisualReportExplorer::ReportDown NXOpen::VisualReporting::VisualReportExplorer::ReportDown@endlink .
                    */
            public: enum ReportDownStatus
            {
                ReportDownStatusNone/** There are no objects of interest below the specified objects */,
                ReportDownStatusEnd/** Report Down has reached the lowest level on all branches of the assembly */,
                ReportDownStatusMore/** There are more objects of interest below the currently reported upon objects */
            };

            private: VisualReportExplorerImpl * m_visualreportexplorer_impl;
            private: NXOpen::VisualReporting::VisualReportManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit VisualReportExplorer(NXOpen::VisualReporting::VisualReportManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~VisualReportExplorer();
            /**Returns  the Explore Report setting
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::VisualReportExplorer::ExploreReportOption ExploreReport
            (
            );
            /**Sets  the Explore Report setting
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetExploreReport
            (
                NXOpen::VisualReporting::VisualReportExplorer::ExploreReportOption exploreReportOption /** explorereportoption */ 
            );
            /** Set objects to report upon.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ReportOnObjects
            (
                const std::vector<NXOpen::NXObject *> & nxObjects /** Objects to report upon */,
                NXOpen::VisualReporting::VisualReportExplorer::ReportOnObjectsOption reportOnObjectsOption /** Add to or replace objects in report */
            );
            /** Remove objects from report.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void RemoveReportObjects
            (
                const std::vector<NXOpen::NXObject *> & nxObjects /** Objects to remove from report */
            );
            /** Remove all objects from the visual report.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ClearReportObjects
            (
            );
            /** Resets the objects to report upon.
                        If there is no group to explore set, then all leaf nodes of the 
                        assembly will be included in the report.
                        If a group to explore is set, then elements of that group
                        will be reported upon.  Where there are two elements of the group
                        on the same branch of the assembly, the lowest will be reported upon.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ResetReportObjects
            (
            );
            /** Gets the exploring @link NXOpen::VisualReporting::GroupLabel NXOpen::VisualReporting::GroupLabel@endlink 
                     @return  The exploring group 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::GroupLabel * GetExploringGroup
            (
            );
            /** Sets the @link NXOpen::VisualReporting::GroupLabel NXOpen::VisualReporting::GroupLabel@endlink  to explore.
                        The @link NXOpen::VisualReporting::GroupLabel NXOpen::VisualReporting::GroupLabel@endlink  to explore can be set to NULL.
                        If there is no active visual report, then nothing will happen.
                        Note that the @link NXOpen::VisualReporting::GroupLabel NXOpen::VisualReporting::GroupLabel@endlink  should belong to the active visual report
                        otherwise the call will fail.
                        This method will also cause the objects reported upon to be reset in the
                        same way as a call to @link ResetReportObjects ResetReportObjects@endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetGroupToExplore
            (
                NXOpen::VisualReporting::GroupLabel * groupLabel /** The group to explore */
            );
            /** Report down the assembly, starting from the @link NXOpen::Assemblies::ComponentAssembly::RootComponent NXOpen::Assemblies::ComponentAssembly::RootComponent@endlink .
                        A group to explore should have been specified for this method to         
                        have any effect.
                        The first time this method is called the operation will start from
                        @link NXOpen::Assemblies::ComponentAssembly::RootComponent NXOpen::Assemblies::ComponentAssembly::RootComponent@endlink .
                        On subsequent calls, the set of objects currently reported upon 
                        will be used as the starting point.
                     @return  Status from the report down operation 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::VisualReportExplorer::ReportDownStatus ReportDown
            (
                NXOpen::VisualReporting::VisualReportExplorer::ReportOnObjectsOption reportOnObjectsOption /** Add to or replace objects in report */
            );
            /** Report down from a starting array of objects.
                        A group to explore should have been specified for this method to
                        have any effect.
                        On subsequent calls to @link NXOpen::VisualReporting::VisualReportExplorer::ReportDown NXOpen::VisualReporting::VisualReportExplorer::ReportDown@endlink , with no nxObjects
                        array, the set of objects currently reported upon will be used as the 
                        starting point.
                     @return  Status from the report down operation 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::VisualReportExplorer::ReportDownStatus ReportDown
            (
                const std::vector<NXOpen::NXObject *> & nxObjects /** Objects from which to start report down operation */,
                NXOpen::VisualReporting::VisualReportExplorer::ReportOnObjectsOption reportOnObjectsOption /** Add to or replace objects in report */
            );
            /** Report on the children of nxObjects.
                        The children will either replace the existing contents of the report
                        or be added to the report.
                        This operation is intended for @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink s
                        and will report on direct children of the components.
                        If an object is not an instance of @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink 
                        or if it has no children then nothing will be changed.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ReportOnChildren
            (
                const std::vector<NXOpen::NXObject *> & nxObjects /** Objects whose children will be reported upon */,
                NXOpen::VisualReporting::VisualReportExplorer::ReportOnObjectsOption reportOnObjectsOption /** Add to or replace objects in report */
            );
            /** Report on the parents of the nxObjects.
                        The parents will either replace the existing contents of the report
                        or be added to the report.
                        This operation is intended for @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink s
                        and will report on the parent of the component.
                        If the object is not an instance of @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink 
                        or if it has no parent then nothing will be changed.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ReportOnParents
            (
                const std::vector<NXOpen::NXObject *> & nxObjects /** Objects whose parents will be reported upon */,
                NXOpen::VisualReporting::VisualReportExplorer::ReportOnObjectsOption reportOnObjectsOption /** Add to or replace objects in report */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
