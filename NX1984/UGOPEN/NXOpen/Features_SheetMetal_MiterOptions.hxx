#ifndef NXOpen_FEATURES_SHEETMETAL_MITEROPTIONS_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_MITEROPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_MiterOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class MiterOptions;
        }
    }
    class Expression;
    namespace Features
    {
        namespace SheetMetal
        {
            class _MiterOptionsBuilder;
            class MiterOptionsImpl;
            /** Represents a Miter Data Options builder. Mitre cut is essentially an end treatment to the contour flange feature,
                    which shall prevent merging/interference with the existing or newly placed features in sheet metal.
             <br>  Created in NX4.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  MiterOptions : public NXOpen::TaggedObject
            {
                /** the miter positions options.*/
                public: enum PositionOptions
                {
                    PositionOptionsNone/** no miter */,
                    PositionOptionsStart/** miter is done at the beginning*/,
                    PositionOptionsEnd/** miter is done at the ending */,
                    PositionOptionsBoth/** miter is done both at beginning and ending*/
                };

                /** the miter type options.*/
                public: enum TypeOptions
                {
                    TypeOptionsNormalToSourceFace/** mitering is done along the normal to source face*/,
                    TypeOptionsNormalToThicknessFace/** mitering is done along the normal to thickness face*/
                };

                /** the closed corner type options.*/
                public: enum ClosedCornerTypeOptions
                {
                    ClosedCornerTypeOptionsNone/** Corner is not closed*/,
                    ClosedCornerTypeOptionsOpen/** corner is open*/,
                    ClosedCornerTypeOptionsClosed/** corner is closed completely*/,
                    ClosedCornerTypeOptionsCircularCutout/** corner has a circular cutout in it*/,
                    ClosedCornerTypeOptionsUCutout/** corner has a U shaped cutout in it*/,
                    ClosedCornerTypeOptionsVCutout/** corner has a V shaped cutout in it*/
                };

                /** This enum represents corner treatment cutout origin type*/
                public: enum CornerTreatmentOriginTypeOptions
                {
                    CornerTreatmentOriginTypeOptionsBendCenter/** The cutout origin will be at the intersection of first bend's centerline and bisector of corner angle. */,
                    CornerTreatmentOriginTypeOptionsCornerPoint/** The cutout origin will be at the corner point.*/
                };

                private: MiterOptionsImpl * m_miteroptions_impl;
                private: friend class  _MiterOptionsBuilder;
                protected: MiterOptions();
                public: ~MiterOptions();
                /**Returns  the position of miter.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::MiterOptions::PositionOptions Position
                (
                );
                /**Sets  the position of miter.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetPosition
                (
                    NXOpen::Features::SheetMetal::MiterOptions::PositionOptions miterPosition /** miter position */ 
                );
                /**Returns  the miter start type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::MiterOptions::TypeOptions StartType
                (
                );
                /**Sets  the miter start type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetStartType
                (
                    NXOpen::Features::SheetMetal::MiterOptions::TypeOptions startType /** start type */ 
                );
                /**Returns  the miter end type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::MiterOptions::TypeOptions EndType
                (
                );
                /**Sets  the miter end type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetEndType
                (
                    NXOpen::Features::SheetMetal::MiterOptions::TypeOptions endType /** end type */ 
                );
                /** THE miter start value expression.Positive value adds material and negative v @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GetStartValue
                (
                );
                /** 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Expression::SetRightHandSide NXOpen::Expression::SetRightHandSide@endlink  on the @link NXOpen::Expression NXOpen::Expression@endlink  object returned from @link Features::SheetMetal::MiterOptions::GetStartValue Features::SheetMetal::MiterOptions::GetStartValue@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX10.0.0.  Use NXOpen::Expression::SetRightHandSide on the NXOpen::Expression object returned from Features::SheetMetal::MiterOptions::GetStartValue instead.") void SetStartValue
                (
                    const NXString & startValue /** start value */ 
                );
                /** 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Expression::SetRightHandSide NXOpen::Expression::SetRightHandSide@endlink  on the @link NXOpen::Expression NXOpen::Expression@endlink  object returned from @link Features::SheetMetal::MiterOptions::GetStartValue Features::SheetMetal::MiterOptions::GetStartValue@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                void SetStartValue
                (
                    const char * startValue /** start value */ 
                );
                /** THE miter end value expression. @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GetEndValue
                (
                );
                /** 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Expression::SetRightHandSide NXOpen::Expression::SetRightHandSide@endlink  on the @link NXOpen::Expression NXOpen::Expression@endlink  object returned from @link Features::SheetMetal::MiterOptions::GetEndValue Features::SheetMetal::MiterOptions::GetEndValue@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX10.0.0.  Use NXOpen::Expression::SetRightHandSide on the NXOpen::Expression object returned from Features::SheetMetal::MiterOptions::GetEndValue instead.") void SetEndValue
                (
                    const NXString & endValue /** end value */ 
                );
                /** 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Expression::SetRightHandSide NXOpen::Expression::SetRightHandSide@endlink  on the @link NXOpen::Expression NXOpen::Expression@endlink  object returned from @link Features::SheetMetal::MiterOptions::GetEndValue Features::SheetMetal::MiterOptions::GetEndValue@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                void SetEndValue
                (
                    const char * endValue /** end value */ 
                );
                /**Returns  the cut type of the sheet. If set to true, mitering is done using the normal cutout method and aims
                        to reduce the small segements that result as part of miter computation, and is carried out on an unbent sheet.
                        Normally, the cut runs through from one bend centre to another.  The sheet is later bent to achieve the desired result.
                        This option is not applicable for feature created in NX1926 and above and set method will not do any operation
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseNormalCutoutMethod
                (
                );
                /**Sets  the cut type of the sheet. If set to true, mitering is done using the normal cutout method and aims
                        to reduce the small segements that result as part of miter computation, and is carried out on an unbent sheet.
                        Normally, the cut runs through from one bend centre to another.  The sheet is later bent to achieve the desired result.
                        This option is not applicable for feature created in NX1926 and above and set method will not do any operation
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUseNormalCutoutMethod
                (
                    bool cutType /** cut type */ 
                );
                /**Returns  the closed corner option type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions ClosedCornerType
                (
                );
                /**Sets  the closed corner option type.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetClosedCornerType
                (
                    NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions cutType /** cut type */ 
                );
                /** The diameter expression of the closed corner. Applicable only when @link NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions@endlink 
                            is @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink . @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GetClosedCornerDiameter
                (
                );
                /** 
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetClosedCornerDiameter
                (
                    const NXString & endValue /** end value */ 
                );
                /** 
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : None */
                void SetClosedCornerDiameter
                (
                    const char * endValue /** end value */ 
                );
                /**Returns  the v cutout angle1 expression of the closed corner. Applicable only when @link NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions@endlink 
                            is @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Expression * ClosedCornerVAngle1
                (
                );
                /**Returns  the v cutout angle2 expression of the closed corner. Applicable only when @link NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions NXOpen::Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions@endlink 
                            is @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Expression * ClosedCornerVAngle2
                (
                );
                /**Returns  the miter toggle value that specifies whether to miter the corner.This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed@endlink  or
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool MiterCorner
                (
                );
                /**Sets  the miter toggle value that specifies whether to miter the corner.This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed@endlink  or
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetMiterCorner
                (
                    bool miterCorner /** mitercorner */ 
                );
                /**Returns  the root radius used when mitering the corner. This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsClosed@endlink  or
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MiterRootRadius
                (
                );
                /**Returns  the option that specifies whether to blend the sharp edges created by the miter 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BlendMiter
                (
                );
                /**Sets  the option that specifies whether to blend the sharp edges created by the miter 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetBlendMiter
                (
                    bool blendMiter /** blendmiter */ 
                );
                /**Returns  the origin used for circular, u and v cutout corner treatments. This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::MiterOptions::CornerTreatmentOriginTypeOptions CornerTreatmentOriginType
                (
                );
                /**Sets  the origin used for circular, u and v cutout corner treatments. This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetCornerTreatmentOriginType
                (
                    NXOpen::Features::SheetMetal::MiterOptions::CornerTreatmentOriginTypeOptions originType /** origintype */ 
                );
                /**Returns  the offset used for circular, u and v cutout corner treatments. This only applies when the treatment type is set to 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsCircularCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsUCutout@endlink  or 
                            @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout Features::SheetMetal::MiterOptions::ClosedCornerTypeOptionsVCutout@endlink .
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CornerTreatmentOffset
                (
                );
                /**Returns  the flange clearance used for a contour flange corner in case of a three bend corner condition. 
                            This applies for all treatment types in @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions@endlink  
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ThreeBendCornerFlangeClearance
                (
                );
                /**Returns  the corner gap used for a contour flange corner in case of a closed corner condition. 
                        This applies for all treatment types in @link Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions Features::SheetMetal::MiterOptions::ClosedCornerTypeOptions@endlink 
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ClosedCornerGap
                (
                );
                /**Returns  the miter_corners option.If set to true, it miter bend edges that are larger than default bend radius.
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: bool MiterInteriorCornersIfNecessary
                (
                );
                /**Sets  the miter_corners option.If set to true, it miter bend edges that are larger than default bend radius.
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMiterInteriorCornersIfNecessary
                (
                    bool miterCorners /** miter corners */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
