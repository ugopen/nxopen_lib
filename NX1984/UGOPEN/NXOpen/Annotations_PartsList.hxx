#ifndef NXOpen_ANNOTATIONS_PARTSLIST_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PARTSLIST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PartsList.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_Table.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PartsList;
    }
    namespace Annotations
    {
        class Table;
    }
    class DisplayableObject;
    class View;
    namespace Annotations
    {
        class _PartsListBuilder;
        class PartsListImpl;
        /**
             @brief Represents a Annotations.PartsList. 

         
            This class represents a parts list.
             <br> To create or edit an instance of this class, use @link NXOpen::Annotations::PlistBuilder  NXOpen::Annotations::PlistBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PartsList : public NXOpen::Annotations::Table
        {
            private: PartsListImpl * m_partslist_impl;
            private: friend class  _PartsListBuilder;
            protected: PartsList();
            public: ~PartsList();
            /** Updates Id Symbol callout group on deletion of symbol(s) in the group 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateCalloutgroupForDeleteCallouts
            (
                const std::vector<NXOpen::DisplayableObject *> & calloutSymbols /** Array of grouped Id Symbol callouts, NULL not allowed*/
            );
            /** Update parts list 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void Update
            (
            );
            /** Show Parts list members using balloons in the given view 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void ShowBalloonsInView
            (
                NXOpen::View * viewTag /** View on which balloons to be created*/
            );
            /** Attach and/or detach the input Parts list rows 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void AttachDetachRows
            (
                const std::vector<NXOpen::DisplayableObject *> & partsListRows /** Array of parts lists rows, NULL not allowed*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
