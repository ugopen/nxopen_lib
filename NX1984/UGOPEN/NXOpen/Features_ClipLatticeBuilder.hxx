#ifndef NXOpen_FEATURES_CLIPLATTICEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_CLIPLATTICEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ClipLatticeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_BooleanToolBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ClipLatticeBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanToolBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _ClipLatticeBuilderBuilder;
        class ClipLatticeBuilderImpl;
        /**    Represents a @link Features::ClipLattice Features::ClipLattice@endlink  builder   <br> To create a new instance of this class, use @link NXOpen::Features::LatticeFeatureCollection::CreateClipLatticeBuilder  NXOpen::Features::LatticeFeatureCollection::CreateClipLatticeBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BooleanTool.ToolOption </term> <description> 
         
        FaceOrPlane </description> </item> 

        <item><term> 
         
        BoundaryClip </term> <description> 
         
        Inside </description> </item> 

        <item><term> 
         
        BoundaryType </term> <description> 
         
        WithBody </description> </item> 

        <item><term> 
         
        LatticeClip </term> <description> 
         
        GraphAndBody </description> </item> 

        </list> 

         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ClipLatticeBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** @brief Determines what type of clipping is done to the lattice Body.
                        <ul>
                          <li> Graph Only - 
                                Clips the lattice graph but retains the original solid body.</li>
                          <li> Graph and Body - 
                                Clips the lattice graph as well as the solid body.</li>
                          <li> Body Only- 
                                Clips the lattice body but leaves the original graph intact.</li>
                        </ul>
                      

             
                     */
            public: enum LatticeClipOptions
            {
                LatticeClipOptionsGraphAndBody/** graph and body */ ,
                LatticeClipOptionsGraphOnly/** graph only */ ,
                LatticeClipOptionsBodyOnly/** body only */ 
            };

            /** @brief Determines the portion of the lattice that is kept after clipping.
                        <ul>
                          <li> Inside - 
                                Clips the lattice and keeps the portion within the boundary body selected.</li>
                          <li> Outside - 
                                Clips the lattice and keets the portion outside the boundary body selected.</li>
                        </ul>
                      

             
                     */
            public: enum Clipping
            {
                ClippingInside/** inside */ ,
                ClippingOutside/** outside */ 
            };

            /** @brief Determines if bodies or faces should be used as the trimming tool.
                        <ul>
                          <li> Bodies - 
                                Select solid bodies as clip boundary.</li>
                          <li> Faces - 
                                Select faces as trim tool.</li>
                        </ul>
                      

             
                     */
            public: enum BoundaryOptions
            {
                BoundaryOptionsWithBody/** with body */ ,
                BoundaryOptionsWithFace/** with face */ 
            };

            private: ClipLatticeBuilderImpl * m_cliplatticebuilder_impl;
            private: friend class  _ClipLatticeBuilderBuilder;
            protected: ClipLatticeBuilder();
            public: ~ClipLatticeBuilder();
            /**Returns  the lattice bodies 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * LatticeBodies
            (
            );
            /**Returns  the lattice clip 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ClipLatticeBuilder::LatticeClipOptions LatticeClip
            (
            );
            /**Sets  the lattice clip 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetLatticeClip
            (
                NXOpen::Features::ClipLatticeBuilder::LatticeClipOptions latticeClip /** latticeclip */ 
            );
            /**Returns  the boundary type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ClipLatticeBuilder::BoundaryOptions BoundaryType
            (
            );
            /**Sets  the boundary type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetBoundaryType
            (
                NXOpen::Features::ClipLatticeBuilder::BoundaryOptions boundaryType /** boundarytype */ 
            );
            /**Returns  the boundary body 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BoundaryBody
            (
            );
            /**Returns  the clipping mode 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ClipLatticeBuilder::Clipping BoundaryClip
            (
            );
            /**Sets  the clipping mode 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetBoundaryClip
            (
                NXOpen::Features::ClipLatticeBuilder::Clipping boundaryClip /** boundaryclip */ 
            );
            /**Returns  the tool bodies to trim the target body(s). The tool bodies are
                      * gotten through the BooleanTool Builder. Only tool options that can
                      * be set on @link NXOpen::Features::ClipLatticeBuilder::BooleanTool NXOpen::Features::ClipLatticeBuilder::BooleanTool@endlink  are
                      * @link GeometricUtilities::BooleanToolBuilder::BooleanToolTypeFaceOrPlane GeometricUtilities::BooleanToolBuilder::BooleanToolTypeFaceOrPlane@endlink  or
                      * @link GeometricUtilities::BooleanToolBuilder::BooleanToolTypeNewPlane GeometricUtilities::BooleanToolBuilder::BooleanToolTypeNewPlane@endlink  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanToolBuilder * BooleanTool
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
