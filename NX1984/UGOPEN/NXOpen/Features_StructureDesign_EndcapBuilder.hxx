#ifndef NXOpen_FEATURES_STRUCTUREDESIGN_ENDCAPBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STRUCTUREDESIGN_ENDCAPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StructureDesign_EndcapBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace StructureDesign
        {
            class EndcapBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        namespace StructureDesign
        {
            class _EndcapBuilderBuilder;
            class EndcapBuilderImpl;
            /**
                Represents a @link Features::StructureDesign::Endcap Features::StructureDesign::Endcap@endlink  builder
                 <br> To create a new instance of this class, use @link NXOpen::Features::StructureDesignCollection::CreateStructureDesignEndcapBuilder  NXOpen::Features::StructureDesignCollection::CreateStructureDesignEndcapBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            Chamfer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ChamferLength.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            Offset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            OffsetRatio </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            PlacementType </term> <description> 
             
            Inside </description> </item> 

            <item><term> 
             
            PreserveOverallLength </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            Thickness.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  EndcapBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Placement Type */
                public: enum PlacementTypes
                {
                    PlacementTypesInside/** inside */ ,
                    PlacementTypesOutside/** outside */ 
                };

                /** Corner Treatment Type */
                public: enum CornerTreatmentTypes
                {
                    CornerTreatmentTypesNone/** none */ ,
                    CornerTreatmentTypesChamfer/** chamfer */ ,
                    CornerTreatmentTypesFillet/** fillet */ 
                };

                private: EndcapBuilderImpl * m_endcapbuilder_impl;
                private: friend class  _EndcapBuilderBuilder;
                protected: EndcapBuilder();
                public: ~EndcapBuilder();
                /**Returns  the member 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * Member
                (
                );
                /**Returns  the placement type 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::EndcapBuilder::PlacementTypes PlacementType
                (
                );
                /**Sets  the placement type 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetPlacementType
                (
                    NXOpen::Features::StructureDesign::EndcapBuilder::PlacementTypes placementType /** placementtype */ 
                );
                /**Returns  the offset ratio 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double OffsetRatio
                (
                );
                /**Sets  the offset ratio 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetOffsetRatio
                (
                    double offsetRatio /** offsetratio */ 
                );
                /**Returns  the preserveOverallLength 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool PreserveOverallLength
                (
                );
                /**Sets  the preserveOverallLength 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetPreserveOverallLength
                (
                    bool preserveOverallLength /** preserveoveralllength */ 
                );
                /**Returns  the offset between end cap and inside face of member
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Offset
                (
                );
                /**Returns  the thickness 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Thickness
                (
                );
                /**Returns  the chamfer 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool Chamfer
                (
                );
                /**Sets  the chamfer 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetChamfer
                (
                    bool chamfer /** chamfer */ 
                );
                /**Returns  the end cap corner treatment type 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::EndcapBuilder::CornerTreatmentTypes EnumCornerTreatmentType
                (
                );
                /**Sets  the end cap corner treatment type 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetEnumCornerTreatmentType
                (
                    NXOpen::Features::StructureDesign::EndcapBuilder::CornerTreatmentTypes enumCornerTreatmentType /** enumcornertreatmenttype */ 
                );
                /**Returns  the chamferLength 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ChamferLength
                (
                );
                /**Returns  the distance tolerance 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the end cap name 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString EndCapName
                (
                );
                /**Sets  the end cap name 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetEndCapName
                (
                    const NXString & endCapName /** endcapname */ 
                );
                /**Sets  the end cap name 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                void SetEndCapName
                (
                    const char * endCapName /** endcapname */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
