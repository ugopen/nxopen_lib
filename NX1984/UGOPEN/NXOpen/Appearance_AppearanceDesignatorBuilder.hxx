#ifndef NXOpen_APPEARANCE_APPEARANCEDESIGNATORBUILDER_HXX_INCLUDED
#define NXOpen_APPEARANCE_APPEARANCEDESIGNATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Appearance_AppearanceDesignatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_appearance_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Appearance
    {
        class AppearanceDesignatorBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    class TaggedObject;
    namespace Appearance
    {
        class _AppearanceDesignatorBuilderBuilder;
        class AppearanceDesignatorBuilderImpl;
        /** Represents a @link NXOpen::Appearance::AppearanceDesignatorBuilder NXOpen::Appearance::AppearanceDesignatorBuilder@endlink 
                The AppearanceDesignatorBuilder used to manipulate specific appearance designator
                for appearance management.
             <br> To create a new instance of this class, use @link NXOpen::Appearance::AppearanceManager::CreateAppearanceDesignatorBuilder  NXOpen::Appearance::AppearanceManager::CreateAppearanceDesignatorBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_APPEARANCEEXPORT  AppearanceDesignatorBuilder : public NXOpen::Builder
        {
            private: AppearanceDesignatorBuilderImpl * m_appearancedesignatorbuilder_impl;
            private: friend class  _AppearanceDesignatorBuilderBuilder;
            protected: AppearanceDesignatorBuilder();
            public: ~AppearanceDesignatorBuilder();
            /**Returns  the designator name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXString DesignatorName
            (
            );
            /**Sets  the designator name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetDesignatorName
            (
                const NXString & designatorName /** designatorname */ 
            );
            /**Sets  the designator name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            void SetDesignatorName
            (
                const char * designatorName /** designatorname */ 
            );
            /**Returns  the designator description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXString DesignatorDescription
            (
            );
            /**Sets  the designator description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetDesignatorDescription
            (
                const NXString & designatorDescription /** designatordescription */ 
            );
            /**Sets  the designator description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            void SetDesignatorDescription
            (
                const char * designatorDescription /** designatordescription */ 
            );
            /**Returns  the selection list 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXOpen::SelectNXObjectList * SelectionList
            (
            );
            /**Returns  the appearance area 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXString ParentAppearanceArea
            (
            );
            /**Sets  the appearance area 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void SetParentAppearanceArea
            (
                const NXString & parentAppearanceArea /** parentappearancearea */ 
            );
            /**Sets  the appearance area 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            void SetParentAppearanceArea
            (
                const char * parentAppearanceArea /** parentappearancearea */ 
            );
            /** This function will remove conflicted face material
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void RemoveConflictedFaceMaterial
            (
                const std::vector<NXOpen::TaggedObject *> & conflictDesignatorTag /** conflictdesignatortag */ ,
                const std::vector<NXOpen::TaggedObject *> & conflictAppMat /** conflictappmat */ ,
                const std::vector<NXOpen::TaggedObject *> & conflictEntities /** conflictentities */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
