#ifndef NXOpen_GEOMETRICUTILITIES_RODITEMBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_RODITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_RodItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class RodItemBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class Section;
    namespace GeometricUtilities
    {
        class _RodItemBuilderBuilder;
        class RodItemBuilderImpl;
        /** Represents a RodItem  <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::RodItemListBuilder::CreateRodItemBuilder  NXOpen::GeometricUtilities::RodItemListBuilder::CreateRodItemBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  RodItemBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** These represent the type of curves to be created */
            public: enum CurveCreateType
            {
                CurveCreateTypeByPoints/** Create by points */,
                CurveCreateTypeExistingCurves/** Create by existing curves */
            };

            private: RodItemBuilderImpl * m_roditembuilder_impl;
            private: friend class  _RodItemBuilderBuilder;
            protected: RodItemBuilder();
            public: ~RodItemBuilder();
            /**Returns the rod creation method. The 2 choices are a rod defined by 2 selected points or a section defined by existing curves. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::RodItemBuilder::CurveCreateType Method
            (
            );
            /**Sets the rod creation method. The 2 choices are a rod defined by 2 selected points or a section defined by existing curves. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetMethod
            (
                NXOpen::GeometricUtilities::RodItemBuilder::CurveCreateType method /** method */ 
            );
            /**Returns  the section defining the unit cell graph. It can contain curves or edges. It is used only if the method is set to existing curves 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * GraphEdge
            (
            );
            /**Returns the start point of the rod. Used only if the rod creation method is set to by points. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * StartPoint
            (
            );
            /**Sets the start point of the rod. Used only if the rod creation method is set to by points. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetStartPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the end point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * EndPoint
            (
            );
            /**Sets  the end point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetEndPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the number of segments of the non-linear curve devided into a polyline 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfSegments
            (
            );
            /**Sets  the number of segments of the non-linear curve devided into a polyline 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetNumberOfSegments
            (
                int numberOfSegments /** numberofsegments */ 
            );
            /** Deletes a Features.RodItemBuilder 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void Destroy
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
