#ifndef NXOpen_DRAWINGS_DRAWINGFORMATSHEETBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_DRAWINGFORMATSHEETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_DrawingFormatSheetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class DrawingFormatSheetBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drawings
    {
        class _DrawingFormatSheetBuilderBuilder;
        class DrawingFormatSheetBuilderImpl;
        /**
            Represents a @link NXOpen::Drawings::DrawingFormatSheetBuilder NXOpen::Drawings::DrawingFormatSheetBuilder@endlink 
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  DrawingFormatSheetBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: DrawingFormatSheetBuilderImpl * m_drawingformatsheetbuilder_impl;
            private: friend class  _DrawingFormatSheetBuilderBuilder;
            protected: DrawingFormatSheetBuilder();
            public: ~DrawingFormatSheetBuilder();
            /**Returns  the initial sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString InitialSheetNumber
            (
            );
            /**Sets  the initial sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInitialSheetNumber
            (
                const NXString & initialSheetNumber /** initialsheetnumber */ 
            );
            /**Sets  the initial sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetInitialSheetNumber
            (
                const char * initialSheetNumber /** initialsheetnumber */ 
            );
            /**Returns  the initial secondary sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString InitialSecondarySheetNumber
            (
            );
            /**Sets  the initial secondary sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInitialSecondarySheetNumber
            (
                const NXString & initialSecondarySheetNumber /** initialsecondarysheetnumber */ 
            );
            /**Sets  the initial secondary sheet number 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetInitialSecondarySheetNumber
            (
                const char * initialSecondarySheetNumber /** initialsecondarysheetnumber */ 
            );
            /**Returns  the secondary number delimiter 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SecondaryNumberDelimiter
            (
            );
            /**Sets  the secondary number delimiter 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSecondaryNumberDelimiter
            (
                const NXString & secondaryNumberDelimiter /** secondarynumberdelimiter */ 
            );
            /**Sets  the secondary number delimiter 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetSecondaryNumberDelimiter
            (
                const char * secondaryNumberDelimiter /** secondarynumberdelimiter */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
