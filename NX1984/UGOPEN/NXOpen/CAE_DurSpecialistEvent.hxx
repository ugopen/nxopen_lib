#ifndef NXOpen_CAE_DURSPECIALISTEVENT_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistEvent;
    }
    class NXObject;
    namespace CAE
    {
        class _DurSpecialistEventBuilder;
        class DurSpecialistEventImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistEvent NXOpen::CAE::DurSpecialistEvent@endlink  
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistEvent : public NXOpen::NXObject
        {
            /** Represents the update criterion type for link update */
            public: enum UpdateCriterionType
            {
                UpdateCriterionTypeByName/** Use the name to find the subcase back */,
                UpdateCriterionTypeByIndex/** Use the index to find the subcase back */
            };

            /** Represents the event type */
            public: enum EventType
            {
                EventTypeSuperposition/** Superposition Event */,
                EventTypeBlockLoad/** Block Load Event */,
                EventTypeFlexBody/** Motion FlexBody event */,
                EventTypeTransient/** Transient event */,
                EventTypeDutyCycle/** Duty Cycle event */,
                EventTypeRandom/** Random event */,
                EventTypeHarmonic/** Harmonic event */
            };

            /** unused */
            public: enum SelectionCriterionType
            {
                SelectionCriterionTypeDummy/** nonsense */
            };

            private: DurSpecialistEventImpl * m_durspecialistevent_impl;
            private: friend class  _DurSpecialistEventBuilder;
            protected: DurSpecialistEvent();
            public: ~DurSpecialistEvent();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
