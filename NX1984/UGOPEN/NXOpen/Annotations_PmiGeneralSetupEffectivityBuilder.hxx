#ifndef NXOpen_ANNOTATIONS_PMIGENERALSETUPEFFECTIVITYBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIGENERALSETUPEFFECTIVITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiGeneralSetupEffectivityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PmiGeneralSetupEffectivityBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _PmiGeneralSetupEffectivityBuilderBuilder;
        class PmiGeneralSetupEffectivityBuilderImpl;
        /** Represents a NXOpen.Annotations.PmiGeneralSetupEffectivityBuilder 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PmiGeneralSetupEffectivityBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** the enum values which provides additional control over the display of PMI associated to primary geometry when Effectivity is being inferred */
            public: enum PrimaryGeometryType
            {
                PrimaryGeometryTypeIfAllAssociatedOccurrencesareLoaded/** the value which represents 'If All Associated Occurrences are Loaded' type for primary geometry*/,
                PrimaryGeometryTypeIfAnyAssociatedOccurrencesareLoaded/** the value which represents 'If Any Associated Occurrences are Loaded' type for primary geometry */
            };

            /** the enum values which provides additional control over the display of PMI associated to reference geometry when Effectivity is being inferred */
            public: enum ReferenceGeometryType
            {
                ReferenceGeometryTypeIfAllAssociatedOccurrencesareLoaded/** the value which represents 'If All Associated Occurrences are Loaded' type for reference geometry */,
                ReferenceGeometryTypeIfAnyAssociatedOccurrencesareLoaded/** the value which represents 'If Any Associated Occurrences are Loaded' type for reference geometry */
            };

            private: PmiGeneralSetupEffectivityBuilderImpl * m_pmigeneralsetupeffectivitybuilder_impl;
            private: friend class  _PmiGeneralSetupEffectivityBuilderBuilder;
            protected: PmiGeneralSetupEffectivityBuilder();
            public: ~PmiGeneralSetupEffectivityBuilder();
            /**Returns  the option values which provides additional control over the display of PMI associated to reference geometry when Effectivity is being inferred 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiGeneralSetupEffectivityBuilder::PrimaryGeometryType DisplayPmiAssociatedOnlyToPrimaryGeometry
            (
            );
            /**Sets  the option values which provides additional control over the display of PMI associated to reference geometry when Effectivity is being inferred 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetDisplayPmiAssociatedOnlyToPrimaryGeometry
            (
                NXOpen::Annotations::PmiGeneralSetupEffectivityBuilder::PrimaryGeometryType toPrimaryGeometry /** toprimarygeometry */ 
            );
            /**Returns  the 'To Components Loaded for Reference' toggle value which determines whether or not PMI objects, which are associated to components that have been loaded for reference, are considered for display 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ComponentsLoadedForReference
            (
            );
            /**Sets  the 'To Components Loaded for Reference' toggle value which determines whether or not PMI objects, which are associated to components that have been loaded for reference, are considered for display 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetComponentsLoadedForReference
            (
                bool componentsLoadedForReference /** componentsloadedforreference */ 
            );
            /**Returns  the option values which provides additional control over the display of PMI associated to reference geometry when Effectivity is being inferred 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiGeneralSetupEffectivityBuilder::ReferenceGeometryType DisplayPmiAssociatedToReferenceGeometry
            (
            );
            /**Sets  the option values which provides additional control over the display of PMI associated to reference geometry when Effectivity is being inferred 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetDisplayPmiAssociatedToReferenceGeometry
            (
                NXOpen::Annotations::PmiGeneralSetupEffectivityBuilder::ReferenceGeometryType toReferenceGeometry /** toreferencegeometry */ 
            );
            /**Returns  the 'Display Effectivity Filtered Nodes' toggle value which determines whether or not the Effectivity Filtered PMI nodes are displayed in the Part Navigator 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool DisplayEffectivityFilteredNodes
            (
            );
            /**Sets  the 'Display Effectivity Filtered Nodes' toggle value which determines whether or not the Effectivity Filtered PMI nodes are displayed in the Part Navigator 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetDisplayEffectivityFilteredNodes
            (
                bool displayEffectivityFiltered /** displayeffectivityfiltered */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
