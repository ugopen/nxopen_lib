#ifndef NXOpen_CAE_QUALITYAUDIT_LENGTHRATIORANGESETTINGS_HXX_INCLUDED
#define NXOpen_CAE_QUALITYAUDIT_LENGTHRATIORANGESETTINGS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_QualityAudit_LengthRatioRangeSettings.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_CommonTypes.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_QualityAudit_ActionSettings.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace QualityAudit
        {
            class LengthRatioRangeSettings;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class ActionSettings;
        }
    }
    class Expression;
    namespace CAE
    {
        namespace QualityAudit
        {
            class _LengthRatioRangeSettingsBuilder;
            class LengthRatioRangeSettingsImpl;
            /**  @brief  This class contains the length ratio range settings available for the following actions: 
                    @link NXOpen::CAE::QualityAudit::ObjectLevelLengthRatioRangeCheck NXOpen::CAE::QualityAudit::ObjectLevelLengthRatioRangeCheck@endlink 
                    @link NXOpen::CAE::QualityAudit::MeshLevelLengthRatioRangeCheck NXOpen::CAE::QualityAudit::MeshLevelLengthRatioRangeCheck@endlink 
                    . 

               <br> To obtain an instance of this class get the @link NXOpen::CAE::QualityAudit::Action::Settings NXOpen::CAE::QualityAudit::Action::Settings@endlink  of classes using it.  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LengthRatioRangeSettings : public NXOpen::CAE::QualityAudit::ActionSettings
            {
                private: LengthRatioRangeSettingsImpl * m_lengthratiorangesettings_impl;
                private: friend class  _LengthRatioRangeSettingsBuilder;
                protected: LengthRatioRangeSettings();
                public: ~LengthRatioRangeSettings();
                /**Returns  the minimum length ratio required. For lower ratio an error is reported 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MinimumRatio
                (
                );
                /**Returns  the maximum length ratio range required. For a greater ratio an error is reported 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MaximumRatio
                (
                );
                /** The minimum ratio required for the specified connection type. For lower ratio an error is reported 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GetMinimumRatioByConnectionType
                (
                    NXOpen::CAE::Connections::ConnectionType connectionType /** connectiontype */ 
                );
                /** The maximum ratio required for the specified connection type. For a greater ratio an error is reported 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GetMaximumRatioByConnectionType
                (
                    NXOpen::CAE::Connections::ConnectionType connectionType /** connectiontype */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
