#ifndef NXOpen_PRINTPDFBUILDER_HXX_INCLUDED
#define NXOpen_PRINTPDFBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PrintPDFBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CDF.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PlotSourceBuilder.hxx>
#include <NXOpen/WidthDefinition.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PrintPDFBuilder;
    class Builder;
    class CDF;
    class PlotSourceBuilder;
    class WidthDefinition;
    class _PrintPDFBuilderBuilder;
    class PrintPDFBuilderImpl;
    /**
        Represents a @link NXOpen::PrintPDFBuilder NXOpen::PrintPDFBuilder@endlink  to be used when exporting the Current Display
        or selected sheets to a PDF document.  This class is for use on Windows only and is created 
        using @link NXOpen::PlotManager NXOpen::PlotManager@endlink .
        
        All sheets provided must be in the displayed part.
         <br> To create a new instance of this class, use @link NXOpen::PlotManager::CreatePrintPdfbuilder  NXOpen::PlotManager::CreatePrintPdfbuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    Relation </term> <description> 
     
    Undefined </description> </item> 

    </list> 

     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  PrintPDFBuilder : public NXOpen::Builder
    {
        /** Specifies the color option to use when creating the PDF document */
        public: enum Color
        {
            ColorAsDisplayed/** As Displayed */,
            ColorPartColors/** Part Colors */,
            ColorCustomPalette/** Custom Palette */,
            ColorBlackOnWhite/** Black on White */,
            ColorLegacyColors/** Legacy Colors */,
            ColorColorsByWidth/** Part Colors */
        };

        /** Specifies the primary selection of which type of width assignment to use. */
        public: enum Width
        {
            WidthStandardWidths/** Standard Widths */,
            WidthSingleWidth/** Single Width */,
            WidthCustomThreeWidths/** Custom Three Widths */,
            WidthCustomPalette/** Custom palette */
        };

        /** Specifies the size option of the PDF document. */
        public: enum SizeOption
        {
            SizeOptionFullScale/** Full Scale */,
            SizeOptionScaleFactor/** Scale Factor */,
            SizeOptionDimension/** Dimension */
        };

        /** Specifies which units are associated to the dimensions */
        public: enum UnitsOption
        {
            UnitsOptionMetric/** Metric */,
            UnitsOptionEnglish/** English */
        };

        /** Specifies the image resolution when exporting a raster image */
        public: enum ImageResolutionOption
        {
            ImageResolutionOptionDraft/** Draft Resolution */,
            ImageResolutionOptionLow/** Low Resolution */,
            ImageResolutionOptionMedium/** Medium Resolution */,
            ImageResolutionOptionHigh/** High Resolution */
        };

        /** Specifies the action option to be used when running Teamcenter */
        public: enum ActionOption
        {
            ActionOptionNew/** Create a new PDF document, will be overwritten if one exists of the same name in Teamcenter */,
            ActionOptionOverwrite/** Overwrite existing PDF document, error will be thrown if one does not exist in Teamcenter */,
            ActionOptionAppend/** Append to existing PDF document, error will be thrown if one does not exist in Teamcenter */,
            ActionOptionNative/** Export to native folder */
        };

        /** Specifies the output text option, as either text or polylines */
        public: enum OutputTextOption
        {
            OutputTextOptionText/** Text is kept as text */,
            OutputTextOptionPolylines/** Text is exported as polylines */
        };

        /** Specifies the relation to use when exporting a PDF to Teamcenter */
        public: enum RelationOption
        {
            RelationOptionSpecification/** Specification */,
            RelationOptionManifestation/** Manifestation */,
            RelationOptionUndefined/** No Relation */
        };

        private: PrintPDFBuilderImpl * m_printpdfbuilder_impl;
        private: friend class  _PrintPDFBuilderBuilder;
        protected: PrintPDFBuilder();
        public: ~PrintPDFBuilder();
        /**Returns  the action option to be used when saving the PDF file in a Teamcenter environment.
                    This can be set to Create New, Overwrite Existing PDF, or Append to Existing PDF. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::ActionOption Action
        (
        );
        /**Sets  the action option to be used when saving the PDF file in a Teamcenter environment.
                    This can be set to Create New, Overwrite Existing PDF, or Append to Existing PDF. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAction
        (
            NXOpen::PrintPDFBuilder::ActionOption action /** action */ 
        );
        /**Returns  the dataset name to be used when Creating a New PDF document in a Teamcenter
                    environment.  The dataset name will be used if Create New, Overwrite 
                    Existing PDF, or Append to Existing PDF are selected as the Action. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXString DatasetName
        (
        );
        /**Sets  the dataset name to be used when Creating a New PDF document in a Teamcenter
                    environment.  The dataset name will be used if Create New, Overwrite 
                    Existing PDF, or Append to Existing PDF are selected as the Action. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDatasetName
        (
            const NXString & datasetName /** datasetname */ 
        );
        /**Sets  the dataset name to be used when Creating a New PDF document in a Teamcenter
                    environment.  The dataset name will be used if Create New, Overwrite 
                    Existing PDF, or Append to Existing PDF are selected as the Action. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        void SetDatasetName
        (
            const char * datasetName /** datasetname */ 
        );
        /** The Assign button will assign an appropriate name to the Dataset field if 
                    Create New is chosen as the Action. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void Assign
        (
        );
        /**Returns  the color option to be used when creating the PDF document.  If the color option
                    is set to Custom Palette or Colors By Width then the PDF document will be created
                    with the user defined color attributes belonging to the CDF object. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::Color Colors
        (
        );
        /**Sets  the color option to be used when creating the PDF document.  If the color option
                    is set to Custom Palette or Colors By Width then the PDF document will be created
                    with the user defined color attributes belonging to the CDF object. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetColors
        (
            NXOpen::PrintPDFBuilder::Color colors /** colors */ 
        );
        /** Initialize the Color Palette.  This allows the user to change the attributes of
                    any color.  These changed colors will be used if Custom Palette or Colors By Width
                    is selected as the color option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void DefinePalette
        (
        );
        /**Returns  the width option.  If the width option is set to Single Width, Custom Three Widths, 
                    or Custom Palette then the PDF document will be created with the user defined width
                    attributes belonging to the WidthDefinition object. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::Width Widths
        (
        );
        /**Sets  the width option.  If the width option is set to Single Width, Custom Three Widths, 
                    or Custom Palette then the PDF document will be created with the user defined width
                    attributes belonging to the WidthDefinition object. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetWidths
        (
            NXOpen::PrintPDFBuilder::Width widths /** widths */ 
        );
        /** Initialize the Width dialog.  This allows the user to change the attributes of Single
                    Width, Custom Three Widths, or Custom Palette.  These changed width values will be used
                    depending on the width option selected. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void DefineWidths
        (
        );
        /**Returns  the size of the PDF document.  If the size is set to Scale, then the PDF will 
                    use the user-defined Scale Factor.  If the size is set to dimension, then the PDF
                    will use the user-defined X and Y dimensions. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::SizeOption Size
        (
        );
        /**Sets  the size of the PDF document.  If the size is set to Scale, then the PDF will 
                    use the user-defined Scale Factor.  If the size is set to dimension, then the PDF
                    will use the user-defined X and Y dimensions. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSize
        (
            NXOpen::PrintPDFBuilder::SizeOption size /** size */ 
        );
        /**Returns  the scale factor to be used when creating a PDF document.  This value ranges from
                    0.00 to 1.00 and will only be used if the Size option is set to Scale. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: double Scale
        (
        );
        /**Sets  the scale factor to be used when creating a PDF document.  This value ranges from
                    0.00 to 1.00 and will only be used if the Size option is set to Scale. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetScale
        (
            double scale /** scale */ 
        );
        /**Returns  the units of the X and Y dimensions to be used when Dimension has been selected 
                    from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::UnitsOption Units
        (
        );
        /**Sets  the units of the X and Y dimensions to be used when Dimension has been selected 
                    from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUnits
        (
            NXOpen::PrintPDFBuilder::UnitsOption units /** units */ 
        );
        /**Returns  the x dimension to be used when Dimension has been selected from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: double XDimension
        (
        );
        /**Sets  the x dimension to be used when Dimension has been selected from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetXDimension
        (
            double xDimension /** xdimension */ 
        );
        /**Returns  the y dimension to be used when Dimension has been selected from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: double YDimension
        (
        );
        /**Sets  the y dimension to be used when Dimension has been selected from the Size option. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetYDimension
        (
            double yDimension /** ydimension */ 
        );
        /**Returns  the Append option.  If Append is set to false, a new PDF document will be created
                    and will overwrite an existing PDF document.  If Append is set to true, the selected
                    sheets will be appended to the existing PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool Append
        (
        );
        /**Sets  the Append option.  If Append is set to false, a new PDF document will be created
                    and will overwrite an existing PDF document.  If Append is set to true, the selected
                    sheets will be appended to the existing PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAppend
        (
            bool append /** append */ 
        );
        /**Returns  the Add Watermark option.  If Add Watermark is set to false, no Watermark will be added
                    to the PDF document.  If Add Watermark is set to true, the user defined watermark text
                    will be added as a watermark to the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool AddWatermark
        (
        );
        /**Sets  the Add Watermark option.  If Add Watermark is set to false, no Watermark will be added
                    to the PDF document.  If Add Watermark is set to true, the user defined watermark text
                    will be added as a watermark to the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAddWatermark
        (
            bool addWatermark /** addwatermark */ 
        );
        /**Returns  the watermark text.  This user-defined text will appear as a watermark to the PDF 
                    document only if Add Watermark is set to true. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Watermark
        (
        );
        /**Sets  the watermark text.  This user-defined text will appear as a watermark to the PDF 
                    document only if Add Watermark is set to true. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetWatermark
        (
            const NXString & watermark /** watermark */ 
        );
        /**Sets  the watermark text.  This user-defined text will appear as a watermark to the PDF 
                    document only if Add Watermark is set to true. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        void SetWatermark
        (
            const char * watermark /** watermark */ 
        );
        /**Returns  the filename to be used upon creation of the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Filename
        (
        );
        /**Sets  the filename to be used upon creation of the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFilename
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the filename to be used upon creation of the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        void SetFilename
        (
            const char * filename /** filename */ 
        );
        /** 
                    Creates and returns a @link NXOpen::CDF NXOpen::CDF@endlink  object representing the Color Palette.
                    This object contains all custom color information to be used when Custom Palette or
                    Colors By Width is selected from the Color option.  
                 @return  CDF object 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CDF * CreateCdf
        (
        );
        /** 
                    Returns a @link NXOpen::CDF NXOpen::CDF@endlink  object representing the Color Palette.
                    This object contains all custom color information to be used when Custom Palette or
                    Colors By Width is selected from the Color option.  
                 @return  CDF object 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CDF * GetCdf
        (
        );
        /** 
                    Creates and returns a @link NXOpen::WidthDefinition NXOpen::WidthDefinition@endlink  object representing 
                    the Width Palette.  This object contains all custom width information to be used 
                    when Single Width, Custom Three Widths, or Custom Palette is selected from the 
                    Width option.  
                 @return  WidthDefinition object 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::WidthDefinition * CreateWidthDefinition
        (
        );
        /** 
                    Returns a @link NXOpen::WidthDefinition NXOpen::WidthDefinition@endlink  object representing the Width Palette.
                    This object contains all custom width information to be used when Single Width, Custom
                    Three Widths, or Custom Palette is selected from the Width option.
                 @return  WidthDefinition object 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::WidthDefinition * GetWidthDefinition
        (
        );
        /**Returns  the Raster Images option.  This option determines whether or not raster images will
                    be exported to the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool RasterImages
        (
        );
        /**Sets  the Raster Images option.  This option determines whether or not raster images will
                    be exported to the PDF document. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetRasterImages
        (
            bool rasterImages /** rasterimages */ 
        );
        /**Returns  the Shaded Geometry as Wireframe option.  If set to true, this option will show 
                    shaded objects as wireframes.  The shaded objects will be represented as shaded 
                    if this option is set to false. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ShadedGeometry
        (
        );
        /**Sets  the Shaded Geometry as Wireframe option.  If set to true, this option will show 
                    shaded objects as wireframes.  The shaded objects will be represented as shaded 
                    if this option is set to false. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetShadedGeometry
        (
            bool shadedGeometry /** shadedgeometry */ 
        );
        /**Returns  the plotting custom symbols in the foreground option.
                    Setting this option on will cause custom symbols to be plotted in the foreground.
                    When this option is off, geometry may overlap custom symbols when plotted. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool CustomSymbolsInForeground
        (
        );
        /**Sets  the plotting custom symbols in the foreground option.
                    Setting this option on will cause custom symbols to be plotted in the foreground.
                    When this option is off, geometry may overlap custom symbols when plotted. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCustomSymbolsInForeground
        (
            bool customSymbolsInForeground /** customsymbolsinforeground */ 
        );
        /**Returns  the resolution of images created for export of shaded views. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::ImageResolutionOption ImageResolution
        (
        );
        /**Sets  the resolution of images created for export of shaded views. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImageResolution
        (
            NXOpen::PrintPDFBuilder::ImageResolutionOption imageResolution /** imageresolution */ 
        );
        /**Returns  the Source builder.  The Source builder contains all data involving the selected sheets. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::PlotSourceBuilder * SourceBuilder
        (
        );
        /**Returns  the output text of the PDF.  This will determine whether the drawing text will
                    be exported as text or as polylines. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::OutputTextOption OutputText
        (
        );
        /**Sets  the output text of the PDF.  This will determine whether the drawing text will
                    be exported as text or as polylines. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputText
        (
            NXOpen::PrintPDFBuilder::OutputTextOption outputText /** outputtext */ 
        );
        /**Returns  the relation to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintPDFBuilder::RelationOption Relation
        (
        );
        /**Sets  the relation to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetRelation
        (
            NXOpen::PrintPDFBuilder::RelationOption relation /** relation */ 
        );
        /**Returns  the dataset type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: NXString DatasetType
        (
        );
        /**Sets  the dataset type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetDatasetType
        (
            const NXString & datasetType /** datasettype */ 
        );
        /**Sets  the dataset type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void SetDatasetType
        (
            const char * datasetType /** datasettype */ 
        );
        /**Returns  the named reference type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: NXString NamedReferenceType
        (
        );
        /**Sets  the named reference type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetNamedReferenceType
        (
            const NXString & namedReferenceType /** namedreferencetype */ 
        );
        /**Sets  the named reference type to be used when exporting a PDF to Teamcenter 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void SetNamedReferenceType
        (
            const char * namedReferenceType /** namedreferencetype */ 
        );
        /**Returns  the PDF dataset delete toggle get set functions 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool DeleteDatasets
        (
        );
        /**Sets  the PDF dataset delete toggle get set functions 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDeleteDatasets
        (
            bool deleteDatasets /** deletedatasets */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
