#ifndef NXOpen_CAE_CORRELNODEMAPFILTERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_CORRELNODEMAPFILTERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CorrelNodeMapFilterBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CorrelBaseSolution.hxx>
#include <NXOpen/CAE_SelectGroupsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CorrelNodeMapFilterBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CaeDOFSet;
    }
    namespace CAE
    {
        class CorrelBaseSolution;
    }
    namespace CAE
    {
        class CorrelTestNode;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class SelectGroupsBuilder;
    }
    class TaggedObject;
    namespace CAE
    {
        class _CorrelNodeMapFilterBuilderBuilder;
        class CorrelNodeMapFilterBuilderImpl;
        /** Represents the correl node map filter builder  <br> To create a new instance of this class, use @link NXOpen::CAE::CorrelNodeMapMethod::CreateFilterBuilder  NXOpen::CAE::CorrelNodeMapMethod::CreateFilterBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CorrelNodeMapFilterBuilder : public NXOpen::Builder
        {
            /** Filter type */
            public: enum Type
            {
                TypeExclude/** exclude */ ,
                TypeInclude/** include */ ,
                TypeReduction/** reduction */ ,
                TypeSpatialReduction/** spatial reduction */ 
            };

            /** Exclude method type */
            public: enum ExcludeMethod
            {
                ExcludeMethodManual/** manual */ ,
                ExcludeMethodNodesWithNoResults/** nodes with no results */ 
            };

            /** Node source type */
            public: enum NodeSource
            {
                NodeSourceReference/** reference */ ,
                NodeSourceWork/** work */ ,
                NodeSourceBoth/** both */ 
            };

            private: CorrelNodeMapFilterBuilderImpl * m_correlnodemapfilterbuilder_impl;
            private: friend class  _CorrelNodeMapFilterBuilderBuilder;
            protected: CorrelNodeMapFilterBuilder();
            public: ~CorrelNodeMapFilterBuilder();
            /**Returns  the filter type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CorrelNodeMapFilterBuilder::Type FilterType
            (
            );
            /**Sets  the filter type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetFilterType
            (
                NXOpen::CAE::CorrelNodeMapFilterBuilder::Type type /** type */ 
            );
            /**Returns  the name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void SetName
            (
                const char * name /** name */ 
            );
            /** Returns the description 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetDescription
            (
            );
            /** Sets the description 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /** Sets the description 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the exclude method 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CorrelNodeMapFilterBuilder::ExcludeMethod ExcludeMethodType
            (
            );
            /**Sets  the exclude method 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetExcludeMethodType
            (
                NXOpen::CAE::CorrelNodeMapFilterBuilder::ExcludeMethod type /** type */ 
            );
            /**Returns  the node source 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CorrelNodeMapFilterBuilder::NodeSource NodeSourceType
            (
            );
            /**Sets  the node source 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetNodeSourceType
            (
                NXOpen::CAE::CorrelNodeMapFilterBuilder::NodeSource type /** type */ 
            );
            /**Returns  the selected groups 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectGroupsBuilder * GroupsSelection
            (
            );
            /**Returns  the node map size limit 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: int NodeMapSizeLimit
            (
            );
            /**Sets  the node map size limit 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetNodeMapSizeLimit
            (
                int nodeMapSizeLimit /** nodemapsizelimit */ 
            );
            /**Returns  the referenced @link NXOpen::CAE::CaeDOFSet NXOpen::CAE::CaeDOFSet@endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::CaeDOFSet * DofSet
            (
            );
            /**Sets  the referenced @link NXOpen::CAE::CaeDOFSet NXOpen::CAE::CaeDOFSet@endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDofSet
            (
                NXOpen::CAE::CaeDOFSet * dofSet /** dofset */ 
            );
            /**Returns  the selected nodes 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::SelectFENodeList * Nodes
            (
            );
            /** Sets the test model nodes 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetTestModelNodes
            (
                const std::vector<NXOpen::CAE::CorrelTestNode *> & testModelNodes /** testmodelnodes */ 
            );
            /** Sets the groups 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetGroups
            (
                const std::vector<NXOpen::TaggedObject *> & groups /** groups */ 
            );
            /** Sets the imported nodes 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetImportedNodes
            (
                NXOpen::CAE::CorrelBaseSolution * baseSol /** basesol */ ,
                const std::vector<int> & importNodeLabels /** importnodelabels */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
