#ifndef NXOpen_PREFERENCES_PARTVISUALIZATIONSCREEN_HXX_INCLUDED
#define NXOpen_PREFERENCES_PARTVISUALIZATIONSCREEN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_PartVisualizationScreen.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class PartVisualizationScreen;
    }
    namespace Preferences
    {
        class PartPreferences;
    }
    namespace Preferences
    {
        class PartVisualizationScreenImpl;
        /** Represents the set of visualization preferences under screen tab applicable to part  <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::PartPreferences  NXOpen::Preferences::PartPreferences @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  PartVisualizationScreen
        {
            /** The view triad location types. */
            public: enum ViewTriadLocation
            {
                ViewTriadLocationBottomLeft/** View triad display on the bottom left of the view */,
                ViewTriadLocationBottomRight/** View triad display on the bottom right of the view */
            };

            private: PartVisualizationScreenImpl * m_partvisualizationscreen_impl;
            private: NXOpen::Preferences::PartPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PartVisualizationScreen(NXOpen::Preferences::PartPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartVisualizationScreen();
            /**Returns  the show view triad flag. Allows to turn on and off the display of view triad. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool TriadVisibility
            (
            );
            /**Sets  the show view triad flag. Allows to turn on and off the display of view triad. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTriadVisibility
            (
                bool triadVisibility /** triadvisibility */ 
            );
            /**Returns  the view triad location 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::PartVisualizationScreen::ViewTriadLocation TriadLocation
            (
            );
            /**Sets  the view triad location 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTriadLocation
            (
                NXOpen::Preferences::PartVisualizationScreen::ViewTriadLocation triadLocation /** triadlocation */ 
            );
            /**Returns   whether the CSYS display in show through mode 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool CsysShowThrough
            (
            );
            /**Sets   whether the CSYS display in show through mode 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCsysShowThrough
            (
                bool showThrough /** showthrough */ 
            );
            /**Returns   whether the CSYS display in fixed size on screen. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool CsysFixedSizeOnScreen
            (
            );
            /**Sets   whether the CSYS display in fixed size on screen. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCsysFixedSizeOnScreen
            (
                bool fixedSizeOnScreen /** fixedsizeonscreen */ 
            );
            /**Returns   whether the Point display in show through mode 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool PointShowThrough
            (
            );
            /**Sets   whether the Point display in show through mode 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPointShowThrough
            (
                bool showThrough /** showthrough */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
