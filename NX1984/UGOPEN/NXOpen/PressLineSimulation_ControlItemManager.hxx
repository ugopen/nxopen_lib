#ifndef NXOpen_PRESSLINESIMULATION_CONTROLITEMMANAGER_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_CONTROLITEMMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_ControlItemManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/PressLineSimulation_AxisControlColumn.hxx>
#include <NXOpen/PressLineSimulation_SignalRecord.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class ControlItemManager;
    }
    class NXObject;
    namespace PressLineSimulation
    {
        class AxisControlColumn;
    }
    namespace PressLineSimulation
    {
        class SignalRecord;
    }
    namespace PressLineSimulation
    {
        class _ControlItemManagerBuilder;
        class ControlItemManagerImpl;
        /** Represents the external control manager in press line simulation. It can be used to get access to the signals, axes, and control units exposed to journamation clients.  <br> Use the @link NXOpen::PressLineSimulation::SimulationSetup NXOpen::PressLineSimulation::SimulationSetup@endlink  class to obtain a ControlItemManager object.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  ControlItemManager : public NXOpen::NXObject
        {
            /** the type of scope in which control items are requested */
            public: enum Scope
            {
                ScopeAll/** all items */,
                ScopeInternal/** only internal items */,
                ScopeExternal/** only external items */
            };

            private: ControlItemManagerImpl * m_controlitemmanager_impl;
            private: friend class  _ControlItemManagerBuilder;
            protected: ControlItemManager();
            public: ~ControlItemManager();
            /** Use this method to find an object of class @link NXOpen::PressLineSimulation::SignalRecord NXOpen::PressLineSimulation::SignalRecord@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::SignalRecord * FindSignalRecordByDisplayName
            (
                const NXString & signalName /** signalname */ 
            );
            /** Use this method to find an object of class @link NXOpen::PressLineSimulation::SignalRecord NXOpen::PressLineSimulation::SignalRecord@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::PressLineSimulation::SignalRecord * FindSignalRecordByDisplayName
            (
                const char * signalName /** signalname */ 
            );
            /** Use this method to find an object of class @link NXOpen::PressLineSimulation::AxisControlColumn NXOpen::PressLineSimulation::AxisControlColumn@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::AxisControlColumn * FindAxisControlColumnByDisplayName
            (
                const NXString & axisName /** axisname */ 
            );
            /** Use this method to find an object of class @link NXOpen::PressLineSimulation::AxisControlColumn NXOpen::PressLineSimulation::AxisControlColumn@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::PressLineSimulation::AxisControlColumn * FindAxisControlColumnByDisplayName
            (
                const char * axisName /** axisname */ 
            );
            /** Use this method to find @link NXOpen::PressLineSimulation::SignalRecord NXOpen::PressLineSimulation::SignalRecord@endlink  objects. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSignals
            (
                NXOpen::PressLineSimulation::ControlItemManager::Scope scope /** scope */ ,
                std::vector<NXOpen::PressLineSimulation::SignalRecord *> & signals /** signals */ 
            );
            /** Use this method to find @link NXOpen::PressLineSimulation::AxisControlColumn NXOpen::PressLineSimulation::AxisControlColumn@endlink  objects. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void GetAxisControlColumns
            (
                NXOpen::PressLineSimulation::ControlItemManager::Scope scope /** scope */ ,
                std::vector<NXOpen::PressLineSimulation::AxisControlColumn *> & axes /** axes */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
