#ifndef NXOpen_TOOLING_DIRECTUNBENDBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIRECTUNBENDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DirectUnbendBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_DirectUnfoldBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DirectUnbendBuilder;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Body;
    class Builder;
    class SelectEdgeList;
    class SelectFaceList;
    namespace Tooling
    {
        class _DirectUnbendBuilderBuilder;
        class DirectUnbendBuilderImpl;
        /**The builder contains all inputs for direct unbend.  <br> To create a new instance of this class, use @link NXOpen::Tooling::DirectUnfoldCollection::CreateDirectUnbendBuilder  NXOpen::Tooling::DirectUnfoldCollection::CreateDirectUnbendBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AlterResult </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        BendAngle1 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendAngle2 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendAngle3 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendAngle4 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendAngle5 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendAngle6 </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        BendDevLength </term> <description> 
         
        0.0 </description> </item> 

        <item><term> 
         
        BendNeutralFactor </term> <description> 
         
        0.4 </description> </item> 

        <item><term> 
         
        BendNumPrebends </term> <description> 
         
        Two </description> </item> 

        <item><term> 
         
        KeepRadFixed </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        OverbendAngle </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DirectUnbendBuilder : public NXOpen::Builder
        {
            /** unbend operations. */
            public: enum Bendtypes
            {
                BendtypesUnbend/** unbend operation */,
                BendtypesRebend/** rebend operation */,
                BendtypesPrebend/** prebend operation */,
                BendtypesOverbend/** overbend operation */
            };

            private: DirectUnbendBuilderImpl * m_directunbendbuilder_impl;
            private: friend class  _DirectUnbendBuilderBuilder;
            protected: DirectUnbendBuilder();
            public: ~DirectUnbendBuilder();
            /**Returns  the work part. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponent * WorkPart
            (
            );
            /**Returns  the selection of bends. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * SelBend
            (
            );
            /**Returns  the reference objects. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectEdgeList * RefObject
            (
            );
            /**Returns  the switch to set if use an alternate result. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AlterResult
            (
            );
            /**Sets  the switch to set if use an alternate result. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAlterResult
            (
                bool alterResult /** alterresult */ 
            );
            /**Returns  the resize radius. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ResizeRadius
            (
            );
            /**Sets  the resize radius. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetResizeRadius
            (
                bool resizeRadius /** resizeradius */ 
            );
            /**Returns  the overbend angle. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double OverbendAngle
            (
            );
            /**Sets  the overbend angle. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOverbendAngle
            (
                double overbendAngle /** overbendangle */ 
            );
            /**Returns  the keep radius fixed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool KeepRadFixed
            (
            );
            /**Sets  the keep radius fixed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetKeepRadFixed
            (
                bool keepRadFixed /** keepradfixed */ 
            );
            /**Returns  the type. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::DirectUnbendBuilder::Bendtypes Type
            (
            );
            /**Sets  the type. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::DirectUnbendBuilder::Bendtypes type /** type */ 
            );
            /**Returns  the base body. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Body * BaseBody
            (
            );
            /**Sets  the base body. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBaseBody
            (
                NXOpen::Body * baseBody /** basebody */ 
            );
            /**Returns  the operation of k factor for a single bend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendNeutralFactor
            (
            );
            /**Sets  the operation of k factor for a single bend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendNeutralFactor
            (
                double kFactor /** kfactor */ 
            );
            /**Returns  the operation to developed length of a bend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendDevLength
            (
            );
            /**Sets  the operation to developed length of a bend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendDevLength
            (
                double devLength /** devlength */ 
            );
            /**Returns  the number of prebends. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::DirectUnfoldBuilder::Bend BendNumPrebends
            (
            );
            /**Sets  the number of prebends. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendNumPrebends
            (
                NXOpen::Tooling::DirectUnfoldBuilder::Bend numBends /** numbends */ 
            );
            /**Returns  the first angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle1
            (
            );
            /**Sets  the first angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle1
            (
                double angle1 /** angle1 */ 
            );
            /**Returns  the second angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle2
            (
            );
            /**Sets  the second angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle2
            (
                double angle2 /** angle2 */ 
            );
            /**Returns  the third angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle3
            (
            );
            /**Sets  the third angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle3
            (
                double angle3 /** angle3 */ 
            );
            /**Returns  the fourth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle4
            (
            );
            /**Sets  the fourth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle4
            (
                double angle4 /** angle4 */ 
            );
            /**Returns  the fifth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle5
            (
            );
            /**Sets  the fifth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle5
            (
                double angle5 /** angle5 */ 
            );
            /**Returns  the sixth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BendAngle6
            (
            );
            /**Sets  the sixth angle of prebend. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBendAngle6
            (
                double angle6 /** angle6 */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
