#ifndef NXOpen_ANNOTATIONS_DIMENSIONWORKFLOWBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DIMENSIONWORKFLOWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DimensionWorkflowBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class DimensionWorkflowBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _DimensionWorkflowBuilderBuilder;
        class DimensionWorkflowBuilderImpl;
        /**
            Represents a Annotations WorkFlowBuilder.
            This class queries and sets general dimension attributes while creating or editing a dimension.
            
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  DimensionWorkflowBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: DimensionWorkflowBuilderImpl * m_dimensionworkflowbuilder_impl;
            private: friend class  _DimensionWorkflowBuilderBuilder;
            protected: DimensionWorkflowBuilder();
            public: ~DimensionWorkflowBuilder();
            /**Returns  the directed dimension.
                        This specifies whether to create directed dimension or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableDirectedDimension
            (
            );
            /**Sets  the directed dimension.
                        This specifies whether to create directed dimension or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetEnableDirectedDimension
            (
                bool directedDimension /** directeddimension */ 
            );
            /**Returns  the hover scene dialog delay time 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: int HoverSceneDialogDelay
            (
            );
            /**Sets  the hover scene dialog delay time 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetHoverSceneDialogDelay
            (
                int hoverSceneDialogDelay /** hoverscenedialogdelay */ 
            );
            /**Returns  the automatic creation of Intersection Symbol 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool AutomaticCreationIntersectionSymbol
            (
            );
            /**Sets  the automatic creation of Intersection Symbol 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetAutomaticCreationIntersectionSymbol
            (
                bool automaticCreationIntersectionSymbol /** automaticcreationintersectionsymbol */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
