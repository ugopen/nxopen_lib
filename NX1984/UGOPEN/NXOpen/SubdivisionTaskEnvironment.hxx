#ifndef NXOpen_SUBDIVISIONTASKENVIRONMENT_HXX_INCLUDED
#define NXOpen_SUBDIVISIONTASKENVIRONMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SubdivisionTaskEnvironment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SubdivisionTaskEnvironment;
    class Session;
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionBody;
        }
    }
    class SubdivisionTaskEnvironmentImpl;
    /**
        Represents the subdivision task environment associated with a session.
     <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Created in NX9.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SubdivisionTaskEnvironment
    {
        private: SubdivisionTaskEnvironmentImpl * m_subdivisiontaskenvironment_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit SubdivisionTaskEnvironment(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~SubdivisionTaskEnvironment();
        /** Starts subdivision task environment. This method should
                be called before starting to use subdivision body feature tools.
                This method should not be called if already in a subdivision task environment.
            
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
        public: void Enter
        (
        );
        /** Ends subdivision task environment.
            
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
        public: void Exit
        (
        );
        /**Returns  the active subdivision body feature. 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Features::Subdivision::SubdivisionBody * ActiveSubdivisionBodyFeature
        (
        );
        /** Sets the feature to be edited. 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
        public: void SetFeatureToEdit
        (
            NXOpen::Features::Subdivision::SubdivisionBody * subdivisionBodyFeature /** subdivisionbodyfeature */ 
        );
        /** Marks the task to be cancelled such that during @link SubdivisionTaskEnvironment::Exit SubdivisionTaskEnvironment::Exit@endlink 
                task is undone and all the changes are discarded.
            
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
        public: void SetCancelled
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
