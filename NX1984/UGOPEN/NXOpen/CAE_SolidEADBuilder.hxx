#ifndef NXOpen_CAE_SOLIDEADBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SOLIDEADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SolidEADBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SolidEADBuilder;
    }
    class Builder;
    namespace CAE
    {
        class PhysicalPropertyTable;
    }
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class _SolidEADBuilderBuilder;
        class SolidEADBuilderImpl;
        /** This class provides Solid Associated Data Support  <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateSolidEadBuilder  NXOpen::CAE::NodeElementManager::CreateSolidEadBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SolidEADBuilder : public NXOpen::Builder
        {
            /** indicates to apply or clear the stiffness property upon commit */
            public: enum State
            {
                StateApply/** apply the property */,
                StateClear/** clear the property */,
                StateIgnore/** ignore the property */
            };

            private: SolidEADBuilderImpl * m_solideadbuilder_impl;
            private: friend class  _SolidEADBuilderBuilder;
            protected: SolidEADBuilder();
            public: ~SolidEADBuilder();
            /**Returns  the select element operator selects elements 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectElementsBuilder * Elements
            (
            );
            /**Returns  the physical property table state state drives the action upon commit 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SolidEADBuilder::State PhysicalPropertyTableState
            (
            );
            /**Sets  the physical property table state state drives the action upon commit 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPhysicalPropertyTableState
            (
                NXOpen::CAE::SolidEADBuilder::State physicalPropertyTableState /** physicalpropertytablestate */ 
            );
            /**Returns  the physical property table of the solid element 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PhysicalPropertyTable * PhysicalPropertyTable
            (
            );
            /**Sets  the physical property table of the solid element 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPhysicalPropertyTable
            (
                NXOpen::CAE::PhysicalPropertyTable * physicalPropertyTable /** physicalpropertytable */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
