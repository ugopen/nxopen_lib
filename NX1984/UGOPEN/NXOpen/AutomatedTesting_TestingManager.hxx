#ifndef NXOpen_AUTOMATEDTESTING_TESTINGMANAGER_HXX_INCLUDED
#define NXOpen_AUTOMATEDTESTING_TESTINGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AutomatedTesting_TestingManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Validate_CheckerNode.hxx>
#include <NXOpen/Validate_Logger.hxx>
#include <NXOpen/libnxopencpp_automatedtesting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AutomatedTesting
    {
        class TestingManager;
    }
    class Session;
    namespace AutomatedTesting
    {
        class TestCaseManager;
    }
    namespace Validate
    {
        class CheckerNode;
    }
    namespace Validate
    {
        class Logger;
    }
    namespace AutomatedTesting
    {
        class TestingManagerImpl;

        /// \cond NX_NO_DOC 
        /**Represents a NX @link NXOpen::AutomatedTesting::TestingManager NXOpen::AutomatedTesting::TestingManager@endlink .
             <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_AUTOMATEDTESTINGEXPORT  TestingManager
        {
            private: TestingManagerImpl * m_testingmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit TestingManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~TestingManager();

            /// \cond NX_NO_DOC 
            /** Runs checkers and compares work log with master logs.
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: void RunCheckers
            (
                bool needCompare /** needcompare */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Appends a checker node.
                     @return  checker node 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: NXOpen::Validate::CheckerNode * AppendCheckerNode
            (
                const NXString & className /** checker class name */
            );
            /** Appends a checker node.
                     @return  checker node 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            NXOpen::Validate::CheckerNode * AppendCheckerNode
            (
                const char * className /** checker class name */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Adds checker nodes.
                    
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link AutomatedTesting::TestingManager::AddCheckerNodes AutomatedTesting::TestingManager::AddCheckerNodes @endlink and @link AutomatedTesting::TestingManager::SetAddCheckerNodes AutomatedTesting::TestingManager::SetAddCheckerNodes @endlink  with CheckerNode as result instead. <br>  

             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use AutomatedTesting::TestingManager::AddCheckerNodes AutomatedTesting::TestingManager::AddCheckerNodes @endlink and @link AutomatedTesting::TestingManager::SetAddCheckerNodes AutomatedTesting::TestingManager::SetAddCheckerNodes @endlink  with CheckerNode as result instead.") void AppendCheckerNodes
            (
                std::vector<NXString> & classNames /** checkers' class name array */,
                std::vector<NXOpen::Validate::CheckerNode *> & checkerNode /** checker node array */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Adds checker nodes.
                     @return  checker node array 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: std::vector<NXOpen::Validate::CheckerNode *> AddCheckerNodes
            (
                std::vector<NXString> & classNames /** checkers' class name array */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Removes a checker node.
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: void RemoveCheckerNode
            (
                NXOpen::Validate::CheckerNode * checkerNode /** checkernode */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Clears checker nodes 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio"), ug_checkmate ("UG Check Mate") */
            public: void ClearCheckerNodes
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get Test Case logger.
                     @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Validate::Logger * GetLogger
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Modify the original file specification. For API calls that take a file specification, the file specification is replaced
                        with a call to this method.  If the file does not exists at the original location or the automated testing default location
                        then the original file specification is returned by this method.
                     @return  Modified file specification 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ModifyOriginalPath
            (
                const NXString & originalFileSpecification /** Original file specification */
            );
            /** Modify the original file specification. For API calls that take a file specification, the file specification is replaced
                        with a call to this method.  If the file does not exists at the original location or the automated testing default location
                        then the original file specification is returned by this method.
                     @return  Modified file specification 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            NXString ModifyOriginalPath
            (
                const char * originalFileSpecification /** Original file specification */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Runs User Interface Macro file.
                    
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio") */
            public: void ExecuteMacro
            (
                const NXString & macroFile /** macro file name */
            );
            /** Runs User Interface Macro file.
                    
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_auto_test_studio (" NX Automated Testing Studio") */
            void ExecuteMacro
            (
                const char * macroFile /** macro file name */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Run Dialog Performance test for a dialog. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void RunDialogLaunchPerformanceTest
            (
                const NXString & fileName /** Name of the file that includes some UI class names.*/,
                int runCount /** Cycle number that this API is executed .*/
            );
            /** Run Dialog Performance test for a dialog. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            void RunDialogLaunchPerformanceTest
            (
                const char * fileName /** Name of the file that includes some UI class names.*/,
                int runCount /** Cycle number that this API is executed .*/
            );

            /// \endcond 


            /** Returns the @link NXOpen::AutomatedTesting::TestCaseManager NXOpen::AutomatedTesting::TestCaseManager@endlink  belonging to this AutomatedTesting TestingManager 
             <br>  Created in NX1953.0.0.  <br>  
            */
            public: NXOpen::AutomatedTesting::TestCaseManager *TestCaseManager();
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
