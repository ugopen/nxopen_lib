#ifndef NXOpen_LINEDESIGNER_LINEDESIGNERDEBUGSESSION_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_LINEDESIGNERDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_LineDesignerDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class LineDesignerDebugSession;
    }
    class Session;
    class BasePart;
    class TaggedObject;
    namespace LineDesigner
    {
        class LineDesignerDebugSessionImpl;

        /// \cond NX_NO_DOC 
        /** Represents a class that is used for LineDesigner testing.  This class shouldn't be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX12.0.2.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  LineDesignerDebugSession
        {
            private: LineDesignerDebugSessionImpl * m_linedesignerdebugsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit LineDesignerDebugSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static LineDesignerDebugSession* theLineDesignerDebugSession;
            /** Returns the LineDesignerDebugSession object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static LineDesignerDebugSession* GetLineDesignerDebugSession(NXOpen::Session *owner);
            public: ~LineDesignerDebugSession();

            /// \cond NX_NO_DOC 
            /** Validate plant Structure 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidatePlantStructure
            (
                NXOpen::BasePart * displayPart /** displaypart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Validate component position 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateComponentPosition
            (
                NXOpen::BasePart * displayPart /** displaypart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate rigid group data for single as well as compound kinematics data
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateRigidGroups
            (
                const std::vector<NXOpen::TaggedObject *> & compsToValidateTag /** compstovalidatetag */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Validate joint data  for single as well as compound kinematics data
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateJointData
            (
                const std::vector<NXOpen::TaggedObject *> & compsToValidateTag /** compstovalidatetag */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate pose data for single as well as compound kinematics data 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidatePoseData
            (
                const std::vector<NXOpen::TaggedObject *> & compsToValidateTag /** compstovalidatetag */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate Joint Jog data for single as well as compound kinematics data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateJointJogData
            (
                const std::vector<NXOpen::TaggedObject *> & compsToValidate /** compstovalidate */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate end item strcture  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateEndItemStructure
            (
                NXOpen::BasePart * displayPart /** displaypart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate reference sets in strcture  
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateRefSetStructure
            (
                NXOpen::BasePart * displayPart /** displaypart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate connection in strcture  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ValidateConnections
            (
                const std::vector<NXOpen::TaggedObject *> & compsToValidateTag /** compstovalidatetag */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
