#ifndef NXOpen_MECHATRONICS_PARAMETERSTOCKBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_PARAMETERSTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ParameterStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ParameterStockBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SignalAdapter;
    }
    class NXObject;
    class Unit;
    namespace Mechatronics
    {
        class _ParameterStockBuilderBuilder;
        class ParameterStockBuilderImpl;
        /**
                Represents a @link NXOpen::Mechatronics::ParameterStockBuilder NXOpen::Mechatronics::ParameterStockBuilder@endlink  builder. 
             <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ParameterStockBuilder : public NXOpen::Builder
        {
            /** the data type for parameter value. */
            public: enum DataType
            {
                DataTypeBool/** Bool */,
                DataTypeInt/** Int */,
                DataTypeReal/** Real */,
                DataTypeString/** String */,
                DataTypeList/** Enumeration */
            };

            /** the assignment for runtime property. */
            public: enum Assignment
            {
                AssignmentNone/** None */,
                AssignmentByOrder/** By order */,
                AssignmentRandom/** Random */
            };

            private: ParameterStockBuilderImpl * m_parameterstockbuilder_impl;
            private: friend class  _ParameterStockBuilderBuilder;
            protected: ParameterStockBuilder();
            public: ~ParameterStockBuilder();
            /**Returns  the application name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ApplicationName
            (
            );
            /**Sets  the application name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetApplicationName
            (
                const NXString & applicationName /** applicationname */ 
            );
            /**Sets  the application name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetApplicationName
            (
                const char * applicationName /** applicationname */ 
            );
            /** Adds Bool parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddBoolParameter
            (
                const NXString & name /** name */ ,
                bool value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Bool parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void AddBoolParameter
            (
                const char * name /** name */ ,
                bool value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Int parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddIntParameter
            (
                const NXString & name /** name */ ,
                int value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Int parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void AddIntParameter
            (
                const char * name /** name */ ,
                int value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Real parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddRealParameter
            (
                const NXString & name /** name */ ,
                double value /** value */ ,
                NXOpen::Unit * unit /** unit */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Real parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void AddRealParameter
            (
                const char * name /** name */ ,
                double value /** value */ ,
                NXOpen::Unit * unit /** unit */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds String parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddStringParameter
            (
                const NXString & name /** name */ ,
                const NXString & value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds String parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void AddStringParameter
            (
                const char * name /** name */ ,
                const char * value /** value */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds List parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddListParameter
            (
                const NXString & name /** name */ ,
                std::vector<NXString> & values /** values */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment eAssignment /** eassignment */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds List parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void AddListParameter
            (
                const char * name /** name */ ,
                std::vector<NXString> & values /** values */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment eAssignment /** eassignment */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Adds Signal parameter. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddSignalParameter
            (
                NXOpen::Mechatronics::SignalAdapter * adapter /** adapter */ ,
                NXOpen::NXObject * signal /** signal */ ,
                bool predefined /** predefined */ ,
                bool readOnly /** read only */ 
            );
            /** Gets parameter names and types. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetParameterNamesAndTypes
            (
                std::vector<NXOpen::Mechatronics::ParameterStockBuilder::DataType> & types /** types */ 
            );
            /** Gets bool parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetBoolParameter
            (
                const NXString & name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets bool parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            bool GetBoolParameter
            (
                const char * name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets int parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: int GetIntParameter
            (
                const NXString & name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets int parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            int GetIntParameter
            (
                const char * name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets real parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double GetRealParameter
            (
                const NXString & name /** name */ ,
                NXOpen::Unit ** unit /** unit */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets real parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            double GetRealParameter
            (
                const char * name /** name */ ,
                NXOpen::Unit ** unit /** unit */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets string parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetStringParameter
            (
                const NXString & name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets string parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            NXString GetStringParameter
            (
                const char * name /** name */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets list parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetListParameter
            (
                const NXString & name /** name */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment* eAssignment /** eassignment */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Gets list parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            std::vector<NXString> GetListParameter
            (
                const char * name /** name */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment* eAssignment /** eassignment */ ,
                bool* predefined /** predefined */ ,
                bool* readOnly /** read only */ 
            );
            /** Edits bool parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditBoolParameter
            (
                const NXString & name /** name */ ,
                bool value /** value */ 
            );
            /** Edits bool parameter value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void EditBoolParameter
            (
                const char * name /** name */ ,
                bool value /** value */ 
            );
            /** Edits Int parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditIntParameter
            (
                const NXString & name /** name */ ,
                int value /** value */ 
            );
            /** Edits Int parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void EditIntParameter
            (
                const char * name /** name */ ,
                int value /** value */ 
            );
            /** Edits Real parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditRealParameter
            (
                const NXString & name /** name */ ,
                double value /** value */ ,
                NXOpen::Unit * unit /** unit */ 
            );
            /** Edits Real parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void EditRealParameter
            (
                const char * name /** name */ ,
                double value /** value */ ,
                NXOpen::Unit * unit /** unit */ 
            );
            /** Edits String parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditStringParameter
            (
                const NXString & name /** name */ ,
                const NXString & value /** value */ 
            );
            /** Edits String parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void EditStringParameter
            (
                const char * name /** name */ ,
                const char * value /** value */ 
            );
            /** Edits List parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditListParameter
            (
                const NXString & name /** name */ ,
                std::vector<NXString> & values /** values */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment eAssignment /** eassignment */ 
            );
            /** Edits List parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void EditListParameter
            (
                const char * name /** name */ ,
                std::vector<NXString> & values /** values */ ,
                NXOpen::Mechatronics::ParameterStockBuilder::Assignment eAssignment /** eassignment */ 
            );
            /** Delete parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void DeleteParameter
            (
                const NXString & name /** name */ 
            );
            /** Delete parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void DeleteParameter
            (
                const char * name /** name */ 
            );
            /** Delete parameter with additional flag to indicate whether it is signal or not. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void DeleteParameterV2
            (
                const NXString & name /** name */ ,
                bool isSignal /** issignal */ 
            );
            /** Delete parameter with additional flag to indicate whether it is signal or not. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void DeleteParameterV2
            (
                const char * name /** name */ ,
                bool isSignal /** issignal */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
