#ifndef NXOpen_DIAGRAMMING_FORMATTEDSTRINGBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_FORMATTEDSTRINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_FormattedStringBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_BaseSubObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class FormattedStringBuilder;
    }
    namespace Diagramming
    {
        class BaseSubObjectBuilder;
    }
    class NXObject;
    namespace Diagramming
    {
        class _FormattedStringBuilderBuilder;
        class FormattedStringBuilderImpl;
        /**
            Represents a FormattedStringBuilder.
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  FormattedStringBuilder : public NXOpen::Diagramming::BaseSubObjectBuilder
        {
            private: FormattedStringBuilderImpl * m_formattedstringbuilder_impl;
            private: friend class  _FormattedStringBuilderBuilder;
            protected: FormattedStringBuilder();
            public: ~FormattedStringBuilder();
            /**Returns  the string. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString String
            (
            );
            /**Returns  the format. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Format
            (
            );
            /** Sets the format and related referenced attributes to this builder.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFormatValue
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const NXString & format /** format */ 
            );
            /** Sets the format and related referenced attributes to this builder.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetFormatValue
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const char * format /** format */ 
            );
            /** Sets the format and related referenced attributes to this builder in managed mode.
                    
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetFormatValue
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXOpen::NXObject *> & parentTags /** The owner parents of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const NXString & format /** format */ 
            );
            /** Sets the format and related referenced attributes to this builder in managed mode.
                    
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SetFormatValue
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXOpen::NXObject *> & parentTags /** The owner parents of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const char * format /** format */ 
            );
            /** Appends the format and related referenced attributes to this builder.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void AppendFormat
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const NXString & appendFormat /** appendformat */ 
            );
            /** Appends the format and related referenced attributes to this builder.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void AppendFormat
            (
                const std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */,
                const std::vector<NXString> & attrTitles /** The titles of the referenced attributes */,
                const char * appendFormat /** appendformat */ 
            );
            /** Clears the format and related referenced attributes of this builder.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void ClearFormat
            (
            );
            /** Gets the referenced attributes.
                     @return  The titles of the referenced attributes 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetReferencedAttributes
            (
                std::vector<NXOpen::NXObject *> & objTags /** The owners of the referenced attributes */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
