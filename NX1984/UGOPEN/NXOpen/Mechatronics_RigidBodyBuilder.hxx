#ifndef NXOpen_MECHATRONICS_RIGIDBODYBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_RIGIDBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_RigidBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class RigidBodyBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Direction;
    class Expression;
    namespace Mechatronics
    {
        class SelectTagFormObject;
    }
    namespace Mechatronics
    {
        class SelectTagTableObject;
    }
    class NXColor;
    class NXObject;
    class Point;
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _RigidBodyBuilderBuilder;
        class RigidBodyBuilderImpl;
        /**
            Represents a @link NXOpen::Mechatronics::RigidBodyBuilder NXOpen::Mechatronics::RigidBodyBuilder@endlink .
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::RigidBodyCollection::CreateRigidBodyBuilder  NXOpen::Mechatronics::RigidBodyCollection::CreateRigidBodyBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  RigidBodyBuilder : public NXOpen::Builder
        {
            /** the mass property option. */
            public: enum MassPropertiesOption
            {
                MassPropertiesOptionAutomatic/** automatic */,
                MassPropertiesOptionUserDefined/** user defined */
            };

            /** the color options. */
            public: enum ColorOptions
            {
                ColorOptionsSpecifyColor/** Assigns a color to the rigid body */,
                ColorOptionsNoColor/** Assigns no color to the rigid body */
            };

            private: RigidBodyBuilderImpl * m_rigidbodybuilder_impl;
            private: friend class  _RigidBodyBuilderBuilder;
            protected: RigidBodyBuilder();
            public: ~RigidBodyBuilder();
            /**Returns  the geometries.  This can be a @link NXOpen::Assemblies::ComponentAssembly NXOpen::Assemblies::ComponentAssembly@endlink , @link NXOpen::Point NXOpen::Point@endlink , bodies and curve. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * Geometry
            (
            );
            /** Sets the geometry
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetGeometry
            (
                const std::vector<NXOpen::NXObject *> & geometries /** Input geometries*/
            );
            /**Returns  the tagform. This is a @link NXOpen::Mechatronics::TagFormObject NXOpen::Mechatronics::TagFormObject@endlink  object. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectTagFormObject * TagForm
            (
            );
            /**Returns  the tagtable. This is a @link NXOpen::Mechatronics::TagTableObject NXOpen::Mechatronics::TagTableObject@endlink  object. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectTagTableObject * TagTable
            (
            );
            /**Returns  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the linear velocity magnitude. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * LinearVelocityMagnitude
            (
            );
            /**Returns  the angular velocity direction. It is only used when angular velocity is not zero. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Direction * AngularVelocityDirection
            (
            );
            /**Sets  the angular velocity direction. It is only used when angular velocity is not zero. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAngularVelocityDirection
            (
                NXOpen::Direction * dir /** dir */ 
            );
            /**Returns  the angular velocity magnitude. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * AngularVelocityMagnitude
            (
            );
            /**Returns  the auto-calculate mass property flag which is used to indicate whether all mass properties are calculated by system. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::RigidBodyBuilder::MassPropertiesOption MassProperty
            (
            );
            /**Sets  the auto-calculate mass property flag which is used to indicate whether all mass properties are calculated by system. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMassProperty
            (
                NXOpen::Mechatronics::RigidBodyBuilder::MassPropertiesOption massProperty /** mass property */ 
            );
            /**Returns  the mass center point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * MassCenterPoint
            (
            );
            /**Sets  the mass center point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMassCenterPoint
            (
                NXOpen::Point * center /** center */ 
            );
            /**Returns  the mass. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * Mass
            (
            );
            /**Returns  the inertia Ixx. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIxx
            (
            );
            /**Returns  the inertia Iyy. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIyy
            (
            );
            /**Returns  the inertia Izz. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIzz
            (
            );
            /**Returns  the inertia Ixy. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIxy
            (
            );
            /**Returns  the inertia Ixz. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIxz
            (
            );
            /**Returns  the inertia Iyz. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InertiaIyz
            (
            );
            /**Returns  the orientation. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::CoordinateSystem * Orientation
            (
            );
            /**Sets  the orientation. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetOrientation
            (
                NXOpen::CoordinateSystem * orientation /** orientation */ 
            );
            /**Returns  the linear velocity. It is only used when linear velocity is not zero. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Direction * LinearVelocityDirection
            (
            );
            /**Sets  the linear velocity. It is only used when linear velocity is not zero. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetLinearVelocityDirection
            (
                NXOpen::Direction * dir /** dir */ 
            );
            /**Returns  the color option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::RigidBodyBuilder::ColorOptions ColorOption
            (
            );
            /**Sets  the color option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetColorOption
            (
                NXOpen::Mechatronics::RigidBodyBuilder::ColorOptions colorOption /** coloroption */ 
            );
            /**Returns  the color. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
