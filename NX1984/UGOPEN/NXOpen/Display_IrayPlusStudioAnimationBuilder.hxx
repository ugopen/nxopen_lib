#ifndef NXOpen_DISPLAY_IRAYPLUSSTUDIOANIMATIONBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_IRAYPLUSSTUDIOANIMATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_IrayPlusStudioAnimationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DateBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class IrayPlusStudioAnimationBuilder;
    }
    class Builder;
    class DateBuilder;
    namespace Display
    {
        class _IrayPlusStudioAnimationBuilderBuilder;
        class IrayPlusStudioAnimationBuilderImpl;
        /**
            Represents a @link NXOpen::Display::IrayPlusStudioAnimationBuilder NXOpen::Display::IrayPlusStudioAnimationBuilder@endlink .
            Ray Traced Studio Save Animation gives control to create high end rendered animations authored
            in NX Animation Designer.
             <br> This class is restricted to being called from a program running during an
            Interactive NX session.  If run from a non-interactive session it will
            return NULL. <br> 
             <br> To create a new instance of this class, use @link NXOpen::ViewCollection::CreateIrayPlusStudioAnimationBuilder  NXOpen::ViewCollection::CreateIrayPlusStudioAnimationBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  IrayPlusStudioAnimationBuilder : public NXOpen::Builder
        {
            /**the time range used to determine the length of the animation */
            public: enum AnimationTimeRangeType
            {
                AnimationTimeRangeTypeEntireTimeline/**the entire timeline of the animation */,
                AnimationTimeRangeTypeUserDefined/**the user defined range of time of the animation */
            };

            /**the quality of rendering for each frame in the animation */
            public: enum AnimationRenderQualityType
            {
                AnimationRenderQualityTypePhotoreal/**the Ray Traced Studio Photoreal rendering quality */,
                AnimationRenderQualityTypeQualityInteractive/**the Ray Traced Studio Quality Interactive rendering quality*/,
                AnimationRenderQualityTypeFastInteractive/**the Ray Traced Studio Fast Interactive rendering quality */
            };

            /**the completion parameter for each frame in the animation */
            public: enum AnimationRenderDurationType
            {
                AnimationRenderDurationTypeIterationsperFrame/**the number of iterations specified to the renderer to reach for each animation frame */,
                AnimationRenderDurationTypeTimeperFrame/**the amount of time specified to the renderer to reach for each animation frame */,
                AnimationRenderDurationTypeAutoComplete/**the auto Complete criteria uses Iray+ based progressive completion criteria to determine render completion */,
                AnimationRenderDurationTypeTimeLimitedAutoComplete/**the auto Complete criteria uses Iray+ based progressive completion criteria to determine render completion and a designated time limit */
            };

            /**the animation processing type of the animation */
            public: enum AnimationProcessingType
            {
                AnimationProcessingTypeInteractive/**the animation render is done via Ray Traced Studio in the current NX session*/,
                AnimationProcessingTypeOffline/**the animation render is submitted as a batch job to a remote server and rendered offline*/
            };

            /**the automatic completion option for rendering each animation frame */
            public: enum AnimationAutoCompletionType
            {
                AnimationAutoCompletionTypeComplex/**the automatic completion criteria for a complex scene with numerous emissive materials, reflective materials, and shadows */,
                AnimationAutoCompletionTypeNormal/**the automatic completion criteria for a normal scene with a balanced number of emissive materials, reflective materials, and shadows*/,
                AnimationAutoCompletionTypeSimple/**the automatic completion criteria for a simple scene with a limited number of emissive materials, reflective materials, and shadows*/,
                AnimationAutoCompletionTypeNone/**the option to apply no automatic completion criteria*/,
                AnimationAutoCompletionTypeCustom/**the automatic completion criteria to specify a custom threshold for automatically detecting the completion of an image */
            };

            /**the resolution of the animation */
            public: enum AnimationResolutionType
            {
                AnimationResolutionTypeRenderWindow/**the resolution derived from render window */,
                AnimationResolutionTypeUserDefined/**a User Defined resolution */
            };

            /**the type of output for the animation */
            public: enum AnimationFileOutputType
            {
                AnimationFileOutputTypeMicrosoftAVI/**a Microsoft AVI type movie file*/,
                AnimationFileOutputTypeSeriesofPNG/**a series of PNG type images */,
                AnimationFileOutputTypeSeriesofJPG/**a series of JPG type images */,
                AnimationFileOutputTypeSeriesofTIF/**a series of TIF type images */
            };

            /**the quality of rendering for each frame in the animation */
            public: enum FramesPerSecondRateType
            {
                FramesPerSecondRateTypeFps15/** 15 frames per second */,
                FramesPerSecondRateTypeFps24/** 24 frames per second */,
                FramesPerSecondRateTypeFps30/** 30 frames per second */,
                FramesPerSecondRateTypeFps60/** 60 frames per second */,
                FramesPerSecondRateTypeFps120/** 120 frames per second */,
                FramesPerSecondRateTypeUserDefined/**a user defined frame rate */
            };

            private: IrayPlusStudioAnimationBuilderImpl * m_irayplusstudioanimationbuilder_impl;
            private: friend class  _IrayPlusStudioAnimationBuilderBuilder;
            protected: IrayPlusStudioAnimationBuilder();
            public: ~IrayPlusStudioAnimationBuilder();
            /**Returns the selected Animation Designer solution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString AnimationSolution
            (
            );
            /**Sets the selected Animation Designer solution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationSolution
            (
                const NXString & animationSolution /** animationsolution */ 
            );
            /**Sets the selected Animation Designer solution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetAnimationSolution
            (
                const char * animationSolution /** animationsolution */ 
            );
            /**Returns the Time Range for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationTimeRangeType TimeRange
            (
            );
            /**Sets the Time Range for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetTimeRange
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationTimeRangeType timeRange /** timerange */ 
            );
            /**Returns the user-defined start time of the animation. The start time must be greater than 0.0
                    and also start earlier than the user-defined end time.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double AnimationCustomStartTime
            (
            );
            /**Sets the user-defined start time of the animation. The start time must be greater than 0.0
                    and also start earlier than the user-defined end time.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationCustomStartTime
            (
                double animationCustomStartTime /** animationcustomstarttime */ 
            );
            /**Returns the user-defined end time of the animation. The end time must be greater than 0.0 and
                    also start at least 0.2 seconds after the user-defined start time 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double AnimationCustomEndTime
            (
            );
            /**Sets the user-defined end time of the animation. The end time must be greater than 0.0 and
                    also start at least 0.2 seconds after the user-defined start time 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationCustomEndTime
            (
                double animationCustomEndTime /** animationcustomendtime */ 
            );
            /**Returns the level of rendering quality for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationRenderQualityType RenderQuality
            (
            );
            /**Sets the level of rendering quality for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRenderQuality
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationRenderQualityType renderQuality /** renderquality */ 
            );
            /**Returns the use of caustics during the animation render, only available when the render quality is set to Photoreal 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool Caustics
            (
            );
            /**Sets the use of caustics during the animation render, only available when the render quality is set to Photoreal 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetCaustics
            (
                bool caustics /** caustics */ 
            );
            /**Returns the frames per second rate for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::FramesPerSecondRateType FrameRate
            (
            );
            /**Sets the frames per second rate for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetFrameRate
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::FramesPerSecondRateType frameRate /** framerate */ 
            );
            /**Returns the custom frames per second rate for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int CustomFrameRate
            (
            );
            /**Sets the custom frames per second rate for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetCustomFrameRate
            (
                int customFrameRate /** customframerate */ 
            );
            /**Returns the render duration of each frame in the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationRenderDurationType RenderDuration
            (
            );
            /**Sets the render duration of each frame in the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRenderDuration
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationRenderDurationType renderDuration /** renderduration */ 
            );
            /**Returns the time limit specified to the renderer to resolve the animation frame 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DateBuilder * AnimationFrameTimeLimit
            (
            );
            /**Returns the number limit of iterations specified to the renderer to resolve the animation frame. The number
                    limit of iterations must be greater than or equal to 20 iterations.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int AnimationFrameNumOfIterations
            (
            );
            /**Sets the number limit of iterations specified to the renderer to resolve the animation frame. The number
                    limit of iterations must be greater than or equal to 20 iterations.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationFrameNumOfIterations
            (
                int animationFrameNumOfIterations /** animationframenumofiterations */ 
            );
            /**Returns the automatic completion type for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationAutoCompletionType AutoCompletionType
            (
            );
            /**Sets the automatic completion type for the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAutoCompletionType
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationAutoCompletionType autoCompletionType /** autocompletiontype */ 
            );
            /**Returns the automatic completion quality factor of the animation frame. This control
                    defines a quality factor relative to the scene. The quality factor has a linear
                    scaling effect. For example, a quality factor set to 2.0 will roughly take twice as
                    long to render a scene with an assigned quality factor of 1.0.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double AutoCompletionCustomQualityFactor
            (
            );
            /**Sets the automatic completion quality factor of the animation frame. This control
                    defines a quality factor relative to the scene. The quality factor has a linear
                    scaling effect. For example, a quality factor set to 2.0 will roughly take twice as
                    long to render a scene with an assigned quality factor of 1.0.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAutoCompletionCustomQualityFactor
            (
                double autoCompletionCustomQualityFactor /** autocompletioncustomqualityfactor */ 
            );
            /**Returns the automatic completion pixel ratio of the animation frame. This controls the number of pixels as a 
                    "ratio of the total pixel count that must converge to the Quality Completion Factor."
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double AutoCompletionCustomPixelRatio
            (
            );
            /**Sets the automatic completion pixel ratio of the animation frame. This controls the number of pixels as a 
                    "ratio of the total pixel count that must converge to the Quality Completion Factor."
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAutoCompletionCustomPixelRatio
            (
                double autoCompletionCustomPixelRatio /** autocompletioncustompixelratio */ 
            );
            /**Returns the use of remote rendering for the animation, only available during Interactive animation processing
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool RemoteRender
            (
            );
            /**Sets the use of remote rendering for the animation, only available during Interactive animation processing
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetRemoteRender
            (
                bool remoteRender /** remoterender */ 
            );
            /**Returns the use of the Ray Traced Studio Denoiser during animation render 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool Denoiser
            (
            );
            /**Sets the use of the Ray Traced Studio Denoiser during animation render 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDenoiser
            (
                bool denoiser /** denoiser */ 
            );
            /**Returns the animation resolution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationResolutionType AnimationResolution
            (
            );
            /**Sets the animation resolution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationResolution
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationResolutionType animationResolution /** animationresolution */ 
            );
            /**Returns  the lock to the ratio for a custom animation resolution ratio 
             <br>  @deprecated Deprecated in NX1980.0.0.  All animation AVIs or images directly use camera aspect ratio now. Lock aspect ratio is no longer supported. <br>  

             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  All animation AVIs or images directly use camera aspect ratio now. Lock aspect ratio is no longer supported.") bool LockAspectRatio
            (
            );
            /**Sets  the lock to the ratio for a custom animation resolution ratio 
             <br>  @deprecated Deprecated in NX1980.0.0.  All animation AVIs or images directly use camera aspect ratio now. Lock aspect ratio is no longer supported. <br>  

             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  All animation AVIs or images directly use camera aspect ratio now. Lock aspect ratio is no longer supported.") void SetLockAspectRatio
            (
                bool lockAspectRatio /** lockaspectratio */ 
            );
            /**Returns the custom width of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int AnimationCustomWidth
            (
            );
            /**Sets the custom width of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationCustomWidth
            (
                int animationCustomWidth /** animationcustomwidth */ 
            );
            /**Returns the custom height of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int AnimationCustomHeight
            (
            );
            /**Sets the custom height of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationCustomHeight
            (
                int animationCustomHeight /** animationcustomheight */ 
            );
            /**Returns the output type of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationFileOutputType AnimationFileOutput
            (
            );
            /**Sets the output type of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAnimationFileOutput
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationFileOutputType animationFileOutput /** animationfileoutput */ 
            );
            /**Returns the location where to save the animation and the file name, only available when the Output type is Microsoft AVI movie file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FileInput
            (
            );
            /**Sets the location where to save the animation and the file name, only available when the Output type is Microsoft AVI movie file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetFileInput
            (
                const NXString & fileInput /** fileinput */ 
            );
            /**Sets the location where to save the animation and the file name, only available when the Output type is Microsoft AVI movie file 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetFileInput
            (
                const char * fileInput /** fileinput */ 
            );
            /**Returns the directory location where to save the animation output, only available when a series of images is the Output type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FolderInput
            (
            );
            /**Sets the directory location where to save the animation output, only available when a series of images is the Output type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetFolderInput
            (
                const NXString & folderOutput /** folderoutput */ 
            );
            /**Sets the directory location where to save the animation output, only available when a series of images is the Output type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetFolderInput
            (
                const char * folderOutput /** folderoutput */ 
            );
            /**Returns the processing type of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationProcessingType ProcessingType
            (
            );
            /**Sets the processing type of the animation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetProcessingType
            (
                NXOpen::Display::IrayPlusStudioAnimationBuilder::AnimationProcessingType processingType /** processingtype */ 
            );
            /**Returns  the scheduled animation render job name, only available for animations processed offline 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ScheduledTaskName
            (
            );
            /**Sets  the scheduled animation render job name, only available for animations processed offline 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetScheduledTaskName
            (
                const NXString & scheduledTaskName /** scheduledtaskname */ 
            );
            /**Sets  the scheduled animation render job name, only available for animations processed offline 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetScheduledTaskName
            (
                const char * scheduledTaskName /** scheduledtaskname */ 
            );
            /**Returns  the priority of the animation on an offline renderer, only available for animations processed offline.
                    The range of priority is between 1 and 100, with 1 being the highest priority and 100 being the lowest priority.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int ScheduledTaskPriority
            (
            );
            /**Sets  the priority of the animation on an offline renderer, only available for animations processed offline.
                    The range of priority is between 1 and 100, with 1 being the highest priority and 100 being the lowest priority.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetScheduledTaskPriority
            (
                int scheduledTaskPriority /** scheduledtaskpriority */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
