#ifndef NXOpen_CAE_POSTSCENARIOMANAGER_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenario.hxx>
#include <NXOpen/CAE_PostScenarioBuilder.hxx>
#include <NXOpen/CAE_PostScenarioComplexDataOnNodesOfElements.hxx>
#include <NXOpen/CAE_PostScenarioDoubleDataOnNodesOfElements.hxx>
#include <NXOpen/CAE_PostScenarioParameters.hxx>
#include <NXOpen/CAE_PostScenarioVariableDomain.hxx>
#include <NXOpen/CAE_PostScenarioVariant.hxx>
#include <NXOpen/CAE_PostScenarioVariantList.hxx>
#include <NXOpen/CAE_PostScenarioVisualizationCustomizationCollection.hxx>
#include <NXOpen/CAE_ViewportSynchronizationOptions.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioManager;
    }
    class BasePart;
    namespace CAE
    {
        class DataSourceCollection;
    }
    namespace CAE
    {
        class PostScenario;
    }
    namespace CAE
    {
        class PostScenarioAvailableDescriptorCollection;
    }
    namespace CAE
    {
        class PostScenarioBuilder;
    }
    namespace CAE
    {
        class PostScenarioComplexDataOnNodesOfElements;
    }
    namespace CAE
    {
        class PostScenarioDescriptorCollection;
    }
    namespace CAE
    {
        class PostScenarioDoubleDataOnNodesOfElements;
    }
    namespace CAE
    {
        class PostScenarioParameters;
    }
    namespace CAE
    {
        class PostScenarioVariableDomain;
    }
    namespace CAE
    {
        class PostScenarioVariant;
    }
    namespace CAE
    {
        class PostScenarioVariantList;
    }
    namespace CAE
    {
        class PostScenarioVisualizationCustomizationCollection;
    }
    namespace CAE
    {
        class ViewportSynchronizationOptions;
    }
    namespace CAE
    {
        class PostScenarioManagerImpl;
        /** Manages the creation of a @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink .  <br> To obtain an instance of this class use 
                @link NXOpen::CAE::PostScenarioManager NXOpen::CAE::PostScenarioManager@endlink .  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioManager
        {
            private: PostScenarioManagerImpl * m_postscenariomanager_impl;
            private: NXOpen::BasePart* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioManager(NXOpen::BasePart *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PostScenarioManager();
            /** Create a new @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  that wraps a scalar value. These objects need to be Dispose'd of once it is no longer needed. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioVariant * NewVariant
            (
            );
            /** Create a new @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  that wraps an array value. These objects need to be Dispose'd of once it is no longer needed. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioVariantList * NewVariantList
            (
            );
            /** Create a new @link NXOpen::CAE::PostScenarioDoubleDataOnNodesOfElements NXOpen::CAE::PostScenarioDoubleDataOnNodesOfElements@endlink  that wraps an array value. These objects need to be Dispose'd of once it is no longer needed. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioDoubleDataOnNodesOfElements * NewDoubleDataOnNodesOfElements
            (
            );
            /** Create a new @link NXOpen::CAE::PostScenarioComplexDataOnNodesOfElements NXOpen::CAE::PostScenarioComplexDataOnNodesOfElements@endlink  that wraps an array value. These objects need to be Dispose'd of once it is no longer needed. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioComplexDataOnNodesOfElements * NewComplexDataOnNodesOfElements
            (
            );
            /**  @brief Creates a new @link CAE::PostScenarioVariableDomain CAE::PostScenarioVariableDomain@endlink  object that describes the quantity
                        of data you are working with in the context of a user-defined scenario descriptor. 

             
                        See @link CAE::PostScenarioDescriptorBuilder CAE::PostScenarioDescriptorBuilder@endlink  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioVariableDomain * NewVariableDomain
            (
            );
            /** Creates a transient object @link  NXOpen::CAE::PostScenarioParameters   NXOpen::CAE::PostScenarioParameters @endlink  that 
                        contains the settings required to create a post scenario. 
                        The object should be destroyed after the post scenario is created. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioParameters * NewPostScenarioParameters
            (
            );
            /** Checks if the data source set in @link  NXOpen::CAE::PostScenarioParameters   NXOpen::CAE::PostScenarioParameters @endlink  is valid. 
             <br>  @deprecated Deprecated in NX1980.0.0.  No alternative provided for this method. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  No alternative provided for this method.") bool CheckValidDataSource
            (
                NXOpen::CAE::PostScenarioParameters * scenarioParameters /** scenarioparameters */ 
            );
            /** Creates a transient object @link  NXOpen::CAE::PostScenarioBuilder   NXOpen::CAE::PostScenarioBuilder @endlink  that is 
                        responsible for creating a post scenario object. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioBuilder * CreatePostScenarioBuilderFromParameters
            (
                NXOpen::CAE::PostScenarioParameters * scenarioParameters /** scenarioparameters */ 
            );
            /** Creates a builder for the Scenario retrieved from a Visualized Scenario from a certain viewport.
                        This method fails if the specified viewport does not represent a Visualized Scenario.
                     
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::PostScenarioManager::CreatePostScenarioBuilderFromScenario NXOpen::CAE::PostScenarioManager::CreatePostScenarioBuilderFromScenario@endlink  instead. Scenarios can be retrieved via @link NXOpen::CAE::PostScenarioManager::GetScenariosInViewport NXOpen::CAE::PostScenarioManager::GetScenariosInViewport@endlink . <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::CAE::PostScenarioManager::CreatePostScenarioBuilderFromScenario instead. Scenarios can be retrieved via NXOpen::CAE::PostScenarioManager::GetScenariosInViewport.") NXOpen::CAE::PostScenarioBuilder * CreatePostScenarioBuilderFromViewport
            (
                int viewportIndex /** viewportindex */ 
            );
            /** Creates a builder for the Scenario retrieved from a Visualized Scenario.
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioBuilder * CreatePostScenarioBuilderFromScenario
            (
                NXOpen::CAE::PostScenario * scenario /** scenario */ 
            );
            /** Retrieves the scenarios plotted in viewportIndex. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenario *> GetScenariosInViewport
            (
                int viewportIndex /** viewportindex */ 
            );
            /** Creates viewport synchronization options. These options synchronize selections 
                    and probes across the selected viewports.
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ViewportSynchronizationOptions * CreateViewportSynchronizationOptions
            (
            );
            /** Sets the viewport synchronization options. These options synchronize selections 
                    and probes across the selected viewports.
                    Passing NULL will disable all synchronizations.
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetViewportSynchronizationOptions
            (
                NXOpen::CAE::ViewportSynchronizationOptions * options /** options */ 
            );
            /** Removes a visualized @link NXOpen::CAE::PostScenario NXOpen::CAE::PostScenario@endlink  from the viewport it is displayed in.
                        The corresponding plots will be removed from the display.
                        If there are other scenarios visualized in that viewport, their corresponding plots will continue to be visible.
                        If there are no more scenarios displayed in that viewport, the viewport is returned to the model view. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveScenario
            (
                NXOpen::CAE::PostScenario * scenario /** scenario */ 
            );

            /// \cond NX_NO_DOC 
            /** Make demo scenarios available in part
                      
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateDemoScenarioDescriptors
            (
            );

            /// \endcond 
            /** 
                        Returns customization data for all visualizations (which support customization) in the specified viewPortId.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioVisualizationCustomizationCollection * GetVisualizationCustomizationCollection
            (
                int viewPortId /** viewportid */ 
            );


            /** Contains a @link NXOpen::CAE::PostScenarioDescriptorCollection NXOpen::CAE::PostScenarioDescriptorCollection@endlink . 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::PostScenarioDescriptorCollection *PostScenarioDescriptors();
            /** Contains a @link NXOpen::CAE::PostScenarioAvailableDescriptorCollection NXOpen::CAE::PostScenarioAvailableDescriptorCollection@endlink . 
                        This member enumerates scenario descriptors available for use with the Data Sources selected in @link NXOpen::CAE::PostScenarioManager::DataSources NXOpen::CAE::PostScenarioManager::DataSources@endlink .
                      
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::PostScenarioAvailableDescriptorCollection *AvailablePostScenarioDescriptors();
            /** Contains a @link NXOpen::CAE::DataSourceCollection NXOpen::CAE::DataSourceCollection@endlink .
                     The @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink s added to this collection will be used to populate the @link NXOpen::CAE::PostScenarioManager::AvailablePostScenarioDescriptors NXOpen::CAE::PostScenarioManager::AvailablePostScenarioDescriptors@endlink .
                      These data sources will also be the ones available to any @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink  in the current session. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DataSourceCollection *DataSources();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
