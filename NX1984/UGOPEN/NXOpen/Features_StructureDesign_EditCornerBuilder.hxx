#ifndef NXOpen_FEATURES_STRUCTUREDESIGN_EDITCORNERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STRUCTUREDESIGN_EDITCORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StructureDesign_EditCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_StructureDesign_FeatureSpreadsheetBuilder.hxx>
#include <NXOpen/Features_StructureDesign_MemberBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace StructureDesign
        {
            class EditCornerBuilder;
        }
    }
    class Body;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace StructureDesign
        {
            class Corner;
        }
    }
    namespace Features
    {
        namespace StructureDesign
        {
            class CornerNodeBuilder;
        }
    }
    namespace Features
    {
        namespace StructureDesign
        {
            class FeatureSpreadsheetBuilder;
        }
    }
    namespace Features
    {
        namespace StructureDesign
        {
            class SelectCorner;
        }
    }
    namespace Features
    {
        namespace StructureDesign
        {
            class _EditCornerBuilderBuilder;
            class EditCornerBuilderImpl;
            /**
                Represents a @link Features::StructureDesign::EditCornerBuilder Features::StructureDesign::EditCornerBuilder@endlink  which is used 
                edit the corners of multiple members in the Structure Design application. Only corners at one
                connected end of the member can be modified. 
                 <br> To create a new instance of this class, use @link NXOpen::Features::StructureDesignCollection::CreateStructureDesignEditCornerBuilder  NXOpen::Features::StructureDesignCollection::CreateStructureDesignEditCornerBuilder @endlink  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  EditCornerBuilder : public NXOpen::Features::FeatureBuilder
            {
                private: EditCornerBuilderImpl * m_editcornerbuilder_impl;
                private: friend class  _EditCornerBuilderBuilder;
                protected: EditCornerBuilder();
                public: ~EditCornerBuilder();
                /**Returns  the select corner 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::SelectCorner * Corner
                (
                );
                /** Create the corners for the input body and adjacent members. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void CreateCorners
                (
                    NXOpen::Body * body /** Member's body in which to create a corner for, and also for adjacent corners. */,
                    const NXOpen::Point3d & endPoint /** Point at end of input body indicated which end to edit the corner. */,
                    std::vector<NXOpen::Features::StructureDesign::CornerNodeBuilder *> & corners /** The corners being processed. */
                );
                /** Output the corner nodes being processed. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetCorners
                (
                    std::vector<NXOpen::Features::StructureDesign::CornerNodeBuilder *> & corners /** The corners being processed. */
                );
                /** Remove the corner nodes from processing. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void RemoveCorners
                (
                    const std::vector<NXOpen::Features::StructureDesign::CornerNodeBuilder *> & corners /** The corners being processed. */
                );
                /** Set the corner object 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetCornerObject
                (
                    NXOpen::Features::StructureDesign::Corner * corner /** The corner being processed. */
                );
                /** Set the corner type for the corner node
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetEndCorner
                (
                    int iNodeIndex /** inodeindex */ ,
                    NXOpen::Features::StructureDesign::MemberBuilder::EndCornerTypes endCorner /** endcorner */ 
                );
                /** Set the member index for the corner node
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetMemberIndex
                (
                    int iNodeIndex /** inodeindex */ ,
                    int iMemberIndex /** imemberindex */ 
                );
                /**Returns  the stock data used to define the stock information of the member.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::FeatureSpreadsheetBuilder * StockData
                (
                );
                /** Update the stock data with the member
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void UpdateStockData
                (
                    bool bOnlyUpdateSize /** bonlyupdatesize */ 
                );
                /** Update the stock data for memeber 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void UpdateCopeMemberStockData
                (
                    int iMemberIndex /** imemberindex */ ,
                    bool bOnlyUpdateSize /** bonlyupdatesize */ 
                );
                /** Update all the cope stock data of the conner
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void UpdateAllCopeStockData
                (
                );
                /** Sets the flag to indicate the cope stock data is initial values
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetInitialStockData
                (
                    bool bInitial /** binitial */ 
                );
                /** Gets the stock data used for current selected member.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::FeatureSpreadsheetBuilder * GetStockDataByMember
                (
                    int iMemberIndex /** imemberindex */ 
                );
                /** Sets current stock data
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetCurrentStockData
                (
                    NXOpen::Features::StructureDesign::FeatureSpreadsheetBuilder * stockData /** stockdata */ 
                );
                /** Resets the stock data
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void ResetStockData
                (
                );
                /** Sets cutback
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetCutback
                (
                    int iMemberIndex /** imemberindex */ ,
                    const NXString & usCutback /** uscutback */ 
                );
                /** Sets cutback
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                void SetCutback
                (
                    int iMemberIndex /** imemberindex */ ,
                    const char * usCutback /** uscutback */ 
                );
                /** Sets cope member index
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetCopeMemberIndex
                (
                    int iMemberIndex /** imemberindex */ ,
                    int iRefCopeMemberIndex /** irefcopememberindex */ 
                );
                /** Sets member end parameters changed
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetParamtersChanged
                (
                    bool bChanged /** bchanged */ 
                );
                /** Clears reference member faces
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void ClearReferenceMemberFaceInformation
                (
                    int iMemberIndex /** imemberindex */ 
                );
                /** Clears referenced member information
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void ClearReferencedMemberInformation
                (
                    int iMemberIndex /** imemberindex */ 
                );
                /** Add reference member face information
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void AddReferenceMemberFaceInformation
                (
                    int iMemberIndex /** imemberindex */ ,
                    int iRefMemberIndex /** irefmemberindex */ ,
                    const NXOpen::Point3d & facePoint /** facepoint */ ,
                    const NXOpen::Vector3d & faceNormal /** facenormal */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
