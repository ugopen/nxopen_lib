#ifndef NXOpen_ROUTING_FITTINGOVERSTOCKBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_FITTINGOVERSTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_FittingOverstockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_PathStockBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class FittingOverstockBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    class Plane;
    namespace Routing
    {
        class PathStockBuilder;
    }
    class SelectFaceList;
    namespace Routing
    {
        class _FittingOverstockBuilderBuilder;
        class FittingOverstockBuilderImpl;
        /** Builder for creating or editing @link NXOpen::Routing::FittingOverstock NXOpen::Routing::FittingOverstock@endlink  objects.  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateFittingOverstockBuilder  NXOpen::Routing::RouteManager::CreateFittingOverstockBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FaceTrimMethod </term> <description> 
         
        TrimPlane </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  FittingOverstockBuilder : public NXOpen::Builder
        {
            /** Overstock application method. This defines the way in which to apply
                        the overstock on faces of the routing parts.*/
            public: enum Types
            {
                TypesEntirePart/** Entire Part */,
                TypesEntireFace/** Entire Face */,
                TypesPartialFace/** Partial Face */
            };

            /** Trimming option. This defines the way the selected faces are to be trimmed
                        for @link NXOpen::Routing::FittingOverstockBuilder::TypesPartialFace NXOpen::Routing::FittingOverstockBuilder::TypesPartialFace@endlink 
                        method. */
            public: enum TrimMethod
            {
                TrimMethodTrimPlane/** Single Trim Plane */,
                TrimMethodBetweenPlanes/** Double Trim Planes */
            };

            private: FittingOverstockBuilderImpl * m_fittingoverstockbuilder_impl;
            private: friend class  _FittingOverstockBuilderBuilder;
            protected: FittingOverstockBuilder();
            public: ~FittingOverstockBuilder();
            /**Returns  the qualifed routing parts to apply overstock to. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Assemblies::SelectComponentList * RoutingParts
            (
            );
            /**Returns  the faces to apply overstock to.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::SelectFaceList * Faces
            (
            );
            /**Returns  the stock settings for overstock assignment. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::PathStockBuilder * OverstockSettings
            (
            );
            /**Sets  the stock settings for overstock assignment. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetOverstockSettings
            (
                NXOpen::Routing::PathStockBuilder * stockBuilder /** stockbuilder */ 
            );
            /**Returns  the @link NXOpen::Routing::FittingOverstockBuilder::TrimMethod NXOpen::Routing::FittingOverstockBuilder::TrimMethod@endlink 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::FittingOverstockBuilder::TrimMethod FaceTrimMethod
            (
            );
            /**Sets  the @link NXOpen::Routing::FittingOverstockBuilder::TrimMethod NXOpen::Routing::FittingOverstockBuilder::TrimMethod@endlink 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetFaceTrimMethod
            (
                NXOpen::Routing::FittingOverstockBuilder::TrimMethod faceTrimMethod /** facetrimmethod */ 
            );
            /**Returns  the first trimming plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Plane * FirstPlane
            (
            );
            /**Sets  the first trimming plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetFirstPlane
            (
                NXOpen::Plane * firstPlane /** firstplane */ 
            );
            /**Returns  the second trimming plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Plane * SecondPlane
            (
            );
            /**Sets  the second trimming plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetSecondPlane
            (
                NXOpen::Plane * secondPlane /** secondplane */ 
            );
            /**Returns  the type
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::FittingOverstockBuilder::Types Type
            (
            );
            /**Sets  the type
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetType
            (
                NXOpen::Routing::FittingOverstockBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
