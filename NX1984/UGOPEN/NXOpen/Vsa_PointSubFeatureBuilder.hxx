#ifndef NXOpen_VSA_POINTSUBFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_VSA_POINTSUBFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_PointSubFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class PointSubFeatureBuilder;
    }
    class Builder;
    class Point;
    namespace Vsa
    {
        class _PointSubFeatureBuilderBuilder;
        class PointSubFeatureBuilderImpl;
        /**
            
             <br> To create a new instance of this class, use @link NXOpen::Vsa::VsaManager::CreatePointSubFeatureBuilder  NXOpen::Vsa::VsaManager::CreatePointSubFeatureBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DoubleNormalI </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleNormalJ </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleNormalK </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleParameterU </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleParameterV </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoublePointX </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoublePointY </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoublePointZ </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  PointSubFeatureBuilder : public NXOpen::Builder
        {
            /**
                    
                    */
            public: enum APIEnumPointType
            {
                APIEnumPointTypeOnSurface/** on surface */ ,
                APIEnumPointTypeOnAnchor/** on anchor */ ,
                APIEnumPointTypeOnCenter/** on center */ ,
                APIEnumPointTypeOnTop/** on top */ 
            };

            private: PointSubFeatureBuilderImpl * m_pointsubfeaturebuilder_impl;
            private: friend class  _PointSubFeatureBuilderBuilder;
            protected: PointSubFeatureBuilder();
            public: ~PointSubFeatureBuilder();
            /**Returns  the property represents  point subfeature name. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringName
            (
            );
            /**Sets  the property represents  point subfeature name. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStringName
            (
                const NXString & stringName /** stringname */ 
            );
            /**Sets  the property represents  point subfeature name. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStringName
            (
                const char * stringName /** stringname */ 
            );
            /**Returns  the property represents  point subfeature discription. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringDescription
            (
            );
            /**Sets  the property represents  point subfeature discription. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStringDescription
            (
                const NXString & stringDescription /** stringdescription */ 
            );
            /**Sets  the property represents  point subfeature discription. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStringDescription
            (
                const char * stringDescription /** stringdescription */ 
            );
            /**Returns  the property represents  X value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoublePointX
            (
            );
            /**Sets  the property represents  X value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoublePointX
            (
                double doublePointX /** doublepointx */ 
            );
            /**Returns  the property represents  Y value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoublePointY
            (
            );
            /**Sets  the property represents  Y value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoublePointY
            (
                double doublePointY /** doublepointy */ 
            );
            /**Returns  the property represents  Z value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoublePointZ
            (
            );
            /**Sets  the property represents  Z value of anchore. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoublePointZ
            (
                double doublePointZ /** doublepointz */ 
            );
            /**Returns  the property represents  U parameter. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleParameterU
            (
            );
            /**Sets  the property represents  U parameter. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleParameterU
            (
                double doubleParameterU /** doubleparameteru */ 
            );
            /**Returns  the property represents  V parameter. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleParameterV
            (
            );
            /**Sets  the property represents  V parameter. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleParameterV
            (
                double doubleParameterV /** doubleparameterv */ 
            );
            /**Returns  the property represents  X value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleNormalI
            (
            );
            /**Sets  the property represents  X value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleNormalI
            (
                double doubleNormalI /** doublenormali */ 
            );
            /**Returns  the property represents  Y value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleNormalJ
            (
            );
            /**Sets  the property represents  Y value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleNormalJ
            (
                double doubleNormalJ /** doublenormalj */ 
            );
            /**Returns  the property represents  Z value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleNormalK
            (
            );
            /**Sets  the property represents  Z value of normal. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleNormalK
            (
                double doubleNormalK /** doublenormalk */ 
            );
            /**Returns  the property represents  point subfeature type. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::PointSubFeatureBuilder::APIEnumPointType PointSubFeatureType
            (
            );
            /**Sets  the property represents  point subfeature type. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetPointSubFeatureType
            (
                NXOpen::Vsa::PointSubFeatureBuilder::APIEnumPointType pointSubFeatureType /** pointsubfeaturetype */ 
            );
            /**Returns  the property represents associated point tag. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * AssociatedPointTag
            (
            );
            /**Sets  the property represents associated point tag. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetAssociatedPointTag
            (
                NXOpen::Point * associatedPointTag /** associatedpointtag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
