#ifndef NXOpen_AME_PLCLOGICBLOCKPARAMETER_HXX_INCLUDED
#define NXOpen_AME_PLCLOGICBLOCKPARAMETER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PlcLogicBlockParameter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_IPlcEditableParameter.hxx>
#include <NXOpen/AME_IPlcParameter.hxx>
#include <NXOpen/AME_MultiValueObjectsPort.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PlcLogicBlockParameter;
    }
    namespace AME
    {
        class IPlcEditableParameter;
    }
    namespace AME
    {
        class MultiValueObjectsPort;
    }
    namespace AME
    {
        class _PlcLogicBlockParameterBuilder;
        class PlcLogicBlockParameterImpl;
        /** Represents an PlcLogicBlockParameter  <br> This class cannot be instantiated directly.  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PlcLogicBlockParameter : public NXOpen::AME::MultiValueObjectsPort, public virtual NXOpen::AME::IPlcEditableParameter
        {
            private: PlcLogicBlockParameterImpl * m_plclogicblockparameter_impl;
            private: friend class  _PlcLogicBlockParameterBuilder;
            protected: PlcLogicBlockParameter();
            public: ~PlcLogicBlockParameter();
            /** Set parameter name
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: virtual void SetName
            (
                const NXString & name /** name */ 
            );
            /** Set parameter name
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            virtual void SetName
            (
                const char * name /** name */ 
            );
            /** Set data type
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: virtual void DataType
            (
                const NXString & dataType /** datatype */ 
            );
            /** Set data type
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            virtual void DataType
            (
                const char * dataType /** datatype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
