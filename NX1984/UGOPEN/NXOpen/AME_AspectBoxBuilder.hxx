#ifndef NXOpen_AME_ASPECTBOXBUILDER_HXX_INCLUDED
#define NXOpen_AME_ASPECTBOXBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_AspectBoxBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AspectDetailsBuilder.hxx>
#include <NXOpen/AME_PageObject.hxx>
#include <NXOpen/Diagramming_SheetElement.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class AspectBoxBuilder;
    }
    namespace AME
    {
        class AspectDetailsBuilder;
    }
    namespace AME
    {
        class PageObject;
    }
    class Builder;
    namespace Diagramming
    {
        class SheetElement;
    }
    namespace AME
    {
        class _AspectBoxBuilderBuilder;
        class AspectBoxBuilderImpl;
        /** Represents builder for creating aspect box  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateAspectBoxBuilder  NXOpen::AME::AMEManager::CreateAspectBoxBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  AspectBoxBuilder : public NXOpen::Builder
        {
            /** Represents Aspect Box Variant type */
            public: enum Variant
            {
                VariantVertical/** vertical */ ,
                VariantHorizontal/** horizontal */ 
            };

            private: AspectBoxBuilderImpl * m_aspectboxbuilder_impl;
            private: friend class  _AspectBoxBuilderBuilder;
            protected: AspectBoxBuilder();
            public: ~AspectBoxBuilder();
            /**Returns  the aspect box variant 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::AME::AspectBoxBuilder::Variant AspectBoxVariant
            (
            );
            /**Sets  the aspect box variant 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetAspectBoxVariant
            (
                NXOpen::AME::AspectBoxBuilder::Variant aspectBoxVariant /** aspectboxvariant */ 
            );
            /**Returns  the aspect detail 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AspectDetailsBuilder * AspectDetails
            (
            );
            /** Set the location of aspect box
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetLocation
            (
                const NXOpen::Point2d & cursorLocation /** cursorlocation */ 
            );
            /** Method to create the Sheet Element for Aspect Box 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Diagramming::SheetElement * CreateAspectBox
            (
                NXOpen::AME::PageObject * pageObject /** pageobject */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
