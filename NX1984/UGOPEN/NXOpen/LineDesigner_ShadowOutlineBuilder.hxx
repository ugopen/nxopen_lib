#ifndef NXOpen_LINEDESIGNER_SHADOWOUTLINEBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_SHADOWOUTLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_ShadowOutlineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class ShadowOutlineBuilder;
    }
    class Builder;
    namespace LineDesigner
    {
        class _ShadowOutlineBuilderBuilder;
        class ShadowOutlineBuilderImpl;
        /**  <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateShadowOutlineCreatorBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateShadowOutlineCreatorBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Assemblylevelenum </term> <description> 
         
        Outlineforcompletecomponent </description> </item> 

        <item><term> 
         
        Referencesettoggle </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX1847.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  ShadowOutlineBuilder : public NXOpen::Builder
        {
            /** This enum used to represent assembly level types*/
            public: enum AssemblyLevelsType
            {
                AssemblyLevelsTypeOutlineforcompletecomponent/** outlineforcompletecomponent */ ,
                AssemblyLevelsTypeOutlineforindividualcomponent/** outlineforindividualcomponent */ 
            };

            private: ShadowOutlineBuilderImpl * m_shadowoutlinebuilder_impl;
            private: friend class  _ShadowOutlineBuilderBuilder;
            protected: ShadowOutlineBuilder();
            public: ~ShadowOutlineBuilder();
            /**Returns  the assemblylevelenum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineDesigner::ShadowOutlineBuilder::AssemblyLevelsType Assemblylevelenum
            (
            );
            /**Sets  the assemblylevelenum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetAssemblylevelenum
            (
                NXOpen::LineDesigner::ShadowOutlineBuilder::AssemblyLevelsType assemblylevelenum /** assemblylevelenum */ 
            );
            /**Returns  the referencesettoggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool Referencesettoggle
            (
            );
            /**Sets  the referencesettoggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetReferencesettoggle
            (
                bool referencesettoggle /** referencesettoggle */ 
            );
            /** Returns the selected reference set 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetSelectedReferenceSet
            (
            );
            /** Sets the selected reference set 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetSelectedReferenceSet
            (
                const std::vector<NXString> & selectedReferenceSet /** selectedreferenceset */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
