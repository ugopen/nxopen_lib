#ifndef NXOpen_CAE_MODELCHECK_IELEMENTQUALITYCHECKER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_IELEMENTQUALITYCHECKER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_IElementQualityChecker.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FEElement.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class IElementQualityChecker;
        }
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
        }
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class IElementQualityCheckerImpl;
            /**  @brief  Represents the iterface of solver element quality checker which calculate all kinds of element quality check results.  

              
             <br>  Created in NX1965.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  IElementQualityChecker : public NXOpen::TransientObject
            {
                private: IElementQualityCheckerImpl * m_ielementqualitychecker_impl;
                /// \cond NX_NO_DOC 
                public: explicit IElementQualityChecker(void *ptr);
                /// \endcond 
                /** Gets minimum, maximum and average element edge length. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void GetElementSize
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ ,
                    double* pMinSize /** pminsize */ ,
                    double* pMazSize /** pmazsize */ ,
                    double* pAvgSize /** pavgsize */ 
                );
                /** Gets aspect ratio value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetAspectRatio
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets cohesive element ratio value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetCohesiveElementRatio
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets skew value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetSkew
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets taper value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetTaper
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets warp factor value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetWarp
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets minimum and maximum interior angle value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void GetInteriorAngle
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ ,
                    double* pMinAngle /** pminangle */ ,
                    double* pMaxAngle /** pmaxangle */ 
                );
                /** Gets jacobian value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void GetJacobian
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ ,
                    double* pJacobianZero /** pjacobianzero */ ,
                    double* pJacobianRatio /** pjacobianratio */ ,
                    bool* pJacobianSign /** pjacobiansign */ 
                );
                /** Gets collapse value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetCollapse
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets twist value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetTwist
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets edge point length ratio and edge point included angle. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void GetEdgePointLengthRatioAndAngle
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ ,
                    double* pRatioValue /** pratiovalue */ ,
                    double* pAngleValue /** panglevalue */ 
                );
                /** Gets volume value for 3D element. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetVolume
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets element offset length ratio for beam and bar element. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetOffsetLengthRatio
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets consist distance value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetConsistDistance
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets axis radius value. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetAxisRadius
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets parallel deviation angle. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetParallelDeviation
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Gets shape factor. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetShapeFactor
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Calculates ratio of longest edge to shortest edge in stacking direction and
                                ratio of the difference between thickness in stacking direction as defined by grids and thickness as defined by ply thickness specification
                                to the thickness in the stacking direction as defined by grids for CHEXA and CPENTA elements referencing PCOMPS entries only. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void GetLaminateRatio
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ ,
                    const NXOpen::Matrix3x3 & matMatrix /** matmatrix */ ,
                    int stackAxis /** stackaxis */ ,
                    double totalPlyThick /** totalplythick */ ,
                    double* lamEdgeRatio /** lamedgeratio */ ,
                    double* lamThickRatio /** lamthickratio */ 
                );
                /** Gets area value for 2D element face. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: double GetArea
                (
                    NXOpen::CAE::FEElement * pElem /** pelem */ 
                );
                /** Destroys the object. 
                 <br>  Created in NX1965.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~IElementQualityChecker();
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
