#ifndef NXOpen_MECHATRONICS_LOGICOBJECTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_LOGICOBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_LogicObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_ObjectInformationBuilder.hxx>
#include <NXOpen/Mechatronics_SelectClassificationBuilder.hxx>
#include <NXOpen/Mechatronics_SystemObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class LogicObjectBuilder;
    }
    namespace Mechatronics
    {
        class ObjectInformationBuilder;
    }
    namespace Mechatronics
    {
        class SelectClassificationBuilder;
    }
    namespace Mechatronics
    {
        class SystemObjectBuilder;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _LogicObjectBuilderBuilder;
        class LogicObjectBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::LogicObject NXOpen::Mechatronics::LogicObject@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::LogicObjectCollection::CreateLogicObjectBuilder  NXOpen::Mechatronics::LogicObjectCollection::CreateLogicObjectBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  LogicObjectBuilder : public NXOpen::Mechatronics::SystemObjectBuilder
        {
             /** Defined Parameter Data Structure */
            public:
            struct ParameterData
            {
                public: /** Parameter name */NXString ParameterName;
                public: /** Parameter value */NXString ParameterValue;
                public: ParameterData() :
                    ParameterName(),
                    ParameterValue()
                {
                }
                /** Constructor for the ParameterData struct. */ 
                public: ParameterData(const NXString &parameterNameInitial /** Parameter name */, 
                        const NXString &parameterValueInitial /** Parameter value */) :
                    ParameterName(parameterNameInitial),
                    ParameterValue(parameterValueInitial)
                {
                }
            };

            private: LogicObjectBuilderImpl * m_logicobjectbuilder_impl;
            private: friend class  _LogicObjectBuilderBuilder;
            protected: LogicObjectBuilder();
            public: ~LogicObjectBuilder();
            /**Returns  the parent object.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::NXObject * Parent
            (
            );
            /**Sets  the parent object.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetParent
            (
                NXOpen::NXObject * parent /** Parent object */
            );
            /**Gets the parameter data.  @return  Parameter data array
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: std::vector<NXOpen::Mechatronics::LogicObjectBuilder::ParameterData> GetParameterData
            (
            );
            /**Sets the parameter data. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetParameterData
            (
                const std::vector<NXOpen::Mechatronics::LogicObjectBuilder::ParameterData> & parameterData /** Parameter data array */
            );
            /**Returns  the object information builder, used to specify the information of logic object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::ObjectInformationBuilder * ObjectInformation
            (
            );
            /**Returns  the navigator object which holds the teamcenter attributes. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * NavigatorObject
            (
            );
            /**Returns  the modified status. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool Modified
            (
            );
            /**Sets  the modified status. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetModified
            (
                bool modified /** modified */ 
            );
            /**Returns  the classification item 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SelectClassificationBuilder * ClassificationItem
            (
            );
            /**Returns  the letter name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString LetterName
            (
            );
            /**Sets  the letter name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetLetterName
            (
                const NXString & letterName /** Letter name */
            );
            /**Sets  the letter name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetLetterName
            (
                const char * letterName /** Letter name */
            );
            /**Returns  the letter description. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString LetterDescription
            (
            );
            /**Sets  the letter description. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetLetterDescription
            (
                const NXString & letterDescription /** Letter Description */
            );
            /**Sets  the letter description. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetLetterDescription
            (
                const char * letterDescription /** Letter Description */
            );
            /**Returns  the Aspect. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Aspect
            (
            );
            /**Sets  the Aspect. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAspect
            (
                const NXString & aspect /** aspect */
            );
            /**Sets  the Aspect. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetAspect
            (
                const char * aspect /** aspect */
            );
            /**Returns  the Type Name used for. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString TypeName
            (
            );
            /**Sets  the Type Name used for. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetTypeName
            (
                const NXString & typeName /** type name */
            );
            /**Sets  the Type Name used for. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetTypeName
            (
                const char * typeName /** type name */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
