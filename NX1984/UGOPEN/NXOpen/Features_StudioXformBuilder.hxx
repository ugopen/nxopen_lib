#ifndef NXOpen_FEATURES_STUDIOXFORMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STUDIOXFORMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StudioXformBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_Continuity.hxx>
#include <NXOpen/GeometricUtilities_ControlPoleManagerData.hxx>
#include <NXOpen/GeometricUtilities_CurveRangeBuilder.hxx>
#include <NXOpen/GeometricUtilities_DegreesAndSegmentsOrPatchesBuilder.hxx>
#include <NXOpen/GeometricUtilities_SurfaceRangeBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class StudioXformBuilder;
    }
    class Direction;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class Continuity;
    }
    namespace GeometricUtilities
    {
        class ControlPoleManagerData;
    }
    namespace GeometricUtilities
    {
        class CurveRangeBuilder;
    }
    namespace GeometricUtilities
    {
        class DegreesAndSegmentsOrPatchesBuilder;
    }
    namespace GeometricUtilities
    {
        class SurfaceRangeBuilder;
    }
    class NXObject;
    class Plane;
    class Point;
    class SelectNXObjectList;
    namespace Features
    {
        class _StudioXformBuilderBuilder;
        class StudioXformBuilderImpl;
        /** Represents a @link NXOpen::Features::StudioXform NXOpen::Features::StudioXform@endlink  builder   <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateStudioXformBuilder  NXOpen::Features::FeatureCollection::CreateStudioXformBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AdvancedMethod </term> <description> 
         
        AdvanceOff </description> </item> 

        <item><term> 
         
        CurveRange.AnchorPosition </term> <description> 
         
        Start </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.Degree </term> <description> 
         
        3 </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.SegmentsOrPatches </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.UDegree </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.UPatches </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.VDegree </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        DegreesAndSegmentsOrPatches.VPatches </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        FallOffScale </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FeatureSaveMethod </term> <description> 
         
        Relative </description> </item> 

        <item><term> 
         
        InsertKnotDirection </term> <description> 
         
        UDirection </description> </item> 

        <item><term> 
         
        InsertKnotParameter </term> <description> 
         
        20 </description> </item> 

        <item><term> 
         
        IsSingleSelection </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        KeepAllContinuity </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LockRegionUEndFlexibility </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LockRegionUStartFlexibility </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LockRegionVEndFlexibility </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LockRegionVStartFlexibility </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        PlanarizeDirection </term> <description> 
         
        U </description> </item> 

        <item><term> 
         
        PlanarizeMethod </term> <description> 
         
        AtPlaneLocation </description> </item> 

        <item><term> 
         
        PlanarizePlaneOption </term> <description> 
         
        YcZc </description> </item> 

        <item><term> 
         
        ProportionalAllU </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalAllV </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalFallOffScale </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalMoveAfterU </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalMoveAfterV </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalMoveBeforeU </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProportionalMoveBeforeV </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        RotationDirection </term> <description> 
         
        Zc </description> </item> 

        <item><term> 
         
        ScalingDirection </term> <description> 
         
        Zc </description> </item> 

        <item><term> 
         
        SurfaceRange.AnchorPosition </term> <description> 
         
        Vertex1 </description> </item> 

        <item><term> 
         
        TranslationDirection </term> <description> 
         
        Zc </description> </item> 

        </list> 

         <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOPENCPP_FEATURESEXPORT  StudioXformBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Represents the Xform type */
            public: enum Types
            {
                TypesTranslate/** Translate type of Xform */,
                TypesRotate/** Rotate type of Xform */,
                TypesScale/** Scale type of Xform */,
                TypesTranslateNormalToFaceOrCurve/** Along normal type of Xform */,
                TypesTranlsateAlongControlPolygon/** Along polygon type of Xform */,
                TypesPlanarizeRowOfPoles/** Planarize type of Xform */
            };

            /** Represents the translation direction type */
            public: enum TranslationDirectionType
            {
                TranslationDirectionTypeXc/** Translate in X direction */,
                TranslationDirectionTypeYc/** Translate in Y direction */,
                TranslationDirectionTypeZc/** Translate in Z direction */,
                TranslationDirectionTypeYcZc/** Translate on Y-Z plane */,
                TranslationDirectionTypeXcZc/** Translate on X-Z plane */,
                TranslationDirectionTypeXcYc/** Translate on X-Y plane */,
                TranslationDirectionTypeArbitraryDirection/** Translate in arbitrary direction */,
                TranslationDirectionTypeArbitraryPlane/** Translate on arbitrary plane */
            };

            /** Represents the rotation direction type */
            public: enum RotationDirectionType
            {
                RotationDirectionTypeXc/** Rotate in X direction */,
                RotationDirectionTypeYc/** Rotate in Y direction */,
                RotationDirectionTypeZc/** Rotate in Z direction */,
                RotationDirectionTypeArbitraryDirection/** Rotate in arbitrary direction */,
                RotationDirectionTypeArbitraryPlane/** Rotate on arbitrary plane */
            };

            /** Represents the rotating pivot type */
            public: enum RotatingPivotType
            {
                RotatingPivotTypeAboutObjectCenter/** Rotate pivot at the object center */,
                RotatingPivotTypeAboutSelectedObject/** Rotate pivot at the selected object */,
                RotatingPivotTypeAboutPoint/** Rotate pivot at a point */
            };

            /** Represents the scaling direction type */
            public: enum ScalingDirectionType
            {
                ScalingDirectionTypeScaleUniformly/** Scale uniformly */,
                ScalingDirectionTypePlaneOfCurve/** Scale on Plane of curve */,
                ScalingDirectionTypeXc/** Scale in X direction */,
                ScalingDirectionTypeYc/** Scale in Y direction */,
                ScalingDirectionTypeZc/** Scale in Z direction */,
                ScalingDirectionTypeYcZc/** Scale on Y-Z plane */,
                ScalingDirectionTypeXcZc/** Scale on X-Z plane */,
                ScalingDirectionTypeXcYc/** Scale on X-Y plane */,
                ScalingDirectionTypeArbitraryDirection/** Scale in arbitrary direction */,
                ScalingDirectionTypeArbitraryPlane/** Scale on arbitrary plane */
            };

            /** Represents the scaling center type */
            public: enum ScalingCenterType
            {
                ScalingCenterTypeAboutObjectCenter/** Scale center at the object center */,
                ScalingCenterTypeAboutSelectedObject/** Scale center at the selected object */,
                ScalingCenterTypeAboutPoint/** Scale center at a point */
            };

            /** Represents the planarize method type */
            public: enum PlanarizeMethodType
            {
                PlanarizeMethodTypeAtPlaneLocation/** planarize at plane location */,
                PlanarizeMethodTypeAtPoleLocation/** planarize at pole location */,
                PlanarizeMethodTypeOnABestFitPlane/** planarize at a best fit plane */
            };

            /** Represents the planarize direction type */
            public: enum PlanarizeDirectionType
            {
                PlanarizeDirectionTypeU/** U direction when planarize */,
                PlanarizeDirectionTypeV/** V direction when planarize */
            };

            /** Represents the plane option type */
            public: enum PlanarizePlaneOptionType
            {
                PlanarizePlaneOptionTypeYcZc/** On Y-Z plane when planarize */,
                PlanarizePlaneOptionTypeXcZc/** On X-Z plane when planarize */,
                PlanarizePlaneOptionTypeXcYc/** On X-Y plane when planarize */,
                PlanarizePlaneOptionTypeArbitraryPlane/** On arbitrary plane when planarize */
            };

            /** Represents the advanced method type */
            public: enum AdvancedMethodType
            {
                AdvancedMethodTypeChangeDegree/** Change degree */,
                AdvancedMethodTypeFalloff/** Fall off */,
                AdvancedMethodTypeProportionalMovement/** Proportional movement */,
                AdvancedMethodTypeKeepContinuity/** Keep continuity */,
                AdvancedMethodTypeLockRegion/** Lock region */,
                AdvancedMethodTypeInsertKnot/** Insert knot */,
                AdvancedMethodTypeAdvanceOff/** Turn off advanced methods*/
            };

            /** Represents the insert knot direction type */
            public: enum InsertKnotDirectionType
            {
                InsertKnotDirectionTypeUDirection/** Inser knot in U direction */,
                InsertKnotDirectionTypeVDirection/** Inser knot in V direction */
            };

            /** Represents the feature type */
            public: enum FeatureType
            {
                FeatureTypeRelative/** Relative feature type of Xform */,
                FeatureTypeAbsolute/** Absolute feature type of Xform */
            };

            private: StudioXformBuilderImpl * m_studioxformbuilder_impl;
            private: friend class  _StudioXformBuilderBuilder;
            protected: StudioXformBuilder();
            public: ~StudioXformBuilder();
            /**Returns  the object to be transformed. Any face having b-surface
                    type geometry or curve having b-curve geometry can be transformed. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::SelectNXObjectList * XformObjects
            (
            );
            /**Returns  the control pole manager 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::ControlPoleManagerData * ControlPoleManager
            (
            );
            /**Returns  the translation direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::TranslationDirectionType TranslationDirection
            (
            );
            /**Sets  the translation direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetTranslationDirection
            (
                NXOpen::Features::StudioXformBuilder::TranslationDirectionType translateDirection /** translatedirection */ 
            );
            /**Returns  the translation arbitrary vector. Used only when the TranslationDirection is ArbitraryDirection. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Direction * TranslationArbitraryVector
            (
            );
            /**Sets  the translation arbitrary vector. Used only when the TranslationDirection is ArbitraryDirection. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetTranslationArbitraryVector
            (
                NXOpen::Direction * translateArbitraryVector /** translatearbitraryvector */ 
            );
            /**Returns  the translation arbitrary plane. Used only when the TranslationDirection is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Plane * TranslationArbitraryPlane
            (
            );
            /**Sets  the translation arbitrary plane. Used only when the TranslationDirection is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetTranslationArbitraryPlane
            (
                NXOpen::Plane * translateArbitraryPlane /** translatearbitraryplane */ 
            );
            /**Returns  the rotation direction  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::RotationDirectionType RotationDirection
            (
            );
            /**Sets  the rotation direction  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetRotationDirection
            (
                NXOpen::Features::StudioXformBuilder::RotationDirectionType rotateDirection /** rotatedirection */ 
            );
            /**Returns  the rotation arbitrary vector. Used only when the RotationDirection is ArbitraryDirection.  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Direction * RotationArbitraryVector
            (
            );
            /**Sets  the rotation arbitrary vector. Used only when the RotationDirection is ArbitraryDirection.  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetRotationArbitraryVector
            (
                NXOpen::Direction * rotateArbitraryVector /** rotatearbitraryvector */ 
            );
            /**Returns  the rotation arbitrary plane. Used only when the RotationPlane is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Plane * RotationArbitraryPlane
            (
            );
            /**Sets  the rotation arbitrary plane. Used only when the RotationPlane is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetRotationArbitraryPlane
            (
                NXOpen::Plane * rotateArbitraryPlane /** rotatearbitraryplane */ 
            );
            /**Returns  the rotating center type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::RotatingPivotType RotatingPivot
            (
            );
            /**Sets  the rotating center type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetRotatingPivot
            (
                NXOpen::Features::StudioXformBuilder::RotatingPivotType rotatePivot /** rotatepivot */ 
            );
            /**Returns  the rotating center 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Point * PivotPoint
            (
            );
            /**Sets  the rotating center 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetPivotPoint
            (
                NXOpen::Point * pivotPoint /** pivotpoint */ 
            );
            /**Returns  the scaling direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::ScalingDirectionType ScalingDirection
            (
            );
            /**Sets  the scaling direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetScalingDirection
            (
                NXOpen::Features::StudioXformBuilder::ScalingDirectionType scaleDirection /** scaledirection */ 
            );
            /**Returns  the scaling arbitrary vector. Used only when the ScalingDirection is ArbitraryDirection. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Direction * ScalingArbitraryVector
            (
            );
            /**Sets  the scaling arbitrary vector. Used only when the ScalingDirection is ArbitraryDirection. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetScalingArbitraryVector
            (
                NXOpen::Direction * scaleArbitraryVector /** scalearbitraryvector */ 
            );
            /**Returns  the scaling arbitrary plane. Used only when the ScalingDirection is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Plane * ScalingArbitraryPlane
            (
            );
            /**Sets  the scaling arbitrary plane. Used only when the ScalingDirection is ArbitraryPlane. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetScalingArbitraryPlane
            (
                NXOpen::Plane * scaleArbitraryPlane /** scalearbitraryplane */ 
            );
            /**Returns  the scaling center type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Point * CenterPoint
            (
            );
            /**Sets  the scaling center type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetCenterPoint
            (
                NXOpen::Point * centerPoint /** centerpoint */ 
            );
            /**Returns  the scaling center 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::ScalingCenterType ScalingCenter
            (
            );
            /**Sets  the scaling center 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetScalingCenter
            (
                NXOpen::Features::StudioXformBuilder::ScalingCenterType scaleCenter /** scalecenter */ 
            );
            /**Returns  the planarize method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::PlanarizeMethodType PlanarizeMethod
            (
            );
            /**Sets  the planarize method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetPlanarizeMethod
            (
                NXOpen::Features::StudioXformBuilder::PlanarizeMethodType planarizeMethod /** planarizemethod */ 
            );
            /**Returns  the planarize direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::PlanarizeDirectionType PlanarizeDirection
            (
            );
            /**Sets  the planarize direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetPlanarizeDirection
            (
                NXOpen::Features::StudioXformBuilder::PlanarizeDirectionType planarizeDirection /** planarizedirection */ 
            );
            /**Returns  the planarize plane option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::PlanarizePlaneOptionType PlanarizePlaneOption
            (
            );
            /**Sets  the planarize plane option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetPlanarizePlaneOption
            (
                NXOpen::Features::StudioXformBuilder::PlanarizePlaneOptionType planarizePlaneOption /** planarizeplaneoption */ 
            );
            /**Returns  the planarize arbitrary plane 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Plane * PlanarizeArbitraryPlane
            (
            );
            /**Sets  the planarize arbitrary plane 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetPlanarizeArbitraryPlane
            (
                NXOpen::Plane * planarizeArbitraryPlane /** planarizearbitraryplane */ 
            );
            /**Returns  the advanced method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::AdvancedMethodType AdvancedMethod
            (
            );
            /**Sets  the advanced method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetAdvancedMethod
            (
                NXOpen::Features::StudioXformBuilder::AdvancedMethodType advancedMethod /** advancedmethod */ 
            );
            /**Returns  the degrees and segments or patches 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::DegreesAndSegmentsOrPatchesBuilder * DegreesAndSegmentsOrPatches
            (
            );
            /**Returns  the fall off scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") double FallOffScale
            (
            );
            /**Sets  the fall off scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetFallOffScale
            (
                double fallOffScale /** falloffscale */ 
            );
            /** Reset the fall off scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void FallOffReset
            (
            );
            /**Returns  a value indicating the pole number before u to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int ProportionalMoveBeforeU
            (
            );
            /**Sets  a value indicating the pole number before u to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalMoveBeforeU
            (
                int proportionalMoveBeforeU /** proportionalmovebeforeu */ 
            );
            /**Returns  a value indicating the pole number after u to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int ProportionalMoveAfterU
            (
            );
            /**Sets  a value indicating the pole number after u to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalMoveAfterU
            (
                int proportionalMoveAfterU /** proportionalmoveafteru */ 
            );
            /**Returns  a value indicating whether to use all poles in U direction during the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") bool ProportionalAllU
            (
            );
            /**Sets  a value indicating whether to use all poles in U direction during the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalAllU
            (
                bool proportionalAllU /** proportionalallu */ 
            );
            /**Returns  a value indicating the pole number before v to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int ProportionalMoveBeforeV
            (
            );
            /**Sets  a value indicating the pole number before v to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalMoveBeforeV
            (
                int proportionalMoveBeforeV /** proportionalmovebeforev */ 
            );
            /**Returns  a value indicating the pole number after v to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int ProportionalMoveAfterV
            (
            );
            /**Sets  a value indicating the pole number after v to participate in the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalMoveAfterV
            (
                int proportionalMoveAfterV /** proportionalmoveafterv */ 
            );
            /**Returns  a value indicating whether to use all poles in V direction during the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") bool ProportionalAllV
            (
            );
            /**Sets  a value indicating whether to use all poles in V direction during the proportional movement 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalAllV
            (
                bool proportionalAllV /** proportionalallv */ 
            );
            /**Returns  the proportional fall off scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") double ProportionalFallOffScale
            (
            );
            /**Sets  the proportional fall off scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetProportionalFallOffScale
            (
                double proportionalFallOffScale /** proportionalfalloffscale */ 
            );
            /** Reset the proportional scale 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void ProportionalReset
            (
            );
            /**Returns  a value indicating whether to keep all continuity 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") bool KeepAllContinuity
            (
            );
            /**Sets  a value indicating whether to keep all continuity 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetKeepAllContinuity
            (
                bool keepAllContinuity /** keepallcontinuity */ 
            );
            /**Returns  the continuity at U minimum 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::Continuity * ContinuityUMin
            (
            );
            /**Returns  the continuity at U maximum 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::Continuity * ContinuityUMax
            (
            );
            /**Returns  the continuity at V minimum 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::Continuity * ContinuityVMin
            (
            );
            /**Returns  the continuity at V maximum 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::Continuity * ContinuityVMax
            (
            );
            /**Returns  the curve range 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::CurveRangeBuilder * CurveRange
            (
            );
            /**Returns  the surface range 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::GeometricUtilities::SurfaceRangeBuilder * SurfaceRange
            (
            );
            /**Returns  the lock region flexibility at U start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int LockRegionUStartFlexibility
            (
            );
            /**Sets  the lock region flexibility at U start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetLockRegionUStartFlexibility
            (
                int lockRegionUStartFlexibility /** lockregionustartflexibility */ 
            );
            /**Returns  the lock region flexibility at U end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int LockRegionUEndFlexibility
            (
            );
            /**Sets  the lock region flexibility at U end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetLockRegionUEndFlexibility
            (
                int lockRegionUEndFlexibility /** lockregionuendflexibility */ 
            );
            /**Returns  the lock region flexibility at V start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int LockRegionVStartFlexibility
            (
            );
            /**Sets  the lock region flexibility at V start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetLockRegionVStartFlexibility
            (
                int lockRegionVStartFlexibility /** lockregionvstartflexibility */ 
            );
            /**Returns  the lock region flexibility at V end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int LockRegionVEndFlexibility
            (
            );
            /**Sets  the lock region flexibility at V end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetLockRegionVEndFlexibility
            (
                int lockRegionVEndFlexibility /** lockregionvendflexibility */ 
            );
            /**Returns  the insert knot direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::InsertKnotDirectionType InsertKnotDirection
            (
            );
            /**Sets  the insert knot direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetInsertKnotDirection
            (
                NXOpen::Features::StudioXformBuilder::InsertKnotDirectionType insertKnotDirection /** insertknotdirection */ 
            );
            /**Returns  the parameter where to insert knots 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") int InsertKnotParameter
            (
            );
            /**Sets  the parameter where to insert knots 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetInsertKnotParameter
            (
                int insertKnotSlider /** insertknotslider */ 
            );
            /** Insert knots 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void InsertKnots
            (
            );
            /**Returns  the feature save method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::FeatureType FeatureSaveMethod
            (
            );
            /**Sets  the feature save method 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetFeatureSaveMethod
            (
                NXOpen::Features::StudioXformBuilder::FeatureType featureSaveMethod /** featuresavemethod */ 
            );
            /** Reset the shape of a edited face or curve 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void ShapeReset
            (
            );
            /**Returns  the single selection flag 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") bool IsSingleSelection
            (
            );
            /**Sets  the single selection flag 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetSingleSelection
            (
                bool singleSelectionFlag /** singleselectionflag */ 
            );
            /**Returns  the type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") NXOpen::Features::StudioXformBuilder::Types Type
            (
            );
            /**Sets  the type 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void SetType
            (
                NXOpen::Features::StudioXformBuilder::Types type /** type */ 
            );
            /** Updates the selected xform object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void UpdateXformObject
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to be edited */
            );
            /** Converts parameters of the feature that owns selected xform object. 
                    Converts through points studio spline feature to by poles feature, 
                    otherwise removes parameters of the feature. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void ConvertParameters
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to convert pameters from */
            );
            /** Changes degree of the selected xform object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void ChangeDegree
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to change degree of */
            );
            /** Inserts knot in the selected xform object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void InsertKnot
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to insert knot in */
            );
            /** Changes flexibility of the selected xform object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void ChangeFlexibility
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to change flexibility of */
            );
            /** Update lock region geometry with current geometry 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::StudioXformBuilderEx NXOpen::Features::StudioXformBuilderEx@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::StudioXformBuilderEx instead.") void UpdateLockRegionGeometry
            (
                NXOpen::NXObject * xformObject /** the selected face or curve to change flexibility of */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
