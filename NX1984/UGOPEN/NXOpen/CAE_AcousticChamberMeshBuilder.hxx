#ifndef NXOpen_CAE_ACOUSTICCHAMBERMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICCHAMBERMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticChamberMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticChamberMeshBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class Plane;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _AcousticChamberMeshBuilderBuilder;
        class AcousticChamberMeshBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::AcousticChamberMeshBuilder NXOpen::CAE::AcousticChamberMeshBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateAcousticChamberMeshBuilder  NXOpen::CAE::NodeElementManager::CreateAcousticChamberMeshBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticChamberMeshBuilder : public NXOpen::Builder
        {
            private: AcousticChamberMeshBuilderImpl * m_acousticchambermeshbuilder_impl;
            private: friend class  _AcousticChamberMeshBuilderBuilder;
            protected: AcousticChamberMeshBuilder();
            public: ~AcousticChamberMeshBuilder();
            /**Returns  the selection list 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * SelectionList
            (
            );
            /**Returns  the Acoustic Chamber Mesh property table
                    The property table contains the parameters needed for the Acoustic Chamber Mesh 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns the element type
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /** The creation of automatic element size
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_acou_meshing (" SC Acoustic Meshing") */
            public: void AutomaticElementSize
            (
            );
            /** The creation of automatic remesh element size
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_acou_meshing (" SC Acoustic Meshing") */
            public: void AutomaticRemeshElementSize
            (
            );
            /**Returns  the infinite plane 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * InfinitePlane
            (
            );
            /**Sets  the infinite plane 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInfinitePlane
            (
                NXOpen::Plane * infinitePlane /** infiniteplane */ 
            );
            /** The creation of automatic infer plane
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_acou_meshing (" SC Acoustic Meshing") */
            public: void AutomaticInferPlane
            (
            );
            /** The creation of automatic offset distance
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_acou_meshing (" SC Acoustic Meshing") */
            public: void AutomaticOffsetDistance
            (
            );
            /**Returns  the mesh name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MeshName
            (
            );
            /**Sets  the mesh name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMeshName
            (
                const NXString & meshName /** meshname */ 
            );
            /**Sets  the mesh name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            void SetMeshName
            (
                const char * meshName /** meshname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
