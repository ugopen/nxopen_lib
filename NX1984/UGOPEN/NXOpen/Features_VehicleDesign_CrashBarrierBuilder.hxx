#ifndef NXOpen_FEATURES_VEHICLEDESIGN_CRASHBARRIERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_CRASHBARRIERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_CrashBarrierBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class CrashBarrierBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class SelectNXObjectList;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _CrashBarrierBuilderBuilder;
            class CrashBarrierBuilderImpl;
            /**
                Represents a @link NXOpen::Features::VehicleDesign::CrashBarrier NXOpen::Features::VehicleDesign::CrashBarrier@endlink  builder
                to create and edit a vehicle design crash barrier. 
                 <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateCrashBarrierBuilder  NXOpen::Features::VehicleDesignCollection::CreateCrashBarrierBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  CrashBarrierBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents the requirements control types to define the crash barrier. */
                public: enum RequirementsControlsControlType
                {
                    RequirementsControlsControlTypeStandardDriven/** standard driven */ ,
                    RequirementsControlsControlTypeUserDefined/** user defined */ 
                };

                /** Represents the shape types. */
                public: enum ShapeType
                {
                    ShapeTypeRCAR2004Front/** rcar2004front */ ,
                    ShapeTypeRCAR2004Rear/** rcar2004rear */ ,
                    ShapeTypeRcar2006/** rcar2006 */ ,
                    ShapeTypeIihs2009/** iihs2009 */ ,
                    ShapeTypeIIHS2009MultiDomain/** iihs2009multi domain */ ,
                    ShapeTypeRCAR2006MultiDomain/** rcar2006multi domain */ 
                };

                /** Represents the cross position types. */
                public: enum CrossPositionType
                {
                    CrossPositionTypeCentered/** centered */ ,
                    CrossPositionTypeOverlap/** overlap */ 
                };

                /** Represents the overlap side types for the front and rear barriers. */
                public: enum OverlapSideType
                {
                    OverlapSideTypeRight/** right */ ,
                    OverlapSideTypeLeft/** left */ 
                };

                /** Represents the position object types. */
                public: enum PositionObjectType
                {
                    PositionObjectTypeBaseData/** base data */ ,
                    PositionObjectTypeVehicleObject/** vehicle object */ 
                };

                /** Represents the position types for side barrier. */
                public: enum SidePositionType
                {
                    SidePositionTypeLeft/** left */ ,
                    SidePositionTypeRight/** right */ ,
                    SidePositionTypeBoth/** both */ 
                };

                /** Represents the overlap side types for side barrier. */
                public: enum SideOverlapSideType
                {
                    SideOverlapSideTypeFront/** front */ ,
                    SideOverlapSideTypeRear/** rear */ 
                };

                private: CrashBarrierBuilderImpl * m_crashbarrierbuilder_impl;
                private: friend class  _CrashBarrierBuilderBuilder;
                protected: CrashBarrierBuilder();
                public: ~CrashBarrierBuilder();
                /**Returns  the requirements control for standard driven or user defined. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::RequirementsControlsControlType RequirementsControl
                (
                );
                /**Sets  the requirements control for standard driven or user defined. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRequirementsControl
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::RequirementsControlsControlType requirement /** requirement */ 
                );
                /**Returns  the standard used to define the crash barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString Standard
                (
                );
                /**Sets  the standard used to define the crash barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStandard
                (
                    const NXString & standard /** standard */ 
                );
                /**Sets  the standard used to define the crash barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetStandard
                (
                    const char * standard /** standard */ 
                );
                /**Returns  the value indicating if the front barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ActiveFront
                (
                );
                /**Sets  the value indicating if the front barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetActiveFront
                (
                    bool activeFront /** activefront */ 
                );
                /**Returns  the value indicating if the side barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ActiveSide
                (
                );
                /**Sets  the value indicating if the side barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetActiveSide
                (
                    bool activeSide /** activeside */ 
                );
                /**Returns  the value indicating if the rear barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ActiveRear
                (
                );
                /**Sets  the value indicating if the rear barrier is displayed. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetActiveRear
                (
                    bool activeRear /** activerear */ 
                );
                /**Returns  the loading applied to the vehicle front used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString FrontLoading
                (
                );
                /**Sets  the loading applied to the vehicle front used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontLoading
                (
                    const NXString & frontLoading /** frontloading */ 
                );
                /**Sets  the loading applied to the vehicle front used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetFrontLoading
                (
                    const char * frontLoading /** frontloading */ 
                );
                /**Returns  the shape type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType FrontShape
                (
                );
                /**Sets  the shape type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontShape
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType frontShap /** frontshap */ 
                );
                /**Returns  the cross position type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType FrontCrossPosition
                (
                );
                /**Sets  the cross position type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontCrossPosition
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType frontCrossPosition /** frontcrossposition */ 
                );
                /**Returns  the overlap side type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::OverlapSideType FrontOverlapSide
                (
                );
                /**Sets  the overlap side type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontOverlapSide
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::OverlapSideType frontOverlapSide /** frontoverlapside */ 
                );
                /**Returns  the expression containing the overlap percentage of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontOverlapPercentage
                (
                );
                /**Returns  the user defined width type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool FrontUserDefineWidth
                (
                );
                /**Sets  the user defined width type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontUserDefineWidth
                (
                    bool frontUserDefineWidth /** frontuserdefinewidth */ 
                );
                /**Returns  the expression containing the user defined width value of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontUserDefineWidthValue
                (
                );
                /**Returns  the positioing object type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType FrontPositionObject
                (
                );
                /**Sets  the positioing object type of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFrontPositionObject
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType frontPositionObject /** frontpositionobject */ 
                );
                /**Returns  the positioing objects of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * FrontSelectPositioningObject
                (
                );
                /**Returns  the positioing facet objects of front barrier. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * FrontSelectPositioningFacetBodies
                (
                );
                /**Returns  the expression containing the shift value of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontShift
                (
                );
                /**Returns  the expression containing the height above road value of front barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontHeightAboveRoad
                (
                );
                /**Returns  the loading applied to the vehicle side used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString SideLoading
                (
                );
                /**Sets  the loading applied to the vehicle side used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSideLoading
                (
                    const NXString & sideLoading /** sideloading */ 
                );
                /**Sets  the loading applied to the vehicle side used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetSideLoading
                (
                    const char * sideLoading /** sideloading */ 
                );
                /**Returns  the shape type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType SideShape
                (
                );
                /**Sets  the shape type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSideShape
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType sideShape /** sideshape */ 
                );
                /**Returns  the position type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::SidePositionType SidePosition
                (
                );
                /**Sets  the position type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSidePosition
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::SidePositionType sidePosition /** sideposition */ 
                );
                /**Returns  the cross position type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType SideCrossPosition
                (
                );
                /**Sets  the cross position type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSideCrossPosition
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType sideCrossPosition /** sidecrossposition */ 
                );
                /**Returns  the overlap side type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::SideOverlapSideType SideOverlapSide
                (
                );
                /**Sets  the overlap side type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSideOverlapSide
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::SideOverlapSideType sideOverlapSide /** sideoverlapside */ 
                );
                /**Returns  the expression containing the overlap percentage of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideOverlapPercentage
                (
                );
                /**Returns  the user defined width type of side barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool SideUserDefineLength
                (
                );
                /**Sets  the user defined width type of side barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSideUserDefineLength
                (
                    bool sideUserDefineLength /** sideuserdefinelength */ 
                );
                /**Returns  the expression containing the user defined width value of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideUserDefineLengthValue
                (
                );
                /**Returns  the side position object type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType SidePositionObject
                (
                );
                /**Sets  the side position object type of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSidePositionObject
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType sidePositionObject /** sidepositionobject */ 
                );
                /**Returns  the left side position objects of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * LeftSideSelectPositioningObject
                (
                );
                /**Returns  the left side position facet objects of side barrier. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * LeftSideSelectPositioningFacetBodies
                (
                );
                /**Returns  the right side position objects of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * RightSideSelectPositioningObject
                (
                );
                /**Returns  the right side position facet objects of side barrier. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * RightSideSelectPositioningFacetBodies
                (
                );
                /**Returns  the expression containing the shift value of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideShift
                (
                );
                /**Returns  the expression containing the height above road value of side barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideHeightAboveRoad
                (
                );
                /**Returns  the loading applied to the vehicle rear used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString RearLoading
                (
                );
                /**Sets  the loading applied to the vehicle rear used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearLoading
                (
                    const NXString & rearLoading /** rearloading */ 
                );
                /**Sets  the loading applied to the vehicle rear used in the crash barrier.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetRearLoading
                (
                    const char * rearLoading /** rearloading */ 
                );
                /**Returns  the shape type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType RearShape
                (
                );
                /**Sets  the shape type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearShape
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::ShapeType rearShape /** rearshape */ 
                );
                /**Returns  the cross position type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType RearCrossPosition
                (
                );
                /**Sets  the cross position type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearCrossPosition
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::CrossPositionType rearCrossPosition /** rearcrossposition */ 
                );
                /**Returns  the overlap side type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::OverlapSideType RearOverlapSide
                (
                );
                /**Sets  the overlap side type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearOverlapSide
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::OverlapSideType rearOverlapSide /** rearoverlapside */ 
                );
                /**Returns  the expression containing the user defined width value of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearOverlapPercentage
                (
                );
                /**Returns  the user defined width type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool RearUserDefineWidth
                (
                );
                /**Sets  the user defined width type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearUserDefineWidth
                (
                    bool rearUserDefineWidth /** rearuserdefinewidth */ 
                );
                /**Returns  the expression containing the user defined width value of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearUserDefineWidthValue
                (
                );
                /**Returns  the user defined position object type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType RearPositionObject
                (
                );
                /**Sets  the user defined position object type of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRearPositionObject
                (
                    NXOpen::Features::VehicleDesign::CrashBarrierBuilder::PositionObjectType rearPositionObject /** rearpositionobject */ 
                );
                /**Returns  the user defined position objects of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * RearSelectPositioningObject
                (
                );
                /**Returns  the user defined position facet objects of rear barrier. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * RearSelectPositioningFacetBodies
                (
                );
                /**Returns  the expression containing the shift value of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearShift
                (
                );
                /**Returns  the expression containing the height above road value of rear barrier. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearHeightAboveRoad
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
