#ifndef NXOpen_TOOLING_STANDARDPARTBATCHDATA_HXX_INCLUDED
#define NXOpen_TOOLING_STANDARDPARTBATCHDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_StandardPartBatchData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class StandardPartBatchData;
    }
    class NXObject;
    class Part;
    namespace Tooling
    {
        class StandardPartBatchDataImpl;
        /**
                Represents the standard part batch data.
              <br> This object does not need a creator.  <br> 
         <br>  Created in NX12.0.2.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  StandardPartBatchData : public NXOpen::TransientObject
        {
            private: StandardPartBatchDataImpl * m_standardpartbatchdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit StandardPartBatchData(void *ptr);
            /// \endcond 
            /** Dispose the StandardPartBatchData object 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~StandardPartBatchData();
            /** Initialize the StandardPartBatchData object 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void Initialize
            (
            );
            /** JA Mutator of m_currentSymbolOwningPart 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetCurrentSymbolOwningPart
            (
                NXOpen::Part * owningPart /** The owning part of the current selected symbol */
            );
            /** JA Mutator of m_includeChildComponents 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetIncludeChildComponents
            (
                bool includeChildren /** Whether to search symbols in children of the specified component */
            );
            /** Updates standard part record with values read from concept object and its instances 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void UpdateRecordValues
            (
                int recordIndex /** The index of the standard part record to update */,
                NXOpen::NXObject * conceptObject /** The concept object which saves values to update the record */,
                const std::vector<NXOpen::NXObject *> & instanceObjects /** Instances of the specified concept object */
            );
            /** Deletes a standard part record 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void DeleteRecord
            (
                int recordIndex /** The index of the standard part record to delete */
            );
            /** Clears standard part records 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ClearStandardPartRecords
            (
            );
            /** Clears the set of the concept objects representing standard parts 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void ClearConceptObjectsSet
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
