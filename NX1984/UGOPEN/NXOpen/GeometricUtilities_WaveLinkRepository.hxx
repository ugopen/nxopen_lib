#ifndef NXOpen_GEOMETRICUTILITIES_WAVELINKREPOSITORY_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_WAVELINKREPOSITORY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_WaveLinkRepository.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class WaveLinkRepository;
    }
    class Builder;
    namespace Features
    {
        class Feature;
    }
    class NXObject;
    namespace GeometricUtilities
    {
        class _WaveLinkRepositoryBuilder;
        class WaveLinkRepositoryImpl;
        /**
            Represents a  @link NXOpen::GeometricUtilities::WaveLinkRepository NXOpen::GeometricUtilities::WaveLinkRepository@endlink .
            This object performs the task of embedding the link features created by 
            the command. It also cleans up unused links.
             <br> To create a new instance of this class, use @link NXOpen::Part::CreateWavelinkRepository  NXOpen::Part::CreateWavelinkRepository @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  WaveLinkRepository : public NXOpen::NXObject
        {
            private: WaveLinkRepositoryImpl * m_wavelinkrepository_impl;
            private: friend class  _WaveLinkRepositoryBuilder;
            protected: WaveLinkRepository();
            public: ~WaveLinkRepository();
            /** Set the builder of the active command.If the builder is feat builder, 
                     then the feature from the builder will be queried and used as master feature. 
                     This master feature is needed to populate the repository with existing slave links on the feature.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
            public: void SetBuilder
            (
                NXOpen::Builder * builder /** the builder of the command */
            );
            /** Set the link created by interpart selection 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
            public: void SetLink
            (
                NXOpen::Features::Feature * linkFeature /** the wavelink feature */
            );
            /** Destroy the link repository 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void Destroy
            (
            );
            /** Specify if the client is non-feature based application or not. This flag
                     is used by the repository to properly clean up unused links. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetNonFeatureApplication
            (
                bool flag /** flag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
