#ifndef NXOpen_FEATURES_OFFSETEDGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_OFFSETEDGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_OffsetEdgeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class OffsetEdgeBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _OffsetEdgeBuilderBuilder;
        class OffsetEdgeBuilderImpl;
        /**
            Represents a @link NXOpen::Features::OffsetEdge NXOpen::Features::OffsetEdge@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::SynchronousEdgeCollection::CreateOffsetEdgeBuilder  NXOpen::Features::SynchronousEdgeCollection::CreateOffsetEdgeBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  OffsetEdgeBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** the offset edge method enumeration */
            public: enum OffsetEdgeMethod
            {
                OffsetEdgeMethodAlongFace/** along face */ ,
                OffsetEdgeMethodAlongPlaneofEdge/** along planeof edge */ 
            };

            /** the end face behavior settings enumeration */
            public: enum EndFaceBehaviourType
            {
                EndFaceBehaviourTypeExtend/** extend */ ,
                EndFaceBehaviourTypeMorph/** morph */ 
            };

            private: OffsetEdgeBuilderImpl * m_offsetedgebuilder_impl;
            private: friend class  _OffsetEdgeBuilderBuilder;
            protected: OffsetEdgeBuilder();
            public: ~OffsetEdgeBuilder();
            /**Returns  the edge collector to offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * EdgeToOffset
            (
            );
            /**Returns  the method for offset edge 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::OffsetEdgeBuilder::OffsetEdgeMethod Method
            (
            );
            /**Sets  the method for offset edge 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetMethod
            (
                NXOpen::Features::OffsetEdgeBuilder::OffsetEdgeMethod method /** method */ 
            );
            /**Returns  whether reverse offset side 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseOffsetSide
            (
            );
            /**Sets  whether reverse offset side 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetReverseOffsetSide
            (
                bool reverseOffsetSide /** reverseoffsetside */ 
            );
            /**Returns  the distance for offset edge 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  whether reverse offset direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseOffsetDirection
            (
            );
            /**Sets  whether reverse offset direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetReverseOffsetDirection
            (
                bool reverseOffsetDirection /** reverseoffsetdirection */ 
            );
            /**Returns  whether fix side faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::OffsetEdgeBuilder::EndFaceBehaviourType EndFaceBehavior
            (
            );
            /**Sets  whether fix side faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetEndFaceBehavior
            (
                NXOpen::Features::OffsetEdgeBuilder::EndFaceBehaviourType endFaceBehaviour /** endfacebehaviour */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
