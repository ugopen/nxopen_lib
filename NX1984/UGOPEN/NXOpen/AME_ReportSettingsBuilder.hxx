#ifndef NXOpen_AME_REPORTSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_AME_REPORTSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ReportSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_ReportDefinition.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ReportSettingsBuilder;
    }
    namespace AME
    {
        class ReportDefinition;
    }
    class Builder;
    namespace AME
    {
        class _ReportSettingsBuilderBuilder;
        class ReportSettingsBuilderImpl;
        /**
                Implements the report settings dialog.
             <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateReportSettingsBuilder  NXOpen::AME::AMEManager::CreateReportSettingsBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        MaxBridgeLevel </term> <description> 
         
        3 </description> </item> 

        <item><term> 
         
        MaxJumperLength </term> <description> 
         
        10 </description> </item> 

        <item><term> 
         
        MaxJumperLevel </term> <description> 
         
        2 </description> </item> 

        </list> 

         <br>  Created in NX1926.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ReportSettingsBuilder : public NXOpen::Builder
        {
            private: ReportSettingsBuilderImpl * m_reportsettingsbuilder_impl;
            private: friend class  _ReportSettingsBuilderBuilder;
            protected: ReportSettingsBuilder();
            public: ~ReportSettingsBuilder();
            /**Returns  the maxJumperLength 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int MaxJumperLength
            (
            );
            /**Sets  the maxJumperLength 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMaxJumperLength
            (
                int maxJumperLength /** maxjumperlength */ 
            );
            /**Returns  the maxJumperLevel 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int MaxJumperLevel
            (
            );
            /**Sets  the maxJumperLevel 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMaxJumperLevel
            (
                int maxJumperLevel /** maxjumperlevel */ 
            );
            /**Returns  the maxBridgesLevel 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int MaxBridgeLevel
            (
            );
            /**Sets  the maxBridgesLevel 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMaxBridgeLevel
            (
                int maxBridgesLevel /** maxbridgeslevel */ 
            );
            /**Returns  the selected report definition
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ReportDefinition * SelectedReportDefinition
            (
            );
            /**Sets  the selected report definition
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectedReportDefinition
            (
                NXOpen::AME::ReportDefinition * reportDefinition /** reportdefinition */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
