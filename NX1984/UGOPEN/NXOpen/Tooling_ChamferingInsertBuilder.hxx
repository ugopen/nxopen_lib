#ifndef NXOpen_TOOLING_CHAMFERINGINSERTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CHAMFERINGINSERTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ChamferingInsertBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ChamferingInsertBuilder;
    }
    class Builder;
    class ScCollector;
    class TaggedObject;
    namespace Tooling
    {
        class _ChamferingInsertBuilderBuilder;
        class ChamferingInsertBuilderImpl;
        /** Represents chamfering insert builder.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreateChamferingInsertBuilder  NXOpen::Tooling::ProgressiveDieManager::CreateChamferingInsertBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BottomingPlateClearance </term> <description> 
         
        0.1 </description> </item> 

        <item><term> 
         
        BottomingPlateToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DiePlateClearance </term> <description> 
         
        0.05 </description> </item> 

        <item><term> 
         
        DiePlateToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceEdgeType </term> <description> 
         
        StraightChamfer </description> </item> 

        <item><term> 
         
        InsertType </term> <description> 
         
        Up </description> </item> 

        <item><term> 
         
        ParentPartNode </term> <description> 
         
        NoParent </description> </item> 

        <item><term> 
         
        PunchPlateClearance </term> <description> 
         
        0.025 </description> </item> 

        <item><term> 
         
        PunchPlateToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        RenameComponent </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        StripperPlateClearance </term> <description> 
         
        0.05 </description> </item> 

        <item><term> 
         
        StripperPlateToggle </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ChamferingInsertBuilder : public NXOpen::Builder
        {
            /** Specify the parent node of insert part. */
            public: enum ParentPartNodeOption
            {
                ParentPartNodeOptionNoParent/** no parent */ 
            };

            /** Specify the insert type. */
            public: enum InsertTypeOption
            {
                InsertTypeOptionUp/** up */ ,
                InsertTypeOptionDown/** down */ ,
                InsertTypeOptionAll/** all */ 
            };

            /** Specify the face edge series. */
            public: enum FaceEdgeTypeOption
            {
                FaceEdgeTypeOptionStraightChamfer/** straight chamfer */ ,
                FaceEdgeTypeOptionInnerCircle/** inner circle */ ,
                FaceEdgeTypeOptionInnerProfile/** inner profile */ 
            };

            private: ChamferingInsertBuilderImpl * m_chamferinginsertbuilder_impl;
            private: friend class  _ChamferingInsertBuilderBuilder;
            protected: ChamferingInsertBuilder();
            public: ~ChamferingInsertBuilder();
            /**Returns  the select face 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectFace
            (
            );
            /**Returns  the parent part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ChamferingInsertBuilder::ParentPartNodeOption ParentPartNode
            (
            );
            /**Sets  the parent part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetParentPartNode
            (
                NXOpen::Tooling::ChamferingInsertBuilder::ParentPartNodeOption parentPartNode /** parentpartnode */ 
            );
            /**Returns  the face edge type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ChamferingInsertBuilder::FaceEdgeTypeOption FaceEdgeType
            (
            );
            /**Sets  the face edge type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetFaceEdgeType
            (
                NXOpen::Tooling::ChamferingInsertBuilder::FaceEdgeTypeOption faceEdgeType /** faceedgetype */ 
            );
            /**Returns  the insert type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ChamferingInsertBuilder::InsertTypeOption InsertType
            (
            );
            /**Sets  the insert type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetInsertType
            (
                NXOpen::Tooling::ChamferingInsertBuilder::InsertTypeOption insertType /** inserttype */ 
            );
            /** Create chamfering insert by standard insert method. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void StandardInsert
            (
            );
            /**Returns  the punch plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool PunchPlateToggle
            (
            );
            /**Sets  the punch plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPunchPlateToggle
            (
                bool punchPlateToggle /** punchplatetoggle */ 
            );
            /**Returns  the punch plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double PunchPlateClearance
            (
            );
            /**Sets  the punch plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPunchPlateClearance
            (
                double punchPlateClearance /** punchplateclearance */ 
            );
            /**Returns  the bottoming plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool BottomingPlateToggle
            (
            );
            /**Sets  the bottoming plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBottomingPlateToggle
            (
                bool bottomingPlateToggle /** bottomingplatetoggle */ 
            );
            /**Returns  the bottoming plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double BottomingPlateClearance
            (
            );
            /**Sets  the bottoming plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBottomingPlateClearance
            (
                double bottomingPlateClearance /** bottomingplateclearance */ 
            );
            /**Returns  the stripper plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool StripperPlateToggle
            (
            );
            /**Sets  the stripper plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetStripperPlateToggle
            (
                bool stripperPlateToggle /** stripperplatetoggle */ 
            );
            /**Returns  the stripper plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double StripperPlateClearance
            (
            );
            /**Sets  the stripper plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetStripperPlateClearance
            (
                double stripperPlateClearance /** stripperplateclearance */ 
            );
            /**Returns  the die plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool DiePlateToggle
            (
            );
            /**Sets  the die plate toggle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDiePlateToggle
            (
                bool diePlateToggle /** dieplatetoggle */ 
            );
            /**Returns  the die plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double DiePlateClearance
            (
            );
            /**Sets  the die plate clearance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDiePlateClearance
            (
                double diePlateClearance /** dieplateclearance */ 
            );
            /**Returns  the rename component 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameComponent
            (
            );
            /**Sets  the rename component 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetRenameComponent
            (
                bool renameComponent /** renamecomponent */ 
            );
            /**Returns  the wizard type attribute 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int WizardType
            (
            );
            /**Sets  the wizard type attribute 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetWizardType
            (
                int wizardType /** wizardtype */ 
            );
            /**Returns  the parent part name to create insert. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ParentPartName
            (
            );
            /**Sets  the parent part name to create insert. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetParentPartName
            (
                const NXString & parentPartName /** Specifies the parent part name */
            );
            /**Sets  the parent part name to create insert. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetParentPartName
            (
                const char * parentPartName /** Specifies the parent part name */
            );
            /**Returns  the new insert instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * InsertInstanceTag
            (
            );
            /**Sets  the new insert instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetInsertInstanceTag
            (
                NXOpen::TaggedObject * insertInstanceTag /** Specifies the new instance instance */
            );
            /** Update data for the new insert part 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdateInsertPartData
            (
            );
            /** Prepare PDW standard client data for standard part management 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void PreparePDWStandardClientData
            (
            );
            /** Post process PDW standard client data after inserting standard part @return  Returns the new created part instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::TaggedObject * PostProcessPDWStandardClientData
            (
            );
            /** Get the parent names  @return  Parent names list 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetParentNames
            (
            );
            /** Set the parent names 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetParentNames
            (
                std::vector<NXString> & parentNames /** Parent names list */
            );
            /** Gets selected face occurrences 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSelectedFaceOccurrences
            (
                std::vector<NXOpen::TaggedObject *> & selectedFaceOccurrences /** selectedfaceoccurrences */ 
            );
            /** Sets selected face occurrences 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSelectedFaceOccurrences
            (
                const std::vector<NXOpen::TaggedObject *> & selectedFaceOccurrences /** selectedfaceoccurrences */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
