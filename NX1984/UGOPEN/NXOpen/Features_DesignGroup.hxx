#ifndef NXOpen_FEATURES_DESIGNGROUP_HXX_INCLUDED
#define NXOpen_FEATURES_DESIGNGROUP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DesignGroup.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class DesignGroup;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class _DesignGroupBuilder;
        class DesignGroupImpl;
        /** Represents a design group.  <br> To create or edit an instance of this class, use @link NXOpen::Features::DesignGroupBuilder  NXOpen::Features::DesignGroupBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  DesignGroup : public NXOpen::Features::Feature
        {
            private: DesignGroupImpl * m_designgroup_impl;
            private: friend class  _DesignGroupBuilder;
            protected: DesignGroup();
            public: ~DesignGroup();
            /** Indicates whether the design group is to be activated. If true, the design group will be activated, else, design group will be deactivated
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void Activate
            (
                bool active /** active */ 
            );
            /** Process the deletion of a Design Group
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void ProcessDeleteDesignGroup
            (
            );
            /**Returns  the allow delete members flag. If true, members of the design group will also be deleted when the design group is deleted. If false, only the design group is deleted
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: bool AllowDeleteMembers
            (
            );
            /**Sets  the allow delete members flag. If true, members of the design group will also be deleted when the design group is deleted. If false, only the design group is deleted
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void SetAllowDeleteMembers
            (
                bool allowDeleteMembers /** allowdeletemembers */ 
            );
            /** Shows all displayable objects of design group and hides all other objects in the part 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ShowOnly
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
