#ifndef NXOpen_AME_PROJECT_HXX_INCLUDED
#define NXOpen_AME_PROJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_Project.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class Project;
    }
    class NXObject;
    namespace AME
    {
        class _ProjectBuilder;
        class ProjectImpl;
        /** Project Journaling class  <br> Created by Application_AME_ApplicationBuilder when we enter the application  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  Project : public NXOpen::NXObject
        {
            private: ProjectImpl * m_project_impl;
            private: friend class  _ProjectBuilder;
            protected: Project();
            public: ~Project();
            /** Method to get Template Variants in a Template Project
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: std::vector<NXOpen::NXObject *> GetTemplateVariants
            (
            );
            /** Method to get Value Sets in a Template or Template Variant Project
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: std::vector<NXOpen::NXObject *> GetValueSets
            (
            );
            /** Method to get Template Instance in Project from Template Instance Id
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * GetTemplateInstanceOfId
            (
                const NXString & templateInstanceAndValueSetGoupId /** templateinstanceandvaluesetgoupid */ 
            );
            /** Method to get Template Instance in Project from Template Instance Id
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            NXOpen::NXObject * GetTemplateInstanceOfId
            (
                const char * templateInstanceAndValueSetGoupId /** templateinstanceandvaluesetgoupid */ 
            );
            /** Method to get Value Set Group Instance in given Template Instance
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * GetValueSetGroup
            (
                const NXString & templateInstanceAndValueSetGoupId /** templateinstanceandvaluesetgoupid */ ,
                NXOpen::NXObject * templateInstance /** templateinstance */ 
            );
            /** Method to get Value Set Group Instance in given Template Instance
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            NXOpen::NXObject * GetValueSetGroup
            (
                const char * templateInstanceAndValueSetGoupId /** templateinstanceandvaluesetgoupid */ ,
                NXOpen::NXObject * templateInstance /** templateinstance */ 
            );
            /** Method to generate value set report
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void GenerateValueSetReport
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
