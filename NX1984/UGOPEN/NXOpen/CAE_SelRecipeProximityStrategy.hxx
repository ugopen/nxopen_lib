#ifndef NXOpen_CAE_SELRECIPEPROXIMITYSTRATEGY_HXX_INCLUDED
#define NXOpen_CAE_SELRECIPEPROXIMITYSTRATEGY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SelRecipeProximityStrategy.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelRecipeStrategy.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SelRecipeProximityStrategy;
    }
    namespace CAE
    {
        class SelRecipeStrategy;
    }
    class TaggedObject;
    namespace CAE
    {
        class _SelRecipeProximityStrategyBuilder;
        class SelRecipeProximityStrategyImpl;
        /**  @brief  Represents a proximity strategy   

          <br> Use the @link NXOpen::CAE::SelRecipeBuilder NXOpen::CAE::SelRecipeBuilder@endlink  class to add strategy.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SelRecipeProximityStrategy : public NXOpen::CAE::SelRecipeStrategy
        {
            private: SelRecipeProximityStrategyImpl * m_selrecipeproximitystrategy_impl;
            private: friend class  _SelRecipeProximityStrategyBuilder;
            protected: SelRecipeProximityStrategy();
            public: ~SelRecipeProximityStrategy();
            /** Gets entities in to the proximity strategy.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::TaggedObject *> GetEntities
            (
            );
            /** Set entities in to the proximity strategy 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEntitiesAndTolerance
            (
                const std::vector<NXOpen::TaggedObject *> & objects /** objects */ ,
                double tolerance /** tolerance */ 
            );
            /**Returns  the tolerance in to the proximity strategy. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double Tolerance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
