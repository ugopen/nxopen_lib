#ifndef NXOpen_CAE_CONNECTIONS_ILOCATIONSWITHDISCRETIZATIONCONTAINER_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_ILOCATIONSWITHDISCRETIZATIONCONTAINER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_ILocationsWithDiscretizationContainer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_CoordinatesSeriesLocation.hxx>
#include <NXOpen/CAE_Connections_CurveLocation.hxx>
#include <NXOpen/CAE_Connections_FeEdgesLocation.hxx>
#include <NXOpen/CAE_Connections_GroupLocation.hxx>
#include <NXOpen/CAE_Connections_NodeSeriesLocation.hxx>
#include <NXOpen/CAE_Connections_PointSeriesLocation.hxx>
#include <NXOpen/CAE_FEElemEdge.hxx>
#include <NXOpen/CAE_FENode.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class ILocationsWithDiscretizationContainer;
        }
    }
    namespace CAE
    {
        class CaeGroup;
    }
    namespace CAE
    {
        namespace Connections
        {
            class CoordinatesSeriesLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class CurveLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class FeEdgesLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class GroupLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class NodeSeriesLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class PointSeriesLocation;
        }
    }
    namespace CAE
    {
        class FEElemEdge;
    }
    namespace CAE
    {
        class FENode;
    }
    class IBaseCurve;
    class INXObject;
    class Point;
    namespace CAE
    {
        namespace Connections
        {
            /**  @brief  This class represents an Interface to the Locations With Discretization container.  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ILocationsWithDiscretizationContainer : public virtual NXOpen::INXObject
            {
                public: virtual ~ILocationsWithDiscretizationContainer() {}
                /** Adds a series of nodes location to connection location list  @return  The node series type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::NodeSeriesLocation * AddLocationSeriesOfNodes
                (
                    int indexOfDefinition /** The index of definition  */,
                    const std::vector<NXOpen::CAE::FENode *> & nodes /** Nodes used for location */
                ) = 0;
                /** Adds a series of points location to connection location list  @return  The point series type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::PointSeriesLocation * AddLocationSeriesOfPoints
                (
                    int indexOfDefinition /** The index of definition  */,
                    const std::vector<NXOpen::Point *> & points /** Points used for location */
                ) = 0;
                /** Adds a series of coordinates location to connection location list  @return  The coordinates series type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::CoordinatesSeriesLocation * AddLocationSeriesOfCoordinates
                (
                    int indexOfDefinition /** indexofdefinition */ ,
                    const std::vector<NXOpen::Point3d> & coordinates /** The location coordinates */
                ) = 0;
                /** Adds a curve location to connection location list  @return  The created curve type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::CurveLocation * AddLocationCurve
                (
                    int indexOfDefinition /** indexofdefinition */ ,
                    NXOpen::IBaseCurve * curve /** Curve used for location creation */
                ) = 0;
                /** Adds Fe Edges to connection location list  @return  The created edge group type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::FeEdgesLocation * AddLocationFeEdges
                (
                    int indexOfDefinition /** indexofdefinition */ ,
                    const std::vector<NXOpen::CAE::FEElemEdge *> & edges /** Edges used for location */
                ) = 0;
                /** Adds a group location to connection location list  @return  The created group type location 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::GroupLocation * AddLocationGroup
                (
                    int indexOfDefinition /** indexofdefinition */ ,
                    NXOpen::CAE::CaeGroup * group /** Group used for location creation */
                ) = 0;
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
