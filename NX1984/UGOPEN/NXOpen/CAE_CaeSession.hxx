#ifndef NXOpen_CAE_CAESESSION_HXX_INCLUDED
#define NXOpen_CAE_CAESESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaeSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CAECoreService.hxx>
#include <NXOpen/CAE_CaeDataContainer.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CaeSession;
    }
    class Session;
    class BasePart;
    namespace CAE
    {
        class AssociationUtilities;
    }
    namespace CAE
    {
        class CAECoreService;
    }
    namespace CAE
    {
        class CaeDataContainer;
    }
    namespace CAE
    {
        class CaePart;
    }
    namespace CAE
    {
        namespace Connections
        {
            class Utils;
        }
    }
    namespace CAE
    {
        namespace MeshMapping
        {
            class Utils;
        }
    }
    namespace CAE
    {
        namespace PenetrationCheck
        {
            class Manager;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class Manager;
        }
    }
    class MaterialUtilities;
    class NXObject;
    namespace CAE
    {
        class CaeSessionImpl;
        /**  @brief  This class provides access to all session related CAE functionality  

           <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CaeSession
        {
            public: /** User defined method that is called whenever a new fem sim or afm part is created. This call back will be issued
                        after the standard new part create callback, when the cae part is properly initialized and ready for use. Do not create,
                        open, save other parts or change active display part inside this callback. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback1<void, NXOpen::BasePart *> PartCreatedHandler;
            private: CaeSessionImpl * m_caesession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CaeSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~CaeSession();
            /** Returns a @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  to be used for
                        specifying input parameters operations like Simulation Import and Export.
                      @return  the Cae Data Container 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::CaeDataContainer * GetDataContainer
            (
            );
            /** Creates a @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink  and a @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  from
                        solver specific data.  Import is driven by that properties defined in the input 
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver.

                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::CaePart * ImportSimulation
            (
                const NXString & solverName /** the solver name to indicate what type of data is being imported */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the import parameters see @link GetDataContainer  GetDataContainer @endlink .
                 */
            );
            /** Creates a @link  NXOpen::CAE::SimPart   NXOpen::CAE::SimPart @endlink  and a @link  NXOpen::CAE::FemPart   NXOpen::CAE::FemPart @endlink  from
                        solver specific data.  Import is driven by that properties defined in the input 
                        @link  NXOpen::CAE::CaeDataContainer   NXOpen::CAE::CaeDataContainer @endlink  propertyList.  The exact properties can vary from
                        solver to solver.

                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::CAE::CaePart * ImportSimulation
            (
                const char * solverName /** the solver name to indicate what type of data is being imported */,
                NXOpen::CAE::CaeDataContainer * propertyList /** the import parameters see @link GetDataContainer  GetDataContainer @endlink .
                 */
            );
            /** Sets the context part for use in naming new FEM, Sim, and Idealized parts in managed mode.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFileNewContext
            (
                NXOpen::NXObject * contextPart /** the context part */
            );
            /** Creates a new CAE Core Service object  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CAECoreService * NewCaeCoreService
            (
            );
            /** Registers a user defined method that is called whenever a new part is created  @return  identifier of registered method (used to unregister the method) 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: int AddPartCreatedHandler
            (
                const NXOpen::CAE::CaeSession::PartCreatedHandler&  handler /** method to register */
            );
            /** Unregisters a user defined method that is called whenever a new fem sim or afm part is created 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void RemovePartCreatedHandler
            (
                int id /** identifier for method to unregister */
            );


            /** Returns the @link NXOpen::MaterialUtilities NXOpen::MaterialUtilities@endlink  instance belonging to this session 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::MaterialUtilities *MaterialUtils();
            /** Returns the @link NXOpen::CAE::AssociationUtilities NXOpen::CAE::AssociationUtilities@endlink  instance belonging to this session 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::AssociationUtilities *AssociationUtils();
            /** Returns the @link NXOpen::CAE::QualityAudit::Manager NXOpen::CAE::QualityAudit::Manager@endlink  belonging to this session. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::QualityAudit::Manager *QualityAuditManager();
            /** Returns the @link NXOpen::CAE::Connections::Utils NXOpen::CAE::Connections::Utils@endlink  instance belonging to this session 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::CAE::Connections::Utils *UniversalConnectionUtilities();
            /** Returns the @link NXOpen::CAE::MeshMapping::Utils NXOpen::CAE::MeshMapping::Utils@endlink  instance belonging to this session 
             <br>  Created in NX1899.0.0.  <br>  
            */
            public: NXOpen::CAE::MeshMapping::Utils *MeshMappingUtils();
            /** Returns the @link NXOpen::CAE::PenetrationCheck::Manager NXOpen::CAE::PenetrationCheck::Manager@endlink  belonging to this session. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::CAE::PenetrationCheck::Manager *PenetrationCheckManager();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
