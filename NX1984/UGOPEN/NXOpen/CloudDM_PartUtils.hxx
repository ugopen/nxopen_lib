#ifndef NXOpen_CLOUDDM_PARTUTILS_HXX_INCLUDED
#define NXOpen_CLOUDDM_PARTUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CloudDM_PartUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CloudDM_DocumentIdentifier.hxx>
#include <NXOpen/CloudDM_NewPartBuilder.hxx>
#include <NXOpen/PartSaveStatus.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_clouddm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CloudDM
    {
        class PartUtils;
    }
    namespace CloudDM
    {
        class DataManager;
    }
    namespace CloudDM
    {
        class DocumentIdentifier;
    }
    namespace CloudDM
    {
        class NewPartBuilder;
    }
    class Part;
    class PartSaveStatus;
    namespace CloudDM
    {
        class PartUtilsImpl;

        /// \cond NX_NO_DOC 
        /** This class provides utilities for various document related operations of parts <br> To obtain an instance of this class, refer to @link NXOpen::CloudDM::DataManager  NXOpen::CloudDM::DataManager @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CLOUDDMEXPORT  PartUtils
        {
            private: PartUtilsImpl * m_partutils_impl;
            private: NXOpen::CloudDM::DataManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PartUtils(NXOpen::CloudDM::DataManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartUtils();

            /// \cond NX_NO_DOC 
            /** Gets the document identifier of the given part  @return  the document identifier object of the part 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CloudDM::DocumentIdentifier * GetDocumentIdentifier
            (
                NXOpen::Part * inputPart /** inputpart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Save the given part as new design 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PartSaveStatus * SaveAs
            (
                NXOpen::Part * inputPart /** inputpart */ ,
                const NXString & newFileName /** name of new part file for save as */,
                NXOpen::CloudDM::NewPartBuilder * newDesignInfo /** new design information */
            );
            /** Save the given part as new design 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::PartSaveStatus * SaveAs
            (
                NXOpen::Part * inputPart /** inputpart */ ,
                const char * newFileName /** name of new part file for save as */,
                NXOpen::CloudDM::NewPartBuilder * newDesignInfo /** new design information */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Checkout parts 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_tcshare ("Cloud File Management") */
            public: void CheckoutParts
            (
                const std::vector<NXOpen::Part *> & partsToCheckOut /** Array of parts to check out */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Checkin parts 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_tcshare ("Cloud File Management") */
            public: void CheckinParts
            (
                const std::vector<NXOpen::Part *> & partsToCheckIn /** Array of parts to check in */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Freeze the parts 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void FreezeParts
            (
                const std::vector<NXOpen::Part *> & partsToFreeze /** Array of parts to freeze */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get the related drawings of loaded part. Returns part specifications of master and non-master drawings  @return  Array of drawings 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CloudDM::DocumentIdentifier *> GetRelatedDrawings
            (
                NXOpen::Part * inputPart /** inputpart */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
