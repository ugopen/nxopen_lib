#ifndef NXOpen_CAM_MACHININGREGIONBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MACHININGREGIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MachiningRegionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MachiningRegionBuilder;
    }
    namespace CAM
    {
        class _MachiningRegionBuilderBuilder;
        class MachiningRegionBuilderImpl;
        /** Represents a Machining Region Builder 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MachiningRegionBuilder : public NXOpen::TaggedObject
        {
            private: MachiningRegionBuilderImpl * m_machiningregionbuilder_impl;
            private: friend class  _MachiningRegionBuilderBuilder;
            protected: MachiningRegionBuilder();
            public: ~MachiningRegionBuilder();
            /**Returns  the machining sides type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: int SidesType
            (
            );
            /**Sets  the machining sides type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetSidesType
            (
                int machiningSides /** machiningsides */ 
            );
            /**Returns  the range type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: int RangeDepthType
            (
            );
            /**Sets  the range type 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetRangeDepthType
            (
                int rangeType /** rangetype */ 
            );
            /**Returns  the entry start offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: double EntryStartOffset
            (
            );
            /**Sets  the entry start offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetEntryStartOffset
            (
                double entryStartOffset /** entrystartoffset */ 
            );
            /**Returns  the entry end offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: double EntryEndOffset
            (
            );
            /**Sets  the entry end offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetEntryEndOffset
            (
                double entryEndOffset /** entryendoffset */ 
            );
            /**Returns  the exit start offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: double ExitStartOffset
            (
            );
            /**Sets  the exit start offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetExitStartOffset
            (
                double exitStartOffset /** exitstartoffset */ 
            );
            /**Returns  the exit end offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: double ExitEndOffset
            (
            );
            /**Sets  the exit end offset 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetExitEndOffset
            (
                double exitEndOffset /** exitendoffset */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
