#ifndef NXOpen_CADCAEPREP_ORIENTATIONBYVECTOR_HXX_INCLUDED
#define NXOpen_CADCAEPREP_ORIENTATIONBYVECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CADCAEPrep_OrientationByVector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CADCAEPrep_IOrientation.hxx>
#include <NXOpen/libnxopencpp_cadcaeprep_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CADCAEPrep
    {
        class OrientationByVector;
    }
    namespace CADCAEPrep
    {
        class IOrientation;
    }
    namespace CADCAEPrep
    {
        class _OrientationByVectorBuilder;
        class OrientationByVectorImpl;
        /** The object containing the information about the OrientationByVector. <br> Use @link CADCAEPrep::IdealizedBeam::GetOrientationByVector CADCAEPrep::IdealizedBeam::GetOrientationByVector@endlink  to get the properties of this class.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CADCAEPREPEXPORT  OrientationByVector : public NXOpen::CADCAEPrep::IOrientation
        {
            /** the Orient Axis type */
            public: enum OrientAxis
            {
                OrientAxisY/** Orient Axis along Y */ = 2,
                OrientAxisZ/** Orient Axis along Z */
            };

            private: OrientationByVectorImpl * m_orientationbyvector_impl;
            private: friend class  _OrientationByVectorBuilder;
            protected: OrientationByVector();
            public: ~OrientationByVector();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
