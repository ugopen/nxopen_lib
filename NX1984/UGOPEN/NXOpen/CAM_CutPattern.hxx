#ifndef NXOpen_CAM_CUTPATTERN_HXX_INCLUDED
#define NXOpen_CAM_CUTPATTERN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutPattern.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ElementIntBuilder.hxx>
#include <NXOpen/CAM_ElementIntBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CutPattern;
    }
    namespace CAM
    {
        class ElementIntBuilder;
    }
    namespace CAM
    {
        class _CutPatternBuilder;
        class CutPatternImpl;
        /** Represents a builder for an option menu of cut pattern type 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CutPattern : public NXOpen::CAM::ElementIntBuilder
        {
            /** Available types for cut pattern customizable item */
            public: enum Types
            {
                TypesNone/**  None*/,
                TypesZigZag/**  Zig zag*/,
                TypesZig/**  Zig*/,
                TypesZigContour/**  Zig with contour*/,
                TypesFollow/**  Follow periphery*/,
                TypesProfile/**  Profile*/,
                TypesDriveCurve/**  Drive curve*/,
                TypesZigZagLift/**  Zig Zag with lifts*/,
                TypesZigStepover/**  Zig with stepover*/,
                TypesConcentric/**  Concentric*/,
                TypesRadial/**  Radial*/,
                TypesRadialZigZag/**  Radial zig zag*/,
                TypesRadialZig/**  Radial zig*/,
                TypesRadialZigContour/**  Radial zig with contour*/,
                TypesRadialZigStepover/**  Radial zig with stepover*/,
                TypesConcentricZigZag/**  Concentric zig zag*/,
                TypesConcentricZig/**  Concentric zig*/,
                TypesConcentricZigContour/**  Concentric zig contour*/,
                TypesConcentricZigStepover/**  Concentric zig stepover*/,
                TypesRadialZigZagLift/**  Radial zig zag with lifts*/,
                TypesCrossZig/**  Crosscut zig*/,
                TypesCrossZigZag/**  Crosscut zig zag*/,
                TypesCrossZigZagLift/**  Crosscut zig zag with lifts*/,
                TypesSameAsNonsteep/**  Same as non-steep*/,
                TypesHelical/**  Helical*/,
                TypesZlevelZig/**  Zlevel zig*/,
                TypesZlevelZigZag/**  Zlevel zig zag*/,
                TypesZlevelZigZagLift/**  Zlevel zig zag with lifts*/,
                TypesAdaptiveZig/**  Adaptive zig*/,
                TypesHelicalAroundPart/**  Helical around part*/,
                TypesTrochoidal/**  Trochoidal*/,
                TypesFollowPart/**  Follow part*/,
                TypesSpiral/**  Spiral*/,
                TypesAdaptiveRoughing/**  Adaptive roughing*/,
                TypesZlevelHelical/**  Zlevel helical*/
            };

            private: CutPatternImpl * m_cutpattern_impl;
            private: friend class  _CutPatternBuilder;
            protected: CutPattern();
            public: ~CutPattern();
            /**Returns  the current value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutPattern::Types EnumValue
            (
            );
            /**Sets  the current value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEnumValue
            (
                NXOpen::CAM::CutPattern::Types newValue /** the new value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
