#ifndef NXOpen_PDM_PARTOPERATIONCREATEBUILDER_HXX_INCLUDED
#define NXOpen_PDM_PARTOPERATIONCREATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PartOperationCreateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_PartOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class PartOperationCreateBuilder;
    }
    class BasePart;
    namespace PDM
    {
        class PartOperationBuilder;
    }
    namespace PDM
    {
        class _PartOperationCreateBuilderBuilder;
        class PartOperationCreateBuilderImpl;
        /** Represents a builder class that performs Create operations  <br> To create a new instance of this class, use @link NXOpen::PDM::PdmSession::CreateCreateOperationBuilder  NXOpen::PDM::PdmSession::CreateCreateOperationBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  PartOperationCreateBuilder : public NXOpen::PDM::PartOperationBuilder
        {
            /** Represents an operation sub type for creating a part */
            public: enum OperationSubType
            {
                OperationSubTypeFromTemplate/** Create New Part from template */,
                OperationSubTypeSelectTemplate/** Populate Part already created in Teamcenter */,
                OperationSubTypeRename/** Rename Existing Part */,
                OperationSubTypeCreateSpecification/** Create Specification and not a Part */,
                OperationSubTypeRenameNativePartInTc/** Rename Existing native part in session */
            };

            private: PartOperationCreateBuilderImpl * m_partoperationcreatebuilder_impl;
            private: friend class  _PartOperationCreateBuilderBuilder;
            protected: PartOperationCreateBuilder();
            public: ~PartOperationCreateBuilder();
            /** Sets the selected Item Type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetItemType
            (
                const NXString & itemType /** itemtype */ 
            );
            /** Sets the selected Item Type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetItemType
            (
                const char * itemType /** itemtype */ 
            );
            /** Sets the selected Model Type 
                        This is same as the Relation Type that is set by @link NXOpen::FileNew::RelationType NXOpen::FileNew::RelationType@endlink  and is same as
                        the relation type specified in Template PAX files.
                        This is needed to be set only when the @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  is set 
                        to @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeCreateSpecification NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeCreateSpecification@endlink . In other cases
                        this is read from the Template. If not set this is always assumed to be "master".
                        Example strings are "specification", "manifestation", etc.
                        
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetModelType
            (
                const NXString & modelType /** modeltype */ 
            );
            /** Sets the selected Model Type 
                        This is same as the Relation Type that is set by @link NXOpen::FileNew::RelationType NXOpen::FileNew::RelationType@endlink  and is same as
                        the relation type specified in Template PAX files.
                        This is needed to be set only when the @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  is set 
                        to @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeCreateSpecification NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeCreateSpecification@endlink . In other cases
                        this is read from the Template. If not set this is always assumed to be "master".
                        Example strings are "specification", "manifestation", etc.
                        
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetModelType
            (
                const char * modelType /** modeltype */ 
            );
            /** Sets the Master Part 
                        Use this only in case the part your are trying to create supports master model.
                       
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMasterPart
            (
                NXOpen::BasePart * masterPart /** masterpart */ 
            );
            /** Returns the @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  for Create. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartOperationCreateBuilder::OperationSubType GetOperationSubType
            (
            );
            /** Sets the @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  for Create. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOperationSubType
            (
                NXOpen::PDM::PartOperationCreateBuilder::OperationSubType operatioSubType /** operatiosubtype */ 
            );
            /** Sets the Add Master Flag 
                        Use this only in case creating a new Altrep.
                        This will add master as a component to newly created master.
                        This will be set to false if tempalte selected doesn't supports creating new altrep.
                       
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAddMaster
            (
                bool addMaster /** addmaster */ 
            );
            /** Sets the Parts To Rename on the Builder.
                        This is only applicable if @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  is set to
                        @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeRename NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeRename@endlink 
                       
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartsToRename
            (
                const std::vector<NXOpen::BasePart *> & partsToRename /** partstorename */ 
            );
            /** Returns logical value to indicate whether master to be added as child component  @return  whether master to be added as child component 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetAddMaster
            (
            );
            /** Sets the Part Spec of the part to open in case of Select Template Dialog
                        This is only applicable if @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  is set to
                        @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeSelectTemplate NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeSelectTemplate@endlink 
                        partSpecTopOpen can be a CLI format (\@DB/MFKID/RevId) or full TCIN file specification (starting with %UGMGR)
                       
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartSpecToOpen
            (
                const NXString & partSpecToOpen /** partspectoopen */ 
            );
            /** Sets the Part Spec of the part to open in case of Select Template Dialog
                        This is only applicable if @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubType NXOpen::PDM::PartOperationCreateBuilder::OperationSubType@endlink  is set to
                        @link NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeSelectTemplate NXOpen::PDM::PartOperationCreateBuilder::OperationSubTypeSelectTemplate@endlink 
                        partSpecTopOpen can be a CLI format (\@DB/MFKID/RevId) or full TCIN file specification (starting with %UGMGR)
                       
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetPartSpecToOpen
            (
                const char * partSpecToOpen /** partspectoopen */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
