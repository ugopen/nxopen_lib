#ifndef NXOpen_DISPLAY_UVTRANSFORMATIONDATA_HXX_INCLUDED
#define NXOpen_DISPLAY_UVTRANSFORMATIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_UVTransformationData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class UVTransformationData;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Display
    {
        class _UVTransformationDataBuilder;
        class UVTransformationDataImpl;
        /** Represents a @link NXOpen::Display::UVTransformationData NXOpen::Display::UVTransformationData@endlink . 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  UVTransformationData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: UVTransformationDataImpl * m_uvtransformationdata_impl;
            private: friend class  _UVTransformationDataBuilder;
            protected: UVTransformationData();
            public: ~UVTransformationData();
            /**Returns  the X direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double TranslationX
            (
            );
            /**Sets  the X direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTranslationX
            (
                double translationX /** translationx */ 
            );
            /**Returns  the Y direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double TranslationY
            (
            );
            /**Sets  the Y direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTranslationY
            (
                double translationY /** translationy */ 
            );
            /**Returns  the Z direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double TranslationZ
            (
            );
            /**Sets  the Z direction of translation 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTranslationZ
            (
                double translationZ /** translationz */ 
            );
            /**Returns  the X value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double RotationX
            (
            );
            /**Sets  the X value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationX
            (
                double rotationX /** rotationx */ 
            );
            /**Returns  the Y value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double RotationY
            (
            );
            /**Sets  the Y value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationY
            (
                double rotationY /** rotationy */ 
            );
            /**Returns  the Z value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double RotationZ
            (
            );
            /**Sets  the Z value of rotation around the origin point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationZ
            (
                double rotationZ /** rotationz */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
