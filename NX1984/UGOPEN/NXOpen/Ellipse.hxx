#ifndef NXOpen_ELLIPSE_HXX_INCLUDED
#define NXOpen_ELLIPSE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Ellipse.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Conic.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Ellipse;
    class Conic;
    class _EllipseBuilder;
    class EllipseImpl;
    /** Represents an ellipse curve.  The start and end angles are measured relative to the X and Y
        axes of the orientation matrix of the conic.  <br> To create a new instance of this class, use @link NXOpen::CurveCollection::CreateEllipse  NXOpen::CurveCollection::CreateEllipse @endlink  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Ellipse : public NXOpen::Conic
    {
        private: EllipseImpl * m_ellipse_impl;
        private: friend class  _EllipseBuilder;
        protected: Ellipse();
        public: ~Ellipse();
        /**Returns  the major radius. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double MajorRadius
        (
        );
        /**Returns  the minor radius. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double MinorRadius
        (
        );
        /**Returns  the start angle. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double StartAngle
        (
        );
        /**Returns  the end angle. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double EndAngle
        (
        );
        /** Gets the parameters of the ellipse - the major/minor radii, start/end angles and the centre of the ellipse. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void GetParameters
        (
            double* majorRadius /** majorradius */ ,
            double* minorRadius /** minorradius */ ,
            double* startAngle /** In radians */,
            double* endAngle /** In radians */,
            double* rotationAngle /** In radians */,
            NXOpen::Point3d* center /** center */ 
        );
        /** Sets the start, end, anchor, rho of the conic. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") OR geometric_tol ("GDT") */
        public: void SetParameters
        (
            const NXOpen::Point3d & startPoint /** startpoint */ ,
            const NXOpen::Point3d & endPoint /** endpoint */ ,
            const NXOpen::Point3d & anchorPoint /** anchorpoint */ ,
            double rho /** rho */ 
        );
        /** Sets the parameters of the ellipse - the major/minor radii, start/end angles and the centre of the ellipse. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetParameters
        (
            double majorRadius /** major radius */ ,
            double minorRadius /** minor radius */ ,
            double startAngle /** In radians */,
            double endAngle /** In radians */,
            double rotationAngle /** In radians */,
            const NXOpen::Point3d & center /** center */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
