#ifndef NXOpen_CAE_MODELCHECK_ALIGNSHELLELEMENTNORMALBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ALIGNSHELLELEMENTNORMALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_AlignShellElementNormalBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FEElement.hxx>
#include <NXOpen/CAE_ModelCheckDataTypes.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ModelCheck_ISelectionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class AlignShellElementNormalBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class ISelectionBuilder;
        }
    }
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    class SelectTaggedObjectList;
    namespace CAE
    {
        namespace ModelCheck
        {
            class _AlignShellElementNormalBuilderBuilder;
            class AlignShellElementNormalBuilderImpl;
            /**
                    Represents a @link NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder@endlink  builder used to align the normals of
                    connected shell elements with a seed shell element. You can align the normals by executing either 
                    @link Builder::Commit Builder::Commit@endlink  or @link NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::AlignNormals NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::AlignNormals@endlink .
                    The difference between these two methods is @link Builder::Commit Builder::Commit@endlink  aligns the normals
                    and updates normal display, but it does not return the elements that have changed normals.
                    @link NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::AlignNormals NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::AlignNormals@endlink  aligns the normals
                    and returns the elements that have changed normals. Both of the methods are only available in fem context.
                     <br> To create a new instance of this class, use @link NXOpen::CAE::ModelCheckManager::CreateAlignShellElementNormalBuilder  NXOpen::CAE::ModelCheckManager::CreateAlignShellElementNormalBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  AlignShellElementNormalBuilder : public NXOpen::Builder, public virtual NXOpen::CAE::ModelCheck::ISelectionBuilder
            {
                /**  the options to define the orient method to orient normal */
                public: enum OrientMethodType
                {
                    OrientMethodTypeUsingSeedElement/** using seed element */ ,
                    OrientMethodTypeAutomatic/** automatic */ 
                };

                /**  the options to define the connection scope to the seed element for model checking */
                public: enum ConnectedElementScope
                {
                    ConnectedElementScopeSeedMesh/** Limits check to only those shell elements in the mesh that contains the Seed Element */,
                    ConnectedElementScopeAllVisible/** Limits check to only those shell elements which are connected to the Seed Element and are currently visible*/,
                    ConnectedElementScopeUserSpecified/** Limits check to only those shell elements specified in @link NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::UserSpecifiedConnectElements NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::UserSpecifiedConnectElements@endlink  */
                };

                private: AlignShellElementNormalBuilderImpl * m_alignshellelementnormalbuilder_impl;
                private: friend class  _AlignShellElementNormalBuilderBuilder;
                protected: AlignShellElementNormalBuilder();
                public: ~AlignShellElementNormalBuilder();
                /**Returns  the option to indicate how to orient method to orient normal 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::OrientMethodType OrientMethod
                (
                );
                /**Sets  the option to indicate how to orient method to orient normal 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetOrientMethod
                (
                    NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::OrientMethodType orientMethod /** orientmethod */ 
                );
                /**Returns  the option to indicate how to define connected elements for checking 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::ConnectedElementScope ElementConnectScope
                (
                );
                /**Sets  the option to indicate how to define connected elements for checking 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetElementConnectScope
                (
                    NXOpen::CAE::ModelCheck::AlignShellElementNormalBuilder::ConnectedElementScope connectScope /** connectscope */ 
                );
                /**Returns  the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FEElement * SeedElement
                (
                );
                /**Sets  the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetSeedElement
                (
                    NXOpen::CAE::FEElement * seedElement /** seedelement */ 
                );
                /**Returns  the option indicating whether to reverse element normals so that they are aligned with the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseSeedNormal
                (
                );
                /**Sets  the option indicating whether to reverse element normals so that they are aligned with the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetReverseSeedNormal
                (
                    bool seedNormalToBeReversed /** seednormaltobereversed */ 
                );
                /**Returns  the user specified connected elements to be aligned with seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::SelectElementsBuilder * UserSpecifiedConnectElements
                (
                );
                /** Finds all visible elements connected with the seed element  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::FEElement *> FindAllVisibleConnectedElements
                (
                );
                /** Display element normals for connected elements, which are to be aligned with seed element normal 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void DisplayNormals
                (
                );
                /** Aligns the normals of elements connected to the seed element. Returns the elements
                                that have had the normals successfully reversed. This method will only reverse
                                the normals for shell elements in the current work fem part.
                             @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: std::vector<NXOpen::CAE::FEElement *> AlignNormals
                (
                );
                /**Returns  the selected objects to be checked. The objects must be @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  or
                            @link NXOpen::CAE::FEElement NXOpen::CAE::FEElement@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * ElementSelectionList
                (
                );
                /**Returns  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::CheckScope CheckScopeOption
                (
                );
                /**Sets  the check scope setting 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCheckScopeOption
                (
                    NXOpen::CAE::ModelCheck::CheckScope scope /** scope */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
