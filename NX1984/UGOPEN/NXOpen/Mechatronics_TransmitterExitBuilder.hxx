#ifndef NXOpen_MECHATRONICS_TRANSMITTEREXITBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_TRANSMITTEREXITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_TransmitterExitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class TransmitterExitBuilder;
    }
    class CoordinateSystem;
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectRigidBody;
    }
    class Point;
    namespace Mechatronics
    {
        class _TransmitterExitBuilderBuilder;
        class TransmitterExitBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::TransmitterExit NXOpen::Mechatronics::TransmitterExit@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::TransmitterExitCollection::CreateTransmitterExitBuilder  NXOpen::Mechatronics::TransmitterExitCollection::CreateTransmitterExitBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  TransmitterExitBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            private: TransmitterExitBuilderImpl * m_transmitterexitbuilder_impl;
            private: friend class  _TransmitterExitBuilderBuilder;
            protected: TransmitterExitBuilder();
            public: ~TransmitterExitBuilder();
            /**Returns   @brief  the initial position of receiving objects.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * Position
            (
            );
            /**Sets   @brief  the initial position of receiving objects.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPosition
            (
                NXOpen::Point * position /** position */ 
            );
            /**Returns   @brief  the initial orientation of receiving objects.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::CoordinateSystem * Orientation
            (
            );
            /**Sets   @brief  the initial orientation of receiving objects.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetOrientation
            (
                NXOpen::CoordinateSystem * orientation /** orientation */ 
            );
            /**Returns   @brief  the referenced moving rigid body. This can be a @link NXOpen::Mechatronics::RigidBody NXOpen::Mechatronics::RigidBody@endlink .  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectRigidBody * RigidBody
            (
            );
            /**Returns   @brief  the port of the receiver.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int Port
            (
            );
            /**Sets   @brief  the port of the receiver.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPort
            (
                int port /** port */ 
            );
            /**  @brief  Query the available ports in the owning part.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void QueryPorts
            (
                std::vector<int> & ports /** Array of available ports. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
