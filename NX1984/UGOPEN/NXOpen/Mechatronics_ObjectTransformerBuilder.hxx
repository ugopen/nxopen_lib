#ifndef NXOpen_MECHATRONICS_OBJECTTRANSFORMERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_OBJECTTRANSFORMERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ObjectTransformerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ObjectTransformerBuilder;
    }
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectCollisionSensorList;
    }
    namespace Mechatronics
    {
        class SelectRigidBody;
    }
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _ObjectTransformerBuilderBuilder;
        class ObjectTransformerBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::ObjectTransformer NXOpen::Mechatronics::ObjectTransformer@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::ObjectTransformerCollection::CreateObjectTransformerBuilder  NXOpen::Mechatronics::ObjectTransformerCollection::CreateObjectTransformerBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ObjectTransformerBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            /** the transform option. */
            public: enum TransformSourceType
            {
                TransformSourceTypeAnyObject/** Any copied objects */,
                TransformSourceTypeOnlySelected/** Selected sources   */
            };

            private: ObjectTransformerBuilderImpl * m_objecttransformerbuilder_impl;
            private: friend class  _ObjectTransformerBuilderBuilder;
            protected: ObjectTransformerBuilder();
            public: ~ObjectTransformerBuilder();
            /**Returns  the object select. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectCollisionSensorList * CollisionSensor
            (
            );
            /**Returns  the option to transform source. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::ObjectTransformerBuilder::TransformSourceType SourceType
            (
            );
            /**Sets  the option to transform source. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSourceType
            (
                NXOpen::Mechatronics::ObjectTransformerBuilder::TransformSourceType srcType /** srctype */ 
            );
            /**Returns  the source select. This can be a @link NXOpen::Mechatronics::ObjectTransformer NXOpen::Mechatronics::ObjectTransformer@endlink 
                     or @link NXOpen::Mechatronics::ObjectSource NXOpen::Mechatronics::ObjectSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * Source
            (
            );
            /**Returns  the rigid body object. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectRigidBody * RigidBody
            (
            );
            /**Returns  the execute once per activation. If the executeOnce is true, then the transformation will
                    only happen once. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool ExecuteOnce
            (
            );
            /**Sets  the execute once per activation. If the executeOnce is true, then the transformation will
                    only happen once. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetExecuteOnce
            (
                bool executeOnce /** executeonce */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
