#ifndef NXOpen_DRAWINGS_REPORTBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_REPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ReportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class ReportBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class _ReportBuilderBuilder;
        class ReportBuilderImpl;
        /**
            Represents a @link Drawings::ReportBuilder Drawings::ReportBuilder@endlink .
            This class queries and sets settings specific to drafting data which will get converted to PMI.
             <br> To create a new instance of this class, use @link NXOpen::Drawings::ConvertToPMIBuilderManager::CreateReportBuilder  NXOpen::Drawings::ConvertToPMIBuilderManager::CreateReportBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  ReportBuilder : public NXOpen::Builder
        {
            private: ReportBuilderImpl * m_reportbuilder_impl;
            private: friend class  _ReportBuilderBuilder;
            protected: ReportBuilder();
            public: ~ReportBuilder();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
