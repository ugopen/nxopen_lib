#ifndef NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONPROJECTCAGEBUILDEREX_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONPROJECTCAGEBUILDEREX_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SubdivisionProjectCageBuilderEx.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Subdivision_SelectCageObjectData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionProjectCageBuilderEx;
        }
    }
    class Axis;
    class Builder;
    class CoordinateSystem;
    class Direction;
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    class Plane;
    class SelectDisplayableObjectList;
    namespace Features
    {
        namespace Subdivision
        {
            class _SubdivisionProjectCageBuilderExBuilder;
            class SubdivisionProjectCageBuilderExImpl;
            /** Represents a @link NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionProjectCageBuilderEx  NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionProjectCageBuilderEx @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            Mode </term> <description> 
             
            Planar </description> </item> 

            </list> 

             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SubdivisionProjectCageBuilderEx : public NXOpen::Builder
            {
                /** The type of projection */
                public: enum Types
                {
                    TypesToTarget/** Project on target */,
                    TypesToAverage/** Project using best fit plane or axis */,
                    TypesAlignNormal/** Align edges normal to the specified plane */
                };

                /** Target types */
                public: enum TargetTypes
                {
                    TargetTypesInferredPlane/** Plane inferred from selected cage objects */,
                    TargetTypesInferredAxis/** Axis inferred from selected cage objects */,
                    TargetTypesDynamicPlane/** XY plane of a coordinate system */,
                    TargetTypesPlane/** plane */ ,
                    TargetTypesAxis/** axis */ ,
                    TargetTypesCurve/** curve */ ,
                    TargetTypesFace/** face */ 
                };

                /** The type of projection direction. */
                public: enum ProjectionDirectionTypes
                {
                    ProjectionDirectionTypesAlongNormal/** Along normal */,
                    ProjectionDirectionTypesAlongVector/** Along vector */
                };

                /** Best fit mode */
                public: enum ModeOptions
                {
                    ModeOptionsLinear/** Fit a line */,
                    ModeOptionsPlanar/** Fit a plane */
                };

                private: SubdivisionProjectCageBuilderExImpl * m_subdivisionprojectcagebuilderex_impl;
                private: friend class  _SubdivisionProjectCageBuilderExBuilder;
                protected: SubdivisionProjectCageBuilderEx();
                public: ~SubdivisionProjectCageBuilderEx();
                /**Returns  the type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::Types Type
                (
                );
                /**Sets  the type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetType
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::Types type /** type */ 
                );
                /**Returns  the target type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::TargetTypes TargetType
                (
                );
                /**Sets  the target type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetTargetType
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::TargetTypes targetType /** targettype */ 
                );
                /**Returns  the mode 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::ModeOptions Mode
                (
                );
                /**Sets  the mode 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetMode
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::ModeOptions mode /** mode */ 
                );
                /**Returns  the objects to project 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * ObjectsToProject
                (
                );
                /**Returns  the target cage objects to infer a plane or axis from 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * TargetCageObjects
                (
                );
                /**Returns  the target dynamic plane 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * TargetDynamicPlane
                (
                );
                /**Sets  the target dynamic plane 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetTargetDynamicPlane
                (
                    NXOpen::CoordinateSystem * csys /** csys */ 
                );
                /** Update builder data based on target dynamic plane definition 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void OnTargetDynamicPlane
                (
                );
                /**Returns  the target plane 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * TargetPlane
                (
                );
                /**Sets  the target plane 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetTargetPlane
                (
                    NXOpen::Plane * plane /** plane */ 
                );
                /** Update builder data based on target plane definition 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void OnTargetPlane
                (
                );
                /**Returns  the target axis 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Axis * TargetAxis
                (
                );
                /** Update builder data based on target axis definition 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void OnTargetAxis
                (
                );
                /**Sets  the target axis 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetTargetAxis
                (
                    NXOpen::Axis * axis /** axis */ 
                );
                /**Returns  the target curves 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * TargetCurves
                (
                );
                /**Returns  the target faces or facet body 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * TargetFaces
                (
                );
                /**Returns  the type of projection on faces and facet body 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::ProjectionDirectionTypes ProjectionDirectionType
                (
                );
                /**Sets  the type of projection on faces and facet body 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetProjectionDirectionType
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilderEx::ProjectionDirectionTypes type /** type */ 
                );
                /**Returns  the projection direction vector 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * ProjectionVector
                (
                );
                /**Sets  the projection direction vector 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetProjectionVector
                (
                    NXOpen::Direction * vector /** vector */ 
                );
                /**Returns  the flag indicating if projection should be done in both the sides of vector direction. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ProjectBothSides
                (
                );
                /**Sets  the flag indicating if projection should be done in both the sides of vector direction. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void SetProjectBothSides
                (
                    bool projectBothSides /** projectbothsides */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
