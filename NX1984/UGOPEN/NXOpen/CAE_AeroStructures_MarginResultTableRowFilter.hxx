#ifndef NXOpen_CAE_AEROSTRUCTURES_MARGINRESULTTABLEROWFILTER_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MARGINRESULTTABLEROWFILTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_MarginResultTableRowFilter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_MarginResultTableDataProvider.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableRowFilter;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableRowFilterImpl;
            /**  @brief  A MarginResultTableRowFilter holds conditions which can be applied to a MarginResultTableRow.
                        The filter is used to create a MarginResultTableFilterQuery which is used to filter out rows from a 
                        result table or from another input query.      

               <br> To create a new instance of this class, use @link NXOpen::CAE::AeroStructures::MarginSolution::CreateMarginResultTableRowFilter  NXOpen::CAE::AeroStructures::MarginSolution::CreateMarginResultTableRowFilter @endlink  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MarginResultTableRowFilter : public NXOpen::TransientObject
            {
                /** Numeric comparison operator*/
                public: enum NumericComparisonOperator
                {
                    NumericComparisonOperatorEqual/** equal */ ,
                    NumericComparisonOperatorNotEqual/** not equal */ ,
                    NumericComparisonOperatorLessThan/** less than */ ,
                    NumericComparisonOperatorLessOrEqual/** less or equal */ ,
                    NumericComparisonOperatorGreaterThan/** greater than */ ,
                    NumericComparisonOperatorGreaterOrEqual/** greater or equal */ 
                };

                /** String comparison operator*/
                public: enum StringComparisonOperator
                {
                    StringComparisonOperatorEqual/** equal */ ,
                    StringComparisonOperatorNotEqual/** not equal */ ,
                    StringComparisonOperatorLessThan/** less than */ ,
                    StringComparisonOperatorLessOrEqual/** less or equal */ ,
                    StringComparisonOperatorGreaterThan/** greater than */ ,
                    StringComparisonOperatorGreaterOrEqual/** greater or equal */ ,
                    StringComparisonOperatorStartsWith/** starts with */ ,
                    StringComparisonOperatorEndsWith/** ends with */ ,
                    StringComparisonOperatorContains/** contains */ 
                };

                private: MarginResultTableRowFilterImpl * m_marginresulttablerowfilter_impl;
                /// \cond NX_NO_DOC 
                public: explicit MarginResultTableRowFilter(void *ptr);
                /// \endcond 
                /** Dispose 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~MarginResultTableRowFilter();
                /** Add a new condition on an integer column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::NumericComparisonOperator op /** op */ ,
                    int value /** value */ 
                );
                /** Add a new condition on a numeric column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::NumericComparisonOperator op /** op */ ,
                    double value /** value */ 
                );
                /** Add a new condition on a string column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::StringComparisonOperator op /** op */ ,
                    const NXString & value /** value */ 
                );
                /** Add a new condition on a string column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                void AddCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::StringComparisonOperator op /** op */ ,
                    const char * value /** value */ 
                );
                /** Add a new case-insensitive condition on a string column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddCiCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::StringComparisonOperator op /** op */ ,
                    const NXString & value /** value */ 
                );
                /** Add a new case-insensitive condition on a string column 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                void AddCiCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableDataProvider::ColumnType columnType /** the registered column type */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter::StringComparisonOperator op /** op */ ,
                    const char * value /** value */ 
                );
                /** Adds another filter to the conditions of the current filter
                                 if the current filter is a conjunction the new filter is logically AND-ed 
                                 if the current filter is a disjunction the new filter is logically OR-ed
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddCondition
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * otherFilter /** otherfilter */ 
                );
                /** Logically AND with the current filter 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AndWith
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * otherFilter /** otherfilter */ 
                );
                /** Logically OR with the current filter 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void OrWith
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * otherFilter /** otherfilter */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
