#ifndef NXOpen_STAGEMODEL_REUSEVIEWBUILDER_HXX_INCLUDED
#define NXOpen_STAGEMODEL_REUSEVIEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     StageModel_ReuseViewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libstagemodelopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace StageModel
    {
        class ReuseViewBuilder;
    }
    class Builder;
    class View;
    namespace StageModel
    {
        class _ReuseViewBuilderBuilder;
        class ReuseViewBuilderImpl;
        /** Represents a @link  NXOpen::StageModel::ReuseViewBuilder  NXOpen::StageModel::ReuseViewBuilder@endlink . <br> To create a new instance of this class, use @link NXOpen::StageModel::PmiManager::CreateReuseViewBuilder  NXOpen::StageModel::PmiManager::CreateReuseViewBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class STAGEMODELOPENCPPEXPORT  ReuseViewBuilder : public NXOpen::Builder
        {
            private: ReuseViewBuilderImpl * m_reuseviewbuilder_impl;
            private: friend class  _ReuseViewBuilderBuilder;
            protected: ReuseViewBuilder();
            public: ~ReuseViewBuilder();
            /**Returns  the associative setting 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: bool Associative
            (
            );
            /**Sets  the associative setting 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the include pmi setting 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: bool IncludePmi
            (
            );
            /**Sets  the include pmi setting 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: void SetIncludePmi
            (
                bool includePmi /** includepmi */ 
            );
            /** The selected views 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: void SetSelectedViews
            (
                const std::vector<NXOpen::View *> & selectedViews /** selectedviews */ 
            );
            /** The selected views 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : stage_model (" Stage Model") */
            public: void GetSelectedViews
            (
                std::vector<NXOpen::View *> & selectedViews /** selectedviews */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
