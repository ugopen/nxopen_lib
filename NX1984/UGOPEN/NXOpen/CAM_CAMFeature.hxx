#ifndef NXOpen_CAM_CAMFEATURE_HXX_INCLUDED
#define NXOpen_CAM_CAMFEATURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CAMFeature.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FBM_Feature.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CAMFeature;
    }
    namespace CAM
    {
        class CAMAttributeCollection;
    }
    namespace CAM
    {
        namespace FBM
        {
            class Feature;
        }
    }
    namespace CAM
    {
        class NCGroup;
    }
    namespace CAM
    {
        class Operation;
    }
    class CartesianCoordinateSystem;
    class DisplayableObject;
    class Face;
    namespace CAM
    {
        class _CAMFeatureBuilder;
        class CAMFeatureImpl;
        /** Represents a CAM Feature  <br> To obtain an instance of this class use @link NXOpen::CAM::FeatureRecognitionBuilder NXOpen::CAM::FeatureRecognitionBuilder@endlink   <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CAMFeature : public NXOpen::CAM::FBM::Feature
        {
            /** Update status of the feature */
            public: enum State
            {
                StateDeleted/** Feature is not valid */,
                StateChanged/** Feature is changed and out of date */,
                StateUpdated/** Feature is changed and updated */,
                StateUpToDate/** Feature is up to date */
            };

            /** Process status of the feature */
            public: enum ProcessStatus
            {
                ProcessStatusEmpty/** Feature has no operations */,
                ProcessStatusRegenerate/** One or more of the feature's operation toolpaths need to regenerate */,
                ProcessStatusIncomplete/** One or more of the feature's operation toolpaths are not completed */,
                ProcessStatusComplete/** The feature's operation toolpaths are complete */
            };

            private: CAMFeatureImpl * m_camfeature_impl;
            private: friend class  _CAMFeatureBuilder;
            protected: CAMFeature();
            public: ~CAMFeature();
            /**Returns  the name of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the update status of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CAMFeature::State Status
            (
            );
            /**Returns  the type name of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Type
            (
            );
            /**Returns  the source of the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString SourceType
            (
            );
            /** Get the faces associated with the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Face *> GetFaces
            (
            );
            /**Returns  the coordinate system of the CAMFeature 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CartesianCoordinateSystem * CoordinateSystem
            (
            );
            /** Get the process status of the CAMFeature in the context of a feature group 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CAMFeature::ProcessStatus GetProcessStatus
            (
                NXOpen::CAM::NCGroup * group /** feature group for the operation process context */
            );
            /** Get the feature groups in which the CAMFeature is classified 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAM::NCGroup *> GetGroups
            (
            );
            /** Get the operations manufacturing the CAMFeature 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAM::Operation *> GetOperations
            (
            );
            /** Approve changes on a CAMFeature 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ApproveChanges
            (
            );
            /** Get the geometry links associated with the feature 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DisplayableObject *> GetGeometry
            (
            );


            /** The attributes of the machining feature 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: NXOpen::CAM::CAMAttributeCollection *Attributes();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
