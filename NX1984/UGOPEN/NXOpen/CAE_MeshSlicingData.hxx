#ifndef NXOpen_CAE_MESHSLICINGDATA_HXX_INCLUDED
#define NXOpen_CAE_MESHSLICINGDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshSlicingData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MeshSlicingData;
    }
    namespace CAE
    {
        class _MeshSlicingDataBuilder;
        class MeshSlicingDataImpl;

        /// \cond NX_NO_DOC 
        /**  @brief  Represents an Additive Manufacturing 'MeshSlicingData' object  

           <br> This is a sub object for processing mesh slicer  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MeshSlicingData : public NXOpen::TaggedObject
        {
            /** enum for mesh slicing types*/

            /// \cond NX_NO_DOC 
            public: enum Type
            {
                TypeHorizontal/** horizontal */ ,
                TypePlanarParallel/** planar parallel */ ,
                TypeFreeform/** freeform */ 
            };


            /// \endcond 
            private: MeshSlicingDataImpl * m_meshslicingdata_impl;
            private: friend class  _MeshSlicingDataBuilder;
            protected: MeshSlicingData();
            public: ~MeshSlicingData();

            /// \cond NX_NO_DOC 
            /** Get mesh slicing type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshSlicingData::Type GetSlicingType
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
