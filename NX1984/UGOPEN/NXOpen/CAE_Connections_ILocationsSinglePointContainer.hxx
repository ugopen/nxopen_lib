#ifndef NXOpen_CAE_CONNECTIONS_ILOCATIONSSINGLEPOINTCONTAINER_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_ILOCATIONSSINGLEPOINTCONTAINER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_ILocationsSinglePointContainer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_CoordinatesLocation.hxx>
#include <NXOpen/CAE_Connections_NodeLocation.hxx>
#include <NXOpen/CAE_Connections_PointLocation.hxx>
#include <NXOpen/CAE_FENode.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class ILocationsSinglePointContainer;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class CoordinatesLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class NodeLocation;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class PointLocation;
        }
    }
    namespace CAE
    {
        class FENode;
    }
    class INXObject;
    class Point;
    namespace CAE
    {
        namespace Connections
        {
            /**  @brief  This class represents an Interface to the Locations parameters.  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ILocationsSinglePointContainer : public virtual NXOpen::INXObject
            {
                public: virtual ~ILocationsSinglePointContainer() {}
                /** Adds a node location to connection location list  @return  The node type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::NodeLocation * AddLocationNode
                (
                    int indexOfDefinition /** The index of definition  */,
                    NXOpen::CAE::FENode * node /** Node used for location */
                ) = 0;
                /** Adds a coordinates location to connection location list  @return  The created coordinates type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::CoordinatesLocation * AddLocationCoordinates
                (
                    int indexOfDefinition /** The index of definition  */,
                    const NXOpen::Point3d & coordinates /** Coordinates */
                ) = 0;
                /** Adds a point location to connection location list  @return  The created point type location 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual NXOpen::CAE::Connections::PointLocation * AddLocationPoint
                (
                    int indexOfDefinition /** The index of definition  */,
                    NXOpen::Point * point /** Point used for location creation */
                ) = 0;
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
