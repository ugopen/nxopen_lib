#ifndef NXOpen_ALP_ALPMANAGER_HXX_INCLUDED
#define NXOpen_ALP_ALPMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ALP_ALPManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ALP_ALPApplicationBuilder.hxx>
#include <NXOpen/ALP_GlobalSelectionBuilder.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/Session.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libalpopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ALP
    {
        class ALPManager;
    }
    class Session;
    namespace ALP
    {
        class ALPApplicationBuilder;
    }
    namespace ALP
    {
        class AddExternalResourceBuilder;
    }
    namespace ALP
    {
        class AddMfgFeaturesBuilder;
    }
    namespace ALP
    {
        class CaptureImageBuilder;
    }
    namespace ALP
    {
        class ConfigVariantConditionBuilder;
    }
    namespace ALP
    {
        class CycleTimeBuilder;
    }
    namespace ALP
    {
        class GlobalSelectionBuilder;
    }
    namespace ALP
    {
        class OperationBuilder;
    }
    namespace ALP
    {
        class PositionProductBuilder;
    }
    namespace ALP
    {
        class StationDetailingPreferencesBuilder;
    }
    namespace ALP
    {
        class VariantConditionBuilder;
    }
    class Part;
    namespace ALP
    {
        class ALPManagerImpl;
        /** Represents a manager of ALP builders  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class ALPOPENCPPEXPORT  ALPManager
        {
            private: ALPManagerImpl * m_alpmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ALPManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static ALPManager* theALPManager;
            /** Returns the ALPManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static ALPManager* GetALPManager(NXOpen::Session *owner);
            public: ~ALPManager();
            /**Consolidate Undo Marks 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: void ConsolidateUndoMarks
            (
                NXOpen::Session::UndoMarkId undoMarkId /** undomarkid */ 
            );
            /** Create the application builder  @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::ALPApplicationBuilder * CreateApplicationBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Application builder is return 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::ALPApplicationBuilder * GetApplicationBuilder
            (
            );
            /** Create global selection builder 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::GlobalSelectionBuilder * CreateGlobalSelectionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a capture image Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::CaptureImageBuilder * CreateCaptureImageBuilder
            (
                NXOpen::Part * part /** part */ 
            );

            /// \cond NX_NO_DOC 
            /** Creates a station detailing preferences Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::StationDetailingPreferencesBuilder * CreateStationDetailingPreferencesBuilder
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 
            /** Creates a Cycle Time Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::CycleTimeBuilder * CreateCycleTimeBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Operation Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::OperationBuilder * CreateOperationBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Position Product Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::PositionProductBuilder * CreatePositionProductBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Add MFG Features Dialoge Builder @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::AddMfgFeaturesBuilder * CreateAddMfgFeaturesBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates Variant conditions Dialoge Builder @return  
             <br>  Created in NX1938.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::VariantConditionBuilder * CreateVariantConditionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates Config Variant Conditions Dialoge Builder @return  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::ConfigVariantConditionBuilder * CreateConfigVariantConditionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates Add External Resource Builder @return  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::ALP::AddExternalResourceBuilder * CreateAddExternalResourceBuilder
            (
                NXOpen::Part * part /** part */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
