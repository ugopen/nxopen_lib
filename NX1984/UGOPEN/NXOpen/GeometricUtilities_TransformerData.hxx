#ifndef NXOpen_GEOMETRICUTILITIES_TRANSFORMERDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_TRANSFORMERDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_TransformerData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class TransformerData;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _TransformerDataBuilder;
        class TransformerDataImpl;
        /** Transformation and orientation tool.
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  TransformerData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Type of objects. */
            public: enum ObjectType
            {
                ObjectTypeNone/** none */ ,
                ObjectTypeOrigin/** origin */ ,
                ObjectTypeTranslationX/** translation x */ ,
                ObjectTypeTranslationY/** translation y */ ,
                ObjectTypeTranslationZ/** translation z */ ,
                ObjectTypeRotationXY/** rotation xy */ ,
                ObjectTypeRotationYZ/** rotation yz */ ,
                ObjectTypeRotationXZ/** rotation xz */ ,
                ObjectTypeScaleX/** scale x */ ,
                ObjectTypeScaleY/** scale y */ ,
                ObjectTypeScaleZ/** scale z */ ,
                ObjectTypeDirectionX/** direction x */ ,
                ObjectTypeDirectionY/** direction y */ ,
                ObjectTypeDirectionZ/** direction z */ ,
                ObjectTypePlaneXY/** plane xy */ ,
                ObjectTypePlaneYZ/** plane yz */ ,
                ObjectTypePlaneXZ/** plane xz */ ,
                ObjectTypeArcXY/** arc xy */ ,
                ObjectTypeArcYZ/** arc yz */ ,
                ObjectTypeArcXZ/** arc xz */ 
            };

            private: TransformerDataImpl * m_transformerdata_impl;
            private: friend class  _TransformerDataBuilder;
            protected: TransformerData();
            public: ~TransformerData();
            /** Reverses the axis. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Reverse
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType axisType /** axistype */ 
            );
            /** Sets current coordinate system as reference coordinate system for
                        the transformation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void StartTransformation
            (
            );
            /** Updates tool upon movement of the point representing origin. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateOnOriginMove
            (
            );
            /** Translates the tool. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Translate
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType axisType /** axistype */ ,
                double distance /** distance */ 
            );
            /** Rotates the tool. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Rotate
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType axisType /** axistype */ ,
                double angle /** angle */ 
            );
            /** Sets the scale factor. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Scale
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType axisType /** axistype */ ,
                double factor /** factor */ 
            );
            /** Sets a component of the tool to be active. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Activate
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType objectType /** objecttype */ 
            );
            /** Repositions the tool at a coordinate system. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Reposition
            (
                const NXOpen::Point3d & origin /** origin */ ,
                const NXOpen::Matrix3x3 & matrix /** matrix */ 
            );
            /** Repositions the tool by changing its origin. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void RepositionByOrigin
            (
                const NXOpen::Point3d & origin /** origin */ 
            );
            /** Reorient the tool by aligning it to a coordinate system. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void ReorientByCoordinateSystem
            (
                const NXOpen::Matrix3x3 & matrix /** matrix */ 
            );
            /** Reorient the tool by changing its axis direction. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void ReorientByDirection
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType objectType /** objecttype */ ,
                const NXOpen::Vector3d & direction /** direction */ 
            );
            /** Repositions the tool by changing its plane. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void RepositionByPlane
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType objectType /** objecttype */ ,
                const NXOpen::Point3d & planeOrigin /** planeorigin */ ,
                const NXOpen::Vector3d & planeNormal /** planenormal */ 
            );
            /** Reorient the tool by aligning it to work coordinate system 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void AlignToWorkCoordinateSystem
            (
            );
            /** Reorient the tool by aligning it to absolute coordinate system 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void AlignToAbsoluteCoordinateSystem
            (
            );
            /** Sets a component of the tool using which transformation is started. It is possible
                        that user starts transformation without activating a tool component. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTransformationObject
            (
                NXOpen::GeometricUtilities::TransformerData::ObjectType objectType /** objecttype */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
