#ifndef NXOpen_FEATURES_SHIPDESIGN_PILLARSYSTEMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PILLARSYSTEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PillarSystemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_EndCutBuilder.hxx>
#include <NXOpen/Features_ShipDesign_PillarBuilder.hxx>
#include <NXOpen/Features_ShipDesign_PlateStockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_PointPairBuilder.hxx>
#include <NXOpen/Features_ShipDesign_ShipNamesBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/Features_ShipDesign_ProfileSystemBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PillarSystemBuilder;
        }
    }
    class Direction;
    class Expression;
    namespace Features
    {
        namespace ShipDesign
        {
            class EndCutBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PlateStockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PointPairBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ProfileSystemBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipNamesBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    class NXObjectList;
    class SelectNXObjectList;
    class SelectTaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _PillarSystemBuilderBuilder;
            class PillarSystemBuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::PillarSystem NXOpen::Features::ShipDesign::PillarSystem@endlink  builder which is used to create or edit a pillar system feature.
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreatePillarSystemBuilder  NXOpen::Features::ShipCollection::CreatePillarSystemBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            EndCapPlateStock.KnuckleRatio </term> <description> 
             
            3.0 </description> </item> 

            <item><term> 
             
            EndCapPlateStock.KnuckleSmoothAngle </term> <description> 
             
            3.0 </description> </item> 

            <item><term> 
             
            EndCapPlateStock.MaterialOption </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndCapPlateStock.OppositeThickness.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            EndCapPlateStock.RestrictThicknessToMaterial </term> <description> 
             
            true </description> </item> 

            <item><term> 
             
            EndCapPlateStock.ThickenOption </term> <description> 
             
            SingleSided </description> </item> 

            <item><term> 
             
            EndCapPlateStock.Thickness.Value </term> <description> 
             
            10 (millimeters part), 0.5 (inches part) </description> </item> 

            <item><term> 
             
            EndCapPlateStock.ThicknessSourceOption </term> <description> 
             
            List </description> </item> 

            <item><term> 
             
            EndEndCut.ConnectionType </term> <description> 
             
            Connected </description> </item> 

            <item><term> 
             
            EndEndCut.DraftAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndEndCut.DraftOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            EndEndCut.DraftType </term> <description> 
             
            Trim </description> </item> 

            <item><term> 
             
            EndEndCut.EndFaceType </term> <description> 
             
            NeatTrim </description> </item> 

            <item><term> 
             
            EndEndCut.LimitType </term> <description> 
             
            Value </description> </item> 

            <item><term> 
             
            EndEndCut.Offset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            EndEndCut.SelectionType </term> <description> 
             
            FacesWithAttributes </description> </item> 

            <item><term> 
             
            EndEndCut.ShearAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndEndCut.TiltAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            OrientationAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SectionType </term> <description> 
             
            Profile </description> </item> 

            </list> 

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PillarSystemBuilder : public NXOpen::Features::ShipDesign::ProfileSystemBuilder
            {
                /** SpreadSheet Type  Profile or BuiltUp */
                public: enum StockSectionType
                {
                    StockSectionTypeProfile/** Profile Stock */,
                    StockSectionTypeBuiltUp/** Built Up Stock */
                };

                /** Used to specify how the pillar system is defined. */
                public: enum Types
                {
                    TypesShipStructure/** ship structure */ ,
                    TypesPoints/** points */ 
                };

                private: PillarSystemBuilderImpl * m_pillarsystembuilder_impl;
                private: friend class  _PillarSystemBuilderBuilder;
                protected: PillarSystemBuilder();
                public: ~PillarSystemBuilder();
                /**Returns  the section type (profile or plate) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarSystemBuilder::StockSectionType SectionType
                (
                );
                /**Sets  the section type (profile or plate) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetSectionType
                (
                    NXOpen::Features::ShipDesign::PillarSystemBuilder::StockSectionType sectionType /** sectiontype */ 
                );
                /**Returns  the stock data used to define the stock information of the stiffener.
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * StockData
                (
                );
                /**Returns  the stock used to build the builtUp from. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * BuiltUpStock
                (
                );
                /**Returns  the ship structure to intersect with each other that defines the start of a pillar. Only used when Type is Features.ShipDesign.PillarSystemBuilder.Types.ShipStructure. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * IntersectingShipStructure
                (
                );
                /**Returns  the ship sructure that defines the end of the pillar. Only used when Type is Features.ShipDesign.PillarSystemBuilder.Types.ShipStructure. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * LimitingShipStructure
                (
                );
                /**Returns  the direction of the pillar. Only used when Type is Features.ShipDesign.PillarSystemBuilder.Types.ShipStructure. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * Direction
                (
                );
                /**Sets  the direction of the pillar. Only used when Type is Features.ShipDesign.PillarSystemBuilder.Types.ShipStructure. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetDirection
                (
                    NXOpen::Direction * direction /** direction */ 
                );
                /**Returns  the list of pairs of points that define the ends of the pillars. Only used when Type is Features.ShipDesign.PillarSystemBuilder.Types.Points. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXObjectList * PointPairList
                (
                );
                /**Returns  the angle at which to orient the stock shape. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * OrientationAngle
                (
                );
                /**Returns  the type of input used to define the pillar location. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarSystemBuilder::Types Type
                (
                );
                /**Sets  the type of input used to define the pillar location. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetType
                (
                    NXOpen::Features::ShipDesign::PillarSystemBuilder::Types type /** type */ 
                );
                /** Creates a @link NXOpen::Features::ShipDesign::PointPairBuilder NXOpen::Features::ShipDesign::PointPairBuilder@endlink . 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Features::ShipDesign::PointPairBuilder * CreatePointPairBuilder
                (
                );
                /**Returns  the orientation line, used only if the creation method is "Specify Line". 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * OrientationLine
                (
                );
                /**Returns  the Ship Names builder, used to assign names to the Pillar Systems created. 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipNamesBuilder * ShipNames
                (
                );
                /**Returns  the reverse orientation direction  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseOrientationDirection
                (
                );
                /**Sets  the reverse orientation direction  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetReverseOrientationDirection
                (
                    bool reverseOrientationDirection /** reverseorientationdirection */ 
                );
                /**Returns  the reverse reference direction  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseReferenceDirection
                (
                );
                /**Sets  the reverse reference direction  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetReverseReferenceDirection
                (
                    bool reverseReferenceDirection /** reversereferencedirection */ 
                );
                /**Returns  the anchor point. 
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : None */
                public: int AnchorPoint
                (
                );
                /**Sets  the anchor point. 
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetAnchorPoint
                (
                    int anchorPoint /** anchorpoint */ 
                );
                /** Update anchor points 
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : None */
                public: void PopulateAnchorPointList
                (
                );
                /** The list of available anchor points  @return  Array of available anchor point names.
                                                                    These names are read from the current reuse sketch  
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetAvailableAnchorPointNames
                (
                );
                /**Returns  the indication of whether to build a solid for the pillar system or just the curve. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BuildSolid
                (
                );
                /**Sets  the indication of whether to build a solid for the pillar system or just the curve. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetBuildSolid
                (
                    bool buildSolid /** buildsolid */ 
                );
                /**Returns  the stock data used to define the stock information of the start cap.
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * StartCapStock
                (
                );
                /**Returns  the stock data used to define the stock information of the end cap.
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * EndCapStock
                (
                );
                /**Returns  the plate stock builder, which defines the seam material, grade, and thickness
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PlateStockBuilder * StartCapPlateStock
                (
                );
                /**Returns  the plate stock builder, which defines the seam material, grade, and thickness
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PlateStockBuilder * EndCapPlateStock
                (
                );
                /**Returns  the start end cut 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * StartEndCut
                (
                );
                /**Returns  the end end cut 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * EndEndCut
                (
                );
                /**Returns  the start cap thickness. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StartCapThickness
                (
                );
                /**Returns  the end cap thickness. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * EndCapThickness
                (
                );
                /**Returns  the start treatment type: Endcut or Cap 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::EndTreatmentTypes StartTreatmentType
                (
                );
                /**Sets  the start treatment type: Endcut or Cap 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetStartTreatmentType
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::EndTreatmentTypes startTreatmentType /** starttreatmenttype */ 
                );
                /**Returns  the end treatment type: Endcut or Cap 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::EndTreatmentTypes EndTreatmentType
                (
                );
                /**Sets  the end treatment type: Endcut or Cap 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetEndTreatmentType
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::EndTreatmentTypes endTreatmentType /** endtreatmenttype */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
