#ifndef NXOpen_WELD_EXPORTWELDBUILDER_HXX_INCLUDED
#define NXOpen_WELD_EXPORTWELDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_ExportWeldBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class ExportWeldBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Weld
    {
        class _ExportWeldBuilderBuilder;
        class ExportWeldBuilderImpl;
        /** Represents a ExportWeldBuilder class  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateExportWeldBuilder  NXOpen::Weld::WeldManager::CreateExportWeldBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AttributeOrigin </term> <description> 
         
        Object </description> </item> 

        <item><term> 
         
        Output </term> <description> 
         
        IntermediateFile </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  ExportWeldBuilder : public NXOpen::Builder
        {
            /** the Attribute Origin enum */
            public: enum AttributeOriginType
            {
                AttributeOriginTypeObject/** object */ ,
                AttributeOriginTypeDf/** df */ 
            };

            /** the Output Type enum */
            public: enum OutputType
            {
                OutputTypeIntermediateFile/** intermediate file */ ,
                OutputTypeInformationWindow/** information window */ 
            };

            private: ExportWeldBuilderImpl * m_exportweldbuilder_impl;
            private: friend class  _ExportWeldBuilderBuilder;
            protected: ExportWeldBuilder();
            public: ~ExportWeldBuilder();
            /**Returns  the weld points to be exported to CSV file 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::SelectNXObjectList * WeldPoints
            (
            );
            /**Returns  the connected part attribute toggle to control if read connected part attributes from weld points 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: bool ConnectedPartAttrToggle
            (
            );
            /**Sets  the connected part attribute toggle to control if read connected part attributes from weld points 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetConnectedPartAttrToggle
            (
                bool connectedPartAttrToggle /** Connected part attribute toggle value */
            );
            /**Returns  the option indicating where the attributes are read from, welding object or corresponding Design Feature.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") OR structure_weld ("STRUCTURE WELD") */
            public: NXOpen::Weld::ExportWeldBuilder::AttributeOriginType AttributeOrigin
            (
            );
            /**Sets  the option indicating where the attributes are read from, welding object or corresponding Design Feature.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") OR structure_weld ("STRUCTURE WELD") */
            public: void SetAttributeOrigin
            (
                NXOpen::Weld::ExportWeldBuilder::AttributeOriginType attributeOrigin /** attributeorigin */ 
            );
            /** Get the attributes of weld points to be exported to CSV file  @return  Exported attributes string 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: std::vector<NXString> GetExportedAttributes
            (
            );
            /** Set the attributes of weld points to be exported to CSV file 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetExportedAttributes
            (
                std::vector<NXString> & exportedAttributes /** Exported attributes string */
            );
            /** Get the connected part attributes of weld points  @return  Connected part attributes string 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: std::vector<NXString> GetConnectedPartAttributes
            (
            );
            /** Set the connected part attributes of weld points 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetConnectedPartAttributes
            (
                std::vector<NXString> & connectedPartAttributes /** Connected part attributes string */
            );
            /**Returns  the option defining where to write the output data. Data will be written to either a comma separated value file or the output window. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::ExportWeldBuilder::OutputType Output
            (
            );
            /**Sets  the option defining where to write the output data. Data will be written to either a comma separated value file or the output window. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetOutput
            (
                NXOpen::Weld::ExportWeldBuilder::OutputType outputType /** outputtype */ 
            );
            /**Returns  the CSV file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXString CsvFileName
            (
            );
            /**Sets  the CSV file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetCsvFileName
            (
                const NXString & csvFileName /** CSV file name */
            );
            /**Sets  the CSV file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetCsvFileName
            (
                const char * csvFileName /** CSV file name */
            );
            /**Returns  the template file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXString TemplateFileName
            (
            );
            /**Sets  the template file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTemplateFileName
            (
                const NXString & templateFileName /** Template file name */
            );
            /**Sets  the template file name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetTemplateFileName
            (
                const char * templateFileName /** Template file name */
            );
            /** Read attributes from selected welds and save to exported attributes and connected part attributes 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReadAttributesFromWelds
            (
            );
            /** Save exported attributes as default template. Before use it, you must set template file name. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SaveAsDefault
            (
            );
            /** Restore default template to update exported attributes. Before use it, you must set template file name. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void RestoreDefault
            (
            );
            /** Save exported attributes to a template file. Before use it, you must set template file name. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SaveToFile
            (
            );
            /** Open a template file to update exported attributes. Before use it, you must set template file name. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void OpenFromFile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
