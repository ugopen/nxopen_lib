#ifndef NXOpen_PARTFAMILY_INSTANCEDEFINITION_HXX_INCLUDED
#define NXOpen_PARTFAMILY_INSTANCEDEFINITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartFamily_InstanceDefinition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/PartFamily_FamilyAttribute.hxx>
#include <NXOpen/libnxopencpp_partfamily_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PartFamily
    {
        class InstanceDefinition;
    }
    namespace PartFamily
    {
        class FamilyAttribute;
    }
    namespace PartFamily
    {
        class InstanceDefinitionImpl;
        /** This class repesents a part family table record (or instance definition on the template) and is 
                created/deleted by @link PartFamily::TemplateManager PartFamily::TemplateManager@endlink .         
              <br> Use @link PartFamily::TemplateManager::AddInstanceDefinition PartFamily::TemplateManager::AddInstanceDefinition@endlink  to create a new instance defintion.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_PARTFAMILYEXPORT  InstanceDefinition : public NXOpen::TransientObject
        {
            private: InstanceDefinitionImpl * m_instancedefinition_impl;
            /// \cond NX_NO_DOC 
            public: explicit InstanceDefinition(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                        is called, it is illegal to use the object.  In .NET, this method
                        is automatically called when the object is deleted by the garbage collector
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~InstanceDefinition();
            /** Set the value for passed atribute with the value
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetValueOfAttribute
            (
                NXOpen::PartFamily::FamilyAttribute * partFamAttr /** partfamattr */ ,
                const NXString & value /** value */ 
            );
            /** Set the value for passed atribute with the value
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetValueOfAttribute
            (
                NXOpen::PartFamily::FamilyAttribute * partFamAttr /** partfamattr */ ,
                const char * value /** value */ 
            );
            /** Get the value for passed atribute
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString GetValueOfAttribute
            (
                NXOpen::PartFamily::FamilyAttribute * partFamAttr /** partfamattr */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
