#ifndef NXOpen_LINEDESIGNER_CREATEFACTORYELEMENTBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_CREATEFACTORYELEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_CreateFactoryElementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class CreateFactoryElementBuilder;
    }
    class Builder;
    class Point;
    namespace LineDesigner
    {
        class _CreateFactoryElementBuilderBuilder;
        class CreateFactoryElementBuilderImpl;
        /**
            Represents a @link LineDesigner::CreateFactoryElement LineDesigner::CreateFactoryElement@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateCreateFactoryElementBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateCreateFactoryElementBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FactoryType </term> <description> 
         
        Plant </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  CreateFactoryElementBuilder : public NXOpen::Builder
        {
            /** This enum is providing possible element types */
            public: enum TypeAPI
            {
                TypeAPIPlant/** Represents the Plant type */,
                TypeAPIStation/** Represents the Station type */,
                TypeAPILine/** Represents the Line type */,
                TypeAPIZone/** Represents the Zone type */,
                TypeAPIPartition/** Represents the Partition type */
            };

            private: CreateFactoryElementBuilderImpl * m_createfactoryelementbuilder_impl;
            private: friend class  _CreateFactoryElementBuilderBuilder;
            protected: CreateFactoryElementBuilder();
            public: ~CreateFactoryElementBuilder();
            /**Returns  an API that gets name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  an API that gets name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  an API that gets name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  an API that gets element type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CreateFactoryElementBuilder::TypeAPI FactoryType
            (
            );
            /**Sets  an API that gets element type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetFactoryType
            (
                NXOpen::LineDesigner::CreateFactoryElementBuilder::TypeAPI factoryType /** factorytype */ 
            );
            /**Returns  an API that gets position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * Position
            (
            );
            /**Sets  an API that gets position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetPosition
            (
                NXOpen::Point * position /** position */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
