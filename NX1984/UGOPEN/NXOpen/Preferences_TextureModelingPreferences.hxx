#ifndef NXOpen_PREFERENCES_TEXTUREMODELINGPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_TEXTUREMODELINGPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_TextureModelingPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class TextureModelingPreferences;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class TextureModelingPreferencesImpl;
        /** Represents the set of Texture Modeling preferences applicable to entire session <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::SessionPreferences  NXOpen::Preferences::SessionPreferences @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  TextureModelingPreferences
        {
            private: TextureModelingPreferencesImpl * m_texturemodelingpreferences_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit TextureModelingPreferences(NXOpen::Preferences::SessionPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~TextureModelingPreferences();
            /**Returns  the U line color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int ULineColor
            (
            );
            /**Sets  the U line color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetULineColor
            (
                int color /** color */ 
            );
            /**Returns  the U line font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectFont ULineFont
            (
            );
            /**Sets  the U line font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetULineFont
            (
                NXOpen::DisplayableObject::ObjectFont font /** font */ 
            );
            /**Returns  the U line width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectWidth ULineWidth
            (
            );
            /**Sets  the U line width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetULineWidth
            (
                NXOpen::DisplayableObject::ObjectWidth width /** width */ 
            );
            /**Returns  the V line color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int VLineColor
            (
            );
            /**Sets  the V line color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetVLineColor
            (
                int color /** color */ 
            );
            /**Returns  the V line font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectFont VLineFont
            (
            );
            /**Sets  the V line font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetVLineFont
            (
                NXOpen::DisplayableObject::ObjectFont font /** font */ 
            );
            /**Returns  the V line width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectWidth VLineWidth
            (
            );
            /**Sets  the V line width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetVLineWidth
            (
                NXOpen::DisplayableObject::ObjectWidth width /** width */ 
            );
            /**Returns  the Rip Edges color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int RipEdgesColor
            (
            );
            /**Sets  the Rip Edges color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetRipEdgesColor
            (
                int color /** color */ 
            );
            /**Returns  the Rip Edges font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectFont RipEdgesFont
            (
            );
            /**Sets  the Rip Edges font. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetRipEdgesFont
            (
                NXOpen::DisplayableObject::ObjectFont font /** font */ 
            );
            /**Returns  the Rip Edges width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject::ObjectWidth RipEdgesWidth
            (
            );
            /**Sets  the Rip Edges width. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetRipEdgesWidth
            (
                NXOpen::DisplayableObject::ObjectWidth width /** width */ 
            );
            /**Returns  the Show 2D Grid. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool Show2DGrid
            (
            );
            /**Sets  the Show 2D Grid. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetShow2DGrid
            (
                bool show /** show */ 
            );
            /**Returns  the Show 3D Grid. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool Show3DGrid
            (
            );
            /**Sets  the Show 3D Grid. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetShow3DGrid
            (
                bool show /** show */ 
            );
            /** Displays distortion map. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void DisplayDistortion
            (
                bool display /** display */ 
            );
            /**Returns  the UV patch color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int UVPatchColor
            (
            );
            /**Sets  the UV patch color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetUVPatchColor
            (
                int color /** color */ 
            );
            /**Returns  the reversed UV patch color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int ReversedUVPatchColor
            (
            );
            /**Sets  the reversed UV patch color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetReversedUVPatchColor
            (
                int color /** color */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
