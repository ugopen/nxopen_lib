#ifndef NXOpen_FEATURES_CONNECTLATTICES2BUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_CONNECTLATTICES2BUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ConnectLattices2Builder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ConnectLattices2Builder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _ConnectLattices2BuilderBuilder;
        class ConnectLattices2BuilderImpl;
        /**
            Represents a @link Features::ConnectLattices2 Features::ConnectLattices2@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::LatticeFeatureCollection::CreateConnectLattices2Builder  NXOpen::Features::LatticeFeatureCollection::CreateConnectLattices2Builder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BallsAndBlendsOption </term> <description> 
         
        KeepBallsAndRemoveBlends </description> </item> 

        <item><term> 
         
        MaxCheckingDistance.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        RodDiameter.Value </term> <description> 
         
        1 (millimeters part), 0.04 (inches part) </description> </item> 

        <item><term> 
         
        RodSizeOption </term> <description> 
         
        Variable </description> </item> 

        <item><term> 
         
        RodsPerVertex </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        TessellationFactor </term> <description> 
         
        0.5 </description> </item> 

        <item><term> 
         
        TessellationOption </term> <description> 
         
        UseAverage </description> </item> 

        </list> 

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ConnectLattices2Builder : public NXOpen::Features::FeatureBuilder
        {
            /** These represent the options for defining rod diameters */
            public: enum RodsizeOptions
            {
                RodsizeOptionsVariable/** Variable */,
                RodsizeOptionsFixed/** Fixed */
            };

            /** These represent the options to set the balls and blends */
            public: enum BallsAndBlendsOptions
            {
                BallsAndBlendsOptionsKeepBallsAndRemoveBlends/** keep balls and remove blends */ ,
                BallsAndBlendsOptionsRemoveBallsAndUseMinimumBlends/** remove balls and use minimum blends */ ,
                BallsAndBlendsOptionsRemoveBallsAndUseAverageBlends/** remove balls and use average blends */ ,
                BallsAndBlendsOptionsRemoveBallsAndUseMaximumBlends/** remove balls and use maximum blends */ 
            };

            /** These represent the options to set the tessellation factor */
            public: enum TessellationOptions
            {
                TessellationOptionsUseFinest/** use finest */ ,
                TessellationOptionsUseAverage/** use average */ ,
                TessellationOptionsUseCoarsest/** use coarsest */ ,
                TessellationOptionsSpecifyNew/** specify new */ 
            };

            private: ConnectLattices2BuilderImpl * m_connectlattices2builder_impl;
            private: friend class  _ConnectLattices2BuilderBuilder;
            protected: ConnectLattices2Builder();
            public: ~ConnectLattices2Builder();
            /**Returns  the lattice 1 which will be connected with lattice 2 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Lattice1
            (
            );
            /**Returns  the lattice 2 which will be connected with lattice 1 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Lattice2
            (
            );
            /**Returns  the max checking distance which is used to find the near vertices for connection
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxCheckingDistance
            (
            );
            /**Returns  the number of rods per vertex created by connecting.
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int RodsPerVertex
            (
            );
            /**Sets  the number of rods per vertex created by connecting.
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetRodsPerVertex
            (
                int numRods /** numrods */ 
            );
            /**Returns  the option to define rod size
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ConnectLattices2Builder::RodsizeOptions RodSizeOption
            (
            );
            /**Sets  the option to define rod size
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetRodSizeOption
            (
                NXOpen::Features::ConnectLattices2Builder::RodsizeOptions rodSizeOption /** rodsizeoption */ 
            );
            /**Returns  the rod diameter 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RodDiameter
            (
            );
            /**Returns  @brief  the option to define organic blending  

             
             <br>  Created in NX1957.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ConnectLattices2Builder::BallsAndBlendsOptions BallsAndBlendsOption
            (
            );
            /**Sets  @brief  the option to define organic blending  

             
             <br>  Created in NX1957.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetBallsAndBlendsOption
            (
                NXOpen::Features::ConnectLattices2Builder::BallsAndBlendsOptions ballsAndBlendsOption /** ballsandblendsoption */ 
            );
            /**Returns  the option to define tessellation 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ConnectLattices2Builder::TessellationOptions TessellationOption
            (
            );
            /**Sets  the option to define tessellation 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetTessellationOption
            (
                NXOpen::Features::ConnectLattices2Builder::TessellationOptions tessellationOption /** tessellationoption */ 
            );
            /**Returns   @brief the tessellation factor of the lattice creation. 

             
                     
                    A tessellation tolerance specifies the maximum deviation between the ideal rod and their final tessellated 
                    representation of the lattice body. Since the result heavily depends on the relation between rod diameter 
                    and tessellation tolerance, the tessellation factor is only a unitless factor. The actual tessellation tolerance 
                    will be determined by rod diameters. 
                     
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: double TessellationFactor
            (
            );
            /**Sets   @brief the tessellation factor of the lattice creation. 

             
                     
                    A tessellation tolerance specifies the maximum deviation between the ideal rod and their final tessellated 
                    representation of the lattice body. Since the result heavily depends on the relation between rod diameter 
                    and tessellation tolerance, the tessellation factor is only a unitless factor. The actual tessellation tolerance 
                    will be determined by rod diameters. 
                     
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetTessellationFactor
            (
                double tessellationFactor /** tessellationfactor */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
