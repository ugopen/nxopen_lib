#ifndef NXOpen_TOOLING_RELIEFDESIGNBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_RELIEFDESIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ReliefDesignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ReliefDesignBuilder;
    }
    class Builder;
    class Expression;
    class Face;
    class ScCollector;
    class Section;
    class SelectBodyList;
    class SelectNXObject;
    namespace Tooling
    {
        class _ReliefDesignBuilderBuilder;
        class ReliefDesignBuilderImpl;
        /**  Represents a @link NXOpen::Tooling::ReliefDesignBuilder NXOpen::Tooling::ReliefDesignBuilder@endlink 
                  Relief Design is to cut relief pocket for forming region .  <br> To create a new instance of this class, use @link NXOpen::Tooling::ReliefDesignCollection::CreateReliefDesignBuilder  NXOpen::Tooling::ReliefDesignCollection::CreateReliefDesignBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Clearance </term> <description> 
         
        0.1 </description> </item> 

        <item><term> 
         
        CreateEditMethod </term> <description> 
         
        BBox </description> </item> 

        <item><term> 
         
        CreateLocation </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DeleteMethod </term> <description> 
         
        DeleteSelectedInstance </description> </item> 

        <item><term> 
         
        HideReliefStatus </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        NumberOfCopy </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ReliefHeight.Value </term> <description> 
         
        5 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        ReliefRadius.Value </term> <description> 
         
        1 (millimeters part), 0.1 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ReliefDesignBuilder : public NXOpen::Builder
        {
            /** The relief design type. */
            public: enum Types
            {
                TypesCreate/** Create operation */,
                TypesEdit/** Edit operation */,
                TypesCopy/** Copy operation */,
                TypesDelete/**  Delete operation */
            };

            /** The relief design creation method. */
            public: enum Method
            {
                MethodBBox/** Boundbox method */,
                MethodUDef/** User Defined method */
            };

            /** The relief design delete method. */
            public: enum MethodOfDelete
            {
                MethodOfDeleteDeleteSelectedInstance/** Delete selected instance */,
                MethodOfDeleteDeleteAllInstances/** Delete all instances */
            };

            private: ReliefDesignBuilderImpl * m_reliefdesignbuilder_impl;
            private: friend class  _ReliefDesignBuilderBuilder;
            protected: ReliefDesignBuilder();
            public: ~ReliefDesignBuilder();
            /**Returns  the type of relief design. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ReliefDesignBuilder::Types Type
            (
            );
            /**Sets  the type of relief design. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::ReliefDesignBuilder::Types type /** type */ 
            );
            /**Returns  the create and edit method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ReliefDesignBuilder::Method CreateEditMethod
            (
            );
            /**Sets  the create and edit method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateEditMethod
            (
                NXOpen::Tooling::ReliefDesignBuilder::Method createEditMethod /** createeditmethod */ 
            );
            /**Returns  the relief used to copy. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * CopyRelief
            (
            );
            /**Returns  the face used to create bounding box or wave to workpart as reference for creating user defined relief. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ReliefFace
            (
            );
            /**Returns  the sketched curve profile used for creating or editing user defined relief. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * CurveSuperSelect
            (
            );
            /**Returns  the clearance of KF bounding box. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double Clearance
            (
            );
            /**Sets  the clearance of KF bounding box. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetClearance
            (
                double clearance /** clearance */ 
            );
            /**Returns  the relief radius. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReliefRadius
            (
            );
            /**Returns  the relief height. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReliefHeight
            (
            );
            /**Returns  the extrude start of the user defined relief. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReliefStart
            (
            );
            /**Returns  the first clearance to create handle to control -X direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance1
            (
            );
            /**Returns  the second clearance to create handle to control -Y direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance2
            (
            );
            /**Returns  the third clearance to create handle to control -Z direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance3
            (
            );
            /**Returns  the fourth clearance to create handle to control +X direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance4
            (
            );
            /**Returns  the fifth clearance to create handle to control +Y direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance5
            (
            );
            /**Returns  the sixth clearance to create handle to control +Z direction clearance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance6
            (
            );
            /**Returns  the selected relief to edit. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * SelectionReliefToEdit
            (
            );
            /**Returns  the number of relief to be copied. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfCopy
            (
            );
            /**Sets  the number of relief to be copied. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetNumberOfCopy
            (
                int numberOfCopy /** numberofcopy */ 
            );
            /**Returns  the delete method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ReliefDesignBuilder::MethodOfDelete DeleteMethod
            (
            );
            /**Sets  the delete method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDeleteMethod
            (
                NXOpen::Tooling::ReliefDesignBuilder::MethodOfDelete deleteMethod /** deletemethod */ 
            );
            /**Returns  the location option to create relief, true: create relief at the location of forming region, false: create relief at the next station(offset one pitch). 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool CreateLocation
            (
            );
            /**Sets  the location option to create relief, true: create relief at the location of forming region, false: create relief at the next station(offset one pitch). 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateLocation
            (
                bool createLocation /** createlocation */ 
            );
            /**Returns  the pitch. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double Pitch
            (
            );
            /**Sets  the pitch. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPitch
            (
                double pitch /** pitch */ 
            );
            /** Sets the face occurrences into builder attribute.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFaces
            (
                const std::vector<NXOpen::Face *> & faceOccs /** array of face occurrences */
            );
            /** Wave face to work part for creating user defined relief as reference. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void WaveFaces
            (
            );
            /**Returns  the option to hide (true) or show (false) the relief. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool HideReliefStatus
            (
            );
            /**Sets  the option to hide (true) or show (false) the relief. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetHideReliefStatus
            (
                bool hideReliefStatus /** hidereliefstatus */ 
            );
            /** Delete the linked face feature. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void DeleteLinkedFace
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
