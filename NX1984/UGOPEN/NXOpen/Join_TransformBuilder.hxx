#ifndef NXOpen_JOIN_TRANSFORMBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_TRANSFORMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_TransformBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class TransformBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Plane;
    class SelectNXObjectList;
    namespace Join
    {
        class _TransformBuilderBuilder;
        class TransformBuilderImpl;
        /** Represents a @link NXOpen::Join::TransformBuilder NXOpen::Join::TransformBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Join::JoinManager::CreateTransformBuilder  NXOpen::Join::JoinManager::CreateTransformBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  TransformBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** The transformation types */
            public: enum TransformationTypes
            {
                TransformationTypesMirror/** Mirror */,
                TransformationTypesTranslate/** Translate */
            };

            private: TransformBuilderImpl * m_transformbuilder_impl;
            private: friend class  _TransformBuilderBuilder;
            protected: TransformBuilder();
            public: ~TransformBuilder();
            /**Returns  the join features to transform 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Features
            (
            );
            /**Returns  the transformation type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Join::TransformBuilder::TransformationTypes Type
            (
            );
            /**Sets  the transformation type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetType
            (
                NXOpen::Join::TransformBuilder::TransformationTypes transType /** transtype */ 
            );
            /**Returns  the mirror plane, used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesMirror   NXOpen::Join::TransformBuilder::TransformationTypesMirror @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Plane * MirrorPlane
            (
            );
            /**Sets  the mirror plane, used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesMirror   NXOpen::Join::TransformBuilder::TransformationTypesMirror @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetMirrorPlane
            (
                NXOpen::Plane * mirrorPlane /** mirrorplane */ 
            );
            /**Returns  the coordinate system that defines the translate offset directions. If not specified the absolute coordinate system will be used.
                        Used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesTranslate   NXOpen::Join::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * TranslateCsys
            (
            );
            /**Sets  the coordinate system that defines the translate offset directions. If not specified the absolute coordinate system will be used.
                        Used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesTranslate   NXOpen::Join::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetTranslateCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the expression containing the value of the x translation distance. 
                        Used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesTranslate   NXOpen::Join::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateX
            (
            );
            /**Returns  the expression containing the value of the y translation distance. 
                        Used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesTranslate   NXOpen::Join::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateY
            (
            );
            /**Returns  the expression containing the value of the z translation distance. 
                        Used when @link NXOpen::Join::TransformBuilder::TransformationTypes NXOpen::Join::TransformBuilder::TransformationTypes@endlink  is set to @link  NXOpen::Join::TransformBuilder::TransformationTypesTranslate   NXOpen::Join::TransformBuilder::TransformationTypesTranslate @endlink  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslateZ
            (
            );
            /**Returns  the indication to create associative feature 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the indication to create associative feature 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the hardware load status. If true, loads hardware parts into assembly. If false, removes hardware parts. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool LoadHardware
            (
            );
            /**Sets  the hardware load status. If true, loads hardware parts into assembly. If false, removes hardware parts. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetLoadHardware
            (
                bool status /** status */ 
            );
            /**Returns  the hole creation status. If true, holes should be created in connected bodies. If false, holes should be removed (or not created) from connected bodies 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateHole
            (
            );
            /**Sets  the hole creation status. If true, holes should be created in connected bodies. If false, holes should be removed (or not created) from connected bodies 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetCreateHole
            (
                bool status /** status */ 
            );
            /**Returns  the indication to only edit items in the settings group. Mainly @link NXOpen::Join::TransformBuilder::Associative NXOpen::Join::TransformBuilder::Associative@endlink , 
                        @link NXOpen::Join::TransformBuilder::LoadHardware NXOpen::Join::TransformBuilder::LoadHardware@endlink , and @link NXOpen::Join::TransformBuilder::CreateHole NXOpen::Join::TransformBuilder::CreateHole@endlink .
                        All other parameters will be left unchanged. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool EditSettingsOnly
            (
            );
            /**Sets  the indication to only edit items in the settings group. Mainly @link NXOpen::Join::TransformBuilder::Associative NXOpen::Join::TransformBuilder::Associative@endlink , 
                        @link NXOpen::Join::TransformBuilder::LoadHardware NXOpen::Join::TransformBuilder::LoadHardware@endlink , and @link NXOpen::Join::TransformBuilder::CreateHole NXOpen::Join::TransformBuilder::CreateHole@endlink .
                        All other parameters will be left unchanged. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetEditSettingsOnly
            (
                bool status /** status */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
