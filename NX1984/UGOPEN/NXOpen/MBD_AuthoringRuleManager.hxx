#ifndef NXOpen_MBD_AUTHORINGRULEMANAGER_HXX_INCLUDED
#define NXOpen_MBD_AUTHORINGRULEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MBD_AuthoringRuleManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmbdopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MBD
    {
        class AuthoringRuleManager;
    }
    class Session;
    class NXObject;
    namespace MBD
    {
        class AuthoringRuleManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents an object that manages PMI query related services.
              <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class MBDOPENCPPEXPORT  AuthoringRuleManager
        {
            private: AuthoringRuleManagerImpl * m_authoringrulemanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AuthoringRuleManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AuthoringRuleManager* theAuthoringRuleManager;
            /** Returns the AuthoringRuleManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AuthoringRuleManager* GetAuthoringRuleManager(NXOpen::Session *owner);
            public: ~AuthoringRuleManager();

            /// \cond NX_NO_DOC 
            /** Set the prediction options for MBD authoring rule
                    
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_mbd (" Model Based Definition") */
            public: void SetPredictionOptions
            (
                NXOpen::NXObject * ruleInstance /** ruleinstance */ ,
                bool predictView /** predictview */ ,
                bool predictPlane /** predictplane */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
