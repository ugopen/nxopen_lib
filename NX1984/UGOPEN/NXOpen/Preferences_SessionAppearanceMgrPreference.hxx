#ifndef NXOpen_PREFERENCES_SESSIONAPPEARANCEMGRPREFERENCE_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONAPPEARANCEMGRPREFERENCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionAppearanceMgrPreference.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class SessionAppearanceMgrPreference;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class SessionAppearanceMgrPreferenceImpl;
        /**  Represents preferences for AppearanceManagement that are applicable
                to the session.   <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::SessionPreferences  NXOpen::Preferences::SessionPreferences @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  SessionAppearanceMgrPreference
        {
            private: SessionAppearanceMgrPreferenceImpl * m_sessionappearancemgrpreference_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SessionAppearanceMgrPreference(NXOpen::Preferences::SessionPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SessionAppearanceMgrPreference();
            /** Get the directory of studio material 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetDirectoryOfStudioMaterial
            (
            );
            /** Set the directory of studio material 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDirectoryOfStudioMaterial
            (
                const NXString & studioMaterialDirectory /** studio material directory */ 
            );
            /** Set the directory of studio material 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetDirectoryOfStudioMaterial
            (
                const char * studioMaterialDirectory /** studio material directory */ 
            );
            /** Get the directory of texture 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetDirectoryOfTexture
            (
            );
            /** Set the directory of texture 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDirectoryOfTexture
            (
                const NXString & textureDir /** texture dir */ 
            );
            /** Set the directory of texture 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetDirectoryOfTexture
            (
                const char * textureDir /** texture dir */ 
            );
            /**Returns  the objects in the scene assigned with appearance designators disply in see-thru when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool DispSeeThru
            (
            );
            /**Sets  the objects in the scene assigned with appearance designators disply in see-thru when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDispSeeThru
            (
                bool showSeeThrough /** show see through */ 
            );
            /**Returns  the objects in the scene assigned with appearance designators display with scene labels when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool DispSceneLabels
            (
            );
            /**Sets  the objects in the scene assigned with appearance designators display with scene labels when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetDispSceneLabels
            (
                bool showSceneLable /** show scene lable */ 
            );
            /**Returns  the objects in the scene assigned with appearance designators display with scene labels when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ExcludeFromSelection
            (
            );
            /**Sets  the objects in the scene assigned with appearance designators display with scene labels when the Appearance Designator dialog is up 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetExcludeFromSelection
            (
                bool excludeFromSelection /** exclude from selection */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
