#ifndef NXOpen_CAE_SHELLTO3DHYBRIDBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SHELLTO3DHYBRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ShellTo3dHybridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Shell2SolidBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ShellTo3dHybridBuilder;
    }
    namespace CAE
    {
        class Shell2SolidBuilder;
    }
    namespace CAE
    {
        class _ShellTo3dHybridBuilderBuilder;
        class ShellTo3dHybridBuilderImpl;
        /** Represents 3D Shell To Hybrid mesh
             *  Used to create a @link CAE::Mesh3d CAE::Mesh3d@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateShellto3dhybridBuilder  NXOpen::CAE::MeshManager::CreateShellto3dhybridBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ShellTo3dHybridBuilder : public NXOpen::CAE::Shell2SolidBuilder
        {
            private: ShellTo3dHybridBuilderImpl * m_shellto3dhybridbuilder_impl;
            private: friend class  _ShellTo3dHybridBuilderBuilder;
            protected: ShellTo3dHybridBuilder();
            public: ~ShellTo3dHybridBuilder();
            /** Sets the hybrid params  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            public: void SetHybridParams
            (
                double hexElementSize /** hexelementsize */ ,
                int elementOrder /** elementorder */ ,
                int distanceToBoundary /** distancetoboundary */ ,
                const NXOpen::Matrix3x3 & csysMatrix /** csysmatrix */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
