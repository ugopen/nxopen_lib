#ifndef NXOpen_FEATURES_VEHICLEDESIGN_SEATLINESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_SEATLINESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_SeatLinesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class SeatLinesBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class NXColor;
    class Point;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _SeatLinesBuilderBuilder;
            class SeatLinesBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::VehicleDesign::SeatLinesBuilder NXOpen::Features::VehicleDesign::SeatLinesBuilder@endlink  used to create or edit
                    a vehicle design @link NXOpen::Features::VehicleDesign::SeatLines NXOpen::Features::VehicleDesign::SeatLines@endlink  feature.
                     <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateSeatLinesBuilder  NXOpen::Features::VehicleDesignCollection::CreateSeatLinesBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AhpHeight.Value </term> <description> 
             
            325 </description> </item> 

            <item><term> 
             
            AhpLength.Value </term> <description> 
             
            573 </description> </item> 

            <item><term> 
             
            BofrpLength.Value </term> <description> 
             
            573 </description> </item> 

            <item><term> 
             
            BofrpSwcLength.Value </term> <description> 
             
            547 </description> </item> 

            <item><term> 
             
            EntityLayer </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            GridOffset </term> <description> 
             
            50 </description> </item> 

            <item><term> 
             
            NoteLayer </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            NoteOffsetX </term> <description> 
             
            10 </description> </item> 

            <item><term> 
             
            NoteOffsetZ </term> <description> 
             
            10 </description> </item> 

            <item><term> 
             
            Point95Offset </term> <description> 
             
            10 </description> </item> 

            <item><term> 
             
            Population </term> <description> 
             
            R5050 </description> </item> 

            <item><term> 
             
            RiseAngle.Value </term> <description> 
             
            15 </description> </item> 

            <item><term> 
             
            SeatHeight.Value </term> <description> 
             
            305 </description> </item> 

            <item><term> 
             
            SgrpWidth.Value </term> <description> 
             
            -400 </description> </item> 

            <item><term> 
             
            Standard </term> <description> 
             
            SAEJ1516Oct2011 </description> </item> 

            <item><term> 
             
            TextSize </term> <description> 
             
            4 </description> </item> 

            <item><term> 
             
            TransmissionType </term> <description> 
             
            Manual </description> </item> 

            <item><term> 
             
            UseStandardLoading </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            VehicleType </term> <description> 
             
            ClassAVehicleOnlyforstudy </description> </item> 

            </list> 

             <br>  Created in NX1980.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SeatLinesBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents the standard type option */
                public: enum StandardOption
                {
                    StandardOptionSAEJ1516Oct2011/** Represents SAE standard J1516 October 2011. */,
                    StandardOptionSAEJ4004Aug2008/** Represents SAE standard J4004 Augest 2008. */
                };

                /** Represents the vehicle class type option */
                public: enum VehicleOption
                {
                    VehicleOptionClassAVehicleOnlyforstudy/** Represents vehicle class A. */,
                    VehicleOptionClassBVehicle/** Represents vehicle class B. */
                };

                /** Represents the driver class type option */
                public: enum TransmissionOption
                {
                    TransmissionOptionManual/** Represents manual transmission. */,
                    TransmissionOptionAutomatic/** Represents automatic transmission. */
                };

                /** Represents the population ratio option */
                public: enum PopulationRatio
                {
                    PopulationRatioR5050/** Represents male/female population ratio 50:50 */,
                    PopulationRatioR7525/** Represents male/female population ratio 75:25. */,
                    PopulationRatioR9010to955/** Represents male/female population ratio 90:10 and 95:5. */
                };

                private: SeatLinesBuilderImpl * m_seatlinesbuilder_impl;
                private: friend class  _SeatLinesBuilderBuilder;
                protected: SeatLinesBuilder();
                public: ~SeatLinesBuilder();
                /**Returns  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleType NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleType@endlink  for the vehicle type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleOption VehicleType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleType NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleType@endlink  for the vehicle type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVehicleType
                (
                    NXOpen::Features::VehicleDesign::SeatLinesBuilder::VehicleOption vehicleType /** vehicletype */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::Standard NXOpen::Features::VehicleDesign::SeatLinesBuilder::Standard@endlink  for the standard type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatLinesBuilder::StandardOption Standard
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::Standard NXOpen::Features::VehicleDesign::SeatLinesBuilder::Standard@endlink  for the standard type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStandard
                (
                    NXOpen::Features::VehicleDesign::SeatLinesBuilder::StandardOption standard /** standard */ 
                );
                /**Returns  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseStandardLoading
                (
                );
                /**Sets  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseStandardLoading
                (
                    bool useStandardLoading /** usestandardloading */ 
                );
                /**Returns  the name of used base data loading  
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Loading
                (
                );
                /**Sets  the name of used base data loading  
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLoading
                (
                    const NXString & loading /** loading */ 
                );
                /**Sets  the name of used base data loading  
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLoading
                (
                    const char * loading /** loading */ 
                );
                /**Returns  the AHP point length coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AhpLength
                (
                );
                /**Returns  the BOFRP point length coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * BofrpLength
                (
                );
                /**Returns  the SgRP point width coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgrpWidth
                (
                );
                /**Returns  the AHP point height coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AhpHeight
                (
                );
                /**Returns  the seat position height coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SeatHeight
                (
                );
                /**Returns  the distance of BOFRP point and SWC point along X-Axis direction 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * BofrpSwcLength
                (
                );
                /**Returns  the seat rise angle(A19) 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RiseAngle
                (
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionType NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionType@endlink  for the transmission type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionOption TransmissionType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionType NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionType@endlink  for the transmission type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTransmissionType
                (
                    NXOpen::Features::VehicleDesign::SeatLinesBuilder::TransmissionOption transmissionType /** transmissiontype */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::Population NXOpen::Features::VehicleDesign::SeatLinesBuilder::Population@endlink  for the population type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::SeatLinesBuilder::PopulationRatio Population
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::SeatLinesBuilder::Population NXOpen::Features::VehicleDesign::SeatLinesBuilder::Population@endlink  for the population type to be considered. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPopulation
                (
                    NXOpen::Features::VehicleDesign::SeatLinesBuilder::PopulationRatio population /** population */ 
                );
                /**Returns  the SgRP point 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SgrpPoint
                (
                );
                /**Sets  the SgRP point 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSgrpPoint
                (
                    NXOpen::Point * sgrpPoint /** sgrppoint */ 
                );
                /**Returns  the driver seat reference point 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * ReferencePoint
                (
                );
                /**Sets  the driver seat reference point 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferencePoint
                (
                    NXOpen::Point * referencePoint /** referencepoint */ 
                );
                /** Legend of driver seat lines 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Legend
                (
                );
                /** Reverse values to initial base data  
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ReverseData
                (
                );
                /**Returns  the seat line color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * SeatLineColorPicker
                (
                );
                /**Sets  the seat line color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSeatLineColorPicker
                (
                    NXOpen::NXColor * seatLineColorPicker /** seatlinecolorpicker */ 
                );
                /**Returns  the note color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * NoteColorPicker
                (
                );
                /**Sets  the note color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetNoteColorPicker
                (
                    NXOpen::NXColor * noteColorPicker /** notecolorpicker */ 
                );
                /**Returns  the grid line color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridLineColorPicker
                (
                );
                /**Sets  the grid line color picker 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridLineColorPicker
                (
                    NXOpen::NXColor * gridLineColorPicker /** gridlinecolorpicker */ 
                );
                /**Returns  the offset distance of grid lines 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridOffset
                (
                );
                /**Sets  the offset distance of grid lines 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridOffset
                (
                    double gridOffset /** gridoffset */ 
                );
                /**Returns  the offset distance of point95 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: double Point95Offset
                (
                );
                /**Sets  the offset distance of point95 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPoint95Offset
                (
                    double point95Offset /** point95offset */ 
                );
                /**Returns  the offset distance of note in X-Axis direction 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: double NoteOffsetX
                (
                );
                /**Sets  the offset distance of note in X-Axis direction 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetNoteOffsetX
                (
                    double noteOffsetX /** noteoffsetx */ 
                );
                /**Returns  the offset distance of note in Z-Axis direction 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: double NoteOffsetZ
                (
                );
                /**Sets  the offset distance of note in Z-Axis direction 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetNoteOffsetZ
                (
                    double noteOffsetZ /** noteoffsetz */ 
                );
                /**Returns  the text size 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: double TextSize
                (
                );
                /**Sets  the text size 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTextSize
                (
                    double textSize /** textsize */ 
                );
                /**Returns  the entity layer 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int EntityLayer
                (
                );
                /**Sets  the entity layer 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEntityLayer
                (
                    int entityLayer /** entitylayer */ 
                );
                /**Returns  the note layer 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int NoteLayer
                (
                );
                /**Sets  the note layer 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetNoteLayer
                (
                    int noteLayer /** notelayer */ 
                );
                /** Create a point according to Base Data SGRP expressions 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXOpen::Point * CreatePointWithBaseDataSGRPExpression
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
