#ifndef NXOpen_CAE_RESPONSESIMULATION_MODALRESULTSEVALUATIONSETTINGBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_MODALRESULTSEVALUATIONSETTINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_ModalResultsEvaluationSettingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation.hxx>
#include <NXOpen/CAE_ResponseSimulation_FunctionEvaluationSettingBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ModalResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class DataLocation;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FrequencyDefinition;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FunctionEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _ModalResultsEvaluationSettingBuilderBuilder;
            class ModalResultsEvaluationSettingBuilderImpl;
            /** Represents the abstract builder class of evaluation setting for FRF and transmissibility  <br> This is an abstract class, and cannot be created.  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ModalResultsEvaluationSettingBuilder : public NXOpen::CAE::ResponseSimulation::FunctionEvaluationSettingBuilder
            {
                private: ModalResultsEvaluationSettingBuilderImpl * m_modalresultsevaluationsettingbuilder_impl;
                private: friend class  _ModalResultsEvaluationSettingBuilderBuilder;
                protected: ModalResultsEvaluationSettingBuilder();
                public: ~ModalResultsEvaluationSettingBuilder();
                /**Returns  the source node. 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::FENode * InputNode
                (
                );
                /**Sets  the source node. 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetInputNode
                (
                    NXOpen::CAE::FENode * sourceNode /** source node */ 
                );
                /**Returns  the source direction data component 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DirectionDataComponent InputDirection
                (
                );
                /**Sets  the source direction data component 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetInputDirection
                (
                    NXOpen::CAE::ResponseSimulation::DirectionDataComponent dataComponent /** data component */ 
                );
                /** Returns destination nodes. Only available when result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeDisplacement CAE::ResponseSimulation::EvaluationResultTypeDisplacement@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeVelocity CAE::ResponseSimulation::EvaluationResultTypeVelocity@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeAcceleration CAE::ResponseSimulation::EvaluationResultTypeAcceleration@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeReactionForce CAE::ResponseSimulation::EvaluationResultTypeReactionForce@endlink   @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXOpen::CAE::FENode *> GetOutputNodes
                (
                );
                /** Sets destination nodes 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetOutputNodes
                (
                    const std::vector<NXOpen::CAE::FENode *> & destinationNode /** destination node */ 
                );
                /** Returns destination nodes. Only available when result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeStress CAE::ResponseSimulation::EvaluationResultTypeStress@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeStrain CAE::ResponseSimulation::EvaluationResultTypeStrain@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeShellStressResultant CAE::ResponseSimulation::EvaluationResultTypeShellStressResultant@endlink   @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXOpen::CAE::FEElement *> GetOutputElements
                (
                );
                /** Sets destination nodes 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetOutputElements
                (
                    const std::vector<NXOpen::CAE::FEElement *> & destinationElements /** destination elements */ 
                );
                /**Returns  the destination direction data component 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DirectionDataComponent OutputRequest
                (
                );
                /**Sets  the destination direction data component 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetOutputRequest
                (
                    NXOpen::CAE::ResponseSimulation::DirectionDataComponent dataComponent /** data component */ 
                );
                /**Returns  the observation nodes.
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::FENode * ObservationNode
                (
                );
                /**Sets  the observation nodes.
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetObservationNode
                (
                    NXOpen::CAE::FENode * observationNode /** observation node */ 
                );
                /**Returns  the frequency setting 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DataLocation * DataLocation
                (
                );
                /**Returns  the frequency setting 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FrequencyDefinition * EvaluationProperty
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
