#ifndef NXOpen_FORMBOARD_UPDATEFORMBOARDBUILDER_HXX_INCLUDED
#define NXOpen_FORMBOARD_UPDATEFORMBOARDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Formboard_UpdateFormboardBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Formboard_UpdateDiscrepancy.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_formboard_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Formboard
    {
        class UpdateFormboardBuilder;
    }
    class Builder;
    namespace Formboard
    {
        class LayoutLengthOptions;
    }
    namespace Formboard
    {
        class UpdateDiscrepancy;
    }
    class Part;
    namespace Routing
    {
        namespace Electrical
        {
            class HarnessDevice;
        }
    }
    namespace Formboard
    {
        class _UpdateFormboardBuilderBuilder;
        class UpdateFormboardBuilderImpl;
        /** Class that performs the "update" of Formboard geometry.  
              <br> To create a new instance of this class, use @link NXOpen::Formboard::FormboardManager::CreateUpdateFormboardBuilder  NXOpen::Formboard::FormboardManager::CreateUpdateFormboardBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_FORMBOARDEXPORT  UpdateFormboardBuilder : public NXOpen::Builder
        {
            private: UpdateFormboardBuilderImpl * m_updateformboardbuilder_impl;
            private: friend class  _UpdateFormboardBuilderBuilder;
            protected: UpdateFormboardBuilder();
            public: ~UpdateFormboardBuilder();
            /**Returns  the length options for the update operation.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Formboard::LayoutLengthOptions * LengthOptions
            (
            );
            /** Gets the 3D harness part file to compare the formboard against. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Part * GetHarnessPart
            (
            );
            /** Sets the 3D harness part file to compare the formboard against. This clears
                      any discrepancies that have been discovered against the previous harness
                      part.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetHarnessPart
            (
                NXOpen::Part * harnessPart /** harnesspart */ 
            );
            /** Sets the harnesses within the harness part that the formboard must be 
                      compared with. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetHarnesses
            (
                const std::vector<NXOpen::Routing::Electrical::HarnessDevice *> & harnesses /** Harnesses to compare against. */
            );
            /** Compute the mapping between the data in the formboard and the data in the
                       3D harness.  This method can take a very long time to execute. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void FindMapping
            (
            );
            /** Once the mapping has been determined, this method can find any discrepancies
                       between the 3D harness and the formboard.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void DetermineDiscrepancies
            (
            );
            /** Returns the number of discrepancies discovered by the 
                      @link Formboard::UpdateFormboardBuilder::DetermineDiscrepancies Formboard::UpdateFormboardBuilder::DetermineDiscrepancies@endlink .  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: int GetNumberOfDiscrepancies
            (
            );
            /** Returns the discrepancy at the given index.  The index must be
                        0 to @link Formboard::UpdateFormboardBuilder::GetNumberOfDiscrepancies Formboard::UpdateFormboardBuilder::GetNumberOfDiscrepancies@endlink .
                         @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Formboard::UpdateDiscrepancy * GetDiscrepancy
            (
                int index /** index */ 
            );
            /** Removes bends in all radial bends and replaces them with a linear segment
                        going from the anchor to the free RCP of each radial bend. This is done before
                        fixing discrepancies because presence of bends in radial bend causes problems.
                        The bends of radial bends are recreated after the discrepancies have been fixed
                        using CreateBendsOfRadialBends
                    
             <br>  Created in NX7.5.5.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void RemoveBendsOfRadialBends
            (
            );
            /** Creates bends for radial bends after all discrepanices have been fixed. This routine
                        should be called in conjunction with RemoveBendsOfRadialBends.
                    
             <br>  Created in NX7.5.5.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void CreateBendsOfRadialBends
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
