#ifndef NXOpen_MECHANICALROUTING_CABLEWAYEXPORTBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_CABLEWAYEXPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_CablewayExportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MechanicalRouting_RoutingManager.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class CablewayExportBuilder;
    }
    class Builder;
    namespace MechanicalRouting
    {
        class _CablewayExportBuilderBuilder;
        class CablewayExportBuilderImpl;
        /** Builder class for Cableway Export command.  <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayExportBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayExportBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  CablewayExportBuilder : public NXOpen::Builder
        {
            /** Specifies the mode of export, either to a Teamcenter data set or to a native file. */
            public: enum ExportMode
            {
                ExportModeNative/** native */ ,
                ExportModeTeamcenter/** teamcenter */ 
            };

            private: CablewayExportBuilderImpl * m_cablewayexportbuilder_impl;
            private: friend class  _CablewayExportBuilderBuilder;
            protected: CablewayExportBuilder();
            public: ~CablewayExportBuilder();
            /**Returns  the type of export, either to a Teamcenter data set or to a native file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: NXOpen::MechanicalRouting::CablewayExportBuilder::ExportMode ExportType
            (
            );
            /**Sets  the type of export, either to a Teamcenter data set or to a native file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void SetExportType
            (
                NXOpen::MechanicalRouting::CablewayExportBuilder::ExportMode exportMode /** exportmode */ 
            );
            /** Exports the Cableway data to the given operating system file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void ExportToFile
            (
                const NXString & xmlFileName /** The file name in which to write the cableway data. */,
                NXOpen::MechanicalRouting::RoutingManager::DataType dataTypeToExport /** The type of data to export (e.g. cableways, devices, or both). */,
                int maxSearchLevels /** The maximum number of levels down the assembly tree to search for cableway data. */
            );
            /** Exports the Cableway data to the given operating system file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            void ExportToFile
            (
                const char * xmlFileName /** The file name in which to write the cableway data. */,
                NXOpen::MechanicalRouting::RoutingManager::DataType dataTypeToExport /** The type of data to export (e.g. cableways, devices, or both). */,
                int maxSearchLevels /** The maximum number of levels down the assembly tree to search for cableway data. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
