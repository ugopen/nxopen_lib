#ifndef NXOpen_PID_NATIVEOFFSHEETCONNECTORBUILDER_HXX_INCLUDED
#define NXOpen_PID_NATIVEOFFSHEETCONNECTORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_NativeOffSheetConnectorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PID_DataType.hxx>
#include <NXOpen/PID_NativePipe.hxx>
#include <NXOpen/PID_NativeSheet.hxx>
#include <NXOpen/PID_OffSheetConnectorBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class NativeOffSheetConnectorBuilder;
    }
    namespace PID
    {
        class NativeManager;
    }
    namespace PID
    {
        class NativePipe;
    }
    namespace PID
    {
        class NativeSheet;
    }
    namespace PID
    {
        class OffSheetConnectorBuilder;
    }
    namespace PID
    {
        class NativeOffSheetConnectorBuilderImpl;

        /// \cond NX_NO_DOC 
        /**  @brief 
            Builder used to model a piece of Off Sheet Connector.  

         
             <br> To obtain an instance of this class, refer to @link NXOpen::PID::NativeManager  NXOpen::PID::NativeManager @endlink  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class PIDOPENCPPEXPORT  NativeOffSheetConnectorBuilder
        {
            private: NativeOffSheetConnectorBuilderImpl * m_nativeoffsheetconnectorbuilder_impl;
            private: NXOpen::PID::NativeManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit NativeOffSheetConnectorBuilder(NXOpen::PID::NativeManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~NativeOffSheetConnectorBuilder();

            /// \cond NX_NO_DOC 
            /** Gets the owning sheet of this sheet element. Its setting method works only in creation mode. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::PID::NativeSheet * GetOwningSheet
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the owning sheet of this sheet element. Its setting method works only in creation mode. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOwningSheet
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ ,
                NXOpen::PID::NativeSheet * owningSheet /** owningsheet */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To set the connection connecting to the OSC sheet element.
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetConnection
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ ,
                NXOpen::PID::ConnectionEndType type /** type */ ,
                NXOpen::PID::NativePipe * connection /** connection */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To get the connection connecting to the OSC sheet element.
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void GetConnection
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ ,
                NXOpen::PID::ConnectionEndType* type /** type */ ,
                NXOpen::PID::NativePipe ** connection /** connection */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set the OSC label in native mode. In native mode, it isn't supported to link two OSC, but it's allowed to set the OSC label. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetLabel
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ ,
                const NXString & nativeLabel /** nativelabel */ 
            );
            /** Set the OSC label in native mode. In native mode, it isn't supported to link two OSC, but it's allowed to set the OSC label. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetLabel
            (
                NXOpen::PID::OffSheetConnectorBuilder * builder /** builder */ ,
                const char * nativeLabel /** nativelabel */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
