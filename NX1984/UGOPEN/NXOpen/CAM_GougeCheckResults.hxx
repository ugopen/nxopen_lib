#ifndef NXOpen_CAM_GOUGECHECKRESULTS_HXX_INCLUDED
#define NXOpen_CAM_GOUGECHECKRESULTS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_GougeCheckResults.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class GougeCheckResults;
    }
    namespace CAM
    {
        class GougeCheckResultsImpl;
        /** Represents the gouge results data 
         <br>  Created in NX11.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  GougeCheckResults : public NXOpen::TransientObject
        {
            /** Constants for Gouge Results */
            public: enum Constants
            {
                ConstantsMaxGouges/** The maximum number of gouges */ = 100
            };

            /** Defines the gouge checking type */
            public: enum Option
            {
                OptionNone/** none */ ,
                OptionGougeOnly/** gouge only */ ,
                OptionGougeAndHolderCollisions/** gouge and holder collisions */ ,
                OptionUseOperation/** use operation */ 
            };

            /** Defines the gouge checking status */
            public: enum Status
            {
                StatusNotChecked/** Not checked                                    */,
                StatusChecked/** Checked. No Gouges                             */,
                StatusThc/** Checked. Tool Holder Collisions found          */,
                StatusGouges/** Checked. Gouges found                          */,
                StatusThcGouges/** Checked. Gouges + Tool Holder Collisions found */,
                StatusWarnings/** Checked. Warnings generated                    */,
                StatusErrors/** Checked. Errors generated                      */
            };

            private: GougeCheckResultsImpl * m_gougecheckresults_impl;
            /// \cond NX_NO_DOC 
            public: explicit GougeCheckResults(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~GougeCheckResults();
            /**Returns  the gouge check option 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::GougeCheckResults::Option GougeOption
            (
            );
            /**Returns  the gouge check status 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::GougeCheckResults::Status GougeCheckStatus
            (
            );
            /**Returns  the number of gouges 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int NumberGouges
            (
            );
            /** Gouge Points 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<NXOpen::Point3d> GetGougePoints
            (
            );
            /**Returns  the number of Holder Collisions 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int NumberHolderCollisions
            (
            );
            /** Holder Collision Points 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: std::vector<NXOpen::Point3d> GetHolderCollisionPoints
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
