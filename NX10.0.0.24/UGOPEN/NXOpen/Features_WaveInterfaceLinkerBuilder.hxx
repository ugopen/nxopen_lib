#ifndef NXOpen_FEATURES_WAVEINTERFACELINKERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_WAVEINTERFACELINKERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_WaveInterfaceLinkerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_WaveInterfaceLinkerBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class WaveInterfaceLinkerBuilder;
    }
    class Builder;
    class TaggedObject;
    namespace Features
    {
        class _WaveInterfaceLinkerBuilderBuilder;
        class WaveInterfaceLinkerBuilderImpl;
        /**
            Represents a WaveInterfacelinker Feature builder
             <br> To create a new instance of this class, use @link NXOpen::Features::BaseFeatureCollection::CreateWaveInterfaceLinkerBuilder  NXOpen::Features::BaseFeatureCollection::CreateWaveInterfaceLinkerBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associative </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CopyThreads </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        InheritDisplayProperties </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        MakePositionIndependent </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  WaveInterfaceLinkerBuilder : public NXOpen::Builder
        {
            private: WaveInterfaceLinkerBuilderImpl * m_waveinterfacelinkerbuilder_impl;
            private: friend class  _WaveInterfaceLinkerBuilderBuilder;
            protected: WaveInterfaceLinkerBuilder();
            public: ~WaveInterfaceLinkerBuilder();
            /** Set all objects as chosen 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetALL
            (
            );
            /** Clear all selected objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void ClearAll
            (
            );
            /**Returns  the associative 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the inherit display properties 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool InheritDisplayProperties
            (
            );
            /**Sets  the inherit display properties 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInheritDisplayProperties
            (
                bool inheritDisplayProperties /** inheritdisplayproperties */ 
            );
            /**Returns  the make position independent 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool MakePositionIndependent
            (
            );
            /**Sets  the make position independent 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMakePositionIndependent
            (
                bool makePositionIndependent /** makepositionindependent */ 
            );
            /**Returns  the copy threads 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CopyThreads
            (
            );
            /**Sets  the copy threads 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCopyThreads
            (
                bool copyThreads /** copythreads */ 
            );
            /** Insert selected objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void InsertObjects
            (
                const std::vector<NXOpen::TaggedObject *> & selectedObjects /** items in list */
            );
            /** Remove unselected objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveObjects
            (
                const std::vector<NXOpen::TaggedObject *> & removedObjects /** items in list */
            );
            /**Returns  the source part occurrence 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * SourcePartOccurrence
            (
            );
            /**Sets  the source part occurrence 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSourcePartOccurrence
            (
                NXOpen::TaggedObject * sourcePartOcc /** sourcepartocc */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
