#ifndef NXOpen_FEATURES_GEODESICCHAMFERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_GEODESICCHAMFERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_GeodesicChamferBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_GeodesicChamferBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class GeodesicChamferBuilder;
    }
    class Curve;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Section;
    namespace Features
    {
        class _GeodesicChamferBuilderBuilder;
        class GeodesicChamferBuilderImpl;
        /** Represents a @link NXOpen::Features::GeodesicChamfer NXOpen::Features::GeodesicChamfer@endlink  builder for GeodesicChamfer command.  <br> To create a new instance of this class, use @link NXOpen::Features::GeodesicSketchCollection::CreateGeodesicChamferBuilder  NXOpen::Features::GeodesicSketchCollection::CreateGeodesicChamferBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Distance.Value </td> <td> 
         
        10 (millimeters part), 0.5 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  GeodesicChamferBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: GeodesicChamferBuilderImpl * m_geodesicchamferbuilder_impl;
            private: friend class  _GeodesicChamferBuilderBuilder;
            protected: GeodesicChamferBuilder();
            public: ~GeodesicChamferBuilder();
            /**Returns  the first section of curves to chamfer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * FirstSection
            (
            );
            /**Sets  the first section of curves to chamfer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFirstSection
            (
                NXOpen::Section * firstSection /** @link NXOpen::Section NXOpen::Section@endlink  */
            );
            /**Returns  the first selected curve in the section 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Curve * FirstCurve
            (
            );
            /**Sets  the first selected curve in the section 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFirstCurve
            (
                NXOpen::Curve * firstCurve /** @link NXOpen::Curve NXOpen::Curve@endlink  */
            );
            /**Returns  the first selection point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double FirstPoint
            (
            );
            /**Sets  the first selection point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFirstPoint
            (
                double firstPoint /** First Point */
            );
            /**Returns  the second section of curves to chamfer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SecondSection
            (
            );
            /**Sets  the second section of curves to chamfer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSecondSection
            (
                NXOpen::Section * secondSection /** @link NXOpen::Section NXOpen::Section@endlink  */
            );
            /**Returns  the second selected curve in the section 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Curve * SecondCurve
            (
            );
            /**Sets  the second selected curve in the section 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSecondCurve
            (
                NXOpen::Curve * secondCurve /** @link NXOpen::Curve NXOpen::Curve@endlink  */
            );
            /**Returns  the second selection point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double SecondPoint
            (
            );
            /**Sets  the second selection point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSecondPoint
            (
                double secondPoint /** Second Point */
            );
            /**Returns  the distance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
