#ifndef NXOpen_FEATURES_PROJECTCURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_PROJECTCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ProjectCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ProjectCurveBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/GeometricUtilities_CurveFitJoin.hxx>
#include <NXOpen/GeometricUtilities_CurveOptions.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ProjectCurveBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    namespace GeometricUtilities
    {
        class CurveFitJoin;
    }
    namespace GeometricUtilities
    {
        class CurveOptions;
    }
    class Plane;
    class Point;
    class Section;
    class SelectDisplayableObject;
    class SelectObjectList;
    namespace Features
    {
        class _ProjectCurveBuilderBuilder;
        class ProjectCurveBuilderImpl;
        /**
            Represents a @link NXOpen::Features::ProjectCurve NXOpen::Features::ProjectCurve@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateProjectCurveBuilder  NXOpen::Features::FeatureCollection::CreateProjectCurveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AngleToProjectionVector.Value </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        BridgedGapSize </td> <td> 
         
        1.0 (millimeters part), 0.04 (inches part) </td> </tr> 

        <tr><td> 
         
        CurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        CurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        CurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitJoinData.CurveFitOptions.FitOption (deprecated) </td> <td> 
         
        Cubic </td> </tr> 

        <tr><td> 
         
        CurveFitJoinData.CurveFitOptions.MaximumDegree (deprecated) </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitJoinData.CurveFitOptions.MaximumSegments (deprecated) </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        EqualArcLengthMethod </td> <td> 
         
        BothXY </td> </tr> 

        <tr><td> 
         
        GapOption </td> <td> 
         
        false </td> </tr> 

        <tr><td> 
         
        InputCurvesOption.Associative </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        NearestPointOption </td> <td> 
         
        false </td> </tr> 

        <tr><td> 
         
        ProjectionDirectionMethod </td> <td> 
         
        AlongFaceNormal </td> </tr> 

        <tr><td> 
         
        ProjectionOption </td> <td> 
         
        None </td> </tr> 

        </table>  

         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ProjectCurveBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Represents direction method */
            public: enum DirectionType
            {
                DirectionTypeAlongFaceNormal/** Represents Along Face Normal */,
                DirectionTypeTowardPoint/** Represents Towards Point */,
                DirectionTypeTowardLine/** Represents Towards Line */,
                DirectionTypeAlongVector/** Represents Along Vector */,
                DirectionTypeAngleToVector/** Represents Angle To Vector */
            };

            /** Represents projection option type used when direction type is along vector */
            public: enum ProjectionOptionType
            {
                ProjectionOptionTypeNone/** Represents None */,
                ProjectionOptionTypeProjectBothSides/** Represents Project Both Sides */,
                ProjectionOptionTypeEqualArcLength/** Represents Equal Arc Length */
            };

            /** Represents Equal Arc Length type */
            public: enum ArcLengthType
            {
                ArcLengthTypeBothXY/** Represents Both X and Y */,
                ArcLengthTypeFirstXThenY/** Represents First X then Y */,
                ArcLengthTypeFirstYThenX/** Represents First Y then X */,
                ArcLengthTypeXOnly/** Represents X only */,
                ArcLengthTypeYOnly/** Represents Y only */
            };

            private: ProjectCurveBuilderImpl * m_projectcurvebuilder_impl;
            private: friend class  _ProjectCurveBuilderBuilder;
            protected: ProjectCurveBuilder();
            public: ~ProjectCurveBuilder();
            /**Returns  the section to project 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SectionToProject
            (
            );
            /**Returns  the face to project to 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectObjectList * FaceToProjectTo
            (
            );
            /**Returns  the plane to project to 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * PlaneToProjectTo
            (
            );
            /**Sets  the plane to project to 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetPlaneToProjectTo
            (
                NXOpen::Plane * projectedPlane /** projectedplane */ 
            );
            /**Returns  the projection direction method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ProjectCurveBuilder::DirectionType ProjectionDirectionMethod
            (
            );
            /**Sets  the projection direction method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetProjectionDirectionMethod
            (
                NXOpen::Features::ProjectCurveBuilder::DirectionType directionMethod /** directionmethod */ 
            );
            /**Returns  the point to project toward 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PointToProjectToward
            (
            );
            /**Sets  the point to project toward 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetPointToProjectToward
            (
                NXOpen::Point * towardPoint /** towardpoint */ 
            );
            /**Returns  the reference point for equal arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ReferencePointForEqualArcLength
            (
            );
            /**Sets  the reference point for equal arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetReferencePointForEqualArcLength
            (
                NXOpen::Point * referencePoint /** referencepoint */ 
            );
            /**Returns  the line to project toward 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * LineToProjectToward
            (
            );
            /**Returns  the projection vector 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ProjectionVector
            (
            );
            /**Sets  the projection vector 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetProjectionVector
            (
                NXOpen::Direction * alongVector /** alongvector */ 
            );
            /**Returns  the projection option type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ProjectCurveBuilder::ProjectionOptionType ProjectionOption
            (
            );
            /**Sets  the projection option type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetProjectionOption
            (
                NXOpen::Features::ProjectCurveBuilder::ProjectionOptionType projectionOption /** projectionoption */ 
            );
            /**Returns  the angle to projection vector 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AngleToProjectionVector
            (
            );
            /**Returns  the x vector for equal arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * XVectorForEqualArcLength
            (
            );
            /**Sets  the x vector for equal arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetXVectorForEqualArcLength
            (
                NXOpen::Direction * xVector /** xvector */ 
            );
            /**Returns  the equal arc length method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ProjectCurveBuilder::ArcLengthType EqualArcLengthMethod
            (
            );
            /**Sets  the equal arc length method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetEqualArcLengthMethod
            (
                NXOpen::Features::ProjectCurveBuilder::ArcLengthType arcLengthMethod /** arclengthmethod */ 
            );
            /**Returns  the input curves option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveOptions * InputCurvesOption
            (
            );
            /**Returns  the curve fit join method 
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link NXOpen::Features::ProjectCurveBuilder::CurveFitData NXOpen::Features::ProjectCurveBuilder::CurveFitData@endlink  instead <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use NXOpen::Features::ProjectCurveBuilder::CurveFitData instead") NXOpen::GeometricUtilities::CurveFitJoin * CurveFitJoinData
            (
            );
            /**Returns  the tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Returns  the curve fit settings 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
            /**Sets  the tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the maximum bridged gap size. 
                        When gap distance is less than maximum bridged gap size and bigger than the default modeling tolerance,
                        NX project curve will add an internal bridge curve to close the gap between segments in projection curve.
                        This option is only valid if @link NXOpen::Features::ProjectCurveBuilder::GapOption NXOpen::Features::ProjectCurveBuilder::GapOption @endlink and @link NXOpen::Features::ProjectCurveBuilder::SetGapOption NXOpen::Features::ProjectCurveBuilder::SetGapOption @endlink  is true. 
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double BridgedGapSize
            (
            );
            /**Sets  the maximum bridged gap size. 
                        When gap distance is less than maximum bridged gap size and bigger than the default modeling tolerance,
                        NX project curve will add an internal bridge curve to close the gap between segments in projection curve.
                        This option is only valid if @link NXOpen::Features::ProjectCurveBuilder::GapOption NXOpen::Features::ProjectCurveBuilder::GapOption @endlink and @link NXOpen::Features::ProjectCurveBuilder::SetGapOption NXOpen::Features::ProjectCurveBuilder::SetGapOption @endlink  is true. 
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetBridgedGapSize
            (
                double bridgedGapSize /** bridgedgapsize */ 
            );
            /**Returns  the gap option whether to create curve to bridge gap or not 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GapOption
            (
            );
            /**Sets  the gap option whether to create curve to bridge gap or not 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetGapOption
            (
                bool gapOption /** gapoption */ 
            );
            /**Returns  the nearest point option whether to project curve by nearest point or not. 
                        This option is only valid if @link NXOpen::Features::ProjectCurveBuilder::DirectionTypeAlongVector NXOpen::Features::ProjectCurveBuilder::DirectionTypeAlongVector@endlink  is used and 
                        @link NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeNone NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeNone@endlink  or 
                        @link NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeProjectBothSides NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeProjectBothSides@endlink  is used.
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool NearestPointOption
            (
            );
            /**Sets  the nearest point option whether to project curve by nearest point or not. 
                        This option is only valid if @link NXOpen::Features::ProjectCurveBuilder::DirectionTypeAlongVector NXOpen::Features::ProjectCurveBuilder::DirectionTypeAlongVector@endlink  is used and 
                        @link NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeNone NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeNone@endlink  or 
                        @link NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeProjectBothSides NXOpen::Features::ProjectCurveBuilder::ProjectionOptionTypeProjectBothSides@endlink  is used.
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") */
            public: void SetNearestPointOption
            (
                bool nearestPointOption /** nearestpointoption */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
