#ifndef NXOpen_CAM_BOUNDARYTURNSET_HXX_INCLUDED
#define NXOpen_CAM_BOUNDARYTURNSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BoundaryTurnSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BoundaryTurnSet.hxx>
#include <NXOpen/CAM_BoundarySet.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BoundaryTurnSet;
    }
    namespace CAM
    {
        class BoundarySet;
    }
    namespace CAM
    {
        class _BoundaryTurnSetBuilder;
        class BoundaryTurnSetImpl;
        /** Represents a boundary turning set.   <br> To create a new instance of this class, use @link NXOpen::CAM::Boundary::CreateBoundaryTurnSet  NXOpen::CAM::Boundary::CreateBoundaryTurnSet @endlink  <br> 
         <br>  Created in NX9.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BoundaryTurnSet : public NXOpen::CAM::BoundarySet
        {
            /** the types available for the feed rate unit */
            public: enum FeedUnitTypes
            {
                FeedUnitTypesNone/** no feed rate unit*/,
                FeedUnitTypesPerMinute/** use per minute as the feed rate unit*/,
                FeedUnitTypesPerRevolution/** use per revolution as the feed rate unit*/
            };

            private: BoundaryTurnSetImpl * m_boundaryturnset_impl;
            private: friend class  _BoundaryTurnSetBuilder;
            protected: BoundaryTurnSet();
            public: ~BoundaryTurnSet();
            /**Returns  the flag whether this boundary has custom stock activated 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: bool CustomStock
            (
            );
            /**Sets  the flag whether this boundary has custom stock activated 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCustomStock
            (
                bool newValue /** newvalue */ 
            );
            /**Returns  the stock value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double Stock
            (
            );
            /**Sets  the stock value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStock
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the feed rate  value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double FeedValue
            (
            );
            /**Sets  the feed rate  value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedValue
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the feed rate unit 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnSet::FeedUnitTypes FeedUnit
            (
            );
            /**Sets  the feed rate unit 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedUnit
            (
                NXOpen::CAM::BoundaryTurnSet::FeedUnitTypes newUnit /** newunit */ 
            );
            /**Returns  the ignore fine finish offset status 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: bool IgnoreFineFinishOffset
            (
            );
            /**Sets  the ignore fine finish offset status 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIgnoreFineFinishOffset
            (
                bool newValue /** newvalue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
