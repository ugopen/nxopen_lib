#ifndef NXOpen_GROUPBUILDER_HXX_INCLUDED
#define NXOpen_GROUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GroupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GroupBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class GroupBuilder;
    class Builder;
    class NXObject;
    class SelectGroup;
    class SelectObjectList;
    class _GroupBuilderBuilder;
    class GroupBuilderImpl;
    /**
    Represents a @link GroupBuilder GroupBuilder@endlink 
     <br> To create a new instance of this class, use @link NXOpen::BasePart::CreateGatewayGroupBuilder  NXOpen::BasePart::CreateGatewayGroupBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    ActionType </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    GroupDisplayProperties </td> <td> 
     
    true </td> </tr> 

    </table>  

     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  GroupBuilder : public NXOpen::Builder
    {
        /** Represents the type of action for this builder to perform. */
        public: enum Action
        {
            ActionNewGroup/** Create New group in Modeling or Drafting */,
            ActionAddToGroup/** Add members to existing group in Modeling */,
            ActionRemoveFromGroup/** Remove members of existing group in Modeling */,
            ActionUngroup/** Delete a group in Modeling or in Sketcher */,
            ActionEditGroup/** Edit a group in Modeling or in Sketcher */,
            ActionNewSketchGroup/** Create New sketch group in Direct Sketch, the Sketch Task Environment, or in Drafting Sketch */
        };

        /** Represents the type of sketch group to be created. */
        public: enum SketchType
        {
            SketchTypeRegular/** Regular sketch group that can contain any sketch curve or dimension */,
            SketchTypeUnique/** A regular sketch group whose members cannot be members of any other sketch group */,
            SketchTypeRigid/** A sketch group which corresponds to a Rigid Sketch constraint       */
        };

        /** Represents the option to control the behavior when deleting a group. */
        public: enum UngroupOption
        {
            UngroupOptionTop/** Delete a group */,
            UngroupOptionFull/** Delete a group recursively */
        };

        private: GroupBuilderImpl * m_groupbuilder_impl;
        private: friend class  _GroupBuilderBuilder;
        protected: GroupBuilder();
        public: ~GroupBuilder();
        /**Returns  the action type for this builder to perform.    
              <ul>
              <li>0 signifies  Create New group in Modeling or Drafting </li>
              <li>1 signifies  Add members to existing group in Modeling </li>    
              <li>2 signifies  Remove members of existing group in Modeling </li>    
              <li>3 signifies  Delete a group in Modeling or in Sketcher </li>    
              <li>4 signifies  Edit a group in Modeling or in Sketcher </li>    
              <li>5 signifies  Create New sketch group in Direct Sketch, the Sketch Task Environment, or in Drafting Sketch </li>    
              </ul>
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: int ActionType
        (
        );
        /**Sets  the action type for this builder to perform.    
              <ul>
              <li>0 signifies  Create New group in Modeling or Drafting </li>
              <li>1 signifies  Add members to existing group in Modeling </li>    
              <li>2 signifies  Remove members of existing group in Modeling </li>    
              <li>3 signifies  Delete a group in Modeling or in Sketcher </li>    
              <li>4 signifies  Edit a group in Modeling or in Sketcher </li>    
              <li>5 signifies  Create New sketch group in Direct Sketch, the Sketch Task Environment, or in Drafting Sketch </li>    
              </ul>
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetActionType
        (
            int actionType /** actiontype */ 
        );
        /**Returns  the group in action 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectGroup * GroupInAction
        (
        );
        /**Returns  the objects in group 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectObjectList * ObjectsInGroup
        (
        );
        /**Returns  the group name 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GroupName
        (
        );
        /**Sets  the group name 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetGroupName
        (
            const NXString & groupName /** groupname */ 
        );
        /**Sets  the group name 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        void SetGroupName
        (
            const char * groupName /** groupname */ 
        );
        /**Returns  the unique membership option ie umg option 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool UniqueMembershipOption
        (
        );
        /**Sets  the unique membership option ie umg option 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUniqueMembershipOption
        (
            bool umgOption /** umgoption */ 
        );
        /**Returns  the activegroup option is for sketch group as active group in Direct Sketch, Sketch Task Environment or in Drafting Sketch. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ActivegroupOption
        (
        );
        /**Sets  the activegroup option is for sketch group as active group in Direct Sketch, Sketch Task Environment or in Drafting Sketch. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetActivegroupOption
        (
            bool activegroupOption /** activegroupoption */ 
        );
        /**Returns  the ungroup level 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::GroupBuilder::UngroupOption UngroupLevel
        (
        );
        /**Sets  the ungroup level 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUngroupLevel
        (
            NXOpen::GroupBuilder::UngroupOption ungroupLevel /** ungrouplevel */ 
        );
        /**Returns  the owning object ie sketch object which currently has to be a sketch 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::NXObject * OwningObject
        (
        );
        /**Sets  the owning object ie sketch object which currently has to be a sketch 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOwningObject
        (
            NXOpen::NXObject * owningObject /** owningobject */ 
        );
        /**Returns  the group display option 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool GroupDisplayProperties
        (
        );
        /**Sets  the group display option 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetGroupDisplayProperties
        (
            bool gdpOption /** gdpoption */ 
        );
        /**Returns  the type of sketch group that gets created 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::GroupBuilder::SketchType SketchGroupType
        (
        );
        /**Sets  the type of sketch group that gets created 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSketchGroupType
        (
            NXOpen::GroupBuilder::SketchType groupType /** grouptype */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
