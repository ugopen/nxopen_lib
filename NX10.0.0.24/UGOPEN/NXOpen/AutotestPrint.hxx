#ifndef NXOpen_AUTOTESTPRINT_HXX_INCLUDED
#define NXOpen_AUTOTESTPRINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AutotestPrint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class AutotestPrint;
    class DebugSession;
    class TaggedObject;
    class AutotestPrintImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used for NX testing.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::DebugSession  NXOpen::DebugSession @endlink  <br> 
     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENDEBUGSESSIONCPPEXPORT  AutotestPrint
    {
        /** The types for printing parameters */
        public: enum PrintType
        {
            PrintTypeReturnValue/** return value */ ,
            PrintTypeOutputValue/** output value */ ,
            PrintTypeStructElement/** struct element */ ,
            PrintTypeEmbeddedStruct/** embedded struct */ 
        };

        /** Specifies the levels of output for PrintTestData when the
                @link Autotest::CustomOptionOverride Autotest::CustomOptionOverride @endlink and @link Autotest::SetCustomOptionOverride Autotest::SetCustomOptionOverride @endlink  is true. */
        public: enum PrintLevel
        {
            PrintLevelCustom/** custom */ ,
            PrintLevelAPIAndCustom/** apiand custom */ 
        };

        private: AutotestPrintImpl * m_autotestprint_impl;
        private: NXOpen::DebugSession* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit AutotestPrint(NXOpen::DebugSession *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~AutotestPrint();
        /** Start printing object element for object represented by tag 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintObjectStart
        (
            NXOpen::TaggedObject * variableObject /** variable object */ ,
            const NXString & variableName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int lineNumber /** line number */ 
        );
        /** Start printing object element for object represented by tag 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintObjectStart
        (
            NXOpen::TaggedObject * variableObject /** variable object */ ,
            const char * variableName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int lineNumber /** line number */ 
        );
        /** Start printing object element for non-tagged/non-transient object.
                Only prints the object name, variable name and Line number, and doesn't 
                print the method names or data of the object represented by the object name.
               
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        public: void PrintObjectStart
        (
            const NXString & objectName /** Name of the object with full scope, e.g., Class1.Class2.Object  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & variableName /**Variable name, if available. Else pass "" or null   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int lineNumber /** line number */ 
        );
        /** Start printing object element for non-tagged/non-transient object.
                Only prints the object name, variable name and Line number, and doesn't 
                print the method names or data of the object represented by the object name.
               
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        void PrintObjectStart
        (
            const char * objectName /** Name of the object with full scope, e.g., Class1.Class2.Object  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * variableName /**Variable name, if available. Else pass "" or null   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int lineNumber /** line number */ 
        );
        /** End printing object element for object represented by tag 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintObjectEnd
        (
        );
        /** Start printing method element for method of an object 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintMethodStart
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Start printing method element for method of an object 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintMethodStart
        (
            const char * methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** End printing method element for method of an object 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintMethodEnd
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** End printing method element for method of an object 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintMethodEnd
        (
            const char * methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Print method error 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintMethodError
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int errorCode /** error code */ 
        );
        /** Print method error 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintMethodError
        (
            const char * methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int errorCode /** error code */ 
        );
        /** Start printing struct element 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintStructStart
        (
            const NXString & structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Start printing struct element 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintStructStart
        (
            const char * structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** End printing struct element 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintStructEnd
        (
            const NXString & structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** End printing struct element 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintStructEnd
        (
            const char * structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print double parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintDoubleParameter
        (
            double value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const NXString & tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print double parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintDoubleParameter
        (
            double value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const char * tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print double parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintDoubleParameterArray
        (
            const std::vector<double> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const NXString & tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print double parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintDoubleParameterArray
        (
            const std::vector<double> & values /** values */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const char * tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print integer parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintIntegerParameter
        (
            int value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print integer parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintIntegerParameter
        (
            int value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print integer parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintIntegerParameterArray
        (
            const std::vector<int> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print integer parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintIntegerParameterArray
        (
            const std::vector<int> & values /** values */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintBooleanParameter
        (
            bool value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintBooleanParameter
        (
            bool value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintBooleanParameterArray
        (
            const std::vector<bool> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintBooleanParameterArray
        (
            const std::vector<bool> & values /** values */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print enum parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintEnumParameter
        (
            const NXString & value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print enum parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintEnumParameter
        (
            const char * value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print invalid enum parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintInvalidEnumParameter
        (
            int value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print invalid enum parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintInvalidEnumParameter
        (
            int value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintStringParameter
        (
            const NXString & value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintStringParameter
        (
            const char * value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintStringParameterArray
        (
            std::vector<NXString> & values /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintStringParameterArray
        (
            std::vector<NXString> & values /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintTextStringParameter
        (
            const NXString & value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintTextStringParameter
        (
            const char * value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintTextStringParameterArray
        (
            std::vector<NXString> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintTextStringParameterArray
        (
            std::vector<NXString> & values /** values */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintObjectParameter
        (
            NXOpen::TaggedObject * value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintObjectParameter
        (
            NXOpen::TaggedObject * value /** value */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintObjectParameterArray
        (
            const std::vector<NXOpen::TaggedObject *> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter array 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void PrintObjectParameterArray
        (
            const std::vector<NXOpen::TaggedObject *> & values /** values */ ,
            const char * parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /**Returns  an override that allows applications to ignore the custom option set
                when a custom print function is registered for a class.  If the override is true
                the PrintTestData method will behave based on the @link Autotest::PrintLevelOption Autotest::PrintLevelOption @endlink and @link Autotest::SetPrintLevelOption Autotest::SetPrintLevelOption @endlink . 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool CustomOptionOverride
        (
        );
        /**Sets  an override that allows applications to ignore the custom option set
                when a custom print function is registered for a class.  If the override is true
                the PrintTestData method will behave based on the @link Autotest::PrintLevelOption Autotest::PrintLevelOption @endlink and @link Autotest::SetPrintLevelOption Autotest::SetPrintLevelOption @endlink . 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCustomOptionOverride
        (
            bool customOptionOverride /** customoptionoverride */ 
        );
        /**Returns  the level of output for the PrintTestData method when
                the @link Autotest::CustomOptionOverride Autotest::CustomOptionOverride @endlink and @link Autotest::SetCustomOptionOverride Autotest::SetCustomOptionOverride @endlink  is true 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::AutotestPrint::PrintLevel PrintLevelOption
        (
        );
        /**Sets  the level of output for the PrintTestData method when
                the @link Autotest::CustomOptionOverride Autotest::CustomOptionOverride @endlink and @link Autotest::SetCustomOptionOverride Autotest::SetCustomOptionOverride @endlink  is true 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPrintLevelOption
        (
            NXOpen::AutotestPrint::PrintLevel printLevel /** printlevel */ 
        );
        /** Write a comment in the autotest XML 
         <br>  Created in NX7.0.0.  <br>  
         <br> License requirements : None */
        public: void PrintXmlComment
        (
            const NXString & comment /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Write a comment in the autotest XML 
         <br>  Created in NX7.0.0.  <br>  
         <br> License requirements : None */
        void PrintXmlComment
        (
            const char * comment /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Whether XML is printing  @return  
         <br>  Created in NX7.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsPrinting
        (
        );
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
