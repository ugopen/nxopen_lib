#ifndef NXOpen_CAE_OPTIMIZATION_DAOSOLUTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_DAOSOLUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_DAOSolutionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_DAOOptimizationDataTypes.hxx>
#include <NXOpen/CAE_Optimization_DAOSolutionBuilder.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class DAOSolutionBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        namespace Optimization
        {
            class _DAOSolutionBuilderBuilder;
            class DAOSolutionBuilderImpl;
            /** Represents a @link CAE::Optimization::DAOSolutionBuilder CAE::Optimization::DAOSolutionBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::CAE::Optimization::DAOSolutionCollection::CreateOptimizationBuilder  NXOpen::CAE::Optimization::DAOSolutionCollection::CreateOptimizationBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  DAOSolutionBuilder : public NXOpen::Builder
            {
                private: DAOSolutionBuilderImpl * m_daosolutionbuilder_impl;
                private: friend class  _DAOSolutionBuilderBuilder;
                protected: DAOSolutionBuilder();
                public: ~DAOSolutionBuilder();
                /**Returns  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetName
                (
                    const NXString & solutionName /** Optimization solution name */
                );
                /**Sets  the optimization solution name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                void SetName
                (
                    const char * solutionName /** Optimization solution name */
                );
                /**Returns  the optimization solution solver type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::Solver SolverType
                (
                );
                /**Sets  the optimization solution solver type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetSolverType
                (
                    NXOpen::CAE::Optimization::Solver solverType /** Optimization solution solver type */
                );
                /**Returns  the optimization solution analysis solution 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::SimSolution * AnalysisSolution
                (
                );
                /**Sets  the optimization solution analysis solution 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetAnalysisSolution
                (
                    NXOpen::CAE::SimSolution * analysisSolution /** Analysis solution of optimization solution */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
