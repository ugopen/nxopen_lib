#ifndef NXOpen_CAE_DURABILITYFUNCTIONEXCITATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYFUNCTIONEXCITATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityFunctionExcitationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityFunctionExcitationBuilder.hxx>
#include <NXOpen/CAE_DurabilityExcitationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilityFunctionExcitationBuilder;
    }
    namespace CAE
    {
        class DurabilityExcitationBuilder;
    }
    class TaggedObject;
    namespace CAE
    {
        class _DurabilityFunctionExcitationBuilderBuilder;
        class DurabilityFunctionExcitationBuilderImpl;
        /** Represents a @link CAE::DurabilityFunctionExcitation CAE::DurabilityFunctionExcitation@endlink  builder.  <br> There is no kf creator for this.  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilityFunctionExcitationBuilder : public NXOpen::CAE::DurabilityExcitationBuilder
        {
            private: DurabilityFunctionExcitationBuilderImpl * m_durabilityfunctionexcitationbuilder_impl;
            private: friend class  _DurabilityFunctionExcitationBuilderBuilder;
            protected: DurabilityFunctionExcitationBuilder();
            public: ~DurabilityFunctionExcitationBuilder();
            /**Returns  the load case. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: int Loadcase
            (
            );
            /**Sets  the load case. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetLoadcase
            (
                int loadcase /** loadcase */ 
            );
            /**Returns  the iteration. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: int Iteration
            (
            );
            /**Sets  the iteration. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetIteration
            (
                int iteration /** iteration */ 
            );
            /**Returns  the function. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::TaggedObject * Function
            (
            );
            /**Sets  the function. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetFunction
            (
                NXOpen::TaggedObject * functionTag /** functiontag */ 
            );
            /**Returns  the scale. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: double Scale
            (
            );
            /**Sets  the scale. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetScale
            (
                double scale /** scale */ 
            );
            /**Returns  the offset. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: double Offset
            (
            );
            /**Sets  the offset. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetOffset
            (
                double offset /** offset */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
