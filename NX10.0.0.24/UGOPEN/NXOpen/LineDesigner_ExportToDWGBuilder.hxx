#ifndef NXOpen_LINEDESIGNER_EXPORTTODWGBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_EXPORTTODWGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_ExportToDWGBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/LineDesigner_ExportToDWGBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class ExportToDWGBuilder;
    }
    class Builder;
    namespace LineDesigner
    {
        class _ExportToDWGBuilderBuilder;
        class ExportToDWGBuilderImpl;
        /**
            Represents a @link LineDesigner::ExportToDWG LineDesigner::ExportToDWG@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateExportToDwgBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateExportToDwgBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        MonochromeDisplay </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SaveAs </td> <td> 
         
        T2d </td> </tr> 

        <tr><td> 
         
        TemplateSheet </td> <td> 
         
        A0Size </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  ExportToDWGBuilder : public NXOpen::Builder
        {
            /** Represents the dwg sheet template types */
            public: enum TemplateTypeAPI
            {
                TemplateTypeAPIA0Size/** Represents the A0 type */,
                TemplateTypeAPIA1Size/** Represents the A1 type */,
                TemplateTypeAPIA2Size/** Represents the A2 type */,
                TemplateTypeAPIA3Size/** Represents the A3 type */,
                TemplateTypeAPIA4Size/** Represents the A4 type */
            };

            /** Represents the dwg saving types */
            public: enum SaveAsTypeAPI
            {
                SaveAsTypeAPIT2d/** Represents the 2D type */,
                SaveAsTypeAPIT3d/** Represents the 3D type */
            };

            private: ExportToDWGBuilderImpl * m_exporttodwgbuilder_impl;
            private: friend class  _ExportToDWGBuilderBuilder;
            protected: ExportToDWGBuilder();
            public: ~ExportToDWGBuilder();
            /**Returns  the file name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString FileName
            (
            );
            /**Sets  the file name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetFileName
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the file name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetFileName
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the folder name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString FolderName
            (
            );
            /**Sets  the folder name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetFolderName
            (
                const NXString & foldername /** foldername */ 
            );
            /**Sets  the folder name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetFolderName
            (
                const char * foldername /** foldername */ 
            );
            /**Returns  the template sheet type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ExportToDWGBuilder::TemplateTypeAPI TemplateSheet
            (
            );
            /**Sets  the template sheet type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetTemplateSheet
            (
                NXOpen::LineDesigner::ExportToDWGBuilder::TemplateTypeAPI templateSheet /** templatesheet */ 
            );
            /**Returns  the save as type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ExportToDWGBuilder::SaveAsTypeAPI SaveAs
            (
            );
            /**Sets  the save as type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetSaveAs
            (
                NXOpen::LineDesigner::ExportToDWGBuilder::SaveAsTypeAPI saveAs /** saveas */ 
            );
            /**Returns  the monochrome display 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool MonochromeDisplay
            (
            );
            /**Sets  the monochrome display 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetMonochromeDisplay
            (
                bool monochromeDisplay /** monochromedisplay */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
