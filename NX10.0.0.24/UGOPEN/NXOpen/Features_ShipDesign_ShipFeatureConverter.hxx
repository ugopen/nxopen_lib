#ifndef NXOpen_FEATURES_SHIPDESIGN_SHIPFEATURECONVERTER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SHIPFEATURECONVERTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ShipFeatureConverter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ShipFeatureConverter.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipFeatureConverter;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ShipFeatureConverterBuilder;
            class ShipFeatureConverterImpl;
            /**
                    This class is used to convert/upgrade legacy Ship Design features.  It currently supports the
                    conversion of KF Steel Features into non-KF Steel features.
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateShipFeatureConverter  NXOpen::Features::ShipCollection::CreateShipFeatureConverter @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            Scope </td> <td> 
             
            WorkPart </td> </tr> 

            </table>  

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ShipFeatureConverter : public NXOpen::Builder
            {
                /** Settings for the conversion scope */
                public: enum PartScope
                {
                    PartScopeWorkPart/** convert features in the work part only */,
                    PartScopeWorkPartandComponents/** convert features in wort part and sub-component parts */
                };

                private: ShipFeatureConverterImpl * m_shipfeatureconverter_impl;
                private: friend class  _ShipFeatureConverterBuilder;
                protected: ShipFeatureConverter();
                public: ~ShipFeatureConverter();
                /**Returns  the conversion scope 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipFeatureConverter::PartScope Scope
                (
                );
                /**Sets  the conversion scope 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetScope
                (
                    NXOpen::Features::ShipDesign::ShipFeatureConverter::PartScope scope /** scope */ 
                );
                /**Returns  the number of candidate features.  This is only set after committing the converter.   
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int NumCandidateFeatures
                (
                );
                /**Returns  the number of converted features.  This is only set after committing the converter.   
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int NumConvertedFeatures
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
