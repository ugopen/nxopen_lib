#ifndef NXOpen_CAE_MODELCHECK_ITESTVALUE_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ITESTVALUE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_ITestValue.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ModelCheck_TestValueTypes.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class ITestValue;
        }
    }
    class Unit;
    namespace CAE
    {
        namespace ModelCheck
        {
            /**  @brief  Represents the quality check criteria value settings  

               <br> This is an abstract class, and cannot be instantiated.  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ITestValue
            {
                virtual void EnsureVtableExists() {}
                public: virtual ~ITestValue() {}
                /** Returns the test type  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::TestValueTypes::TestType GetTestType
                (
                ) = 0;
                /** Returns the validator type  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::ModelCheck::TestValueTypes::Validator GetValidator
                (
                ) = 0;
                /**Returns  an option value indicating whether to do element quality check for this test  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual bool DoTest
                (
                ) = 0;
                /**Sets  an option value indicating whether to do element quality check for this test  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual void SetDoTest
                (
                    bool doTest /** dotest */ 
                ) = 0;
                /** Tells whether there is criteria value associated with this test  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual bool HasCriteriaValue
                (
                ) = 0;
                /** Returns the criteria value. An exception will be thrown if there is no criteria value associated with this test  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::Unit * GetCriteriaValue
                (
                    NXOpen::CAE::ModelCheck::TestValueTypes::CriteriaType criteriaType /** criteriatype */ ,
                    double* criteriaValue /** criteriavalue */ 
                ) = 0;
                /**Sets the criteria value. An exception will be thrown if there is no criteria value associated with this test 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCriteriaValue
                (
                    NXOpen::CAE::ModelCheck::TestValueTypes::CriteriaType criteriaType /** criteriatype */ ,
                    double criteriaValue /** criteriavalue */ ,
                    NXOpen::Unit * unit /** unit */ 
                ) = 0;
                /**Sets the criteria value. An exception will be thrown if there is no criteria value associated with this test 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual void SetCriteriaValue
                (
                    NXOpen::CAE::ModelCheck::TestValueTypes::CriteriaType criteriaType /** criteriatype */ ,
                    const NXString & criteriaValue /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    NXOpen::Unit * unit /** unit */ 
                ) = 0;
                /**Sets the criteria value. An exception will be thrown if there is no criteria value associated with this test 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                virtual void SetCriteriaValue
                (
                    NXOpen::CAE::ModelCheck::TestValueTypes::CriteriaType criteriaType /** criteriatype */ ,
                    const char * criteriaValue /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    NXOpen::Unit * unit /** unit */ 
                ) = 0;
                /** To know whether this quality test is a solver specific test and a system test  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual bool GetIsSolverSpecificTest
                (
                    bool* isSystemTest /** issystemtest */ 
                ) = 0;
                /** Returns the element reference definitions associated with this test  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual std::vector<NXOpen::CAE::ModelCheck::TestValueTypes::ElementReference> GetElementReferences
                (
                ) = 0;
                /** Reset as customer default setting 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual void ResetToCustomerDefault
                (
                ) = 0;
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
