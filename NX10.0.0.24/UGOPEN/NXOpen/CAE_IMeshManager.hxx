#ifndef NXOpen_CAE_IMESHMANAGER_HXX_INCLUDED
#define NXOpen_CAE_IMESHMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_IMeshManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class IMeshManager;
    }
    namespace CAE
    {
        class IMeshCollector;
    }
    namespace CAE
    {
        class Mesh;
    }
    class TaggedObject;
    namespace CAE
    {
        class _IMeshManagerBuilder;
        class IMeshManagerImpl;
        /**  @brief  Manages meshes@link NXOpen::CAE::IMeshManager NXOpen::CAE::IMeshManager@endlink  in cae parts  

           <br> This is an abstract class, and cannot be created.  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  IMeshManager : public NXOpen::TaggedObject
        {
            private: IMeshManagerImpl * m_imeshmanager_impl;
            private: friend class  _IMeshManagerBuilder;
            protected: IMeshManager();
            public: ~IMeshManager();
            /** Finds the @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  mesh or collector with this identifier 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::TaggedObject * FindObject
            (
                const NXString & journalIdentifier /** Mesh or collector name */
            );
            /** Finds the @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  mesh or collector with this identifier 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            NXOpen::TaggedObject * FindObject
            (
                const char * journalIdentifier /** Mesh or collector name */
            );
            /** Returns the IMeshCollectors @link NXOpen::CAE::IMeshCollector NXOpen::CAE::IMeshCollector@endlink  for this manager  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::IMeshCollector *> GetMeshCollectors
            (
            );
            /** Returns the Meshes @link NXOpen::CAE::Mesh NXOpen::CAE::Mesh@endlink  for this manager  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::Mesh *> GetMeshes
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
