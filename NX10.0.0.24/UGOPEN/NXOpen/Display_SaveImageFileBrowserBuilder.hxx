#ifndef NXOpen_DISPLAY_SAVEIMAGEFILEBROWSERBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_SAVEIMAGEFILEBROWSERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_SaveImageFileBrowserBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_SaveImageFileBrowserBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class SaveImageFileBrowserBuilder;
    }
    class Builder;
    namespace Display
    {
        class _SaveImageFileBrowserBuilderBuilder;
        class SaveImageFileBrowserBuilderImpl;
        /**
            Represents a @link NXOpen::Display::SaveImageFileBrowserBuilder NXOpen::Display::SaveImageFileBrowserBuilder@endlink .
            Saves an image file using a file browser.
             <br> This class is restricted to being called from a program running during an 
            Interactive NX session.  If run from a non-interactive session it will 
            return NULL. <br> 
             <br> To create a new instance of this class, use @link NXOpen::ViewCollection::CreateSaveImageFileBrowserBuilder  NXOpen::ViewCollection::CreateSaveImageFileBrowserBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  SaveImageFileBrowserBuilder : public NXOpen::Builder
        {
            /** To specify the Ray Traced Studio static image file format */
            public: enum FileFormats
            {
                FileFormatsTif/** Tagged Image File Format (TIFF) file format */,
                FileFormatsPng/** Portable Network Graphic (PNG) file format */,
                FileFormatsJpg/** Joint Photographic Experts Group (JPEG) file format */
            };

            private: SaveImageFileBrowserBuilderImpl * m_saveimagefilebrowserbuilder_impl;
            private: friend class  _SaveImageFileBrowserBuilderBuilder;
            protected: SaveImageFileBrowserBuilder();
            public: ~SaveImageFileBrowserBuilder();
            /**Returns  the Ray Traced Studio static image file format 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::SaveImageFileBrowserBuilder::FileFormats FileFormat
            (
            );
            /**Sets  the Ray Traced Studio static image file format 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFileFormat
            (
                NXOpen::Display::SaveImageFileBrowserBuilder::FileFormats fileFormat /** fileformat */ 
            );
            /**Returns  the Ray Traced Studio static image file browser 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NativeImageFileBrowser
            (
            );
            /**Sets  the Ray Traced Studio static image file browser 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNativeImageFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the Ray Traced Studio static image file browser 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetNativeImageFileBrowser
            (
                const char * filename /** filename */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
