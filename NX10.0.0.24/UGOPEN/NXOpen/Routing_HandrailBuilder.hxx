#ifndef NXOpen_ROUTING_HANDRAILBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_HANDRAILBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_HandrailBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_CharacteristicList.hxx>
#include <NXOpen/Routing_HandrailBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class HandrailBuilder;
    }
    class Builder;
    namespace Routing
    {
        class CharacteristicList;
    }
    namespace Routing
    {
        class _HandrailBuilderBuilder;
        class HandrailBuilderImpl;
        /**
                Represents a @link Routing::HandrailBuilder Routing::HandrailBuilder@endlink 
                Creates a handrail from a selected point. The handrail is created by
                optionally placing a post depending on the post type followed by placing
                the rails across the route control points corresponding to the posts.
             <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateHandrailBuilder  NXOpen::Routing::RouteManager::CreateHandrailBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  HandrailBuilder : public NXOpen::Builder
        {
            /**
                        The post type: Start, Intermediate, None, End.
                        Start implies closing rails must be closed to the start post.
                        Intermediate implies that the post is neither a start nor an end post but in the middle.
                        None implies the post is intermediate with rails but without a post.
                        End implies the post is the last of the posts.
                    */
            public: enum PostTypes
            {
                PostTypesStart/** start */ ,
                PostTypesIntermediate/** intermediate */ ,
                PostTypesNone/** none */ ,
                PostTypesEnd/** end */ 
            };

            private: HandrailBuilderImpl * m_handrailbuilder_impl;
            private: friend class  _HandrailBuilderBuilder;
            protected: HandrailBuilder();
            public: ~HandrailBuilder();
            /**Returns  the type of post: Start, Intermediate, None, End 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: NXOpen::Routing::HandrailBuilder::PostTypes PostType
            (
            );
            /**Sets  the type of post: Start, Intermediate, None, End 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void SetPostType
            (
                NXOpen::Routing::HandrailBuilder::PostTypes postType /** posttype */ 
            );
            /**Returns  an option to automatically close the handrail 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: bool AutoCloseOption
            (
            );
            /**Sets  an option to automatically close the handrail 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void SetAutoCloseOption
            (
                bool autoClose /** autoclose */ 
            );
            /**Returns  an option to create horizontal rail stock 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: bool HasHorizontalRails
            (
            );
            /**Sets  an option to create horizontal rail stock 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void SetHasHorizontalRails
            (
                bool railOption /** railoption */ 
            );
            /** Sets the handrail part characteristics 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void SetHandrailPartCharx
            (
                NXOpen::Routing::CharacteristicList * partCharx /** The characteristics to use for the handrail posts */
            );
            /** Creates a handrail post, horizontal railings assembly components and places them in the appropriate orientation. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void PlaceHandrail
            (
                const NXOpen::Point3d & postLocation /** The point where the handrail is to be placed */
            );
            /** Reverses the orientation of the last placed post 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_platform ("Routing Platform") */
            public: void ReverseLastPost
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
