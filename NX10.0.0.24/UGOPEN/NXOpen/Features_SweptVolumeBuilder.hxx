#ifndef NXOpen_FEATURES_SWEPTVOLUMEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SWEPTVOLUMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SweptVolumeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SweptVolumeBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class SweptVolumeBuilder;
    }
    class Direction;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class ScCollector;
    class Section;
    namespace Features
    {
        class _SweptVolumeBuilderBuilder;
        class SweptVolumeBuilderImpl;
        /**
            Represents a @link NXOpen::Features::SweptVolume NXOpen::Features::SweptVolume@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::SweepFeatureCollection::CreateSweptVolumeBuilder  NXOpen::Features::SweepFeatureCollection::CreateSweptVolumeBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        SweepOrientation </td> <td> 
         
        ForcedDirection </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  SweptVolumeBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** These represent the type of Sweep Orientation feature to be created */
            public: enum SweepOrient
            {
                SweepOrientForcedDirection/** Forced Direction */,
                SweepOrientNormaltoPath/** Normal to Path */,
                SweepOrientNormaltoCylindricalFace/** Normal to Cylindrical Face */
            };

            private: SweptVolumeBuilderImpl * m_sweptvolumebuilder_impl;
            private: friend class  _SweptVolumeBuilderBuilder;
            protected: SweptVolumeBuilder();
            public: ~SweptVolumeBuilder();
            /**Returns  the tool body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ToolBody
            (
            );
            /**Sets  the tool body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToolBody
            (
                NXOpen::ScCollector * toolBody /** toolbody */ 
            );
            /**Returns  the tool path 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ToolPath
            (
            );
            /**Returns  the sweep orientation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SweptVolumeBuilder::SweepOrient SweepOrientation
            (
            );
            /**Sets  the sweep orientation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSweepOrientation
            (
                NXOpen::Features::SweptVolumeBuilder::SweepOrient sweepOrientation /** sweeporientation */ 
            );
            /**Returns  the forced direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ForcedDirection
            (
            );
            /**Sets  the forced direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetForcedDirection
            (
                NXOpen::Direction * forcedDirection /** forceddirection */ 
            );
            /**Returns  the boolean data 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanData
            (
            );
            /**Returns  the cylindarical face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CylindricalFace
            (
            );
            /**Sets  the cylindarical face 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCylindricalFace
            (
                NXOpen::ScCollector * cylindricalFace /** cylindricalface */ 
            );
            /**Returns  the face to ignore 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FaceToIgnore
            (
            );
            /**Sets  the face to ignore 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFaceToIgnore
            (
                NXOpen::ScCollector * faceToIgnore /** facetoignore */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
