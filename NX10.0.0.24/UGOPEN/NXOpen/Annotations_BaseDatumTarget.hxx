#ifndef NXOpen_ANNOTATIONS_BASEDATUMTARGET_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BASEDATUMTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BaseDatumTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_Gdt.hxx>
#include <NXOpen/Annotations_IDatumTarget.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class BaseDatumTarget;
    }
    namespace Annotations
    {
        class Gdt;
    }
    namespace Annotations
    {
        class IDatumTarget;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class INXObject;
    namespace Annotations
    {
        class _BaseDatumTargetBuilder;
        class BaseDatumTargetImpl;
        /** Represents a datum target <br> This is an abstract class, and cannot be created.  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  BaseDatumTarget : public NXOpen::Annotations::Gdt, public virtual NXOpen::Annotations::IDatumTarget
        {
            private: BaseDatumTargetImpl * m_basedatumtarget_impl;
            private: friend class  _BaseDatumTargetBuilder;
            protected: BaseDatumTarget();
            public: ~BaseDatumTarget();
            /**Returns  the datum target label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXString DatumLabel
            (
            );
            /**Sets  the datum target label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetDatumLabel
            (
                const NXString & datumLabel /** New datum label */
            );
            /**Sets  the datum target label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            virtual void SetDatumLabel
            (
                const char * datumLabel /** New datum label */
            );
            /**Returns  the datum target index.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual int TargetIndex
            (
            );
            /**Sets  the datum target index.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetTargetIndex
            (
                int index /** New datum target index */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
