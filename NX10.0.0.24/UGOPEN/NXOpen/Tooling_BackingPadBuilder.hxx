#ifndef NXOpen_TOOLING_BACKINGPADBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_BACKINGPADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_BackingPadBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_BackingPadBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class BackingPadBuilder;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Builder;
    class Expression;
    namespace Features
    {
        class SelectFeatureList;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class Part;
    class Section;
    class SelectFaceList;
    namespace Tooling
    {
        class _BackingPadBuilderBuilder;
        class BackingPadBuilderImpl;
        /** Represents a @link NXOpen::Tooling::BackingPadBuilder NXOpen::Tooling::BackingPadBuilder@endlink  which is used to create or delete the Backing Pad.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreateBackingPadBuilder  NXOpen::Tooling::ProgressiveDieManager::CreateBackingPadBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        OffsetValueLinearDimension.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetValueLinearDimensionNegativeX.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetValueLinearDimensionNegativeY.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetValueLinearDimensionPositiveX.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetValueLinearDimensionPositiveY.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        <tr><td> 
         
        PadHeightLinearDimension.Value </td> <td> 
         
        50 (millimeters part), 2 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  BackingPadBuilder : public NXOpen::Builder
        {
            /** types of backing pad design */
            public: enum Types
            {
                TypesKfBoundBox/** kf bound box */ ,
                TypesUserDefined/** user defined */ ,
                TypesDeletePad/** delete pad */ 
            };

            private: BackingPadBuilderImpl * m_backingpadbuilder_impl;
            private: friend class  _BackingPadBuilderBuilder;
            protected: BackingPadBuilder();
            public: ~BackingPadBuilder();
            /**Returns  the select target component in which to design backing pad 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponent * SelectComponent
            (
            );
            /**Returns  the select faces 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * SelectFaces
            (
            );
            /**Returns  the select curve 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectCurve
            (
            );
            /**Returns  the offset value linear dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetValueLinearDimension
            (
            );
            /**Returns  the offset value linear dimension positive x 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetValueLinearDimensionPositiveX
            (
            );
            /**Returns  the offset value linear dimension negative x 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetValueLinearDimensionNegativeX
            (
            );
            /**Returns  the offset value linear dimension positive y 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetValueLinearDimensionPositiveY
            (
            );
            /**Returns  the offset value linear dimension negative y 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetValueLinearDimensionNegativeY
            (
            );
            /**Returns  the pad height linear dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PadHeightLinearDimension
            (
            );
            /**Returns  the pad boolean 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * PadBoolean
            (
            );
            /**Returns  the select backing pad feature to delete 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * SelectPad
            (
            );
            /**Returns  the type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::BackingPadBuilder::Types Type
            (
            );
            /**Sets  the type 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetType
            (
                NXOpen::Tooling::BackingPadBuilder::Types type /** type */ 
            );
            /**Returns  the previous work part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * PreviousWorkPart
            (
            );
            /**Sets  the previous work part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPreviousWorkPart
            (
                NXOpen::Part * previousWorkPart /** previousworkpart */ 
            );
            /** Wave selected faces to support journamation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void WaveFaces
            (
            );
            /** Delete waved faces to support journamation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteWavedFaces
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
