#ifndef NXOpen_CAM_METHODBUILDER_HXX_INCLUDED
#define NXOpen_CAM_METHODBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MethodBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MethodBuilder;
    }
    namespace CAM
    {
        class CutParameters;
    }
    namespace CAM
    {
        class DisplayPaint;
    }
    namespace CAM
    {
        class DisplayPath;
    }
    namespace CAM
    {
        class DisplaySilhouette;
    }
    namespace CAM
    {
        class DisplayTool;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class PathDisplayColors;
    }
    namespace CAM
    {
        class _MethodBuilderBuilder;
        class MethodBuilderImpl;
        /** Represents a Method Builder  <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MethodBuilder : public NXOpen::CAM::NCGroupBuilder
        {
            private: MethodBuilderImpl * m_methodbuilder_impl;
            private: friend class  _MethodBuilderBuilder;
            protected: MethodBuilder();
            public: ~MethodBuilder();
            /**Returns  the cut parameter object
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CutParameters * CutParameters
            (
            );
            /**Returns  the sub builder for tool display 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DisplayTool * ToolDisplay
            (
            );
            /**Returns  the sub builder for path display 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DisplayPath * PathDisplay
            (
            );
            /**Returns  the sub builder for paint display 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DisplayPaint * PaintDisplay
            (
            );
            /**Returns  the sub builder for silhou display 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DisplaySilhouette * SilhouDisplay
            (
            );
            /**Returns  the sub builder for path display colors
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PathDisplayColors * PathDisplayColors
            (
            );
            /**Get cut method @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: NXString GetCutMethod
            (
            );
            /**Set cut method
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutMethod
            (
                const NXString & libRef /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Set cut method
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetCutMethod
            (
                const char * libRef /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
