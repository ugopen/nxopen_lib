#ifndef NXOpen_LAYOUT2D_COMPONENTSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_COMPONENTSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_ComponentSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layout2d_ComponentSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class ComponentSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Layout2d
    {
        class _ComponentSettingsBuilderBuilder;
        class ComponentSettingsBuilderImpl;
        /**
            Represents a @link NXOpen::Layout2d::ComponentSettingsBuilder NXOpen::Layout2d::ComponentSettingsBuilder@endlink 
            This builder stores the information of the 2D Component settings
            
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  ComponentSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: ComponentSettingsBuilderImpl * m_componentsettingsbuilder_impl;
            private: friend class  _ComponentSettingsBuilderBuilder;
            protected: ComponentSettingsBuilder();
            public: ~ComponentSettingsBuilder();
            /**Returns  the flag to show reference geometry or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowReferenceGeometry
            (
            );
            /**Sets  the flag to show reference geometry or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetShowReferenceGeometry
            (
                bool toggle /** toggle */ 
            );
            /**Returns  the flag to show annotations or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowAnnotations
            (
            );
            /**Sets  the flag to show annotations or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetShowAnnotations
            (
                bool toggle /** toggle */ 
            );
            /**Returns  the flag to show dimensions or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowDimensions
            (
            );
            /**Sets  the flag to show dimensions or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetShowDimensions
            (
                bool toggle /** toggle */ 
            );
            /**Returns  the flag to do automatic update or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticUpdate
            (
            );
            /**Sets  the flag to do automatic update or not 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetAutomaticUpdate
            (
                bool toggle /** toggle */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
