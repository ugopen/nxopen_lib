#ifndef NXOpen_TOOLING_SLUGRETENTIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SLUGRETENTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SlugRetentionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Tooling_SlugRetentionBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SlugRetentionBuilder;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Body;
    class Builder;
    class Direction;
    class Expression;
    namespace Features
    {
        class Feature;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class Part;
    class Point;
    namespace Tooling
    {
        class _SlugRetentionBuilderBuilder;
        class SlugRetentionBuilderImpl;
        /** Represents a @link NXOpen::Tooling::SlugRetentionBuilder NXOpen::Tooling::SlugRetentionBuilder@endlink  which is used to create the Slug Retention.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreateSlugRetentionBuilder  NXOpen::Tooling::ProgressiveDieManager::CreateSlugRetentionBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AngularDimension.Value </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        OffsetDistance </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        RadiusDimension.Value </td> <td> 
         
        7 (millimeters part), 0.25 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SlugRetentionBuilder : public NXOpen::Builder
        {
            private: SlugRetentionBuilderImpl * m_slugretentionbuilder_impl;
            private: friend class  _SlugRetentionBuilderBuilder;
            protected: SlugRetentionBuilder();
            public: ~SlugRetentionBuilder();
            /**Returns  the select component 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponent * SelectComponent
            (
            );
            /**Returns  the select point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the select point 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSelectPoint
            (
                NXOpen::Point * selectPoint /** selectpoint */ 
            );
            /**Returns  the rotate direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * RotateDirection
            (
            );
            /**Sets  the rotate direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetRotateDirection
            (
                NXOpen::Direction * rotateDirection /** rotatedirection */ 
            );
            /**Returns  the offset direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * OffsetDirection
            (
            );
            /**Sets  the offset direction 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetOffsetDirection
            (
                NXOpen::Direction * offsetDirection /** offsetdirection */ 
            );
            /**Returns  the angular dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AngularDimension
            (
            );
            /**Returns  the radius dimension 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RadiusDimension
            (
            );
            /**Returns  the slug retention boolean data 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * SlugRetentionBooleanData
            (
            );
            /**Returns  the offset distance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double OffsetDistance
            (
            );
            /**Sets  the offset distance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetOffsetDistance
            (
                double offsetDistance /** offsetdistance */ 
            );
            /**Returns  the target body for subtract 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Body * TargetBodyForSubtract
            (
            );
            /**Sets  the target body for subtract 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTargetBodyForSubtract
            (
                NXOpen::Body * targetBodyForSubtract /** targetbodyforsubtract */ 
            );
            /**Returns  the slug retention feature 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Feature * SlugRetentionFeature
            (
            );
            /**Sets  the slug retention feature 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSlugRetentionFeature
            (
                NXOpen::Features::Feature * slugRetentionFeature /** slugretentionfeature */ 
            );
            /**Returns  the previous work part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * PreviousWorkPart
            (
            );
            /**Sets  the previous work part 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPreviousWorkPart
            (
                NXOpen::Part * previousWorkPart /** previousworkpart */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
