#ifndef NXOpen_CAM_INSPECTIONMEASUREPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONMEASUREPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionMeasurePointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InspectionMeasurePointBuilder.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionMeasurePointBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InspectionMoveBuilder;
    }
    class Point;
    class SelectPoint;
    namespace CAM
    {
        class _InspectionMeasurePointBuilderBuilder;
        class InspectionMeasurePointBuilderImpl;
        /** Represents the builder for the CMM Inspection sub-operation Measure Point.  <br> To create a new instance of this class, use @link NXOpen::CAM::InspectionMoveCollection::CreateInspectionMeasurePointBuilder  NXOpen::CAM::InspectionMoveCollection::CreateInspectionMeasurePointBuilder @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionMeasurePointBuilder : public NXOpen::CAM::InspectionMoveBuilder
        {
            /** specifies the method used to define a point */
            public: enum PointTypes
            {
                PointTypesExistingPoint/** Select an existing point */,
                PointTypesCursorLocation/** Cursor Location */,
                PointTypesPointConstructor/** Use the Point Constructor */
            };

            private: InspectionMeasurePointBuilderImpl * m_inspectionmeasurepointbuilder_impl;
            private: friend class  _InspectionMeasurePointBuilderBuilder;
            protected: InspectionMeasurePointBuilder();
            public: ~InspectionMeasurePointBuilder();
            /**Returns  the point type enum 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMeasurePointBuilder::PointTypes PointTypeEnum
            (
            );
            /**Sets  the point type enum 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointTypeEnum
            (
                NXOpen::CAM::InspectionMeasurePointBuilder::PointTypes pointTypeEnum /** pointtypeenum */ 
            );
            /**Returns  the point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TargetPoint
            (
            );
            /**Sets  the point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the select existing point 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectPoint * SelectExistingPoint
            (
            );
            /**Returns  the X at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double X
            (
            );
            /**Sets  the X at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetX
            (
                double x /** x */ 
            );
            /**Returns  the Y at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double Y
            (
            );
            /**Sets  the Y at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetY
            (
                double y /** y */ 
            );
            /**Returns  the Z at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double Z
            (
            );
            /**Sets  the Z at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetZ
            (
                double z /** z */ 
            );
            /**Returns  the I direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double I
            (
            );
            /**Sets  the I direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetI
            (
                double direction /** direction */ 
            );
            /**Returns  the J direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double J
            (
            );
            /**Sets  the J direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetJ
            (
                double direction /** direction */ 
            );
            /**Returns  the K direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double K
            (
            );
            /**Sets  the K direction at measured point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetK
            (
                double direction /** direction */ 
            );
            /** Update measured point parameters based on selected point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void UpdateParams
            (
            );
            /**Returns  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes DepthMethod
            (
            );
            /**Sets  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthMethod
            (
                NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes method /** method */ 
            );
            /**Returns  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DepthDistance
            (
            );
            /**Sets  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the builder for approach distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ApproachDist
            (
            );
            /**Returns  the builder for retract distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * RetractDist
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
