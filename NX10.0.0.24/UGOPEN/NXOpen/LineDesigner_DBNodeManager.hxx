#ifndef NXOpen_LINEDESIGNER_DBNODEMANAGER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_DBNODEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_DBNodeManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/LineDesigner_DBColumnGridNode.hxx>
#include <NXOpen/LineDesigner_DBConveyorNode.hxx>
#include <NXOpen/LineDesigner_DBFactoryNode.hxx>
#include <NXOpen/LineDesigner_DBFenceNode.hxx>
#include <NXOpen/LineDesigner_DBFloorEquipmentNode.hxx>
#include <NXOpen/LineDesigner_DBNodeContainer.hxx>
#include <NXOpen/LineDesigner_DBPlatformEquipmentNode.hxx>
#include <NXOpen/LineDesigner_DBStairwayEquipmentNode.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class DBNodeManager;
    }
    class Session;
    namespace LineDesigner
    {
        class DBColumnGridNode;
    }
    namespace LineDesigner
    {
        class DBConveyorNode;
    }
    namespace LineDesigner
    {
        class DBFactoryNode;
    }
    namespace LineDesigner
    {
        class DBFenceNode;
    }
    namespace LineDesigner
    {
        class DBFloorEquipmentNode;
    }
    namespace LineDesigner
    {
        class DBNodeContainer;
    }
    namespace LineDesigner
    {
        class DBPlatformEquipmentNode;
    }
    namespace LineDesigner
    {
        class DBStairwayEquipmentNode;
    }
    class Part;
    namespace LineDesigner
    {
        class DBNodeManagerImpl;
        /** Represents a manager of line designer db nodes  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  DBNodeManager
        {
            private: DBNodeManagerImpl * m_dbnodemanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit DBNodeManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static DBNodeManager* theDBNodeManager;
            /** Returns the DBNodeManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static DBNodeManager* GetDBNodeManager(NXOpen::Session *owner);
            public: ~DBNodeManager();
            /** Creates a DB factory Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBFactoryNode * CreateDbfactorynode
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBFactoryNode::NodeType type /** Type of factory node */
            );
            /** Creates a DB fence Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBFenceNode * CreateDbfencenode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Platform Equipment Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBPlatformEquipmentNode * CreateDbplatformequipmentnode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Conveyor Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBConveyorNode * CreateDbconveyornode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Floor Equipment Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBFloorEquipmentNode * CreateDbfloorequipmentnode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Column Grid Equipment Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBColumnGridNode * CreateDbcolumngridnode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Stairway Equipment Node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBStairwayEquipmentNode * CreateDbstairwayequipmentnode
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a DB Node Container  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DBNodeContainer * CreateDbnodecontainer
            (
                NXOpen::Part * part /** part */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
