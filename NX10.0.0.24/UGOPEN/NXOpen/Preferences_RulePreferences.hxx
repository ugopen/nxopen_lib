#ifndef NXOpen_PREFERENCES_RULEPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_RULEPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_RulePreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class RulePreferences;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class RulePreferencesImpl;
        /** Provides methods for manipulating the Knowledge Fusion preferences in a session.  <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::SessionPreferences  NXOpen::Preferences::SessionPreferences @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  RulePreferences
        {
            private: RulePreferencesImpl * m_rulepreferences_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit RulePreferences(NXOpen::Preferences::SessionPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~RulePreferences();
            /** Get the search libraries for user classes.  @return  search libraries 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_kf_author ("UG/Knowledge Fusion - Author") OR pts_author ("Product Template Studio (Author)") */
            public: std::vector<NXString> GetSearchLibraries
            (
            );
            /** Set the search libraries for user classes. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_kf_author ("UG/Knowledge Fusion - Author") OR pts_author ("Product Template Studio (Author)") */
            public: void SetSearchLibraries
            (
                std::vector<NXString> & userLibraries /** search libraries   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
