#ifndef NXOpen_MOTION_MOTIONSESSION_HXX_INCLUDED
#define NXOpen_MOTION_MOTIONSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MotionSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MotionSession;
    }
    class Session;
    namespace Motion
    {
        class MotionEnvironment;
    }
    namespace Motion
    {
        class MotionMethods;
    }
    namespace Motion
    {
        class PhysicsConversionBuilder;
    }
    namespace Motion
    {
        class PostProcess;
    }
    class NXObject;
    namespace Motion
    {
        class MotionSessionImpl;
        /** Represents motion session  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MotionSession
        {
            private: MotionSessionImpl * m_motionsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit MotionSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~MotionSession();
            /** Clone the Simulation.  @return  new motion simulation part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString CloneSimulation
            (
                NXOpen::NXObject * masterPart /** the master part */,
                const NXString & motionSimName /** motion simulation part which ready to be cloned   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Clone the Simulation.  @return  new motion simulation part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString CloneSimulation
            (
                NXOpen::NXObject * masterPart /** the master part */,
                const char * motionSimName /** motion simulation part which ready to be cloned   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Delete the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void DeleteSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const NXString & motionSimName /** motion simulation part which ready to be deleted   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Delete the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void DeleteSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const char * motionSimName /** motion simulation part which ready to be deleted   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Create the Simulation.  @return  created motion simulation part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString CreateSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */
            );
            /** Create the Simulation with an input name. @return  the created motion simulation part name 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString CreateNamingSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const NXString & inputSimName /** the input simulation name  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Create the Simulation with an input name. @return  the created motion simulation part name 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString CreateNamingSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const char * inputSimName /** the input simulation name  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Direct open the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void DirectOpenSimulation
            (
                const NXString & motionSimName /** motion simulation part name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Direct open the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void DirectOpenSimulation
            (
                const char * motionSimName /** motion simulation part name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Reparent the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ReparentSimulation
            (
                const NXString & motionSimFullName /** motion simulation full name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & destinationDirectory /** destination directory   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Reparent the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ReparentSimulation
            (
                const char * motionSimFullName /** motion simulation full name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * destinationDirectory /** destination directory   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Initialize the mech 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void InitializeMechanisms
            (
            );
            /** Convert mating conditions and constraints to links and joints  @return  the link which will be fixed to ground 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXObject * ConstraintsToMotionObject
            (
                NXOpen::NXObject * scenarioPart /** the scenario part object */,
                NXOpen::NXObject * masterPart /** the master part object */
            );
            /** Fix the link to ground  @return  the joint object created 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXObject * FixLinkToGround
            (
                NXOpen::NXObject * link /** the link object */
            );
            /** Get all scenario names @return  scenario names 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXString> GetScenarioNames
            (
                NXOpen::NXObject * masterPart /** the master part object */
            );
            /** Get the full name for a scenario name @return  full path to the file 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString GetFullName
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & scenarioName /** scenario name to check (with or without extension)   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Get the full name for a scenario name @return  full path to the file 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString GetFullName
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * scenarioName /** scenario name to check (with or without extension)   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a @link NXOpen::Motion::PhysicsConversionBuilder NXOpen::Motion::PhysicsConversionBuilder@endlink   @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::PhysicsConversionBuilder * CreatePhysicsConversionBuilder
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ 
            );
            /** Export kinematics for Process Simulate 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ExportProcessSimulateKinematics
            (
            );


            /** Returns the @link NXOpen::Motion::MotionEnvironment  NXOpen::Motion::MotionEnvironment @endlink  belonging to this part 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: NXOpen::Motion::MotionEnvironment *Environments();
            /** Returns the @link NXOpen::Motion::PostProcess  NXOpen::Motion::PostProcess @endlink  belonging to this part 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: NXOpen::Motion::PostProcess *PostProcess();
            /** Returns the @link NXOpen::Motion::MotionMethods  NXOpen::Motion::MotionMethods @endlink belonging to this part 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: NXOpen::Motion::MotionMethods *MotionMethods();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
