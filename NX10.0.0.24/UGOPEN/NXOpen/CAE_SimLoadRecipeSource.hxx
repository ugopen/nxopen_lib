#ifndef NXOpen_CAE_SIMLOADRECIPESOURCE_HXX_INCLUDED
#define NXOpen_CAE_SIMLOADRECIPESOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLoadRecipeSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimLoadRecipeSource.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLoadRecipeSource;
    }
    class BasePropertyTable;
    namespace CAE
    {
        class _SimLoadRecipeSourceBuilder;
        class SimLoadRecipeSourceImpl;
        /**  @brief  This is the class handling the attributes of a source used by a load recipe.  

          <br> Use CAE.SimLoadRecipeSourceCollection.Create  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLoadRecipeSource : public NXOpen::TaggedObject
        {
            private: SimLoadRecipeSourceImpl * m_simloadrecipesource_impl;
            private: friend class  _SimLoadRecipeSourceBuilder;
            protected: SimLoadRecipeSource();
            public: ~SimLoadRecipeSource();
            /**Returns  the path of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Path
            (
            );
            /**Sets  the path of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPath
            (
                const NXString & path /** path */ 
            );
            /**Sets  the path of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetPath
            (
                const char * path /** path */ 
            );
            /**Returns  the reader type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available reader types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Type attribute of the FileFormat elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ReaderType
            (
            );
            /**Sets  the reader type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available reader types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Type attribute of the FileFormat elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetReaderType
            (
                const NXString & readerType /** readertype */ 
            );
            /**Sets  the reader type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available reader types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Type attribute of the FileFormat elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetReaderType
            (
                const char * readerType /** readertype */ 
            );
            /**Returns  the format type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available format types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Name attribute of the FormatHandler elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FormatType
            (
            );
            /**Sets  the format type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available format types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Name attribute of the FormatHandler elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFormatType
            (
                const NXString & formatType /** formattype */ 
            );
            /**Sets  the format type of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink . The available format types 
                        are declared in datasourcehandlers.xml file located in \<NX_install_dir\>/UGSTRUCTURES/cae_language directory.
                        
                        This string correlates to the Name attribute of the FormatHandler elements.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetFormatType
            (
                const char * formatType /** formattype */ 
            );
            /**Returns  the label of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SourceLabel
            (
            );
            /**Sets  the label of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSourceLabel
            (
                const NXString & sourceLabel /** sourcelabel */ 
            );
            /**Sets  the label of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetSourceLabel
            (
                const char * sourceLabel /** sourcelabel */ 
            );
            /** Get the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  of a @link NXOpen::CAE::SimLoadRecipeSource NXOpen::CAE::SimLoadRecipeSource@endlink   @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::BasePropertyTable * GetPropertyTable
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
