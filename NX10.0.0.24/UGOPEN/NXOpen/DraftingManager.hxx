#ifndef NXOpen_DRAFTINGMANAGER_HXX_INCLUDED
#define NXOpen_DRAFTINGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DraftingManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_ImportAutocadBlockBuilder.hxx>
#include <NXOpen/Annotations_ImportSymbolBuilder.hxx>
#include <NXOpen/Drawings_MarkAsTemplateBuilder.hxx>
#include <NXOpen/Drawings_SheetZoneReferenceBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DraftingManager;
    class Part;
    namespace Annotations
    {
        class ImportAutocadBlockBuilder;
    }
    namespace Annotations
    {
        class ImportSymbolBuilder;
    }
    class DisplayableObject;
    namespace Drafting
    {
        class AutomationManager;
    }
    namespace Drawings
    {
        class BordersAndZonesCollection;
    }
    namespace Drawings
    {
        class MarkAsTemplateBuilder;
    }
    namespace Drawings
    {
        class SectionLineCollection;
    }
    namespace Drawings
    {
        class SheetZoneReferenceBuilder;
    }
    class NXObject;
    class DraftingManagerImpl;
    /** Represents an object that manages drafting objects and member views.  <br> To obtain an instance of this class, refer to @link NXOpen::Part  NXOpen::Part @endlink  <br> 
     <br>  Created in NX4.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  DraftingManager
    {
        private: DraftingManagerImpl * m_draftingmanager_impl;
        private: NXOpen::Part* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit DraftingManager(NXOpen::Part *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~DraftingManager();
        /** Converts all older drafting objects (including member views) in the part to the latest version. 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void VersionUpAllDraftingObjects
        (
        );
        /** Converts selected drafting objects (including member views) in the part to the latest version. 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void VersionUpSelectedDraftingObjects
        (
            const std::vector<NXOpen::NXObject *> & draftingObjects /** drafting objects */ 
        );
        /** Creates the Builder for the Symbol Importer  @return  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : nx_layout ("NX Layout") */
        public: NXOpen::Annotations::ImportSymbolBuilder * CreateImportSymbolBuilder
        (
        );
        /** Creates a @link NXOpen::Drawings::MarkAsTemplateBuilder NXOpen::Drawings::MarkAsTemplateBuilder@endlink  @return  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") */
        public: NXOpen::Drawings::MarkAsTemplateBuilder * CreateMarkAsTemplateBuilder
        (
        );
        /** Creates the Sheet Zone Reference builder  @return  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") */
        public: NXOpen::Drawings::SheetZoneReferenceBuilder * CreateSheetZoneReferenceBuilder
        (
        );
        /** Creates the Builder for the AutoCAD Block Importer  @return  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : nx_layout ("NX Layout") */
        public: NXOpen::Annotations::ImportAutocadBlockBuilder * CreateImportAutocadBlockBuilder
        (
        );
        /** Get the drawing template instantiation status  @return  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: bool GetTemplateInstantiationIsComplete
        (
        );
        /** Set the drawing template instantiation status 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") */
        public: void SetTemplateInstantiationIsComplete
        (
            bool templateInstantiationStatus /** templateinstantiationstatus */ 
        );
        /** Identify object to be drawn as Cut in Drafting 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: void AddCutObject
        (
            NXOpen::DisplayableObject * object /** object */ 
        );
        /** Restores unpasted cut objects to their original drawing state
                 <br> 
                This method is used by NX user interface to restore drafting objects that
                were cut but not pasted. If called by an automation program, this
                method can cause unexpected results.  <br>  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: void RestoreUnpastedObjects
        (
        );
        /** Is this object to be drawn as Cut?  @return  
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsCutObject
        (
            NXOpen::DisplayableObject * object /** object */ 
        );


        /** Section Line Collection 
         <br>  Created in NX6.0.0.  <br>  
        */
        public: NXOpen::Drawings::SectionLineCollection *SectionLines();
        /** Returns the @link NXOpen::Drafting::AutomationManager NXOpen::Drafting::AutomationManager@endlink  belonging to this session 
         <br>  Created in NX8.0.0.  <br>  
        */
        public: NXOpen::Drafting::AutomationManager *AutomationManager();
        /** Borders and Zones Collection 
         <br>  Created in NX8.0.0.  <br>  
        */
        public: NXOpen::Drawings::BordersAndZonesCollection *BordersAndZonesObjects();
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
