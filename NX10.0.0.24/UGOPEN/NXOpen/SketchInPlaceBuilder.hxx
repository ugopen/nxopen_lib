#ifndef NXOpen_SKETCHINPLACEBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHINPLACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchInPlaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Sketch.hxx>
#include <NXOpen/SketchInPlaceBuilder.hxx>
#include <NXOpen/type.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchInPlaceBuilder;
    class Builder;
    class Plane;
    class Point;
    class SelectIReferenceAxis;
    class SelectISurface;
    class _SketchInPlaceBuilderBuilder;
    class SketchInPlaceBuilderImpl;
    /**
        Use the @link NXOpen::SketchInPlaceBuilder NXOpen::SketchInPlaceBuilder@endlink  to create or reattach a @link NXOpen::Sketch NXOpen::Sketch@endlink  on a @link NXOpen::DatumPlane NXOpen::DatumPlane@endlink  or planar @link NXOpen::Face NXOpen::Face@endlink .
         <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateNewSketchInPlaceBuilder  NXOpen::SketchCollection::CreateNewSketchInPlaceBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    CreateIntermediateDatumCsys </td> <td> 
     
    1 </td> </tr> 

    <tr><td> 
     
    MakeOriginAssociative </td> <td> 
     
    1 </td> </tr> 

    <tr><td> 
     
    PlaneOption </td> <td> 
     
    Inferred </td> </tr> 

    </table>  

     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchInPlaceBuilder : public NXOpen::Builder
    {
        private: SketchInPlaceBuilderImpl * m_sketchinplacebuilder_impl;
        private: friend class  _SketchInPlaceBuilderBuilder;
        protected: SketchInPlaceBuilder();
        public: ~SketchInPlaceBuilder();
        /**Returns  the specified sketch plane   
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectISurface * PlaneOrFace
        (
        );
        /**Returns  the specified datum plane   
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Plane * Plane
        (
        );
        /**Returns  the flag to indicate the normal direction of the sketch plane is reversed.  This is not applicable when the plane is a Face. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ReversePlaneNormal
        (
        );
        /**Sets  the flag to indicate the normal direction of the sketch plane is reversed.  This is not applicable when the plane is a Face. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetReversePlaneNormal
        (
            bool reversePlaneNormal /** reverseplanenormal */ 
        );
        /**Returns  the attachment plane option (existing plane, new plane, new csys) 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Sketch::PlaneOption PlaneOption
        (
        );
        /**Sets  the attachment plane option (existing plane, new plane, new csys) 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPlaneOption
        (
            NXOpen::Sketch::PlaneOption planeOption /** planeoption */ 
        );
        /**Returns  the reference axis orientation (horizontal or vertical) 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::AxisOrientation AxisOrientation
        (
        );
        /**Sets  the reference axis orientation (horizontal or vertical) 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAxisOrientation
        (
            NXOpen::AxisOrientation axisOrientation /** axisorientation */ 
        );
        /**Returns  the reference axis 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectIReferenceAxis * Axis
        (
        );
        /**Returns  the flag to indicate the reference axis is reversed 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ReverseAxis
        (
        );
        /**Sets  the flag to indicate the reference axis is reversed 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetReverseAxis
        (
            bool reverseAxis /** reverseaxis */ 
        );
        /**Returns  the origin point for sketch 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Point * SketchOrigin
        (
        );
        /**Sets  the origin point for sketch 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetSketchOrigin
        (
            NXOpen::Point * origin /** origin */ 
        );
        /**Returns  the create intermediate datum csys toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool CreateIntermediateDatumCsys
        (
        );
        /**Sets  the create intermediate datum csys toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void SetCreateIntermediateDatumCsys
        (
            bool intermediateDatumCsys /** intermediatedatumcsys */ 
        );
        /**Returns  the associative origin toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool MakeOriginAssociative
        (
        );
        /**Sets  the associative origin toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void SetMakeOriginAssociative
        (
            bool associativeOrigin /** associativeorigin */ 
        );
        /**Returns  the create project work part origin toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool ProjectWorkPartOrigin
        (
        );
        /**Sets  the create project work part origin toggle.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") */
        public: void SetProjectWorkPartOrigin
        (
            bool projectWorkPartOrigin /** projectworkpartorigin */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
