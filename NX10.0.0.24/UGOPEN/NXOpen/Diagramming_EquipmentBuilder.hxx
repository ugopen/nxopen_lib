#ifndef NXOpen_DIAGRAMMING_EQUIPMENTBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_EQUIPMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_EquipmentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_CannedAnnotationBuilder.hxx>
#include <NXOpen/Diagramming_EquipmentBuilder.hxx>
#include <NXOpen/Diagramming_NodeBuilder.hxx>
#include <NXOpen/Diagramming_PortBuilder.hxx>
#include <NXOpen/Diagramming_Sheet.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class EquipmentBuilder;
    }
    class Builder;
    namespace Diagramming
    {
        class CannedAnnotationBuilder;
    }
    namespace Diagramming
    {
        class NodeBuilder;
    }
    namespace Diagramming
    {
        class PortBuilder;
    }
    namespace Diagramming
    {
        class PortBuilderList;
    }
    namespace Diagramming
    {
        class Sheet;
    }
    namespace Diagramming
    {
        class _EquipmentBuilderBuilder;
        class EquipmentBuilderImpl;
        /**
            Represents a EquipmentBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::DiagrammingTestManager::CreateEquipmentBuilder  NXOpen::Diagramming::DiagrammingTestManager::CreateEquipmentBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  EquipmentBuilder : public NXOpen::Builder
        {
            private: EquipmentBuilderImpl * m_equipmentbuilder_impl;
            private: friend class  _EquipmentBuilderBuilder;
            protected: EquipmentBuilder();
            public: ~EquipmentBuilder();
            /**Returns  the Owning Sheet of this sheet element. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Sheet * OwningSheet
            (
            );
            /** Set the owning sheet after the equipment is created.
                    It is not allowed to change the owning sheet after setting. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOwningSheet
            (
                NXOpen::Diagramming::Sheet * owningSheet /** owningsheet */ 
            );
            /**Returns  the type of this equipment. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Type
            (
            );
            /**Sets  the type of this equipment. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                const NXString & type /** type */ 
            );
            /**Sets  the type of this equipment. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetType
            (
                const char * type /** type */ 
            );
            /**Returns  the node of this equipment. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::NodeBuilder * Node
            (
            );
            /**Returns  the list of the ports. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::PortBuilderList * Ports
            (
            );
            /** Create a new @link NXOpen::Diagramming::LeaderLineBuilder NXOpen::Diagramming::LeaderLineBuilder@endlink  builder.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::PortBuilder * CreatePort
            (
                const NXString & type /** type */ 
            );
            /** Create a new @link NXOpen::Diagramming::LeaderLineBuilder NXOpen::Diagramming::LeaderLineBuilder@endlink  builder.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Diagramming::PortBuilder * CreatePort
            (
                const char * type /** type */ 
            );
            /**Returns  the label of this equipment. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::CannedAnnotationBuilder * Label
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
