#ifndef NXOpen_FEATURES_VEHICLEDESIGN_TIREENVELOPEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_TIREENVELOPEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_TireEnvelopeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_VehicleDesign_TireEnvelopeBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class TireEnvelopeBuilder;
        }
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class NXObject;
    class Part;
    class Point;
    class SelectBodyList;
    class SelectCurve;
    class SelectCurveList;
    class SelectDisplayableObjectList;
    class SelectSketch;
    class Sketch;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _TireEnvelopeBuilderBuilder;
            class TireEnvelopeBuilderImpl;
            /**
                Represents a builder that is used to edit or create a @link NXOpen::Features::VehicleDesign::TireEnvelope NXOpen::Features::VehicleDesign::TireEnvelope@endlink .
                 <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateTireEnvelopeBuilder  NXOpen::Features::VehicleDesignCollection::CreateTireEnvelopeBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AddMasterComponentPart </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            ApplyOffset </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            BushingJointAsymmetric </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            ClearanceValue.Value </td> <td> 
             
            20 (millimeters part), 0.75 (inches part) </td> </tr> 

            <tr><td> 
             
            CreateTireEnvelopeFeature </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DistanceTolerance.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            DownOffsetValue.Value </td> <td> 
             
            6 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            DriverGraph </td> <td> 
             
            RectangularJounceRebound </td> </tr> 

            <tr><td> 
             
            EnvelopeConcavity </td> <td> 
             
            0.5 </td> </tr> 

            <tr><td> 
             
            FirstDriverJointLowerLimit </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            FirstDriverJointSteps </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            FirstDriverJointUpperLimit </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            FixedLocationPercentage </td> <td> 
             
            40 </td> </tr> 

            <tr><td> 
             
            FrontOffsetValue.Value </td> <td> 
             
            20 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            InboardOffsetValue.Value </td> <td> 
             
            10 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            InnerJointAsymmetric </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            JounceDistance </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            MirrorProfile </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            Motion </td> <td> 
             
            ExistingSpindleFile </td> </tr> 

            <tr><td> 
             
            OutboardOffsetValue.Value </td> <td> 
             
            10 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            ProfileSplineLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            RadialEndAngle.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            RadialStartAngle.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            RearOffsetValue.Value </td> <td> 
             
            15 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            ReboundDistance </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            RollAngle.Value </td> <td> 
             
            7 </td> </tr> 

            <tr><td> 
             
            RunClearanceAnalysis </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SaveScenario </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SecondDriverJointLowerLimit </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SecondDriverJointSteps </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SecondDriverJointUpperLimit </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SectionLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SheetBodyLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ShockDriverJointSteps </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SpindleFileLocation </td> <td> 
             
            InNative </td> </tr> 

            <tr><td> 
             
            SpindleLinesLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SuspensionTemplate </td> <td> 
             
            MacPhersonStrut </td> </tr> 

            <tr><td> 
             
            TaperLocationAY </td> <td> 
             
            40 </td> </tr> 

            <tr><td> 
             
            TaperLocationBX </td> <td> 
             
            40 </td> </tr> 

            <tr><td> 
             
            TaperLocationXAxis </td> <td> 
             
            100 </td> </tr> 

            <tr><td> 
             
            TaperLocationYAxis </td> <td> 
             
            100 </td> </tr> 

            <tr><td> 
             
            TireDefinition </td> <td> 
             
            SolidBody </td> </tr> 

            <tr><td> 
             
            TrimRadius.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            UpOffsetValue.Value </td> <td> 
             
            6 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            UseStabilizerBar </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            WheelCenterlineShift.Value </td> <td> 
             
            20 (millimeters part), 1 (inches part) </td> </tr> 

            <tr><td> 
             
            WheelRimDiameter.Value </td> <td> 
             
            430 (millimeters part), 15 (inches part) </td> </tr> 

            </table>  

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  TireEnvelopeBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Settings to indicate how the tire profile will be defined. */
                public: enum TireDefinitionOption
                {
                    TireDefinitionOptionSolidBody/** Use a solid body. */,
                    TireDefinitionOptionProfileCurves/** Use curves in the current work part. */,
                    TireDefinitionOptionSketchfromOtherPart/** Use curves from a sketch in another part. */,
                    TireDefinitionOptionProfilePointFile/** Read a text file with tire profile points. */
                };

                /** Settings to indicate the location to select the spindle file. */
                public: enum SpindleFileLocationOption
                {
                    SpindleFileLocationOptionInNative/** In Native */,
                    SpindleFileLocationOptionInTeamcenter/** In Teamcenter*/
                };

                /** Settings to indicate how the suspension system motion will be defined. */
                public: enum MotionMethod
                {
                    MotionMethodExistingSpindleFile/** From an existing spindle file. */,
                    MotionMethodFromSpindleLines/** From lines that define the locations of the suspension components. */,
                    MotionMethodExistingScenarioMotionModel/** From an existing scenario motion model. */,
                    MotionMethodSuspensionTemplate/** From a defined suspension template. */
                };

                /** Settings to indicate the defined suspension template to use. */
                public: enum SuspensionTemplateType
                {
                    SuspensionTemplateTypeMacPhersonStrut/** Use the MacPherson Strut suspension template. */,
                    SuspensionTemplateTypeShortLongArmwithSteering/** Use the Short-Long Arm with steering suspension template. */,
                    SuspensionTemplateTypeShortLongArmwithoutSteering/** Use the Short-Long Arm without steering suspension template. */,
                    SuspensionTemplateTypeFiveLinkSolidAxlewithoutSteering/** Use the Five Link Solid Axle without steering suspension template. */
                };

                /** Settings to indicate the driver definition to use with the MacPherson Strut suspension template. */
                public: enum DriverGraphOption
                {
                    DriverGraphOptionRectangularJounceRebound/** Use the rectangular jounce rebound definition. */,
                    DriverGraphOptionRectangularTaperedY/** Use the rectangular definition with taper in the Y direction. */,
                    DriverGraphOptionRectangularTaperedX/** Use the rectangular definition with taper in the X direction. */,
                    DriverGraphOptionTaperedOneSide/** Use the rectangular definition with taper on one side. */,
                    DriverGraphOptionBySketch/** Use a sketch to define the driver. */,
                    DriverGraphOptionTwoDriversOneFixed/** Use a fixed definition for two drivers. */
                };

                /** Settings to indicate how the offset will be defined. */
                public: enum EnvelopeOffsetMethod
                {
                    EnvelopeOffsetMethodFixedSections/** Use the values in the fixed sections. */,
                    EnvelopeOffsetMethodCustomerDefinedData/** Use the data that the user defines. */,
                    EnvelopeOffsetMethodFromOffsetFile/** From the offset file. */
                };

                private: TireEnvelopeBuilderImpl * m_tireenvelopebuilder_impl;
                private: friend class  _TireEnvelopeBuilderBuilder;
                protected: TireEnvelopeBuilder();
                public: ~TireEnvelopeBuilder();
                /**Returns  the option to specify whether or not the tire envelope feature will be created. 
                            true indicates the feature will be created, 
                            false indicates the feature will not be created. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateTireEnvelopeFeature
                (
                );
                /**Sets  the option to specify whether or not the tire envelope feature will be created. 
                            true indicates the feature will be created, 
                            false indicates the feature will not be created. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateTireEnvelopeFeature
                (
                    bool createTireEnvelopeFeature /** createtireenvelopefeature */ 
                );
                /**Returns  the option to specify whether or not the clearance analysis will be performed. 
                            true indicates the analysis will be performed, 
                            false indicates the analysis will not be performed. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool RunClearanceAnalysis
                (
                );
                /**Sets  the option to specify whether or not the clearance analysis will be performed. 
                            true indicates the analysis will be performed, 
                            false indicates the analysis will not be performed. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRunClearanceAnalysis
                (
                    bool runClearanceAnalysis /** runclearanceanalysis */ 
                );
                /** Get the notes that are to be stored with the tire envelope feature.  @return  user comments
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetSessionNotes
                (
                );
                /** Set the notes that are to be stored with the tire envelope feature. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSessionNotes
                (
                    const std::vector<NXString> & sessionNotes /** user comments*/
                );
                /**Returns  the layer of the tire envelope sheet body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int SheetBodyLayer
                (
                );
                /**Sets  the layer of the tire envelope sheet body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSheetBodyLayer
                (
                    int sheetBodyLayer /** sheetbodylayer */ 
                );
                /**Returns  the layer of the tire envelope sections. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int SectionLayer
                (
                );
                /**Sets  the layer of the tire envelope sections. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSectionLayer
                (
                    int sectionLayer /** sectionlayer */ 
                );
                /**Returns  the layer of the tire profile. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int ProfileSplineLayer
                (
                );
                /**Sets  the layer of the tire profile. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetProfileSplineLayer
                (
                    int profileSplineLayer /** profilesplinelayer */ 
                );
                /**Returns  the layer of the spindle lines. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int SpindleLinesLayer
                (
                );
                /**Sets  the layer of the spindle lines. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSpindleLinesLayer
                (
                    int spindleLinesLayer /** spindlelineslayer */ 
                );
                /**Returns  the option to specify whether or not the master component part will be added. 
                            true indicates the part will be added, 
                            false indicates the part will not be added. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool AddMasterComponentPart
                (
                );
                /**Sets  the option to specify whether or not the master component part will be added. 
                            true indicates the part will be added, 
                            false indicates the part will not be added. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAddMasterComponentPart
                (
                    bool addMasterPart /** addmasterpart */ 
                );
                /**Returns  the option to specify the method of tire profile definition. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOption TireDefinition
                (
                );
                /**Sets  the option to specify the method of tire profile definition. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTireDefinition
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOption tireDefinition /** tiredefinition */ 
                );
                /**Returns  the selection list for tire body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBodyList * TireDefinitionBody
                (
                );
                /**Returns  the selection list for tire profile. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurveList * TireDefinitionProfile
                (
                );
                /**Returns   the name of the file containing the tire profile points. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString ProfilePointFile
                (
                );
                /**Sets   the name of the file containing the tire profile points. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetProfilePointFile
                (
                    const NXString & profilePointFile /** profilepointfile */ 
                );
                /**Sets   the name of the file containing the tire profile points. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetProfilePointFile
                (
                    const char * profilePointFile /** profilepointfile */ 
                );
                /**Returns  the coordinate system defining the orientation of the wheel. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * WheelCsys
                (
                );
                /**Sets  the coordinate system defining the orientation of the wheel. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWheelCsys
                (
                    NXOpen::CoordinateSystem * wheelCsys /** wheelcsys */ 
                );
                /**Returns  the expression containing the diameter of the wheel rim. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * WheelRimDiameter
                (
                );
                /**Returns  the option to specify whether or not the tire profile is to be mirrored. 
                            true indicates the tire profile will be mirrored, 
                            false indicates the tire profile will not be mirrored.
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool MirrorProfile
                (
                );
                /**Sets  the option to specify whether or not the tire profile is to be mirrored. 
                            true indicates the tire profile will be mirrored, 
                            false indicates the tire profile will not be mirrored.
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMirrorProfile
                (
                    bool mirror /** mirror */ 
                );
                /**Returns  the expression containing the wheel centerline shift. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * WheelCenterlineShift
                (
                );
                /**Returns  the option to specify how the suspension system motion will be defined. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethod Motion
                (
                );
                /**Sets  the option to specify how the suspension system motion will be defined. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMotion
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethod motionMethod /** motionmethod */ 
                );
                /**Returns  the option to specify the location of the spindle file. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::SpindleFileLocationOption SpindleFileLocation
                (
                );
                /**Sets  the option to specify the location of the spindle file. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSpindleFileLocation
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::SpindleFileLocationOption spindleFileLocation /** spindlefilelocation */ 
                );
                /**Returns   the name of the file containing the spindle definition. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString SpindleFileName
                (
                );
                /**Sets   the name of the file containing the spindle definition. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSpindleFileName
                (
                    const NXString & spindleFileName /** spindlefilename */ 
                );
                /**Sets   the name of the file containing the spindle definition. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetSpindleFileName
                (
                    const char * spindleFileName /** spindlefilename */ 
                );
                /**Returns  the selection list containing spindle line in design position . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * DesignPositionSpindle
                (
                );
                /**Returns  the end point of the spindle line, the other end point is the wheel point. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SpindleEndPoint
                (
                );
                /**Sets  the end point of the spindle line, the other end point is the wheel point. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSpindleEndPoint
                (
                    NXOpen::Point * spindleEndPoint /** spindleendpoint */ 
                );
                /**Returns  the selection list containing the spindle lines in all positions. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurveList * SpindleLines
                (
                );
                /**Returns  the option to specify which suspension template will be used. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::SuspensionTemplateType SuspensionTemplate
                (
                );
                /**Sets  the option to specify which suspension template will be used. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSuspensionTemplate
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::SuspensionTemplateType suspensionTemplate /** suspensiontemplate */ 
                );
                /**Returns  the option to specify whether or not the scenario will be saved. 
                            true indicates the scenario will be saved,
                            false indicates the scenario will not be saved. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool SaveScenario
                (
                );
                /**Sets  the option to specify whether or not the scenario will be saved. 
                            true indicates the scenario will be saved,
                            false indicates the scenario will not be saved. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaveScenario
                (
                    bool saveScenario /** savescenario */ 
                );
                /**Returns  the option to specify whether or not the master part will be saved before entering the scenario. 
                            true indicates the master part will be saved,
                            false indicates the master part will not be saved. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool SaveMasterPart
                (
                );
                /**Sets  the option to specify whether or not the master part will be saved before entering the scenario. 
                            true indicates the master part will be saved,
                            false indicates the master part will not be saved. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaveMasterPart
                (
                    bool saveMasterpart /** savemasterpart */ 
                );
                /**Returns  the name of the file containing points defining a suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString SuspensionTemplateFileName
                (
                );
                /**Sets  the name of the file containing points defining a suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSuspensionTemplateFileName
                (
                    const NXString & filename /** filename */ 
                );
                /**Sets  the name of the file containing points defining a suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetSuspensionTemplateFileName
                (
                    const char * filename /** filename */ 
                );
                /**Returns  the option to specify whether or not the Inner Joint is asymmetric. 
                            true indicates the Inner Joint is asymmetric,
                            false indicates the Inner Joint is symmetric. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool InnerJointAsymmetric
                (
                );
                /**Sets  the option to specify whether or not the Inner Joint is asymmetric. 
                            true indicates the Inner Joint is asymmetric,
                            false indicates the Inner Joint is symmetric. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInnerJointAsymmetric
                (
                    bool innerJointAsymmetric /** innerjointasymmetric */ 
                );
                /**Returns  the option to specify whether or not the stabilizer bar is used. 
                            true indicates a stabilizer bar is used, 
                            false indicates a stabilizer bar is not used. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool UseStabilizerBar
                (
                );
                /**Sets  the option to specify whether or not the stabilizer bar is used. 
                            true indicates a stabilizer bar is used, 
                            false indicates a stabilizer bar is not used. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseStabilizerBar
                (
                    bool useStabilizerBar /** usestabilizerbar */ 
                );
                /**Returns  the option to specify whether or not the Bushing Joint is asymmetric. 
                            true indicates the Bushing Joint is asymmetric,
                            false indicates the Bushing Joint is symmetric. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool BushingJointAsymmetric
                (
                );
                /**Sets  the option to specify whether or not the Bushing Joint is asymmetric. 
                            true indicates the Bushing Joint is asymmetric,
                            false indicates the Bushing Joint is symmetric. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBushingJointAsymmetric
                (
                    bool bushingJointAsymmetric /** bushingjointasymmetric */ 
                );
                /**Returns  the selection list containing the left stabilizer bar definition data. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * LeftStabilizerBar
                (
                );
                /**Returns  the selection list containing the right stabilizer bar definition data. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurveList * RightStabilizerBar
                (
                );
                /**Returns  the line that specifies the traced spindle line in the scenario model. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * TracedSpindleLine
                (
                );
                /**Returns  the option to specify which driver definition is used in the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::DriverGraphOption DriverGraph
                (
                );
                /**Sets  the option to specify which driver definition is used in the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDriverGraph
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::DriverGraphOption driverGraphOption /** drivergraphoption */ 
                );
                /**Returns  the sketch defining the driver for the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectSketch * DriverGraphSketch
                (
                );
                /**Returns  the upper limit value for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double FirstDriverJointUpperLimit
                (
                );
                /**Sets  the upper limit value for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFirstDriverJointUpperLimit
                (
                    double firstDriverJointUpperLimit /** firstdriverjointupperlimit */ 
                );
                /**Returns  the lower limit value for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double FirstDriverJointLowerLimit
                (
                );
                /**Sets  the lower limit value for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFirstDriverJointLowerLimit
                (
                    double firstDriverJointLowerLimit /** firstdriverjointlowerlimit */ 
                );
                /**Returns  the step number for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int FirstDriverJointSteps
                (
                );
                /**Sets  the step number for the first joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFirstDriverJointSteps
                (
                    int firstDriverJointSteps /** firstdriverjointsteps */ 
                );
                /**Returns  the upper limit value for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double SecondDriverJointUpperLimit
                (
                );
                /**Sets  the upper limit value for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSecondDriverJointUpperLimit
                (
                    double secondDriverJointUpperLimit /** seconddriverjointupperlimit */ 
                );
                /**Returns  the lower limit value for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double SecondDriverJointLowerLimit
                (
                );
                /**Sets  the lower limit value for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSecondDriverJointLowerLimit
                (
                    double secondDriverJointLowerLimit /** seconddriverjointlowerlimit */ 
                );
                /**Returns  the step number for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int SecondDriverJointSteps
                (
                );
                /**Sets  the step number for the second joint of the suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSecondDriverJointSteps
                (
                    int secondDriverJointSteps /** seconddriverjointsteps */ 
                );
                /**Returns  the taper location that is used for the rectangular driver definition with taper in the Y direction. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double TaperLocationYAxis
                (
                );
                /**Sets  the taper location that is used for the rectangular driver definition with taper in the Y direction. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTaperLocationYAxis
                (
                    double taperLocationYAxis /** taperlocationyaxis */ 
                );
                /**Returns  the taper location that is used for the rectangular driver definition with taper in the X direction. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double TaperLocationXAxis
                (
                );
                /**Sets  the taper location that is used for the rectangular driver definition with taper in the X direction. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTaperLocationXAxis
                (
                    double taperLocationXAxis /** taperlocationxaxis */ 
                );
                /**Returns  the taper location along the Y axis that is used for the rectangular driver definition with taper on one side (at A point). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double TaperLocationAY
                (
                );
                /**Sets  the taper location along the Y axis that is used for the rectangular driver definition with taper on one side (at A point). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTaperLocationAY
                (
                    double taperLocationAY /** taperlocationay */ 
                );
                /**Returns  the taper location along the X axis that is used for the rectangular driver definition with taper on one side (at B point). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double TaperLocationBX
                (
                );
                /**Sets  the taper location along the X axis that is used for the rectangular driver definition with taper on one side (at B point). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTaperLocationBX
                (
                    double taperLocationBX /** taperlocationbx */ 
                );
                /**Returns  the fixed location percentage that is used for the fixed driver definition for two drivers. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double FixedLocationPercentage
                (
                );
                /**Sets  the fixed location percentage that is used for the fixed driver definition for two drivers. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFixedLocationPercentage
                (
                    double fixedLocationPercentage /** fixedlocationpercentage */ 
                );
                /** Switch the order of the two drivers. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SwitchDrivers
                (
                );
                /**Returns  the jounce distance that is used for the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double JounceDistance
                (
                );
                /**Sets  the jounce distance that is used for the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetJounceDistance
                (
                    double jounceDistance /** jouncedistance */ 
                );
                /**Returns  the rebound distance that is used for the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double ReboundDistance
                (
                );
                /**Sets  the rebound distance that is used for the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReboundDistance
                (
                    double reboundDistance /** rebounddistance */ 
                );
                /**Returns  the step number of the shock driver joint of the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int ShockDriverJointSteps
                (
                );
                /**Sets  the step number of the shock driver joint of the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetShockDriverJointSteps
                (
                    int shockDriverJointSteps /** shockdriverjointsteps */ 
                );
                /**Returns  the roll angle that is used for the Five Link Solid Axle without steering suspension template. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RollAngle
                (
                );
                /**Returns  the concavity factor that is used in constructing the motion envelope. 
                            The value ranges between 0.0 and 1.0. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double EnvelopeConcavity
                (
                );
                /**Sets  the concavity factor that is used in constructing the motion envelope. 
                            The value ranges between 0.0 and 1.0. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEnvelopeConcavity
                (
                    double envelopeConcavity /** envelopeconcavity */ 
                );
                /**Returns  the distance tolerance that will be used in constructing the motion envelope. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * DistanceTolerance
                (
                );
                /**Returns  the expression containing the radial angle at which the envelope body will start.
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RadialStartAngle
                (
                );
                /**Returns  the expression containing the radial angle at which the envelope body will end. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RadialEndAngle
                (
                );
                /**Returns  the expression containing the radius that specifies the distance from the tire section to the spindle at which the tire section will be trimmed. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * TrimRadius
                (
                );
                /**Returns  the option to specify whether or not the offset will be applied for the envelope.
                            true indicates the offset will be applied, 
                            false indicates the offset will not be applied. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ApplyOffset
                (
                );
                /**Sets  the option to specify whether or not the offset will be applied for the envelope.
                            true indicates the offset will be applied, 
                            false indicates the offset will not be applied. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetApplyOffset
                (
                    bool applyOffset /** applyoffset */ 
                );
                /**Returns  the option to specify which offset method is used in the envelope creation. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethod EnvelopeOffset
                (
                );
                /**Sets  the option to specify which offset method is used in the envelope creation. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEnvelopeOffset
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethod offsetMethod /** offsetmethod */ 
                );
                /**Returns  the name of the file containing the offset data of the envelope sections.
                            The file must contain comma separated values. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString OffsetFileName
                (
                );
                /**Sets  the name of the file containing the offset data of the envelope sections.
                            The file must contain comma separated values. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOffsetFileName
                (
                    const NXString & filename /** filename */ 
                );
                /**Sets  the name of the file containing the offset data of the envelope sections.
                            The file must contain comma separated values. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetOffsetFileName
                (
                    const char * filename /** filename */ 
                );
                /**Returns  the expression containing the offset value of the front section(at 0 degrees). 
                            Only used when the offset method is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontOffsetValue
                (
                );
                /**Returns  the expression containing the offset value of the up section(at 90 degrees). 
                            Only used when the offset method  is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * UpOffsetValue
                (
                );
                /**Returns  the expression containing the offset value of the rear section(at 180 degrees).
                            Only used when the offset method is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearOffsetValue
                (
                );
                /**Returns  the expression containing the offset value of the down section(at 270 degrees). 
                            Only used when the offset method is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * DownOffsetValue
                (
                );
                /**Returns  the expression containing the offset value of the inboard position. 
                            Only used when the offset method is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * InboardOffsetValue
                (
                );
                /**Returns  the expression containing the offset value of the outboard position. 
                            Only used when the offset method is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodFixedSections@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * OutboardOffsetValue
                (
                );
                /**Returns  the name of the the output part file for the tire body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString TireBodyOutputFileName
                (
                );
                /**Sets  the name of the the output part file for the tire body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTireBodyOutputFileName
                (
                    const NXString & filename /** filename */ 
                );
                /**Sets  the name of the the output part file for the tire body. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetTireBodyOutputFileName
                (
                    const char * filename /** filename */ 
                );
                /**Returns  the selection list containing the solid objects used in the clearance analysis. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBodyList * ClearanceAnalysisBodies
                (
                );
                /**Returns  the selection list containing the components used in the clearance analysis. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::SelectComponentList * ClearanceAnalysisComponents
                (
                );
                /**Returns  the expression containing the clearance value used in the clearance analysis. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ClearanceValue
                (
                );
                /** Set the vehicle coordinate system. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVehicleCoordinateSystem
                (
                    int type /** type */,
                    const NXOpen::Point3d & origin /** CSYS origin */,
                    const NXOpen::Matrix3x3 & matrix /** CSYS matrix */
                );
                /** Add the master part to the work part as one component by the given part name. 
                            The master part contains suspension information. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void AddMasterPart
                (
                    const NXString & partName /** the master part name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Add the master part to the work part as one component by the given part name. 
                            The master part contains suspension information. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void AddMasterPart
                (
                    const char * partName /** the master part name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Add the master part to the work part as one component by the given part object. 
                            The master part contains suspension information. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void AddMasterPart
                (
                    NXOpen::Part * partObject /** the master part object */
                );
                /** Set the sketch containing the tire profiles by the given part name and sketch name. 
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTireProfileSketch
                (
                    const NXString & partname /** the part name of the sketch   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & sketchname /** the sketch name  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Set the sketch containing the tire profiles by the given part name and sketch name. 
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetTireProfileSketch
                (
                    const char * partname /** the part name of the sketch   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * sketchname /** the sketch name  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Set the sketch containing the tire profiles by the given sketch object. 
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTireProfileSketch
                (
                    NXOpen::Sketch * sketchObject /** the sketch object from other part */
                );
                /** Create linked curves of the profiles in the sketch from the other part.
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void CreateLinkedProfiles
                (
                );
                /** Calculate the points of the tire profile. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void CalculateProfilePoints
                (
                );
                /**Returns  the name of the tire profile in the tire file.
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXString ProfileName
                (
                );
                /**Sets  the name of the tire profile in the tire file.
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetProfileName
                (
                    const NXString & profileName /** profilename */ 
                );
                /**Sets  the name of the tire profile in the tire file.
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfilePointFile@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetProfileName
                (
                    const char * profileName /** profilename */ 
                );
                /**Returns  the name of the scenario model containing the suspension template. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXString ScenarioName
                (
                );
                /**Sets  the name of the scenario model containing the suspension template. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetScenarioName
                (
                    const NXString & scenarioName /** scenarioname */ 
                );
                /**Sets  the name of the scenario model containing the suspension template. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetScenarioName
                (
                    const char * scenarioName /** scenarioname */ 
                );
                /** Read the spindle data and write the data into the motion file. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodFromSpindleLines NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodFromSpindleLines@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ProcessFromSpindleLines
                (
                );
                /** Read the file containing the suspension template points.
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate@endlink .  @return  the missing point name 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXString ReadSuspensionTemplate
                (
                    const NXString & fileName /** the name of the file containing the suspension template points.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Read the file containing the suspension template points.
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate@endlink .  @return  the missing point name 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                NXString ReadSuspensionTemplate
                (
                    const char * fileName /** the name of the file containing the suspension template points.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Change the location of a joint in the suspension template.
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodSuspensionTemplate@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSuspentionTemplatePoint
                (
                    NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::SuspensionTemplateType templateType /** template type*/,
                    int jointIndex /** joint index*/,
                    const NXOpen::Point3d & pnt /** joint point coordinate */
                );
                /** Set the driver steering joint and jounce joint.
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDriverJoints
                (
                    NXOpen::NXObject * steerJoint /** the steering joint*/,
                    NXOpen::NXObject * jounceJoint /** the jounce joint*/
                );
                /** Open the motion simulation and build the motion template. 
                            Only used when the motion method option is  is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink  
                            or @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void BuildMotionTemplate
                (
                );
                /** Run the motion articulation, output the motion file and then exit the motion simulation.
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink  
                            or @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::MotionMethodExistingScenarioMotionModel@endlink .                      
                            It must be paired with a call to @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::BuildMotionTemplate NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::BuildMotionTemplate@endlink .
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void RunMotionArticulation
                (
                );
                /** Indicate the sections that should be offset. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodCustomerDefinedData NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodCustomerDefinedData@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOffsetSections
                (
                    const std::vector<double> & sectionAngle /** The radial angle of the sections that are to have an offset applied. */
                );
                /** Set the values of the offset for the specified section. 
                            Only used when the motion method option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodCustomerDefinedData NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::EnvelopeOffsetMethodCustomerDefinedData@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOffsetValues
                (
                    int sectionIndex /** The index of the section to apply the offset values. */,
                    const std::vector<double> & offsetValues /** The offset values to apply to the specified section. */
                );
                /** Update the tire body feature in the tire body output part file.
                            The tire body part will be added to the work part assembly as the moving component used for the clearance analysis. 
                            Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfileCurves NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionProfileCurves@endlink  
                             or @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSketchfromOtherPart@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void UpdateTireBodyFeature
                (
                );
                /** Re-assemble the part containing the tire body defining tire profile to work part as the moving component
                             used for the clearance analysis. 
                             Only used when the tire profile option is @link NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSolidBody NXOpen::Features::VehicleDesign::TireEnvelopeBuilder::TireDefinitionOptionSolidBody@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ReassembleTireBodyComponent
                (
                );
                /** Set the clearance values for the components used in the clearance analysis. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearanceValues
                (
                    const std::vector<double> & clearanceValues /** offset values */
                );
                /** Perform clearance analysis between the tire envelope and the clearance objects. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void PerformClearanceAnalysis
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
