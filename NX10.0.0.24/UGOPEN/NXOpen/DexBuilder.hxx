#ifndef NXOpen_DEXBUILDER_HXX_INCLUDED
#define NXOpen_DEXBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DexBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DexBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DexBuilder;
    class Builder;
    class _DexBuilderBuilder;
    class DexBuilderImpl;
    /**
    This is an abstract class that provides the basic functionality common to all dex builders.
    See the Builder subclasses for details of application-specific builders.
     <br> This is an abstract class, and cannot be instantiated.  <br> 
     <br>  Created in NX8.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  DexBuilder : public NXOpen::Builder
    {
        private: DexBuilderImpl * m_dexbuilder_impl;
        private: friend class  _DexBuilderBuilder;
        protected: DexBuilder();
        public: ~DexBuilder();
        /**Returns  the process hold flag - set to true if user wants to wait until transaltion process gets completed
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: bool ProcessHoldFlag
        (
        );
        /**Sets  the process hold flag - set to true if user wants to wait until transaltion process gets completed
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: void SetProcessHoldFlag
        (
            bool doingFileSave /** doingfilesave */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
