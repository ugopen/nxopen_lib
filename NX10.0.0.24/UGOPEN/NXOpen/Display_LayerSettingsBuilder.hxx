#ifndef NXOpen_DISPLAY_LAYERSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_LAYERSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_LayerSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_LayerSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class LayerSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Display
    {
        class _LayerSettingsBuilderBuilder;
        class LayerSettingsBuilderImpl;
        /**
            Represents a builder for object layer settings.
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  LayerSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Specifies the layer options.
                     */
            public: enum LayerOptionType
            {
                LayerOptionTypeMaintain/** Maintain layer */,
                LayerOptionTypeOriginal/** Original layer */,
                LayerOptionTypeWork/** Work layer */,
                LayerOptionTypeUserDefined/** User specified layer */
            };

            private: LayerSettingsBuilderImpl * m_layersettingsbuilder_impl;
            private: friend class  _LayerSettingsBuilderBuilder;
            protected: LayerSettingsBuilder();
            public: ~LayerSettingsBuilder();
            /**Returns  the layer.

                         <br> 
                        Used when the layer option is set to
                        @link Display::LayerSettingsBuilder::LayerOptionTypeUserDefined
                         Display::LayerSettingsBuilder::LayerOptionTypeUserDefined
                        @endlink . See @link NXOpen::Layer::Constants NXOpen::Layer::Constants@endlink  for 
                        valid layer values.
                         <br> 
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int Layer
            (
            );
            /**Sets  the layer.

                         <br> 
                        Used when the layer option is set to
                        @link Display::LayerSettingsBuilder::LayerOptionTypeUserDefined
                         Display::LayerSettingsBuilder::LayerOptionTypeUserDefined
                        @endlink . See @link NXOpen::Layer::Constants NXOpen::Layer::Constants@endlink  for 
                        valid layer values.
                         <br> 
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLayer
            (
                int layer /** layer */ 
            );
            /**Returns  the layer option.
                        
                         <br> 
                        Note that all layer options may not be supported by the builder.
                        Refer @link Display::LayerSettingsBuilder::IsValidLayerOption
                         Display::LayerSettingsBuilder::IsValidLayerOption
                        @endlink  to determine supported options.
                         <br> 
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::LayerSettingsBuilder::LayerOptionType LayerOption
            (
            );
            /**Sets  the layer option.
                        
                         <br> 
                        Note that all layer options may not be supported by the builder.
                        Refer @link Display::LayerSettingsBuilder::IsValidLayerOption
                         Display::LayerSettingsBuilder::IsValidLayerOption
                        @endlink  to determine supported options.
                         <br> 
                     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLayerOption
            (
                NXOpen::Display::LayerSettingsBuilder::LayerOptionType layerOption /** layeroption */ 
            );
            /** Determines if the layer option is supported. 
                        
                         <br> 
                        The parent builder determines the validity of the layer options.
                        For example, following layer options are not relevant when the layer
                        is not being derived from another displayable object.
                        <ul>
                        <li>@link Display::LayerSettingsBuilder::LayerOptionTypeMaintain Display::LayerSettingsBuilder::LayerOptionTypeMaintain@endlink </li>
                        <li>@link Display::LayerSettingsBuilder::LayerOptionTypeOriginal Display::LayerSettingsBuilder::LayerOptionTypeOriginal@endlink </li>
                        </ul>
                         <br> 
                       @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsValidLayerOption
            (
                NXOpen::Display::LayerSettingsBuilder::LayerOptionType layerOption /** layeroption */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
