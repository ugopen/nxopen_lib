#ifndef NXOpen_CAE_NODEMODIFYLABELBUILDER_HXX_INCLUDED
#define NXOpen_CAE_NODEMODIFYLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodeModifyLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_NodeModifyLabelBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NodeModifyLabelBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectFENodeList;
    }
    class CoordinateSystem;
    namespace CAE
    {
        class _NodeModifyLabelBuilderBuilder;
        class NodeModifyLabelBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::NodeModifyLabelBuilder NXOpen::CAE::NodeModifyLabelBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateNodeModifyLabelBuilder  NXOpen::CAE::NodeElementManager::CreateNodeModifyLabelBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NodeModifyLabelBuilder : public NXOpen::Builder
        {
            /** the label types */
            public: enum LabelType
            {
                LabelTypeLabelIncrement/**label increment */,
                LabelTypeByOffset/**by offset */
            };

            private: NodeModifyLabelBuilderImpl * m_nodemodifylabelbuilder_impl;
            private: friend class  _NodeModifyLabelBuilderBuilder;
            protected: NodeModifyLabelBuilder();
            public: ~NodeModifyLabelBuilder();
            /**Returns  the node 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * Node
            (
            );
            /**Returns  the label option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::NodeModifyLabelBuilder::LabelType LabelOption
            (
            );
            /**Sets  the label option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabelOption
            (
                NXOpen::CAE::NodeModifyLabelBuilder::LabelType labelOption /** labeloption */ 
            );
            /**Returns  the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Label
            (
            );
            /**Sets  the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int label /** label */ 
            );
            /**Returns  the increment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Increment
            (
            );
            /**Sets  the increment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetIncrement
            (
                int increment /** increment */ 
            );
            /**Returns  the offset 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Offset
            (
            );
            /**Sets  the offset 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOffset
            (
                int offset /** offset */ 
            );
            /**Returns  the ref csys 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * RefCsys
            (
            );
            /**Sets  the ref csys 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetRefCsys
            (
                NXOpen::CoordinateSystem * refCsys /** refcsys */ 
            );
            /**Returns  the disp csys 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * DispCsys
            (
            );
            /**Sets  the disp csys 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDispCsys
            (
                NXOpen::CoordinateSystem * dispCsys /** dispcsys */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
