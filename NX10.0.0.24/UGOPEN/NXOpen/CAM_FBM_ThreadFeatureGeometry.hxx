#ifndef NXOpen_CAM_FBM_THREADFEATUREGEOMETRY_HXX_INCLUDED
#define NXOpen_CAM_FBM_THREADFEATUREGEOMETRY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FBM_ThreadFeatureGeometry.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FBM_ThreadFeatureGeometry.hxx>
#include <NXOpen/CAM_FBM_FeatureGeometry.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        namespace FBM
        {
            class ThreadFeatureGeometry;
        }
    }
    namespace CAM
    {
        namespace FBM
        {
            class Feature;
        }
    }
    namespace CAM
    {
        namespace FBM
        {
            class FeatureGeometry;
        }
    }
    namespace CAM
    {
        namespace FBM
        {
            class _ThreadFeatureGeometryBuilder;
            class ThreadFeatureGeometryImpl;
            /** Represents a feature geometry builder  <br> This is an abstract class and cannot be instantiated.  <br> 
             <br>  Created in NX9.0.1.  <br>  
            */
            class NXOPENCPP_CAMEXPORT  ThreadFeatureGeometry : public NXOpen::CAM::FBM::FeatureGeometry
            {
                /** thread data source types 
                 <br>  Created in NX9.0.1.  <br>  
                */
                public: enum ThreadDataSource
                {
                    ThreadDataSourceFromModel/** From Model */,
                    ThreadDataSourceFromTable/** From Table */
                };

                /** Thread form standards 
                 <br>  Created in NX9.0.2.  <br>  
                */
                public: enum Form
                {
                    FormUnified/** Form: Unified */,
                    FormAcme/** Form: Acme */,
                    FormStubAcme/** Form: Stub Acme */,
                    FormButtress = 4/** Form: Buttress */,
                    FormMetric/** Form: Metric */,
                    FormTrapezoidal = 8/** Form: Trapezoidal */,
                    FormLowernherz/** Form: Lowenherz */,
                    FormSparkPlug/** Form: Spark Plug */,
                    FormNpt/** Form: NPT */,
                    FormHoseCoupling/** Form: Hose Coupling */,
                    FormFireHose/** Form: Fire Hose */,
                    FormUnj/** Form: UNJ */,
                    FormNps/** Form: NPS */,
                    FormBsp/** Form: BSP */,
                    FormBstp/** Form: BSTP */,
                    FormHelicoil/** Form: Helicoil */,
                    FormNs/** Form: NS */,
                    FormUserDefined/** Form: User defined */
                };

                /** the rotation types 
                 <br>  Created in NX9.0.2.  <br>  
                */
                public: enum Rotation
                {
                    RotationRightHand/** Rotation: Right-hand */,
                    RotationLeftHand/** Rotation: Left-hand */
                };

                private: ThreadFeatureGeometryImpl * m_threadfeaturegeometry_impl;
                private: friend class  _ThreadFeatureGeometryBuilder;
                protected: ThreadFeatureGeometry();
                public: ~ThreadFeatureGeometry();
                /** Sets the source type for retrieving thread data 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetThreadDataSource
                (
                    NXOpen::CAM::FBM::ThreadFeatureGeometry::ThreadDataSource source /** thread data source type */
                );
                /** Gets the source type for retrieving thread data  @return  thread data source type 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAM::FBM::ThreadFeatureGeometry::ThreadDataSource GetThreadDataSource
                (
                );
                /**Returns  the thread rotation 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAM::FBM::ThreadFeatureGeometry::Rotation ThreadRotation
                (
                );
                /**Sets  the thread rotation 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetThreadRotation
                (
                    NXOpen::CAM::FBM::ThreadFeatureGeometry::Rotation rotation /** thread rotation */
                );
                /**Returns  the form standard 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAM::FBM::ThreadFeatureGeometry::Form FormStandard
                (
                );
                /**Sets  the form standard 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetFormStandard
                (
                    NXOpen::CAM::FBM::ThreadFeatureGeometry::Form standard /** form standard */
                );
                /** Get the user defined form standard  @return  
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXString GetFormUserDefined
                (
                );
                /** Set the user defined form standard 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetFormUserDefined
                (
                    const NXString & userDefinedForm /** userdefinedform */ 
                );
                /** Set the user defined form standard 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetFormUserDefined
                (
                    const char * userDefinedForm /** userdefinedform */ 
                );
                /** Update the feature thread parameters 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void UpdateThreadParameters
                (
                    NXOpen::CAM::FBM::Feature * tagFeature /** tagfeature */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
