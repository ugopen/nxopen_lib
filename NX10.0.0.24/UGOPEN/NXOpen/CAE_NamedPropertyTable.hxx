#ifndef NXOpen_CAE_NAMEDPROPERTYTABLE_HXX_INCLUDED
#define NXOpen_CAE_NAMEDPROPERTYTABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NamedPropertyTable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NamedPropertyTable;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class NXObject;
    namespace CAE
    {
        class _NamedPropertyTableBuilder;
        class NamedPropertyTableImpl;
        /**  @brief  Represents a @link NXOpen::CAE::NamedPropertyTable NXOpen::CAE::NamedPropertyTable@endlink  which is a superclass to @link NXOpen::CAE::PhysicalPropertyTable NXOpen::CAE::PhysicalPropertyTable@endlink   

           <br> This is an abstract class  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NamedPropertyTable : public NXOpen::NXObject
        {
            private: NamedPropertyTableImpl * m_namedpropertytable_impl;
            private: friend class  _NamedPropertyTableBuilder;
            protected: NamedPropertyTable();
            public: ~NamedPropertyTable();
            /**Returns  the descriptor name defines the type of the property table in named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXString DescriptorType
            (
            );
            /**Returns  the lanugage of the descriptor that defines the type of the property table in named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXString LanguageName
            (
            );
            /**Returns  the solver of lanugage of the descriptor that defines the type of the property table in named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXString SolverName
            (
            );
            /**Returns  the label of the named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int Label
            (
            );
            /**Sets  the label of the named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int namedPropertyTableHolderLabel /** Physical property table label */
            );
            /**Returns  the property table of the named property table holder 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
