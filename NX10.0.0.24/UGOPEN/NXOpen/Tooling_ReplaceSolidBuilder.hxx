#ifndef NXOpen_TOOLING_REPLACESOLIDBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_REPLACESOLIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ReplaceSolidBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ToolingBoxBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_CreateBoxBuilder.hxx>
#include <NXOpen/Tooling_ReplaceSolidBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ReplaceSolidBuilder;
    }
    class Builder;
    class Expression;
    namespace Features
    {
        class ToolingBoxBuilder;
    }
    class NXObject;
    class SelectFaceList;
    namespace Tooling
    {
        class CreateBoxBuilder;
    }
    namespace Tooling
    {
        class _ReplaceSolidBuilderBuilder;
        class ReplaceSolidBuilderImpl;
        /** Represents a replace solid operation. <br> To create a new instance of this class, use @link NXOpen::Tooling::ReplaceSolidCollection::CreateReplaceSolidBuilder  NXOpen::Tooling::ReplaceSolidCollection::CreateReplaceSolidBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BoundingBoxBuilder.Clearance.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetNegativeX.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetNegativeY.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetNegativeZ.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetPositiveX.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetPositiveY.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.OffsetPositiveZ.Value (deprecated) </td> <td> 
         
        1.0 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.XValue.Value (deprecated) </td> <td> 
         
        10 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.YValue.Value (deprecated) </td> <td> 
         
        10 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        BoundingBoxBuilder.ZValue.Value (deprecated) </td> <td> 
         
        10 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        BoxFaceToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        RemoveParameter </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ReplaceSolidBuilder : public NXOpen::Builder
        {
            private: ReplaceSolidBuilderImpl * m_replacesolidbuilder_impl;
            private: friend class  _ReplaceSolidBuilderBuilder;
            protected: ReplaceSolidBuilder();
            public: ~ReplaceSolidBuilder();
            /**Returns  the selected replacement face. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::SelectFaceList * SelFace
            (
            );
            /**Returns  the face reverse direction status. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: bool FaceReverseDirection
            (
            );
            /**Sets  the face reverse direction status. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetFaceReverseDirection
            (
                bool faceReverseDirection /** facereversedirection */ 
            );
            /**Returns  the face used for box creation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: bool BoxFaceToggle
            (
            );
            /**Sets  the face used for box creation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBoxFaceToggle
            (
                bool boxFaceToggle /** boxfacetoggle */ 
            );
            /** Edit bounding box. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void EditBox
            (
            );
            /**Returns  the clearance value for box in six directions. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Expression * Clearance
            (
            );
            /**Returns  the option to remove parameter after feature creation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: bool RemoveParameter
            (
            );
            /**Sets  the option to remove parameter after feature creation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetRemoveParameter
            (
                bool removeParameter /** removeparameter */ 
            );
            /** Update face information when set to reverse face direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void ReverseFaceDirectionCallBack
            (
                NXOpen::NXObject * faceEid /** placement face eid */,
                int state /** state for reverse face direction */
            );
            /** Update bounding box and face information. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdateForFaceChange
            (
            );
            /** Update face state in ReplaceSolidFaceList. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdateFaceListState
            (
                NXOpen::NXObject * faceEid /** placement face eid */,
                int reverse /** flag for reverse face direction,0--not reversed, 1--reversed, -1--no change */,
                int faceForBoxFlag /** face for creating box flag, 0--not , 1--yes, -1--no change */,
                int action /** action type, 0--add, 1--modify, -1--remove */
            );
            /**Returns  the bounding box feature builder. 
             <br>  @deprecated Deprecated in NX10.0.0.  Use @link Tooling::ReplaceSolidBuilder::GetBoundedBoxBuilder Tooling::ReplaceSolidBuilder::GetBoundedBoxBuilder@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Use Tooling::ReplaceSolidBuilder::GetBoundedBoxBuilder instead.") NXOpen::Tooling::CreateBoxBuilder * BoundingBoxBuilder
            (
            );
            /**Sets  the bounding box feature builder. 
             <br>  @deprecated Deprecated in NX10.0.0.  Use @link Tooling::ReplaceSolidBuilder::SetBoundedBoxBuilder Tooling::ReplaceSolidBuilder::SetBoundedBoxBuilder@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public:  NX_DEPRECATED("Deprecated in NX10.0.0.  Use Tooling::ReplaceSolidBuilder::SetBoundedBoxBuilder instead.") void SetBoundingBoxBuilder
            (
                NXOpen::Tooling::CreateBoxBuilder * boxBuilder /** boxbuilder */ 
            );
            /** Asks the new bounded box feature builder.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Features::ToolingBoxBuilder * GetBoundedBoxBuilder
            (
            );
            /** Sets the new bounded box feature builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBoundedBoxBuilder
            (
                NXOpen::Features::ToolingBoxBuilder * boxBuilder /** boxbuilder */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
