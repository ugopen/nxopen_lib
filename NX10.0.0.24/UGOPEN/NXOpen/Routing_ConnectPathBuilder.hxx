#ifndef NXOpen_ROUTING_CONNECTPATHBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_CONNECTPATHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ConnectPathBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_ConnectPathBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class ConnectPathBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Routing
    {
        class _ConnectPathBuilderBuilder;
        class ConnectPathBuilderImpl;
        /** Represents a @link Routing::ConnectPathBuilder Routing::ConnectPathBuilder@endlink . 
                Routing.ConnectPathBuilderis used to control the connecting of 
                Routing.ControlPoints within the distance tolerance specified.
                This eliminates duplicate Routing.ControlPoints such that only one 
                Routing.ControlPoint remains.  The Routing.Segments that were defined 
                by the duplicate Routing.ControlPoints are now defined by the remaining 
                Routing.ControlPoint.  Routing.ConnectPath is the reverse operation to 
                Routing.DiscontinuityCorner.  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateConnectPathBuilder  NXOpen::Routing::RouteManager::CreateConnectPathBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Tolerance </td> <td> 
         
        0.01 (millimeters part), 0.001 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  ConnectPathBuilder : public NXOpen::Builder
        {
            private: ConnectPathBuilderImpl * m_connectpathbuilder_impl;
            private: friend class  _ConnectPathBuilderBuilder;
            protected: ConnectPathBuilder();
            public: ~ConnectPathBuilder();
            /**Returns  the Routing.ControlPoints that are selected. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObjectList * Selection
            (
            );
            /**Returns  the 3D distance within which Routing.ControlPoints will be considered duplicates 
                        and some will be merged away so that only one Routing.ControlPoint remains. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double Tolerance
            (
            );
            /**Sets  the 3D distance within which Routing.ControlPoints will be considered duplicates 
                        and some will be merged away so that only one Routing.ControlPoint remains. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
