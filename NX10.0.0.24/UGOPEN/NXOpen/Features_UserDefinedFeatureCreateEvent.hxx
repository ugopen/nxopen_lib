#ifndef NXOpen_FEATURES_USERDEFINEDFEATURECREATEEVENT_HXX_INCLUDED
#define NXOpen_FEATURES_USERDEFINEDFEATURECREATEEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_UserDefinedFeatureCreateEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class UserDefinedFeatureCreateEvent;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class UserDefinedFeatureApplicationData;
    }
    namespace Features
    {
        class UserDefinedFeatureExpressionData;
    }
    namespace Features
    {
        class UserDefinedFeatureReferenceData;
    }
    namespace Features
    {
        class _UserDefinedFeatureCreateEventBuilder;
        class UserDefinedFeatureCreateEventImpl;
        /** JA interface for the UserDefinedFeatureCreateEvent object  <br> This calls cannot be created  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  UserDefinedFeatureCreateEvent : public NXOpen::TaggedObject
        {
            private: UserDefinedFeatureCreateEventImpl * m_userdefinedfeaturecreateevent_impl;
            private: friend class  _UserDefinedFeatureCreateEventBuilder;
            protected: UserDefinedFeatureCreateEvent();
            public: ~UserDefinedFeatureCreateEvent();
            /**Returns  the user defined feature definition 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Feature * Definition
            (
            );
            /**Returns  the original feature being copied 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Feature * OriginalFeature
            (
            );
            /**Returns  the feature in the destination part 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Feature * CopiedFeature
            (
            );
            /**Returns  the class name 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ClassName
            (
            );
            /** The expressions of the instantiation feature  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::UserDefinedFeatureExpressionData *> GetExpressionData
            (
            );
            /** The references of the instantiation feature  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::UserDefinedFeatureReferenceData *> GetReferenceData
            (
            );
            /**Returns  the application data 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::UserDefinedFeatureApplicationData * ApplicationData
            (
            );
            /** The component features that have been created so far  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::Feature *> GetComponentFeatures
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
