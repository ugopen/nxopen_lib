#ifndef NXOpen_DIAGRAMMING_LEADERLINEBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_LEADERLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_LeaderLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_DataType.hxx>
#include <NXOpen/Diagramming_LeaderLineBuilder.hxx>
#include <NXOpen/Diagramming_LocationBuilder.hxx>
#include <NXOpen/Diagramming_SheetElement.hxx>
#include <NXOpen/Diagramming_SheetElementBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class LeaderLineBuilder;
    }
    namespace Diagramming
    {
        class LocationBuilder;
    }
    namespace Diagramming
    {
        class SheetElement;
    }
    namespace Diagramming
    {
        class SheetElementBuilder;
    }
    namespace Diagramming
    {
        class _LeaderLineBuilderBuilder;
        class LeaderLineBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a LeaderLineBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::LeaderLineCollection::CreateLeaderLineBuilder  NXOpen::Diagramming::LeaderLineCollection::CreateLeaderLineBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  LeaderLineBuilder : public NXOpen::Diagramming::SheetElementBuilder
        {
            /** Represents the option @link NXOpen::Diagramming::LeaderLineBuilder::VerticalAlignment NXOpen::Diagramming::LeaderLineBuilder::VerticalAlignment@endlink 
                       for a @link NXOpen::Diagramming::LeaderLineBuilder NXOpen::Diagramming::LeaderLineBuilder@endlink .
                    
             <br>  Created in NX10.0.0.  <br>  
            */
            public: enum VerticalAlignmentOption
            {
                VerticalAlignmentOptionTop/** Setting the vertical alignment top*/,
                VerticalAlignmentOptionMiddle/** Setting the vertical alignment middle*/,
                VerticalAlignmentOptionBottom/** Setting the vertical alignment bottom*/
            };

            private: LeaderLineBuilderImpl * m_leaderlinebuilder_impl;
            private: friend class  _LeaderLineBuilderBuilder;
            protected: LeaderLineBuilder();
            public: ~LeaderLineBuilder();
            /**Returns  the stub length of this leader line. The negative value is not expected.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double StubLength
            (
            );
            /**Sets  the stub length of this leader line. The negative value is not expected.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStubLength
            (
                double stubLength /** stublength */ 
            );
            /**Returns  the stub sides of this leader line.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::DiagrammingStubsides StubSides
            (
            );
            /**Sets  the stub sides of this leader line.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStubSides
            (
                NXOpen::Diagramming::DiagrammingStubsides stubSides /** stubsides */ 
            );
            /**Returns  the start location of this leader line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::LocationBuilder * StartLocation
            (
            );
            /**Returns  the end location of this leader line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::LocationBuilder * EndLocation
            (
            );
            /**Returns  the vertical alignment option. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::LeaderLineBuilder::VerticalAlignmentOption VerticalAlignment
            (
            );
            /**Sets  the vertical alignment option. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVerticalAlignment
            (
                NXOpen::Diagramming::LeaderLineBuilder::VerticalAlignmentOption alignmentOption /** alignmentoption */ 
            );
            /**Returns  the arrow type of the start arrow 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::DiagrammingArrowtype StartArrowType
            (
            );
            /**Sets  the arrow type of the start arrow 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStartArrowType
            (
                NXOpen::Diagramming::DiagrammingArrowtype arrowTypeOption /** arrowtypeoption */ 
            );
            /**Returns  the arrow type of the end arrow 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::DiagrammingArrowtype EndArrowType
            (
            );
            /**Sets  the arrow type of the end arrow 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndArrowType
            (
                NXOpen::Diagramming::DiagrammingArrowtype arrowTypeOption /** arrowtypeoption */ 
            );
            /** Get bending points for polyline to render the leader line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void GetBendPoints
            (
                std::vector<NXOpen::Point2d> & points /** points */ 
            );
            /** Set bending points for polyline to render the leader line. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBendPoints
            (
                const std::vector<NXOpen::Point2d> & points /** points */ 
            );
            /** Use the terminator to set the end location builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndLocationOnTerminator
            (
                NXOpen::Diagramming::SheetElement * terminator /** terminator */ ,
                NXOpen::Diagramming::DiagrammingCoordinatemode coordMode /** coordmode */ ,
                double x /** x */ ,
                double y /** y */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
