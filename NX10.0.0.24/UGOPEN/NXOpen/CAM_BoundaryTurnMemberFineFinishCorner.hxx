#ifndef NXOpen_CAM_BOUNDARYTURNMEMBERFINEFINISHCORNER_HXX_INCLUDED
#define NXOpen_CAM_BOUNDARYTURNMEMBERFINEFINISHCORNER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BoundaryTurnMemberFineFinishCorner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BoundaryTurnMemberFineFinishCorner.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BoundaryTurnMemberFineFinishCorner;
    }
    class Builder;
    namespace CAM
    {
        class _BoundaryTurnMemberFineFinishCornerBuilder;
        class BoundaryTurnMemberFineFinishCornerImpl;
        /**
            Represents a @link NXOpen::CAM::BoundaryTurnMemberFineFinishCorner NXOpen::CAM::BoundaryTurnMemberFineFinishCorner@endlink 
             <br> This builder cannot be instantiated separately.  <br> 
         <br>  Created in NX9.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BoundaryTurnMemberFineFinishCorner : public NXOpen::Builder
        {
            /** the corner types available */
            public: enum ValueType
            {
                ValueTypeGeneral/** general */ ,
                ValueTypeAngularLine/** angular line */ ,
                ValueTypeTangentialLine/** tangential line */ ,
                ValueTypeShortenArcOrChamfer/** shorten arc or chamfer */ 
            };

            /** the corner applied to available */
            public: enum AppliedTo
            {
                AppliedToCurrentSegment/** current segment */ ,
                AppliedToPreviousSegment/** previous segment */ 
            };

            /** the corner cleanup available */
            public: enum Cleanup
            {
                CleanupNone/** none */ ,
                CleanupAutomatic/** automatic */ ,
                CleanupManual/** manual */ 
            };

            private: BoundaryTurnMemberFineFinishCornerImpl * m_boundaryturnmemberfinefinishcorner_impl;
            private: friend class  _BoundaryTurnMemberFineFinishCornerBuilder;
            protected: BoundaryTurnMemberFineFinishCorner();
            public: ~BoundaryTurnMemberFineFinishCorner();
            /**Returns  the fine_finish_corner type 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::ValueType Type
            (
            );
            /**Sets  the fine_finish_corner type 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::ValueType cornerType /** cornertype */ 
            );
            /**Returns  the fine_finish_corner applied to 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::AppliedTo AppliedToType
            (
            );
            /**Sets  the fine_finish_corner applied to 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAppliedToType
            (
                NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::AppliedTo appliedTo /** appliedto */ 
            );
            /**Returns  the fine_finish_corner cleanup 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::Cleanup CleanupType
            (
            );
            /**Sets  the fine_finish_corner cleanup 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCleanupType
            (
                NXOpen::CAM::BoundaryTurnMemberFineFinishCorner::Cleanup cornerCleanup /** cornercleanup */ 
            );
            /**Returns  the fine_finish_corner angle value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double AngleValue
            (
            );
            /**Sets  the fine_finish_corner angle value 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAngleValue
            (
                double cornerAngle /** cornerangle */ 
            );
            /**Returns  the fine_finish_corner distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double Distance
            (
            );
            /**Sets  the fine_finish_corner distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistance
            (
                double distance /** distance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
