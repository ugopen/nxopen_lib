#ifndef NXOpen_FEATURES_EMBOSSBODYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_EmbossBodyBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class EmbossBodyBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class SelectNXObjectList;
    namespace Features
    {
        class _EmbossBodyBuilderBuilder;
        class EmbossBodyBuilderImpl;
        /**
            Represents a @link NXOpen::Features::EmbossBody NXOpen::Features::EmbossBody@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateEmbossBodyBuilder  NXOpen::Features::FeatureCollection::CreateEmbossBodyBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Clearance.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        ThickenOption </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        Thickness.Value </td> <td> 
         
        2 (millimeters part), 0.1 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  EmbossBodyBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: EmbossBodyBuilderImpl * m_embossbodybuilder_impl;
            private: friend class  _EmbossBodyBuilderBuilder;
            protected: EmbossBodyBuilder();
            public: ~EmbossBodyBuilder();
            /**Returns  the target body 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetBody
            (
            );
            /**Sets  the target body 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetBody
            (
                NXOpen::ScCollector * targetBody /** targetbody */ 
            );
            /**Returns  the tool body 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ToolBody
            (
            );
            /**Sets  the tool body 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetToolBody
            (
                NXOpen::ScCollector * toolBody /** toolbody */ 
            );
            /**Returns  the region object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * RegionObject
            (
            );
            /**Returns  the emboss clearance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance
            (
            );
            /**Returns  the emboss thickness 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Thickness
            (
            );
            /**Returns  the copy targets flag 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool KeepTargets
            (
            );
            /**Sets  the copy targets flag 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetKeepTargets
            (
                bool keepTargets /** keeptargets */ 
            );
            /**Returns  the copy tools flag 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool KeepTools
            (
            );
            /**Sets  the copy tools flag 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetKeepTools
            (
                bool keepTools /** keeptools */ 
            );
            /**Returns  the target material side direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TargetMaterialSide
            (
            );
            /**Sets  the target material side direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargetMaterialSide
            (
                bool targetMaterialSide /** targetmaterialside */ 
            );
            /**Returns  the tool emboss direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ToolEmbossDirection
            (
            );
            /**Sets  the tool emboss direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolEmbossDirection
            (
                bool toolEmbossDirection /** toolembossdirection */ 
            );
            /**Returns  the thicken option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ThickenOption
            (
            );
            /**Sets  the thicken option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetThickenOption
            (
                bool thickenOption /** thickenoption */ 
            );
            /**Returns  the trim option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool TrimOption
            (
            );
            /**Sets  the trim option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTrimOption
            (
                bool trimOption /** trimoption */ 
            );
            /**Returns  the cap face used to trim 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CapFace
            (
            );
            /**Sets  the cap face used to trim 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCapFace
            (
                NXOpen::ScCollector * capFace /** capface */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
