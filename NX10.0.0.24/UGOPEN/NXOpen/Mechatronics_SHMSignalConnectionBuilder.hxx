#ifndef NXOpen_MECHATRONICS_SHMSIGNALCONNECTIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SHMSIGNALCONNECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SHMSignalConnectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_SHMSignalConnectionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class SHMSignalConnectionBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SignalAdapter;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _SHMSignalConnectionBuilderBuilder;
        class SHMSignalConnectionBuilderImpl;
        /** Represents a @link Mechatronics::SHMSignalConnectionBuilder Mechatronics::SHMSignalConnectionBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Mechatronics::SHMSignalConnectionCollection::CreateSHMSignalConnectionBuilder  NXOpen::Mechatronics::SHMSignalConnectionCollection::CreateSHMSignalConnectionBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  SHMSignalConnectionBuilder : public NXOpen::Builder
        {
            /** Represents the data type. */
            public: enum DataType
            {
                DataTypeBool/** bool   */,
                DataTypeInt/** int    */,
                DataTypeDouble/** double */
            };

            /** Represents the SHM Signal access type. */
            public: enum SHMSignalAccessType
            {
                SHMSignalAccessTypeRead/** read  */,
                SHMSignalAccessTypeWrite/** write */
            };

            /** Represents the mapping data sream direction. */
            public: enum StreamIOType
            {
                StreamIOTypeTomcd/** write to MCD  */,
                StreamIOTypeToshm/** write to SHM  */
            };

            /** Represents the endian type. */
            public: enum EndianType
            {
                EndianTypeLittle/** little endian  */,
                EndianTypeBig/** big endian */
            };

            private: SHMSignalConnectionBuilderImpl * m_shmsignalconnectionbuilder_impl;
            private: friend class  _SHMSignalConnectionBuilderBuilder;
            protected: SHMSignalConnectionBuilder();
            public: ~SHMSignalConnectionBuilder();
            /**Returns  the adapter object. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SignalAdapter * AdapterObject
            (
            );
            /**Sets  the adapter object. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAdapterObject
            (
                NXOpen::Mechatronics::SignalAdapter * adapterObject /** adapterobject */ 
            );
            /**Returns  the signal object. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * SignalObject
            (
            );
            /**Sets  the signal object. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSignalObject
            (
                NXOpen::NXObject * signalObject /** signalobject */ 
            );
            /**Returns  the SHM name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString SHMName
            (
            );
            /**Sets  the SHM name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSHMName
            (
                const NXString & shmName /** shmname */ 
            );
            /**Sets  the SHM name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetSHMName
            (
                const char * shmName /** shmname */ 
            );
            /**Returns  the endian type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SHMSignalConnectionBuilder::EndianType Endian
            (
            );
            /**Sets  the endian type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetEndian
            (
                NXOpen::Mechatronics::SHMSignalConnectionBuilder::EndianType endian /** endian */ 
            );
            /**Returns  the SHM signal name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString SHMSignalName
            (
            );
            /**Sets  the SHM signal name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSHMSignalName
            (
                const NXString & shmsignalName /** shmsignalname */ 
            );
            /**Sets  the SHM signal name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetSHMSignalName
            (
                const char * shmsignalName /** shmsignalname */ 
            );
            /**Returns  the SHM signal type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SHMSignalConnectionBuilder::DataType SHMSignalType
            (
            );
            /**Sets  the SHM signal type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSHMSignalType
            (
                NXOpen::Mechatronics::SHMSignalConnectionBuilder::DataType shmSignalType /** shmsignaltype */ 
            );
            /**Returns  the SHM access previlege type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SHMSignalConnectionBuilder::SHMSignalAccessType SHMSignalAccess
            (
            );
            /**Sets  the SHM access previlege type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSHMSignalAccess
            (
                NXOpen::Mechatronics::SHMSignalConnectionBuilder::SHMSignalAccessType shmSignalAccess /** shmsignalaccess */ 
            );
            /**Returns  the mapping result name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ResultName
            (
            );
            /**Sets  the mapping result name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetResultName
            (
                const NXString & resultName /** resultname */ 
            );
            /**Sets  the mapping result name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetResultName
            (
                const char * resultName /** resultname */ 
            );
            /**Returns  the data stream direction. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SHMSignalConnectionBuilder::StreamIOType StreamIO
            (
            );
            /**Sets  the data stream direction. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetStreamIO
            (
                NXOpen::Mechatronics::SHMSignalConnectionBuilder::StreamIOType streamIO /** streamio */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
