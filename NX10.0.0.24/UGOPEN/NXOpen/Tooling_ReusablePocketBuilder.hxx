#ifndef NXOpen_TOOLING_REUSABLEPOCKETBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_REUSABLEPOCKETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ReusablePocketBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Tooling_ReusablePocketBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ReusablePocketBuilder;
    }
    class Builder;
    class NXObject;
    namespace Tooling
    {
        class _ReusablePocketBuilderBuilder;
        class ReusablePocketBuilderImpl;
        /** Reusable pocket builder.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ReusablePocketCollection::CreateReusablePocketBuilder  NXOpen::Tooling::ReusablePocketCollection::CreateReusablePocketBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AutoTarget </td> <td> 
         
        true </td> </tr> 

        <tr><td> 
         
        ThreadHole </td> <td> 
         
        false </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ReusablePocketBuilder : public NXOpen::Builder
        {
            /** Represents hole types. */
            public: enum Hole
            {
                HoleSeries/** Pocket with hole series */,
                HoleSubtract/** Subtract pocket */,
                HoleNone/** None */
            };

            private: ReusablePocketBuilderImpl * m_reusablepocketbuilder_impl;
            private: friend class  _ReusablePocketBuilderBuilder;
            protected: ReusablePocketBuilder();
            public: ~ReusablePocketBuilder();
            /**Returns  the flag specifying whether target is fetched automatically.
                        If true, the target is fetched automatically, 
                        else, the target is fetched manually. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool AutoTarget
            (
            );
            /**Sets  the flag specifying whether target is fetched automatically.
                        If true, the target is fetched automatically, 
                        else, the target is fetched manually. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAutoTarget
            (
                bool autoTarget /** autotarget */ 
            );
            /**Returns  the flag specifying whether thread hole is used. 
                        If true, thread hole is used, 
                        else, screw clearance hole is used. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ThreadHole
            (
            );
            /**Sets  the flag specifying whether thread hole is used. 
                        If true, thread hole is used, 
                        else, screw clearance hole is used. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetThreadHole
            (
                bool threadHole /** threadhole */ 
            );
            /** Adds tool component. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddToolComponent
            (
                NXOpen::NXObject * component /**Tool component*/
            );
            /** Deletes pocket. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void DeletePocket
            (
                NXOpen::NXObject * component /**Component to which pocket is deleted*/
            );
            /** Breaks link. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void BreakLink
            (
                NXOpen::NXObject * component /**Component to which link is broke*/
            );
            /** Creates pocket. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void CreatePocket
            (
                NXOpen::NXObject * component /**Component to which pocket is created*/
            );
            /** Removes tool component. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void RemoveToolComponent
            (
                NXOpen::NXObject * component /**Tool component to remove*/
            );
            /** Sets hole type. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetHoleType
            (
                NXOpen::NXObject * component /**Component to which hole type is set*/,
                NXOpen::Tooling::ReusablePocketBuilder::Hole holeType /**Hole type*/
            );
            /** Adds target body. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddTargetBody
            (
                NXOpen::NXObject * component /**Component to which target body is added*/,
                NXOpen::NXObject * targetBody /**Target body*/
            );
            /** Removes target body. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void RemoveTargetBody
            (
                NXOpen::NXObject * component /**Component to which target body is removed*/,
                NXOpen::NXObject * targetBody /**Target body*/
            );
            /** Sets standard for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetStandard
            (
                NXOpen::NXObject * component /**Component to which standard is set*/,
                const NXString & standard /**Hole series standard  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets standard for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetStandard
            (
                NXOpen::NXObject * component /**Component to which standard is set*/,
                const char * standard /**Hole series standard  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets form for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetForm
            (
                NXOpen::NXObject * component /**Component to which form is set*/,
                const NXString & form /**Hole series form  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets form for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetForm
            (
                NXOpen::NXObject * component /**Component to which form is set*/,
                const char * form /**Hole series form  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets screw type for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetScrewType
            (
                NXOpen::NXObject * component /**Component to which screw type is set*/,
                const NXString & screwType /**Hole series screw type  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets screw type for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetScrewType
            (
                NXOpen::NXObject * component /**Component to which screw type is set*/,
                const char * screwType /**Hole series screw type  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets fit for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFit
            (
                NXOpen::NXObject * component /**Component to which fit is set*/,
                const NXString & fit /**Hole series fit  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets fit for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetFit
            (
                NXOpen::NXObject * component /**Component to which fit is set*/,
                const char * fit /**Hole series fit  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets reference set. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetReference
            (
                NXOpen::NXObject * component /**Component to which reference is set*/,
                const NXString & reference /**Reference set with cut body  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets reference set. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetReference
            (
                NXOpen::NXObject * component /**Component to which reference is set*/,
                const char * reference /**Reference set with cut body  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets counterbore diameter for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCounterboreDiameter
            (
                NXOpen::NXObject * component /**Component to which counterbore diameter is set*/,
                double counterboreDiameter /**C-Bore diameter for hole series*/
            );
            /** Sets countersunk diameter for hole series. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCountersunkDiameter
            (
                NXOpen::NXObject * component /**Component to which countersunk diameter is set*/,
                double countersunkDiameter /**C-Sink diameter for hole series*/
            );
            /** Sets diameter for hole series. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDiameter
            (
                NXOpen::NXObject * component /**Component to which diameter is set*/,
                double diameter /**Diameter for hole series*/
            );
            /** Verifies hole series parameters. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void VerifyHoleSeries
            (
                NXOpen::NXObject * component /**Component to verify hole series parameters*/
            );
            /** Recreates hole series if hole feature is updated. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void RecreateHoleSeries
            (
                NXOpen::NXObject * component /**Component to recreate hole series*/,
                NXOpen::NXObject * feature /**Feature to be recreated*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
