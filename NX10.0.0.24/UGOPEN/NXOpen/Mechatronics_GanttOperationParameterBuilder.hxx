#ifndef NXOpen_MECHATRONICS_GANTTOPERATIONPARAMETERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GANTTOPERATIONPARAMETERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GanttOperationParameterBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_GanttOperationParameterBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GanttOperationParameterBuilder;
    }
    class Builder;
    class Expression;
    class NXObject;
    namespace Mechatronics
    {
        class _GanttOperationParameterBuilderBuilder;
        class GanttOperationParameterBuilderImpl;
        /** Represents a @link Mechatronics::GanttOperationParameterBuilder Mechatronics::GanttOperationParameterBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Mechatronics::GanttCollection::CreateGanttOperationParameterBuilder  NXOpen::Mechatronics::GanttCollection::CreateGanttOperationParameterBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GanttOperationParameterBuilder : public NXOpen::Builder
        {
            /** the Operator options. */
            public: enum OperatorOption
            {
                OperatorOptionNone/** none */ ,
                OperatorOptionIncrement/** Increment operator '+=' */,
                OperatorOptionDecrement/** Decrement operator '-=' */,
                OperatorOptionMultiply/** Multiply operator '*=' */,
                OperatorOptionNot/** Not operator */
            };

            private: GanttOperationParameterBuilderImpl * m_ganttoperationparameterbuilder_impl;
            private: friend class  _GanttOperationParameterBuilderBuilder;
            protected: GanttOperationParameterBuilder();
            public: ~GanttOperationParameterBuilder();
            /**Returns  the id of property in physics object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int PropertyId
            (
            );
            /**Sets  the id of property in physics object 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetPropertyId
            (
                int prop /** prop */ 
            );
            /**Returns  the parameter name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ParameterName
            (
            );
            /**Sets  the parameter name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetParameterName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the parameter name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetParameterName
            (
                const char * name /** name */ 
            );
            /**Returns  the parameter value which will be set to the input physics object during runtime. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ParameterValue
            (
            );
            /**Sets  the parameter value which will be set to the input physics object during runtime. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetParameterValue
            (
                const NXString & strValue /** strvalue */ 
            );
            /**Sets  the parameter value which will be set to the input physics object during runtime. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetParameterValue
            (
                const char * strValue /** strvalue */ 
            );
            /**Returns  the parameter value which will be set to the input physics object during runtime.
                        If property value type is not object, this property should be null, it can be a physics 
                        object(Rigid Body, Collision, Constraints, Joints etc.), Function Table, Material etc. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * ObjectValue
            (
            );
            /**Sets  the parameter value which will be set to the input physics object during runtime.
                        If property value type is not object, this property should be null, it can be a physics 
                        object(Rigid Body, Collision, Constraints, Joints etc.), Function Table, Material etc. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetObjectValue
            (
                NXOpen::NXObject * objValue /** objvalue */ 
            );
            /**Returns  the io status 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool IOStatus
            (
            );
            /**Sets  the io status 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetIOStatus
            (
                bool io /** io */ 
            );
            /**Returns  the expression value for double and interger parameters 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * ExpressionValue
            (
            );
            /** Set the expression value for double and interger parameters 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void PutExpressionValue
            (
                NXOpen::Expression * exp /** exp */ 
            );
            /**Returns  the operator value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::GanttOperationParameterBuilder::OperatorOption Operator
            (
            );
            /**Sets  the operator value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOperator
            (
                NXOpen::Mechatronics::GanttOperationParameterBuilder::OperatorOption optr /** optr */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
