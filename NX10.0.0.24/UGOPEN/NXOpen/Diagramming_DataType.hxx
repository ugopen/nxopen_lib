#ifndef NXOpen_DIAGRAMMING_DATATYPE_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_DATATYPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_DataType.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        /** Represents the axis type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum Axis
        {
            AxisX = 1/** X axis */,
            AxisY/** Y axis */
        };

        /** Represents the direction type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum Direction
        {
            DirectionIn = 1/** In direction */,
            DirectionOut/** Out direction */,
            DirectionBoth/** Both direction */
        };

        /** Represents the coordinate mode type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingCoordinatemode
        {
            DiagrammingCoordinatemodeAbsolute/** Absolute coordinate */,
            DiagrammingCoordinatemodePercent/** Percent coordinate */
        };

        /** Represents the sizing policy type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingSizingpolicy
        {
            DiagrammingSizingpolicyLength/** Length policy */,
            DiagrammingSizingpolicyAuto/** Auto policy */,
            DiagrammingSizingpolicyPercent/** Percent policy */,
            DiagrammingSizingpolicyInherit = 4/** Inherit policy */
        };

        /** Represents the stub side type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingStubsides
        {
            DiagrammingStubsidesAuto/** Auto side */,
            DiagrammingStubsidesLeft/** Left side */,
            DiagrammingStubsidesRight/** Right side */
        };

        /** Represents the boundary type of annotation. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingAnnotationboundarytype
        {
            DiagrammingAnnotationboundarytypeNone/** No Boundary Type */,
            DiagrammingAnnotationboundarytypeCircle/** Circle Type */,
            DiagrammingAnnotationboundarytypeEllipse/** Ellipse Type */,
            DiagrammingAnnotationboundarytypeRectangle/** Rectangle Type */,
            DiagrammingAnnotationboundarytypeRoundedRectangle/** Rounded Rectangle Type */
        };

        /** Represents the arrow type. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingArrowtype
        {
            DiagrammingArrowtypeNone/** Setting the arrow type none arrow*/,
            DiagrammingArrowtypeClosed/** Setting the arrow type closed arrow*/,
            DiagrammingArrowtypeClosedSolid/** Setting the arrow type closed solid arrow*/,
            DiagrammingArrowtypeOpen/** Setting the arrow type open arrow*/,
            DiagrammingArrowtypeFilled/** Setting the arrow type filled arrow*/
        };

        /** Represents the alignment. 
         <br>  Created in NX10.0.0.  <br>  
        */
        enum DiagrammingAlignment
        {
            DiagrammingAlignmentLeft/** Setting the left alignment */,
            DiagrammingAlignmentCenter/** Setting the center alignment */,
            DiagrammingAlignmentRight/** Setting the right alignment */,
            DiagrammingAlignmentJustify/** Setting the justify alignment */
        };

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
