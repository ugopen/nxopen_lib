#ifndef NXOpen_ANNOTATIONS_EDITSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_EDITSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_EditSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DrawingFormatTitleBuilder.hxx>
#include <NXOpen/Annotations_EditSettingsBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Drawings_ViewProjectedArrowSettingsBuilder.hxx>
#include <NXOpen/Drafting_BaseEditSettingsBuilder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class EditSettingsBuilder;
    }
    namespace Annotations
    {
        class DrawingFormatTitleBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class DisplayableObject;
    namespace Drafting
    {
        class BaseEditSettingsBuilder;
    }
    namespace Drawings
    {
        class ViewProjectedArrowSettingsBuilder;
    }
    namespace Annotations
    {
        class _EditSettingsBuilderBuilder;
        class EditSettingsBuilderImpl;
        /** the edit settings builder  <br> To create a new instance of this class, use @link NXOpen::Drafting::SettingsManager::CreateAnnotationEditSettingsBuilder  NXOpen::Drafting::SettingsManager::CreateAnnotationEditSettingsBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  EditSettingsBuilder : public NXOpen::Drafting::BaseEditSettingsBuilder
        {
            private: EditSettingsBuilderImpl * m_editsettingsbuilder_impl;
            private: friend class  _EditSettingsBuilderBuilder;
            protected: EditSettingsBuilder();
            public: ~EditSettingsBuilder();
            /**Returns  the annotation style builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * AnnotationStyle
            (
            );
            /**Returns  the drawing format title block builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::DrawingFormatTitleBuilder * DrawingFormatTitle
            (
            );
            /**Returns  the projected view arrow Settings builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewProjectedArrowSettingsBuilder * ViewProjectedArrowSettings
            (
            );
            /** Inherit Settings From Selected Objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromSelectedObjects
            (
                NXOpen::DisplayableObject * selectedObject /** The selected annotation or table instance object. 
                                                                                        NULL is not allowed. */
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromPreferences
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
