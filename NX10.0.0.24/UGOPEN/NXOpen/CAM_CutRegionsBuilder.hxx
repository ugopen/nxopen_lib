#ifndef NXOpen_CAM_CUTREGIONSBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CUTREGIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutRegionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ObjectContainer.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CutRegionsBuilder;
    }
    namespace CAM
    {
        class EditSubopCommand;
    }
    namespace CAM
    {
        class MergeSubopCommand;
    }
    namespace CAM
    {
        class ObjectContainer;
    }
    namespace CAM
    {
        class ParamBuilder;
    }
    namespace CAM
    {
        class SplitSubopCommand;
    }
    namespace CAM
    {
        class _CutRegionsBuilderBuilder;
        class CutRegionsBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a Cut Regions Builder 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CutRegionsBuilder : public NXOpen::CAM::ObjectContainer
        {
            /** Available types for program import options */
            public: enum CutRegionsProgramTypes
            {
                CutRegionsProgramTypesAll/** All */,
                CutRegionsProgramTypesProgramGroup/** Program Group */
            };

            /** Available types for containment import options */
            public: enum CutRegionsContainmentTypes
            {
                CutRegionsContainmentTypesAll/** All */,
                CutRegionsContainmentTypesSteep/** Steep */,
                CutRegionsContainmentTypesNonSteep/** Non-steep */,
                CutRegionsContainmentTypesFlat/** Flat */,
                CutRegionsContainmentTypesMixed/** Mixed */
            };

            /** Available types for status import options */
            public: enum CutRegionsStatusTypes
            {
                CutRegionsStatusTypesAll/** All */,
                CutRegionsStatusTypesDeferred/** Deferred */,
                CutRegionsStatusTypesCollision/** Collision */
            };

            private: CutRegionsBuilderImpl * m_cutregionsbuilder_impl;
            private: friend class  _CutRegionsBuilderBuilder;
            protected: CutRegionsBuilder();
            public: ~CutRegionsBuilder();
            /**Returns  the program import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutRegionsBuilder::CutRegionsProgramTypes CutRegionsProgram
            (
            );
            /**Sets  the program import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCutRegionsProgram
            (
                NXOpen::CAM::CutRegionsBuilder::CutRegionsProgramTypes cutRegionsProgram /** the program import option value */
            );
            /**Returns  the containment type import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutRegionsBuilder::CutRegionsContainmentTypes CutRegionsContainment
            (
            );
            /**Sets  the containment type import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCutRegionsContainment
            (
                NXOpen::CAM::CutRegionsBuilder::CutRegionsContainmentTypes cutRegionsContainment /** the containment type import option value */
            );
            /**Returns  the status type import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutRegionsBuilder::CutRegionsStatusTypes CutRegionsStatus
            (
            );
            /**Sets  the status type import option value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCutRegionsStatus
            (
                NXOpen::CAM::CutRegionsBuilder::CutRegionsStatusTypes cutRegionsStatus /** the status type import option value */
            );
            /** Create regions method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void CreateRegions
            (
            );
            /** Import regions method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void ImportRegions
            (
            );
            /** Delete all regions method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteAllRegions
            (
            );
            /** Execute split command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteSplitCommand
            (
            );
            /** Execute merge command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteMergeCommand
            (
            );
            /** Execute edit command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteEditCommand
            (
            );
            /** Execute delete command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteDeleteCommand
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** Execute gouge check command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteGougeCheckCommand
            (
            );
            /** Execute defer command method  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteDeferCommand
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** The split subop command builder   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SplitSubopCommand * GetSplitSubopCommandBuilder
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** The edit subop command builder   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::EditSubopCommand * GetEditSubopCommandBuilder
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** The merge subop command builder   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MergeSubopCommand * GetMergeSubopCommandBuilder
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** The gouge chk subop command builder   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ParamBuilder * GetGougeChkSubopCommandBuilder
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** Execute reverse command method  @return  
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: int ExecuteReverseCommand
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
            /** Execute save tool axis command method  @return  
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: int ExecuteSaveToolAxisCommand
            (
                const std::vector<int> & value /** value */ ,
                int targetSubop /** target subop */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
