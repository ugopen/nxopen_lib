#ifndef NXOpen_DISPLAY_SCENE_HXX_INCLUDED
#define NXOpen_DISPLAY_SCENE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_Scene.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_Background.hxx>
#include <NXOpen/Display_ImageBasedLighting.hxx>
#include <NXOpen/Display_Lighting.hxx>
#include <NXOpen/Display_Reflection.hxx>
#include <NXOpen/Display_Scene.hxx>
#include <NXOpen/Display_Stage.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class Scene;
    }
    class Builder;
    namespace Display
    {
        class Background;
    }
    namespace Display
    {
        class ImageBasedLighting;
    }
    namespace Display
    {
        class Lighting;
    }
    namespace Display
    {
        class Reflection;
    }
    namespace Display
    {
        class Stage;
    }
    namespace Display
    {
        class _SceneBuilder;
        class SceneImpl;
        /**
            Represents a @link Display::Scene Display::Scene@endlink 
            A scene is comprised of background, stage, reflection, lights and 
            image-based lighting subobjects.  You optionally specify a scene for
            display in Studio rendering style and High Quality Images.
             <br> This class is restricted to being called from a program running during an 
            Interactive NX session.  If run from a non-interactive session it will 
            return NULL. <br> 
             <br> To create a new instance of this class, use @link NXOpen::ViewCollection::CreateScene  NXOpen::ViewCollection::CreateScene @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  Scene : public NXOpen::Builder
        {
            private: SceneImpl * m_scene_impl;
            private: friend class  _SceneBuilder;
            protected: Scene();
            public: ~Scene();
            /**Returns  the background - use to define how background pixels are displayed 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Background * Background
            (
            );
            /**Returns  the stage - use to optionally define a box that can have between 
                        one and six visible "walls" 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Stage * Stage
            (
            );
            /**Returns  the reflection - use to define what will be reflected in shiny objects 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Reflection * Reflection
            (
            );
            /**Returns  the lights - use to define light settings for the given lights 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::Lighting * Lighting
            (
            );
            /**Returns  the image-based lighting - optionally use to by-pass lights with 
                        image-based lighting, where lighting effects are derived from a
                        given image file 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::ImageBasedLighting * ImageBasedLighting
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
