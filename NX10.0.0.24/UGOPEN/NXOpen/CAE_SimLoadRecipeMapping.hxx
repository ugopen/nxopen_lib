#ifndef NXOpen_CAE_SIMLOADRECIPEMAPPING_HXX_INCLUDED
#define NXOpen_CAE_SIMLOADRECIPEMAPPING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLoadRecipeMapping.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimLoadRecipeMapping.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLoadRecipeMapping;
    }
    namespace CAE
    {
        class SimLoadRecipeMapEntryCollection;
    }
    namespace CAE
    {
        class _SimLoadRecipeMappingBuilder;
        class SimLoadRecipeMappingImpl;
        /**  @brief  This is the class handling the mapping of a certain load type of a load recipe.  

          <br> Mappings are unique for each load type, thus one cannot be created  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLoadRecipeMapping : public NXOpen::TaggedObject
        {
            /** How the orientation of loads is mapped */
            public: enum OrientationTypes
            {
                OrientationTypesUnknown/** unknown */ ,
                OrientationTypesDataSource/** data source */ ,
                OrientationTypesNodal/** nodal */ ,
                OrientationTypesGlobal/** global */ 
            };

            private: SimLoadRecipeMappingImpl * m_simloadrecipemapping_impl;
            private: friend class  _SimLoadRecipeMappingBuilder;
            protected: SimLoadRecipeMapping();
            public: ~SimLoadRecipeMapping();
            /**Returns  the load type of a @link CAE::SimLoadRecipeMapping CAE::SimLoadRecipeMapping@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LoadType
            (
            );
            /**Returns  the orientation type of a @link CAE::SimLoadRecipeMapping CAE::SimLoadRecipeMapping@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimLoadRecipeMapping::OrientationTypes OrientationType
            (
            );
            /**Sets  the orientation type of a @link CAE::SimLoadRecipeMapping CAE::SimLoadRecipeMapping@endlink .
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientationType
            (
                NXOpen::CAE::SimLoadRecipeMapping::OrientationTypes orientationType /** orientationtype */ 
            );


            /** Returns the @link CAE::SimLoadRecipeMapEntryCollection CAE::SimLoadRecipeMapEntryCollection@endlink . 
             <br>  Created in NX10.0.0.  <br>  
            */
            public: NXOpen::CAE::SimLoadRecipeMapEntryCollection *Entries();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
