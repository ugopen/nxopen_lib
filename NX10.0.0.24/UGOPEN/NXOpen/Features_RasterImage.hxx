#ifndef NXOpen_FEATURES_RASTERIMAGE_HXX_INCLUDED
#define NXOpen_FEATURES_RASTERIMAGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RasterImage.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RasterImage;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class _RasterImageBuilder;
        class RasterImageImpl;
        /** Represents a Raster Image feature  <br> Not supported by KF at this time  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RasterImage : public NXOpen::Features::Feature
        {
            /** Specifies the maximum number of pixels to allow for the width or height
                of a raster image.  If a size is requested which is larger than what
                the hardware can supported, the largest supported size will be used. 
                All hardware can support at least 512x512 pixels. */
            public: enum MaxTextureSize
            {
                MaxTextureSizeN512/**   512 x   512 max size */,
                MaxTextureSizeN1024/**  1024 x  1024 max size */,
                MaxTextureSizeN2048/**  2048 x  2048 max size */,
                MaxTextureSizeN4096/**  4096 x  4096 max size */,
                MaxTextureSizeN8192/**  8192 x  8192 max size */,
                MaxTextureSizeN16384/** 16384 x 16384 max size */,
                MaxTextureSizeN32768/** 32768 x 32768 max size */
            };

            private: RasterImageImpl * m_rasterimage_impl;
            private: friend class  _RasterImageBuilder;
            protected: RasterImage();
            public: ~RasterImage();
            /**Returns  the origin of the raster image 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d Origin
            (
            );
            /**Returns  the rotation matrix of the raster image 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Matrix3x3 Matrix
            (
            );
            /**Returns  the length of the image, given in part units (mm or in).  This is 
                    sometimes considered as the width of the image. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double Length
            (
            );
            /**Returns  the height of the image, given in part units (mm or in) 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double Height
            (
            );
            /**Returns  the name of the image file used for the raster image. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ImageFileName
            (
            );
            /**Returns  the translucency of the raster image, in range [0.0, 1.0] 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double Translucency
            (
            );
            /**Returns  the enum value for the maximum size of the image, in pixels 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RasterImage::MaxTextureSize MaximumTextureSize
            (
            );
            /** Updates a raster image feature 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            public: void Update
            (
                const NXOpen::Point3d & origin /** The origin for the raster image */,
                const NXOpen::Matrix3x3 & matrix /** The rotation matrix for the raster image */,
                double length /** Length of the image, given in part units (mm or in) */,
                double height /** Height of the image, give in part units (mm or in) */,
                const NXString & imageFileName /** Name of the image file to use.
                                                                    For now, it must be a .tif file   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                double translucency /** 0.0 for no translucency, 1.0 for fully tranparent */,
                NXOpen::Features::RasterImage::MaxTextureSize maximumTextureSize /** maximum texture size */ 
            );
            /** Updates a raster image feature 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            void Update
            (
                const NXOpen::Point3d & origin /** The origin for the raster image */,
                const NXOpen::Matrix3x3 & matrix /** The rotation matrix for the raster image */,
                double length /** Length of the image, given in part units (mm or in) */,
                double height /** Height of the image, give in part units (mm or in) */,
                const char * imageFileName /** Name of the image file to use.
                                                                    For now, it must be a .tif file   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                double translucency /** 0.0 for no translucency, 1.0 for fully tranparent */,
                NXOpen::Features::RasterImage::MaxTextureSize maximumTextureSize /** maximum texture size */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
