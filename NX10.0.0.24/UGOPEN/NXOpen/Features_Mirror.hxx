#ifndef NXOpen_FEATURES_MIRROR_HXX_INCLUDED
#define NXOpen_FEATURES_MIRROR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Mirror.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/Features_IContainerFeature.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class Mirror;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class Body;
    class DisplayableObject;
    class Edge;
    class Face;
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class IContainerFeature;
    }
    class INXObject;
    namespace Features
    {
        class _MirrorBuilder;
        class MirrorImpl;
        /** Represents a mirror feature  <br> To create or edit an instance of this class, use @link NXOpen::Features::MirrorBuilder  NXOpen::Features::MirrorBuilder @endlink  <br> 
         <br>  Created in NX8.0.1.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  Mirror : public NXOpen::Features::Feature, public virtual NXOpen::Features::IContainerFeature
        {
            private: MirrorImpl * m_mirror_impl;
            private: friend class  _MirrorBuilder;
            protected: Mirror();
            public: ~Mirror();
            /** Returns the Immediate Contained features within the container feature  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Features::Feature *> GetImmediateContainedFeatures
            (
            );
            /** Returns all the features contained in this container feature. This method will cycle through any container features contained by this container feature to return the complete set of contained features.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Features::Feature *> GetAllContainedFeatures
            (
            );
            /** Returns all the bodies created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Body *> GetAssociatedBodies
            (
            );
            /** Returns all the faces created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Face *> GetAssociatedFaces
            (
            );
            /** Returns all the edges created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Edge *> GetAssociatedEdges
            (
            );
            /** Returns all the entities(curves,points and datums) created by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::DisplayableObject *> GetAssociatedCurvesPointsDatums
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
