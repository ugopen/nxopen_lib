#ifndef NXOpen_GEOMETRICUTILITIES_SPINEPOINTDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_SPINEPOINTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_SpinePointData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_SpinePointData.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class SpinePointData;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _SpinePointDataBuilder;
        class SpinePointDataImpl;
        /** Represents a spine point def object
             <br> To create an instance of this class, see @link NXOpen::GeometricUtilities::SpinePointDataCollection NXOpen::GeometricUtilities::SpinePointDataCollection@endlink   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  SpinePointData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Parameter type */
            public: enum ParameterType
            {
                ParameterTypeNormal/** normal */ ,
                ParameterTypePercent/** Parameter expressed as percent arc length*/,
                ParameterTypeLength/** Parameter expressed as arc length */
            };

            private: SpinePointDataImpl * m_spinepointdata_impl;
            private: friend class  _SpinePointDataBuilder;
            protected: SpinePointData();
            public: ~SpinePointData();
            /**Returns  the parameter in percent arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double ParameterPercent
            (
            );
            /**Sets  the parameter in percent arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetParameterPercent
            (
                double percentParameter /** percent parameter */ 
            );
            /**Returns  the parameter in arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double ParameterLength
            (
            );
            /**Sets  the parameter in arc length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetParameterLength
            (
                double lengthParameter /** length parameter */ 
            );
            /** Returns the law value at the specified point  @return  Law value Expression Object 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * GetLawValueAtPoint
            (
            );
            /** Sets the law value at the specified point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetLawValueAtPoint
            (
                const NXString & valString /** Law value string   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the law value at the specified point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            void SetLawValueAtPoint
            (
                const char * valString /** Law value string   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Returns the parent spine on which spine point is defined     @return  section object
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * GetParentSpine
            (
            );
            /** Sets the parent spine on which spine point is defined    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetParentSpine
            (
                NXOpen::Section * parent /** Parent section path on which spine point is defined */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
