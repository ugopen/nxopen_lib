#ifndef NXOpen_CAE_OPTIMIZATION_TBSTOPOLOGYRESTRICTAREABUILDER_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSTOPOLOGYRESTRICTAREABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSTopologyRestrictAreaBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSCastCondition.hxx>
#include <NXOpen/CAE_Optimization_TBSGroupDefinition.hxx>
#include <NXOpen/CAE_Optimization_TBSTopologyLinkCondition.hxx>
#include <NXOpen/CAE_Optimization_TBSTopologyRestrictAreaBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_Optimization_TBSRestrictAreaBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSTopologyRestrictAreaBuilder;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSCastCondition;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSGroupDefinition;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSRestrictAreaBuilder;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSTopologyLinkCondition;
        }
    }
    class Expression;
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSTopologyRestrictAreaBuilderBuilder;
            class TBSTopologyRestrictAreaBuilderImpl;
            /** Represents the builder of @link CAE::Optimization::TBSTopologyRestrictArea CAE::Optimization::TBSTopologyRestrictArea@endlink  <br> To create a new instance of this class, use @link NXOpen::CAE::Optimization::TBSOptimizationManager::CreateTopologyRestrictAreaBuilder  NXOpen::CAE::Optimization::TBSOptimizationManager::CreateTopologyRestrictAreaBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSTopologyRestrictAreaBuilder : public NXOpen::CAE::Optimization::TBSRestrictAreaBuilder
            {
                /** Defines the type of restriction */
                public: enum CheckTypeOption
                {
                    CheckTypeOptionFrozen/** All elements of the element group which do not undergo any
                                                                                                  changes during optimization*/,
                    CheckTypeOptionLinkTopo/** Definition of symmetry and link condtions */,
                    CheckTypeOptionMaximumsSize/** Defition of the maximum structural diameter*/,
                    CheckTypeOptionMinimumSize/** Definition of minimum structural diameter */,
                    CheckTypeOptionCast/** Manufacturing restrictions to guarantee the manufacturing of the elements*/
                };

                private: TBSTopologyRestrictAreaBuilderImpl * m_tbstopologyrestrictareabuilder_impl;
                private: friend class  _TBSTopologyRestrictAreaBuilderBuilder;
                protected: TBSTopologyRestrictAreaBuilder();
                public: ~TBSTopologyRestrictAreaBuilder();
                /**Returns  the checking type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSTopologyRestrictAreaBuilder::CheckTypeOption CheckingType
                (
                );
                /**Sets  the checking type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetCheckingType
                (
                    NXOpen::CAE::Optimization::TBSTopologyRestrictAreaBuilder::CheckTypeOption checkType /** checktype */ 
                );
                /**Returns  the elements to react on the restrictions 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSGroupDefinition * CheckingElementGroup
                (
                );
                /**Returns  the distance value 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Distance
                (
                );
                /**Returns  the maximum thickness of the structure
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Thickness
                (
                );
                /**Returns  the minimum thickness of the structure 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MinimumThickness
                (
                );
                /**Returns  the radius 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Radius
                (
                );
                /**Returns  the link condition 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSTopologyLinkCondition * LinkCondition
                (
                );
                /**Returns  the cast condition 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSCastCondition * CastCondition
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
