#ifndef NXOpen_DIAGRAMMING_SHEETBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_SHEETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_SheetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_Feature.hxx>
#include <NXOpen/Diagramming_SheetBuilder.hxx>
#include <NXOpen/Diagramming_SheetElement.hxx>
#include <NXOpen/Diagramming_BaseObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class SheetBuilder;
    }
    namespace Diagramming
    {
        class BaseObjectBuilder;
    }
    namespace Diagramming
    {
        class Feature;
    }
    namespace Diagramming
    {
        class SheetElement;
    }
    namespace Diagramming
    {
        class _SheetBuilderBuilder;
        class SheetBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a SheetBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::SheetCollection::CreateSheetBuilder  NXOpen::Diagramming::SheetCollection::CreateSheetBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  SheetBuilder : public NXOpen::Diagramming::BaseObjectBuilder
        {
            private: SheetBuilderImpl * m_sheetbuilder_impl;
            private: friend class  _SheetBuilderBuilder;
            protected: SheetBuilder();
            public: ~SheetBuilder();
            /**Returns  the flag if jumpers are allowed to use where connections cross. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool AllowJumpers
            (
            );
            /**Sets  the flag if jumpers are allowed to use where connections cross. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAllowJumpers
            (
                bool allowJumper /** allowjumper */ 
            );
            /** Gets all features.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Diagramming::Feature *> GetFeatures
            (
            );
            /**Returns  the opacity of sheet. 0.0 is completely transparent and 1.0 is completely opaque
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double Opacity
            (
            );
            /**Sets  the opacity of sheet. 0.0 is completely transparent and 1.0 is completely opaque
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOpacity
            (
                double opacity /** opacity */ 
            );
            /** Gets all sheet elements.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Diagramming::SheetElement *> GetSheetElements
            (
            );
            /** Gets the height and width of this sheet. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSize
            (
                double* height /** height */ ,
                double* width /** width */ 
            );
            /** Sets the height and width of this sheet. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSize
            (
                double height /** height */ ,
                double width /** width */ 
            );
            /**Returns  the units of the sheet. It could be either "meters" or "inches". 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Units
            (
            );
            /**Sets  the units of the sheet. It could be either "meters" or "inches". 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUnits
            (
                const NXString & units /** units */ 
            );
            /**Sets  the units of the sheet. It could be either "meters" or "inches". 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetUnits
            (
                const char * units /** units */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
