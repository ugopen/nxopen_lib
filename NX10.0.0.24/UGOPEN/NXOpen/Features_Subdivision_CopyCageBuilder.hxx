#ifndef NXOpen_FEATURES_SUBDIVISION_COPYCAGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_COPYCAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_CopyCageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Subdivision_CageManipulatorData.hxx>
#include <NXOpen/Features_Subdivision_CopyCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SelectCageObjectData.hxx>
#include <NXOpen/GeometricUtilities_TransformerData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class CopyCageBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    namespace GeometricUtilities
    {
        class TransformerData;
    }
    class NXObject;
    namespace Features
    {
        namespace Subdivision
        {
            class _CopyCageBuilderBuilder;
            class CopyCageBuilderImpl;
            /** Represents a @link NXOpen::Features::Subdivision::CopyCageBuilder NXOpen::Features::Subdivision::CopyCageBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateCopyCageBuilder  NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateCopyCageBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            CanRelocateToolToSelection </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CanReorientToolToSelection </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            NumberOfCopies </td> <td> 
             
            1 </td> </tr> 

            </table>  

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  CopyCageBuilder : public NXOpen::Builder
            {
                private: CopyCageBuilderImpl * m_copycagebuilder_impl;
                private: friend class  _CopyCageBuilderBuilder;
                protected: CopyCageBuilder();
                public: ~CopyCageBuilder();
                /**Returns  the objects to be copied 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * Objects
                (
                );
                /**Returns  the transformation tool. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::TransformerData * Transformer
                (
                );
                /**Returns  the flag indicating if tool can be moved alone without moving selected topology 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanMoveToolOnly
                (
                );
                /**Sets  the flag indicating if tool can be moved alone without moving selected topology 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanMoveToolOnly
                (
                    bool canMoveToolOnly /** canmovetoolonly */ 
                );
                /**Returns  the flag indicating if tool should relocate to selection 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanRelocateToolToSelection
                (
                );
                /**Sets  the flag indicating if tool should relocate to selection 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanRelocateToolToSelection
                (
                    bool canRelocateToolToSelection /** canrelocatetooltoselection */ 
                );
                /**Returns  the flag indicating if tool should reorient to selection 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanReorientToolToSelection
                (
                );
                /**Sets  the flag indicating if tool should reorient to selection 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanReorientToolToSelection
                (
                    bool canReorientToolToSelection /** canreorienttooltoselection */ 
                );
                /**Returns  the number of copies 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: int NumberOfCopies
                (
                );
                /**Sets  the number of copies 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetNumberOfCopies
                (
                    int numberOfCopies /** numberofcopies */ 
                );
                /** Repositions the @link NXOpen::GeometricUtilities::TransformerData NXOpen::GeometricUtilities::TransformerData@endlink  to the centroid of the selected entities. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void ResetTransformerToCentroidOfSelection
                (
                );
                /** Repositions the @link NXOpen::GeometricUtilities::TransformerData NXOpen::GeometricUtilities::TransformerData@endlink  to the specified entity. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetTransformerToObject
                (
                    const NXOpen::Features::Subdivision::CageManipulatorData::ObjectSelectionData & selectionData /** selectiondata */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
