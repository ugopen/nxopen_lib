#ifndef NXOpen_ANNOTATIONS_PMIWAVELINKBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIWAVELINKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiWaveLinkBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_PmiWaveLinkBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PmiWaveLinkBuilder;
    }
    namespace Annotations
    {
        class SelectAnnotationList;
    }
    class Builder;
    class TaggedObject;
    namespace Annotations
    {
        class _PmiWaveLinkBuilderBuilder;
        class PmiWaveLinkBuilderImpl;
        /** Represents a @link Annotations::Pmi Annotations::Pmi@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Annotations::PmiWaveCollection::CreatePmiWaveLinkBuilder  NXOpen::Annotations::PmiWaveCollection::CreatePmiWaveLinkBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PmiWaveLinkBuilder : public NXOpen::Builder
        {
            private: PmiWaveLinkBuilderImpl * m_pmiwavelinkbuilder_impl;
            private: friend class  _PmiWaveLinkBuilderBuilder;
            protected: PmiWaveLinkBuilder();
            public: ~PmiWaveLinkBuilder();
            /**Sets  the target part for the WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargetPart
            (
                NXOpen::TaggedObject * targetPart /** targetpart */ 
            );
            /**Returns  the target part for the WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::TaggedObject * TargetPart
            (
            );
            /**Sets  the source part for the WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSourcePart
            (
                NXOpen::TaggedObject * sourcePart /** sourcepart */ 
            );
            /**Returns  the source part for the WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::TaggedObject * SourcePart
            (
            );
            /**Returns  the list of selected PMI to be WAVE linked 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Annotations::SelectAnnotationList * SelectedPMI
            (
            );
            /**Sets  the associated geometry type to WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetGeometryTypeToWAVELink
            (
                int geometryType /** geometrytype */ 
            );
            /**Returns  the associated geometry type to WAVE link 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: int GeometryTypeToWAVELink
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
