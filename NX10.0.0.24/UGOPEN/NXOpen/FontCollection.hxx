#ifndef NXOpen_FONTCOLLECTION_HXX_INCLUDED
#define NXOpen_FONTCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     FontCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class FontCollection;
    class BasePart;
    class FontCollectionImpl;
    /** Represents a collection of typographical fonts (for example, Arial, OldEnglish)  <br> To obtain an instance of this class, refer to @link NXOpen::BasePart  NXOpen::BasePart @endlink  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  FontCollection
    {
        /** Specifies the type of font */
        public: enum Type
        {
            TypeNx/** NX font */,
            TypeStandard/** Standard system font */,
            TypeEmpty = 10/** Font doesn't exist */
        };

        private: FontCollectionImpl * m_fontcollection_impl;
        private: NXOpen::BasePart* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit FontCollection(NXOpen::BasePart *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~FontCollection();
        /** Adds a font to the part.  This will only add NX fonts.  To add Standard fonts,
                use the overloaded @link FontCollection::AddFont FontCollection::AddFont@endlink  routine that accepts the font type. 
                If the font name already exists in the part, this will return the existing font index.  @return  Integer ID that the method assigns to the font 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: int AddFont
        (
            const NXString & fontName /** Font name */
        );
        /** Adds a font to the part.  This will only add NX fonts.  To add Standard fonts,
                use the overloaded @link FontCollection::AddFont FontCollection::AddFont@endlink  routine that accepts the font type. 
                If the font name already exists in the part, this will return the existing font index.  @return  Integer ID that the method assigns to the font 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        int AddFont
        (
            const char * fontName /** Font name */
        );
        /** Returns the name for the font that has the specified integer ID  @return  The font's name 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetFontName
        (
            int fontIndex /** The ID for the font */
        );
        /** Finds out whether the specified ID is associated with a font  @return  True iff the font exists 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: bool DoesFontExist
        (
            int fontIndex /** ID of the font */
        );
        /** Returns the number of fonts in the part  @return  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: int GetLength
        (
        );
        /** Adds a font to the part.  This can be used to create both NX and Standard fonts. 
                If the font name already exists in the part, this will return the existing font index.  @return  Integer ID that the method assigns to the font 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: int AddFont
        (
            const NXString & fontName /** Font name */,
            NXOpen::FontCollection::Type type /** Type of the font */
        );
        /** Adds a font to the part.  This can be used to create both NX and Standard fonts. 
                If the font name already exists in the part, this will return the existing font index.  @return  Integer ID that the method assigns to the font 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        int AddFont
        (
            const char * fontName /** Font name */,
            NXOpen::FontCollection::Type type /** Type of the font */
        );
        /** Replaces a font name and type at the given font index 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void ReplaceFont
        (
            int fontIndex /** ID of the font */,
            NXOpen::FontCollection::Type type /** New type of the font */,
            const NXString & fontName /** New name of the font */
        );
        /** Replaces a font name and type at the given font index 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void ReplaceFont
        (
            int fontIndex /** ID of the font */,
            NXOpen::FontCollection::Type type /** New type of the font */,
            const char * fontName /** New name of the font */
        );
        /** Returns the font type of the font at the provided index  @return  Type of the font 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::FontCollection::Type GetFontType
        (
            int fontIndex /** ID of the font */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
