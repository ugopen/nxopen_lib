#ifndef NXOpen_LINEDESIGNER_HOLEFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_HOLEFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_HoleFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/LineDesigner_HoleFeatureBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class HoleFeatureBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class Section;
    namespace LineDesigner
    {
        class _HoleFeatureBuilderBuilder;
        class HoleFeatureBuilderImpl;
        /**
            Represents a @link LineDesigner::HoleFeature LineDesigner::HoleFeature@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateHoleFeatureBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateHoleFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AddCover </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CoverThickness.Value </td> <td> 
         
        127 (millimeters part), 5 (inches part) </td> </tr> 

        <tr><td> 
         
        LoadRequirements </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        TextSize </td> <td> 
         
        60 </td> </tr> 

        <tr><td> 
         
        UseCoverOffset </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  HoleFeatureBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: HoleFeatureBuilderImpl * m_holefeaturebuilder_impl;
            private: friend class  _HoleFeatureBuilderBuilder;
            protected: HoleFeatureBuilder();
            public: ~HoleFeatureBuilder();
            /**Returns  the select outline 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Section * SelectOutline
            (
            );
            /**Returns  the text location 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * TextLocation
            (
            );
            /**Sets  the text location 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetTextLocation
            (
                NXOpen::Point * textLocation /** textlocation */ 
            );
            /**Returns  the text size 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: double TextSize
            (
            );
            /**Sets  the text size 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetTextSize
            (
                double textSize /** textsize */ 
            );
            /** Returns the enter text string  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: std::vector<NXString> GetEnterTextString
            (
            );
            /** Sets the enter text string 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetEnterTextString
            (
                const std::vector<NXString> & enterTextString /** entertextstring */ 
            );
            /**Returns  the add cover 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool AddCover
            (
            );
            /**Sets  the add cover 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetAddCover
            (
                bool addCover /** addcover */ 
            );
            /**Returns  the use cover offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool UseCoverOffset
            (
            );
            /**Sets  the use cover offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetUseCoverOffset
            (
                bool useCoverOffset /** usecoveroffset */ 
            );
            /**Returns  the cover thickness 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * CoverThickness
            (
            );
            /**Returns  the load requirements 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: double LoadRequirements
            (
            );
            /**Sets  the load requirements 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetLoadRequirements
            (
                double loadRequirements /** loadrequirements */ 
            );
            /**Returns  the make sketchInternal  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool MakeSketchInternal
            (
            );
            /**Sets  the make sketchInternal  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetMakeSketchInternal
            (
                bool makeSketchInternal /** makesketchinternal */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
