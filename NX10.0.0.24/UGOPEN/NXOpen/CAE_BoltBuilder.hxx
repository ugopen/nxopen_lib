#ifndef NXOpen_CAE_BOLTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_BOLTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BoltBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BoltBuilder.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class BoltBuilder;
    }
    class Builder;
    namespace CAE
    {
        class Bolt;
    }
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    class Expression;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _BoltBuilderBuilder;
        class BoltBuilderImpl;
        /**
            Represents a @link CAE::BoltBuilder CAE::BoltBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::BoltCollection::CreateBoltBuilder  NXOpen::CAE::BoltCollection::CreateBoltBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  BoltBuilder : public NXOpen::Builder
        {
            /**  Represents the options for type of operation */
            public: enum BoltOperation
            {
                BoltOperationBoltNut/** Creates a bolt connection with nut */,
                BoltOperationBoltTap/** Creates a bolt connection in a tapped hole */,
                BoltOperationSpiderJunction/** Creates a spider connection at junctions */
            };

            /**  Represents the options for entity selection */
            public: enum Selection
            {
                SelectionEdge/** Allows edge selection for head/nut/junction */,
                SelectionPoint/** Allows point selection for head/nut/junction */
            };

            /**  Represents the options for spider diameter */
            public: enum SpiderDiameter
            {
                SpiderDiameterRelative/** Specifies spider diameter relative to hole diameter */,
                SpiderDiameterAbsolute/** Specifies spider diameter in absolute terms */
            };

            private: BoltBuilderImpl * m_boltbuilder_impl;
            private: friend class  _BoltBuilderBuilder;
            protected: BoltBuilder();
            public: ~BoltBuilder();
            /**Returns  the operation type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::BoltOperation OperationType
            (
            );
            /**Sets  the operation type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOperationType
            (
                NXOpen::CAE::BoltBuilder::BoltOperation operationType /** operationtype */ 
            );
            /**Returns  the head selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::Selection HeadSelectionType
            (
            );
            /**Sets  the head selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetHeadSelectionType
            (
                NXOpen::CAE::BoltBuilder::Selection headSelectionType /** headselectiontype */ 
            );
            /**Returns  the selected head edge(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * HeadEdge
            (
            );
            /**Returns  the head point(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * HeadPoint
            (
            );
            /**Returns  the selected head surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * HeadSurface
            (
            );
            /**Returns  the option for head spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::SpiderDiameter HeadSpiderType
            (
            );
            /**Sets  the option for head spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetHeadSpiderType
            (
                NXOpen::CAE::BoltBuilder::SpiderDiameter headSpiderType /** headspidertype */ 
            );
            /**Returns  the diameter used for creating head spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HeadSpiderDiameter
            (
            );
            /**Returns  the scale used to determine the head spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double HeadSpiderScale
            (
            );
            /**Sets  the scale used to determine the head spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetHeadSpiderScale
            (
                double headSpiderScale /** headspiderscale */ 
            );
            /**Returns  the nut selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::Selection NutSelectionType
            (
            );
            /**Sets  the nut selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNutSelectionType
            (
                NXOpen::CAE::BoltBuilder::Selection nutSelectionType /** nutselectiontype */ 
            );
            /**Returns  the selected nut edge(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * NutEdge
            (
            );
            /**Returns  the nut point(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * NutPoint
            (
            );
            /**Returns  the selected nut surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * NutSurface
            (
            );
            /**Returns  the option for nut spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::SpiderDiameter NutSpiderType
            (
            );
            /**Sets  the option for nut spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNutSpiderType
            (
                NXOpen::CAE::BoltBuilder::SpiderDiameter nutSpiderType /** nutspidertype */ 
            );
            /**Returns  the diameter used for creating nut spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NutSpiderDiameter
            (
            );
            /**Returns  the scale used to determine the nut spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double NutSpiderScale
            (
            );
            /**Sets  the scale used to determine the nut spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNutSpiderScale
            (
                double nutSpiderScale /** nutspiderscale */ 
            );
            /**Returns  the selected tap surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * TapSurface
            (
            );
            /**Returns  the bolt length 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BoltLength
            (
            );
            /**Returns  the thread length 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ThreadLength
            (
            );
            /**Returns  the option to use a spring element to connect the head to the tap surface 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Spring
            (
            );
            /**Sets  the option to use a spring element to connect the head to the tap surface 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSpring
            (
                bool isSpring /** isspring */ 
            );
            /**Returns  the option to include junction edges for creating spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Junction
            (
            );
            /**Sets  the option to include junction edges for creating spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction
            (
                bool isJunction /** isjunction */ 
            );
            /**Returns  the junction selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::Selection JunctionSelectionType
            (
            );
            /**Sets  the junction selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunctionSelectionType
            (
                NXOpen::CAE::BoltBuilder::Selection junctionSelectionType /** junctionselectiontype */ 
            );
            /**Returns  the selected junction edge(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * JunctionEdge
            (
            );
            /**Returns  the junction point(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * JunctionPoint
            (
            );
            /**Returns  the selected junction surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * JunctionSurface
            (
            );
            /**Returns  the option for junction spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::SpiderDiameter JunctionSpiderType
            (
            );
            /**Sets  the option for junction spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunctionSpiderType
            (
                NXOpen::CAE::BoltBuilder::SpiderDiameter junctionSpiderType /** junctionspidertype */ 
            );
            /**Returns  the diameter used for creating junction spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * JunctionSpiderDiameter
            (
            );
            /**Returns  the scale used to determine the junction spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double JunctionSpiderScale
            (
            );
            /**Sets  the scale used to determine the junction spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunctionSpiderScale
            (
                double junctionSpiderScale /** junctionspiderscale */ 
            );
            /**Returns  the junction 1 selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::Selection Junction1SelectionType
            (
            );
            /**Sets  the junction 1 selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction1SelectionType
            (
                NXOpen::CAE::BoltBuilder::Selection junction1SelectionType /** junction1selectiontype */ 
            );
            /**Returns  the selected junction 1 edge(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction1Edge
            (
            );
            /**Returns  the junction 1 point(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction1Point
            (
            );
            /**Returns  the selected junction 1 surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction1Surface
            (
            );
            /**Returns  the option for junction 1 spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::SpiderDiameter Junction1SpiderType
            (
            );
            /**Sets  the option for junction 1 spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction1SpiderType
            (
                NXOpen::CAE::BoltBuilder::SpiderDiameter junction1SpiderType /** junction1spidertype */ 
            );
            /**Returns  the diameter used for creating junction 1 spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Junction1SpiderDiameter
            (
            );
            /**Returns  the scale used to determine the junction 1 spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double Junction1SpiderScale
            (
            );
            /**Sets  the scale used to determine the junction 1 spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction1SpiderScale
            (
                double junction1SpiderScale /** junction1spiderscale */ 
            );
            /**Returns  the junction 2 selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::Selection Junction2SelectionType
            (
            );
            /**Sets  the junction 2 selection type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction2SelectionType
            (
                NXOpen::CAE::BoltBuilder::Selection junction2SelectionType /** junction2selectiontype */ 
            );
            /**Returns  the selected junction 2 edge(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction2Edge
            (
            );
            /**Returns  the junction 2 point(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction2Point
            (
            );
            /**Returns  the selected junction 2 surface(s) 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Junction2Surface
            (
            );
            /**Returns  the option for junction 2 spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BoltBuilder::SpiderDiameter Junction2SpiderType
            (
            );
            /**Sets  the option for junction 2 spider diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction2SpiderType
            (
                NXOpen::CAE::BoltBuilder::SpiderDiameter junction2SpiderType /** junction2spidertype */ 
            );
            /**Returns  the diameter used for creating junction 2 spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Junction2SpiderDiameter
            (
            );
            /**Returns  the scale used to determine the junction 2 spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double Junction2SpiderScale
            (
            );
            /**Sets  the scale used to determine the junction 2 spider diameter relative to the hole diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunction2SpiderScale
            (
                double junction2SpiderScale /** junction2spiderscale */ 
            );
            /**Returns  the element type to be created for the shank 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * ShankElementType
            (
            );
            /**Returns  the element type to be created for the spider 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * SpiderElementType
            (
            );
            /**Returns  the option to include midnodes for creating spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Midnode
            (
            );
            /**Sets  the option to include midnodes for creating spider elements 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMidnode
            (
                bool isMidnode /** ismidnode */ 
            );
            /** Commit the builder and create a bolt mesh  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Bolt * CommitBolt
            (
            );
            /**Returns  the option to tune collinear tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: double CollinearTolerance
            (
            );
            /**Sets  the option to tune collinear tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCollinearTolerance
            (
                double collinearTolerance /** collineartolerance */ 
            );
            /**Returns  the option to tune junction tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: double JunctionTolerance
            (
            );
            /**Sets  the option to tune junction tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetJunctionTolerance
            (
                double junctionTolerance /** junctiontolerance */ 
            );
            /**Returns  the option to tune node tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: double NodeTolerance
            (
            );
            /**Sets  the option to tune node tolerance for a model. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNodeTolerance
            (
                double nodeTolerance /** nodetolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
