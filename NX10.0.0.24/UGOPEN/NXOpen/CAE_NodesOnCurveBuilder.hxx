#ifndef NXOpen_CAE_NODESONCURVEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_NODESONCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodesOnCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_NodesOnCurveBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NodesOnCurveBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectCAEEdge;
    }
    class Expression;
    class SelectDisplayableObject;
    namespace CAE
    {
        class _NodesOnCurveBuilderBuilder;
        class NodesOnCurveBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::NodesOnCurveBuilder NXOpen::CAE::NodesOnCurveBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateNodesOnCurveBuilder  NXOpen::CAE::NodeElementManager::CreateNodesOnCurveBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NodesOnCurveBuilder : public NXOpen::Builder
        {
            /** the placement type types */
            public: enum PlacementType
            {
                PlacementTypeByNumber/**by number */,
                PlacementTypeByDistance/**by distance */
            };

            private: NodesOnCurveBuilderImpl * m_nodesoncurvebuilder_impl;
            private: friend class  _NodesOnCurveBuilderBuilder;
            protected: NodesOnCurveBuilder();
            public: ~NodesOnCurveBuilder();
            /**Returns  the edge 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::CAE::NodesOnCurveBuilder::Geom NXOpen::CAE::NodesOnCurveBuilder::Geom@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::CAE::NodesOnCurveBuilder::Geom instead.") NXOpen::CAE::SelectCAEEdge * Edge
            (
            );
            /**Returns  the selected geometry, on which nodes will be created. 
                       Valid selection types are edges, point and curves @link NXOpen::CAE::CAEEdge NXOpen::CAE::CAEEdge@endlink , @link NXOpen::Point NXOpen::Point@endlink , 
                       @link NXOpen::Line NXOpen::Line@endlink , @link NXOpen::Edge NXOpen::Edge@endlink , @link NXOpen::Spline NXOpen::Spline@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * Geom
            (
            );
            /**Returns  the length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double Length
            (
            );
            /**Sets  the length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLength
            (
                double length /** length */ 
            );
            /**Returns  the placement option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::NodesOnCurveBuilder::PlacementType PlacementOption
            (
            );
            /**Sets  the placement option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPlacementOption
            (
                NXOpen::CAE::NodesOnCurveBuilder::PlacementType placementOption /** placementoption */ 
            );
            /**Returns  the num nodes 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int NumNodes
            (
            );
            /**Sets  the num nodes 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumNodes
            (
                int numNodes /** numnodes */ 
            );
            /**Returns  the distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Label
            (
            );
            /**Sets  the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int label /** label */ 
            );
            /**Returns  the increment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int Increment
            (
            );
            /**Sets  the increment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetIncrement
            (
                int increment /** increment */ 
            );
            /**Returns  the closedCurve 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsClosedCurve
            (
            );
            /**Sets  the closedCurve 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetClosedCurve
            (
                bool isClosedCurve /** isclosedcurve */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
