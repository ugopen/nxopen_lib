#ifndef NXOpen_TOOLING_DIEDESIGNTRIMPOSTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIEDESIGNTRIMPOSTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DieDesignTrimPostBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_DieDesignTrimPostBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DieDesignTrimPostBuilder;
    }
    class Builder;
    class Direction;
    class Plane;
    class Section;
    class SelectBody;
    class SelectNXObjectList;
    namespace Tooling
    {
        class _DieDesignTrimPostBuilderBuilder;
        class DieDesignTrimPostBuilderImpl;
        /** Represents a Trim Post builder  <br> To create a new instance of this class, use @link NXOpen::Tooling::AutoDieCollection::CreateDieDesignTrimPostBuilder  NXOpen::Tooling::AutoDieCollection::CreateDieDesignTrimPostBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DieDesignTrimPostBuilder : public NXOpen::Builder
        {
            private: DieDesignTrimPostBuilderImpl * m_diedesigntrimpostbuilder_impl;
            private: friend class  _DieDesignTrimPostBuilderBuilder;
            protected: DieDesignTrimPostBuilder();
            public: ~DieDesignTrimPostBuilder();
            /**Returns  the product selection 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::SelectBody * Product
            (
            );
            /**Returns  the trim profiles used to create Trim Post 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::SelectNXObjectList * Profiles
            (
            );
            /**Returns  the trim profiles direction used to determine which side the Trim Post will be built,
                        is true in the direction and false in the opposite direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool ProfilesDirection
            (
            );
            /**Sets  the trim profiles direction used to determine which side the Trim Post will be built,
                        is true in the direction and false in the opposite direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProfilesDirection
            (
                bool profilesDirection /** profilesdirection */ 
            );
            /**Returns  the base plane used to create Trim Post
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Plane * BasePlane
            (
            );
            /**Sets  the base plane used to create Trim Post
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBasePlane
            (
                NXOpen::Plane * basePlane /** baseplane */ 
            );
            /**Returns  the boundary curves used to create Trim Post
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Section * BoundaryCurves
            (
            );
            /**Returns  the cam direction used to create Trim Post 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Direction * CamDirection
            (
            );
            /**Sets  the cam direction used to create Trim Post 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCamDirection
            (
                NXOpen::Direction * camDirection /** camdirection */ 
            );
            /**Returns  the option to use the original sheet body or the rough offset sheet instead.
                        The original sheet body is the user specified product body, which will be
                        used to create the trim post features.
                        When value is true, the original sheet body will be used,
                        when value is false, the rough offset sheet will be used.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool UseApproxSheetBody
            (
            );
            /**Sets  the option to use the original sheet body or the rough offset sheet instead.
                        The original sheet body is the user specified product body, which will be
                        used to create the trim post features.
                        When value is true, the original sheet body will be used,
                        when value is false, the rough offset sheet will be used.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetUseApproxSheetBody
            (
                bool useExtractSheetBody /** useextractsheetbody */ 
            );
            /**Returns  the machine allowance used to rough offset product sheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double MachineAllowance
            (
            );
            /**Sets  the machine allowance used to rough offset product sheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetMachineAllowance
            (
                double machineAllowance /** machineallowance */ 
            );
            /**Returns  the belt thickness parameter of Trim Post section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double BeltThickness
            (
            );
            /**Sets  the belt thickness parameter of Trim Post section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBeltThickness
            (
                double beltThickness /** beltthickness */ 
            );
            /**Returns  the cam relief parameter of Trim Post section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double CAMRelief
            (
            );
            /**Sets  the cam relief parameter of Trim Post section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCAMRelief
            (
                double camRelief /** camrelief */ 
            );
            /** Sets seed point information. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SeedPointInfo
            (
                const std::vector<double> & seedPoint /** seedpoint */ ,
                const std::vector<double> & seedTangent /** seedtangent */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
