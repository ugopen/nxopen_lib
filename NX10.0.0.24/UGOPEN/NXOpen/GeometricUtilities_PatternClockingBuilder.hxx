#ifndef NXOpen_GEOMETRICUTILITIES_PATTERNCLOCKINGBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PATTERNCLOCKINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PatternClockingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_ModlMotion.hxx>
#include <NXOpen/GeometricUtilities_PatternClockingBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PatternClockingBuilder;
    }
    class Builder;
    class Expression;
    namespace GeometricUtilities
    {
        class ModlMotion;
    }
    namespace GeometricUtilities
    {
        class _PatternClockingBuilderBuilder;
        class PatternClockingBuilderImpl;
        /**  enables the ability to apply delta transforms on individual instances of a pattern within the pattern feature  <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::PatternDefinition::CreateClockingBuilder  NXOpen::GeometricUtilities::PatternDefinition::CreateClockingBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Motion.DeltaEnum </td> <td> 
         
        ReferenceWcsWorkPart </td> </tr> 

        <tr><td> 
         
        Motion.DeltaXc.Value </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        Motion.DeltaYc.Value </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        Motion.DeltaZc.Value </td> <td> 
         
        0.0 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PatternClockingBuilder : public NXOpen::Builder
        {
            /** type of pattern clocking to transform individual instances */
            public: enum ClockingType
            {
                ClockingTypeWithinPatternDefinitionLinear/** within pattern definition linear */ ,
                ClockingTypeWithinPatternDefinitionCircular/** within pattern definition circular */ ,
                ClockingTypeUserDefined/** user defined */ 
            };

            private: PatternClockingBuilderImpl * m_patternclockingbuilder_impl;
            private: friend class  _PatternClockingBuilderBuilder;
            protected: PatternClockingBuilder();
            public: ~PatternClockingBuilder();
            /**Returns  the clocking enum to determine if linear or angular clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternClockingBuilder::ClockingType ClockType
            (
            );
            /**Sets  the clocking enum to determine if linear or angular clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetClockType
            (
                NXOpen::GeometricUtilities::PatternClockingBuilder::ClockingType clockType /** clocking type */
            );
            /**Returns  the x direction delta for linear clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Direction1Delta
            (
            );
            /**Returns  the y direction delta for linear clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Direction2Delta
            (
            );
            /**Returns  the angular delta for circular clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AngularDelta
            (
            );
            /**Returns  the radial delta for circular clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RadialDelta
            (
            );
            /**Returns  the user defined transform motion 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ModlMotion * Motion
            (
            );
            /** Adds an instance that will get this clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void AddInstance
            (
                int index1 /** first index into the instance array to add clocking */,
                int index2 /** second index into the instance array to add clocking */
            );
            /** Removes an instance from this clocking 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveInstance
            (
                int index1 /** first index into the instance array to drop this clocking */,
                int index2 /** second index into the instance array to drop this clocking */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
