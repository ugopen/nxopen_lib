#ifndef NXOpen_DIE_KEYWAYCHILDBUILDER_HXX_INCLUDED
#define NXOpen_DIE_KEYWAYCHILDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_KeywayChildBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class KeywayChildBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class IOrientation;
    namespace Die
    {
        class _KeywayChildBuilderBuilder;
        class KeywayChildBuilderImpl;
        /** Represents a Die Keyway Child sub feature.  <br> This sub feature is created via the main feature builder.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  KeywayChildBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Settings for the runoff type of the keyway. */
            public: enum RunoffTypeOption
            {
                RunoffTypeOptionRectangular/** Rectangular runoff. */,
                RunoffTypeOptionCircular/** Circular runoff. */
            };

            /** Settings for the location of the keyway. */
            public: enum LocationOption
            {
                LocationOptionPositiveX/** Keyway built in positive x direction. */,
                LocationOptionNegativeX/** Keyway built in negative x direction. */,
                LocationOptionPositiveY/** Keyway built in positive y direction. */,
                LocationOptionNegativeY/** Keyway built in negative y direction. */
            };

            private: KeywayChildBuilderImpl * m_keywaychildbuilder_impl;
            private: friend class  _KeywayChildBuilderBuilder;
            protected: KeywayChildBuilder();
            public: ~KeywayChildBuilder();
            /**Sets  the plane of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPlane
            (
                NXOpen::IOrientation * plane /** plane */ 
            );
            /**Returns  the plane of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::IOrientation * Plane
            (
            );
            /**Sets  the length of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLength
            (
                double length /** length */ 
            );
            /**Returns  the length of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Length
            (
            );
            /**Sets  the width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetWidth
            (
                double width /** width */ 
            );
            /**Returns  the width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Width
            (
            );
            /**Sets  the depth of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDepth
            (
                double depth /** depth */ 
            );
            /**Returns  the depth of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Depth
            (
            );
            /**Sets  the pad width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPadWidth
            (
                double padWidth /** pad width */ 
            );
            /**Returns  the pad width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double PadWidth
            (
            );
            /**Sets  the pad height of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPadHeight
            (
                double padHeight /** pad height */ 
            );
            /**Returns  the pad height of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double PadHeight
            (
            );
            /**Sets  the minimum rib height of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetMinimumRibHeight
            (
                double minimumRibHeight /** minimum rib height */ 
            );
            /**Returns  the minimum rib height of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double MinimumRibHeight
            (
            );
            /**Sets  the runoff length of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRunoffLength
            (
                double runoffLength /** runoff length */ 
            );
            /**Returns  the runoff length of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double RunoffLength
            (
            );
            /**Sets  the runoff width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRunoffWidth
            (
                double runoffWidth /** runoff width */ 
            );
            /**Returns  the runoff width of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double RunoffWidth
            (
            );
            /**Sets  the runoff depth of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRunoffDepth
            (
                double runoffDepth /** runoff depth */ 
            );
            /**Returns  the runoff depth of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double RunoffDepth
            (
            );
            /**Sets  the runoff diameter of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRunoffDiameter
            (
                double runoffDiameter /** runoff diameter */ 
            );
            /**Returns  the runoff diameter of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double RunoffDiameter
            (
            );
            /**Sets  the placement offset of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPlacementOffset
            (
                double placementOffset /** placement offset */ 
            );
            /**Returns  the placement offset of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double PlacementOffset
            (
            );
            /**Sets  the offset of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOffset
            (
                double offset /** offset */ 
            );
            /**Returns  the offset of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Offset
            (
            );
            /**Sets  the runoff type of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRunoffType
            (
                NXOpen::Die::KeywayChildBuilder::RunoffTypeOption runoffType /** runoff type */ 
            );
            /**Returns  the runoff type of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::KeywayChildBuilder::RunoffTypeOption RunoffType
            (
            );
            /**Sets  the location of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLocation
            (
                NXOpen::Die::KeywayChildBuilder::LocationOption location /** location */ 
            );
            /**Returns  the location of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::KeywayChildBuilder::LocationOption Location
            (
            );
            /**Sets  the value to reverse the orientation of the orientation plane,
                 if true the keyway orientation normal will be reversed,
                 if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReverseOrientation
            (
                bool reverseOrientation /** reverse orientation */ 
            );
            /**Returns  the value to reverse the orientation of the orientation plane,
                 if true the keyway orientation normal will be reversed,
                 if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool ReverseOrientation
            (
            );
            /** Gets the slot attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetSlotAttributes
            (
                NXString* title /** Title for attribute. */,
                NXString* value /** Value of attribute. */,
                int* color /** Color of slot faces. */
            );
            /** Sets the slot attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetSlotAttributes
            (
                const NXString & title /** Title for attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** Value of attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** Color of slot faces. */
            );
            /** Sets the slot attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetSlotAttributes
            (
                const char * title /** Title for attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * value /** Value of attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** Color of slot faces. */
            );
            /** Gets the pad attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetPadAttributes
            (
                NXString* title /** Title for attribute. */,
                NXString* value /** Value of attribute. */,
                int* color /** Color of pad faces. */
            );
            /** Sets the pad attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPadAttributes
            (
                const NXString & title /** Title for attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** Value of attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** Color of pad faces. */
            );
            /** Sets the pad attributes, note existance of attributes depends on usage in
                    main feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetPadAttributes
            (
                const char * title /** Title for attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * value /** Value of attribute.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** Color of pad faces. */
            );
            /**Sets  the design status of the keyway, if true the keyway will be built into the model, if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool designStatus /** design status */ 
            );
            /**Returns  the design status of the keyway, if true the keyway will be built into the model, if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of the keyway. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of the keyway, if true input data to the keyway will be displayed, 
                    if false the input data will not be displayed. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool displayStatus /** display status */ 
            );
            /**Returns  the display status of the keyway, if true input data to the keyway will be displayed, 
                    if false the input data will not be displayed. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
