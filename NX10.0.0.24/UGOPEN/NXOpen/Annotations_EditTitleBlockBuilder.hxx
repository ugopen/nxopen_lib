#ifndef NXOpen_ANNOTATIONS_EDITTITLEBLOCKBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_EDITTITLEBLOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_EditTitleBlockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_BaseTitleBlockBuilder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class EditTitleBlockBuilder;
    }
    namespace Annotations
    {
        class BaseTitleBlockBuilder;
    }
    namespace Annotations
    {
        class _EditTitleBlockBuilderBuilder;
        class EditTitleBlockBuilderImpl;
        /** Represents a @link NXOpen::Annotations::EditTitleBlockBuilder NXOpen::Annotations::EditTitleBlockBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Annotations::TitleBlockCollection::CreateEditTitleBlockBuilder  NXOpen::Annotations::TitleBlockCollection::CreateEditTitleBlockBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  EditTitleBlockBuilder : public NXOpen::Annotations::BaseTitleBlockBuilder
        {
            private: EditTitleBlockBuilderImpl * m_edittitleblockbuilder_impl;
            private: friend class  _EditTitleBlockBuilderBuilder;
            protected: EditTitleBlockBuilder();
            public: ~EditTitleBlockBuilder();
            /** Return the value of the cell for given label  @return  Returns the value of the label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetCellValueForLabel
            (
                const NXString & label /** Label whose value is quried */
            );
            /** Return the value of the cell for given label  @return  Returns the value of the label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            NXString GetCellValueForLabel
            (
                const char * label /** Label whose value is quried */
            );
            /** Sets the value of the cell for given label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCellValueForLabel
            (
                const NXString & label /** Label whose value is to be set */,
                const NXString & value /** This value would be set for the given label */
            );
            /** Sets the value of the cell for given label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetCellValueForLabel
            (
                const char * label /** Label whose value is to be set */,
                const char * value /** This value would be set for the given label */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
