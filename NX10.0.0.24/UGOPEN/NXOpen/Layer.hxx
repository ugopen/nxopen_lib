#ifndef NXOpen_LAYER_HXX_INCLUDED
#define NXOpen_LAYER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layer
    {
        /** Constants for layers */
        enum Constants
        {
            ConstantsFirstLayer = 1/** The number of the first layer.
                                                        Valid layers are numbered from @link Layer::ConstantsFirstLayer Layer::ConstantsFirstLayer@endlink 
                                                        to @link Layer::ConstantsLastLayer Layer::ConstantsLastLayer@endlink  */,
            ConstantsLastLayer = 256/** The number of the last layer.
                                                        Valid layers are numbered from @link Layer::ConstantsFirstLayer Layer::ConstantsFirstLayer@endlink 
                                                        to @link Layer::ConstantsLastLayer Layer::ConstantsLastLayer@endlink  */
        };

        /** Represents the state of the layer */
        enum State
        {
            StateWorkLayer/** Work layer.  All newly created objects are placed on the work layer.*/,
            StateSelectable/** Objects on the layer are selectable */,
            StateVisible/** Objects on the layer are visible but not selectable */,
            StateHidden/** Objects on the layer are not visible and not selectable */
        };

         /** Used in several methods that get or set the state of a layer */

        struct  StateInfo
        {
            public: /** Layer number */int Layer;
            public: /** The state of the layer */NXOpen::Layer::State State;
            public: StateInfo() :
                Layer(),
                State((NXOpen::Layer::State)0)
            {
            }
            /** Constructor for the StateInfo struct. */ 
            public: StateInfo(int layerInitial /** Layer number */, 
                    NXOpen::Layer::State stateInitial /** The state of the layer */) :
                Layer(layerInitial),
                State(stateInitial)
            {
            }
        };

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
