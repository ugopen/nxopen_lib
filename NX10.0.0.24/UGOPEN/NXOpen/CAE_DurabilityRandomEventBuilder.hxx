#ifndef NXOpen_CAE_DURABILITYRANDOMEVENTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYRANDOMEVENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityRandomEventBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityRandomEventBuilder.hxx>
#include <NXOpen/CAE_DurabilityEventBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilityRandomEventBuilder;
    }
    namespace CAE
    {
        class DurabilityEventBuilder;
    }
    namespace CAE
    {
        class DurabilityRandomFatigue;
    }
    namespace CAE
    {
        class _DurabilityRandomEventBuilderBuilder;
        class DurabilityRandomEventBuilderImpl;
        /** Represents the builder for the random durability event.  <br> There is no kf creator for this.  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilityRandomEventBuilder : public NXOpen::CAE::DurabilityEventBuilder
        {
            private: DurabilityRandomEventBuilderImpl * m_durabilityrandomeventbuilder_impl;
            private: friend class  _DurabilityRandomEventBuilderBuilder;
            protected: DurabilityRandomEventBuilder();
            public: ~DurabilityRandomEventBuilder();
            /**Returns  the subcase index. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: int Subcase
            (
            );
            /**Sets  the subcase index. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetSubcase
            (
                int subcase /** subcase */ 
            );
            /** The random fatigue. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetRandomfatigue
            (
                NXOpen::CAE::DurabilityRandomFatigue * randomFatigue /** randomfatigue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
