#ifndef NXOpen_CAE_SIMCONDITIONSEQMGR_HXX_INCLUDED
#define NXOpen_CAE_SIMCONDITIONSEQMGR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimConditionSeqMgr.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimCondition.hxx>
#include <NXOpen/CAE_SimConditionSeqMgr.hxx>
#include <NXOpen/CAE_SimConditionSequence.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimConditionSeqMgr;
    }
    namespace CAE
    {
        class SimCondition;
    }
    namespace CAE
    {
        class SimConditionCollection;
    }
    namespace CAE
    {
        class SimConditionParamCollection;
    }
    namespace CAE
    {
        class SimConditionSequence;
    }
    namespace CAE
    {
        class SimConditionSequenceCollection;
    }
    namespace CAE
    {
        class _SimConditionSeqMgrBuilder;
        class SimConditionSeqMgrImpl;
        /**  @brief  This is the manager for Condition Sequences. Each Simulation has one manager. 

           <br> To obtain an instance of this class, use @link NXOpen::CAE::SimSimulation::ConditionSeqManager  NXOpen::CAE::SimSimulation::ConditionSeqManager @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimConditionSeqMgr : public NXOpen::TaggedObject
        {
            /** Specifies the file format during an import. */
            public: enum FileFormat
            {
                FileFormatBdd/** bdd */ ,
                FileFormatXml/** xml */ 
            };

            private: SimConditionSeqMgrImpl * m_simconditionseqmgr_impl;
            private: friend class  _SimConditionSeqMgrBuilder;
            protected: SimConditionSeqMgr();
            public: ~SimConditionSeqMgr();
            /**Returns  the currently active Condition Sequence.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimConditionSequence * ActiveConditionSequence
            (
            );
            /**Sets  the currently active Condition Sequence.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetActiveConditionSequence
            (
                NXOpen::CAE::SimConditionSequence * sequence /** sequence */ 
            );
            /** Returns if a @link CAE::SimCondition CAE::SimCondition@endlink  is referenced in
                        a @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsReferenced
            (
                NXOpen::CAE::SimCondition * condition /** condition */ 
            );
            /** Imports a file from disk to create a @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ImportFile
            (
                const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::SimConditionSeqMgr::FileFormat format /** format */ 
            );
            /** Imports a file from disk to create a @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void ImportFile
            (
                const char * filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::SimConditionSeqMgr::FileFormat format /** format */ 
            );
            /** Exports a @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink  to a file on disk. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ExportFile
            (
                const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::SimConditionSeqMgr::FileFormat format /** format */ 
            );
            /** Exports a @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink  to a file on disk. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void ExportFile
            (
                const char * filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::SimConditionSeqMgr::FileFormat format /** format */ 
            );
            /** Wrap up all modifications done to @link CAE::SimConditionSequence CAE::SimConditionSequence@endlink ,
                        @link CAE::SimCondition CAE::SimCondition@endlink , @link CAE::SimConditionParam CAE::SimConditionParam@endlink  and
                        @link Expression Expression@endlink  in order to have all objects in a consistent state. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void WrapUp
            (
            );


            /** Returns the @link CAE::SimConditionParamCollection CAE::SimConditionParamCollection@endlink . 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::CAE::SimConditionParamCollection *ConditionParamCollection();
            /** Returns the @link CAE::SimConditionCollection CAE::SimConditionCollection@endlink . 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::CAE::SimConditionCollection *ConditionCollection();
            /** Returns the @link CAE::SimConditionSequenceCollection CAE::SimConditionSequenceCollection@endlink . 
             <br>  Created in NX9.0.0.  <br>  
            */
            public: NXOpen::CAE::SimConditionSequenceCollection *ConditionSequenceCollection();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
