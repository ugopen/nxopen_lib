#ifndef NXOpen_LINEDESIGNER_RAILINGFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_RAILINGFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_RailingFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/LineDesigner_RailingFeatureBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class RailingFeatureBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class Section;
    namespace LineDesigner
    {
        class _RailingFeatureBuilderBuilder;
        class RailingFeatureBuilderImpl;
        /**
                Represents a @link LineDesigner::RailingFeature LineDesigner::RailingFeature@endlink  Features.FeatureBuilder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateRailingFeatureBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateRailingFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        EnumPostCrossStyle </td> <td> 
         
        IBeam </td> </tr> 

        <tr><td> 
         
        EnumRailCrossStyle </td> <td> 
         
        Rectangle </td> </tr> 

        <tr><td> 
         
        EnumSpacingType </td> <td> 
         
        CountandSpan </td> </tr> 

        <tr><td> 
         
        IntegerCount </td> <td> 
         
        2 </td> </tr> 

        <tr><td> 
         
        LinearDimBottomElevation.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPitchBy.Value </td> <td> 
         
        100 (millimeters part), 4 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostCrossDia.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostCrossLength.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostCrossTickness.Value </td> <td> 
         
        3.35 (millimeters part), 0.13 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostCrossWidth.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostHeight.Value </td> <td> 
         
        1067 (millimeters part), 42 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimPostSpacing.Value </td> <td> 
         
        100 (millimeters part), 4 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimRailCrossDia.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimRailCrossLength.Value </td> <td> 
         
        37.5 (millimeters part), 1.57 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimRailCrossWidth.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        OnPathDimSpanBy.Expression.Value </td> <td> 
         
        1067 (millimeters part), 42 (inches part) </td> </tr> 

        <tr><td> 
         
        PostOffset </td> <td> 
         
        PostOnCurve </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  RailingFeatureBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** */
            public: enum PostOffsetType
            {
                PostOffsetTypePostOnCurve/** post on curve */ ,
                PostOffsetTypePostLeftOfCurve/** post left of curve */ ,
                PostOffsetTypePostRightOfCurve/** post right of curve */ 
            };

            /** */
            public: enum SelPostcrossStyle
            {
                SelPostcrossStyleIBeam/** ibeam */ ,
                SelPostcrossStyleRectangle/** rectangle */ ,
                SelPostcrossStyleCircle/** circle */ ,
                SelPostcrossStyleUserDefine/** user define */ 
            };

            /** */
            public: enum RailCrossStyle
            {
                RailCrossStyleRectangle/** rectangle */ ,
                RailCrossStyleCircle/** circle */ 
            };

            /** */
            public: enum SpaceType
            {
                SpaceTypeCountandSpan/** countand span */ ,
                SpaceTypePitchandSpan/** pitchand span */ ,
                SpaceTypeCountandPitch/** countand pitch */ 
            };

            private: RailingFeatureBuilderImpl * m_railingfeaturebuilder_impl;
            private: friend class  _RailingFeatureBuilderBuilder;
            protected: RailingFeatureBuilder();
            public: ~RailingFeatureBuilder();
            /**Returns  the selection curves 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Section * SelectionCurves
            (
            );
            /**Returns  the linear dim post height 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostHeight
            (
            );
            /**Returns  the linear dim post spacing 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostSpacing
            (
            );
            /**Returns  the post offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder::PostOffsetType PostOffset
            (
            );
            /**Sets  the post offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetPostOffset
            (
                NXOpen::LineDesigner::RailingFeatureBuilder::PostOffsetType postOffset /** postoffset */ 
            );
            /**Returns  the enum post cross style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder::SelPostcrossStyle EnumPostCrossStyle
            (
            );
            /**Sets  the enum post cross style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetEnumPostCrossStyle
            (
                NXOpen::LineDesigner::RailingFeatureBuilder::SelPostcrossStyle enumPostCrossStyle /** enumpostcrossstyle */ 
            );
            /**Returns  the selection post cross section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Section * SelectionPostCrossSection
            (
            );
            /**Returns  the linear dim post cross width 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostCrossWidth
            (
            );
            /**Returns  the linear dim post cross length 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostCrossLength
            (
            );
            /**Returns  the linear dim post cross tickness 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostCrossTickness
            (
            );
            /**Returns  the linear dim post cross dia 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPostCrossDia
            (
            );
            /**Returns  the enum rail cross style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder::RailCrossStyle EnumRailCrossStyle
            (
            );
            /**Sets  the enum rail cross style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetEnumRailCrossStyle
            (
                NXOpen::LineDesigner::RailingFeatureBuilder::RailCrossStyle enumRailCrossStyle /** enumrailcrossstyle */ 
            );
            /**Returns  the linear dim rail cross width 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimRailCrossWidth
            (
            );
            /**Returns  the linear dim rail cross length 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimRailCrossLength
            (
            );
            /**Returns  the linear dim rail cross dia 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimRailCrossDia
            (
            );
            /**Returns  the linear dim bottom elevation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimBottomElevation
            (
            );
            /**Returns  the enum spacing type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder::SpaceType EnumSpacingType
            (
            );
            /**Sets  the enum spacing type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetEnumSpacingType
            (
                NXOpen::LineDesigner::RailingFeatureBuilder::SpaceType enumSpacingType /** enumspacingtype */ 
            );
            /**Returns  the integer count 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: int IntegerCount
            (
            );
            /**Sets  the integer count 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetIntegerCount
            (
                int integerCount /** integercount */ 
            );
            /**Returns  the on path dim span by 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * OnPathDimSpanBy
            (
            );
            /**Returns  the linear dim pitch by 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimPitchBy
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
