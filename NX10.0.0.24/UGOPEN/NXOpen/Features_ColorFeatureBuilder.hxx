#ifndef NXOpen_FEATURES_COLORFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_COLORFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ColorFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ColorFeatureBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ColorFeatureBuilder;
    }
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    class NXColor;
    namespace Features
    {
        class _ColorFeatureBuilderBuilder;
        class ColorFeatureBuilderImpl;
        /**Represents a @link NXOpen::Features::ColorFeatureBuilder NXOpen::Features::ColorFeatureBuilder@endlink 
            Represents a color feature builder. The color feature does not
            create a feature, but assists user to assign color to selected features. <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateColorFeatureBuilder  NXOpen::Features::FeatureCollection::CreateColorFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        SpecifyColor </td> <td> 
         
        SpecifyColor </td> </tr> 

        <tr><td> 
         
        StoreColor </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ColorFeatureBuilder : public NXOpen::Builder
        {
            /** specify color or remove color type*/
            public: enum OperationType
            {
                OperationTypeSpecifyColor/** assign color to feature */,
                OperationTypeNoColor/** remove color from feature */
            };

            private: ColorFeatureBuilderImpl * m_colorfeaturebuilder_impl;
            private: friend class  _ColorFeatureBuilderBuilder;
            protected: ColorFeatureBuilder();
            public: ~ColorFeatureBuilder();
            /**Returns  the features to color
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * SelectFeature
            (
            );
            /**Returns  the color
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the save color property to feature
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool StoreColor
            (
            );
            /**Sets  the save color property to feature
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetStoreColor
            (
                bool hasStoreColor /** hasstorecolor */ 
            );
            /**Returns  the specified color option. If the option is @link NXOpen::Features::ColorFeatureBuilder::OperationTypeSpecifyColor NXOpen::Features::ColorFeatureBuilder::OperationTypeSpecifyColor@endlink ,
                      assign valid color to feature. If the returned value is @link NXOpen::Features::ColorFeatureBuilder::OperationTypeNoColor NXOpen::Features::ColorFeatureBuilder::OperationTypeNoColor@endlink , remove color from feature
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ColorFeatureBuilder::OperationType SpecifyColor
            (
            );
            /**Sets  the specified color option. If the option is @link NXOpen::Features::ColorFeatureBuilder::OperationTypeSpecifyColor NXOpen::Features::ColorFeatureBuilder::OperationTypeSpecifyColor@endlink ,
                      assign valid color to feature. If the returned value is @link NXOpen::Features::ColorFeatureBuilder::OperationTypeNoColor NXOpen::Features::ColorFeatureBuilder::OperationTypeNoColor@endlink , remove color from feature
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSpecifyColor
            (
                NXOpen::Features::ColorFeatureBuilder::OperationType specifyColor /** specifycolor */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
