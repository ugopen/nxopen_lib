#ifndef NXOpen_OFFSET_HXX_INCLUDED
#define NXOpen_OFFSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Offset.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SmartObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Offset;
    class SmartObject;
    class _OffsetBuilder;
    class OffsetImpl;
    /**
    Represents a @link NXOpen::Offset NXOpen::Offset@endlink . 
     <br> To create an instance of this class use @link NXOpen::OffsetCollection NXOpen::OffsetCollection@endlink   <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Offset : public NXOpen::SmartObject
    {
        /** Specifies the offset direction in relation to a face. */
        public: enum OnFaceOption
        {
            OnFaceOptionU/** Creates offset representing curvature in U parameter direction on face. */,
            OnFaceOptionV/** Creates offset representing curvature in V parameter direction on face. */,
            OnFaceOptionSection/** Creates offset representing curvature in a sectional direction on face. */
        };

        private: OffsetImpl * m_offset_impl;
        private: friend class  _OffsetBuilder;
        protected: Offset();
        public: ~Offset();
        /** Reverses the sense of a offset direction. The method returns true
                if the offset direction is reversed and false otherwise.  @return  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") OR cam_base ("CAM BASE") */
        public: bool ReverseDirection
        (
        );
        /**Returns  the vector of the offset. The vector has direction and magnitude
                indicating offset amount in its direction. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Vector3d Vector
        (
        );
        /**Sets  the vector of the offset. The vector has direction and magnitude
                indicating offset amount in its direction. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") OR cam_base ("CAM BASE") */
        public: void SetVector
        (
            const NXOpen::Vector3d & vector /** vector */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
