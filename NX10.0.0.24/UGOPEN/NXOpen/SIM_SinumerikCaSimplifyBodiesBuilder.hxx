#ifndef NXOpen_SIM_SINUMERIKCASIMPLIFYBODIESBUILDER_HXX_INCLUDED
#define NXOpen_SIM_SINUMERIKCASIMPLIFYBODIESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_SinumerikCaSimplifyBodiesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SIM_SinumerikCaSimplifyBodiesBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class SinumerikCaSimplifyBodiesBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Expression;
    class PlaneList;
    class SelectDisplayableObjectList;
    namespace SIM
    {
        class _SinumerikCaSimplifyBodiesBuilderBuilder;
        class SinumerikCaSimplifyBodiesBuilderImpl;
        /** This class is used for replace geometry.
                A call to @link SinumerikCaSimplifyBodiesBuilder::DoReplace SinumerikCaSimplifyBodiesBuilder::DoReplace@endlink  will replace the geometry.
                Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
             <br> Use the @link Part Part@endlink  class to create a SinumerikCaSimplifyBodiesBuilder object.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  SinumerikCaSimplifyBodiesBuilder : public NXOpen::Builder
        {
            /** The object to replaces with types */
            public: enum ObjectToReplaceWithTypes
            {
                ObjectToReplaceWithTypesNothing/** Nothing */,
                ObjectToReplaceWithTypesConvexHull/** Convex Hull */,
                ObjectToReplaceWithTypesBoundingSphere/** Bounding Sphere */,
                ObjectToReplaceWithTypesBoundingBlock/** Bounding Block */,
                ObjectToReplaceWithTypesBoundingCylinder/** Bounding Cylinder */,
                ObjectToReplaceWithTypesInscribedCylinder/** Inscribed Cylinder */
            };

            /** Represents the close gap types */
            public: enum CloseGapTypes
            {
                CloseGapTypesSharp/** Sharp */,
                CloseGapTypesBeveled/** Beveled */,
                CloseGapTypesNoOffset/** No Offset */
            };

            private: SinumerikCaSimplifyBodiesBuilderImpl * m_sinumerikcasimplifybodiesbuilder_impl;
            private: friend class  _SinumerikCaSimplifyBodiesBuilderBuilder;
            protected: SinumerikCaSimplifyBodiesBuilder();
            public: ~SinumerikCaSimplifyBodiesBuilder();
            /**Returns  the object to replace 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * ObjectToReplace
            (
            );
            /**Returns  the object to replace with 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::SinumerikCaSimplifyBodiesBuilder::ObjectToReplaceWithTypes ReplaceWith
            (
            );
            /**Sets  the object to replace with 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void SetReplaceWith
            (
                NXOpen::SIM::SinumerikCaSimplifyBodiesBuilder::ObjectToReplaceWithTypes objectToReplaceWith /** objecttoreplacewith */ 
            );
            /**Returns  the coordinate system 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * CoordSystem
            (
            );
            /**Sets  the coordinate system 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void SetCoordSystem
            (
                NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
            );
            /** Replace the simplify bodies 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void DoReplace
            (
            );
            /**Returns  the Planes to split the geometry, tightens the wrap along this plane 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PlaneList * PlanesList
            (
            );
            /**Returns   the Remove parms switch 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets   the Remove parms switch 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the  Method used to close the gaps after offset of the wrap 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::SinumerikCaSimplifyBodiesBuilder::CloseGapTypes CloseGaps
            (
            );
            /**Sets  the  Method used to close the gaps after offset of the wrap 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void SetCloseGaps
            (
                NXOpen::SIM::SinumerikCaSimplifyBodiesBuilder::CloseGapTypes closeGaps /** closegaps */ 
            );
            /**Returns  the  Additional offset. Will expand the wrap. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AddOffset
            (
            );
            /**Returns  the Offset applied to both sides of the splitting planes. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SplitOffset
            (
            );
            /**Returns  the Distance tolerance used to facet the solids. Also used for default offset calculation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the Distance tolerance used to facet the solids. Also used for default offset calculation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_isv_mtb ("Machine Tool Builder") OR nx_sinumerik_ca ("Sinumerik Collision Avoidance") */
            public: void SetDistanceTolerance
            (
                double distTol /** disttol */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
