#ifndef NXOpen_TOOLING_BOMLISTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_BOMLISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_BomListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_BomListBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class BomListBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace Tooling
    {
        class _BomListBuilderBuilder;
        class BomListBuilderImpl;
        /** 
            Represents a @link NXOpen::Tooling::BomListBuilder NXOpen::Tooling::BomListBuilder@endlink  builder.
             <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateBomListBuilder  NXOpen::Tooling::MoldwizardManager::CreateBomListBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BomListType </td> <td> 
         
        BomList </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  BomListBuilder : public NXOpen::Builder
        {
            /** Represents an index to components list type. */
            public: enum BomListTypes
            {
                BomListTypesBomList/** A list includes components in BOM */,
                BomListTypesHideList/** A list includes hidden components */
            };

            private: BomListBuilderImpl * m_bomlistbuilder_impl;
            private: friend class  _BomListBuilderBuilder;
            protected: BomListBuilder();
            public: ~BomListBuilder();
            /**Returns  the template file of bom
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BomTemplate
            (
            );
            /**Sets  the template file of bom
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBomTemplate
            (
                const NXString & bomTemplate /** bomtemplate */ 
            );
            /**Sets  the template file of bom
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void SetBomTemplate
            (
                const char * bomTemplate /** bomtemplate */ 
            );
            /**Returns  the select component needed to get stocksize
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * SelectComponents
            (
            );
            /**Returns  the tree list shows which kind of components should be included in 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::BomListBuilder::BomListTypes BomListType
            (
            );
            /**Sets  the tree list shows which kind of components should be included in 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBomListType
            (
                NXOpen::Tooling::BomListBuilder::BomListTypes bomListType /** bomlisttype */ 
            );
            /** Populates BOM list data according to current template
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void PopulateBomListData
            (
            );
            /** Gets all the row numbers in the given List @return  All row numbers in the given list 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<int> GetRows
            (
                NXOpen::Tooling::BomListBuilder::BomListTypes bomListType /** bomlisttype */ 
            );
            /** Gets all the attributes listed in the current template @return  Attribute strings. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetAttributeStrings
            (
            );
            /** Gets column number of given attribute
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void GetColumn
            (
                const NXString & attrString /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets column number of given attribute
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void GetColumn
            (
                const char * attrString /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets part occs of given row @return  The part occs of given row
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Assemblies::Component *> GetPartOccs
            (
                int rowNumber /** rownumber */ 
            );
            /** Shows components of given row in the BOM list so that the row can be exported to excel. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void ShowComponents
            (
                int rowNumber /** rownumber */ ,
                const std::vector<NXOpen::Assemblies::Component *> & partOccs /** partoccs */ 
            );
            /** Ignores components of given row in the Hide List so that the row can not be exported to excel.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void IgnoreComponents
            (
                int rowNumber /** rownumber */ ,
                const std::vector<NXOpen::Assemblies::Component *> & partOccs /** partoccs */ 
            );
            /** Modifies BOM data
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void ModifyBomData
            (
                int rowNumber /** rownumber */ ,
                int columnNumber /** columnnumber */ ,
                const NXString & userString /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Modifies BOM data
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void ModifyBomData
            (
                int rowNumber /** rownumber */ ,
                int columnNumber /** columnnumber */ ,
                const char * userString /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
