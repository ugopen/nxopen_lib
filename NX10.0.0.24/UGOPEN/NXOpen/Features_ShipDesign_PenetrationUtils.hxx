#ifndef NXOpen_FEATURES_SHIPDESIGN_PENETRATIONUTILS_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PENETRATIONUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PenetrationUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationAttachment.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationFolder.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationList.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationRequest.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationSite.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationUtils;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationManager;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationAttachment;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationFolder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationList;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationRequest;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationSite;
        }
    }
    class NXObject;
    class Part;
    class View;
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationUtilsImpl;
            /** Contains various penetration utility methods  <br> To obtain an instance of this class, refer to @link NXOpen::Features::ShipDesign::PenetrationManager  NXOpen::Features::ShipDesign::PenetrationManager @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PenetrationUtils
            {
                /** Represents the reference type */
                public: enum Referencetype
                {
                    ReferencetypePenetrated/** penetrated */ ,
                    ReferencetypePenetrating/** penetrating */ ,
                    ReferencetypeReference/** reference */ ,
                    ReferencetypeSubset/** subset */ ,
                    ReferencetypeImplemented/** implemented */ 
                };

                /** Representes the request state */
                public: enum RequestState
                {
                    RequestStateNew/** new */ ,
                    RequestStateModified/** modified */ ,
                    RequestStateNoChange/** no change */ ,
                    RequestStateDeleted/** deleted */ 
                };

                private: PenetrationUtilsImpl * m_penetrationutils_impl;
                private: NXOpen::Features::ShipDesign::PenetrationManager* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit PenetrationUtils(NXOpen::Features::ShipDesign::PenetrationManager *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~PenetrationUtils();
                /** Creates a @link NXOpen::Features::ShipDesign::PenetrationSite NXOpen::Features::ShipDesign::PenetrationSite@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationSite * CreatePenetrationSite
                (
                    NXOpen::Part * part /** part */ 
                );
                /** Creates a @link NXOpen::Features::ShipDesign::PenetrationList NXOpen::Features::ShipDesign::PenetrationList@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationList * CreatePenetrationList
                (
                    NXOpen::Features::ShipDesign::PenetrationSite * site /** site */ 
                );
                /** Creates a @link NXOpen::Features::ShipDesign::PenetrationFolder NXOpen::Features::ShipDesign::PenetrationFolder@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationFolder * CreatePenetrationFolder
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * parent /** parent */ 
                );
                /** Creates a @link NXOpen::Features::ShipDesign::PenetrationAttachment NXOpen::Features::ShipDesign::PenetrationAttachment@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationAttachment * CreatePenetrationAttachment
                (
                    NXOpen::Features::ShipDesign::PenetrationSite * site /** site */ 
                );
                /** Ask current @link NXOpen::Features::ShipDesign::PenetrationSite NXOpen::Features::ShipDesign::PenetrationSite@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationSite * AskCurrentSite
                (
                );
                /** Set current @link NXOpen::Features::ShipDesign::PenetrationSite NXOpen::Features::ShipDesign::PenetrationSite@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetCurrentSite
                (
                    NXOpen::Features::ShipDesign::PenetrationSite * site /** site */ 
                );
                /** Ask current @link NXOpen::Features::ShipDesign::PenetrationList NXOpen::Features::ShipDesign::PenetrationList@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationList * AskWorkingList
                (
                );
                /** Set current @link NXOpen::Features::ShipDesign::PenetrationList NXOpen::Features::ShipDesign::PenetrationList@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetWorkingList
                (
                    NXOpen::Features::ShipDesign::PenetrationSite * site /** site */ ,
                    NXOpen::Features::ShipDesign::PenetrationList * list /** list */ 
                );
                /** Ask current @link NXOpen::Features::ShipDesign::PenetrationList NXOpen::Features::ShipDesign::PenetrationList@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AskRequestLists
                (
                    std::vector<NXOpen::Features::ShipDesign::PenetrationList *> & list /** list */ 
                );
                /** Set current @link NXOpen::Features::ShipDesign::PenetrationList NXOpen::Features::ShipDesign::PenetrationList@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void ReloadRequests
                (
                    NXOpen::Features::ShipDesign::PenetrationList * list /** list */ 
                );
                /** Get the reference folder @link NXOpen::Features::ShipDesign::PenetrationFolder NXOpen::Features::ShipDesign::PenetrationFolder@endlink   @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: NXOpen::Features::ShipDesign::PenetrationFolder * AskReferenceFolder
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest * request /** request */ ,
                    NXOpen::Features::ShipDesign::PenetrationUtils::Referencetype refType /** ref type */ 
                );
                /** Get the attachments in folder 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AskAttachments
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * folder /** folder */ ,
                    const NXString & relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationAttachment *> & attachments /** attachments */ 
                );
                /** Get the attachments in folder 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void AskAttachments
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * folder /** folder */ ,
                    const char * relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationAttachment *> & attachments /** attachments */ 
                );
                /** Insert an attachment into folder 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void InsertAttachment
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * folder /** folder */ ,
                    NXOpen::Part * part /** part */ ,
                    const NXString & name /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Insert an attachment into folder 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void InsertAttachment
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * folder /** folder */ ,
                    NXOpen::Part * part /** part */ ,
                    const char * name /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Remove an attachment from folder 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void RemoveAttachment
                (
                    NXOpen::Features::ShipDesign::PenetrationFolder * folder /** folder */ ,
                    NXOpen::Features::ShipDesign::PenetrationAttachment * attachments /** attachments */ 
                );
                /** Ask the associate requests 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AssociateRequests
                (
                    const std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Ask the associate requests 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AskAssociateRequests
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest * request /** request */ ,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Verify penetrations 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void VerifyPenetrations
                (
                    const std::vector<NXOpen::Part *> & routingPart /** routing part */ ,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationUtils::RequestState> & states /** states */ ,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ ,
                    std::vector<int> & reason /** reason */ 
                );
                /** Ask requests of penetrated parts 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AskRequestsOfPenetratedPart
                (
                    NXOpen::Part * part /** part */ ,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Ask requests of penetratint parts 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AskRequestsOfPenetratingPart
                (
                    NXOpen::Part * part /** part */ ,
                    std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Make part root part and work part 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetRootPart
                (
                    NXOpen::Part * part /** part */ 
                );
                /** Get attachment part from request 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void GetAttachmentPartsFromRequest
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest * request /** request */ ,
                    const NXString & relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool loadParts /** load parts */ ,
                    std::vector<NXOpen::Part *> & pParts /** pparts */ 
                );
                /** Get attachment part from request 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void GetAttachmentPartsFromRequest
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest * request /** request */ ,
                    const char * relation /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool loadParts /** load parts */ ,
                    std::vector<NXOpen::Part *> & pParts /** pparts */ 
                );
                /** Save the requests 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SaveRequests
                (
                    int eSaveRequestType /** esaverequesttype */ ,
                    const std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Send to Workflow the requests 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SendToWorkflowRequests
                (
                    const std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ 
                );
                /** Review the requests 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void ReviewRequests
                (
                    const std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ ,
                    const NXString & pchReviewDecision /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & pchReviewComments /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & pchDueDate /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Review the requests 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void ReviewRequests
                (
                    const std::vector<NXOpen::Features::ShipDesign::PenetrationRequest *> & requests /** requests */ ,
                    const char * pchReviewDecision /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * pchReviewComments /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * pchDueDate /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Create cut out for the request 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void RequestCreateCutout
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest * request /** request */ 
                );
                /**Set the CONTEXT values
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetContextValues
                (
                    NXOpen::Part * rootPart /** rootpart */ ,
                    NXOpen::Part * workPart /** workpart */ ,
                    NXOpen::View * workView /** workview */ ,
                    NXOpen::NXObject * workOcc /** workocc */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
