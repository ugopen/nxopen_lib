#ifndef NXOpen_FEATURES_SHIPDESIGN_QUALIFYSKETCHBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_QUALIFYSKETCHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_QualifySketchBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_AnchorPoint.hxx>
#include <NXOpen/Features_ShipDesign_QualifySketchBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class QualifySketchBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class AnchorPoint;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class AnchorPointList;
        }
    }
    class SelectCurve;
    class TaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _QualifySketchBuilderBuilder;
            class QualifySketchBuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::QualifySketchBuilder NXOpen::Features::ShipDesign::QualifySketchBuilder@endlink  builder.
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateQualifySketchBuilder  NXOpen::Features::ShipCollection::CreateQualifySketchBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  QualifySketchBuilder : public NXOpen::Builder
            {
                private: QualifySketchBuilderImpl * m_qualifysketchbuilder_impl;
                private: friend class  _QualifySketchBuilderBuilder;
                protected: QualifySketchBuilder();
                public: ~QualifySketchBuilder();
                /**Returns  the ship no. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ShipNo
                (
                );
                /**Sets  the ship no. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetShipNo
                (
                    int shipNo /** shipno */ 
                );
                /**Returns  the steel feture type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int Feature
                (
                );
                /**Sets  the steel feture type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetFeature
                (
                    int feature /** feature */ 
                );
                /**Returns  the context attribute. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContextAttribute
                (
                );
                /**Sets  the context attribute. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetContextAttribute
                (
                    int contextAttribute /** contextattribute */ 
                );
                /**Returns  the section type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int SectionType
                (
                );
                /**Sets  the section type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetSectionType
                (
                    int sectionType /** sectiontype */ 
                );
                /**Returns  the model file path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ModelPath
                (
                );
                /**Sets  the model file path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetModelPath
                (
                    const NXString & modelPath /** modelpath */ 
                );
                /**Sets  the model file path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetModelPath
                (
                    const char * modelPath /** modelpath */ 
                );
                /**Returns  the model file name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ModelFile
                (
                );
                /**Sets  the model file name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetModelFile
                (
                    const NXString & modelFile /** modelfile */ 
                );
                /**Sets  the model file name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetModelFile
                (
                    const char * modelFile /** modelfile */ 
                );
                /**Returns  the parameter spreadsheet path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString SpreadSheetPath
                (
                );
                /**Sets  the parameter spreadsheet path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetSpreadSheetPath
                (
                    const NXString & spreadSheetPath /** spreadsheetpath */ 
                );
                /**Sets  the parameter spreadsheet path. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetSpreadSheetPath
                (
                    const char * spreadSheetPath /** spreadsheetpath */ 
                );
                /**Returns  the parameter spreadsheet file. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString SpreadSheetFile
                (
                );
                /**Sets  the parameter spreadsheet file. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetSpreadSheetFile
                (
                    const NXString & spreadSheetFile /** spreadsheetfile */ 
                );
                /**Sets  the parameter spreadsheet file. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetSpreadSheetFile
                (
                    const char * spreadSheetFile /** spreadsheetfile */ 
                );
                /** Opens registration spreadsheet to edit. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void OpenRegistrationSpreadSheetToEdit
                (
                );
                /** Reloads registration spreadsheet. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ReloadRegisterSpreadSheet
                (
                );
                /** Opens the template part file. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void OpenPartFile
                (
                );
                /**Returns  the selected top line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * TopLine
                (
                );
                /**Returns  the selected mold line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * MoldLine
                (
                );
                /**Returns  the selected base line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * BaseLine
                (
                );
                /**Returns  the selected opposing mold line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * OpposingMoldLine
                (
                );
                /**Returns  the selected taper line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * TaperLine
                (
                );
                /**Returns  the selected shear line. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectCurve * ShearLine
                (
                );
                /** Validates Curves. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ValidateCurves
                (
                );
                /**Returns  the model list. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::AnchorPointList * ModelList
                (
                );
                /** Validates the sketch curves. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ValidateSketchCurves
                (
                );
                /** Validates the part attributes. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ValidatePartAttributes
                (
                );
                /** Opens parameter spreadsheet to edit. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void OpenParameterSpreadSheetToEdit
                (
                );
                /** Reloads parameter spreadsheet. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ReloadParameterSpreadSheet
                (
                );
                /** Validates parameter spreadsheet. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ValidateParameterSpreadSheet
                (
                );
                /** Reloads expression table. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ReloadTable
                (
                );
                /**Returns  the active row index. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ActiveRowIndex
                (
                );
                /**Sets  the active row index. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetActiveRowIndex
                (
                    int activeRowIndex /** activerowindex */ 
                );
                /** Updates sketch. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void UpdateSketch
                (
                );
                /** Previews left image. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void PreviewLeftImage
                (
                );
                /** Previews right image. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void PreviewRightImage
                (
                );
                /** Creates the anchor point.  @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Features::ShipDesign::AnchorPoint * CreateNewAnchorPoint
                (
                );
                /** Assigns attributes to the anchor point. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void AssignAttribute
                (
                    NXOpen::TaggedObject * entity /** entity */ ,
                    const NXString & category /** category */ ,
                    const NXString & title /** title */ ,
                    const NXString & value /** value */ ,
                    int attrType /** attr type */ ,
                    const NXString & objName /** objname */ 
                );
                /** Assigns attributes to the anchor point. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void AssignAttribute
                (
                    NXOpen::TaggedObject * entity /** entity */ ,
                    const char * category /** category */ ,
                    const char * title /** title */ ,
                    const char * value /** value */ ,
                    int attrType /** attr type */ ,
                    const char * objName /** objname */ 
                );
                /** Removes attributes from the entity. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void RemoveAttribute
                (
                    NXOpen::TaggedObject * entity /** entity */ ,
                    const NXString & category /** category */ ,
                    const NXString & title /** title */ ,
                    int attrType /** attr type */ 
                );
                /** Removes attributes from the entity. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void RemoveAttribute
                (
                    NXOpen::TaggedObject * entity /** entity */ ,
                    const char * category /** category */ ,
                    const char * title /** title */ ,
                    int attrType /** attr type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
