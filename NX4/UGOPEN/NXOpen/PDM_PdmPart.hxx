#ifndef NXOpen_PDM_PDMPART_HXX_INCLUDED
#define NXOpen_PDM_PDMPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PdmPart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/PDM_AlternateIdManager.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace PDM
    {
        class PdmPart;
    }
    class BasePart;
    namespace PDM
    {
        class AlternateIdManager;
    }
    namespace PDM
    {
        /** This class serves as a gateway to part-specific tools for NX Manager mode.
             <br> To obtain an instance of this class, refer to @link BasePart BasePart@endlink  <br> */
        class NXOPENCPPEXPORT PdmPart
        {
            private: NXOpen::BasePart* m_owner;
            public: explicit PdmPart(NXOpen::BasePart *owner): m_owner(owner)
            {
            }
            public: tag_t Tag() const;
            /** Create an instance of a @link PDM::AlternateIdManager PDM::AlternateIdManager@endlink 
                    class that will be used to create alternate ID information on the part.  @return  the new @link PDM::AlternateIdManager PDM::AlternateIdManager@endlink  instance  <br> License requirements : None */
            public: NXOpen::PDM::AlternateIdManager * NewAlternateIdManager
            (
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
