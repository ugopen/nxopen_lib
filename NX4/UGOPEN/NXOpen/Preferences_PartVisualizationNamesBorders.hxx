#ifndef NXOpen_PREFERENCES_PARTVISUALIZATIONNAMESBORDERS_HXX_INCLUDED
#define NXOpen_PREFERENCES_PARTVISUALIZATIONNAMESBORDERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_PartVisualizationNamesBorders.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class PartVisualizationNamesBorders;
    }
    namespace Preferences
    {
        class PartPreferences;
    }
    namespace Preferences
    {
        /** Represents the set of visualization preferences of entire Working Part coming under Names/borders Tab <br> To obtain an instance of this class, refer to @link PartPreferences PartPreferences@endlink  <br> */
        class NXOPENCPPEXPORT PartVisualizationNamesBorders
        {
            /** Describes the available options for object name display selection */
            public: enum NameDisplay
            {
                NameDisplayOff/** Display is Off */,
                NameDisplayViewOfDefinition/** View of Definition places 
                                                                                              each name in the work view 
                                                                                              current at the time of name 
                                                                                              creation */,
                NameDisplayWorkView/** Work View places all names 
                                                                                              in the current work view, even 
                                                                                              if the existing names had been 
                                                                                              defined in different views */
            };

            private: NXOpen::Preferences::PartPreferences* m_owner;
            public: explicit PartVisualizationNamesBorders(NXOpen::Preferences::PartPreferences *owner): m_owner(owner)
            {
            }
            public: tag_t Tag() const;
            /**Returns   the show model view names flag. Allows to turn on and off the display of view names.   <br> License requirements : None */
            public: bool ShowModelViewNames
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link ShowModelViewNames() ShowModelViewNames@endlink instead.
            @deprecated
            */
            public: bool GetShowModelViewNames
            (
            ) { return this->ShowModelViewNames(); }
            /**Sets   the show model view names flag. Allows to turn on and off the display of view names.   <br> License requirements : None */
            public: void SetShowModelViewNames
            (
                bool show_model_view_names /**  */
            );
            /**Returns  the show model view border flag. allows to turn on and off the display of view borders.  <br> License requirements : None */
            public: bool ShowModelViewBorders
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link ShowModelViewBorders() ShowModelViewBorders@endlink instead.
            @deprecated
            */
            public: bool GetShowModelViewBorders
            (
            ) { return this->ShowModelViewBorders(); }
            /**Sets  the show model view border flag. allows to turn on and off the display of view borders.  <br> License requirements : None */
            public: void SetShowModelViewBorders
            (
                bool show_model_view_borders /**  */
            );
            /**Returns  the object name display  <br> License requirements : None */
            public: NXOpen::Preferences::PartVisualizationNamesBorders::NameDisplay ObjectNameDisplay
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link ObjectNameDisplay() ObjectNameDisplay@endlink instead.
            @deprecated
            */
            public: NXOpen::Preferences::PartVisualizationNamesBorders::NameDisplay GetObjectNameDisplay
            (
            ) { return this->ObjectNameDisplay(); }
            /**Sets  the object name display  <br> License requirements : None */
            public: void SetObjectNameDisplay
            (
                NXOpen::Preferences::PartVisualizationNamesBorders::NameDisplay object_name_display /**  */
            );
            /**Returns  the character size. Allows to define the size of the text in the object names  <br> License requirements : None */
            public: double CharacterSize
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link CharacterSize() CharacterSize@endlink instead.
            @deprecated
            */
            public: double GetCharacterSize
            (
            ) { return this->CharacterSize(); }
            /**Sets  the character size. Allows to define the size of the text in the object names  <br> License requirements : None */
            public: void SetCharacterSize
            (
                double character_size /**  */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
