#ifndef NXOpen_FEATURES_EMBOSSLIMIT_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSLIMIT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossLimit.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_EmbossLimit.hxx>
#include <NXOpen/Features_EmbossTarget.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EmbossLimit;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class EmbossTarget;
    }
    namespace Features
    {
        class _EmbossLimitBuilder;
        /** Emboss limit represents emboss start and end objects, meaning, targets and endcap definitions.
                    --Endcap option
                        endcap_method_option_translation          = 0,   Translation          
                        endcap_method_option_offset_exact         = 1,   Offset exact         
                        endcap_method_option_offset_approximation = 2,   Offset approximation 
                        endcap_method_option_none                 = 3    None                 
                        
                    --Endcap source option
                        endcap_source_option_target  = 0,      Target  
                        endcap_source_option_plane   = 1,      Plane   
                        endcap_source_option_section = 2,      Section     
                        endcap_source_option_face    = 3,      Face
                        
                    --Emboss targets (array)  -> EmbossTarget
                        --Target faces
                              NX standard Face ScCollector
                        --Endcap faces
                              NX standard Face ScCollector
                        --Endcap Plane
                              NX standard ISurface
                        --Endcap offset direction flip
                              NX standard ISurface
                        --taget offset distance
                              NX standard Expression
                    
                    --Endcap direction
                        NX standard vector
                    
                    --distance (translate or offset)
                        NX standard expression
                    
            
            */
        class NXOPENCPPEXPORT EmbossLimit : public TaggedObject
        {
            /** This enum represents the endcap option of limit */
            public: enum EndcapMethod
            {
                EndcapMethodTranslation/** Translation          */,
                EndcapMethodOffsetExact/** Offset exact         */,
                EndcapMethodOffsetApproximation/** Offset approximation */,
                EndcapMethodNone/** None                 */
            };

            /** This enum represents the endcap source option of limit*/
            public: enum EndcapSourceOption
            {
                EndcapSourceOptionTarget/** Target  */,
                EndcapSourceOptionPlane/** Plane   */,
                EndcapSourceOptionSection/** Section */,
                EndcapSourceOptionFace/** Face    */
            };

            private: friend class  _EmbossLimitBuilder;
            protected: EmbossLimit();
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapOption
            (
                NXOpen::Features::EmbossLimit::EndcapMethod endcap_option /**Emboss endcap option */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Features::EmbossLimit::EndcapMethod EndcapOption
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapSource
            (
                NXOpen::Features::EmbossLimit::EndcapSourceOption endcap_source_option /**Emboss endcap source option */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Features::EmbossLimit::EndcapSourceOption EndcapSource
            (
            );
            /** Set the emboss targets <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargets
            (
                const std::vector<NXOpen::Features::EmbossTarget *> & targets /**Emboss target */
            );
            /** Get the emboss targets @return Emboss target <br> License requirements : None */
            public: std::vector<NXOpen::Features::EmbossTarget *> GetTargets
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /**Emboss endcap projection direction */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /** Set limit offset or translate distance <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistance
            (
                const NXString & distance /**Emboss limit distance value or expression formula string for offset or translation   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
