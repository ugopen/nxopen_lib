#ifndef NXOpen_ROUTING_BENDCORNER_HXX_INCLUDED
#define NXOpen_ROUTING_BENDCORNER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_BendCorner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Routing_Corner.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class BendCorner;
    }
    namespace Routing
    {
        class Corner;
    }
    namespace Routing
    {
        class SplineSegment;
    }
    namespace Routing
    {
        class Stock;
    }
    namespace Routing
    {
        class _BendCornerBuilder;
        /** 
                The Routing BendCorner define a position at the end of two routing segments. 
                The radius of a bend corner is determined by the setting of the Method may be
                set to Ratio to Diameter, Radius, or Bend Radius Table.
             */
        class NXOPENCPPEXPORT BendCorner : public Routing::Corner
        {
            private: friend class  _BendCornerBuilder;
            protected: BendCorner();
            /**Returns  the segment being used to represent the bend.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::Routing::SplineSegment * Segment
            (
            );
            /**Sets  the segment being used to represent the bend.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetSegment
            (
                NXOpen::Routing::SplineSegment * segment /** the segment of the bend corner. */
            );
            /**Returns  the use_bend_ratio of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: bool UseBendRatio
            (
            );
            /**Sets  the use_bend_ratio of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetUseBendRatio
            (
                bool use_bend_ratio /** the use bend ratio. */
            );
            /**Returns  the bend_ratio of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: double BendRatio
            (
            );
            /**Sets  the bend_ratio of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetBendRatio
            (
                double bend_ratio /** the bend ratio. */
            );
            /**Returns  the bend radius of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: double BendRadius
            (
            );
            /**Sets  the bend radius of a bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetBendRadius
            (
                double bend_radius /** the the bend radius. */
            );
            /** Returns the number of stocks and a array 
                        of tags of the stock of the given bend object  @return  Stock objects of the bend corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: std::vector<NXOpen::Routing::Stock *> GetBendStocks
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
