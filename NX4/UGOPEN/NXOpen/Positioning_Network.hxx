#ifndef NXOpen_POSITIONING_NETWORK_HXX_INCLUDED
#define NXOpen_POSITIONING_NETWORK_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Positioning_Network.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Positioning
    {
        class Network;
    }
    namespace Assemblies
    {
        class Component;
    }
    class NXObject;
    namespace Positioning
    {
        class Constraint;
    }
    namespace Positioning
    {
        class _NetworkBuilder;
        /**
            Network for use in positioning objects in NX.
            A network consists of explicitly added constraints and movable objects
            together with others implicitly added because they are connected by 
            to those in the network.
         <br> Constraint networks are not exposed in Knowledge Fusion <br> */
        class NXOPENCPPEXPORT Network : public NXObject
        {
            /** Specifies the solver status of a movable object. */
            public: enum ObjectStatus
            {
                ObjectStatusUnknown/** Not yet evaluated. */,
                ObjectStatusFixed/** Attempt to put constraint between two fixed objects. */,
                ObjectStatusOverDefined/** Conflicts with other constraints. */,
                ObjectStatusNotConsistentDims/** Cannot solve with current dimension values. Model fully defined. */,
                ObjectStatusNotConsistentOther/** Cannot find a solution. Model underdefined.*/,
                ObjectStatusNotConsistentUnknown/** One movable object fixed. */,
                ObjectStatusNotChanged/** Not evaluated because other parts of the model are over defined or inconsistent. */,
                ObjectStatusWellDefined/** The constraint is solved and satisfied */,
                ObjectStatusUnderDefined/** The constraint is solved and satisfied */
            };

            private: friend class  _NetworkBuilder;
            protected: Network();
            /** 
                    Add a @link Constraint Constraint@endlink  to the network.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void AddConstraint
            (
                NXOpen::Positioning::Constraint * constraint /** The @link Constraint Constraint@endlink  to be added */
            );
            /** 
                    Add a movable object to the network.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void AddMovableObject
            (
                NXOpen::NXObject * movable_object /** An @link NXObject NXObject@endlink  to be moved */
            );
            /** 
                    Solves the constraint network and applies the results to the
                    affected movable objects in the model.  Does not do an update.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ApplyToModel
            (
            );
            /** 
                    Solves the constraint network.
                    Does not apply the results to the model and does not 
                    do an update.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Solve
            (
            );
            /**Sets  
                    the move objects state for the network.
                    When set the display positions of objects are immediately updated
                    upon constraint creation or edit.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetMoveObjectsState
            (
                bool move_objects_state /** */
            );
            /**Returns  
                    the move objects state for the network.
                    When set the display positions of objects are immediately updated
                    upon constraint creation or edit.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: bool MoveObjectsState
            (
            );
            /** 
                    Returns the display objects to their model positions.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ResetDisplay
            (
            );
            /** 
                    Returns the solver status of a movable object.
                 @return  The solver status of the movable object  <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Positioning::Network::ObjectStatus GetMovableObjectStatus
            (
                NXOpen::NXObject * movable_object /** An @link NXObject NXObject@endlink  positioned by the network */
            );
            /**Returns  
                    the @link Assemblies::Component Assemblies::Component@endlink  in which the display is changed
                    by solving the network. The display component can be NULL if display
                    changes are made in the part of the network.
                    The prototype of the display component should be the part containing the
                    network.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::Component * DisplayComponent
            (
            );
            /**Sets  
                    the @link Assemblies::Component Assemblies::Component@endlink  in which the display is changed
                    by solving the network. The display component can be NULL if display
                    changes are made in the part of the network.
                    The prototype of the display component should be the part containing the
                    network.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetDisplayComponent
            (
                NXOpen::Assemblies::Component * display_component /** The component in which the constraints are displayed. Can be NULL. */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
