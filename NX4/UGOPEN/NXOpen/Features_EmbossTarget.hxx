#ifndef NXOpen_FEATURES_EMBOSSTARGET_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_EmbossTarget.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EmbossTarget;
    }
    class Expression;
    class ISurface;
    class ScCollector;
    namespace Features
    {
        class _EmbossTargetBuilder;
        /** Represents the target of an emboss feature 
            --Target faces
                NX standard Face ScCollector
            --Endcap faces
                NX standard Face ScCollector
            --Endcap Plane
                NX standard ISurface
            --Endcap offset direction flip
                NX standard ISurface
            --taget offset distance
                NX standard Expression
                
            */
        class NXOPENCPPEXPORT EmbossTarget : public TaggedObject
        {
            private: friend class  _EmbossTargetBuilder;
            protected: EmbossTarget();
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargetFace
            (
                NXOpen::ScCollector * target_face_collector /**Emboss target face */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::ScCollector * TargetFace
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapFace
            (
                NXOpen::ScCollector * endcap_face_collector /**Emboss endcap face */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::ScCollector * EndcapFace
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapPlane
            (
                NXOpen::ISurface * endcap_plane /**Emboss endcap plane */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::ISurface * EndcapPlane
            (
            );
            /** Set tagert offset/translate distance  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistance
            (
                const NXString & distance /**Emboss target distance value or expression formula string  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFlipDirection
            (
                bool dir_flip /**Emboss direction flip */
            );
            /**Returns   <br> License requirements : None */
            public: bool FlipDirection
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
