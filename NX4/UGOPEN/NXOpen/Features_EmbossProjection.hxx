#ifndef NXOpen_FEATURES_EMBOSSPROJECTION_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSPROJECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossProjection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_EmbossProjection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EmbossProjection;
    }
    class ISurface;
    class ScCollector;
    namespace Features
    {
        class _EmbossProjectionBuilder;
        /** Emboss projection represents how to project and to help build sidewall geometry
                    --Projection Option
                                projection_option_endcap = 0,   Endcap 
        	                projection_option_target = 1,   Target 
        	                projection_option_face   = 2,   Face   
        	                projection_option_plane  = 3,   Plane  
        	                projection_option_none   = 4    None   
                    --Projection Face
                        NX standard face collector
                        
                    --Projection Datum Plane	                            
                        NX standard datum plane
                        
            */
        class NXOPENCPPEXPORT EmbossProjection : public TaggedObject
        {
            /** This enum represents the options of comp projection */
            public: enum ProjectionOption
            {
                ProjectionOptionEndcap/** Endcap */,
                ProjectionOptionTarget/** Target */,
                ProjectionOptionFace/** Face   */,
                ProjectionOptionPlane/** Plane  */,
                ProjectionOptionNone/** None   */
            };

            private: friend class  _EmbossProjectionBuilder;
            protected: EmbossProjection();
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOption
            (
                NXOpen::Features::EmbossProjection::ProjectionOption option /**Projection option */
            );
            /**Returns   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::EmbossProjection::ProjectionOption Option
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFace
            (
                NXOpen::ScCollector * projection_face /**Projection face */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::ScCollector * Face
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPlane
            (
                NXOpen::ISurface * projection_plane /**Projection plane */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::ISurface * Plane
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
