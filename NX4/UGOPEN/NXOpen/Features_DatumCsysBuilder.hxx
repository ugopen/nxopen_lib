#ifndef NXOpen_FEATURES_DATUMCSYSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DATUMCSYSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DatumCsysBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DatumCsysBuilder;
    }
    class CartesianCoordinateSystem;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _DatumCsysBuilderBuilder;
        /** Represents a datum csys builder  <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDatumCsysBuilder Features::FeatureCollection::CreateDatumCsysBuilder@endlink  <br> */
        class NXOPENCPPEXPORT DatumCsysBuilder : public Features::FeatureBuilder
        {
            private: friend class  _DatumCsysBuilderBuilder;
            protected: DatumCsysBuilder();
            /**Sets  Retrieve the CSYS that defines a Datum CSYS  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCsys
            (
                NXOpen::CartesianCoordinateSystem * csys /** exisiting WCS */
            );
            /**Returns  Retrieve the CSYS that defines a Datum CSYS  <br> License requirements : None */
            public: NXOpen::CartesianCoordinateSystem * Csys
            (
            );
            /**Sets  Retrieve the scale factor of the input Datum Csys  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDisplayScaleFactor
            (
                double display_scale_factor /** display scale factor */
            );
            /**Returns  Retrieve the scale factor of the input Datum Csys  <br> License requirements : None */
            public: double DisplayScaleFactor
            (
            );
            /**Sets  Retrieve the flag of the Datum Csys components creation  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetComponentsCreation
            (
                bool components_creation /** TRUE at creation and FALSE at edit */
            );
            /**Returns  Retrieve the flag of the Datum Csys components creation  <br> License requirements : None */
            public: bool ComponentsCreation
            (
            );
            /**Sets  Retrieve the fixed size flag of a created Datum Csys  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFixedSizeDatum
            (
                bool fixed_size_datum /** always TRUE at both of creation and edit */
            );
            /**Returns  Retrieve the fixed size flag of a created Datum Csys  <br> License requirements : None */
            public: bool FixedSizeDatum
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
