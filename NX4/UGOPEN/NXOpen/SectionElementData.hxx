#ifndef NXOpen_SECTIONELEMENTDATA_HXX_INCLUDED
#define NXOpen_SECTIONELEMENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SectionElementData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SectionElementData;
    class ICurve;
    /** Represents section element data */
    class NXOPENCPPEXPORT SectionElementData : public TransientObject
    {
        public: explicit SectionElementData(void *ptr);
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: virtual ~SectionElementData();
        /** Gets the element that constructs the section  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void GetSectionElementData
        (
            NXOpen::ICurve ** section_element /** The element that constructs the section */,
            NXOpen::ICurve ** start_connector /** The element that is connected to the 
                                       section_element, at the start_point */,
            NXOpen::Point3d* start_point /** Start point*/,
            NXOpen::ICurve ** end_connector /** The element that is connected to the 
                                                                       section_element, at the end_point*/,
            NXOpen::Point3d* end_point /** End Point*/
        );
    };
}
#undef EXPORTLIBRARY
#endif
