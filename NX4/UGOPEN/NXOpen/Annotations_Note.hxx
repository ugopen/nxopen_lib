#ifndef NXOpen_ANNOTATIONS_NOTE_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_NOTE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_Note.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Annotations_NoteBase.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class Note;
    }
    namespace Annotations
    {
        class NoteBase;
    }
    namespace Annotations
    {
        class _NoteBuilder;
        /** Represents a Note */
        class NXOPENCPPEXPORT Note : public Annotations::NoteBase
        {
            private: friend class  _NoteBuilder;
            protected: Note();
            /**Sets  a flag indicating whether the note is vertical.
                        When editing this, the changes are not applied to the system until
                        an update is performed.  An update can be performed by calling @link Update::DoUpdate Update::DoUpdate@endlink .
                         <br> License requirements : drafting ("DRAFTING") */
            public: void SetVertical
            (
                bool is_vertical /** */
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link SetVertical() SetVertical@endlink instead.
            @deprecated
            */
            public: void SetIsVertical
            (
                bool is_vertical /** */
            ) { this->SetVertical(is_vertical); }
            /**Returns  a flag indicating whether the note is vertical.
                        When editing this, the changes are not applied to the system until
                        an update is performed.  An update can be performed by calling @link Update::DoUpdate Update::DoUpdate@endlink .
                         <br> License requirements : None */
            public: bool IsVertical
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link IsVertical() IsVertical@endlink instead.
            @deprecated
            */
            public: bool GetIsVertical
            (
            ) { return this->IsVertical(); }
        };
    }
}
#undef EXPORTLIBRARY
#endif
