#ifndef NXOpen_PREFERENCES_SKETCHPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_SKETCHPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SketchPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class SketchPreferences;
    }
    class Sketch;
    namespace Preferences
    {
        /** Represents the set of sketch preferences applicable on @link Sketch Sketch@endlink  object <br> To obtain an instance of this class, refer to @link Sketch Sketch@endlink  <br> */
        class NXOPENCPPEXPORT SketchPreferences
        {
            /** Describes the available dimension labels. */
            public: enum DimensionLabelType
            {
                DimensionLabelTypeExpression/** Displays the entire expression such as P2=P3*4 */,
                DimensionLabelTypeName/** Displays only the name of the expression, such as P2 */,
                DimensionLabelTypeValue/** Displays the numerical value of the expression */
            };

            private: NXOpen::Sketch* m_owner;
            public: explicit SketchPreferences(NXOpen::Sketch *owner): m_owner(owner)
            {
            }
            public: tag_t Tag() const;
            /**Returns  the decimal places. Defines the number of digits to display after the decimal point on sketch dimensions 
                (dimensional constraints).  The default value is three.  <br> License requirements : None */
            public: double DecimalPlaces
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link DecimalPlaces() DecimalPlaces@endlink instead.
            @deprecated
            */
            public: double GetDecimalPlaces
            (
            ) { return this->DecimalPlaces(); }
            /**Sets  the decimal places. Defines the number of digits to display after the decimal point on sketch dimensions 
                (dimensional constraints).  The default value is three.  <br> License requirements : None */
            public: void SetDecimalPlaces
            (
                double decimal_places /**  */
            );
            /**Returns  the text height. It is size of text displayed in sketch dimensions. The default is 0.125  <br> License requirements : None */
            public: double TextHeight
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link TextHeight() TextHeight@endlink instead.
            @deprecated
            */
            public: double GetTextHeight
            (
            ) { return this->TextHeight(); }
            /**Sets  the text height. It is size of text displayed in sketch dimensions. The default is 0.125  <br> License requirements : None */
            public: void SetTextHeight
            (
                double text_height /**  */
            );
            /**Returns  the dimension label. Controls how expressions in sketch dimensions are displayed  <br> License requirements : None */
            public: NXOpen::Preferences::SketchPreferences::DimensionLabelType DimensionLabel
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link DimensionLabel() DimensionLabel@endlink instead.
            @deprecated
            */
            public: NXOpen::Preferences::SketchPreferences::DimensionLabelType GetDimensionLabel
            (
            ) { return this->DimensionLabel(); }
            /**Sets  the dimension label. Controls how expressions in sketch dimensions are displayed  <br> License requirements : None */
            public: void SetDimensionLabel
            (
                NXOpen::Preferences::SketchPreferences::DimensionLabelType dimension_label /**  */
            );
            /** Applies sketch preferences set by user.  <br> License requirements : None */
            public: void ApplySketchPreferences
            (
                int dim_display_flag /**  */
            );
            /**Returns  the toggle that controls whether objects are displayed in their actual color in sketch  <br> License requirements : None */
            public: bool DisplayObjectColor
            (
            );
            /**Sets  the toggle that controls whether objects are displayed in their actual color in sketch  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetDisplayObjectColor
            (
                bool display_object_color /** */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
