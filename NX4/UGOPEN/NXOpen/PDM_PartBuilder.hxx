#ifndef NXOpen_PDM_PARTBUILDER_HXX_INCLUDED
#define NXOpen_PDM_PARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/PDM_AlternateIdManager.hxx>
#include <NXOpen/PDM_DatabaseAttributeManager.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace PDM
    {
        class PartBuilder;
    }
    namespace PDM
    {
        class AlternateIdManager;
    }
    namespace PDM
    {
        class DatabaseAttributeManager;
    }
    namespace PDM
    {
        /** This class serves as the base class for NX Manager part builders. The
                NX Manager part builders are used to create new parts in NX Manager mode.
             <br> This is an abstract class, and cannot be created. <br> */
        class NXOPENCPPEXPORT PartBuilder : public TransientObject
        {
            public: explicit PartBuilder(void *ptr);
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector.  <br> License requirements : None */
            public: virtual ~PartBuilder();
            /** Create the specification for the new part that will be created.  <br> License requirements : None */
            public: void CreatePartSpec
            (
                const NXString & part_type /** the part type   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & part_number /** the part number   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & part_revision /** the part revision   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & part_file_type /** the part file type   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & part_file_name /** the part file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Create an instance of a @link PDM::DatabaseAttributeManager PDM::DatabaseAttributeManager@endlink 
                    class that will be used to modify database attributes while creating the new part.  @return  the new @link PDM::DatabaseAttributeManager PDM::DatabaseAttributeManager@endlink  instance  <br> License requirements : None */
            public: NXOpen::PDM::DatabaseAttributeManager * NewDatabaseAttributeManager
            (
            );
            /** Create an instance of a @link PDM::AlternateIdManager PDM::AlternateIdManager@endlink 
                    class that will be used to create alternate ID information while creating the new part.  @return  the new @link PDM::AlternateIdManager PDM::AlternateIdManager@endlink  instance  <br> License requirements : None */
            public: NXOpen::PDM::AlternateIdManager * NewAlternateIdManager
            (
            );
            /** This method generates a part number given an input part type and
                    assigns this part number to the builder.
                    
                     <br> The input part type will also be assigned to the builder. If the
                    input part type is NULL then this method will fail unless the part
                    type has already been set on the builder via a previous call to this method
                    or to @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink .
                     <br> 

                     <br> 
                    If this method is called before @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    (as will typically be the case) then the <b>part_type</b> and
                    <b>part_number</b> parameters of
                    @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    should be set to NULL so that the builder will use the values assigned
                    by this method. Otherwise, CreatePartSpec will override the values assigned
                    here and assign the values of the <b>part_type</b> and <b>part_number</b>
                    parameters to the builder.
                     <br> 
                     @return  the assigned part number  <br> License requirements : None */
            public: NXString AssignPartNumber
            (
                const NXString & part_type /** the part type   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**This method generates a part revision and assigns this part revision
                    to the builder.

                     <br> 
                    This method depends on the part type and part number already being
                    set on the builder. Therefore, a call to
                    @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink  or,
                    more likely, to @link AssignPartNumber AssignPartNumber@endlink  must be made
                    before calling this method.
                     <br> 

                     <br> 
                    If this method is called before @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    (as will typically be the case) then the <b>part_revision</b> parameter of
                    @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    should be set to NULL so that the builder will use the value assigned
                    by this method. Otherwise, CreatePartSpec will override the value assigned
                    here and assign the value of the <b>part_revision</b>
                    parameters to the builder.
                     <br> 
                     @return  the assigned part revision  <br> License requirements : None */
            public: NXString AssignPartRevision
            (
            );
            /**This method generates a part file name given an input partf file type and
                    assigns this part file name to the builder.

                     <br> 
                    This method depends on the part type, part number, and part revision
                    already being set on the builder. Therefore, a call to
                    @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink  or,
                    more likely, calls to @link AssignPartNumber AssignPartNumber@endlink  and
                    @link AssignPartRevision AssignPartRevision@endlink  must be made
                    before calling this method.
                     <br> 

                     <br> 
                    If this method is called before @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    (as will typically be the case) then the <b>part_file_type</b> and
                    <b>part_file_name</b> parameters of
                    @link PDM::PartBuilder::CreatePartSpec PDM::PartBuilder::CreatePartSpec@endlink 
                    should be set to NULL so that the builder will use the values assigned
                    by this method. Otherwise, CreatePartSpec will override the values assigned
                    here and assign the values of the <b>part_file_type</b> and <b>part_file_name</b>
                    parameters to the builder.
                     <br> 

                     @return  the assigned part file name  <br> License requirements : None */
            public: NXString AssignPartFileName
            (
                const NXString & part_file_type /** the part file type. Note that if the
                               part file type is "master", then this method will return NULL but
                               will still set the part file type in the builder.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
