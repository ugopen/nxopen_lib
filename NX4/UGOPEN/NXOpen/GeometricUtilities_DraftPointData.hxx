#ifndef NXOpen_GEOMETRICUTILITIES_DRAFTPOINTDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_DRAFTPOINTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_DraftPointData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class DraftPointData;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _DraftPointDataBuilder;
        /** Represents a draft point data object
             <br> To create a new instance of this class, use @link DraftPointDataCollection::CreateDraftPointData DraftPointDataCollection::CreateDraftPointData@endlink  <br> */
        class NXOPENCPPEXPORT DraftPointData : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _DraftPointDataBuilder;
            protected: DraftPointData();
            /**Sets  the point coordinates		
            		  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetParameter
            (
                double parameter /** */
            );
            /**Returns  the point coordinates		
            		  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double Parameter
            (
            );
            /** Sets the Angle value	
            		  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngle
            (
                const NXString & angle /** Angle string value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Returns the Angle value	
            		  @return  Angle Expression Object  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Expression * GetAngle
            (
            );
            /** Validate Self
                 @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
