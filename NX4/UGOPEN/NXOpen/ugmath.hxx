#ifndef NXOpen_UGMATH_HXX_INCLUDED
#define NXOpen_UGMATH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ugmath.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
     /** Represents three-dimensional cartesian coordinates for a point */

    struct Point3d
    {
        public: /** */double X;
        public: /** */double Y;
        public: /** */double Z;
        public: Point3d() :
            X(),
            Y(),
            Z()
        {
        }
        /** Constructor for the Point3d struct. */ 
        public: Point3d(double INIT_x /** */, double INIT_y /** */, double INIT_z /** */) :
            X(INIT_x),
            Y(INIT_y),
            Z(INIT_z)
        {
        }
    };

     /** Represents a three-dimensional vector */

    struct Vector3d
    {
        public: /** */double X;
        public: /** */double Y;
        public: /** */double Z;
        public: Vector3d() :
            X(),
            Y(),
            Z()
        {
        }
        /** Constructor for the Vector3d struct. */ 
        public: Vector3d(double INIT_x /** */, double INIT_y /** */, double INIT_z /** */) :
            X(INIT_x),
            Y(INIT_y),
            Z(INIT_z)
        {
        }
    };

     /** Represents a 3 x 3 matrix */

    struct Matrix3x3
    {
        public: /** */double Xx;
        public: /** */double Xy;
        public: /** */double Xz;
        public: /** */double Yx;
        public: /** */double Yy;
        public: /** */double Yz;
        public: /** */double Zx;
        public: /** */double Zy;
        public: /** */double Zz;
        public: Matrix3x3() :
            Xx(),
            Xy(),
            Xz(),
            Yx(),
            Yy(),
            Yz(),
            Zx(),
            Zy(),
            Zz()
        {
        }
        /** Constructor for the Matrix3x3 struct. */ 
        public: Matrix3x3(double INIT_xx /** */, double INIT_xy /** */, double INIT_xz /** */, double INIT_yx /** */, double INIT_yy /** */, double INIT_yz /** */, double INIT_zx /** */, double INIT_zy /** */, double INIT_zz /** */) :
            Xx(INIT_xx),
            Xy(INIT_xy),
            Xz(INIT_xz),
            Yx(INIT_yx),
            Yy(INIT_yy),
            Yz(INIT_yz),
            Zx(INIT_zx),
            Zy(INIT_zy),
            Zz(INIT_zz)
        {
        }
    };

}
#undef EXPORTLIBRARY
#endif
