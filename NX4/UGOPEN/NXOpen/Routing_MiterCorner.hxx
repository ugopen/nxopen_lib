#ifndef NXOpen_ROUTING_MITERCORNER_HXX_INCLUDED
#define NXOpen_ROUTING_MITERCORNER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_MiterCorner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Routing_Corner.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class MiterCorner;
    }
    namespace Routing
    {
        class Corner;
    }
    namespace Routing
    {
        class SplineSegment;
    }
    namespace Routing
    {
        class Stock;
    }
    namespace Routing
    {
        class _MiterCornerBuilder;
        /** 
                The Routing MiterCorner is a system interface to model the intersection two stocks at
                a Routing Control Point. For the Miter corner, the Ratio To Stock Diameter, Bend Ratio,
                and Bend Radius fields are desensitized and are not used. A miter corner creates at
                the selected Contro Points.
             */
        class NXOPENCPPEXPORT MiterCorner : public Routing::Corner
        {
            private: friend class  _MiterCornerBuilder;
            protected: MiterCorner();
            /** Gets the stock of the miter corner object.  @return  TRUE if found stock, FALSE otherwise.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: bool GetStocks
            (
                std::vector<NXOpen::Routing::Stock *> & stocks /** Stocks to be get for the miter corner */
            );
            /** Gets the segments of the miter corner object.  @return  Segments the miter corner.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: std::vector<NXOpen::Routing::SplineSegment *> GetSegments
            (
            );
            /** Sets the segments of the miter corner object.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetSegments
            (
                const std::vector<NXOpen::Routing::SplineSegment *> & segments /** Segments to be set for the miter corner. */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
