#ifndef NXOpen_FEATURES_SHEETMETAL_BENDOPTIONS_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_BENDOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_BendOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_SheetMetal_BendOptions.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class BendOptions;
        }
    }
    class Expression;
    namespace Features
    {
        namespace SheetMetal
        {
            class _BendOptionsBuilder;
            /** Represents a Sheetmetal Bend Options class. */
            class NXOPENCPPEXPORT BendOptions : public TaggedObject
            {
                /** This enum represents the bend relief type. */
                public: enum BendReliefTypeOptions
                {
                    BendReliefTypeOptionsNone/**  igRipBendRelief         */,
                    BendReliefTypeOptionsSquare/**  igRectangularBendRelief */,
                    BendReliefTypeOptionsRound/** igFilletBendRelief      */
                };

                /** This enum represents the corner relief type. */
                public: enum CornerReliefTypeOptions
                {
                    CornerReliefTypeOptionsNone/**  */,
                    CornerReliefTypeOptionsBendOnly/** igBendOnlyCornerRelief */,
                    CornerReliefTypeOptionsBendAndFace/** igBendAndFaceCornerRelief */,
                    CornerReliefTypeOptionsBendAndFaceChain/**  igChainedCornerRelief */
                };

                private: friend class  _BendOptionsBuilder;
                protected: BendOptions();
                /**Returns  the bend radius.  <br> License requirements : None */
                public: NXOpen::Expression * BendRadius
                (
                );
                /** Sets the bend radius.  <br> License requirements : None */
                public: void SetBendRadius
                (
                    const NXString & radius /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the bend relief type.
                                 <br> 
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.None</ja_enum_value> if you do not want a bend relief.
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.Square</ja_enum_value> for a square/rectangular bend relief.
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.Round</ja_enum_value> for a rounded bend relief.
                                 <br> 
                             <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::BendOptions::BendReliefTypeOptions BendReliefType
                (
                );
                /**Sets  the bend relief type.
                                 <br> 
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.None</ja_enum_value> if you do not want a bend relief.
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.Square</ja_enum_value> for a square/rectangular bend relief.
                                    Specify <ja_enum_value>BendOptions.BendReliefTypeOptions.Round</ja_enum_value> for a rounded bend relief.
                                 <br> 
                             <br> License requirements : None */
                public: void SetBendReliefType
                (
                    NXOpen::Features::SheetMetal::BendOptions::BendReliefTypeOptions type /** */
                );
                /**Returns  the option to extend the bend relief if required. This only applies if the bend relief type
                                is set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.    
                             <br> License requirements : None */
                public: bool ExtendBendRelief
                (
                );
                /**Sets  the option to extend the bend relief if required. This only applies if the bend relief type
                                is set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.    
                             <br> License requirements : None */
                public: void SetExtendBendRelief
                (
                    bool extend /** */
                );
                /**Returns  the bend relief depth. Applicable only if @link Features::SheetMetal::BendOptions::BendReliefType Features::SheetMetal::BendOptions::BendReliefType@endlink  is 
                                set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.
                               <br> License requirements : None */
                public: NXOpen::Expression * BendReliefDepth
                (
                );
                /** Sets the bend relief depth. Applicable only if @link Features::SheetMetal::BendOptions::BendReliefType Features::SheetMetal::BendOptions::BendReliefType@endlink  is 
                                set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.
                               <br> License requirements : None */
                public: void SetBendReliefDepth
                (
                    const NXString & depth /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the bend relief width. Applicable only if @link Features::SheetMetal::BendOptions::BendReliefType Features::SheetMetal::BendOptions::BendReliefType@endlink  is 
                                set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.
                               <br> License requirements : None */
                public: NXOpen::Expression * BendReliefWidth
                (
                );
                /** Sets the bend relief width. Applicable only if @link Features::SheetMetal::BendOptions::BendReliefType Features::SheetMetal::BendOptions::BendReliefType@endlink  is 
                                set to a value other than <ja_enum_value>Features.SheetMetal.BendOptions.BendReliefTypeOptions.None</ja_enum_value>.
                               <br> License requirements : None */
                public: void SetBendReliefWidth
                (
                    const NXString & width /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the corner relief type. Use one of the values from @link BendOptions::CornerReliefTypeOptions BendOptions::CornerReliefTypeOptions@endlink .
                             <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::BendOptions::CornerReliefTypeOptions CornerReliefType
                (
                );
                /**Sets  the corner relief type. Use one of the values from @link BendOptions::CornerReliefTypeOptions BendOptions::CornerReliefTypeOptions@endlink .
                             <br> License requirements : None */
                public: void SetCornerReliefType
                (
                    NXOpen::Features::SheetMetal::BendOptions::CornerReliefTypeOptions type /** */
                );
                /** Sets the neutral factor.  <br> License requirements : None */
                public: void SetNeutralFactor
                (
                    const NXString & neutral_factor /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the neutral factor.  <br> License requirements : None */
                public: NXOpen::Expression * NeutralFactor
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
