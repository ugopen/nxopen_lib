#ifndef NXOpen_FEATURES_EMBOSSSIDEWALL_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSSIDEWALL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossSidewall.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_EmbossJoggle.hxx>
#include <NXOpen/Features_EmbossSidewall.hxx>
#include <NXOpen/Features_EmbossTaper.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EmbossSidewall;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class EmbossJoggle;
    }
    namespace Features
    {
        class EmbossTaper;
    }
    namespace Features
    {
        class _EmbossSidewallBuilder;
        /** Represents sidewall sub-object of an emboss feature 
            Emboss sidewall represents emboss side objects. Normally, extrusion, tapered  swept etc methods to creation sidewall geometry.
                --Sidewall method option
                                sidewall_method_isocline_tapered = 0,   Isocline_tapered       
                                sidewall_method_curve_tapered    = 1,   Curve tapered          
                                sidewall_method_ruled            = 2,   Ruled                  
                                sidewall_method_swept            = 3,   Swept                  
                                sidewall_method_normal           = 4,   Normal to surf tapered 
                                sidewall_method_two_section      = 5,   Two section            
                                sidewall_method_offset           = 6    Offset section               
                --Sidewall direction
                    NX standard vector
                       
                --Sidewall default angle
                    NX standard expression
                        
                   
                --Sidewall joggle  -> EmbossJoggle
                        joggle_direction_option_sidewall = 0,    Along sidewall direction      
                        joggle_direction_option_normal   = 1,    Normal to target              
                        joggle_direction_option_specify  = 2     Along user specified direction 
                    
                --Sidewall tapers (array)  -> EmbossTaper
                      for each chain of section, it's allowed to assgine with different taper angle.
                      --Taper angle
                            NX standard expression
            */
        class NXOPENCPPEXPORT EmbossSidewall : public TaggedObject
        {
            /** This enum represents the sidewall method of comp sidewall */
            public: enum SidewallMethod
            {
                SidewallMethodIsoclineTapered/** Isocline_tapered       */,
                SidewallMethodCurveTapered/** Curve tapered          */,
                SidewallMethodRuled/** Ruled                  */,
                SidewallMethodSwept/** Swept                  */,
                SidewallMethodNormal/** Normal to surf tapered */,
                SidewallMethodTwoSection/** Two section            */,
                SidewallMethodOffset/** Offset section         */
            };

            private: friend class  _EmbossSidewallBuilder;
            protected: EmbossSidewall();
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSidewallOption
            (
                NXOpen::Features::EmbossSidewall::SidewallMethod sidewall_method /**Sidewall method */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Features::EmbossSidewall::SidewallMethod SidewallOption
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::Direction * sidewall_direction /**Sidewall direction */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /** Set sidewall defaults taper angle <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngle
            (
                const NXString & angle /**Sidewall defaults taper angle   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Expression * Angle
            (
            );
            /**  <br> License requirements : None */
            public: void SetNewAngle
            (
                double angle /**Emboss sidewall default angle */
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetJoggle
            (
                NXOpen::Features::EmbossJoggle * joggle /**Sidewall joggle */
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Features::EmbossJoggle * Joggle
            (
            );
            /** Set the sidewall tapers  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTapers
            (
                const std::vector<NXOpen::Features::EmbossTaper *> & tapers /**Sidewall tapers */
            );
            /** Get the emboss sidewall taper  @return Sidewall tapers  <br> License requirements : None */
            public: std::vector<NXOpen::Features::EmbossTaper *> GetTapers
            (
            );
            /** Sidewall got a list of taper objects. 
                        This function will create a new single taper object and append to the sidewall taper object list
                        For the purpose of JA, taper object is dynamically growing and this method will cater for this need  @return Sidewall new taper object  <br> License requirements : None */
            public: NXOpen::Features::EmbossTaper * AddNewTaper
            (
            );
            /** Sidewall got a list of taper objects. 
                        This function will delete a taper object by its index. 
                        For the purpose of JA, taper object is dynamically cutting down and this method will cater for this need  <br> License requirements : None */
            public: void RemoveTaper
            (
                int index /**index of taper which to be deleted*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
