#ifndef NXOpen_ANNOTATIONS_HORIZONTALDIMENSION_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_HORIZONTALDIMENSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_HorizontalDimension.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Annotations_ILinearTolerance.hxx>
#include <NXOpen/Annotations_LinearTolerance.hxx>
#include <NXOpen/Annotations_Dimension.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class HorizontalDimension;
    }
    namespace Annotations
    {
        class Dimension;
    }
    namespace Annotations
    {
        class ILinearTolerance;
    }
    namespace Annotations
    {
        class LinearTolerance;
    }
    class BasePart;
    class INXObject;
    class NXObject;
    namespace Annotations
    {
        class _HorizontalDimensionBuilder;
        /** Represents a horizontal dimension */
        class NXOPENCPPEXPORT HorizontalDimension : public Annotations::Dimension, public virtual Annotations::ILinearTolerance
        {
            private: friend class  _HorizontalDimensionBuilder;
            protected: HorizontalDimension();
            /** Returns the tolerance  @return   <br> License requirements : None */
            public: virtual NXOpen::Annotations::LinearTolerance * GetTolerance
            (
            );
            /** Sets the tolerance  <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: virtual void SetTolerance
            (
                NXOpen::Annotations::LinearTolerance * tolerance /** */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
