#ifndef NXOpen_FEATURES_DIVIDEFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DIVIDEFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DividefaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DividefaceBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class ScCollector;
    class Section;
    namespace Features
    {
        class _DividefaceBuilderBuilder;
        /** Represents a divide face builder  <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDividefaceBuilder Features::FeatureCollection::CreateDividefaceBuilder@endlink  <br> */
        class NXOPENCPPEXPORT DividefaceBuilder : public Features::FeatureBuilder
        {
            private: friend class  _DividefaceBuilderBuilder;
            protected: DividefaceBuilder();
            /**Sets  the Faces to Divide  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFacesToDivide
            (
                NXOpen::ScCollector * faces_to_divide /** Smart collector for faces to divide */
            );
            /**Returns  the Faces to Divide  <br> License requirements : None */
            public: NXOpen::ScCollector * FacesToDivide
            (
            );
            /**Sets  the Dividing Objects  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDividingObjects
            (
                NXOpen::ScCollector * dividing_objects /** Smart collector for dividing objects */
            );
            /**Returns  the Dividing Objects  <br> License requirements : None */
            public: NXOpen::ScCollector * DividingObjects
            (
            );
            /**Returns  the Projection Options data  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionOption
            (
            );
            /**Sets  the tolerance  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** Tolerance */
            );
            /**Returns  the tolerance  <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the curve blanking option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBlankOption
            (
                bool blank /** false: maintain curves; true: blank curves */
            );
            /**Returns  the curve blanking option  <br> License requirements : None */
            public: bool BlankOption
            (
            );
            /**Sets  the Extend resulting edges to boundary  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetExtendOption
            (
                bool extend /** false: do not extend curves; true: extend curves */
            );
            /**Returns  the Extend resulting edges to boundary  <br> License requirements : None */
            public: bool ExtendOption
            (
            );
            /**Sets  the Do not project curves that lie on face  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProjectCurvesThatLieOnFaceOption
            (
                bool project_curves_that_lie_on_face /** false: project curves that lie on face option; true: Do not project curves that lie on face option */
            );
            /**Returns  the Do not project curves that lie on face  <br> License requirements : None */
            public: bool ProjectCurvesThatLieOnFaceOption
            (
            );
            /**Sets  the Dividing Objects section <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDividingObjectsSection
            (
                NXOpen::Section * dividing_objects_section /** section for dividing objects */
            );
            /**Returns  the Dividing Objects section <br> License requirements : None */
            public: NXOpen::Section * DividingObjectsSection
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
