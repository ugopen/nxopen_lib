#ifndef NXOpen_PREFERENCES_SESSIONNXGATEWAY_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONNXGATEWAY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionNXGateway.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class SessionNXGateway;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        /** Represents the set of NXGateway Preferences applicable to entire session  <br> To obtain an instance of this class, refer to @link SessionPreferences SessionPreferences@endlink  <br> */
        class NXOPENCPPEXPORT SessionNXGateway
        {
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            public: explicit SessionNXGateway(NXOpen::Preferences::SessionPreferences *owner): m_owner(owner)
            {
            }
            public: tag_t Tag() const;
            /**Returns  the reference geometry import layer for I-DEAS   <br> License requirements : None */
            public: int ReferenceGeometryImportLayer
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link ReferenceGeometryImportLayer() ReferenceGeometryImportLayer@endlink instead.
            @deprecated
            */
            public: int GetReferenceGeometryImportLayer
            (
            ) { return this->ReferenceGeometryImportLayer(); }
            /**Sets  the reference geometry import layer for I-DEAS   <br> License requirements : None */
            public: void SetReferenceGeometryImportLayer
            (
                int reference_geometry_import_layer /**  */
            );
            /**Returns  the reference geometry import color for I-DEAS  <br> License requirements : None */
            public: int ReferenceGeometryImportColor
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link ReferenceGeometryImportColor() ReferenceGeometryImportColor@endlink instead.
            @deprecated
            */
            public: int GetReferenceGeometryImportColor
            (
            ) { return this->ReferenceGeometryImportColor(); }
            /**Sets  the reference geometry import color for I-DEAS  <br> License requirements : None */
            public: void SetReferenceGeometryImportColor
            (
                int reference_geometry_import_color /**  */
            );
            /**Returns  the wireframe geometry import layer for I-DEAS   <br> License requirements : None */
            public: int WireframeGeometryImportLayer
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link WireframeGeometryImportLayer() WireframeGeometryImportLayer@endlink instead.
            @deprecated
            */
            public: int GetWireframeGeometryImportLayer
            (
            ) { return this->WireframeGeometryImportLayer(); }
            /**Sets  the wireframe geometry import layer for I-DEAS   <br> License requirements : None */
            public: void SetWireframeGeometryImportLayer
            (
                int wireframe_geometry_import_layer /**  */
            );
            /**Returns  the wireframe geometry import color for I-DEAS   <br> License requirements : None */
            public: int WireframeGeometryImportColor
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link WireframeGeometryImportColor() WireframeGeometryImportColor@endlink instead.
            @deprecated
            */
            public: int GetWireframeGeometryImportColor
            (
            ) { return this->WireframeGeometryImportColor(); }
            /**Sets  the wireframe geometry import color for I-DEAS   <br> License requirements : None */
            public: void SetWireframeGeometryImportColor
            (
                int wireframe_geometry_import_color /**  */
            );
            /**Returns  the perform fidelity check on import flag for I-DEAS  <br> License requirements : None */
            public: bool PerformFidelityCheckOnImport
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link PerformFidelityCheckOnImport() PerformFidelityCheckOnImport@endlink instead.
            @deprecated
            */
            public: bool GetPerformFidelityCheckOnImport
            (
            ) { return this->PerformFidelityCheckOnImport(); }
            /**Sets  the perform fidelity check on import flag for I-DEAS  <br> License requirements : None */
            public: void SetPerformFidelityCheckOnImport
            (
                bool perform_fidelity_check_on_import /**  */
            );
            /**Returns  the retain fidelity checking information flag for I-DEAS  <br> License requirements : None */
            public: bool RetainFidelityCheckingInformation
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link RetainFidelityCheckingInformation() RetainFidelityCheckingInformation@endlink instead.
            @deprecated
            */
            public: bool GetRetainFidelityCheckingInformation
            (
            ) { return this->RetainFidelityCheckingInformation(); }
            /**Sets  the retain fidelity checking information flag for I-DEAS  <br> License requirements : None */
            public: void SetRetainFidelityCheckingInformation
            (
                bool retain_fidelity_checking_information /**  */
            );
            /**Returns  the load product manufacturing information flag for I-DEAS  <br> License requirements : None */
            public: bool LoadProductManufacturingInformation
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link LoadProductManufacturingInformation() LoadProductManufacturingInformation@endlink instead.
            @deprecated
            */
            public: bool GetLoadProductManufacturingInformation
            (
            ) { return this->LoadProductManufacturingInformation(); }
            /**Sets  the load product manufacturing information flag for I-DEAS  <br> License requirements : None */
            public: void SetLoadProductManufacturingInformation
            (
                bool load_product_manufacturing_information /**  */
            );
            /**Returns  the load product manufacturing information flag for Solid Edge  <br> License requirements : None */
            public: bool LoadSolidEdgeProductManufacturingInformation
            (
            );
            /**Sets  the load product manufacturing information flag for Solid Edge  <br> License requirements : None */
            public: void SetLoadSolidEdgeProductManufacturingInformation
            (
                bool load_product_manufacturing_information /**  */
            );
            /**Returns  the load construction geometry flag for I-DEAS  <br> License requirements : None */
            public: bool LoadConstructionGeometry
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link LoadConstructionGeometry() LoadConstructionGeometry@endlink instead.
            @deprecated
            */
            public: bool GetLoadConstructionGeometry
            (
            ) { return this->LoadConstructionGeometry(); }
            /**Sets  the load construction geometry flag for I-DEAS  <br> License requirements : None */
            public: void SetLoadConstructionGeometry
            (
                bool load_construction_geometry /**  */
            );
            /**Returns  the ignore update of identical versions flag for I-DEAS  <br> License requirements : None */
            public: bool IgnoreUpdateOfIdenticalVersions
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link IgnoreUpdateOfIdenticalVersions() IgnoreUpdateOfIdenticalVersions@endlink instead.
            @deprecated
            */
            public: bool GetIgnoreUpdateOfIdenticalVersions
            (
            ) { return this->IgnoreUpdateOfIdenticalVersions(); }
            /**Sets  the ignore update of identical versions flag for I-DEAS  <br> License requirements : None */
            public: void SetIgnoreUpdateOfIdenticalVersions
            (
                bool ignore_update_of_identical_versions /**  */
            );
            /**Returns  the automatically checking of items revision flag for I-DEAS import  <br> License requirements : None */
            public: bool AutomaticallyCheckItemRevisions
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link AutomaticallyCheckItemRevisions() AutomaticallyCheckItemRevisions@endlink instead.
            @deprecated
            */
            public: bool GetAutomaticallyCheckItemRevisions
            (
            ) { return this->AutomaticallyCheckItemRevisions(); }
            /**Sets  the automatically checking of items revision flag for I-DEAS import  <br> License requirements : None */
            public: void SetAutomaticallyCheckItemRevisions
            (
                bool automatically_check_item_revisions /**  */
            );
            /**Returns  the remove small edges flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: bool RemoveSmallEdges
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link RemoveSmallEdges() RemoveSmallEdges@endlink instead.
            @deprecated
            */
            public: bool GetRemoveSmallEdges
            (
            ) { return this->RemoveSmallEdges(); }
            /**Sets  the remove small edges flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetRemoveSmallEdges
            (
                bool remove_small_edges /**  */
            );
            /**Returns  the use repair tolerance flag. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: bool UseRepairTolerance
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link UseRepairTolerance() UseRepairTolerance@endlink instead.
            @deprecated
            */
            public: bool GetUseRepairTolerance
            (
            ) { return this->UseRepairTolerance(); }
            /**Sets  the use repair tolerance flag. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: void SetUseRepairTolerance
            (
                bool use_repair_tolerance /**  */
            );
            /**Returns  the remove self intersection flag. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: bool RemoveSelfIntersections
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link RemoveSelfIntersections() RemoveSelfIntersections@endlink instead.
            @deprecated
            */
            public: bool GetRemoveSelfIntersections
            (
            ) { return this->RemoveSelfIntersections(); }
            /**Sets  the remove self intersection flag. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: void SetRemoveSelfIntersections
            (
                bool remove_self_intersections /**  */
            );
            /**Returns  the remove discontinuity flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: bool RemoveDiscontinuity
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link RemoveDiscontinuity() RemoveDiscontinuity@endlink instead.
            @deprecated
            */
            public: bool GetRemoveDiscontinuity
            (
            ) { return this->RemoveDiscontinuity(); }
            /**Sets  the remove discontinuity flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetRemoveDiscontinuity
            (
                bool remove_discontinuity /**  */
            );
            /**Returns  the suppress surface modification flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: bool SuppressSurfaceModification
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link SuppressSurfaceModification() SuppressSurfaceModification@endlink instead.
            @deprecated
            */
            public: bool GetSuppressSurfaceModification
            (
            ) { return this->SuppressSurfaceModification(); }
            /**Sets  the suppress surface modification flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetSuppressSurfaceModification
            (
                bool suppress_surface_modification /**  */
            );
            /**Returns  the preserve nominal geometry flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: bool PreserveNominalGeometry
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link PreserveNominalGeometry() PreserveNominalGeometry@endlink instead.
            @deprecated
            */
            public: bool GetPreserveNominalGeometry
            (
            ) { return this->PreserveNominalGeometry(); }
            /**Sets  the preserve nominal geometry flag. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetPreserveNominalGeometry
            (
                bool preserve_nominal_geometry /**  */
            );
            /**Returns  the attach FC data flag for I-DEAS gateway  <br> License requirements : None */
            public: bool AttachFidelityCheckData
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link AttachFidelityCheckData() AttachFidelityCheckData@endlink instead.
            @deprecated
            */
            public: bool GetAttachFidelityCheckData
            (
            ) { return this->AttachFidelityCheckData(); }
            /**Sets  the attach FC data flag for I-DEAS gateway  <br> License requirements : None */
            public: void SetAttachFidelityCheckData
            (
                bool attach_fidelity_check_data /**  */
            );
            /**Returns  the heal geometry on import flag for I-DEAS import  <br> License requirements : None */
            public: bool HealGeometryOnImport
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link HealGeometryOnImport() HealGeometryOnImport@endlink instead.
            @deprecated
            */
            public: bool GetHealGeometryOnImport
            (
            ) { return this->HealGeometryOnImport(); }
            /**Sets  the heal geometry on import flag for I-DEAS import  <br> License requirements : None */
            public: void SetHealGeometryOnImport
            (
                bool heal_geometry_on_import /**  */
            );
            /**Returns  the tolerance. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: double Tolerance
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link Tolerance() Tolerance@endlink instead.
            @deprecated
            */
            public: double GetTolerance
            (
            ) { return this->Tolerance(); }
            /**Sets  the tolerance. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: void SetTolerance
            (
                double tolerance /**  */
            );
            /**Returns  the repair tolerance. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: double RepairTolerance
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link RepairTolerance() RepairTolerance@endlink instead.
            @deprecated
            */
            public: double GetRepairTolerance
            (
            ) { return this->RepairTolerance(); }
            /**Sets  the repair tolerance. One of the heal geometry option for I-DEAS import   <br> License requirements : None */
            public: void SetRepairTolerance
            (
                double repair_tolerance /**  */
            );
            /**Returns  the minimum small edge length. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: double MinimumSmallEdgeLength
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link MinimumSmallEdgeLength() MinimumSmallEdgeLength@endlink instead.
            @deprecated
            */
            public: double GetMinimumSmallEdgeLength
            (
            ) { return this->MinimumSmallEdgeLength(); }
            /**Sets  the minimum small edge length. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetMinimumSmallEdgeLength
            (
                double minimum_small_edge_length /**  */
            );
            /**Returns  the angular tolerance. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: double AngularTolerance
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link AngularTolerance() AngularTolerance@endlink instead.
            @deprecated
            */
            public: double GetAngularTolerance
            (
            ) { return this->AngularTolerance(); }
            /**Sets  the angular tolerance. One of the heal geometry option for I-DEAS import  <br> License requirements : None */
            public: void SetAngularTolerance
            (
                double angular_tolerance /**  */
            );
            /**Returns  the only import design parts flag for Solid Edge. It is under Solid Edge Gateway preferences  <br> License requirements : None */
            public: bool OnlyImportDesignParts
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link OnlyImportDesignParts() OnlyImportDesignParts@endlink instead.
            @deprecated
            */
            public: bool GetOnlyImportDesignParts
            (
            ) { return this->OnlyImportDesignParts(); }
            /**Sets  the only import design parts flag for Solid Edge. It is under Solid Edge Gateway preferences  <br> License requirements : None */
            public: void SetOnlyImportDesignParts
            (
                bool only_import_design_parts /**  */
            );
            /**Returns  the save component part files flag during load for I-DEAS  <br> License requirements : None */
            public: bool SaveComponentPartFilesDuringLoad
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link SaveComponentPartFilesDuringLoad() SaveComponentPartFilesDuringLoad@endlink instead.
            @deprecated
            */
            public: bool GetSaveComponentPartFilesDuringLoad
            (
            ) { return this->SaveComponentPartFilesDuringLoad(); }
            /**Sets  the save component part files flag during load for I-DEAS  <br> License requirements : None */
            public: void SetSaveComponentPartFilesDuringLoad
            (
                bool save_component_part_files_during_load /**  */
            );
            /**Returns  the load construction geometry flag for Solid Edge  <br> License requirements : None */
            public: bool LoadSolidEdgeConstructionGeometry
            (
            );
            /**Sets  the load construction geometry flag for Solid Edge  <br> License requirements : None */
            public: void SetLoadSolidEdgeConstructionGeometry
            (
                bool load_construction_geometry /**  */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
