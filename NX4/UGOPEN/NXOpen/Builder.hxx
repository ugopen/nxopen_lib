#ifndef NXOpen_BUILDER_HXX_INCLUDED
#define NXOpen_BUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Builder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Builder;
    class NXObject;
    class _BuilderBuilder;
    /**
    A Builder is an object that is used to create and edit other objects. This is an abstract
    class that provides the basic functionality common to all builders. See the Builder
    subclasses for details of application-specific builders.
     <br> 
    All Builders use a transaction model. A new builder is created, and its methods are called
    to make changes. These changes are not applied to the session until the
    @link Builder::Commit Builder::Commit@endlink  method is invoked.
     <br> 
     <br> 
    Once a Builder has been committed, it should be deleted using the
    @link Builder::Destroy Builder::Destroy@endlink . Alternatively, any edits made can be discarded by
    deleting the builder without calling commit.
     <br> 
     <br> This is an abstract class, and cannot be instantiated. <br> */
    class NXOPENCPPEXPORT Builder : public TaggedObject
    {
        private: friend class  _BuilderBuilder;
        protected: Builder();
        /** Commits any edits that have been applied to the builder. Returns the object being
               edited, or a new object if the builder is being used in creation mode.
             @return  The object being edited, or the new object.  <br> License requirements : None */
        public: NXOpen::NXObject * Commit
        (
        );
        /** Deletes the builder, and cleans up any objects created by the builder. This method should
                always be called when a builder  <br> License requirements : None */
        public: void Destroy
        (
        );
        /** Returns the object currently being edited by this builder. If
                a new object is being created, and the builder has not yet
                been commited, returns NULL.
              @return   <br> License requirements : None */
        public: NXOpen::NXObject * GetObject
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
