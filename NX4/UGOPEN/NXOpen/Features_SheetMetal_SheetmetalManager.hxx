#ifndef NXOpen_FEATURES_SHEETMETAL_SHEETMETALMANAGER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_SHEETMETALMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_SheetmetalManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalManager;
        }
    }
    namespace Features
    {
        class FeatureCollection;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class BeadBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class BreakCornerBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class ContourFlangeBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class ConvertToSheetmetalBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class DimpleBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class DrawnCutoutBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class EdgeRipBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class FlangeBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class FlatSolidBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class LoftedFlangeBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class LouverBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class NormalCutoutBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class TabBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class ThreeBendCornerBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            /** Represents an object that manages sheetmetal features  <br> To obtain an instance of this class, refer to @link FeatureCollection FeatureCollection@endlink  <br> */
            class NXOPENCPPEXPORT SheetmetalManager
            {
                private: NXOpen::Features::FeatureCollection* m_owner;
                public: explicit SheetmetalManager(NXOpen::Features::FeatureCollection *owner): m_owner(owner)
                {
                }
                public: tag_t Tag() const;
                /** Create a NXSM Dimple feature Builder @return  DimpleBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::DimpleBuilder * CreateDimpleFeatureBuilder
                (
                    NXOpen::Features::Feature * Dimple /** The Dimple for which builder needs to be constructed. NULL for creating a new dimple */
                );
                /** Create a NXSM Drawn Cutout feature Builder @return  DrawnCutoutBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::DrawnCutoutBuilder * CreateDrawnCutoutFeatureBuilder
                (
                    NXOpen::Features::Feature * Dcutout /** The Drawn Cutout for which builder needs to be constructed. NULL for creating a new Drawn Cutout */
                );
                /** Create a NXSM Louver feature Builder @return  LouverBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::LouverBuilder * CreateLouverFeatureBuilder
                (
                    NXOpen::Features::Feature * louver /** The Louver for which builder needs to be constructed. NULL for creating a new Louver */
                );
                /** Create a NXSM Bead feature Builder @return  BeadBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::BeadBuilder * CreateBeadFeatureBuilder
                (
                    NXOpen::Features::Feature * bead /** The Bead for which builder needs to be constructed. NULL for creating a new Bead */
                );
                /** Create a NXSM Flange feature Builder @return  FlangeBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::FlangeBuilder * CreateFlangeFeatureBuilder
                (
                    NXOpen::Features::Feature * Dcutout /** The Flange for which builder needs to be constructed. NULL for creating a new Flange */
                );
                /** Create a NXSM Break Corner feature Builder @return  BrcornerBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::BreakCornerBuilder * CreateBreakCornerFeatureBuilder
                (
                    NXOpen::Features::Feature * brcorner /** The Break Corner for which builder needs to be constructed. NULL for creating a new Break Corner */
                );
                /** Create a NXSM Edge Rip feature Builder @return  Edge Rip Builder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::EdgeRipBuilder * CreateEdgeRipFeatureBuilder
                (
                    NXOpen::Features::Feature * edge_rip /** The Edge Rip for which builder needs to be constructed. NULL for creating a new Edge Rip */
                );
                /** Create a NXSM Convert To Sheetmetal feature Builder @return  Convert To Sheetmetal Builder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::ConvertToSheetmetalBuilder * CreateConvertToSheetmetalFeatureBuilder
                (
                    NXOpen::Features::Feature * convert_to_sheet_metal /** The Convert To Sheetmetal feature for which builder needs to be constructed. NULL for converting a part for the first time*/
                );
                /** Create a NXSM Normal Cutout feature Builder @return  NormalCutoutBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder * CreateNormalCutoutFeatureBuilder
                (
                    NXOpen::Features::Feature * ncutout /** The Normal Cutout for which builder needs to be constructed. NULL for creating a new Normal Cutout */
                );
                /** Create a NXSM Tab feature Builder @return  TabBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::TabBuilder * CreateTabFeatureBuilder
                (
                    NXOpen::Features::Feature * tab /** The Tab for which builder needs to be constructed. NULL for creating a new Tab */
                );
                /** Create a NXSM Lofted Flange feature Builder @return  LoftedFlangeBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::LoftedFlangeBuilder * CreateLoftedFlangeFeatureBuilder
                (
                    NXOpen::Features::Feature * lflange /** The Lofted Flange for which builder needs to be constructed. NULL for creating a new LoftedFlange */
                );
                /** Create a NXSM Three Bend Corner feature Builder @return  ThreeBendCornerBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::ThreeBendCornerBuilder * CreateThreeBendCornerFeatureBuilder
                (
                    NXOpen::Features::Feature * three_bend_corner /** The Three Bend Corner for which builder needs to be constructed. NULL for creating a new Three Bend Corner */
                );
                /** Create a NXSM Contour Flange feature Builder @return  ContourFlangeBuilder object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::ContourFlangeBuilder * CreateContourFlangeFeatureBuilder
                (
                    NXOpen::Features::Feature * contour_flange /**The Contour Flange for which builder needs to be constructed. NULL for creating a new Contour Flange */
                );
                /** Create a NXSM Flat Solid feature Builder @return  Flat Solid object  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::FlatSolidBuilder * CreateFlatSolidFeatureBuilder
                (
                    NXOpen::Features::Feature * flat_solid /**The Contour Flange for which builder needs to be constructed. NULL for creating a new Flat Solid */
                );
                public: virtual void initialize();
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
