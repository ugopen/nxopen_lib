#ifndef NXOpen_FEATURES_DATUMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DATUMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DatumBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/DatumConstraint.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DatumBuilder;
    }
    class DatumConstraint;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _DatumBuilderBuilder;
        /** Represents a builder for datum features. A generic datum feature is positioned via a set of contraints. (See
            @link DatumConstraint DatumConstraint@endlink .) The two datum subclasses can be positioned by editig constriants, and
            can also be edited via a set of explicit methods for setting different constraint types. See 
            @link Features::DatumAxisBuilder Features::DatumAxisBuilder@endlink  and @link Features::DatumPlaneBuilder Features::DatumPlaneBuilder@endlink .
         <br> This is an abstract class, and cannot be instantiated <br> */
        class NXOPENCPPEXPORT DatumBuilder : public Features::FeatureBuilder
        {
            private: friend class  _DatumBuilderBuilder;
            protected: DatumBuilder();
            /** Creates a new empty constraint object. To apply one or more constraints to a feature, 
                    see @link SetConstraints SetConstraints@endlink .
                  @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::DatumConstraint * CreateConstraint
            (
            );
            /** Gets the contraint objects that define the positioning of this datum. @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::DatumConstraint *> GetConstraints
            (
            );
            /** Sets the contraint objects that define the positioning of this datum. <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetConstraints
            (
                const std::vector<NXOpen::DatumConstraint *> & constraints /** */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
