#ifndef NXOpen_FEATURES_SHEETMETAL_TABBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_TABBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_TabBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class TabBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SketchFeature;
    }
    class Section;
    namespace Features
    {
        namespace SheetMetal
        {
            class _TabBuilderBuilder;
            /** Represents a Tab feature builder. */
            class NXOPENCPPEXPORT TabBuilder : public Features::FeatureBuilder
            {
                /** This enum represents the extent direction for the Tab. */
                public: enum ThicknessSideOptions
                {
                    ThicknessSideOptionsSectionNormalSide/** Material created on the side of the section normal. */,
                    ThicknessSideOptionsSectionReverseNormalSide/** Material created on the side opposite to that of the section normal */
                };

                /** This enum represents the side of the section that the dimple punches material. The "left" option
                            represents the side to the left of a person who is walking along the section in the direction of its curves
                            when the section normal is pointing up. The "right" option represents the person's right hand side.
                            This interpretation is the same regardless of whether the section is open or closed. The "right" side at any point
                            along the section can also be represented by the vector resulting from the cross product of the curve tangent
                            (of the section curve at that point) and the section normal. The "left" side is the opposite. */
                public: enum SectionSideOptions
                {
                    SectionSideOptionsLeft/** Side pointed to by the inverse of the tangent cross normal vector */,
                    SectionSideOptionsRight/** Side pointed to by the tangent cross normal vector */
                };

                private: friend class  _TabBuilderBuilder;
                protected: TabBuilder();
                /**Returns  the thickness of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Expression * Thickness
                (
                );
                /**  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetThickness
                (
                    const NXString & thickness /** Tab thickness  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the sweep direction flag of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::TabBuilder::ThicknessSideOptions ThicknessSide
                (
                );
                /**Sets  the sweep direction flag of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetThicknessSide
                (
                    NXOpen::Features::SheetMetal::TabBuilder::ThicknessSideOptions flag /** Sweep Direction Flag */
                );
                /**Returns  the section of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Section * Section
                (
                );
                /**Sets  the section of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSection
                (
                    NXOpen::Section * section /** section tag */
                );
                /**Returns  the sketch of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SketchFeature * Sketch
                (
                );
                /**Sets  the sketch of tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSketch
                (
                    NXOpen::Features::SketchFeature * sketch /** sketch tag */
                );
                /**Returns  the tab type  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: bool IsSecondary
                (
                );
                /**Sets  the tab type  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSecondary
                (
                    bool is_secondary /** tab type */
                );
                /**Returns  the material side value of secondary tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SheetMetal::TabBuilder::SectionSideOptions MaterialSide
                (
                );
                /**Sets  the material side value of secondary tab  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetMaterialSide
                (
                    NXOpen::Features::SheetMetal::TabBuilder::SectionSideOptions section_side /** material side value */
                );
                /** Verify whether the builder data is valid for creating a Tab or not.
                             <br> 
                                 If the Builder data is valid, returned value shall be 0.
                             <br> 
                         @return  Data Validity Flag. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: int ValidateBuilderData
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
