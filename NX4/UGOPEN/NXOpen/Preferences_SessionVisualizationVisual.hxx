#ifndef NXOpen_PREFERENCES_SESSIONVISUALIZATIONVISUAL_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONVISUALIZATIONVISUAL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionVisualizationVisual.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class SessionVisualizationVisual;
    }
    class UI;
    namespace Preferences
    {
        /** Represents all UI based session Visualization visual preferences  <br> To obtain an instance of this class, refer to @link UI UI@endlink  <br> */
        class NXOPENUICPPEXPORT SessionVisualizationVisual
        {
            private: NXOpen::UI* m_owner;
            public: explicit SessionVisualizationVisual(NXOpen::UI *owner): m_owner(owner)
            {
            }
            public: tag_t Tag() const;
            /**Returns  the translucency flag. True value specifies that each shaded object is drawn with the translucency setting 
                specified with Edit->Object Display. False value specify that all objects in Fully Shaded or Partially Shaded 
                views appear opaque, regardless of their individual translucency settings.   <br> License requirements : None */
            public: bool Translucency
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link Translucency() Translucency@endlink instead.
            @deprecated
            */
            public: bool GetTranslucency
            (
            ) { return this->Translucency(); }
            /**Sets  the translucency flag. True value specifies that each shaded object is drawn with the translucency setting 
                specified with Edit->Object Display. False value specify that all objects in Fully Shaded or Partially Shaded 
                views appear opaque, regardless of their individual translucency settings.   <br> License requirements : None */
            public: void SetTranslucency
            (
                bool translucency /**  */
            );
            /**Returns  the line antialiasing flag. True value specifies that lines, curves, and edges are drawn more smoothly  <br> License requirements : None */
            public: bool LineAntialiasing
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link LineAntialiasing() LineAntialiasing@endlink instead.
            @deprecated
            */
            public: bool GetLineAntialiasing
            (
            ) { return this->LineAntialiasing(); }
            /**Sets  the line antialiasing flag. True value specifies that lines, curves, and edges are drawn more smoothly  <br> License requirements : None */
            public: void SetLineAntialiasing
            (
                bool line_antialiasing /**  */
            );
            /**Returns  the scene antialiasing flag.  <br> License requirements : None */
            public: bool FullSceneAntialiasing
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link FullSceneAntialiasing() FullSceneAntialiasing@endlink instead.
            @deprecated
            */
            public: bool GetFullSceneAntialiasing
            (
            ) { return this->FullSceneAntialiasing(); }
            /**Sets  the scene antialiasing flag.  <br> License requirements : None */
            public: void SetFullSceneAntialiasing
            (
                bool full_scene_antialiasing /**  */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
