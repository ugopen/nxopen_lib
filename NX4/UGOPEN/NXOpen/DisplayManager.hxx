#ifndef NXOpen_DISPLAYMANAGER_HXX_INCLUDED
#define NXOpen_DISPLAYMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DisplayManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/DisplayModification.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class DisplayManager;
    class Session;
    class DisplayModification;
    class DisplayableObject;
    /** Manages the display and changes to it  <br> To obtain an instance of this class, refer to @link Session Session@endlink  <br> */
    class NXOPENCPPEXPORT DisplayManager
    {
        private: NXOpen::Session* m_owner;
        public: explicit DisplayManager(NXOpen::Session *owner): m_owner(owner)
        {
        }
        public: tag_t Tag() const;
        /** 
              Constructs a new @link DisplayModification DisplayModification@endlink  object.
              @return  The new DisplayModification instance  <br> License requirements : None */
        public: NXOpen::DisplayModification * NewDisplayModification
        (
        );
        /** Blank a set of displayable objects  <br> License requirements : None */
        public: void BlankObjects
        (
            const std::vector<NXOpen::DisplayableObject *> & objects /** */
        );
        /** Unblank a set of displayable objects  <br> License requirements : None */
        public: void UnblankObjects
        (
            const std::vector<NXOpen::DisplayableObject *> & objects /** */
        );
        /** Ensures that previously invoked display operations are complete.  Called only by
                NXOpen applications that directly invoke Windows, MFC, or Motif
                functions to display dialogs.  This function is not needed when
                NXOpen dialogs are used.
             <br> License requirements : None */
        public: void MakeUpToDate
        (
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
