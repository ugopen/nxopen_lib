#ifndef NXOpen_GEOMETRICUTILITIES_FEATUREOPTIONS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_FEATUREOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_FeatureOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class FeatureOptions;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _FeatureOptionsBuilder;
        /** Represents various options supported on features. 
            */
        class NXOPENCPPEXPORT FeatureOptions : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the various body types */
            public: enum BodyStyle
            {
                BodyStyleSolid/** Solid Body */,
                BodyStyleSheet/** Sheet Body */
            };

            private: friend class  _FeatureOptionsBuilder;
            protected: FeatureOptions();
            /**Returns  the body type 
            		 <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOptions::BodyStyle BodyType
            (
            );
            /**Sets  the body type 
            		 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBodyType
            (
                NXOpen::GeometricUtilities::FeatureOptions::BodyStyle type /** in -> body type */
            );
            /** Validate Self
                 @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
