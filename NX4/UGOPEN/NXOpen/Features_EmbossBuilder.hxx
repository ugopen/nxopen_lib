#ifndef NXOpen_FEATURES_EMBOSSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_EmbossRegion.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EmbossBuilder;
    }
    namespace Features
    {
        class EmbossRegion;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _EmbossBuilderBuilder;
        /** Represents an emboss feature builder. 
                --Emboss Region  -> EmbossRegion
                      
                --Emboss tolerance
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateEmbossBuilder Features::FeatureCollection::CreateEmbossBuilder@endlink  <br> */
        class NXOPENCPPEXPORT EmbossBuilder : public Features::FeatureBuilder
        {
            private: friend class  _EmbossBuilderBuilder;
            protected: EmbossBuilder();
            /** Set the emboss region  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRegions
            (
                const std::vector<NXOpen::Features::EmbossRegion *> & regions /**Array of emboss region objects */
            );
            /** Get the emboss region  @return Array of emboss region objects  <br> License requirements : None */
            public: std::vector<NXOpen::Features::EmbossRegion *> GetRegions
            (
            );
            /**Sets   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /**Emboss tolerance */
            );
            /**Returns   <br> License requirements : None */
            public: double Tolerance
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
