#ifndef NXOpen_ROUTING_ROUTEPARTDESCRIPTOR_HXX_INCLUDED
#define NXOpen_ROUTING_ROUTEPARTDESCRIPTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_RoutePartDescriptor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class RoutePartDescriptor;
    }
    namespace Routing
    {
        class _RoutePartDescriptorBuilder;
        /** Represents a part descriptor chrx. */
        class NXOPENCPPEXPORT RoutePartDescriptor : public TaggedObject
        {
            /** Descriptor Type for a @link RoutePartDescriptor RoutePartDescriptor@endlink . */
            public: enum SourceType
            {
                SourceTypeNull/**  */,
                SourceTypePartAttribute/**  */,
                SourceTypeExpression/**  */,
                SourceTypeDumbCopy/**  */
            };

            /** Charx Type for a @link RoutePartDescriptor RoutePartDescriptor@endlink . */
            public: enum CharxType
            {
                CharxTypeInt/**  */,
                CharxTypeReal/**  */,
                CharxTypeSting = 4/**  */,
                CharxTypeAny = 6/**  */,
                CharxTypeRef = 10/**  */,
                CharxTypeAnyRef = 12/**  */
            };

            private: friend class  _RoutePartDescriptorBuilder;
            protected: RoutePartDescriptor();
            /**Returns  the descriptor type for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::Routing::RoutePartDescriptor::SourceType DescriptorSourceType
            (
            );
            /**Sets  the descriptor type for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetDescriptorSourceType
            (
                NXOpen::Routing::RoutePartDescriptor::SourceType type /** */
            );
            /**Returns  the charx type for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::Routing::RoutePartDescriptor::CharxType DescriptorCharxType
            (
            );
            /**Sets  the charx type for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetDescriptorCharxType
            (
                NXOpen::Routing::RoutePartDescriptor::CharxType type /** */
            );
            /**Returns  the title for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXString Title
            (
            );
            /**Sets  the title for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetTitle
            (
                const NXString & title /** */
            );
            /**Returns  the expression for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXString Expression
            (
            );
            /**Sets  the expression for the part descriptor used by Routing.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetExpression
            (
                const NXString & expression /** */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
