#ifndef NXOpen_FEATURES_DRAFTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DRAFTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DraftBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DraftBuilder;
    }
    class Direction;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class DraftVariableAngleData;
    }
    class NXObject;
    class ObjectList;
    namespace Features
    {
        class _DraftBuilderBuilder;
        /** Represents a Draft Feature Builder. It creates or edits a draft (Old name Taper) feature.
             <br> 
            This class provides methods to set various Draft feature parameters and set Input entities.
             <br> 
           
             <br> 
            Following are default values and options.
             <br>  
            <list type="table">
            <item>
            <term> Direction </term>                <description> Z direction </description>
            </item>
            <item> 
            <term> Draft method </term>             <description> @link  DraftBuilder::Method::Isocline   DraftBuilder::Method::Isocline @endlink  </description>
            </item>
            <item>
            <term> Draft All instances </term>      <description> true </description>
            </item>
            <item> 
            <term> Angle tolerance </term>          <description> 0.002/0.1 [rad/deg] </description> 
            </item>
            <item>
            <term> Distance tolerance </term>       <description> 0.004/0.1 [in/mm] </description> 
            </item>
            </list>  
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDraftBuilder Features::FeatureCollection::CreateDraftBuilder@endlink  <br> */
        class NXOPENCPPEXPORT DraftBuilder : public Features::FeatureBuilder
        {
            /** Describes the Draft type as true draft or isocline draft.
                   */
            public: enum Method
            {
                MethodIsocline/** Indicates use of isocline algorithm to create draft. Default value. */,
                MethodTrueDraft/** Indicates use of true draft algorithm to create draft.*/
            };

            /** Describes the different Draft types
                   */
            public: enum Type
            {
                TypeFace/** Face Draft type */,
                TypeEdge/** From Edges type */,
                TypeTangent/** Tangent Draft type */,
                TypePartingEdge/** Draft with Parting Edges type */
            };

            private: friend class  _DraftBuilderBuilder;
            protected: DraftBuilder();
            /**Sets  the smart direction for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** */
            );
            /**Returns  the smart direction for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the stationary entity for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStationaryEntity
            (
                NXOpen::NXObject * stationary_entity /** */
            );
            /**Returns  the stationary entity for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::NXObject * StationaryEntity
            (
            );
            /**Returns  the Data object containing list of draft faces SC Collectors and corresponding draft angles.      
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ObjectList * FaceSetAngleList
            (
            );
            /**Returns  the Data object containing list of draft edges SC Collectors and corresponding draft angles.      
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ObjectList * EdgeSetAngleList
            (
            );
            /**Returns  the Data object for Variable Angle Draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::DraftVariableAngleData * VariableAngleData
            (
            );
            /**Sets  the option "Draft all instances" [true/false]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftAllInstances
            (
                bool draft_all_instances /** */
            );
            /**Returns  the option "Draft all instances" [true/false]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool DraftAllInstances
            (
            );
            /**Sets  the distance tolerance in [in/mm]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distance_tolerance /** */
            );
            /**Returns  the distance tolerance in [in/mm]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double DistanceTolerance
            (
            );
            /**Sets  the angle tolerance in [rad/deg]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngleTolerance
            (
                double angle_tolerance /** */
            );
            /**Returns  the angle tolerance in [rad/deg]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double AngleTolerance
            (
            );
            /**Sets  the Draft method 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftIsoclineOrTruedraft
            (
                NXOpen::Features::DraftBuilder::Method draft_method /** */
            );
            /**Returns  the Draft method 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::DraftBuilder::Method DraftIsoclineOrTruedraft
            (
            );
            /** Sets the Draft type <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftType
            (
                NXOpen::Features::DraftBuilder::Type draft_type /** Draft type */
            );
            /** Sets the Variable Angle option <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetVariableAngleOption
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
