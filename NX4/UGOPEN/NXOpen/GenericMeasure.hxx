#ifndef NXOpen_GENERICMEASURE_HXX_INCLUDED
#define NXOpen_GENERICMEASURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GenericMeasure.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/MeasureManager.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class GenericMeasure;
    /** Represents a single valued measurement */
    class NXOPENCPPEXPORT GenericMeasure : public TransientObject
    {
        /** The types for a measurement */
        public: enum Type
        {
            TypeMinimumDistance/** */,
            TypeLocalMinimumDistance/** */,
            TypeMaximumDistance/** */,
            TypeProjectedDistance/** */,
            TypeRadialDistance/** */,
            TypeLength/** */,
            TypeTwoObjectAngle/** */,
            TypeThreePointAngle/** */,
            TypeFaceProperties/** */,
            TypeMassProperties/** */
        };

        public: explicit GenericMeasure(void *ptr);
        /**Returns  the type of the measurement  <br> License requirements : None */
        public: NXOpen::GenericMeasure::Type MeasurementType
        (
        );
        /** Free resources associated with the measure. After this method
          is called, it is illegal to use the object.  In .NET, this method
          is automatically called when the object is deleted by the garbage
          collector.  <br> License requirements : None */
        public: virtual ~GenericMeasure();
        /** Display information about a measurement.
           <br> In Interactive mode, output will be displayed in the listing window <br> 
           <br> In Batch mode, output will be displayed to the standard output (stdout) <br> 
           <br> License requirements : None */
        public: void Information
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
