#ifndef NXOpen_CONIC_HXX_INCLUDED
#define NXOpen_CONIC_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Conic.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Curve.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Conic;
    class Curve;
    class NXMatrix;
    class _ConicBuilder;
    /** Represents a conic curve.  The conic lies in the X-Y plane of the 
        orientation matrix for this conic.  The normal is along the Z axis
        of the matrix and the rotation angle is measured relative to the
        X and Y axes of the matrix.  The rotation angle of an ellipse is
        the angle at which the major axis is tilted in the counterclockwise
        direction from the X axis.  The rotation angle of a parabola is the
        angle formed between the axis of symmetry and the X axis. It is 
        measured in a counterclockwise direction with a pivot point at the
        vertex.  The rotation angle of a hyperbola is the angle at which 
        the semi-transverse axis makes with the X axis.  The pivot point is
        at the center of the hyperbola and the angle is measured in
        a counterclockwise direction.  In the case of an arc, the rotation 
        angle is always zero.   <br> This is an abstract class, and cannot be instantiated <br> */
    class NXOPENCPPEXPORT Conic : public Curve
    {
        private: friend class  _ConicBuilder;
        protected: Conic();
        /**Returns  the center.  <br> License requirements : None */
        public: NXOpen::Point3d CenterPoint
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link CenterPoint() CenterPoint@endlink instead.
        @deprecated
        */
        public: NXOpen::Point3d GetCenterPoint
        (
        ) { return this->CenterPoint(); }
        /**Returns  the rotation angle.  <br> License requirements : None */
        public: double RotationAngle
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link RotationAngle() RotationAngle@endlink instead.
        @deprecated
        */
        public: double GetRotationAngle
        (
        ) { return this->RotationAngle(); }
        /**Returns  the orientation matrix.   <br> License requirements : None */
        public: NXOpen::NXMatrix * Matrix
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link Matrix() Matrix@endlink instead.
        @deprecated
        */
        public: NXOpen::NXMatrix * GetMatrix
        (
        ) { return this->Matrix(); }
        /** Gets the orientation of the conic.  <br> License requirements : None */
        public: void GetOrientation
        (
            NXOpen::Point3d* center /** */,
            NXOpen::Vector3d* x_direction /** */,
            NXOpen::Vector3d* y_direction /** */
        );
        /** Sets the center of the conic.  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
        public: void SetOrientation
        (
            const NXOpen::Point3d & center /** */,
            const NXOpen::Vector3d & x_direction /** */,
            const NXOpen::Vector3d & y_direction /** */
        );
    };
}
#undef EXPORTLIBRARY
#endif
