#ifndef NXOpen_COATINGS_COATINGMANAGER_HXX_INCLUDED
#define NXOpen_COATINGS_COATINGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Coatings_CoatingManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libcoatingsopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Coatings
    {
        class CoatingManager;
    }
    class Session;
    namespace Coatings
    {
        class CoatingLayerBuilder;
    }
    namespace Coatings
    {
        class CoatingLayerCollection;
    }
    namespace Coatings
    {
        class CoatingStackCollection;
    }
    namespace Coatings
    {
        class MassPropertiesCollection;
    }
    namespace Features
    {
        class CoatingsCollection;
    }
    class NXObject;
    class PhysicalMaterial;
    namespace Coatings
    {
        class CoatingManagerImpl;
        /**  @brief  Represents a manager of Coatings objects  

          <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class COATINGSOPENCPPEXPORT  CoatingManager
        {
            public: /** This defines the prototype for the IMM UI plugin used by the Coating Layer.
                        You can use this plugin to IMM NXOpen dialog and get material data.
                    
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_coatings (" Coatings") */
            typedef NXOpen::Callback1<void, NXOpen::Coatings::CoatingLayerBuilder *> ImmUiPlugin;
            private: CoatingManagerImpl * m_coatingmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CoatingManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static CoatingManager* theCoatingManager;
            /** Returns the CoatingManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static CoatingManager* GetCoatingManager(NXOpen::Session *owner);
            public: ~CoatingManager();
            /** Sets the imm ui plugin.
                        Will throw an error if one is already registered.
                    
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_coatings (" Coatings") */
            public: void SetImmUiPlugin
            (
                const NXOpen::Coatings::CoatingManager::ImmUiPlugin&  immUiPlugin /** The method you want Coatings to use to choose a IMM material. */
            );
            /** Removes any registered IMM UI plugin 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_coatings (" Coatings") */
            public: void RemoveImmUiPlugin
            (
            );
            /** Gets the mass in grams for the Coating Layer material on
                        the input bodies in the reference set.
                    
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_coatings (" Coatings") */
            public: double GetMassInGrams
            (
                NXOpen::PhysicalMaterial * physMaterial /** phys material */ ,
                const std::vector<NXOpen::NXObject *> & objects /** bodies associated with this material in reference set */
            );


            /** Returns the @link NXOpen::Features::CoatingsCollection NXOpen::Features::CoatingsCollection@endlink  belonging to this application. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::Features::CoatingsCollection *CoatingsCollection();
            /** Returns the @link NXOpen::Coatings::CoatingLayerCollection NXOpen::Coatings::CoatingLayerCollection@endlink  belonging to this application. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::Coatings::CoatingLayerCollection *CoatingLayers();
            /** Returns the @link NXOpen::Coatings::CoatingStackCollection NXOpen::Coatings::CoatingStackCollection@endlink  belonging to this application. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::Coatings::CoatingStackCollection *CoatingStacks();
            /** Returns the @link NXOpen::Coatings::MassPropertiesCollection NXOpen::Coatings::MassPropertiesCollection@endlink  belonging to this application. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::Coatings::MassPropertiesCollection *MassProperties();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
