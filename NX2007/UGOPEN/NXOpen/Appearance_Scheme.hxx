#ifndef NXOpen_APPEARANCE_SCHEME_HXX_INCLUDED
#define NXOpen_APPEARANCE_SCHEME_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Appearance_Scheme.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Appearance_Designator.hxx>
#include <NXOpen/Appearance_VisualMaterialUsage.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_appearance_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Appearance
    {
        class Scheme;
    }
    namespace Appearance
    {
        class Designator;
    }
    namespace Appearance
    {
        class VisualMaterialUsage;
    }
    class NXObject;
    namespace Appearance
    {
        class _SchemeBuilder;
        class SchemeImpl;
        /**
                This is Appearance Scheme class in NX data model. This class holds information about the 
                visual material mapping for the Designator. Each scheme is assigned to some Appearance Area
                which holds the Designators.
             <br> Use @link NXOpen::Appearance::AppearanceSchemeBuilder NXOpen::Appearance::AppearanceSchemeBuilder@endlink  to create the instance of this class.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_APPEARANCEEXPORT  Scheme : public NXOpen::NXObject
        {
            private: SchemeImpl * m_scheme_impl;
            private: friend class  _SchemeBuilder;
            protected: Scheme();
            public: ~Scheme();
            /** This function gets the scheme name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            public: NXString GetSchemeName
            (
            );
            /** This function gets the scheme description. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            public: NXString GetSchemeDescription
            (
            );
            /** Returns the Designator objects under the scheme.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void GetAppearanceDesignators
            (
                std::vector<NXOpen::Appearance::Designator *> & designators /** List of Appearance Designators in the Scheme*/
            );
            /** This function will get visual material data for the input designator under scheme.
                        Note: This function allocates memory for visualMaterialData,
                        its callers responsiblity to release visualMaterialData memory.
                     @return  Visual material data returned for input designator
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXOpen::Appearance::VisualMaterialUsage * GetVisualMaterialForDesignator
            (
                NXOpen::Appearance::Designator * designator /** Designator object to get visual material data*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
