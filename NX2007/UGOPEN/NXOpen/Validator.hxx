#ifndef NXOpen_VALIDATOR_HXX_INCLUDED
#define NXOpen_VALIDATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Validator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DexBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Validator;
    class DexBuilder;
    class _ValidatorBuilder;
    class ValidatorImpl;

    /// \cond NX_NO_DOC 
    /**
    Represents a @link NXOpen::Validator NXOpen::Validator@endlink 
    This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
    NULL object will be returned from Commit().
    The workpart should be present in the session before calling commit().  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateValidator  NXOpen::DexManager::CreateValidator @endlink  <br> 
     <br>  Created in NX1847.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Validator : public NXOpen::DexBuilder
    {
        private: ValidatorImpl * m_validator_impl;
        private: friend class  _ValidatorBuilder;
        protected: Validator();
        public: ~Validator();

        /// \cond NX_NO_DOC 
        /**Returns  the output file - the name of file where output is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the output file - the name of file where output is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - the name of file where output is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the log file - the name of logfile where log is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXString LogFile
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the log file - the name of logfile where log is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetLogFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the log file - the name of logfile where log is being written 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void SetLogFile
        (
            const char * filename /** filename */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the product name - the name of the product 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ProductName
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the product name - the name of the product 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetProductName
        (
            const NXString & productName /** productname */ 
        );
        /**Sets  the product name - the name of the product 
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void SetProductName
        (
            const char * productName /** productname */ 
        );

        /// \endcond 
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
