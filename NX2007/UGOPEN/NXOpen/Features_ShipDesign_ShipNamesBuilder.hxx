#ifndef NXOpen_FEATURES_SHIPDESIGN_SHIPNAMESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SHIPNAMESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ShipNamesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ShipNameFieldBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipNamesBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipNameFieldBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            /** The type of Ship Object for which automatically generated names will be created */
            enum ShipnamesBuilderType
            {
                ShipnamesBuilderTypeNone/** none */ ,
                ShipnamesBuilderTypeHull/** hull */ ,
                ShipnamesBuilderTypeDeck/** deck */ ,
                ShipnamesBuilderTypeLongitudinalBulkhead/** longitudinal bulkhead */ ,
                ShipnamesBuilderTypeTransverseBulkhead/** transverse bulkhead */ ,
                ShipnamesBuilderTypeStiffenerSystem/** stiffener system */ ,
                ShipnamesBuilderTypeEdgeReinforcementSystem/** edge reinforcement system */ ,
                ShipnamesBuilderTypePillarSystem/** pillar system */ ,
                ShipnamesBuilderTypeSeam/** seam */ ,
                ShipnamesBuilderTypeGenericPlateSystem/** generic plate system */ ,
                ShipnamesBuilderTypeStandardPart/** standard part */ ,
                ShipnamesBuilderTypeCollarPlate/** collar plate */ ,
                ShipnamesBuilderTypeBracket/** bracket */ ,
                ShipnamesBuilderTypePlate/** plate */ ,
                ShipnamesBuilderTypeProfile/** profile */ ,
                ShipnamesBuilderTypePillar/** pillar */ ,
                ShipnamesBuilderTypeStandardPartCollarPlate/** standard part collar plate */ ,
                ShipnamesBuilderTypeStandardPartBracket/** standard part bracket */ ,
                ShipnamesBuilderTypeGrid/** grid */ ,
                ShipnamesBuilderTypeRoom/** room */ ,
                ShipnamesBuilderTypeBasicDesignCollarPlate/** basic design collar plate */ ,
                ShipnamesBuilderTypeBasicDesignBracket/** basic design bracket */ ,
                ShipnamesBuilderTypeBasicDesignStandardPartCollarPlate/** basic design standard part collar plate */ ,
                ShipnamesBuilderTypeBasicDesignStandardPartBracket/** basic design standard part bracket */ ,
                ShipnamesBuilderTypeFlatBar/** flat bar */ ,
                ShipnamesBuilderTypeStructuredesignStructure/** structuredesign structure */ ,
                ShipnamesBuilderTypeStructuredesignMember/** structuredesign member */ ,
                ShipnamesBuilderTypeStructuredesignCorner/** structuredesign corner */ ,
                ShipnamesBuilderTypeStructuredesignEndcap/** structuredesign endcap */ ,
                ShipnamesBuilderTypeStructuredesignGusset/** structuredesign gusset */ ,
                ShipnamesBuilderTypeStructuredesignMountingfeet/** structuredesign mountingfeet */ ,
                ShipnamesBuilderTypeStructuredesignGrabtab/** structuredesign grabtab */ ,
                ShipnamesBuilderTypeStructuredesignBeampreparation/** structuredesign beampreparation */ ,
                ShipnamesBuilderTypeStructuredesignConsolidate/** structuredesign consolidate */ ,
                ShipnamesBuilderTypeStructuredesignBoltedconnection/** structuredesign boltedconnection */ ,
                ShipnamesBuilderTypeStructuredesignConsolidatemember/** structuredesign consolidatemember */ ,
                ShipnamesBuilderTypeStructuredesignStiffener/** structuredesign stiffener */ 
            };

            /** The methods of generation of position information */
            enum ShipnamesBuilderMethod
            {
                ShipnamesBuilderMethodUnknown/** unknown */  = -1,
                ShipnamesBuilderMethodMoldingFace/** molding face */ ,
                ShipnamesBuilderMethodPoint/** point */ ,
                ShipnamesBuilderMethodParentBody/** parent body */ 
            };

            /** The version of Ship Object naming rule */
            enum ShipnamesBuilderVersion
            {
                ShipnamesBuilderVersionLegacy/** legacy */ ,
                ShipnamesBuilderVersionPositionInformation/** position information */ 
            };

        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _ShipNamesBuilderBuilder;
            class ShipNamesBuilderImpl;
            /**
                        This class provides the mechanism for defining the names of Basic Design objects
                        such as Decks, Bulkheads, Stiffener Systems, etc.

                        Each Ship object type (Deck, etc.) has a specific format for the names defined in
                        a "recipes" files located at UGII_BASE_DIR/nxship/data/ShipNamesRecipes.xml.

                        A recipe is composed of two or more "fields". Individual fields are defined via
                        a @link NXOpen::Features::ShipDesign::ShipNameFieldBuilder NXOpen::Features::ShipDesign::ShipNameFieldBuilder@endlink object.
                    
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ShipNamesBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                private: ShipNamesBuilderImpl * m_shipnamesbuilder_impl;
                private: friend class  _ShipNamesBuilderBuilder;
                protected: ShipNamesBuilder();
                public: ~ShipNamesBuilder();
                /**Returns 
                            the Ship object type (Hull, Deck, etc.) for which names will be generated.
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipnamesBuilderType ShipObjectType
                (
                );
                /**Sets 
                            the Ship object type (Hull, Deck, etc.) for which names will be generated.
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetShipObjectType
                (
                    NXOpen::Features::ShipDesign::ShipnamesBuilderType type /** type */ 
                );
                /**Returns 
                            the Context Attribute value. This is the value of the SAW_SUB_NAME part
                            attribute added to the newly created / named Ship objects.
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXString ContextAttribute
                (
                );
                /**Sets 
                            the Context Attribute value. This is the value of the SAW_SUB_NAME part
                            attribute added to the newly created / named Ship objects.
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetContextAttribute
                (
                    const NXString & newValue /** newvalue */ 
                );
                /**Sets 
                            the Context Attribute value. This is the value of the SAW_SUB_NAME part
                            attribute added to the newly created / named Ship objects.
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                void SetContextAttribute
                (
                    const char * newValue /** newvalue */ 
                );
                /**
                            Get the number of ShipNameFields in this recipe
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: int GetFieldcount
                (
                );
                /**
                            Get the ShipNameField at the given index (starting at 0)
                            
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipNameFieldBuilder * GetField
                (
                    int idx /** idx */ 
                );
                /**
                            Set current grid part UID.
                            
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetGridPartUID
                (
                    const NXString & gridPartUID /** gridpartuid */ 
                );
                /**
                            Set current grid part UID.
                            
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                void SetGridPartUID
                (
                    const char * gridPartUID /** gridpartuid */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not yet implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
