#ifndef NXOpen_DIAGRAMMING_VIEWOPERATIONS_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_VIEWOPERATIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_ViewOperations.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_Sheet.hxx>
#include <NXOpen/Diagramming_SheetElement.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class ViewOperations;
    }
    namespace Diagramming
    {
        class SheetManager;
    }
    namespace Diagramming
    {
        class Sheet;
    }
    namespace Diagramming
    {
        class SheetElement;
    }
    namespace Diagramming
    {
        class ViewOperationsImpl;
        /**
             View operations to be performed on a @link Diagramming::Sheet Diagramming::Sheet@endlink .
             <br> To obtain an instance of this class, refer to @link NXOpen::Diagramming::SheetManager  NXOpen::Diagramming::SheetManager @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  ViewOperations
        {
            private: ViewOperationsImpl * m_viewoperations_impl;
            private: NXOpen::Diagramming::SheetManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ViewOperations(NXOpen::Diagramming::SheetManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ViewOperations();
            /** Fits the sheet 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void Fit
            (
                NXOpen::Diagramming::Sheet * sheet /** sheet */ 
            );
            /** Fits the sheet to the currently selected objects 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void FitToElements
            (
                NXOpen::Diagramming::Sheet * sheet /** sheet */ ,
                const std::vector<NXOpen::Diagramming::SheetElement *> & elements /** The elements to be fit to */
            );
            /** Pans the sheet to the given location 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetViewport
            (
                NXOpen::Diagramming::Sheet * sheet /** sheet */ ,
                double x /** x */ ,
                double y /** y */ ,
                double width /** width */ ,
                double height /** height */ 
            );
            /** Zooms the sheet to a given scale 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void Scale
            (
                NXOpen::Diagramming::Sheet * sheet /** sheet */ ,
                double scale /** scale */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
