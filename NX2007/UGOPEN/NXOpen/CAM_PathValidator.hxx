#ifndef NXOpen_CAM_PATHVALIDATOR_HXX_INCLUDED
#define NXOpen_CAM_PATHVALIDATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PathValidator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Path.hxx>
#include <NXOpen/CAM_PathEvent.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PathValidator;
    }
    class Builder;
    namespace CAM
    {
        class PathEvent;
    }
    namespace CAM
    {
        class _PathValidatorBuilder;
        class PathValidatorImpl;

        /// \cond NX_NO_DOC 
        /** Represents a tool path validator  <br> Use the @link NXOpen::CAM::CAMSetup NXOpen::CAM::CAMSetup@endlink  class to create a PathValidator object.  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PathValidator : public NXOpen::Builder
        {
            private: PathValidatorImpl * m_pathvalidator_impl;
            private: friend class  _PathValidatorBuilder;
            protected: PathValidator();
            public: ~PathValidator();

            /// \cond NX_NO_DOC 
            /** Set validation creteria with finding types to check and report.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetValidationCriteria
            (
                const std::vector<NXOpen::CAM::Path::FindingTypes> & criteria /** criteria with findings */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Validate the tool path event motion and get all findings for it. @return  array of findings 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAM::Path::FindingTypes> ValidatePathEvent
            (
                NXOpen::CAM::PathEvent * pathEvent /** pathevent */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
