#ifndef NXOpen_TOOLING_GUIDEDEXTENSIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_GUIDEDEXTENSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_GuidedExtensionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class GuidedExtensionBuilder;
    }
    class Builder;
    class Curve;
    class Edge;
    class Expression;
    class ScCollector;
    class Section;
    namespace Tooling
    {
        class _GuidedExtensionBuilderBuilder;
        class GuidedExtensionBuilderImpl;
        /** Builder for creating Guided Extension surface in NX  <br> To create a new instance of this class, use @link NXOpen::Tooling::GuidedExtensionManager::CreateBuilder  NXOpen::Tooling::GuidedExtensionManager::CreateBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AngleTolerance </term> <description> 
         
        0.5 </description> </item> 

        <item><term> 
         
        CheckSurfaces </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DistanceTolerance </term> <description> 
         
        0.01 </description> </item> 

        <item><term> 
         
        ExtendLength.Value </term> <description> 
         
        10 (millimeters part), 10 (inches part) </description> </item> 

        <item><term> 
         
        GuideLineAngle1.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        GuideLineAngle2.Value </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  GuidedExtensionBuilder : public NXOpen::Builder
        {
            /** Segment type for segments */
            public: enum SegmentType
            {
                SegmentTypeNormal/** Normal segment type */,
                SegmentTypeTransition/** Transition segment type */,
                SegmentTypeBypass/** Bypass segment type */
            };

            private: GuidedExtensionBuilderImpl * m_guidedextensionbuilder_impl;
            private: friend class  _GuidedExtensionBuilderBuilder;
            protected: GuidedExtensionBuilder();
            public: ~GuidedExtensionBuilder();
            /**Returns  the sheet edges of a sheet body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Section * SheetEdges
            (
            );
            /**Returns  the list of segment edges that represent a segment 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::ScCollector * SegmentEdges
            (
            );
            /** The action that resets all the segments in the loop to their original state 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void ResetAllSegments
            (
            );
            /**Returns  the extend length for use in creating the guided extension surfaces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Expression * ExtendLength
            (
            );
            /**Returns  the rotation angle for the first guide line at one of the end points of the selected segment 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Expression * GuideLineAngle1
            (
            );
            /**Returns  the rotation angle for the second guide line at one of the end points of the selected segment 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Expression * GuideLineAngle2
            (
            );
            /**Returns  the option for checking the resulting guided extension surfaces for geometry issues 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: bool CheckSurfaces
            (
            );
            /**Sets  the option for checking the resulting guided extension surfaces for geometry issues 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetCheckSurfaces
            (
                bool checkSurfaces /** checksurfaces */ 
            );
            /**Returns  the distance tolerance for use in creating the guided extension surfaces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance for use in creating the guided extension surfaces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /**Returns  the angle tolerance for use in creating the guided extension surfaces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance for use in creating the guided extension surfaces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angletolerance */ 
            );
            /** Updates the information for the sheet edges of the selected section whenever sheet edges are selected or de-selected. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void UpdateSheetEdges
            (
            );
            /** Sets the segment type for the selected segment. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetSelectedSegmentType
            (
                NXOpen::Tooling::GuidedExtensionBuilder::SegmentType segmentType /** Segment type for the selected segment */
            );
            /** Merges the selected segment with its neighboring segments. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void MergeSegment
            (
            );
            /** Splits the selected segment into multiple segments by placing guide lines at end points of the edges for the selected segment. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SplitSegment
            (
            );
            /** Unmerges the selected segment restoring the original segments before the merge using @link Tooling::GuidedExtensionBuilder::MergeSegment Tooling::GuidedExtensionBuilder::MergeSegment@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void RestoreSegments
            (
            );
            /** Creates a guide line at one of the end points of the sheet edge in the selection.  @return  Guide line created 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Curve * CreateGuideLine
            (
                NXOpen::Edge * assocEdge /** Associated curve of the guide line to be created */,
                const NXOpen::Point3d & guideLinePnt /** Guide line point */,
                const NXOpen::Vector3d & guideLineVector /** Guide line vector */,
                double guideLineLength /** Guide line length */
            );
            /** Updates the length of all the guide lines whenever the user changes the extend length of the surfaces interactively. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void UpdateAllGuideLinesLength
            (
            );
            /** Changes the direction and length of a guide line. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void ChangeGuideLineDirectionAndLength
            (
                NXOpen::Curve * guideLine /** Guide line to be changed */,
                const NXOpen::Vector3d & guideLineVector /** Direction vector */,
                double guideLineLength /** Length of guide line */
            );
            /** Sets the loop index for the last selected loop which contains the last selected edge. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetLastSelectedLoopIndex
            (
                int lastSelectedLoopIndex /** Loop index of the last selected loop */
            );
            /** Reverses surface extend direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR nx_freeform_2 ("advanced freeform modeling") OR ug_mold_design ("UG MOLD") OR die_engineering ("DIE ENGINEERING") */
            public: void SetReverseExtendDirection
            (
                bool reverseExtendDirection /** Reverse surface extend direction */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
