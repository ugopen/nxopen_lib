#ifndef NXOpen_CAE_MODIFIABLEFEMODELOCCATTRIBUTE_HXX_INCLUDED
#define NXOpen_CAE_MODIFIABLEFEMODELOCCATTRIBUTE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModifiableFEModelOccAttribute.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AlternateFemRepresentationSource.hxx>
#include <NXOpen/CAE_FEModelOccAttribute.hxx>
#include <NXOpen/CAE_FEModelOccAttribute.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModifiableFEModelOccAttribute;
    }
    namespace CAE
    {
        class AlternateFemRepresentationSource;
    }
    namespace CAE
    {
        class FEModelOccAttribute;
    }
    namespace CAE
    {
        class _ModifiableFEModelOccAttributeBuilder;
        class ModifiableFEModelOccAttributeImpl;
        /**  @brief  This class represents an Interface to the Finite Element Model.  

          
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModifiableFEModelOccAttribute : public NXOpen::CAE::FEModelOccAttribute
        {
            private: ModifiableFEModelOccAttributeImpl * m_modifiablefemodeloccattribute_impl;
            private: friend class  _ModifiableFEModelOccAttributeBuilder;
            protected: ModifiableFEModelOccAttribute();
            public: ~ModifiableFEModelOccAttribute();
            /** Set the representation type to base_fem
                     
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetRepToBaseFem
            (
            );
            /** Set the alternate representation type by its neutral name in the current analysis type
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetAltRepType
            (
                const NXString & pcAltRepDescNeutralName /** pcaltrepdescneutralname */ ,
                NXOpen::CAE::FEModelOccAttribute::AltRepLengthUnitType lengthUnits /** lengthunits */ ,
                NXOpen::CAE::FEModelOccAttribute::AltRepMassUnitType massUnits /** massunits */ ,
                NXOpen::CAE::AlternateFemRepresentationSource * femdataset /** femdataset */ ,
                const NXString & pcFileName /** pcfilename */ 
            );
            /** Set the alternate representation type by its neutral name in the current analysis type
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetAltRepType
            (
                const char * pcAltRepDescNeutralName /** pcaltrepdescneutralname */ ,
                NXOpen::CAE::FEModelOccAttribute::AltRepLengthUnitType lengthUnits /** lengthunits */ ,
                NXOpen::CAE::FEModelOccAttribute::AltRepMassUnitType massUnits /** massunits */ ,
                NXOpen::CAE::AlternateFemRepresentationSource * femdataset /** femdataset */ ,
                const char * pcFileName /** pcfilename */ 
            );
            /** Reload super element file and update connection node data 
                     
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void ReloadSuperElementFile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
