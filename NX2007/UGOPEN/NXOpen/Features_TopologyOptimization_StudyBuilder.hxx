#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_STUDYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_STUDYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimization_StudyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace TopologyOptimization
        {
            class StudyBuilder;
        }
    }
    class Builder;
    class Direction;
    class Expression;
    namespace Features
    {
        namespace TopologyOptimization
        {
            class _StudyBuilderBuilder;
            class StudyBuilderImpl;
            /**
                    Represents a @link Features::TopologyOptimization::Study Features::TopologyOptimization::Study@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::TopologyOptimizationFeature::CreateStudyBuilder  NXOpen::Features::TopologyOptimizationFeature::CreateStudyBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AnalysisType </term> <description> 
             
            LinearStatics </description> </item> 

            <item><term> 
             
            ConstantTemperature.Value </term> <description> 
             
            20 (millimeters part), 68 (inches part) </description> </item> 

            <item><term> 
             
            GravityEnabled </term> <description> 
             
            False </description> </item> 

            <item><term> 
             
            GravityMagnitude.Value </term> <description> 
             
            9806.65 (millimeters part), 32.17417 (inches part) </description> </item> 

            <item><term> 
             
            OptimizationObjectiveType </term> <description> 
             
            MaximumStiffness </description> </item> 

            <item><term> 
             
            ResolutionVoxelSize.Value </term> <description> 
             
            1 (millimeters part), 0.04 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  StudyBuilder : public NXOpen::Builder
            {
                /** Study Analysis type */
                public: enum AnalysisOption
                {
                    AnalysisOptionLinearStatics/** linear statics */ ,
                    AnalysisOptionNormalModes/** normal modes */ 
                };

                /** Study Optimization Objective type */
                public: enum OptimizationObjectiveOption
                {
                    OptimizationObjectiveOptionMinimumMass/** minimum mass */ ,
                    OptimizationObjectiveOptionMinimumVolume/** minimum volume */ ,
                    OptimizationObjectiveOptionMaximumStiffness/** maximum stiffness */ ,
                    OptimizationObjectiveOptionMaximumFirstFlexibleMode/** maximum first flexible mode */ 
                };

                private: StudyBuilderImpl * m_studybuilder_impl;
                private: friend class  _StudyBuilderBuilder;
                protected: StudyBuilder();
                public: ~StudyBuilder();
                /**Returns  the analysis type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::TopologyOptimization::StudyBuilder::AnalysisOption AnalysisType
                (
                );
                /**Sets  the analysis type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetAnalysisType
                (
                    NXOpen::Features::TopologyOptimization::StudyBuilder::AnalysisOption analysisType /** analysistype */ 
                );
                /**Returns  the study name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString StudyName
                (
                );
                /**Sets  the study name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetStudyName
                (
                    const NXString & studyName /** studyname */ 
                );
                /**Sets  the study name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                void SetStudyName
                (
                    const char * studyName /** studyname */ 
                );
                /**Returns  the optimization objective type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::TopologyOptimization::StudyBuilder::OptimizationObjectiveOption OptimizationObjectiveType
                (
                );
                /**Sets  the optimization objective type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetOptimizationObjectiveType
                (
                    NXOpen::Features::TopologyOptimization::StudyBuilder::OptimizationObjectiveOption optimizationObjectiveType /** optimizationobjectivetype */ 
                );
                /**Returns  the gravity toggle 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool GravityEnabled
                (
                );
                /**Sets  the gravity toggle 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetGravityEnabled
                (
                    bool gravityEnabled /** gravityenabled */ 
                );
                /**Returns  the gravity magnitude 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GravityMagnitude
                (
                );
                /**Returns  the gravity direction 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * GravityDirection
                (
                );
                /**Sets  the gravity direction 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetGravityDirection
                (
                    NXOpen::Direction * gravityDirection /** gravitydirection */ 
                );
                /**Returns  the constant temperature 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ConstantTemperature
                (
                );
                /**Returns  the resolution voxel size 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ResolutionVoxelSize
                (
                );
                /**Returns  the study quality. It has range 1 to 10. 
                                value 1 means high quality but could take long time to get ultra fine optimization result;
                                value 10 means low quality and get coarse optimization result.
                            
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int StudyQuality
                (
                );
                /**Sets  the study quality. It has range 1 to 10. 
                                value 1 means high quality but could take long time to get ultra fine optimization result;
                                value 10 means low quality and get coarse optimization result.
                            
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetStudyQuality
                (
                    int studyQualityFactor /** studyqualityfactor */ 
                );
                /** Set resolution voxel size by the given study quality 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : des_top_opt ("Topology Optimization for Designers") OR sc_des_topol_opt (" Topology Optimization for Designers") */
                public: void SetResolutionVoxelSizeByStudyQuality
                (
                    int studyQualityFactor /** studyqualityfactor */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
