#ifndef NXOpen_CAM_ONMACHINEPROBINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_ONMACHINEPROBINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_OnMachineProbingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_OperationBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class OnMachineProbingBuilder;
    }
    namespace CAM
    {
        class OperationBuilder;
    }
    class SelectNXObjectList;
    namespace CAM
    {
        class _OnMachineProbingBuilderBuilder;
        class OnMachineProbingBuilderImpl;
        /** Represents the builder for an on machine probing path.  <br> To create a new instance of this class, use @link NXOpen::CAM::OperationCollection::CreateOnMachineProbingBuilder  NXOpen::CAM::OperationCollection::CreateOnMachineProbingBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  OnMachineProbingBuilder : public NXOpen::CAM::OperationBuilder
        {
            /** the motion output type */
            public: enum MotionOutputType
            {
                MotionOutputTypeMachineCycle/** machine cycle */ ,
                MotionOutputTypeSingleMoves/** single moves */ 
            };

            /** the geometry selection method */
            public: enum SelectionMethodType
            {
                SelectionMethodTypeFeature/** feature */ ,
                SelectionMethodTypeFaces/** faces */ ,
                SelectionMethodTypeCurves/** curves */ ,
                SelectionMethodTypePoints/** points */ 
            };

            /** the IPW type */
            public: enum InProcessWorkpieceType
            {
                InProcessWorkpieceTypeNone/** none */ ,
                InProcessWorkpieceTypeUse3D/** use3d */ ,
                InProcessWorkpieceTypeLocal/** local */ 
            };

            /** the control point type */
            public: enum ControlPointType
            {
                ControlPointTypeInProcessFeature/** in process feature */ ,
                ControlPointTypeMachiningFeature/** machining feature */ 
            };

            /** the intersection strategy */
            public: enum IntersectionStrategyType
            {
                IntersectionStrategyTypeNone/** none */ ,
                IntersectionStrategyTypePart/** part */ ,
                IntersectionStrategyTypeIpw/** ipw */ ,
                IntersectionStrategyTypePartandIPW/** partand ipw */ 
            };

            private: OnMachineProbingBuilderImpl * m_onmachineprobingbuilder_impl;
            private: friend class  _OnMachineProbingBuilderBuilder;
            protected: OnMachineProbingBuilder();
            public: ~OnMachineProbingBuilder();
            /** Displays the selected geometry 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void ShowGeometry
            (
            );
            /**Returns  the motion output type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OnMachineProbingBuilder::MotionOutputType MotionOutput
            (
            );
            /**Sets  the motion output type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMotionOutput
            (
                NXOpen::CAM::OnMachineProbingBuilder::MotionOutputType motionOutput /** motionoutput */ 
            );
            /**Returns  the cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Cycle
            (
            );
            /**Sets  the cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCycle
            (
                const NXString & cycle /** cycle */ 
            );
            /**Sets  the cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetCycle
            (
                const char * cycle /** cycle */ 
            );
            /** Locks or unlocks the cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void CycleLock
            (
            );
            /** Opens the probing parameters dialog 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ProbingParameters
            (
            );
            /**Returns  the selection method 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OnMachineProbingBuilder::SelectionMethodType SelectionMethod
            (
            );
            /**Sets  the selection method 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSelectionMethod
            (
                NXOpen::CAM::OnMachineProbingBuilder::SelectionMethodType selectionMethod /** selectionmethod */ 
            );
            /**Returns  the geometry selected 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectFeatureGeometry
            (
            );
            /** Gets the inspect approach direction  @return  the inspection direction values 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetInspectDirection
            (
            );
            /** Sets the inspect approach direction 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInspectDirection
            (
                const std::vector<double> & direction /** the inspection direction values */
            );
            /** Removes a feature from the inspected geometry list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void FeatureRemove
            (
            );
            /** Moves up a feature from the inspected geometry list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void FeatureMoveUp
            (
            );
            /** Moves down a feature from the inspected geometry list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void FeatureMoveDown
            (
            );
            /**Returns  the ipw usage 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OnMachineProbingBuilder::InProcessWorkpieceType InProcessWorkpiece
            (
            );
            /**Sets  the ipw usage 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInProcessWorkpiece
            (
                NXOpen::CAM::OnMachineProbingBuilder::InProcessWorkpieceType ipwType /** ipwtype */ 
            );
            /**Returns  the inspection area 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString InspectionArea
            (
            );
            /**Sets  the inspection area 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInspectionArea
            (
                const NXString & inspectionArea /** inspectionarea */ 
            );
            /**Sets  the inspection area 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetInspectionArea
            (
                const char * inspectionArea /** inspectionarea */ 
            );
            /**Returns  the control point 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OnMachineProbingBuilder::ControlPointType ControlPoint
            (
            );
            /**Sets  the control point 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetControlPoint
            (
                NXOpen::CAM::OnMachineProbingBuilder::ControlPointType controlPoint /** controlpoint */ 
            );
            /**Returns  the inspection depth 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double InspectionDepth
            (
            );
            /**Sets  the inspection depth 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInspectionDepth
            (
                double inspectionDepth /** inspectiondepth */ 
            );
            /** Locks or unlocks the inspection depth 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void InspectionDepthLock
            (
            );
            /**Returns  the inspection offset 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double InspectionOffset
            (
            );
            /**Sets  the inspection offset 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInspectionOffset
            (
                double inspectionOffset /** inspectionoffset */ 
            );
            /** Locks or unlocks the inspection offset 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void InspectionOffsetLock
            (
            );
            /**Returns  the intersection strategy 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OnMachineProbingBuilder::IntersectionStrategyType IntersectionStrategy
            (
            );
            /**Sets  the intersection strategy 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIntersectionStrategy
            (
                NXOpen::CAM::OnMachineProbingBuilder::IntersectionStrategyType intersectionStrategy /** intersectionstrategy */ 
            );
            /**Returns  the inspection cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString InspectionCycle
            (
            );
            /**Sets  the inspection cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetInspectionCycle
            (
                const NXString & inspCycle /** inspcycle */ 
            );
            /**Sets  the inspection cycle name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetInspectionCycle
            (
                const char * inspCycle /** inspcycle */ 
            );
            /** Locks or unlocks the inspection cycle 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void InspectionCycleLock
            (
            );
            /** Finds the probing cycle and creates the motion to inspect selected geometry 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ProcessSelectedGeometry
            (
            );
            /** Gets the parameters for a probing cycle 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ProcessSelectedCycle
            (
            );
            /** Creates the toolpath moves for a probing cycle 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void CreateToolpathMoves
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
