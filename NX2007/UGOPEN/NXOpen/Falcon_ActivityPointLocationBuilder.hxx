#ifndef NXOpen_FALCON_ACTIVITYPOINTLOCATIONBUILDER_HXX_INCLUDED
#define NXOpen_FALCON_ACTIVITYPOINTLOCATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Falcon_ActivityPointLocationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_falcon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Falcon
    {
        class ActivityPointLocationBuilder;
    }
    class Builder;
    class Point;
    class TaggedObject;
    namespace Falcon
    {
        class _ActivityPointLocationBuilderBuilder;
        class ActivityPointLocationBuilderImpl;
        /** the Class for creating Activity Point Location <br> To create a new instance of this class, use @link NXOpen::Falcon::FalconManager::CreateActivityPointLocationBuilder  NXOpen::Falcon::FalconManager::CreateActivityPointLocationBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ActivityPointLocationType </term> <description> 
         
        EmptyStorage </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_FALCONEXPORT  ActivityPointLocationBuilder : public NXOpen::Builder
        {
            private: ActivityPointLocationBuilderImpl * m_activitypointlocationbuilder_impl;
            private: friend class  _ActivityPointLocationBuilderBuilder;
            protected: ActivityPointLocationBuilder();
            public: ~ActivityPointLocationBuilder();
            /**Returns  the activity point location type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ActivityPointLocationType
            (
            );
            /**Sets  the activity point location type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetActivityPointLocationType
            (
                const NXString & activityPointLocationType /** activitypointlocationtype */ 
            );
            /**Sets  the activity point location type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetActivityPointLocationType
            (
                const char * activityPointLocationType /** activitypointlocationtype */ 
            );
            /**Returns  the name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the position 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Position
            (
            );
            /**Sets  the position 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetPosition
            (
                NXOpen::Point * position /** position */ 
            );
            /**Returns  the activity point to be copied 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * ActivityPointToCopy
            (
            );
            /**Sets  the activity point to be copied 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetActivityPointToCopy
            (
                NXOpen::TaggedObject * activityPointToCopy /** activitypointtocopy */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
