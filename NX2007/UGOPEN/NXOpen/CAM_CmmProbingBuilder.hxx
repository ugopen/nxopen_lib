#ifndef NXOpen_CAM_CMMPROBINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CMMPROBINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CmmProbingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_OperationBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CmmProbingBuilder;
    }
    namespace CAM
    {
        class CAMObject;
    }
    namespace CAM
    {
        class Operation;
    }
    namespace CAM
    {
        class OperationBuilder;
    }
    class SelectNXObjectList;
    namespace CAM
    {
        class _CmmProbingBuilderBuilder;
        class CmmProbingBuilderImpl;
        /** Represents the builder for a CMM probing path.  <br> To create a new instance of this class, use @link NXOpen::CAM::InspectionOperationCollection::CreateCmmProbingBuilder  NXOpen::CAM::InspectionOperationCollection::CreateCmmProbingBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CmmProbingBuilder : public NXOpen::CAM::OperationBuilder
        {
            /** the inspection path type */
            public: enum InspectionPathType
            {
                InspectionPathTypeTouchPoint/** touch point */ ,
                InspectionPathTypeScan3Axis/** scan3axis */ ,
                InspectionPathTypeScan5Axis/** scan5axis */ 
            };

            private: CmmProbingBuilderImpl * m_cmmprobingbuilder_impl;
            private: friend class  _CmmProbingBuilderBuilder;
            protected: CmmProbingBuilder();
            public: ~CmmProbingBuilder();
            /**Returns  the geometry selected for inspection 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectInspectGeometry
            (
            );
            /** Highlights the inspected geometry 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void ShowInspectGeometry
            (
            );
            /**Returns  the PMI objects selected for creating inspection tolerances 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectPMI
            (
            );
            /**Returns  the pre-defined inspection tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString QuickTolerance
            (
            );
            /**Sets  the pre-defined inspection tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetQuickTolerance
            (
                const NXString & tolerance /** tolerance */ 
            );
            /**Sets  the pre-defined inspection tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetQuickTolerance
            (
                const char * tolerance /** tolerance */ 
            );
            /** Creates a generic inspection tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: NXOpen::CAM::Operation * AddTolerance
            (
            );
            /** Deletes an inspection tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void DeleteTolerance
            (
                NXOpen::CAM::Operation * selectedObject /** selectedobject */ 
            );
            /**Returns  the probing path type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CmmProbingBuilder::InspectionPathType PathType
            (
            );
            /**Sets  the probing path type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPathType
            (
                NXOpen::CAM::CmmProbingBuilder::InspectionPathType pathType /** pathtype */ 
            );
            /**Returns  the bit mask specifying which entities from a geometry group should be inspected 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int InspectGeometryMask
            (
            );
            /**Sets  the bit mask specifying which entities from a geometry group should be inspected 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetInspectGeometryMask
            (
                int bitMask /** bitmask */ 
            );
            /**Returns  the base name for the inspected feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FeatureBaseName
            (
            );
            /**Sets  the base name for the inspected feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetFeatureBaseName
            (
                const NXString & baseName /** basename */ 
            );
            /**Sets  the base name for the inspected feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetFeatureBaseName
            (
                const char * baseName /** basename */ 
            );
            /** Deletes an inspection feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void DeleteFeature
            (
                NXOpen::CAM::Operation * selectedObject /** selectedobject */ 
            );
            /** Modifies parameters for displaying the toolpath 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void EditDisplay
            (
            );
            /** Determines sensor definitions for a path from toolpath events 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void UpdateSensors
            (
            );
            /** Creates the toolpath and Inspection features and tolerances corresponding to selected geometry entities 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ProcessSelectedGeometry
            (
            );
            /** Creates the toolpath and Inspection features and tolerances corresponding to selected PMI 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ProcessSelectedPMI
            (
            );
            /** Creates the toolpath and Inspection features and tolerances corresponding to the selected geometry group 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ProcessGeometryGroup
            (
                bool add /** add */ ,
                const std::vector<NXOpen::CAM::CAMObject *> & objects /** array of object tags */
            );
            /** Cleans up features and tolerances after a change to the geometry group 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: bool ChangeGeometryGroup
            (
            );
            /** Updates path after a change to the method 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ChangeMethod
            (
            );
            /** Modifies the entry and exit points for an inspection feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void EditEntryExitPoints
            (
            );
            /** Modifies the start and end points for an inspection feature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void EditStartEndPoints
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
