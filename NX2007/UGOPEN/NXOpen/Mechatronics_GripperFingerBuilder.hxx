#ifndef NXOpen_MECHATRONICS_GRIPPERFINGERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GRIPPERFINGERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GripperFingerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GripperFingerBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _GripperFingerBuilderBuilder;
        class GripperFingerBuilderImpl;
        /**  @brief  Represents a grippr finger which contains the body, point, and vector.  

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::PhysicsManager::CreateGripperFingerBuilder  NXOpen::Mechatronics::PhysicsManager::CreateGripperFingerBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GripperFingerBuilder : public NXOpen::Builder
        {
            private: GripperFingerBuilderImpl * m_gripperfingerbuilder_impl;
            private: friend class  _GripperFingerBuilderBuilder;
            protected: GripperFingerBuilder();
            public: ~GripperFingerBuilder();
            /**Returns   @brief  the finger body  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * Body
            (
            );
            /**Returns   @brief  the anchor point  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * Point
            (
            );
            /**Sets   @brief  the anchor point  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns   @brief  the moving direction  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets   @brief  the moving direction  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
