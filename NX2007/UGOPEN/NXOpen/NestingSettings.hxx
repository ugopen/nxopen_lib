#ifndef NXOpen_NESTINGSETTINGS_HXX_INCLUDED
#define NXOpen_NESTINGSETTINGS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NestingSettings.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class NestingSettings;
    class NestingSettingsImpl;

    /// \cond NX_NO_DOC 
    /** Represents a sheet metal nesting settings class. 
     <br>  Created in NX2007.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  NestingSettings : public NXOpen::TransientObject
    {
        /** This enum defines the nest directions. */

        /// \cond NX_NO_DOC 
        public: enum NestDirections
        {
            NestDirectionsBottomLeft/** bottom left */ ,
            NestDirectionsBottomRight/** bottom right */ ,
            NestDirectionsTopLeft/** top left */ ,
            NestDirectionsTopRight/** top right */ 
        };


        /// \endcond 
        private: NestingSettingsImpl * m_nestingsettings_impl;
        /// \cond NX_NO_DOC 
        public: explicit NestingSettings(void *ptr);
        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object. In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~NestingSettings();

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the batch quantity. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: int BatchQuantity
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the batch quantity. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetBatchQuantity
        (
            int batchQuantity /** batchquantity */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the nest time. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double NestTime
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the nest time. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetNestTime
        (
            double nestTime /** nesttime */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the nest direction. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::NestingSettings::NestDirections NestDirection
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the nest direction. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetNestDirection
        (
            NXOpen::NestingSettings::NestDirections anchorLocation /** anchorlocation */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the edge to part distance. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double EdgeToPartDistance
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the edge to part distance. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetEdgeToPartDistance
        (
            double distance /** distance */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the part to part distance. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double PartToPartDistance
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the part to part distance. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetPartToPartDistance
        (
            double distance /** distance */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the full path of output file. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFilePath
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the full path of output file. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetOutputFilePath
        (
            const NXString & filePath /** filepath */ 
        );
        /**Sets  the full path of output file. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        void SetOutputFilePath
        (
            const char * filePath /** filepath */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the full path to standard stock file. If any of the added stocks are refering existing file, 
                this path will not change. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString StandardStockFilePath
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the full path to standard stock file. If any of the added stocks are refering existing file, 
                this path will not change. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void SetStandardStockFilePath
        (
            const NXString & filePath /** filepath */ 
        );
        /**Sets  the full path to standard stock file. If any of the added stocks are refering existing file, 
                this path will not change. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        void SetStandardStockFilePath
        (
            const char * filePath /** filepath */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Adds given layer to nesting cut layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void AddLayerToCutLayers
        (
            int layer /** layer */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Returns a list of cut layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<int> GetCutLayers
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Removes all cut layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void ClearCutLayers
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Adds given layer to nesting attach layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void AddLayerToAttachLayers
        (
            int layer /** layer */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Returns a list of attach layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<int> GetAttachLayers
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Removes all attach layers. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_2d_nesting (" NX 2D Nesting") */
        public: void ClearAttachLayers
        (
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
