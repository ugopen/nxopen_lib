#ifndef NXOpen_MOTION_SOLUTIONMANAGERBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SOLUTIONMANAGERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SolutionManagerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class SolutionManagerBuilder;
    }
    class Builder;
    class NXObject;
    namespace Motion
    {
        class _SolutionManagerBuilderBuilder;
        class SolutionManagerBuilderImpl;
        /** Represents a @link NXOpen::Motion::SolutionManagerBuilder NXOpen::Motion::SolutionManagerBuilder@endlink ,
                that allows running multiple solutions and configurations, locally or on a server.
                 <br> To create a new instance of this class, use @link NXOpen::Motion::SolutionManagerObject::GetSolutionManagerBuilder  NXOpen::Motion::SolutionManagerObject::GetSolutionManagerBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  SolutionManagerBuilder : public NXOpen::Builder
        {
            /** run status for a process */
            public: enum RunStatus
            {
                RunStatusNotStarted/** not started */ ,
                RunStatusInQueue/** in queue */ ,
                RunStatusSolving/** solving */ ,
                RunStatusSolved/** solved */ ,
                RunStatusFailed/** failed */ ,
                RunStatusFailedModelCheck/** failed model check */ ,
                RunStatusStopped/** stopped */ 
            };

            private: SolutionManagerBuilderImpl * m_solutionmanagerbuilder_impl;
            private: friend class  _SolutionManagerBuilderBuilder;
            protected: SolutionManagerBuilder();
            public: ~SolutionManagerBuilder();
            /** TODO: fill in a description for this 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RunRemote
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RunLocally
            (
            );
            /** Stops a group of simulations 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void StopSimulations
            (
                const std::vector<NXOpen::NXObject *> & runDatas /** rundatas */ 
            );
            /** Stops all running simulations 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void StopAllSimulations
            (
            );
            /** Returns all the RunData tags 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetAllRunData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
