#ifndef NXOpen_ANNOTATIONS_GDT_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_GDT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_Gdt.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_FcfFrameData.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/Annotations_IFcf.hxx>
#include <NXOpen/Annotations_SimpleDraftingAid.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class Gdt;
    }
    namespace Annotations
    {
        class FcfFrameData;
    }
    namespace Annotations
    {
        class IFcf;
    }
    namespace Annotations
    {
        class SimpleDraftingAid;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class INXObject;
    namespace Annotations
    {
        class _GdtBuilder;
        class GdtImpl;
        /** 
            Represents a Geometric Dimensioning and Tolerancing symbol
             <br> This is an abstract class, and cannot be instantiated  <br> 
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  Gdt : public NXOpen::Annotations::SimpleDraftingAid, public virtual NXOpen::Annotations::IFcf
        {
            private: GdtImpl * m_gdt_impl;
            private: friend class  _GdtBuilder;
            protected: Gdt();
            public: ~Gdt();
            /** Sets the symbol color, font, and width.
                    The changes are not applied to the system until
                    an update is performed.  An update can be performed by calling @link Update::DoUpdate Update::DoUpdate@endlink .
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.
                    
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & cfw /** cfw */ 
            );
            /**Returns  a flag indicating whether the leader has a stubbed datum style.
                    This property is not applicable to GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnAnnotation NXOpen::Annotations::LeaderTypeOnAnnotation@endlink   <br>      
                    Do not attempt to set this property for these
                    leader types. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: bool HasStubbedDatumStyle
            (
            );
            /**Sets  a flag indicating whether the leader has a stubbed datum style.
                    This property is not applicable to GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnAnnotation NXOpen::Annotations::LeaderTypeOnAnnotation@endlink   <br>      
                    Do not attempt to set this property for these
                    leader types. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHasStubbedDatumStyle
            (
                bool stubbed /** stubbed */ 
            );
            /**Returns  a flag indicating whether this GDT has a leader position parameter.  
                    GDTs with the following leader types do not have a leader position
                    parameter:
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                    
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: bool HasLeaderPositionParameter
            (
            );
            /**Returns  a parameter which indicates where the leader end point is located on
                    the object that it is attached to.  0.0 indicates the start of the 
                    object that it is attached to and 1.0 indicates the end of the object.
                    This property is not applicable to GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                    You should not attempt to read this parameter unless 
                    @link NXOpen::Annotations::Gdt::HasLeaderPositionParameter NXOpen::Annotations::Gdt::HasLeaderPositionParameter@endlink  is true. 
                    You should not attempt to
                    change this parameter unless
                    @link NXOpen::Annotations::Gdt::CanChangeLeaderPositionParameter NXOpen::Annotations::Gdt::CanChangeLeaderPositionParameter@endlink 
                    returns true. 
                    This parameter cannot not set for GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnAnnotation NXOpen::Annotations::LeaderTypeOnAnnotation@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnStub NXOpen::Annotations::LeaderTypeOnStub@endlink   <br> 

                    NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                          If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double LeaderPositionParameter
            (
            );
            /**Sets  a parameter which indicates where the leader end point is located on
                    the object that it is attached to.  0.0 indicates the start of the 
                    object that it is attached to and 1.0 indicates the end of the object.
                    This property is not applicable to GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                    You should not attempt to read this parameter unless 
                    @link NXOpen::Annotations::Gdt::HasLeaderPositionParameter NXOpen::Annotations::Gdt::HasLeaderPositionParameter@endlink  is true. 
                    You should not attempt to
                    change this parameter unless
                    @link NXOpen::Annotations::Gdt::CanChangeLeaderPositionParameter NXOpen::Annotations::Gdt::CanChangeLeaderPositionParameter@endlink 
                    returns true. 
                    This parameter cannot not set for GDTs with the following leader
                    types: 
                         <br>  @link NXOpen::Annotations::LeaderTypePlain NXOpen::Annotations::LeaderTypePlain@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAround NXOpen::Annotations::LeaderTypeAround@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypePlainAligned NXOpen::Annotations::LeaderTypePlainAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeAroundAligned NXOpen::Annotations::LeaderTypeAroundAligned@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnAnnotation NXOpen::Annotations::LeaderTypeOnAnnotation@endlink   <br> 
                         <br>  @link NXOpen::Annotations::LeaderTypeOnStub NXOpen::Annotations::LeaderTypeOnStub@endlink   <br> 

                    NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                          If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLeaderPositionParameter
            (
                double param /** param */ 
            );
            /**Returns  a flag indicating whether the @link NXOpen::Annotations::Gdt::LeaderPositionParameter NXOpen::Annotations::Gdt::LeaderPositionParameter@endlink  can be changed 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanChangeLeaderPositionParameter
            (
            );
            /** Returns the single FCF frames data 
                        This is only designed to work with old feature control frames without builders.  For newer feature control frames,
                        the builder should be used to access this data.  This method will return an error.  @return  FCF frame data 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::Annotations::FcfFrameData * GetFcfFrameData
            (
            );
            /** Sets the single FCF frames data.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetFcfFrameData
            (
                NXOpen::Annotations::FcfFrameData * data /**  FCF frame data */
            );
            /** Returns the multiple FCF frames data 
                        This is only designed to work with old feature control frames without builders.  For newer feature control frames,
                        the builder should be used to access this data.  This method will return an error.  @return  FCF frame datas 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXOpen::Annotations::FcfFrameData *> GetFcfFrameDataArray
            (
            );
            /** Sets the multiple FCF frames data.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetFcfFrameData
            (
                const std::vector<NXOpen::Annotations::FcfFrameData *> & fcfFrameData /**  FCF frame datas */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
