#ifndef NXOpen_CAE_MODELDEPENDENCYCHECK_RESULT_HXX_INCLUDED
#define NXOpen_CAE_MODELDEPENDENCYCHECK_RESULT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelDependencyCheck_Result.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FEElement.hxx>
#include <NXOpen/CAE_FENode.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelDependencyCheck
        {
            class Result;
        }
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class Mesh;
    }
    class NXObject;
    namespace CAE
    {
        namespace ModelDependencyCheck
        {
            class _ResultBuilder;
            class ResultImpl;
            /**  @brief  The Model Dependency Check Result class offers informations about the conflicts found. 

               <br> Results can be obtained from @link CAE::ModelDependencyCheck::Manager CAE::ModelDependencyCheck::Manager@endlink  after checks have been performed via @link NXOpen::CAE::ModelDependencyCheck::Manager::GetResults NXOpen::CAE::ModelDependencyCheck::Manager::GetResults@endlink .  <br> 
             <br>  Created in NX2007.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Result : public NXOpen::NXObject
            {
                private: ResultImpl * m_result_impl;
                private: friend class  _ResultBuilder;
                protected: Result();
                public: ~Result();
                /**Returns  the id 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Id
                (
                );
                /**Returns  the first mesh 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Mesh * FirstMesh
                (
                );
                /**Returns  the second mesh 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Mesh * SecondMesh
                (
                );
                /**Returns  the first element 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FEElement * FirstElement
                (
                );
                /**Returns  the second element 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FEElement * SecondElement
                (
                );
                /** Get the conflicting nodes 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::FENode *> GetConflictingNodes
                (
                );
                /** Get the conflicting dofs 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<int> GetConflictingDofs
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
