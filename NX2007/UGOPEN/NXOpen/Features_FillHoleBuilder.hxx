#ifndef NXOpen_FEATURES_FILLHOLEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_FILLHOLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FillHoleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FillHoleBuilder;
    }
    class Expression;
    namespace Facet
    {
        class SelectFacetedBody;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class NXObject;
    class Point;
    class Section;
    namespace Features
    {
        class _FillHoleBuilderBuilder;
        class FillHoleBuilderImpl;
        /**
            Represents a @link NXOpen::Features::FillHole NXOpen::Features::FillHole@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FreeformSurfaceCollection::CreateFillHoleBuilder  NXOpen::Features::FreeformSurfaceCollection::CreateFillHoleBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AreaControl </term> <description> 
         
        50 </description> </item> 

        <item><term> 
         
        Attraction </term> <description> 
         
        50 </description> </item> 

        <item><term> 
         
        DefaultEdgeContinuity </term> <description> 
         
        G1 </description> </item> 

        <item><term> 
         
        Fullness.Value </term> <description> 
         
        10.0 </description> </item> 

        <item><term> 
         
        Patch </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShapeControlType </term> <description> 
         
        None </description> </item> 

        </list> 

         <br>  Created in NX9.0.1.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FillHoleBuilder : public NXOpen::Features::FeatureBuilder
        {
            /**
                    type of the shape control
                    */
            public: enum ShapeControlTypes
            {
                ShapeControlTypesNone/** none */ ,
                ShapeControlTypesFullness/** fullness */ ,
                ShapeControlTypesPassThroughCurves/** pass through curves */ ,
                ShapeControlTypesFitToPoints/** fit to points */ ,
                ShapeControlTypesFitToFacet/** fit to facet */ 
            };

            /**
                    border continuity connects border object with the surface continuity
                    */
            public: enum ContinuityTypes
            {
                ContinuityTypesG0/** G0 continuity */,
                ContinuityTypesG1/** G1 continuity */,
                ContinuityTypesG2/** G2 continuity */
            };

             /**
                    Represents continuity value at a border curve.
            */
            public:
            struct BorderContinuity
            {
                public: /** Border object */NXOpen::NXObject * BorderObject;
                public: /** continuity */ NXOpen::Features::FillHoleBuilder::ContinuityTypes Continuity;
                public: BorderContinuity() :
                    BorderObject(),
                    Continuity((NXOpen::Features::FillHoleBuilder::ContinuityTypes)0)
                {
                }
                /** Constructor for the BorderContinuity struct. */ 
                public: BorderContinuity(NXOpen::NXObject * borderObjectInitial /** Border object */, 
                        NXOpen::Features::FillHoleBuilder::ContinuityTypes continuityInitial /** continuity */ ) :
                    BorderObject(borderObjectInitial),
                    Continuity(continuityInitial)
                {
                }
            };

            private: FillHoleBuilderImpl * m_fillholebuilder_impl;
            private: friend class  _FillHoleBuilderBuilder;
            protected: FillHoleBuilder();
            public: ~FillHoleBuilder();
            /**Returns  the curve chain 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * CurveChain
            (
            );
            /** Returns array of continuity items 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::FillHoleBuilder::BorderContinuity> GetBorderTypeItems
            (
            );
            /** Sets  array of continuity items 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: void SetBorderTypeItems
            (
                const std::vector<NXOpen::Features::FillHoleBuilder::BorderContinuity> & markerToNodeListItem /** markertonodelistitem */ 
            );
            /**Returns  the shape control type 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FillHoleBuilder::ShapeControlTypes ShapeControlType
            (
            );
            /**Sets  the shape control type 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetShapeControlType
            (
                NXOpen::Features::FillHoleBuilder::ShapeControlTypes shapeControlType /** shapecontroltype */ 
            );
            /**Returns  the fullness 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Fullness
            (
            );
            /**Returns  the point at corner A. 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * FullnessPoint
            (
            );
            /**Sets  the point at corner A. 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetFullnessPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the pass through curves 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectPassThrougCurves
            (
            );
            /**Returns  the facet body to which the fill hole patch is fitted to 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SelectFacetedBody * FacetBody
            (
            );
            /**Returns  the picking point on the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d PickPoint
            (
            );
            /**Sets  the picking point on the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetPickPoint
            (
                const NXOpen::Point3d & pickPoint /** pickpoint */ 
            );
            /**Returns  the attraction ratio to the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: int Attraction
            (
            );
            /**Sets  the attraction ratio to the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetAttraction
            (
                int attraction /** attraction */ 
            );
            /**Returns  the area control ratio of the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: int AreaControl
            (
            );
            /**Sets  the area control ratio of the facet body 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetAreaControl
            (
                int areaControl /** areacontrol */ 
            );
            /**Returns  the patch into part flag 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: bool Patch
            (
            );
            /**Sets  the patch into part flag 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetPatch
            (
                bool patch /** patch */ 
            );
            /**Returns  the default continuity of edges. The default continuity will be applied to new selected edges 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FillHoleBuilder::ContinuityTypes DefaultEdgeContinuity
            (
            );
            /**Sets  the default continuity of edges. The default continuity will be applied to new selected edges 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetDefaultEdgeContinuity
            (
                NXOpen::Features::FillHoleBuilder::ContinuityTypes defaultEdgeContinuity /** defaultedgecontinuity */ 
            );
            /**Returns  the tolerance 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the tolerance 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double double0 /** double0 */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
