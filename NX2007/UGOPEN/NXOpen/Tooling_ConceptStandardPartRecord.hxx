#ifndef NXOpen_TOOLING_CONCEPTSTANDARDPARTRECORD_HXX_INCLUDED
#define NXOpen_TOOLING_CONCEPTSTANDARDPARTRECORD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ConceptStandardPartRecord.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ConceptStandardPartRecord;
    }
    class NXObject;
    namespace Tooling
    {
    }
    namespace Tooling
    {
        class ConceptStandardPartRecordImpl;
        /** Represents a concept standard part object  <br> This object does not need a creator.  <br> 
         <br>  Created in NX12.0.2.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ConceptStandardPartRecord : public NXOpen::TransientObject
        {
            private: ConceptStandardPartRecordImpl * m_conceptstandardpartrecord_impl;
            /// \cond NX_NO_DOC 
            public: explicit ConceptStandardPartRecord(void *ptr);
            /// \endcond 
            /** Dispose the ConceptStandardPartRecord object 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~ConceptStandardPartRecord();
            /** Update values of the members of the ConceptStandardPartRecord object with attribute values saved in given point or symbol 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void UpdateValues
            (
                NXOpen::NXObject * entity /** The object containing values to set to ConceptStandardPartRecord object */
            );
            /** Adds concept object in specified position @return  The added concept object, it can be a symbol or a point
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: NXOpen::NXObject * AddConceptObject
            (
                const NXOpen::Point3d & specifiedPoint /** specifiedpoint */ ,
                const NXOpen::Matrix3x3 & positionMatrix /** positionmatrix */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
