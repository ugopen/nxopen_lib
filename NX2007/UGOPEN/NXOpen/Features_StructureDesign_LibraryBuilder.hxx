#ifndef NXOpen_FEATURES_STRUCTUREDESIGN_LIBRARYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STRUCTUREDESIGN_LIBRARYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StructureDesign_LibraryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace StructureDesign
        {
            class LibraryBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace StructureDesign
        {
            class _LibraryBuilderBuilder;
            class LibraryBuilderImpl;
            /**
                    Represents a @link Features::StructureDesign::LibraryBuilder Features::StructureDesign::LibraryBuilder@endlink  which is used to edit structure in the Structure Design application.
                    Up direction information and catalog information are stored as user attributes on created frame part.
                     <br> To create a new instance of this class, use @link NXOpen::Features::StructureDesignCollection::CreateStructureDesignLibraryBuilder  NXOpen::Features::StructureDesignCollection::CreateStructureDesignLibraryBuilder @endlink  <br> 
             <br>  Created in NX2007.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  LibraryBuilder : public NXOpen::Builder
            {
                private: LibraryBuilderImpl * m_librarybuilder_impl;
                private: friend class  _LibraryBuilderBuilder;
                protected: LibraryBuilder();
                public: ~LibraryBuilder();
                /**Returns  the catalog to use for the stock definitions. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Catalog
                (
                );
                /**Sets  the catalog to use for the stock definitions. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetCatalog
                (
                    const NXString & catalog /** catalog */ 
                );
                /**Sets  the catalog to use for the stock definitions. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                void SetCatalog
                (
                    const char * catalog /** catalog */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
