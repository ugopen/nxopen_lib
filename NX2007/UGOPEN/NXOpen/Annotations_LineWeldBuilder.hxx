#ifndef NXOpen_ANNOTATIONS_LINEWELDBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_LINEWELDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_LineWeldBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_ForeshorteningSymbolBuilder.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_LineWeldDataBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class LineWeldBuilder;
    }
    namespace Annotations
    {
        class ForeshorteningSymbolBuilder;
    }
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class LineWeldDataBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    namespace Annotations
    {
        class Weld;
    }
    class Builder;
    class DisplayableObject;
    class SelectDisplayableObject;
    class SelectDisplayableObjectList;
    namespace Annotations
    {
        class _LineWeldBuilderBuilder;
        class LineWeldBuilderImpl;
        /** Represents a @link NXOpen::Annotations::LineWeldBuilder NXOpen::Annotations::LineWeldBuilder@endlink    <br> To create a new instance of this class, use @link NXOpen::Annotations::WeldCollection::CreateLineWeldBuilder  NXOpen::Annotations::WeldCollection::CreateLineWeldBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ArrowSideWeldData.ContourSymbol </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        ArrowSideWeldData.FinishSymbol </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        ArrowSideWeldData.WeldSizeCode </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        ArrowSideWeldData.WeldSymbol </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        FieldWeld </term> <description> 
         
        Plain </description> </item> 

        <item><term> 
         
        FlipDirection </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        FlipHorizontal </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        FlipVertical </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        IdLine </term> <description> 
         
        Plain </description> </item> 

        <item><term> 
         
        Scale </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        StaggeredWeld </term> <description> 
         
        NoStaggeredSymbol </description> </item> 

        <item><term> 
         
        Tail </term> <description> 
         
        NoTail </description> </item> 

        <item><term> 
         
        WeldAlongContour </term> <description> 
         
        None </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  LineWeldBuilder : public NXOpen::Builder
        {
            /** Represents the field weld type */
            public: enum FieldWeldType
            {
                FieldWeldTypePlain/** plain */ ,
                FieldWeldTypeTopField/** top field */ ,
                FieldWeldTypeTopFieldSimpleFlag/** top field simple flag */ 
            };

            /** Represents the id line type */
            public: enum IdLineType
            {
                IdLineTypePlain/** plain */ ,
                IdLineTypeIdLineAbove/** id line above */ ,
                IdLineTypeIdLineBelow/** id line below */ ,
                IdLineTypeCenteredSpotWeld/** centered spot weld */ ,
                IdLineTypeCenteredSeamWeld/** centered seam weld */ ,
                IdLineTypeCentered/** centered */ 
            };

            /** Represents the staggered weld type */
            public: enum StaggeredWeldType
            {
                StaggeredWeldTypeNoStaggeredSymbol/** no staggered symbol */ ,
                StaggeredWeldTypeStaggeredSymbol/** staggered symbol */ ,
                StaggeredWeldTypeStaggeredSymbolWeldSide/** staggered symbol weld side */ 
            };

            /** represents the tail type */
            public: enum TailType
            {
                TailTypeNoTail/** no tail */ ,
                TailTypeTail/** tail */ ,
                TailTypeBox/** box */ 
            };

            /** Represents the weld along contour option */
            public: enum WeldSymbolWeldAlongContourType
            {
                WeldSymbolWeldAlongContourTypeNone/** none */ ,
                WeldSymbolWeldAlongContourTypeClosed/** closed */ ,
                WeldSymbolWeldAlongContourTypeUnclosed/** unclosed */ ,
                WeldSymbolWeldAlongContourTypeTrilateralWeld/** trilateral weld */ ,
                WeldSymbolWeldAlongContourTypeAllAround/** all around */ 
            };

            private: LineWeldBuilderImpl * m_lineweldbuilder_impl;
            private: friend class  _LineWeldBuilderBuilder;
            protected: LineWeldBuilder();
            public: ~LineWeldBuilder();
            /**Returns  the @link NXOpen::Annotations::LeaderBuilder NXOpen::Annotations::LeaderBuilder@endlink  for weld symbol 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LeaderBuilder * Leader
            (
            );
            /**Returns  the @link NXOpen::Annotations::OriginBuilder NXOpen::Annotations::OriginBuilder@endlink  for the weld symbol 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /**Returns  the @link NXOpen::Annotations::LineWeldDataBuilder NXOpen::Annotations::LineWeldDataBuilder@endlink  for the other side of the weld symbol 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldDataBuilder * OtherSideWeldData
            (
            );
            /**Returns  the field indicating the weld is done at the field site 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldBuilder::FieldWeldType FieldWeld
            (
            );
            /**Sets  the field indicating the weld is done at the field site 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetFieldWeld
            (
                NXOpen::Annotations::LineWeldBuilder::FieldWeldType fieldWeld /** fieldweld */ 
            );
            /**Returns  the identification or reference line 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldBuilder::IdLineType IdLine
            (
            );
            /**Sets  the identification or reference line 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetIdLine
            (
                NXOpen::Annotations::LineWeldBuilder::IdLineType idLine /** id line */ 
            );
            /**Returns  the staggered weld 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldBuilder::StaggeredWeldType StaggeredWeld
            (
            );
            /**Sets  the staggered weld 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetStaggeredWeld
            (
                NXOpen::Annotations::LineWeldBuilder::StaggeredWeldType staggeredWeld /** staggeredweld */ 
            );
            /**Returns  the weld tail 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldBuilder::TailType Tail
            (
            );
            /**Sets  the weld tail 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetTail
            (
                NXOpen::Annotations::LineWeldBuilder::TailType tail /** tail */ 
            );
            /**  Returns the reference or specification text 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetReference
            (
            );
            /** Sets the reference or specification text
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetReference
            (
                const std::vector<NXString> & reference /** reference */ 
            );
            /**Returns  the @link NXOpen::Annotations::LineWeldDataBuilder NXOpen::Annotations::LineWeldDataBuilder@endlink  for the arrow side of the weld symbol 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldDataBuilder * ArrowSideWeldData
            (
            );
            /**Returns  the top seam object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * TopSeamObject
            (
            );
            /**Returns  the flip direction for top seam
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlipDirection
            (
            );
            /**Sets  the flip direction for top seam
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetFlipDirection
            (
                bool flipDirection /** flipdirection */ 
            );
            /**Returns  the side seam object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * SideSeamObjects
            (
            );
            /**Returns  the flip vertical direction for side seam 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlipVertical
            (
            );
            /**Sets  the flip vertical direction for side seam 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetFlipVertical
            (
                bool flipVertical /** flipvertical */ 
            );
            /**Returns  the flip horizontal direction for side seam 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlipHorizontal
            (
            );
            /**Sets  the flip horizontal direction for side seam 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetFlipHorizontal
            (
                bool flipHorizontal /** fliphorizontal */ 
            );
            /**Returns  the @link NXOpen::Annotations::StyleBuilder NXOpen::Annotations::StyleBuilder@endlink  for the weld symbol 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
            /**Returns  the weld symbol from which the style properties are inherited 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * Inherit
            (
            );
            /**Returns  the scaling factor for the welding symbol  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double Scale
            (
            );
            /**Sets  the scaling factor for the welding symbol  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetScale
            (
                double scale /** scale */ 
            );
            /**Returns  the weld along contour option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineWeldBuilder::WeldSymbolWeldAlongContourType WeldAlongContour
            (
            );
            /**Sets  the weld along contour option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetWeldAlongContour
            (
                NXOpen::Annotations::LineWeldBuilder::WeldSymbolWeldAlongContourType alongContour /** alongcontour */ 
            );
            /**Returns  the space factor for the welding symbol  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double SpaceFactor
            (
            );
            /**Sets  the space factor for the welding symbol  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetSpaceFactor
            (
                double spaceFactor /** spacefactor */ 
            );
            /** This inherits the properties from the existing weld symbol 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void InheritProperties
            (
                NXOpen::Annotations::Weld * annotation /** annotation */ 
            );
            /** This inherits the properties from the existing weld feature 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void InheritPropertiesFromWeldFeature
            (
                NXOpen::DisplayableObject * feature /** feature */ 
            );
            /**Returns  the foreshortening symbol builder 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ForeshorteningSymbolBuilder * ForeshorteningSymbol
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
