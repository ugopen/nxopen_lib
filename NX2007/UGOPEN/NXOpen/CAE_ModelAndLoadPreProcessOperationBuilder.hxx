#ifndef NXOpen_CAE_MODELANDLOADPREPROCESSOPERATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELANDLOADPREPROCESSOPERATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelAndLoadPreProcessOperationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelAndLoadPreProcessOperationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _ModelAndLoadPreProcessOperationBuilderBuilder;
        class ModelAndLoadPreProcessOperationBuilderImpl;
        /**
            Builds a @link NXOpen::CAE::ModelAndLoadPreProcessOperation NXOpen::CAE::ModelAndLoadPreProcessOperation@endlink  object which 
            represets an operation.
             <br> To create a new instance of this class, use @link NXOpen::CAE::ModelAndLoadPreProcessOperations::CreateBuilder  NXOpen::CAE::ModelAndLoadPreProcessOperations::CreateBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelAndLoadPreProcessOperationBuilder : public NXOpen::Builder
        {
            private: ModelAndLoadPreProcessOperationBuilderImpl * m_modelandloadpreprocessoperationbuilder_impl;
            private: friend class  _ModelAndLoadPreProcessOperationBuilderBuilder;
            protected: ModelAndLoadPreProcessOperationBuilder();
            public: ~ModelAndLoadPreProcessOperationBuilder();
            /**Returns  the operation name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString OperationName
            (
            );
            /**Sets  the operation name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOperationName
            (
                const NXString & title /** title */ 
            );
            /**Sets  the operation name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetOperationName
            (
                const char * title /** title */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
