#ifndef NXOpen_CAE_AMSUPPORTSMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_AMSUPPORTSMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AMSupportsMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AMSupportObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AMSupportsMeshBuilder;
    }
    class Builder;
    namespace CAE
    {
        class AMSupportObject;
    }
    namespace CAE
    {
        class CAEBody;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class SelectCAEBodyList;
    }
    namespace Facet
    {
        class FacetedBody;
    }
    namespace CAE
    {
        class _AMSupportsMeshBuilderBuilder;
        class AMSupportsMeshBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::AMSupportsMeshBuilder NXOpen::CAE::AMSupportsMeshBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateAmSupportsMeshBuilder  NXOpen::CAE::NodeElementManager::CreateAmSupportsMeshBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AMSupportsMeshBuilder : public NXOpen::Builder
        {
            private: AMSupportsMeshBuilderImpl * m_amsupportsmeshbuilder_impl;
            private: friend class  _AMSupportsMeshBuilderBuilder;
            protected: AMSupportsMeshBuilder();
            public: ~AMSupportsMeshBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the build volume body
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectCAEBodyList * BuildVolumeBody
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the printed bodies selection
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectCAEBodyList * PrintedBodySelection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get printed body meshes
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void GetPrintedBodyMeshes
            (
                std::vector<NXOpen::CAE::Mesh *> & pptPrintedBodyMeshes /** pptprintedbodymeshes */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Creates a @link NXOpen::CAE::AMSupportObject NXOpen::CAE::AMSupportObject@endlink 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::AMSupportObject * CreateAmSupportObject
            (
                NXOpen::Facet::FacetedBody * tFacetBodyOfSupport /** tfacetbodyofsupport */ ,
                NXOpen::CAE::AMSupportObject::SupportType supportType /** supporttype */ ,
                const NXString & meshName /** meshname */ 
            );
            /** Creates a @link NXOpen::CAE::AMSupportObject NXOpen::CAE::AMSupportObject@endlink 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            NXOpen::CAE::AMSupportObject * CreateAmSupportObject
            (
                NXOpen::Facet::FacetedBody * tFacetBodyOfSupport /** tfacetbodyofsupport */ ,
                NXOpen::CAE::AMSupportObject::SupportType supportType /** supporttype */ ,
                const char * meshName /** meshname */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get support objects
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void GetSupportObjects
            (
                std::vector<NXOpen::CAE::AMSupportObject *> & pptSupportObjects /** pptsupportobjects */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get support meshes
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void GetSupportMeshes
            (
                std::vector<NXOpen::CAE::Mesh *> & pptSupportMeshes /** pptsupportmeshes */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get powder meshes
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void GetPowderMeshes
            (
                std::vector<NXOpen::CAE::Mesh *> & pptPowderMeshes /** pptpowdermeshes */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the property table associated with the builder. 
                        The property table contains the parameters needed for the generation
                        of the mesh.  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Add a printed body
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void AddPrintedBody
            (
                NXOpen::CAE::CAEBody * printedBody /** printedbody */ ,
                double elemSize /** elemsize */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
