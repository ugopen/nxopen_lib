#ifndef NXOpen_CAE_ACOUSTICSANDVIBRATIONACOUSTICRADIATINGSURFACECOMPONENTACCESSOR_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICSANDVIBRATIONACOUSTICRADIATINGSURFACECOMPONENTACCESSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationDatabaseSourceAccessor.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor;
    }
    namespace CAE
    {
        class AcousticsAndVibrationDatabaseSourceAccessor;
    }
    class NXObject;
    namespace CAE
    {
        class _AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessorBuilder;
        class AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessorImpl;
        /**
            Builds a @link NXOpen::CAE::AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor NXOpen::CAE::AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor@endlink  object
            
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor : public NXOpen::NXObject
        {
            /** the load type enum */
            public: enum Loadtype
            {
                LoadtypeKirchhoffPotentials/** kirchhoff potentials */ ,
                LoadtypeKirchhoffPressureVelocity/** kirchhoff pressure velocity */ ,
                LoadtypeFwh/** fwh */ 
            };

            private: AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessorImpl * m_acousticsandvibrationacousticradiatingsurfacecomponentaccessor_impl;
            private: friend class  _AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessorBuilder;
            protected: AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor();
            public: ~AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor();
            /**Returns  the name of the load 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name of the load 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetName
            (
                const NXString & loadName /** loadname */ 
            );
            /**Sets  the name of the load 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetName
            (
                const char * loadName /** loadname */ 
            );
            /**Returns  the type of the load 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor::Loadtype Type
            (
            );
            /**Sets  the type of the load 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetType
            (
                NXOpen::CAE::AcousticsAndVibrationAcousticRadiatingSurfaceComponentAccessor::Loadtype loadType /** loadtype */ 
            );
            /**Returns  the data source 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationDatabaseSourceAccessor * DatabaseSource
            (
            );
            /**Returns  the name of the pressure data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PressureDataSetName
            (
            );
            /**Sets  the name of the pressure data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPressureDataSetName
            (
                const NXString & dataSetName /** datasetname */ 
            );
            /**Sets  the name of the pressure data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetPressureDataSetName
            (
                const char * dataSetName /** datasetname */ 
            );
            /**Returns  the name of the velocity data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString VelocityDataSetName
            (
            );
            /**Sets  the name of the velocity data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetVelocityDataSetName
            (
                const NXString & dataSetName /** datasetname */ 
            );
            /**Sets  the name of the velocity data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetVelocityDataSetName
            (
                const char * dataSetName /** datasetname */ 
            );
            /**Returns  the name of the density data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DensityDataSetName
            (
            );
            /**Sets  the name of the density data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDensityDataSetName
            (
                const NXString & dataSetName /** datasetname */ 
            );
            /**Sets  the name of the density data set. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetDensityDataSetName
            (
                const char * dataSetName /** datasetname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
