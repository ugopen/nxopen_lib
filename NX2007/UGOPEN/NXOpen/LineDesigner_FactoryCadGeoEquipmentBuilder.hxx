#ifndef NXOpen_LINEDESIGNER_FACTORYCADGEOEQUIPMENTBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_FACTORYCADGEOEQUIPMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_FactoryCadGeoEquipmentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class FactoryCadGeoEquipmentBuilder;
    }
    class Builder;
    class NXObject;
    namespace LineDesigner
    {
        class _FactoryCadGeoEquipmentBuilderBuilder;
        class FactoryCadGeoEquipmentBuilderImpl;
        /**    <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateFactorycadgeoequipmentBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateFactorycadgeoequipmentBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  FactoryCadGeoEquipmentBuilder : public NXOpen::Builder
        {
             /** Contains feature update status report */
            public:
            struct UpdatedControlData
            {
                public: /** scontrolname */ NXString SControlName;
                public: /** dcontrolvalue */ double DControlValue;
                public: /** dminvalue */ double DMinValue;
                public: /** dmaxvalue */ double DMaxValue;
                public: /** dincrement */ double DIncrement;
                public: /** vdbllov */ NXString VDblLov;
                public: /** vstrlov */ NXString VStrLov;
                public: /** benforcevalues */ bool BEnforceValues;
                public: /** biseditable */ bool BIsEditable;
                public: UpdatedControlData() :
                    SControlName(),
                    DControlValue(),
                    DMinValue(),
                    DMaxValue(),
                    DIncrement(),
                    VDblLov(),
                    VStrLov(),
                    BEnforceValues(),
                    BIsEditable()
                {
                }
                /** Constructor for the UpdatedControlData struct. */ 
                public: UpdatedControlData(const NXString &sControlNameInitial /** scontrolname */ , 
                        double dControlValueInitial /** dcontrolvalue */ , 
                        double dMinValueInitial /** dminvalue */ , 
                        double dMaxValueInitial /** dmaxvalue */ , 
                        double dIncrementInitial /** dincrement */ , 
                        const NXString &vDblLovInitial /** vdbllov */ , 
                        const NXString &vStrLovInitial /** vstrlov */ , 
                        bool bEnforceValuesInitial /** benforcevalues */ , 
                        bool bIsEditableInitial /** biseditable */ ) :
                    SControlName(sControlNameInitial),
                    DControlValue(dControlValueInitial),
                    DMinValue(dMinValueInitial),
                    DMaxValue(dMaxValueInitial),
                    DIncrement(dIncrementInitial),
                    VDblLov(vDblLovInitial),
                    VStrLov(vStrLovInitial),
                    BEnforceValues(bEnforceValuesInitial),
                    BIsEditable(bIsEditableInitial)
                {
                }
            };

            private: FactoryCadGeoEquipmentBuilderImpl * m_factorycadgeoequipmentbuilder_impl;
            private: friend class  _FactoryCadGeoEquipmentBuilderBuilder;
            protected: FactoryCadGeoEquipmentBuilder();
            public: ~FactoryCadGeoEquipmentBuilder();
            /**Returns   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::NXObject * Node
            (
            );
            /**Sets   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetNode
            (
                NXOpen::NXObject * node /** node */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
