#ifndef NXOpen_ANNOTATIONS_IPMISEMANTICS_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_IPMISEMANTICS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_IPmiSemantics.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_PmiBalloonNoteData.hxx>
#include <NXOpen/Annotations_PmiCoordinateNoteData.hxx>
#include <NXOpen/Annotations_PmiDatumData.hxx>
#include <NXOpen/Annotations_PmiDatumTargetData.hxx>
#include <NXOpen/Annotations_PmiDimensionData.hxx>
#include <NXOpen/Annotations_PmiEnterpriseIdentifierData.hxx>
#include <NXOpen/Annotations_PmiExportControlData.hxx>
#include <NXOpen/Annotations_PmiFcfData.hxx>
#include <NXOpen/Annotations_PmiGovernmentSecurityInfoData.hxx>
#include <NXOpen/Annotations_PmiLineWeldData.hxx>
#include <NXOpen/Annotations_PmiLocatorDesignatorData.hxx>
#include <NXOpen/Annotations_PmiMaterialSpecificationData.hxx>
#include <NXOpen/Annotations_PmiNoteData.hxx>
#include <NXOpen/Annotations_PmiPartIdentificationData.hxx>
#include <NXOpen/Annotations_PmiProcessSpecificationData.hxx>
#include <NXOpen/Annotations_PmiProprietaryInfoData.hxx>
#include <NXOpen/Annotations_PmiRegionData.hxx>
#include <NXOpen/Annotations_PmiSurfaceFinishData.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class IPmiSemantics;
    }
    namespace Annotations
    {
        class PmiBalloonNoteData;
    }
    namespace Annotations
    {
        class PmiCoordinateNoteData;
    }
    namespace Annotations
    {
        class PmiDatumData;
    }
    namespace Annotations
    {
        class PmiDatumTargetData;
    }
    namespace Annotations
    {
        class PmiDimensionData;
    }
    namespace Annotations
    {
        class PmiEnterpriseIdentifierData;
    }
    namespace Annotations
    {
        class PmiExportControlData;
    }
    namespace Annotations
    {
        class PmiFcfData;
    }
    namespace Annotations
    {
        class PmiGovernmentSecurityInfoData;
    }
    namespace Annotations
    {
        class PmiLineWeldData;
    }
    namespace Annotations
    {
        class PmiLocatorDesignatorData;
    }
    namespace Annotations
    {
        class PmiMaterialSpecificationData;
    }
    namespace Annotations
    {
        class PmiNoteData;
    }
    namespace Annotations
    {
        class PmiPartIdentificationData;
    }
    namespace Annotations
    {
        class PmiProcessSpecificationData;
    }
    namespace Annotations
    {
        class PmiProprietaryInfoData;
    }
    namespace Annotations
    {
        class PmiRegionData;
    }
    namespace Annotations
    {
        class PmiSurfaceFinishData;
    }
    class INXObject;
    namespace Annotations
    {
        /** Interface class provides access to PMI semantic data. 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  IPmiSemantics : public virtual NXOpen::INXObject
        {
            public: virtual ~IPmiSemantics() {}
            /** Returns the PMI Datum semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiDatumData * GetDatumData
            (
            ) = 0;
            /** Returns the PMI Dimension semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiDimensionData * GetDimensionData
            (
            ) = 0;
            /** Returns the PMI Feature Control Frame semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiFcfData * GetFcfData
            (
            ) = 0;
            /** Returns the PMI Note semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiNoteData * GetNoteData
            (
            ) = 0;
            /** Returns the PMI Line Weld semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiLineWeldData * GetLineWeldData
            (
            ) = 0;
            /** Returns the PMI Region semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiRegionData * GetRegionData
            (
            ) = 0;
            /** Returns the PMI Proprietary Information semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiProprietaryInfoData * GetProprietaryInfoData
            (
            ) = 0;
            /** Returns the PMI Government Security Information semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiGovernmentSecurityInfoData * GetGovernmentSecurityInfoData
            (
            ) = 0;
            /** Returns the PMI Export Control semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiExportControlData * GetExportControlData
            (
            ) = 0;
            /** Returns the PMI Balloon Note semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiBalloonNoteData * GetBalloonNoteData
            (
            ) = 0;
            /** Returns the PMI Material Specification semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiMaterialSpecificationData * GetMaterialSpecificationData
            (
            ) = 0;
            /** Returns the PMI Enterprise Identifier semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiEnterpriseIdentifierData * GetEnterpriseIdentifierData
            (
            ) = 0;
            /** Returns the PMI Process Specification semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiProcessSpecificationData * GetProcessSpecificationData
            (
            ) = 0;
            /** Returns the PMI Part Identification semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiPartIdentificationData * GetPartIdentificationData
            (
            ) = 0;
            /** Returns the PMI Locator Designator semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiLocatorDesignatorData * GetLocatorDesignatorData
            (
            ) = 0;
            /** Returns the PMI Coordinate Note semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiCoordinateNoteData * GetCoordinateNoteData
            (
            ) = 0;
            /** Returns the PMI Surface Finish semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiSurfaceFinishData * GetSurfaceFinishData
            (
            ) = 0;
            /** Returns the PMI Datum Target semantic data  @return  PMI semantic data 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: virtual NXOpen::Annotations::PmiDatumTargetData * GetDatumTargetData
            (
            ) = 0;
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
