#ifndef NXOpen_MECHATRONICS_PULLEYBELTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_PULLEYBELTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_PulleyBeltBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class PulleyBeltBuilder;
    }
    class Builder;
    class NXObject;
    namespace Mechatronics
    {
        class _PulleyBeltBuilderBuilder;
        class PulleyBeltBuilderImpl;
        /**  @brief Represents a @link Mechatronics::PulleyBelt Mechatronics::PulleyBelt@endlink  builder 

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::PulleyBeltCollection::CreatePulleyBeltBuilder  NXOpen::Mechatronics::PulleyBeltCollection::CreatePulleyBeltBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  PulleyBeltBuilder : public NXOpen::Builder
        {
             /**  @brief  Defines the pulley belt data structure.  

              
                     <remark> Two ways to construct this data struct, and it's recomanded to use Method2 to construct the data. </remark>
                     <remark> Method1: specify its attributes one by one manually. In this method, it needs to garuantee all input values are legal. Otherwise, the feature might not work as expected. </remark>
                     <remark> Method2: retrieved it by calling @link Mechatronics::PulleyBeltBuilder::AddPulley Mechatronics::PulleyBeltBuilder::AddPulley@endlink  infterface.</remark>
                     <remark>          The interface will validate the input object and it will return error code if it's illegal. See more details in the interface's comments. </remark>

                     <remark> More explanation of data attributes: </remark>
                     <remark> bMasterFlag: only need to set one pulley as master axis joint in a pulleys and belt chain. </remark>
                     <remark> jointObjName: it will be auto retrieved when using Method2 to construct the data. </remark>
                     <remark> dRatio: set value to "0.0" when constructing, it means NX app will automutically calculate transmition ratio for this pulley. </remark>
                     <remark>        specify none zero value when constructing, it means NX app will directly use this value as transmition ratio.  </remark>
                     <remark> dRadius: set value to "0.0" when constructing, it means NX app will try to fetch the radius of the input "faceObject" object. </remark>
                     <remark>         specify none zero value when constructing, it means NX app will directly use this value to calculate the transmition ratio. </remark>
                     <remark> faceObject: only cylindrical face is legal. It can be NULL_TAG when using Method1 to construct the data. </remark>
                     <remark> jointObject: only hinge joint or cylindrical joint is legal. </remark>
                    */
            public:
            struct PulleyBeltData
            {
                public: /** The flag to indicate a pulley is set as master rotary axis or not */bool BMasterFlag;
                public: /** Pulley Joint Object Name Text   */NXString JointObjName;
                public: /** Pulley transmition ratio, its sign indicating the rotary direction        */double DRatio;
                public: /** dradius */ double DRadius;
                public: /** The tag of touch face object          */NXOpen::NXObject * FaceObject;
                public: /** The tag of axis Joint Object          */NXOpen::NXObject * JointObject;
                public: PulleyBeltData() :
                    BMasterFlag(),
                    JointObjName(),
                    DRatio(),
                    DRadius(),
                    FaceObject(),
                    JointObject()
                {
                }
                /** Constructor for the PulleyBeltData struct. */ 
                public: PulleyBeltData(bool bMasterFlagInitial /** The flag to indicate a pulley is set as master rotary axis or not */, 
                        const NXString &jointObjNameInitial /** Pulley Joint Object Name Text   */, 
                        double dRatioInitial /** Pulley transmition ratio, its sign indicating the rotary direction        */, 
                        double dRadiusInitial /** dradius */ , 
                        NXOpen::NXObject * faceObjectInitial /** The tag of touch face object          */, 
                        NXOpen::NXObject * jointObjectInitial /** The tag of axis Joint Object          */) :
                    BMasterFlag(bMasterFlagInitial),
                    JointObjName(jointObjNameInitial),
                    DRatio(dRatioInitial),
                    DRadius(dRadiusInitial),
                    FaceObject(faceObjectInitial),
                    JointObject(jointObjectInitial)
                {
                }
            };

            private: PulleyBeltBuilderImpl * m_pulleybeltbuilder_impl;
            private: friend class  _PulleyBeltBuilderBuilder;
            protected: PulleyBeltBuilder();
            public: ~PulleyBeltBuilder();
            /**  @brief  Set the datum object, it can be cylindrical face object or hinge joint object, which direction is refered as the expected revolve direction. 

              
                      <remark> This interface must be called before calling @link Mechatronics::PulleyBeltBuilder::AddPulley Mechatronics::PulleyBeltBuilder::AddPulley@endlink  to add a pulley. </remark>
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetBaseObject
            (
                NXOpen::NXObject * objTag /** The tag of datum Object, it can be cylindrical face object or hinge/cylindrical jiont object. */
            );
            /**  @brief  Validate the pulley with input parameter legal or not and construct JA_PULLEY_BELT_BUILDER_PulleyBeltData if it pass validation.  

              
                     <remark> Check the return value to know if it pass validation or not. Only when returning MDPHYS_err_no_error means validation successful. </remark>
                     <remark> Input object will pass validation only when it's cylindrical face or hinge/cylindrical joint are legal object and only when its direction is parallel to datum object. </remark>
                     <remark> The interface will try to fetch the radius of the input object automatically when parameter "dRadius" is 0 and "objTag" is cylindrical face object. </remark>
                     <remark> The interface might auto create hinge joint and rigid body when parameter "dRadius" is 0 and "objTag" is cylindrical face object and it has no legal hinge joint linked to its solid body. </remark>

                     <remark> More explanation of input parameters: </remark>
                     <remark> objTag: only cylindrical face or hinge/cylindrical joint is legal. </remark>
                     <remark> dRatio: input parameter, 0 value means NX app will automutically calculate transmition ratio for this pulley; none zero value means NX app will directly use this value as transmition ratio, and ignore the "dRadius" value. </remark>
                     <remark> dRadius: input parameter, 0 value means NX app will fetch the radius if parameter "objTag" is cylindrical face object; none zero value means NX app will directly use this value to calculate the transmition ratio. </remark>
                     <remark> bMasterFlag: input parameter, "true" means it's set to master axis joint pulley in this pulleys and belt chain; "false" means it's set to slave axis joint pulley in this pulleys and belt chain. </remark>
                     <remark> pulleyData: output parameter, it's useful when the interface returns MDPHYS_err_no_error. </remark>
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::PulleyBeltBuilder::PulleyBeltData AddPulley
            (
                NXOpen::NXObject * objTag /** The tag of the input object */,
                double dRadius /** The shortest distance from the touch face to rotary axis joint vector, with mm unit */,
                double dRatio /** Pulley transmition ratio, its sign indicating the rotary direction        */,
                bool bMasterFlag /** The flag to indicate a pulley is set as master rotary axis or not */
            );
            /** Delete the auto creation reference object such as rigid body or hinge joint linked to input parameter "objTag" 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void DeletePulley
            (
                NXOpen::NXObject * objTag /** The tag of the input object */
            );
            /** Gets all parameter data.  @return  Array of parameter data 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: std::vector<NXOpen::Mechatronics::PulleyBeltBuilder::PulleyBeltData> GetPulleyBeltData
            (
            );
            /**  @brief  Sets all parameter data.  

             
                    <remark> The elements in input array "parameterData" can be constructed by JA_PULLEY_BELT_BUILDER_AddPulley interface. </remark>
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPulleyBeltData
            (
                const std::vector<NXOpen::Mechatronics::PulleyBeltBuilder::PulleyBeltData> & parameterData /** Array of parameter data */
            );
            /**Returns  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
