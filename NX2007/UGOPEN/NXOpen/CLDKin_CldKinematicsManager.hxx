#ifndef NXOpen_CLDKIN_CLDKINEMATICSMANAGER_HXX_INCLUDED
#define NXOpen_CLDKIN_CLDKINEMATICSMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CLDKin_CldKinematicsManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libcldkinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CLDKin
    {
        class CldKinematicsManager;
    }
    class Session;
    namespace CLDKin
    {
        class FixedJointBuilder;
    }
    namespace CLDKin
    {
        class GroupBuilder;
    }
    namespace CLDKin
    {
        class HingeJointBuilder;
    }
    namespace CLDKin
    {
        class ImportKinematicsBuilder;
    }
    namespace CLDKin
    {
        class JointJogBuilder;
    }
    namespace CLDKin
    {
        class PoseEditorBuilder;
    }
    namespace CLDKin
    {
        class RigidGroupBuilder;
    }
    namespace CLDKin
    {
        class SlidingJointBuilder;
    }
    namespace CLDKin
    {
        class StateBuilder;
    }
    class Part;
    class TaggedObject;
    namespace CLDKin
    {
        class CldKinematicsManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents a Manager of CLD Kinematics dialogs  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class CLDKINOPENCPPEXPORT  CldKinematicsManager
        {
            private: CldKinematicsManagerImpl * m_cldkinematicsmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CldKinematicsManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static CldKinematicsManager* theCldKinematicsManager;
            /** Returns the CldKinematicsManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static CldKinematicsManager* GetCldKinematicsManager(NXOpen::Session *owner);
            public: ~CldKinematicsManager();

            /// \cond NX_NO_DOC 
            /** To calculate and set attribute group name  @return  
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") OR ld_line_designer ("FULL LINE DESIGNER") OR alp_planner ("Assembly Line Planner") */
            public: NXOpen::CLDKin::JointJogBuilder * CreateJointJogBuilderBuilder
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create pose editor builder  @return  
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") OR ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::CLDKin::PoseEditorBuilder * CreatePoseEditorBuilder
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create link builder  @return  
             <br>  Created in NX1859.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::RigidGroupBuilder * CreateRigidGroupBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * rigidGroup /** rigidgroup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create fixed joint builder  @return  
             <br>  Created in NX1859.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::FixedJointBuilder * CreateFixedJointBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * fixedJoint /** fixedjoint */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create hinge joint builder  @return  
             <br>  Created in NX1859.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::HingeJointBuilder * CreateHingeJointBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * revoluteJoint /** revolutejoint */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create sliding joint builder  @return  
             <br>  Created in NX1859.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::SlidingJointBuilder * CreateSlidingJointBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * slidingJoint /** slidingjoint */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create group builder  @return  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::GroupBuilder * CreateGroupBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * group /** group */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create group builder  @return  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: NXOpen::CLDKin::StateBuilder * CreateStateBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * group /** group */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** To create import kinematics builder  @return  
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CLDKin::ImportKinematicsBuilder * CreateImportKinematicsBuilder
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Export the PLMXML from Mfg Kinematics. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: void ExportPlmxml
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Import the PLMXML for Mfg Kinematics. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: void ImportPlmxml
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set the given joints of type MotionDesigner_HingeJoint and-or MotionDesigner_SlidingJoint driving status. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") OR ld_author (" Line Designer Advanced Author") */
            public: void SetJointsDrivingStatus
            (
                const std::vector<NXOpen::TaggedObject *> & joints /** joints */ ,
                bool isDriving /** isdriving */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
