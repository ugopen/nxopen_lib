#ifndef NXOpen_CAM_POSTDEBUGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_POSTDEBUGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PostDebugBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PostDebugBuilder;
    }
    class Builder;
    namespace CAM
    {
        class _PostDebugBuilderBuilder;
        class PostDebugBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link CAM::PostDebugBuilder CAM::PostDebugBuilder@endlink 
             <br> Use the @link PostDebugBuilder PostDebugBuilder@endlink  class to create a PostDebugBuilder object.  <br> 
         <br>  Created in NX9.0.1.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  PostDebugBuilder : public NXOpen::Builder
        {
            /** Represents the trace type */

            /// \cond NX_NO_DOC 
            public: enum TraceType
            {
                TraceTypeOBuf/** Trace OutPut Buffer */,
                TraceTypeDoEvent/** Trace DoEvent call in MOM */,
                TraceTypeDoEventFast/** Trace DoEventFast call in MOM */,
                TraceTypeTimer/** Trace timer when do post */
            };


            /// \endcond 
            /** The output type */

            /// \cond NX_NO_DOC 
            public: enum OutputType
            {
                OutputTypeSyslog/** Output to syslog */,
                OutputTypeListingWindow/** Output to listing window */,
                OutputTypeAutotest/** Output to autotest */,
                OutputTypeToFile/** Output to file */
            };


            /// \endcond 
            private: PostDebugBuilderImpl * m_postdebugbuilder_impl;
            private: friend class  _PostDebugBuilderBuilder;
            protected: PostDebugBuilder();
            public: ~PostDebugBuilder();

            /// \cond NX_NO_DOC 
            /** Gets the trace  @return  The state
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: bool GetTrace
            (
                NXOpen::CAM::PostDebugBuilder::TraceType type /** The trace type*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets the trace 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTrace
            (
                NXOpen::CAM::PostDebugBuilder::TraceType type /** The trace type*/,
                bool state /** The state*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the dump output 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PostDebugBuilder::OutputType DumpOutput
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the dump output 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDumpOutput
            (
                NXOpen::CAM::PostDebugBuilder::OutputType type /** The dump output type*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the output filename 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : None */
            public: NXString DumpToFileName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the output filename 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDumpToFileName
            (
                const NXString & name /** the output new name */
            );
            /**Sets  the output filename 
             <br>  Created in NX9.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetDumpToFileName
            (
                const char * name /** the output new name */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets the trace 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDebugTrace
            (
                const NXString & type /** The trace key*/,
                bool state /** The state*/
            );
            /**Sets the trace 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetDebugTrace
            (
                const char * type /** The trace key*/,
                bool state /** The state*/
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
