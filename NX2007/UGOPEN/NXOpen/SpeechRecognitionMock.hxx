#ifndef NXOpen_SPEECHRECOGNITIONMOCK_HXX_INCLUDED
#define NXOpen_SPEECHRECOGNITIONMOCK_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SpeechRecognitionMock.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SpeechRecognitionMock;
    class Session;
    class SpeechRecognitionMockImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used for autotests.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Usable only on Windows <br> 
     <br>  Created in NX1980.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SpeechRecognitionMock
    {
        private: SpeechRecognitionMockImpl * m_speechrecognitionmock_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit SpeechRecognitionMock(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        private: static SpeechRecognitionMock* theSpeechRecognitionMock;
        /** Returns the SpeechRecognitionMock object for the running session which serves as the 'gateway' class for the application API.  
            References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
            Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
        */
        public: static SpeechRecognitionMock* GetSpeechRecognitionMock(NXOpen::Session *owner);
        public: ~SpeechRecognitionMock();

        /// \cond NX_NO_DOC 
        /** Toggle on or off speech recognition. 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void InvokeMockSpeechRecognition
        (
            bool isSpecialKeyword /** isspecialkeyword */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets the mock transcribed text to be used to perform action by speech recognition framework
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void SetMockTranscribedText
        (
            const NXString & mockTranscribedText /** mocktranscribedtext */ 
        );
        /**Sets the mock transcribed text to be used to perform action by speech recognition framework
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        void SetMockTranscribedText
        (
            const char * mockTranscribedText /** mocktranscribedtext */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Gets the title of dialog launched by speech recognition framework
         <br>  Usable only on Windows <br> 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetLaunchedCommandTitle
        (
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
