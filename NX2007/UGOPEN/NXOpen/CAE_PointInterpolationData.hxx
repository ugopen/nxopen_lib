#ifndef NXOpen_CAE_POINTINTERPOLATIONDATA_HXX_INCLUDED
#define NXOpen_CAE_POINTINTERPOLATIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PointInterpolationData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PointInterpolationData;
    }
    namespace CAE
    {
        class PointInterpolationDataImpl;
        /** Represents a data required for point result interpolation. 
                <br/>User can get list of @link NXOpen::CAE::PointInterpolationData NXOpen::CAE::PointInterpolationData@endlink  by passing list of @link NXOpen::Point3d NXOpen::Point3d@endlink  to @link NXOpen::CAE::Result::AskElementAtLocations NXOpen::CAE::Result::AskElementAtLocations@endlink  
                present in @link NXOpen::CAE::Result NXOpen::CAE::Result@endlink 
                <br/>Single or List of @link NXOpen::CAE::PointInterpolationData NXOpen::CAE::PointInterpolationData@endlink  can be used in 
                @link NXOpen::CAE::ResultAccess::AskResultAtLocationInElementAllComponents NXOpen::CAE::ResultAccess::AskResultAtLocationInElementAllComponents@endlink  or @link NXOpen::CAE::ResultAccess::AskResultAtLocationsInElementAllComponents NXOpen::CAE::ResultAccess::AskResultAtLocationsInElementAllComponents@endlink 
                to get interpolated result values at location.
                <br/>User can also get element index inside which a point lies using @link NXOpen::CAE::PointInterpolationData::AskElementIndex NXOpen::CAE::PointInterpolationData::AskElementIndex@endlink 
            
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PointInterpolationData : public NXOpen::TransientObject
        {
            private: PointInterpolationDataImpl * m_pointinterpolationdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit PointInterpolationData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                        it is illegal to use the object. In .NET, this method is automatically
                        called when the object is deleted by the garbage collector. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PointInterpolationData();
            /** Deletes the pointinterpolationdata object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void Delete
            (
            );
            /** Ask for element index  @return  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int AskElementIndex
            (
            );
            /** Ask for point  @return  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d AskPoint
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
