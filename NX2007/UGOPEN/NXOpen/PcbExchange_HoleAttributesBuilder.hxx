#ifndef NXOpen_PCBEXCHANGE_HOLEATTRIBUTESBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_HOLEATTRIBUTESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_HoleAttributesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class HoleAttributesBuilder;
    }
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    namespace PcbExchange
    {
        class _HoleAttributesBuilderBuilder;
        class HoleAttributesBuilderImpl;
        /** Represents a builder to create or edit hole attributes.  <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateHoleAttributesBuilder  NXOpen::PcbExchange::Manager::CreateHoleAttributesBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  HoleAttributesBuilder : public NXOpen::Builder
        {
            /** The hole type options. */
            public: enum TypeEnum
            {
                TypeEnumPin/** pin */  = 1,
                TypeEnumVia/** via */ ,
                TypeEnumMounting/** mounting */ ,
                TypeEnumTool/** tool */ ,
                TypeEnumOther/** other */ 
            };

            /** The plating style options. */
            public: enum PlatingStyleEnum
            {
                PlatingStyleEnumPlatedThru/** plated thru */  = 1,
                PlatingStyleEnumNonPlatedThru/** non plated thru */ 
            };

            /** The associated part options. */
            public: enum AssociatedPartEnum
            {
                AssociatedPartEnumBoard/** board */  = 1,
                AssociatedPartEnumNorefdes/** norefdes */ ,
                AssociatedPartEnumSpecify/** specify */ 
            };

            /** The owner options. */
            public: enum OwnerEnum
            {
                OwnerEnumMcad/** mcad */  = 1,
                OwnerEnumEcad/** ecad */ ,
                OwnerEnumUnowned/** unowned */ 
            };

            private: HoleAttributesBuilderImpl * m_holeattributesbuilder_impl;
            private: friend class  _HoleAttributesBuilderBuilder;
            protected: HoleAttributesBuilder();
            public: ~HoleAttributesBuilder();
            /**Returns  the feature 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * Features
            (
            );
            /**Returns  the hole type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::HoleAttributesBuilder::TypeEnum HoleType
            (
            );
            /**Sets  the hole type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetHoleType
            (
                NXOpen::PcbExchange::HoleAttributesBuilder::TypeEnum type /** type */ 
            );
            /**Returns  the hole plating style 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::HoleAttributesBuilder::PlatingStyleEnum PlatingStyle
            (
            );
            /**Sets  the hole plating style 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPlatingStyle
            (
                NXOpen::PcbExchange::HoleAttributesBuilder::PlatingStyleEnum platingStyle /** platingstyle */ 
            );
            /**Returns  the hole associated part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::HoleAttributesBuilder::AssociatedPartEnum AssociatedPart
            (
            );
            /**Sets  the hole associated part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetAssociatedPart
            (
                NXOpen::PcbExchange::HoleAttributesBuilder::AssociatedPartEnum associatedPart /** associatedpart */ 
            );
            /**Returns  the hole specified part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SpecifiedPart
            (
            );
            /**Sets  the hole specified part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetSpecifiedPart
            (
                const NXString & specifiedPart /** specifiedpart */ 
            );
            /**Sets  the hole specified part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetSpecifiedPart
            (
                const char * specifiedPart /** specifiedpart */ 
            );
            /**Returns  the hole owner 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::HoleAttributesBuilder::OwnerEnum Owner
            (
            );
            /**Sets  the hole owner 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetOwner
            (
                NXOpen::PcbExchange::HoleAttributesBuilder::OwnerEnum owner /** owner */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
