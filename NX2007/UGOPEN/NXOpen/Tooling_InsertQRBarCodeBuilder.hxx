#ifndef NXOpen_TOOLING_INSERTQRBARCODEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_INSERTQRBARCODEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_InsertQRBarCodeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Tooling_InsertBarcodeBuilder.hxx>
#include <NXOpen/Tooling_RasterImageBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class InsertQRBarCodeBuilder;
    }
    class Builder;
    class Plane;
    namespace Tooling
    {
        class InsertBarcodeBuilder;
    }
    namespace Tooling
    {
        class RasterImageBuilder;
    }
    namespace Tooling
    {
        class _InsertQRBarCodeBuilderBuilder;
        class InsertQRBarCodeBuilderImpl;
        /** Creates Insert QR/Bar Code Builder  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateInsertQRBarCodeBuilder  NXOpen::Tooling::MoldwizardManager::CreateInsertQRBarCodeBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  InsertQRBarCodeBuilder : public NXOpen::Builder
        {
            /** the code type includes QR code and Bar code*/
            public: enum Code
            {
                CodeQRCode/** qrcode */ ,
                CodeBarCode/** bar code */ 
            };

            private: InsertQRBarCodeBuilderImpl * m_insertqrbarcodebuilder_impl;
            private: friend class  _InsertQRBarCodeBuilderBuilder;
            protected: InsertQRBarCodeBuilder();
            public: ~InsertQRBarCodeBuilder();
            /** Sets code type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetCodeType
            (
                NXOpen::Tooling::InsertQRBarCodeBuilder::Code codeType /** codetype */ 
            );
            /**Returns  the code rule 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CodeRule
            (
            );
            /**Sets  the code rule 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetCodeRule
            (
                const NXString & codeRule /** coderule */ 
            );
            /**Sets  the code rule 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetCodeRule
            (
                const char * codeRule /** coderule */ 
            );
            /**Sets the QR code builder
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetQRCodeBuilder
            (
                NXOpen::Tooling::RasterImageBuilder * qrCodeBuilder /** qrcodebuilder */ 
            );
            /**Sets the bar code builder
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBarCodeBuilder
            (
                NXOpen::Tooling::InsertBarcodeBuilder * barCodeBuilder /** barcodebuilder */ 
            );
            /**Gets the target Object to put QR code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * GetTargetObjectForQRCode
            (
            );
            /**Sets the target Object to put QR code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTargetObjectForQRCode
            (
                NXOpen::Plane * targetObj /** targetobj */ 
            );
            /**Gets the target Object to put bar code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * GetTargetObjectForBarCode
            (
            );
            /**Sets the target Object to put bar code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTargetObjectForBarCode
            (
                NXOpen::Plane * targetObj /** targetobj */ 
            );
            /**Deletes bar code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DeleteBarCode
            (
            );
            /**Deletes QR code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DeleteQRCode
            (
            );
            /**Generates QR code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void GenerateQRCode
            (
            );
            /**Edits bar code text, but if there is no bar code, then generate a new barcode
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void EditBarCodeText
            (
            );
            /**Generates bar code
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void GenerateBarCode
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
