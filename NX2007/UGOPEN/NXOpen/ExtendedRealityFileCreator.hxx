#ifndef NXOpen_EXTENDEDREALITYFILECREATOR_HXX_INCLUDED
#define NXOpen_EXTENDEDREALITYFILECREATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ExtendedRealityFileCreator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ExtendedRealityFileCreator;
    class Builder;
    class CoordinateSystem;
    class SelectDisplayableObjectList;
    class _ExtendedRealityFileCreatorBuilder;
    class ExtendedRealityFileCreatorImpl;
    /** Represents a @link NXOpen::ExtendedRealityFileCreator NXOpen::ExtendedRealityFileCreator@endlink  to be used when exporting the extended reality Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateExtendedRealityFileCreator  NXOpen::DexManager::CreateExtendedRealityFileCreator @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    DataCompression </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    ExportAppearanceSchemes </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ExportAssemblyArrangements </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ExportAssemblyExplosions </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ExportCameras </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ExportEntity </term> <description> 
     
    EntirePart </description> </item> 

    <item><term> 
     
    ExportMotionAnimation </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ExportPositionType </term> <description> 
     
    Absolute </description> </item> 

    <item><term> 
     
    Format </term> <description> 
     
    Gltf </description> </item> 

    </list> 

     <br>  Created in NX1980.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  ExtendedRealityFileCreator : public NXOpen::Builder
    {
        /** Options to specify the objects to export */
        public: enum ObjectToExport
        {
            ObjectToExportEntirePart/** entire part */ ,
            ObjectToExportSelectedObjects/** selected objects */ 
        };

        /** Options to specify exported position */
        public: enum ExportedPositionCSYS
        {
            ExportedPositionCSYSAbsolute/** export data with respect to absolute CSYS */,
            ExportedPositionCSYSWcs/** export data with respect to working CSYS */,
            ExportedPositionCSYSUserDefined/** export data with respect to user defined CSYS */
        };

        /** Extended Reality File Formats  */
        public: enum OutputFormat
        {
            OutputFormatGltf/** gltf */ ,
            OutputFormatGlb/** glb */ ,
            OutputFormatUsdz/** usdz */ 
        };

        private: ExtendedRealityFileCreatorImpl * m_extendedrealityfilecreator_impl;
        private: friend class  _ExtendedRealityFileCreatorBuilder;
        protected: ExtendedRealityFileCreator();
        public: ~ExtendedRealityFileCreator();
        /**Returns  the export entity 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ExtendedRealityFileCreator::ObjectToExport ExportEntity
        (
        );
        /**Sets  the export entity 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportEntity
        (
            NXOpen::ExtendedRealityFileCreator::ObjectToExport exportEntity /** exportentity */ 
        );
        /**Returns  the bodies to export to extended reality file 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SelectDisplayableObjectList * BodiesToExport
        (
        );
        /**Returns  the exported position options 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ExtendedRealityFileCreator::ExportedPositionCSYS ExportPositionType
        (
        );
        /**Sets  the exported position options 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportPositionType
        (
            NXOpen::ExtendedRealityFileCreator::ExportedPositionCSYS format /** format */ 
        );
        /**Returns  the exported position coordinate system 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CoordinateSystem * CsysOfexportPosition
        (
        );
        /**Sets  the exported position coordinate system 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetCsysOfexportPosition
        (
            NXOpen::CoordinateSystem * csys /** csys */ 
        );
        /**Returns  the exported extended reality file format 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ExtendedRealityFileCreator::OutputFormat Format
        (
        );
        /**Sets  the exported extended reality file format 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetFormat
        (
            NXOpen::ExtendedRealityFileCreator::OutputFormat format /** format */ 
        );
        /**Returns  the file location 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXString FileLocation
        (
        );
        /**Sets  the file location 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetFileLocation
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the file location 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        void SetFileLocation
        (
            const char * filename /** filename */ 
        );
        /**Returns  the option to export cameras 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportCameras
        (
        );
        /**Sets  the option to export cameras 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportCameras
        (
            bool exportCameras /** exportcameras */ 
        );
        /**Returns  the option to export exploded views 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportAssemblyExplosions
        (
        );
        /**Sets  the option to export exploded views 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportAssemblyExplosions
        (
            bool exportAssemblyExplosions /** exportassemblyexplosions */ 
        );
        /**Returns  the option to export assembly arrangements 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportAssemblyArrangements
        (
        );
        /**Sets  the option to export assembly arrangements 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportAssemblyArrangements
        (
            bool exportAssemblyArrangements /** exportassemblyarrangements */ 
        );
        /**Returns  the option to export motion animation 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportMotionAnimation
        (
        );
        /**Sets  the option to export motion animation 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportMotionAnimation
        (
            bool exportMotionAnimation /** exportmotionanimation */ 
        );
        /**Returns  the option to export appearance schemes 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: bool ExportAppearanceSchemes
        (
        );
        /**Sets  the option to export appearance schemes 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetExportAppearanceSchemes
        (
            bool exportAppearanceSchemes /** exportappearanceschemes */ 
        );
        /**Returns  the option to compress the mesh data 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: bool DataCompression
        (
        );
        /**Sets  the option to compress the mesh data 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : nx_xr (" NX Extended Reality") */
        public: void SetDataCompression
        (
            bool dataCompression /** datacompression */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
