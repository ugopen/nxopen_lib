#ifndef NXOpen_REGIONRECOGNITION_REGIONFINDERBUILDER_HXX_INCLUDED
#define NXOpen_REGIONRECOGNITION_REGIONFINDERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     RegionRecognition_RegionFinderBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_regionrecognition_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace RegionRecognition
    {
        class RegionFinderBuilder;
    }
    class Builder;
    class TaggedObject;
    namespace RegionRecognition
    {
        class _RegionFinderBuilderBuilder;
        class RegionFinderBuilderImpl;
        /** Represents a @link RegionRecognition::RegionFinderBuilder RegionRecognition::RegionFinderBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::RegionRecognition::Manager::CreateRegionFinderBuilder  NXOpen::RegionRecognition::Manager::CreateRegionFinderBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_REGIONRECOGNITIONEXPORT  RegionFinderBuilder : public NXOpen::Builder
        {
            private: RegionFinderBuilderImpl * m_regionfinderbuilder_impl;
            private: friend class  _RegionFinderBuilderBuilder;
            protected: RegionFinderBuilder();
            public: ~RegionFinderBuilder();
            /** Set a new origin region to the builder, this function will remove all of old regions from the builder  @return  True if succesully added this region to the builder, otherwise return False. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool SetOriginRegion
            (
                const std::vector<NXOpen::TaggedObject *> & objects /** number of items for this region */
            );
            /** Perform a search  @return   
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> PerformSearch
            (
            );
            /** Set a similarFlag to the builder, this function will reset a new similarFlag from UI to the builder  @return  True if succesully set this similarFlag to the builder, otherwise return False. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool SetSimilarFlag
            (
                int similarFlag /** similarflag */ 
            );
            /** Set a search method to the builder 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSearchMethod
            (
                int searchMethod /** searchmethod */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
