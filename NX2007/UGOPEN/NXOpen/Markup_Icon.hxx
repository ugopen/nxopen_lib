#ifndef NXOpen_MARKUP_ICON_HXX_INCLUDED
#define NXOpen_MARKUP_ICON_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Markup_Icon.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Markup_Element.hxx>
#include <NXOpen/libnxopencpp_markup_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Markup
    {
        class Icon;
    }
    namespace Markup
    {
        class Element;
    }
    namespace Markup
    {
        class _IconBuilder;
        class IconImpl;

        /// \cond NX_NO_DOC 
        /**
                Represents a @link NXOpen::Markup::Icon NXOpen::Markup::Icon@endlink 
             <br> To create or edit an instance of this class, use @link NXOpen::Markup::ElementBuilder  NXOpen::Markup::ElementBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MARKUPEXPORT  Icon : public NXOpen::Markup::Element
        {
            /** Represents the possible @link NXOpen::Markup::Icon NXOpen::Markup::Icon@endlink  size.
                    */

            /// \cond NX_NO_DOC 
            public: enum Size
            {
                SizeExtraSmall/** Extra small size */,
                SizeSmall/** Small size */,
                SizeMedium/** Medium size  */,
                SizeLarge/** Large size */
            };


            /// \endcond 
            private: IconImpl * m_icon_impl;
            private: friend class  _IconBuilder;
            protected: Icon();
            public: ~Icon();

            /// \cond NX_NO_DOC 
            /**Returns  the icon name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString IconName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the icon name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            public: void SetIconName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the icon name. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            void SetIconName
            (
                const char * name /** name */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the icon size. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Markup::Icon::Size IconSize
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the icon size. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            public: void SetIconSize
            (
                NXOpen::Markup::Icon::Size size /** size */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
