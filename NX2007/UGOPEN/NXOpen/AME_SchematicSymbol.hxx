#ifndef NXOpen_AME_SCHEMATICSYMBOL_HXX_INCLUDED
#define NXOpen_AME_SCHEMATICSYMBOL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_SchematicSymbol.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_SymbolVariantBuilder.hxx>
#include <NXOpen/AME_BaseDefinition.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class SchematicSymbol;
    }
    namespace AME
    {
        class BaseDefinition;
    }
    namespace AME
    {
        class _SchematicSymbolBuilder;
        class SchematicSymbolImpl;
        /** Represents a Schematic Symbol object <br> This object does not need a creator.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  SchematicSymbol : public NXOpen::AME::BaseDefinition
        {
            private: SchematicSymbolImpl * m_schematicsymbol_impl;
            private: friend class  _SchematicSymbolBuilder;
            protected: SchematicSymbol();
            public: ~SchematicSymbol();
            /** Preprocess symbol geometry for editing purpose
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PreprocessSymbolGeometry
            (
            );
            /** Set active symbol variant
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetActiveVariant
            (
                NXOpen::AME::SymbolVariantBuilder::Variant activeVariant /** activevariant */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
