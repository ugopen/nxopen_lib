#ifndef NXOpen_DSE_DESIGNOBJECTIVEBUILDER_HXX_INCLUDED
#define NXOpen_DSE_DESIGNOBJECTIVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DSE_DesignObjectiveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libdseopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DSE
    {
        class DesignObjectiveBuilder;
    }
    class Builder;
    class NXObject;
    namespace DSE
    {
        class _DesignObjectiveBuilderBuilder;
        class DesignObjectiveBuilderImpl;
        /** Represents Design Objective Builder class  <br> To create a new instance of this class, use @link NXOpen::DSE::StudyManager::CreateDesignObjectiveBuilder  NXOpen::DSE::StudyManager::CreateDesignObjectiveBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class DSEOPENCPPEXPORT  DesignObjectiveBuilder : public NXOpen::Builder
        {
            /** Represents Design objective enum type.*/
            public: enum ObjectiveTypeOption
            {
                ObjectiveTypeOptionMaximize/** maximize */ ,
                ObjectiveTypeOptionMinimize/** minimize */ ,
                ObjectiveTypeOptionMaximizeDifference/** maximize difference */ ,
                ObjectiveTypeOptionMinimizeDifference/** minimize difference */ 
            };

            private: DesignObjectiveBuilderImpl * m_designobjectivebuilder_impl;
            private: friend class  _DesignObjectiveBuilderBuilder;
            protected: DesignObjectiveBuilder();
            public: ~DesignObjectiveBuilder();
            /**Returns  the objective name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ObjectiveName
            (
            );
            /**Sets  the objective name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetObjectiveName
            (
                const NXString & objectiveName /** objectivename */ 
            );
            /**Sets  the objective name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            void SetObjectiveName
            (
                const char * objectiveName /** objectivename */ 
            );
            /**Returns  the objective Type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DSE::DesignObjectiveBuilder::ObjectiveTypeOption ObjectiveType
            (
            );
            /**Sets  the objective Type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetObjectiveType
            (
                NXOpen::DSE::DesignObjectiveBuilder::ObjectiveTypeOption objectiveType /** objectivetype */ 
            );
            /**Returns  the objective Target value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double ObjectiveTargetValue
            (
            );
            /**Sets  the objective Target value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetObjectiveTargetValue
            (
                double objectiveTargetValue /** objectivetargetvalue */ 
            );
            /** Set the selected application object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetSelectedAppObject
            (
                NXOpen::NXObject * appObject /** appobject */ 
            );
            /**Returns  the objective linear weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int LinearWeight
            (
            );
            /**Sets  the objective linear weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetLinearWeight
            (
                int linearWeight /** linearweight */ 
            );
            /**Returns  the objective quad weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int QuadWeight
            (
            );
            /**Sets  the objective quad weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetQuadWeight
            (
                int quadWeight /** quadweight */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
