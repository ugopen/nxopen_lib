#ifndef NXOpen_CAM_CUSTOMCURVELISTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CUSTOMCURVELISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CustomCurveListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CustomCurveListBuilder;
    }
    namespace CAM
    {
        class CurveItemBuilder;
    }
    namespace CAM
    {
        class CurveItemBuilderList;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    class Section;
    namespace CAM
    {
        class _CustomCurveListBuilderBuilder;
        class CustomCurveListBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a custom curve list 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CustomCurveListBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: CustomCurveListBuilderImpl * m_customcurvelistbuilder_impl;
            private: friend class  _CustomCurveListBuilderBuilder;
            protected: CustomCurveListBuilder();
            public: ~CustomCurveListBuilder();

            /// \cond NX_NO_DOC 
            /** Create a curve  @return  the curve 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CurveItemBuilder * CreateCurve
            (
                NXOpen::Section * section /** section */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the curves 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CurveItemBuilderList * Curves
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Create automatic curves 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void CreateAutomaticCurves
            (
                double distanceTolerance /** distance tolerance */ ,
                double chainingTolerance /** chaining tolerance */ ,
                double angleTolerance /** angle tolerance */ ,
                std::vector<NXOpen::NXObject *> & tagArray /** Array with the automatic curves objects */
            );

            /// \endcond 
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
