#ifndef NXOpen_HUMANH10DIALOGBUILDER_HXX_INCLUDED
#define NXOpen_HUMANH10DIALOGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     HumanH10DialogBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class HumanH10DialogBuilder;
    class Builder;
    namespace Features
    {
        class HumanBuilder;
    }
    class Point;
    class _HumanH10DialogBuilderBuilder;
    class HumanH10DialogBuilderImpl;
    /** Dialog for creating and editing V10 Jack Human figures  <br> To create a new instance of this class, use @link NXOpen::Features::HumanBuilder::CreateHumanH10DialogBuilder  NXOpen::Features::HumanBuilder::CreateHumanH10DialogBuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    AgeInput </term> <description> 
     
    25 </description> </item> 

    </list> 

     <br>  Created in NX1953.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  HumanH10DialogBuilder : public NXOpen::Builder
    {
        /** gender of hand figure, also used for scaling */
        public: enum GenderType
        {
            GenderTypeMale/** male */ ,
            GenderTypeFemale/** female */ 
        };

        /** test */
        public: enum DatabaseType
        {
            DatabaseTypeAnsur/** ansur */ ,
            DatabaseTypeAnsur2/** ansur2 */ ,
            DatabaseTypeNhanes/** nhanes */ ,
            DatabaseTypeNhanes2014/** nhanes2014 */ 
        };

        /** test */
        public: enum HeightUnitsEnum
        {
            HeightUnitsEnumIn/** in */ 
        };

        /** test */
        public: enum HeightInputType
        {
            HeightInputTypeCustom/** custom */ ,
            HeightInputTypePredictfromweight/** predictfromweight */ 
        };

        /** test */
        public: enum WeightUnitsEnum
        {
            WeightUnitsEnumKg/** kg */ ,
            WeightUnitsEnumLbs/** lbs */ 
        };

        /** test */
        public: enum WeightInputType
        {
            WeightInputTypeCustom/** custom */ ,
            WeightInputTypePredictfromheight/** predictfromheight */ 
        };

        /** test */
        public: enum ShoulderMeasureType
        {
            ShoulderMeasureTypeBiacromialBreadth/** biacromial breadth */ ,
            ShoulderMeasureTypeBideltoidBreadth/** bideltoid breadth */ 
        };

        /** test */
        public: enum HipMeasureType
        {
            HipMeasureTypeHipBreadth/** hip breadth */ ,
            HipMeasureTypeHipCircumference/** hip circumference */ 
        };

        /** test */
        public: enum RefPointType
        {
            RefPointTypeLeftfoot/** leftfoot */ ,
            RefPointTypeRightfoot/** rightfoot */ 
        };

        private: HumanH10DialogBuilderImpl * m_humanh10dialogbuilder_impl;
        private: friend class  _HumanH10DialogBuilderBuilder;
        protected: HumanH10DialogBuilder();
        public: ~HumanH10DialogBuilder();
        /**Returns  the name 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXString Name
        (
        );
        /**Sets  the name 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetName
        (
            const NXString & name /** name */ 
        );
        /**Sets  the name 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        void SetName
        (
            const char * name /** name */ 
        );
        /**Returns  the gender 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::GenderType Gender
        (
        );
        /**Sets  the gender 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetGender
        (
            NXOpen::HumanH10DialogBuilder::GenderType gender /** gender */ 
        );
        /**Returns  the database 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::DatabaseType Database
        (
        );
        /**Sets  the database 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetDatabase
        (
            NXOpen::HumanH10DialogBuilder::DatabaseType database /** database */ 
        );
        /**Returns  the age input 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: int AgeInput
        (
        );
        /**Sets  the age input 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetAgeInput
        (
            int ageInput /** ageinput */ 
        );
        /**Returns  the height units 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::HeightUnitsEnum HeightUnits
        (
        );
        /**Sets  the height units 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHeightUnits
        (
            NXOpen::HumanH10DialogBuilder::HeightUnitsEnum heightUnits /** heightunits */ 
        );
        /**Returns  the height percentile 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::HeightInputType HeightPercentile
        (
        );
        /**Sets  the height percentile 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHeightPercentile
        (
            NXOpen::HumanH10DialogBuilder::HeightInputType heightPercentile /** heightpercentile */ 
        );
        /**Returns  the height value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double HeightValue
        (
        );
        /**Sets  the height value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHeightValue
        (
            double heightValue /** heightvalue */ 
        );
        /**Returns  the shoe sole height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double ShoeSoleHeight
        (
        );
        /**Sets  the shoe sole height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetShoeSoleHeight
        (
            double shoeSoleHeight /** shoesoleheight */ 
        );
        /**Returns  the weight units 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::WeightUnitsEnum WeightUnits
        (
        );
        /**Sets  the weight units 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetWeightUnits
        (
            NXOpen::HumanH10DialogBuilder::WeightUnitsEnum weightUnits /** weightunits */ 
        );
        /**Returns  the weight percentile 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::WeightInputType WeightPercentile
        (
        );
        /**Sets  the weight percentile 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetWeightPercentile
        (
            NXOpen::HumanH10DialogBuilder::WeightInputType weightPercentile /** weightpercentile */ 
        );
        /**Returns  the weight value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double WeightValue
        (
        );
        /**Sets  the weight value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetWeightValue
        (
            double weightValue /** weightvalue */ 
        );
        /**Returns  the shoulder measure block 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::ShoulderMeasureType ShoulderMeasureBlock
        (
        );
        /**Sets  the shoulder measure block 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetShoulderMeasureBlock
        (
            NXOpen::HumanH10DialogBuilder::ShoulderMeasureType shoulderMeasureBlock /** shouldermeasureblock */ 
        );
        /**Returns  the shoulder value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double ShoulderValue
        (
        );
        /**Sets  the shoulder value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetShoulderValue
        (
            double shoulderValue /** shouldervalue */ 
        );
        /**Returns  the chest circumference 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double ChestCircumference
        (
        );
        /**Sets  the chest circumference 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetChestCircumference
        (
            double chestCircumference /** chestcircumference */ 
        );
        /**Returns  the elbow to wrist 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double ElbowToWrist
        (
        );
        /**Sets  the elbow to wrist 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetElbowToWrist
        (
            double elbowToWrist /** elbowtowrist */ 
        );
        /**Returns  the waist circumference 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double WaistCircumference
        (
        );
        /**Sets  the waist circumference 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetWaistCircumference
        (
            double waistCircumference /** waistcircumference */ 
        );
        /**Returns  the hip measure 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::HipMeasureType HipMeasure
        (
        );
        /**Sets  the hip measure 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHipMeasure
        (
            NXOpen::HumanH10DialogBuilder::HipMeasureType hipMeasure /** hipmeasure */ 
        );
        /**Returns  the hip value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double HipValue
        (
        );
        /**Sets  the hip value 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHipValue
        (
            double hipValue /** hipvalue */ 
        );
        /**Returns  the knee height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double KneeHeight
        (
        );
        /**Sets  the knee height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetKneeHeight
        (
            double kneeHeight /** kneeheight */ 
        );
        /**Returns  the sitting height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double SittingHeight
        (
        );
        /**Sets  the sitting height 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetSittingHeight
        (
            double sittingHeight /** sittingheight */ 
        );
        /**Returns  the hand length 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double HandLength
        (
        );
        /**Sets  the hand length 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHandLength
        (
            double handLength /** handlength */ 
        );
        /**Returns  the hand breadth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double HandBreadth
        (
        );
        /**Sets  the hand breadth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHandBreadth
        (
            double handBreadth /** handbreadth */ 
        );
        /**Returns  the hand depth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double HandDepth
        (
        );
        /**Sets  the hand depth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHandDepth
        (
            double handDepth /** handdepth */ 
        );
        /**Returns  the foot length 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double FootLength
        (
        );
        /**Sets  the foot length 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetFootLength
        (
            double footLength /** footlength */ 
        );
        /**Returns  the foot breadth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double FootBreadth
        (
        );
        /**Sets  the foot breadth 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetFootBreadth
        (
            double footBreadth /** footbreadth */ 
        );
        /**Returns  the associate check 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: bool AssociateCheck
        (
        );
        /**Sets  the associate check 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetAssociateCheck
        (
            bool associateCheck /** associatecheck */ 
        );
        /**Returns  the associate point 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Point * AssociatePoint
        (
        );
        /**Sets  the associate point 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAssociatePoint
        (
            NXOpen::Point * associatePoint /** associatepoint */ 
        );
        /**Returns  the ref point 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanH10DialogBuilder::RefPointType RefPoint
        (
        );
        /**Sets  the ref point 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetRefPoint
        (
            NXOpen::HumanH10DialogBuilder::RefPointType refPoint /** refpoint */ 
        );
        /** Sets the feature builder  
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHumanFeatureBuilder
        (
            NXOpen::Features::HumanBuilder * humanfeaturebuilder /** humanfeaturebuilder */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
