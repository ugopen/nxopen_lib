#ifndef NXOpen_OMCLASS_HXX_INCLUDED
#define NXOpen_OMCLASS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     OMClass.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/IOMName.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/OMAttribute.hxx>
#include <NXOpen/libnxopenjamtestcpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class OMClass;
    class IOMName;
    class OMAttribute;
    class OMSchema;
    class _OMClassBuilder;
    class OMClassImpl;

    /// \cond NX_NO_DOC 
    /**
    Represents a OMClass.  This is for internal testing only.
     <br> This is a test classs.  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENJAMTESTCPPEXPORT  OMClass : public NXOpen::TaggedObject, public virtual NXOpen::IOMName
    {
        private: OMClassImpl * m_omclass_impl;
        private: friend class  _OMClassBuilder;
        protected: OMClass();
        public: ~OMClass();

        /// \cond NX_NO_DOC 
        /**Returns   the superclass 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::OMClass * Superclass
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Return the  @return  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<NXOpen::OMAttribute *> GetAttributes
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Is define
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: bool IsDefiningClassFor
        (
            NXOpen::OMAttribute * attribute /** attribute */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Return all   @return  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<NXOpen::OMAttribute::Info> GetAllAttributeInfo
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Returns the object name  @return  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: virtual NXString GetObjectName
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Compare with  @return  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: virtual bool CompareWith
        (
            NXOpen::IOMName * other /** other */ 
        );

        /// \endcond 
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
