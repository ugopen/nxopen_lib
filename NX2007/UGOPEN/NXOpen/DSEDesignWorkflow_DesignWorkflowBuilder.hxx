#ifndef NXOpen_DSEDESIGNWORKFLOW_DESIGNWORKFLOWBUILDER_HXX_INCLUDED
#define NXOpen_DSEDESIGNWORKFLOW_DESIGNWORKFLOWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DSEDesignWorkflow_DesignWorkflowBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libdsedesignworkflowopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DSEDesignWorkflow
    {
        class DesignWorkflowBuilder;
    }
    class Builder;
    class TaggedObject;
    namespace DSEDesignWorkflow
    {
        class _DesignWorkflowBuilderBuilder;
        class DesignWorkflowBuilderImpl;
        /** Represents a @link DSEDesignWorkflow::DesignWorkflowBuilder DSEDesignWorkflow::DesignWorkflowBuilder@endlink  class object. <br> To create a new instance of this class, use @link NXOpen::DSEDesignWorkflow::DesignWorkflowCollection::CreateDesignWorkflowBuilder  NXOpen::DSEDesignWorkflow::DesignWorkflowCollection::CreateDesignWorkflowBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class DSEDESIGNWORKFLOWOPENCPPEXPORT  DesignWorkflowBuilder : public NXOpen::Builder
        {
            /** Represents different options to select workflow part.*/
            public: enum WorkflowPartType
            {
                WorkflowPartTypeWorkPart/** work part */ ,
                WorkflowPartTypeSpecifiedPart/** specified part */ 
            };

            private: DesignWorkflowBuilderImpl * m_designworkflowbuilder_impl;
            private: friend class  _DesignWorkflowBuilderBuilder;
            protected: DesignWorkflowBuilder();
            public: ~DesignWorkflowBuilder();
            /**Returns  the workflow part selection option type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DSEDesignWorkflow::DesignWorkflowBuilder::WorkflowPartType WorkflowPartReference
            (
            );
            /**Sets  the workflow part selection option type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetWorkflowPartReference
            (
                NXOpen::DSEDesignWorkflow::DesignWorkflowBuilder::WorkflowPartType workflowReference /** workflowreference */ 
            );
            /**Returns  the source part occurrence 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * WorkflowPart
            (
            );
            /**Sets  the source part occurrence 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetWorkflowPart
            (
                NXOpen::TaggedObject * workflowPart /** workflowpart */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
