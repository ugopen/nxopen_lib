#ifndef NXOpen_PRODUCTDEMO_HXX_INCLUDED
#define NXOpen_PRODUCTDEMO_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ProductDemo.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ProductDemo;
    class UI;
    class ProductDemoImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used to set and get the link of trial demo of the product. Class can display dialog for launch of the demo.  <br> To obtain an instance of this class, refer to @link NXOpen::UI  NXOpen::UI @endlink  <br> 
     <br>  Usable only on Windows <br> 
     <br>  Created in NX1926.0.0.  <br>  
    */
    class NXOPENUICPPEXPORT  ProductDemo
    {
        /** Describes message box show to user or not. 
         <br>  Created in NX1926.0.0.  <br>  
        */

        /// \cond NX_NO_DOC 
        public: enum Message
        {
            MessageShown/** Trial demo message box shown to user */,
            MessageNotShownInvalidUrl/** Trial demo message box not shown. Reason: User tries to register URL other than whitelist */
        };


        /// \endcond 
        private: ProductDemoImpl * m_productdemo_impl;
        private: NXOpen::UI* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit ProductDemo(NXOpen::UI *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~ProductDemo();

        /// \cond NX_NO_DOC 
        /** URL link for product trial. Accepts http secured protocol links and validate against whitelist. 
                Caller of API has security responsibilty for the URL trying to set via API.
                Returns 0 if URL is accepted otherwise error code.
            
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDemoLink
        (
            const NXString & applicationName /** Application Name */,
            const NXString & demoURLLink /** URL for application demo */
        );
        /** URL link for product trial. Accepts http secured protocol links and validate against whitelist. 
                Caller of API has security responsibilty for the URL trying to set via API.
                Returns 0 if URL is accepted otherwise error code.
            
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        void SetDemoLink
        (
            const char * applicationName /** Application Name */,
            const char * demoURLLink /** URL for application demo */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** URL link for product trial. Returns http secured protocol links and validated against whitelist.  @return  URL for application demo 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetDemoLink
        (
            const NXString & applicationName /** Application Name */
        );
        /** URL link for product trial. Returns http secured protocol links and validated against whitelist.  @return  URL for application demo 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        NXString GetDemoLink
        (
            const char * applicationName /** Application Name */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Show trial information message box  @return  Return value will be 0 if message box displayed 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ProductDemo::Message Show
        (
            const NXString & applicationName /** Application Name */,
            const NXString & additionalInformation /** More information about application, expects localized string */
        );
        /** Show trial information message box  @return  Return value will be 0 if message box displayed 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        NXOpen::ProductDemo::Message Show
        (
            const char * applicationName /** Application Name */,
            const char * additionalInformation /** More information about application, expects localized string */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Show trial information message box  @return  Return value will be 0 if message box displayed 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ProductDemo::Message Show
        (
            const NXString & applicationName /** Application Name */
        );
        /** Show trial information message box  @return  Return value will be 0 if message box displayed 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        NXOpen::ProductDemo::Message Show
        (
            const char * applicationName /** Application Name */
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
