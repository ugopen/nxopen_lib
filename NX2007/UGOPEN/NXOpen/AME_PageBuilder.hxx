#ifndef NXOpen_AME_PAGEBUILDER_HXX_INCLUDED
#define NXOpen_AME_PAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AspectDetailsBuilder.hxx>
#include <NXOpen/AME_PageAttributeHolder.hxx>
#include <NXOpen/AME_EngineeringObjectBaseBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PageBuilder;
    }
    namespace AME
    {
        class AspectDetailsBuilder;
    }
    namespace AME
    {
        class EngineeringObjectBaseBuilder;
    }
    namespace AME
    {
        class PageAttributeHolder;
    }
    namespace AME
    {
        class _PageBuilderBuilder;
        class PageBuilderImpl;
        /** Represents a Page creation class Builder   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreatePageBuilder  NXOpen::AME::AMEManager::CreatePageBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        PageName </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        Type </term> <description> 
         
        MultiLineSchematics </description> </item> 

        </list> 

         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PageBuilder : public NXOpen::AME::EngineeringObjectBaseBuilder
        {
            /** Represents the type of page */
            public: enum Types
            {
                TypesAspectStructureOverview/** aspect structure overview */ ,
                TypesCableDiagram/** cable diagram */ ,
                TypesCableList/** cable list */ ,
                TypesOrderList/** order list */ ,
                TypesPartListBom/** part list bom */ ,
                TypesPlugList/** plug list */ ,
                TypesTableOfContent/** table of content */ ,
                TypesTerminalDiagram/** terminal diagram */ ,
                TypesTerminalStripList/** terminal strip list */ ,
                TypesTitlePage/** title page */ ,
                TypesWireTubeConnectionLists/** wire tube connection lists */ ,
                TypesWireList/** wire list */ ,
                TypesMultiLineSchematics/** multi line schematics */ ,
                TypesSingleLineSchematics/** single line schematics */ ,
                TypesNetworkTopology/** network topology */ ,
                TypesPowerSupplyTopology/** power supply topology */ ,
                TypesViewPage/** view page */ ,
                TypesFluidicDiagram/** fluidic diagram */ ,
                TypesCabinetLayout/** cabinet layout */ ,
                TypesSummarizeBom/** summarize bom */ 
            };

            private: PageBuilderImpl * m_pagebuilder_impl;
            private: friend class  _PageBuilderBuilder;
            protected: PageBuilder();
            public: ~PageBuilder();
            /**Returns  the Page type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::PageBuilder::Types Type
            (
            );
            /**Sets  the Page type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetType
            (
                NXOpen::AME::PageBuilder::Types type /** type */ 
            );
            /**Returns  the Page name
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString PageName
            (
            );
            /**Sets  the Page name
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPageName
            (
                const NXString & pageName /** pagename */ 
            );
            /**Sets  the Page name
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPageName
            (
                const char * pageName /** pagename */ 
            );
            /**Returns  the Page description
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Description
            (
            );
            /**Sets  the Page description
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDescription
            (
                const NXString & pageDescription /** pagedescription */ 
            );
            /**Sets  the Page description
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetDescription
            (
                const char * pageDescription /** pagedescription */ 
            );
            /**Returns  the Page aspect details
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AspectDetailsBuilder * Aspects
            (
            );
            /**Returns  the attribute holder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::PageAttributeHolder * PageAttributeHolder
            (
            );
            /** Set default Classification Code. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDefaultClassificationCode
            (
            );
            /** Set user Classification Code. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetClassificationCode
            (
                const NXString & dccString /** dccstring */ 
            );
            /** Set user Classification Code. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetClassificationCode
            (
                const char * dccString /** dccstring */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
