#ifndef NXOpen_MECHATRONICS_LINEARSPRINGJOINTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_LINEARSPRINGJOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_LinearSpringJointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_PhysicsJointBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class LinearSpringJointBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class PhysicsJointBuilder;
    }
    class Point;
    namespace Mechatronics
    {
        class _LinearSpringJointBuilderBuilder;
        class LinearSpringJointBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::LinearSpringJoint NXOpen::Mechatronics::LinearSpringJoint@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::LinearSpringJointCollection::CreateLinearSpringJointBuilder  NXOpen::Mechatronics::LinearSpringJointCollection::CreateLinearSpringJointBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  LinearSpringJointBuilder : public NXOpen::Mechatronics::PhysicsJointBuilder
        {
            private: LinearSpringJointBuilderImpl * m_linearspringjointbuilder_impl;
            private: friend class  _LinearSpringJointBuilderBuilder;
            protected: LinearSpringJointBuilder();
            public: ~LinearSpringJointBuilder();
            /**Returns  the attachment point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * AttachmentPoint
            (
            );
            /**Sets  the attachment point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAttachmentPoint
            (
                NXOpen::Point * attachmentPoint /** attachmentpoint */ 
            );
            /**Returns  the base point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * BasePoint
            (
            );
            /**Sets  the base point. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetBasePoint
            (
                NXOpen::Point * basePoint /** basepoint */ 
            );
            /**Returns  the spring constant. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * SpringConstant
            (
            );
            /**Returns  the damping. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * Damping
            (
            );
            /**Returns  the relaxed position. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * RelaxedPosition
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
