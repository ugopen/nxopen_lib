#ifndef NXOpen_FEATURES_SHIPDESIGN_ROOMATTRIBUTELISTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_ROOMATTRIBUTELISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_RoomAttributeListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class RoomAttributeListBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class TaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _RoomAttributeListBuilderBuilder;
            class RoomAttributeListBuilderImpl;
            /** The builder to define room attributes 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  RoomAttributeListBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                private: RoomAttributeListBuilderImpl * m_roomattributelistbuilder_impl;
                private: friend class  _RoomAttributeListBuilderBuilder;
                protected: RoomAttributeListBuilder();
                public: ~RoomAttributeListBuilder();
                /** 
                            Initializes the builder from an object. 
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void InitFromObject
                (
                    NXOpen::TaggedObject * objectTag /** Body or Component */
                );
                /** 
                            Updates all attributes with new name and values. 
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void UpdateAttributes
                (
                    std::vector<NXString> & attrNames /** attrnames */ ,
                    std::vector<NXString> & attrValues /** attrvalues */ 
                );
                /** 
                            Sets the specific attribute name and value given the index in the list. 
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetAttribute
                (
                    int index /** index */ ,
                    const NXString & attrName /** attrname */ ,
                    const NXString & attrValue /** attrvalue */ 
                );
                /** 
                            Sets the specific attribute name and value given the index in the list. 
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void SetAttribute
                (
                    int index /** index */ ,
                    const char * attrName /** attrname */ ,
                    const char * attrValue /** attrvalue */ 
                );
                /**  @brief 
                            Sets the room purpose. 
                             

                 
                            
                            If room purpose changes, this will try to reconstruct the attribute list because
                            different attributes are pre-defined for different room purposes. 
                            
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetRoomPurpose
                (
                    const NXString & roomPurpose /** roompurpose */ 
                );
                /**  @brief 
                            Sets the room purpose. 
                             

                 
                            
                            If room purpose changes, this will try to reconstruct the attribute list because
                            different attributes are pre-defined for different room purposes. 
                            
                            
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void SetRoomPurpose
                (
                    const char * roomPurpose /** roompurpose */ 
                );
                /**  @brief 
                            Sets the room sub purpose. 
                             

                 
                            
                            If the room sub purpose is changed, this method will try to reconstruct the attribute list because
                            different attributes are pre-defined for different room sub purposes.
                            
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetRoomSubPurpose
                (
                    const NXString & roomSubPurpose /** roomsubpurpose */ 
                );
                /**  @brief 
                            Sets the room sub purpose. 
                             

                 
                            
                            If the room sub purpose is changed, this method will try to reconstruct the attribute list because
                            different attributes are pre-defined for different room sub purposes.
                            
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void SetRoomSubPurpose
                (
                    const char * roomSubPurpose /** roomsubpurpose */ 
                );
                /** 
                            Initializes the builder from objects. 
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void InitializeFromMultipleObjects
                (
                    const std::vector<NXOpen::TaggedObject *> & objs /** Bodies or Components */
                );
                /** 
                            Updates the room purpose and sub-purpose.
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void EditItem
                (
                    int row /** row */ ,
                    const NXString & roomPurpose /** roompurpose */ ,
                    const NXString & roomSubPurpose /** roomsubpurpose */ 
                );
                /** 
                            Updates the room purpose and sub-purpose.
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void EditItem
                (
                    int row /** row */ ,
                    const char * roomPurpose /** roompurpose */ ,
                    const char * roomSubPurpose /** roomsubpurpose */ 
                );
                /** 
                            Updates the specific attribute value.
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void UpdateAttributeValue
                (
                    int row /** row */ ,
                    const NXString & headString /** headstring */ ,
                    const NXString & value /** value */ 
                );
                /** 
                            Updates the specific attribute value.
                            
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void UpdateAttributeValue
                (
                    int row /** row */ ,
                    const char * headString /** headstring */ ,
                    const char * value /** value */ 
                );
                /** 
                            Updates evaluated attribute value.
                            
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: bool UpdateEvaluatdValue
                (
                    int rowIndex /** rowindex */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not yet implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
