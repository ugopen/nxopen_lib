#ifndef NXOpen_AMMATERIALS_PHASEFRACTIONBUILDER_HXX_INCLUDED
#define NXOpen_AMMATERIALS_PHASEFRACTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AmMaterials_PhaseFractionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libammaterialsopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AmMaterials
    {
        class PhaseFractionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectFENodeList;
    }
    class Expression;
    namespace AmMaterials
    {
        class _PhaseFractionBuilderBuilder;
        class PhaseFractionBuilderImpl;
        /** Builder for Phase Fraction  <br> To create a new instance of this class, use @link NXOpen::AmMaterials::ApplicationManager::CreatePhaseFractionBuilder  NXOpen::AmMaterials::ApplicationManager::CreatePhaseFractionBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        EnumNodesSelectionMethod </term> <description> 
         
        Manual </description> </item> 

        <item><term> 
         
        EnumResultStorage </term> <description> 
         
        AllTimeSteps </description> </item> 

        <item><term> 
         
        ExpressionAlpha.Value </term> <description> 
         
        0.971 </description> </item> 

        <item><term> 
         
        ExpressionAlphaBasketWeave.Value </term> <description> 
         
        0.4855 </description> </item> 

        <item><term> 
         
        ExpressionAlphaColony.Value </term> <description> 
         
        0.4855 </description> </item> 

        <item><term> 
         
        ExpressionAlphaLathWidth.Value </term> <description> 
         
        0.001 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        ExpressionBeta.Value </term> <description> 
         
        0.029 </description> </item> 

        <item><term> 
         
        ExpressionMartensite.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ExpressionMartensiteDissolutionTemperature.Value </term> <description> 
         
        1073.15 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        ExpressionMaximumAllowedIncrement.Value </term> <description> 
         
        5.5 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        ToggleAdvInput </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ToggleUserDefinedIncrement </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class AMMATERIALSOPENCPPEXPORT  PhaseFractionBuilder : public NXOpen::Builder
        {
            /** enum Storage Type */
            public: enum StorageType
            {
                StorageTypeAllTimeSteps/** all time steps */ ,
                StorageTypeSingleTimeStep/** single time step */ 
            };

            /** enum SelectNosdeMethod */
            public: enum SelectNodesMethod
            {
                SelectNodesMethodManual/** manual */ ,
                SelectNodesMethodExternalFile/** external file */ 
            };

            private: PhaseFractionBuilderImpl * m_phasefractionbuilder_impl;
            private: friend class  _PhaseFractionBuilderBuilder;
            protected: PhaseFractionBuilder();
            public: ~PhaseFractionBuilder();
            /**Returns  the expression beta 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionBeta
            (
            );
            /**Returns  the expression martensite 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionMartensite
            (
            );
            /**Returns  the expression alpha 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionAlpha
            (
            );
            /**Returns  the toggle adv input 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ToggleAdvInput
            (
            );
            /**Sets  the toggle adv input 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToggleAdvInput
            (
                bool toggleAdvInput /** toggleadvinput */ 
            );
            /**Returns  the expression alpha basket weave 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionAlphaBasketWeave
            (
            );
            /**Returns  the expression alpha colony 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionAlphaColony
            (
            );
            /**Returns  the expression alpha lath width 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionAlphaLathWidth
            (
            );
            /**Returns  the enum result storage 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::AmMaterials::PhaseFractionBuilder::StorageType EnumResultStorage
            (
            );
            /**Sets  the enum result storage 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnumResultStorage
            (
                NXOpen::AmMaterials::PhaseFractionBuilder::StorageType enumResultStorage /** enumresultstorage */ 
            );
            /**Returns  the enum nodes selection method 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::AmMaterials::PhaseFractionBuilder::SelectNodesMethod EnumNodesSelectionMethod
            (
            );
            /**Sets  the enum nodes selection method 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnumNodesSelectionMethod
            (
                NXOpen::AmMaterials::PhaseFractionBuilder::SelectNodesMethod enumNodesSelectionMethod /** enumnodesselectionmethod */ 
            );
            /**Returns  the select nodes 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * SelectNodes
            (
            );
            /**Returns  the native file browser nodes list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NativeFileBrowserNodesList
            (
            );
            /**Sets  the native file browser nodes list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNativeFileBrowserNodesList
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the native file browser nodes list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetNativeFileBrowserNodesList
            (
                const char * filename /** filename */ 
            );
            /**Returns  the toggle user defined increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ToggleUserDefinedIncrement
            (
            );
            /**Sets  the toggle user defined increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToggleUserDefinedIncrement
            (
                bool toggleUserDefinedIncrement /** toggleuserdefinedincrement */ 
            );
            /**Returns  the expression maximum allowed increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionMaximumAllowedIncrement
            (
            );
            /**Returns  the expression martensite dissolution temperature 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ExpressionMartensiteDissolutionTemperature
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
