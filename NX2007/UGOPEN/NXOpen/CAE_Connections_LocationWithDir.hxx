#ifndef NXOpen_CAE_CONNECTIONS_LOCATIONWITHDIR_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_LOCATIONWITHDIR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_LocationWithDir.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_Types.hxx>
#include <NXOpen/CAE_SelectionRecipe.hxx>
#include <NXOpen/CAE_Connections_Location.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class LocationWithDir;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class Location;
        }
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    class Direction;
    class Point;
    namespace CAE
    {
        namespace Connections
        {
            class _LocationWithDirBuilder;
            class LocationWithDirImpl;
            /**  @brief  Location With Direction interface. This defines connection locations with direction.  

               <br> To obtain an instance of this object use the AddLocationWithDirection creators on the Connections  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LocationWithDir : public NXOpen::CAE::Connections::Location
            {
                private: LocationWithDirImpl * m_locationwithdir_impl;
                private: friend class  _LocationWithDirBuilder;
                protected: LocationWithDir();
                public: ~LocationWithDir();
                /**Returns  the direction type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::Connections::LocationDirectionType DirectionType
                (
                );
                /**Returns  the point of the direction definition start point.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Point * Point
                (
                );
                /**Sets  the point of the direction definition start point.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetPoint
                (
                    NXOpen::Point * point /** point */ 
                );
                /**Returns  the point of the direction definition end point.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Point * DirectionPoint
                (
                );
                /**Sets  the point of the direction definition end point.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetDirectionPoint
                (
                    NXOpen::Point * direction /** direction */ 
                );
                /**Returns  the direction definition vector 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Direction * DirectionVector
                (
                );
                /**Sets  the direction definition vector 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetDirectionVector
                (
                    NXOpen::Direction * direction /** direction */ 
                );
                /**Returns  the direction value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Vector3d DirectionValue
                (
                );
                /**Sets  the start selection recipe
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetStartSelectionRecipe
                (
                    NXOpen::CAE::SelectionRecipe * selectionRecipe /** selectionrecipe */ 
                );
                /**Returns  the start selection recipe
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::SelectionRecipe * StartSelectionRecipe
                (
                );
                /**Sets  the end selection recipe
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetEndSelectionRecipe
                (
                    NXOpen::CAE::SelectionRecipe * selectionRecipe /** selectionrecipe */ 
                );
                /**Returns  the end selection recipe
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::SelectionRecipe * EndSelectionRecipe
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
