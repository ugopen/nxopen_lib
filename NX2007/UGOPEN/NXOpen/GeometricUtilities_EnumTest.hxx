#ifndef NXOpen_GEOMETRICUTILITIES_ENUMTEST_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_ENUMTEST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_EnumTest.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class EnumTest;
    }
    class Builder;
    namespace GeometricUtilities
    {
        class _EnumTestBuilder;
        class EnumTestImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link GeometricUtilities::EnumTest GeometricUtilities::EnumTest@endlink 
             <br>   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT  EnumTest : public NXOpen::Builder
        {
            /** Fruit is healthy and tastes good */

            /// \cond NX_NO_DOC 
            public: enum Fruit
            {
                FruitApple/** An apple a day keeps the doctor away */,
                FruitPear/** Pears come in many colors */
            };


            /// \endcond 
            /** Animals are healthy and taste good */

            /// \cond NX_NO_DOC 
            public: enum Animals
            {
                AnimalsPika/** rabbit with mouse ears */,
                AnimalsAardvark/** no better animal name */,
                AnimalsHippo/** Hippos are big */,
                AnimalsSnake/** Snakes are not really slimey */
            };


            /// \endcond 
            /** Cars are dangerous to eat and not very tasty */

            /// \cond NX_NO_DOC 
            public: enum Cars
            {
                CarsMustang/** Mustangs might be good eating though */,
                CarsEdsel/** Edsels look funny */,
                CarsTucker/** Tucker could run for president of the 'guys who got screwed by corporate America' club */,
                CarsCitroen/** Citrons are edible but Citroens are strange */
            };


            /// \endcond 
            /** Trees can taste pretty good but have a rather barky texture */

            /// \cond NX_NO_DOC 
            public: enum Trees
            {
                TreesWillow/** willows are fluffy */,
                TreesPine/** pine cones are not fluffy */,
                TreesGingko/** gingko helps your brain */
            };


            /// \endcond 
            /** Daaance, dance the night away */

            /// \cond NX_NO_DOC 
            public: enum Dances
            {
                DancesHokeyPokey/** for wedding receptions */,
                DancesHokeyWaltz/** too waltzy for me */,
                DancesHokeyBird/** America, have you heard */
            };


            /// \endcond 
            /** Curves are important */

            /// \cond NX_NO_DOC 
            public: enum Curves
            {
                CurvesLine/** the granddaddy of all curves */,
                CurvesArc/** arcs are always jealous of lines' notoriety */,
                CurvesCircle/** where do they start?  The answer blows in the wind */
            };


            /// \endcond 
            /** constraints are rather smelly */

            /// \cond NX_NO_DOC 
            public: enum Constraints
            {
                ConstraintsCoincident/** coincident constraints are not coincidental */,
                ConstraintsParallel/** parallel constraints can run serially */,
                ConstraintsColinear/** colinear constraints can't run parallel */,
                ConstraintsConcentric/** concentric constraints are... ah, screw it */,
                ConstraintsEqualRadius/** I'm giving up */,
                ConstraintsFixed/** ahhhhh, it's over */
            };


            /// \endcond 
            private: EnumTestImpl * m_enumtest_impl;
            private: friend class  _EnumTestBuilder;
            protected: EnumTest();
            public: ~EnumTest();

            /// \cond NX_NO_DOC 
            /**Returns  the fruit text only 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Fruit FruitTextOnly
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the fruit text only 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFruitTextOnly
            (
                NXOpen::GeometricUtilities::EnumTest::Fruit fruitTextOnly /** fruittextonly */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the animals icon only 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Animals AnimalsIconOnly
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the animals icon only 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAnimalsIconOnly
            (
                NXOpen::GeometricUtilities::EnumTest::Animals animalsIconOnly /** animalsicononly */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the cars icon text menu 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Cars CarsIconTextMenu
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the cars icon text menu 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCarsIconTextMenu
            (
                NXOpen::GeometricUtilities::EnumTest::Cars carsIconTextMenu /** carsicontextmenu */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the trees vertical radio 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Trees TreesVerticalRadio
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the trees vertical radio 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTreesVerticalRadio
            (
                NXOpen::GeometricUtilities::EnumTest::Trees treesVerticalRadio /** treesverticalradio */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the dances horizontal radio 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Dances DancesHorizontalRadio
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the dances horizontal radio 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDancesHorizontalRadio
            (
                NXOpen::GeometricUtilities::EnumTest::Dances dancesHorizontalRadio /** danceshorizontalradio */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the curves palette 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Curves CurvesPalette
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the curves palette 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurvesPalette
            (
                NXOpen::GeometricUtilities::EnumTest::Curves curvesPalette /** curvespalette */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the constraints palette 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::EnumTest::Constraints ConstraintsPalette
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the constraints palette 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetConstraintsPalette
            (
                NXOpen::GeometricUtilities::EnumTest::Constraints constraintsPalette /** constraintspalette */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
