#ifndef NXOpen_DIAGRAMMINGLIBRARYAUTHOR_SYMBOLBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMINGLIBRARYAUTHOR_SYMBOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DiagrammingLibraryAuthor_SymbolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_diagramminglibraryauthor_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DiagrammingLibraryAuthor
    {
        class SymbolBuilder;
    }
    class Builder;
    namespace DiagrammingLibraryAuthor
    {
        class _SymbolBuilderBuilder;
        class SymbolBuilderImpl;

        /// \cond NX_NO_DOC 
        /**  @brief  Represents a SymbolBuilder.  

          
                Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.  <br> To create a new instance of this class, use @link NXOpen::DiagrammingLibraryAuthor::SymbolDesignerManager::CreateSymbolBuilder  NXOpen::DiagrammingLibraryAuthor::SymbolDesignerManager::CreateSymbolBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGLIBRARYAUTHOREXPORT  SymbolBuilder : public NXOpen::Builder
        {
            private: SymbolBuilderImpl * m_symbolbuilder_impl;
            private: friend class  _SymbolBuilderBuilder;
            protected: SymbolBuilder();
            public: ~SymbolBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the tag location point
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point2d TagLocation
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the tag location point
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTagLocation
            (
                const NXOpen::Point2d & tagLocation /** the tag location */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the anchor location point
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point2d AnchorPoint
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the anchor location point
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAnchorPoint
            (
                const NXOpen::Point2d & anchorPoint /** the anchor point location */
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
