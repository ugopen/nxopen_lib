#ifndef NXOpen_AME_IMPORTEPLANMAPPINGBUILDER_HXX_INCLUDED
#define NXOpen_AME_IMPORTEPLANMAPPINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ImportEplanMappingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ImportEplanMappingBuilder;
    }
    class Builder;
    namespace AME
    {
        /**
                enum for import eplan mapping mode.
                These are 2 modes of import eplan mapping.This modes will be applicable for all eplan objects which are importing.
            */
        enum ImportEplanMappingMode
        {
            ImportEplanMappingModeOverride/** override */ ,
            ImportEplanMappingModeDontOverride/** dont override */ 
        };

    }
    namespace AME
    {
        class _ImportEplanMappingBuilderBuilder;
        class ImportEplanMappingBuilderImpl;
        /** Import eplan mapping <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateImportEplanMappingBuilder  NXOpen::AME::AMEManager::CreateImportEplanMappingBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ImportEplanMappingBuilder : public NXOpen::Builder
        {
            private: ImportEplanMappingBuilderImpl * m_importeplanmappingbuilder_impl;
            private: friend class  _ImportEplanMappingBuilderBuilder;
            protected: ImportEplanMappingBuilder();
            public: ~ImportEplanMappingBuilder();
            /**Returns  the eplan mapping file
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString FilePath
            (
            );
            /**Sets  the eplan mapping file
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFilePath
            (
                const NXString & filePath /** filepath */ 
            );
            /**Sets  the eplan mapping file
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetFilePath
            (
                const char * filePath /** filepath */ 
            );
            /**Returns  the enum for import eplan mapping mode
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ImportEplanMappingMode ImportMode
            (
            );
            /**Sets  the enum for import eplan mapping mode
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetImportMode
            (
                NXOpen::AME::ImportEplanMappingMode importEplanMappingMode /** importeplanmappingmode */ 
            );
            /** Validate import eplan xml file path
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateFilePath
            (
            );
            /** Validate import eplan xml format
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateXmlFormat
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
