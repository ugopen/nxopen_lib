#ifndef NXOpen_MBD_ADVISORMANAGER_HXX_INCLUDED
#define NXOpen_MBD_ADVISORMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MBD_AdvisorManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MBD_AdvisorCustomCheckBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmbdopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MBD
    {
        class AdvisorManager;
    }
    class Session;
    namespace MBD
    {
        class AdvisorCustomCheckBuilder;
    }
    class Part;
    namespace MBD
    {
        class AdvisorManagerImpl;
        /** Represents an object that manages Advisor application specific objects and preferences.
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class MBDOPENCPPEXPORT  AdvisorManager
        {
            private: AdvisorManagerImpl * m_advisormanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AdvisorManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AdvisorManager* theAdvisorManager;
            /** Returns the AdvisorManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AdvisorManager* GetAdvisorManager(NXOpen::Session *owner);
            public: ~AdvisorManager();
            /** The JA method support for create advisor custom check builder
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MBD::AdvisorCustomCheckBuilder * CreateAdvisorCustomCheckBuilder
            (
                NXOpen::Part * part /** part */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
