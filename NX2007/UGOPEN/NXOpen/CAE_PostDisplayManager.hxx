#ifndef NXOpen_CAE_POSTDISPLAYMANAGER_HXX_INCLUDED
#define NXOpen_CAE_POSTDISPLAYMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostDisplayManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostDisplayManager;
    }
    namespace CAE
    {
        class Post;
    }
    namespace CAE
    {
        class PostDisplayManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents the display manager in Post-Processing  <br> Not support KF.  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostDisplayManager
        {
            /** option to show/hide display object type */

            /// \cond NX_NO_DOC 
            public: enum ShowHideType
            {
                ShowHideTypeAll/** all */ ,
                ShowHideTypeLegend/** legend */ ,
                ShowHideTypeAnnotations/** annotations */ ,
                ShowHideTypeMinAnnotations/** min annotations */ ,
                ShowHideTypeMaxAnnotations/** max annotations */ ,
                ShowHideTypeUserDefinedAnnotations/** user defined annotations */ ,
                ShowHideTypeCoordinateSystem/** coordinate system */ ,
                ShowHideTypeMeshes/** meshes */ ,
                ShowHideTypeZeroDimensionalMeshes/** zero dimensional meshes */ ,
                ShowHideTypeOneDimensionalMeshes/** one dimensional meshes */ ,
                ShowHideTypeTwoDimensionalMeshes/** two dimensional meshes */ ,
                ShowHideTypeThreeDimensionalMeshes/** three dimensional meshes */ ,
                ShowHideTypeSolidElement/** solid element */ ,
                ShowHideTypeSolid2DElement/** solid2delement */ ,
                ShowHideTypeSolid3DElement/** solid3delement */ ,
                ShowHideTypeShellElement/** shell element */ ,
                ShowHideTypeShell1DElement/** shell1delement */ ,
                ShowHideTypeShell2DElement/** shell2delement */ ,
                ShowHideTypeMembraneElement/** membrane element */ ,
                ShowHideTypeBeamElement/** beam element */ ,
                ShowHideTypeTrussElement/** truss element */ ,
                ShowHideTypeInfiniteElement/** infinite element */ ,
                ShowHideTypeGapElement/** gap element */ ,
                ShowHideTypeJointElement/** joint element */ ,
                ShowHideTypeSpringDashPotElement/** spring dash pot element */ ,
                ShowHideTypeSpringDashPot0DElement/** spring dash pot0delement */ ,
                ShowHideTypeSpringDashPot1DElement/** spring dash pot1delement */ ,
                ShowHideTypeRigidElement/** rigid element */ ,
                ShowHideTypeConstraintElement/** constraint element */ ,
                ShowHideTypePlotElement/** plot element */ ,
                ShowHideTypePlot1DElement/** plot1delement */ ,
                ShowHideTypePlot2DElement/** plot2delement */ ,
                ShowHideTypePlot3DElement/** plot3delement */ ,
                ShowHideTypeMassElement/** mass element */ ,
                ShowHideTypeInterElement/** inter element */ ,
                ShowHideTypeSuperElement/** super element */ ,
                ShowHideTypeNumber/** the number of enumaration */
            };


            /// \endcond 
            private: PostDisplayManagerImpl * m_postdisplaymanager_impl;
            private: NXOpen::CAE::Post* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PostDisplayManager(NXOpen::CAE::Post *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PostDisplayManager();

            /// \cond NX_NO_DOC 
            /** Sets the visibility for a set of post display objects by filter type in a specified viewport. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVisibility
            (
                NXOpen::CAE::PostDisplayManager::ShowHideType type /** type */ ,
                int viewportID /** viewportid */ ,
                bool isVisible /** isvisible */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
