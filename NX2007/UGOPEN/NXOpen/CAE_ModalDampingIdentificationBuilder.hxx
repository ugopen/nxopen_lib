#ifndef NXOpen_CAE_MODALDAMPINGIDENTIFICATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODALDAMPINGIDENTIFICATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModalDampingIdentificationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ModeSet.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModalDampingIdentificationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ModeSet;
    }
    namespace CAE
    {
        class _ModalDampingIdentificationBuilderBuilder;
        class ModalDampingIdentificationBuilderImpl;
        /** This builder is meant to compute modal damping ratios based on input FEModel physical properties damping coefficient.
                Builder will update mode set damping ratios in the mode set at the end of compuation. <br> Not support KF.  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModalDampingIdentificationBuilder : public NXOpen::Builder
        {
            private: ModalDampingIdentificationBuilderImpl * m_modaldampingidentificationbuilder_impl;
            private: friend class  _ModalDampingIdentificationBuilderBuilder;
            protected: ModalDampingIdentificationBuilder();
            public: ~ModalDampingIdentificationBuilder();
            /** Sets a mode set
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_nv_modeling ("Simcenter Noise and Vibration modeling") */
            public: void SetModeset
            (
                NXOpen::CAE::ModeSet * pModeSet /** the Mode Set to compute damping ratio */
            );
            /** Sets a rigid body threshold frequency value
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_nv_modeling ("Simcenter Noise and Vibration modeling") */
            public: void SetRigidbodyThresholdFrequency
            (
                double undampedFrequency /** The rigid body threadshold frequency. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
