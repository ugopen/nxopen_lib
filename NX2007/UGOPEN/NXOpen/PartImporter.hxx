#ifndef NXOpen_PARTIMPORTER_HXX_INCLUDED
#define NXOpen_PARTIMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartImporter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Importer.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PartImporter;
    class CoordinateSystem;
    class Importer;
    class NXMatrix;
    class _PartImporterBuilder;
    class PartImporterImpl;
    /** Used to import a part into the work part.  The imported part can be an NX part or a foreign part,
        e.g. an I-DEAS, CATIA, or Teamcenter Visualization part. A named group will be created with the 
        contents of the imported part if the property @link NXOpen::PartImporter::CreateNamedGroup NXOpen::PartImporter::CreateNamedGroup@endlink  is turned
        on. You can access the named group which is created when importing the part by accessing the 
        object array returned from the method @link Builder::GetCommittedObjects Builder::GetCommittedObjects@endlink  after 
        you execute the @link Builder::Commit Builder::Commit@endlink  on the @link NXOpen::PartImporter NXOpen::PartImporter@endlink .
     <br> To obtain an instance of this class use @link ImportManager::CreatePartImporter ImportManager::CreatePartImporter@endlink .  <br> 
     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  PartImporter : public NXOpen::Importer
    {
        /** Specifies on which layer to import a part. 
         <br>  Created in NX5.0.0.  <br>  
        */
        public: enum LayerOptionType
        {
            LayerOptionTypeWork/** Import part on work layer. */,
            LayerOptionTypeOriginal/** Import part on original layers. */
        };

        /** Specifies the destination coordinate system specification. 
         <br>  Created in NX5.0.0.  <br>  
        */
        public: enum DestinationCoordinateSystemSpecificationType
        {
            DestinationCoordinateSystemSpecificationTypeWork/** Use Work Coordinate System. */,
            DestinationCoordinateSystemSpecificationTypeSpecified/** Use specified coordinate system. */
        };

        private: PartImporterImpl * m_partimporter_impl;
        private: friend class  _PartImporterBuilder;
        protected: PartImporter();
        public: ~PartImporter();
        /**Returns  the scale.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: double Scale
        (
        );
        /**Sets  the scale.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetScale
        (
            double scale /** scale */ 
        );
        /**Returns  the Create Named Group flag.  True if the Create Named Group flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool CreateNamedGroup
        (
        );
        /**Sets  the Create Named Group flag.  True if the Create Named Group flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCreateNamedGroup
        (
            bool createNamedGroup /** create named group */ 
        );
        /**Returns  the Import Views flag.  True if the Import Views flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ImportViews
        (
        );
        /**Sets  the Import Views flag.  True if the Import Views flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportViews
        (
            bool importViews /** import views */ 
        );
        /**Returns  the Import CAM Objects flag.  True if the Import CAM Objects flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool ImportCamObjects
        (
        );
        /**Sets  the Import CAM Objects flag.  True if the Import CAM Objects flag is on.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportCamObjects
        (
            bool importCamObjects /** import cam objects */ 
        );
        /**Returns  the layer option.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PartImporter::LayerOptionType LayerOption
        (
        );
        /**Sets  the layer option.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetLayerOption
        (
            NXOpen::PartImporter::LayerOptionType layerOption /** layer option */ 
        );
        /**Returns  the destination coordinate system specification.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PartImporter::DestinationCoordinateSystemSpecificationType DestinationCoordinateSystemSpecification
        (
        );
        /**Sets  the destination coordinate system specification.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDestinationCoordinateSystemSpecification
        (
            NXOpen::PartImporter::DestinationCoordinateSystemSpecificationType destinationCoordinateSystemSpecification /** destination coordinate system specification */ 
        );
        /**Returns  the destination coordinate system.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::NXMatrix * DestinationCoordinateSystem
        (
        );
        /**Sets  the destination coordinate system.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDestinationCoordinateSystem
        (
            NXOpen::NXMatrix * destinationCoordinateSystem /** destination coordinate system */ 
        );
        /**Returns  the destination point.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Point3d DestinationPoint
        (
        );
        /**Sets  the destination point.
            
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDestinationPoint
        (
            const NXOpen::Point3d & destinationPoint /** destination point */ 
        );
        /** Sets the specified coordinate system. This specified coordinate system is 
                deleted after setting the destination coordinate system 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSpecifiedCoordinateSystem
        (
            NXOpen::CoordinateSystem * specifiedCoordinateSystem /** specified coordinate system */ 
        );
        /** Sets the specified coordinate system. This provides an option whether to delete the specified coordinate
                system. If not mark for delete then it is user's responsibility to delete the specified coordinate system.   
         <br>  Created in NX8.0.1.  <br>  
         <br> License requirements : None */
        public: void SetSpecifiedCoordinateSystem
        (
            NXOpen::CoordinateSystem * specifiedCoordinateSystem /** specified coordinate system */ ,
            bool deleteSpecifiedCoordinateSystem /** If true, the specified coordinate system is deleted. */
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
