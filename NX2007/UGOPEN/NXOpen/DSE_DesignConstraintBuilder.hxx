#ifndef NXOpen_DSE_DESIGNCONSTRAINTBUILDER_HXX_INCLUDED
#define NXOpen_DSE_DESIGNCONSTRAINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DSE_DesignConstraintBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libdseopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DSE
    {
        class DesignConstraintBuilder;
    }
    class Builder;
    class NXObject;
    namespace DSE
    {
        class _DesignConstraintBuilderBuilder;
        class DesignConstraintBuilderImpl;
        /** Represents Design Constraint builder. <br> To create a new instance of this class, use @link NXOpen::DSE::StudyManager::CreateDesignConstraintBuilder  NXOpen::DSE::StudyManager::CreateDesignConstraintBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class DSEOPENCPPEXPORT  DesignConstraintBuilder : public NXOpen::Builder
        {
            /** Represents different target type options to compare for Constraint.*/
            public: enum TargetType
            {
                TargetTypeEqualto/** equalto */ ,
                TargetTypeGreaterthanorEqualto/** greaterthanor equalto */ ,
                TargetTypeLessthanorEqualto/** lessthanor equalto */ ,
                TargetTypeWithinRange/** within range */ 
            };

            private: DesignConstraintBuilderImpl * m_designconstraintbuilder_impl;
            private: friend class  _DesignConstraintBuilderBuilder;
            protected: DesignConstraintBuilder();
            public: ~DesignConstraintBuilder();
            /**Returns  the constraint name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ConstraintName
            (
            );
            /**Sets  the constraint name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetConstraintName
            (
                const NXString & constraintName /** constraintname */ 
            );
            /**Sets  the constraint name 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            void SetConstraintName
            (
                const char * constraintName /** constraintname */ 
            );
            /**Returns  the constraint type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DSE::DesignConstraintBuilder::TargetType ConstraintType
            (
            );
            /**Sets  the constraint type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetConstraintType
            (
                NXOpen::DSE::DesignConstraintBuilder::TargetType constraintType /** constrainttype */ 
            );
            /**Returns  the constraint limit value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double ConstraintTargetValue
            (
            );
            /**Sets  the constraint limit value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetConstraintTargetValue
            (
                double constraintTargetValue /** constrainttargetvalue */ 
            );
            /** Set the selected application object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetSelectedAppObject
            (
                NXOpen::NXObject * appObject /** appobject */ 
            );
            /**Returns  the constraint linear weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int LinearWeight
            (
            );
            /**Sets  the constraint linear weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetLinearWeight
            (
                int linearWeight /** linearweight */ 
            );
            /**Returns  the constraint quad weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int QuadWeight
            (
            );
            /**Sets  the constraint quad weight 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetQuadWeight
            (
                int quadWeight /** quadweight */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
