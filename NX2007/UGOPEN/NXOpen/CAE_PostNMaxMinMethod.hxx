#ifndef NXOpen_CAE_POSTNMAXMINMETHOD_HXX_INCLUDED
#define NXOpen_CAE_POSTNMAXMINMETHOD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostNMaxMinMethod.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostSelectionEntity.hxx>
#include <NXOpen/CAE_PostISmartSelectorMethod.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostNMaxMinMethod;
    }
    namespace CAE
    {
        class PostISmartSelectorMethod;
    }
    namespace CAE
    {
        class PostSelectionEntity;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostNMaxMinMethodImpl;
        /** Represents a method object on post group.  <br> Not support KF.  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostNMaxMinMethod : public NXOpen::CAE::PostISmartSelectorMethod
        {
            private: PostNMaxMinMethodImpl * m_postnmaxminmethod_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostNMaxMinMethod(void *ptr);
            /// \endcond 
            /** Returns the resultant entities.
                        It is user's responsibility to destroy the result object once done.
                    
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEntities
            (
                std::vector<NXOpen::CAE::PostSelectionEntity *> & resultEntities /** resultentities */ 
            );
            /**Returns  the entities visibility 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeVisibleEntitiesOnly
            (
            );
            /**Sets  the entities visibility 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetIncludeVisibleEntitiesOnly
            (
                bool includeVisibleEntitiesOnly /** includevisibleentitiesonly */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
