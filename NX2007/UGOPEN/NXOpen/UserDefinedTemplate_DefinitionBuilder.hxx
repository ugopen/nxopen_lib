#ifndef NXOpen_USERDEFINEDTEMPLATE_DEFINITIONBUILDER_HXX_INCLUDED
#define NXOpen_USERDEFINEDTEMPLATE_DEFINITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UserDefinedTemplate_DefinitionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_userdefinedtemplate_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace UserDefinedTemplate
    {
        class DefinitionBuilder;
    }
    class Builder;
    class Expression;
    class NXObject;
    namespace UserDefinedTemplate
    {
        class ConfigurableObject;
    }
    namespace UserDefinedTemplate
    {
        class _DefinitionBuilderBuilder;
        class DefinitionBuilderImpl;
        /**
            Represents a @link NXOpen::UserDefinedTemplate::DefinitionBuilder NXOpen::UserDefinedTemplate::DefinitionBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::UserDefinedTemplate::Collection::CreateDefinitionBuilder  NXOpen::UserDefinedTemplate::Collection::CreateDefinitionBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_USERDEFINEDTEMPLATEEXPORT  DefinitionBuilder : public NXOpen::Builder
        {
            private: DefinitionBuilderImpl * m_definitionbuilder_impl;
            private: friend class  _DefinitionBuilderBuilder;
            protected: DefinitionBuilder();
            public: ~DefinitionBuilder();
            /** Set objects user like to add in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetObjects
            (
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /** Return objects user added in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetObjects
            (
            );
            /** Add objects user like to add in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void AddObjects
            (
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /** Remove objects user added in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveObjects
            (
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /** Set visibility of object user added in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetObjectVisibility
            (
                int entity /** entity */ ,
                bool isVisble /** isvisble */ 
            );
            /** Set expressions for user to edit in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void AddEditableExpressions
            (
                const std::vector<NXOpen::Expression *> & expressions /** expressions */ 
            );
            /** Returns the expressions that can be edited in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveEditableExpressions
            (
                const std::vector<NXOpen::Expression *> & expressions /** expressions */ 
            );
            /** Returns the expressions that can be edited in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Expression *> GetEditableExpressions
            (
            );
            /** Returns the references in User Defined Template 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetReferences
            (
            );
            /**Returns  the ConfigurableObject of User Defined Template Definition 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: NXOpen::UserDefinedTemplate::ConfigurableObject * ConfigurableObject
            (
            );
            /**Sets  the ConfigurableObject of User Defined Template Definition 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : usr_defined_features ("USER DEFINED FEATURES") */
            public: void SetConfigurableObject
            (
                NXOpen::UserDefinedTemplate::ConfigurableObject * configurableObjectTag /** configurableobjecttag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
