#ifndef NXOpen_FEATURES_DRAWSHAPES_DRAWCURVEDATA_HXX_INCLUDED
#define NXOpen_FEATURES_DRAWSHAPES_DRAWCURVEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DrawShapes_DrawCurveData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/GeometricUtilities_StrokeGestureData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace DrawShapes
        {
            class DrawCurveData;
        }
    }
    class Builder;
    namespace GeometricUtilities
    {
        class StrokeGestureData;
    }
    class NXColor;
    namespace Features
    {
        namespace DrawShapes
        {
            class _DrawCurveDataBuilder;
            class DrawCurveDataImpl;
            /** Represents @link  NXOpen::Features::DrawShapes::DrawCurveData   NXOpen::Features::DrawShapes::DrawCurveData @endlink 
                    allowing user to define curve using drag gesture.
                 <br> To create a new instance of this class, use @link NXOpen::Features::DrawShapes::DrawShapeCollection::CreateDrawCurveData  NXOpen::Features::DrawShapes::DrawShapeCollection::CreateDrawCurveData @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            CanDrawOnNearestFace </term> <description> 
             
            true </description> </item> 

            <item><term> 
             
            DetectionSensitivity </term> <description> 
             
            Standard </description> </item> 

            </list> 

             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  DrawCurveData : public NXOpen::Builder
            {
                /** Detection sensitivity options */
                public: enum DetectionSensitivityOption
                {
                    DetectionSensitivityOptionLow/** For creating primitives, the strokes can have large deviations from an ideal circle, line, etc.; For creating splines, the output spline will be rather smooth with larger deviations to the stroke. */,
                    DetectionSensitivityOptionStandard/** For creating primitives, the strokes can have medium deviations from an ideal circle, line, etc.; For creating splines, the output spline will be a tradeoff between smoothness and accuracy to the stroke.*/,
                    DetectionSensitivityOptionHigh/** For creating primitives, the strokes can have only small deviations from an ideal circle, line, etc.; For creating splines, the output spline will be rather bumpy with small deviations to the stroke.*/
                };

                /**  Snap options used during curve drawing */
                public: enum SnappingOption
                {
                    SnappingOptionNone/** No snapping. */,
                    SnappingOptionCurveEndPoints/** Snap to curve end points.*/,
                    SnappingOptionIsoparametricGrid/** Snap to isoparametric grid.*/
                };

                private: DrawCurveDataImpl * m_drawcurvedata_impl;
                private: friend class  _DrawCurveDataBuilder;
                protected: DrawCurveData();
                public: ~DrawCurveData();
                /**Returns  the object enabling drawing of the curve 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::StrokeGestureData * StrokeGesture
                (
                );
                /**Returns  the thickness 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::DisplayableObject::ObjectWidth Thickness
                (
                );
                /**Sets  the thickness 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetThickness
                (
                    NXOpen::DisplayableObject::ObjectWidth thickness /** thickness */ 
                );
                /**Returns  the color 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * Color
                (
                );
                /**Sets  the color 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the flag indicating if curves should be created only on the nearest face in view direction and 
                            not on faces on the back of a body. This option decreases the drawing performance. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanDrawOnNearestFace
                (
                );
                /**Sets  the flag indicating if curves should be created only on the nearest face in view direction and 
                            not on faces on the back of a body. This option decreases the drawing performance. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetCanDrawOnNearestFace
                (
                    bool doNearFaceProjection /** donearfaceprojection */ 
                );
                /**Returns  the value indicating if primitive curve should be created 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanCreatePrimitives
                (
                );
                /**Sets  the value indicating if primitive curve should be created 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetCanCreatePrimitives
                (
                    bool canCreatePrimitive /** cancreateprimitive */ 
                );
                /**Returns  the value indicating if existing curves should be over sketched 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: bool OversketchExistingCurves
                (
                );
                /**Sets  the value indicating if existing curves should be over sketched 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetOversketchExistingCurves
                (
                    bool oversketchExistingCurves /** oversketchexistingcurves */ 
                );
                /**Returns  the value indicating snapping option. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::DrawShapes::DrawCurveData::SnappingOption Snapping
                (
                );
                /**Sets  the value indicating snapping option. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetSnapping
                (
                    NXOpen::Features::DrawShapes::DrawCurveData::SnappingOption snapping /** snapping */ 
                );
                /**Returns  the value indicating detection sensitivity. The smaller the sensitivity,
                            the more accurate the stroke must be to be recognized as primitive. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::DrawShapes::DrawCurveData::DetectionSensitivityOption DetectionSensitivity
                (
                );
                /**Sets  the value indicating detection sensitivity. The smaller the sensitivity,
                            the more accurate the stroke must be to be recognized as primitive. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetDetectionSensitivity
                (
                    NXOpen::Features::DrawShapes::DrawCurveData::DetectionSensitivityOption detectionSensitivity /** detectionsensitivity */ 
                );
                /** Distance tolerance used to decide if newly drawn curve is considered as over-sketched curve on pre-existing curve. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_draw_shape (" NX Draw Shape Functionality") */
                public: void SetOverSketchTolerance
                (
                    double overSketchTolerance /** oversketchtolerance */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
