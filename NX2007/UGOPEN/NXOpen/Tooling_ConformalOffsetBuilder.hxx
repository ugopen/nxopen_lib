#ifndef NXOpen_TOOLING_CONFORMALOFFSETBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CONFORMALOFFSETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ConformalOffsetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ProjectCurveBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanToolBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ConformalOffsetBuilder;
    }
    class Builder;
    class Direction;
    class Expression;
    namespace GeometricUtilities
    {
        class BooleanToolBuilder;
    }
    class Point;
    class ScCollector;
    class Section;
    class SelectBodyList;
    namespace Tooling
    {
        class _ConformalOffsetBuilderBuilder;
        class ConformalOffsetBuilderImpl;
        /** Builder for Conformal Offset in NX  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateConformalOffsetBuilder  NXOpen::Tooling::MoldwizardManager::CreateConformalOffsetBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Associative </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        BooleanTool.ToolOption </term> <description> 
         
        FaceOrPlane </description> </item> 

        <item><term> 
         
        ConncetType </term> <description> 
         
        Default </description> </item> 

        <item><term> 
         
        CoolingDiameter.Value </term> <description> 
         
        3 (millimeters part), 0.125 (inches part) </description> </item> 

        <item><term> 
         
        DistanceToFace.Value </term> <description> 
         
        3 (millimeters part), 0.125 (inches part) </description> </item> 

        <item><term> 
         
        OffsetCheck </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        OriginalCurveLayer </term> <description> 
         
        255 </description> </item> 

        <item><term> 
         
        OriginalCurveOperation </term> <description> 
         
        Hide </description> </item> 

        <item><term> 
         
        PlaneInterval.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        PlaneNum </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PlaneStartValue.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        Tolerance </term> <description> 
         
        0.0254 (millimeters part), 0.001 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ConformalOffsetBuilder : public NXOpen::Builder
        {
            /** Represents the create the cooling guide curve method type. */
            public: enum Action
            {
                ActionExistingCurves/** Create conformal curves by smoothing existing curves. */,
                ActionIntersection/** Intersect conformal curves with reference plane. */,
                ActionProjection/** create conformal curves by projection. */,
                ActionSpecifyPoint/** Specify point to fit conformal curves. */,
                ActionAutomatic/** Automatica calculate the conformal cooling curves. */,
                ActionNone/** None of venting level action. */
            };

            /** Represents the conformal curves type. */
            public: enum ConnectType
            {
                ConnectTypeDefault/** Do not connect loop. */,
                ConnectTypeConnect/** Connect the adjacent conformal curve.*/,
                ConnectTypeEnclose/** Enclose all the conformal curves. */
            };

            /** Represents the conformal curves type. */
            public: enum CreateType
            {
                CreateTypeNew/** New the offset body. */,
                CreateTypeExisting/** Select the existing body.*/,
                CreateTypeNone/** Enclose all the conformal curves. */
            };

            /** Operation to be performed on the original curve */
            public: enum OriginalCurveOperationType
            {
                OriginalCurveOperationTypeNone/** none */ ,
                OriginalCurveOperationTypeHide/** hide */ ,
                OriginalCurveOperationTypeMovetoLayer/** moveto layer */ ,
                OriginalCurveOperationTypeDelete/** delete */ 
            };

            private: ConformalOffsetBuilderImpl * m_conformaloffsetbuilder_impl;
            private: friend class  _ConformalOffsetBuilderBuilder;
            protected: ConformalOffsetBuilder();
            public: ~ConformalOffsetBuilder();
            /**Returns  the faces to offset 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * OffsetFaces
            (
            );
            /**Returns  the body to offset 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * OffsetBody
            (
            );
            /**Returns  the offset distance from the faces 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DistanceToFace
            (
            );
            /**Returns  the way of getting the offset body option
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int CreateBodyMethod
            (
            );
            /**Sets  the way of getting the offset body option
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateBodyMethod
            (
                int bodyMethod /** bodymethod */ 
            );
            /**Returns  the flag to indicate whether to reverse the offset direction 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the flag to indicate whether to reverse the offset direction 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns  the check to indicate whether to perform offset checking 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool OffsetCheck
            (
            );
            /**Sets  the check to indicate whether to perform offset checking 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOffsetCheck
            (
                bool offsetCheck /** offsetcheck */ 
            );
            /**Returns  the diameter of cooling channel 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CoolingDiameter
            (
            );
            /**Returns  the created method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalOffsetBuilder::Action Type
            (
            );
            /**Sets  the created method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::ConformalOffsetBuilder::Action type /** type */ 
            );
            /**Returns  the boolean tool to generate the intersect plane
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanToolBuilder * BooleanTool
            (
            );
            /**Returns  the flag to indicate whether to reverse the pattern plane direction 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReversePlaneDirection
            (
            );
            /**Sets  the flag to indicate whether to reverse the pattern plane direction 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReversePlaneDirection
            (
                bool reversePlaneDirection /** reverseplanedirection */ 
            );
            /**Returns  the reference plane number.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int PlaneNum
            (
            );
            /**Sets  the reference plane number.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPlaneNum
            (
                int planeNum /** planenum */ 
            );
            /**Returns  the distance between first pattern plane and reference face.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PlaneStartValue
            (
            );
            /**Returns  the distance between each reference plane.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PlaneInterval
            (
            );
            /**Returns  the projection guide curves used to project the conformal curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ProjectGuideLines
            (
            );
            /**Returns  the created method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ProjectCurveBuilder::DirectionType ProjectDirectionMethod
            (
            );
            /**Sets  the created method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetProjectDirectionMethod
            (
                NXOpen::Features::ProjectCurveBuilder::DirectionType methodType /** methodtype */ 
            );
            /**Returns  the project direction for the projection method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ProjectDirection
            (
            );
            /**Sets  the project direction for the projection method type of conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetProjectDirection
            (
                NXOpen::Direction * projectDirection /** projectdirection */ 
            );
            /**Returns  the point used to fit the conformal curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectReferObjects
            (
            );
            /**Sets  the point used to fit the conformal curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetSelectReferObjects
            (
                NXOpen::ScCollector * selectReferObjects /** selectreferobjects */ 
            );
            /**Returns  the existing curves used to smooth the conformal curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectExistingCurves
            (
            );
            /**Returns  the origin of the Orientation manipulator. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d ManipulatorOrigin
            (
            );
            /**Sets  the origin of the Orientation manipulator. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetManipulatorOrigin
            (
                const NXOpen::Point3d & manipulatorOrigin /** manipulatororigin */ 
            );
            /**Returns  the smooth curve rate.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int CurveSmoothRates
            (
            );
            /**Sets  the smooth curve rate.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurveSmoothRates
            (
                int smoothRates /** smoothrates */ 
            );
            /**Returns  the modeling tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the modeling tolerance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the distance between each sample point for fiting conformal curve.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SampleDistance
            (
            );
            /**Returns  the tube features display flag 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowTubes
            (
            );
            /**Sets  the tube features display flag 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowTubes
            (
                bool tubeFlag /** tubeflag */ 
            );
            /**Returns  the operation to be performed on the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalOffsetBuilder::OriginalCurveOperationType OriginalCurveOperation
            (
            );
            /**Sets  the operation to be performed on the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOriginalCurveOperation
            (
                NXOpen::Tooling::ConformalOffsetBuilder::OriginalCurveOperationType originalCurveOperation /** originalcurveoperation */ 
            );
            /**Returns  the layer to put the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int OriginalCurveLayer
            (
            );
            /**Sets  the layer to put the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOriginalCurveLayer
            (
                int originalCurveLayer /** originalcurvelayer */ 
            );
            /**Returns  the associative flag that indicates whether output curve is associative with the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative flag that indicates whether output curve is associative with the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the connect conformal curves type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalOffsetBuilder::ConnectType ConncetType
            (
            );
            /**Sets  the connect conformal curves type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConncetType
            (
                NXOpen::Tooling::ConformalOffsetBuilder::ConnectType connectType /** connecttype */ 
            );
            /**Returns  the angle limit to smooth curve corner.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CornerAngleLimit
            (
            );
            /** Generate the intersection planes. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void GenerateIntersectionPlanes
            (
            );
            /** Create the conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void CreateConformalCurves
            (
            );
            /** Adjust the smooth corner for conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void AdjustSmoothCorner
            (
            );
            /** Update the status conformal cooling tubes. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateTubesStatus
            (
            );
            /** Method to delete a number of offset bodies created from the extracted faces features from the end of the list 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteOffsetBodiesCreatedFromExtractedFacesFeatures
            (
                int numFromEnd /** numfromend */ 
            );
            /** Update the checking offset bodies. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateCheckingOffsetFeatures
            (
            );
            /** Set preview enable status. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPreviewOn
            (
                bool previewEnabled /** previewenabled */ 
            );
            /** Set updating facet body status. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUpdateFacetBody
            (
                bool isUpdateFacetBody /** isupdatefacetbody */ 
            );
            /** Is facet body updating changed. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUpdateChanged
            (
                bool isUpdateChanged /** isupdatechanged */ 
            );
            /** Is is the operation of adjusting the smooth corner of cooling curve. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIsAdjustSmoothCorner
            (
                bool isAdjustSmoothCorner /** isadjustsmoothcorner */ 
            );
            /** Preview the conformal offset bodies and conformal cooling channels. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void PreviewBodies
            (
            );
            /** Update points selection after editing one point location by moving handle. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateSelectionAfterMoveHandle
            (
                std::vector<NXOpen::Point *> & profiles /** profiles */ 
            );
            /** Back up the moving point before editing the location of a point by moving handle. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBackUpMovePoint
            (
                NXOpen::Point * backPoint /** backpoint */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
