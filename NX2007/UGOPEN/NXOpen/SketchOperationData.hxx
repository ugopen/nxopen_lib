#ifndef NXOpen_SKETCHOPERATIONDATA_HXX_INCLUDED
#define NXOpen_SKETCHOPERATIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchOperationData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchOperationData;
    class NXObject;
    class SketchOperationDataImpl;
    /** Represents a @link NXOpen::SketchOperationData NXOpen::SketchOperationData@endlink . 
     <br>  Created in NX2007.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchOperationData : public NXOpen::TransientObject
    {
         /** 
            Used in @link NXOpen::SketchOperationData::GetGeometryData NXOpen::SketchOperationData::GetGeometryData@endlink  to match each sketch geometry with an identification string.
            */
        public:
        struct GeometryData
        {
            public: /** Sketch geometry of type @link NXOpen::Curve NXOpen::Curve@endlink  or @link NXOpen::Point NXOpen::Point@endlink  */NXOpen::NXObject * GeometryTag;
            public: /** geometrystring */ NXString GeometryString;
            public: GeometryData() :
                GeometryTag(),
                GeometryString()
            {
            }
            /** Constructor for the GeometryData struct. */ 
            public: GeometryData(NXOpen::NXObject * geometryTagInitial /** Sketch geometry of type @link NXOpen::Curve NXOpen::Curve@endlink  or @link NXOpen::Point NXOpen::Point@endlink  */, 
                    const NXString &geometryStringInitial /** geometrystring */ ) :
                GeometryTag(geometryTagInitial),
                GeometryString(geometryStringInitial)
            {
            }
        };

        private: SketchOperationDataImpl * m_sketchoperationdata_impl;
        /// \cond NX_NO_DOC 
        public: explicit SketchOperationData(void *ptr);
        /// \endcond 
        /** 
            Frees the object from memory. After this method is called,it is illegal to use the object.
            In .NET, this method is automatically called when the object is deleted by the garbage collector.
            
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~SketchOperationData();
        /** Returns the configuration data of the internal solver operation. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetConfigurationData
        (
            int* configurationDataSize /** configurationdatasize */ 
        );
        /** Returns the geometry data of the internal solver operation. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void GetGeometryData
        (
            std::vector<NXOpen::SketchOperationData::GeometryData> & geometryData /** geometrydata */ 
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
