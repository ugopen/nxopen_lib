#ifndef NXOpen_SAFETY_CONTACT_HXX_INCLUDED
#define NXOpen_SAFETY_CONTACT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Safety_Contact.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/libsafetyopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Safety
    {
        class Contact;
    }
    class DisplayableObject;
    namespace Safety
    {
        class _ContactBuilder;
        class ContactImpl;
        /**  Represents the Safety Contact.     <br> To create or edit an instance of this class, use @link NXOpen::Safety::ContactBuilder  NXOpen::Safety::ContactBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class SAFETYOPENCPPEXPORT  Contact : public NXOpen::DisplayableObject
        {
            /** Contact force type */
            public: enum ForceType
            {
                ForceTypeCharacteristic/** Characteristic force type */,
                ForceTypeKinematic/** Kinematic force type */
            };

            /** Contact first-second type */
            public: enum Type
            {
                TypeFirst/** First type */,
                TypeUserFirst/** User first type */,
                TypeSecond/** Second type */,
                TypeUserSecond/** User second type */,
                TypeUserMidPoint/** User mid point type */,
                TypeCombined/** Combined type */
            };

            /** Contact initial penetration type */
            public: enum InitialPenetrationType
            {
                InitialPenetrationTypeNone/** None */,
                InitialPenetrationTypeCorrect/** Correct */
            };

            /** Contact evaluation type */
            public: enum EvaluationType
            {
                EvaluationTypeNone/** None */,
                EvaluationTypeContinuous/** Continuous */,
                EvaluationTypeDiscrete/** Discrete */
            };

            private: ContactImpl * m_contact_impl;
            private: friend class  _ContactBuilder;
            protected: Contact();
            public: ~Contact();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
