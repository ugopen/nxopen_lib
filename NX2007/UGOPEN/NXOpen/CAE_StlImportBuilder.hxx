#ifndef NXOpen_CAE_STLIMPORTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_STLIMPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_StlImportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class StlImportBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class _StlImportBuilderBuilder;
        class StlImportBuilderImpl;
        /** This builder is meant for importing STL file as mesh as well as creating polygon geometry. This functionality can be used in FEM and AFEM  <br> To create a new instance of this class, use @link NXOpen::CAE::CaePart::CreateStlImportBuilder  NXOpen::CAE::CaePart::CreateStlImportBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FileUnits </term> <description> 
         
        PartUnits </description> </item> 

        <item><term> 
         
        ReportSummary </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  StlImportBuilder : public NXOpen::Builder
        {
            /** the units for STL file */
            public: enum StlFileUnitType
            {
                StlFileUnitTypePartUnits/** STL units same as current part units */,
                StlFileUnitTypeMeters/** STL units in meters */,
                StlFileUnitTypeMillimeters/** STL units in millimeters */,
                StlFileUnitTypeInches/** STL units in inches */
            };

            private: StlImportBuilderImpl * m_stlimportbuilder_impl;
            private: friend class  _StlImportBuilderBuilder;
            protected: StlImportBuilder();
            public: ~StlImportBuilder();
            /**Returns  the stl file browser 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StlFileBrowser
            (
            );
            /**Sets  the stl file browser 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetStlFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the stl file browser 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetStlFileBrowser
            (
                const char * filename /** filename */ 
            );
            /**Returns  the file units 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::StlImportBuilder::StlFileUnitType FileUnits
            (
            );
            /**Sets  the file units 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFileUnits
            (
                NXOpen::CAE::StlImportBuilder::StlFileUnitType fileUnits /** fileunits */ 
            );
            /**Returns  the element type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the report summary 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReportSummary
            (
            );
            /**Sets  the report summary 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetReportSummary
            (
                bool reportSummary /** reportsummary */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
