#ifndef NXOpen_SKETCHLINEBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchLineBuilder;
    class Builder;
    class Line;
    class NXObject;
    class _SketchLineBuilderBuilder;
    class SketchLineBuilderImpl;

    /// \cond NX_NO_DOC 
    /** Create a line in the active sketch.  <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateLineBuilder  NXOpen::SketchCollection::CreateLineBuilder @endlink  <br> 
     <br>  Created in NX2007.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchLineBuilder : public NXOpen::Builder
    {
        private: SketchLineBuilderImpl * m_sketchlinebuilder_impl;
        private: friend class  _SketchLineBuilderBuilder;
        protected: SketchLineBuilder();
        public: ~SketchLineBuilder();

        /// \cond NX_NO_DOC 
        /**Returns  the option to enable snapping, which is inferring geometric relationships between geometry during the next call to @link NXOpen::SketchLineBuilder::SetEndPoint NXOpen::SketchLineBuilder::SetEndPoint@endlink . 
            Snapping is enabled by default and uses the distance set by @link NXOpen::SketchLineBuilder::SnapRadius NXOpen::SketchLineBuilder::SnapRadius@endlink , the snap candidate geometry set by 
            @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink . This option can be changed at any time before @link NXOpen::Builder::Commit NXOpen::Builder::Commit@endlink . 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: bool SnapEnabled
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the option to enable snapping, which is inferring geometric relationships between geometry during the next call to @link NXOpen::SketchLineBuilder::SetEndPoint NXOpen::SketchLineBuilder::SetEndPoint@endlink . 
            Snapping is enabled by default and uses the distance set by @link NXOpen::SketchLineBuilder::SnapRadius NXOpen::SketchLineBuilder::SnapRadius@endlink , the snap candidate geometry set by 
            @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink . This option can be changed at any time before @link NXOpen::Builder::Commit NXOpen::Builder::Commit@endlink . 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSnapEnabled
        (
            bool isSnapEnabled /** issnapenabled */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the maximum distance from the line start or end point to a snap target for point snapping to happen. This can be adjusted based on the zoom scale to get finer control over the 
            snapping behavior. See also @link NXOpen::SketchLineBuilder::SnapEnabled NXOpen::SketchLineBuilder::SnapEnabled@endlink  and @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink . 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double SnapRadius
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the maximum distance from the line start or end point to a snap target for point snapping to happen. This can be adjusted based on the zoom scale to get finer control over the 
            snapping behavior. See also @link NXOpen::SketchLineBuilder::SnapEnabled NXOpen::SketchLineBuilder::SnapEnabled@endlink  and @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink . 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSnapRadius
        (
            double snapRadius /** snapradius */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Get the preview line.  @return  Preview line. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Line * GetPreviewGeometry
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Set the line start point.  The point should lie on the sketch plane and could represent the cursor position. If @link NXOpen::SketchLineBuilder::SnapEnabled NXOpen::SketchLineBuilder::SnapEnabled@endlink  is true 
            and snap targets have been set, geometric relationships can be inferred. The actual start point may be different than the input point if geometric relations are inferred by snapping. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetStartPoint
        (
            const NXOpen::Point3d & startPoint /** The start point of the line. */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Set the input geometry as a snap target. It can be sketch geometry or geometry outside sketch. Relationships will be inferred between the preview line and the 
            snap targets starting from the most recent target set. The five most recent snap targets will be considered during a call to @link NXOpen::SketchLineBuilder::SetEndPoint NXOpen::SketchLineBuilder::SetEndPoint@endlink . 
            The targets can change during the line creation. To snap the end point to a target that is off the sketch plane use @link NXOpen::SketchLineBuilder::SetSnapPointTarget NXOpen::SketchLineBuilder::SetSnapPointTarget@endlink  instead.
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSnapTarget
        (
            NXOpen::NXObject * snapTarget /** Candidate snap target geometry. */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Set a geometry as a snap target with help point. The geometry will be considered a snap target just like those set by @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink . 
            The help point is the location specified on the snap target geometry and is the point nearest to the current cursor location (or line end point). The help point will be used in end point 
            snapping and is only necessary when the target is not on the sketch plane. The snap target will also be used for other relation types. Only one snap target can have a help point, and all 
            previously set help points will be ignored though the snap targets will still be considered in directional snapping. The help point can be reset by calling
            @link NXOpen::SketchLineBuilder::SetSnapTarget NXOpen::SketchLineBuilder::SetSnapTarget@endlink  on the same geometry. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSnapPointTarget
        (
            NXOpen::NXObject * snapTarget /** Candidate snap target geometry. */,
            const NXOpen::Point3d & snapHelpPoint /** The help point is used for point snapping and doesn't affect directional snapping. */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Set the line end point. The point should lie on the sketch plane and could represent the cursor position.  If @link NXOpen::SketchLineBuilder::SnapEnabled NXOpen::SketchLineBuilder::SnapEnabled@endlink  is true 
            and snap targets have been set, geometric relationships can be inferred. The actual end point may be different than the input point if geometric relations are inferred by snapping.
            Only the relationships inferred in the last call to this method will be applied. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetEndPoint
        (
            const NXOpen::Point3d & endPoint /** The end point of the line. */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Lock all the directional relations that are snapped/previewed in the current configuration 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void LockDirectionalSnapRelations
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Unlock all the relations that were previously locked. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void UnlockDirectionalSnapRelations
        (
        );

        /// \endcond 
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
