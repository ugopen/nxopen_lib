#ifndef NXOpen_IFCIMPORTER_HXX_INCLUDED
#define NXOpen_IFCIMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     IfcImporter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BaseImporter.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class IfcImporter;
    class BaseImporter;
    class _IfcImporterBuilder;
    class IfcImporterImpl;
    /**
        Represents a @link NXOpen::IfcImporter NXOpen::IfcImporter@endlink  to be used when importing IFC Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateIfcImporter  NXOpen::DexManager::CreateIfcImporter @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    BuildingControls </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    Deltax </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    Deltay </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    Deltaz </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    Electrical </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    FlattenAssembly </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    Hvac </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    ImportFacetsAsXTBrepOrConvergent </term> <description> 
     
    XTBrep </description> </item> 

    <item><term> 
     
    ImportTo </term> <description> 
     
    WorkPart </description> </item> 

    <item><term> 
     
    ImportToTeamcenter </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ImportTooFarHandlingMethod </term> <description> 
     
    Insertnode </description> </item> 

    <item><term> 
     
    Messages </term> <description> 
     
    None </description> </item> 

    <item><term> 
     
    MoveModelData </term> <description> 
     
    To000 </description> </item> 

    <item><term> 
     
    Optimize </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    PlumbingFireProtection </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    ProductExtension </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    RotateAroundZByDegrees </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    SharedBldgServicesElements </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    SharedBuildingElements </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    SharedComponentElements </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    SharedFacilitiesElements </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    ShowInformationWindowFlag </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    StructuralAnalysis </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    StructuralElements </term> <description> 
     
    1 </description> </item> 

    </list> 

     <br>  Created in NX1872.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  IfcImporter : public NXOpen::BaseImporter
    {
        /** Import To Option */
        public: enum ImportToOption
        {
            ImportToOptionWorkPart/** import IFC file to work part */,
            ImportToOptionNewPart/** import IFC file to new part */
        };

        /** Convert facets to xtbrep or convergent */
        public: enum ImportFacetsAsXTBrepOrConvergentEnum
        {
            ImportFacetsAsXTBrepOrConvergentEnumXTBrep/** xtbrep */ ,
            ImportFacetsAsXTBrepOrConvergentEnumConvergentBodies/** convergent bodies */ 
        };

        /** TooFarHandlingMethod for dealing with geometry outside of Parasolid modeling box. */
        public: enum ImportTooFarHandlingMethodEnum
        {
            ImportTooFarHandlingMethodEnumInsertnode/** insertnode */ ,
            ImportTooFarHandlingMethodEnumNone/** none */ 
        };

        /** Transform model by delta or move to 0. */
        public: enum MoveDataEnum
        {
            MoveDataEnumByDeltamm/** by deltamm */ ,
            MoveDataEnumTo000/** to000 */ 
        };

        /** Messages output when opening the file. */
        public: enum MessageEnum
        {
            MessageEnumNone/** none */ ,
            MessageEnumInformational/** informational */ ,
            MessageEnumWarning/** warning */ ,
            MessageEnumError/** error */ ,
            MessageEnumDebug/** debug */ ,
            MessageEnumAll/** all */ 
        };

        private: IfcImporterImpl * m_ifcimporter_impl;
        private: friend class  _IfcImporterBuilder;
        protected: IfcImporter();
        public: ~IfcImporter();
        /**Returns  the import to option - import to new part or work part. 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::IfcImporter::ImportToOption ImportTo
        (
        );
        /**Sets  the import to option - import to new part or work part. 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportTo
        (
            NXOpen::IfcImporter::ImportToOption importTo /** importto */ 
        );
        /**Returns  the FlattenAssembly option - if set to true then assembly will be flattened into single piece part 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: bool FlattenAssembly
        (
        );
        /**Sets  the FlattenAssembly option - if set to true then assembly will be flattened into single piece part 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFlattenAssembly
        (
            bool flattenAssembly /** flattenassembly */ 
        );
        /**Returns  the functions get and set the option to convert facets to xtbrep or convergent 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::IfcImporter::ImportFacetsAsXTBrepOrConvergentEnum ImportFacetsAsXTBrepOrConvergent
        (
        );
        /**Sets  the functions get and set the option to convert facets to xtbrep or convergent 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportFacetsAsXTBrepOrConvergent
        (
            NXOpen::IfcImporter::ImportFacetsAsXTBrepOrConvergentEnum importFacetsAsXTBrepOrConvergent /** importfacetsasxtbreporconvergent */ 
        );
        /**Returns  the OptimizeBrep option - if set to true then xtbrep will be optimized e.g. faces merged together 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: bool Optimize
        (
        );
        /**Sets  the OptimizeBrep option - if set to true then xtbrep will be optimized e.g. faces merged together 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOptimize
        (
            bool optimize /** optimize */ 
        );
        /**Returns  the method for trying to fix geometry cration failures outside of the Parasolid modeling box 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::IfcImporter::ImportTooFarHandlingMethodEnum ImportTooFarHandlingMethod
        (
        );
        /**Sets  the method for trying to fix geometry cration failures outside of the Parasolid modeling box 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportTooFarHandlingMethod
        (
            NXOpen::IfcImporter::ImportTooFarHandlingMethodEnum importTooFarHandlingMethod /** importtoofarhandlingmethod */ 
        );
        /**Returns  the move model data 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::IfcImporter::MoveDataEnum MoveModelData
        (
        );
        /**Sets  the move model data 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetMoveModelData
        (
            NXOpen::IfcImporter::MoveDataEnum moveModelData /** movemodeldata */ 
        );
        /**Returns  the deltax 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: double Deltax
        (
        );
        /**Sets  the deltax 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDeltax
        (
            double deltax /** deltax */ 
        );
        /**Returns  the deltay 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: double Deltay
        (
        );
        /**Sets  the deltay 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDeltay
        (
            double deltay /** deltay */ 
        );
        /**Returns  the deltaz 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: double Deltaz
        (
        );
        /**Sets  the deltaz 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDeltaz
        (
            double deltaz /** deltaz */ 
        );
        /**Returns  the rotate around Z by degrees 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: double RotateAroundZByDegrees
        (
        );
        /**Sets  the rotate around Z by degrees 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetRotateAroundZByDegrees
        (
            double rotateAroundZByDegrees /** rotatearoundzbydegrees */ 
        );
        /**Returns  the message level for syslog messages when loading Ifc files 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::IfcImporter::MessageEnum Messages
        (
        );
        /**Sets  the message level for syslog messages when loading Ifc files 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetMessages
        (
            NXOpen::IfcImporter::MessageEnum messages /** messages */ 
        );
        /**Returns  the file open flag - set this to false if doing file import
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileOpenFlag
        (
        );
        /**Sets  the file open flag - set this to false if doing file import
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileOpenFlag
        (
            bool doingFileOpen /** doingfileopen */ 
        );
        /**Returns  the information flag - set this to true to display info in window
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: bool ShowInformationWindowFlag
        (
        );
        /**Sets  the information flag - set this to true to display info in window
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetShowInformationWindowFlag
        (
            bool doingInformationWindow /** doinginformationwindow */ 
        );
        /**Returns  the settings file - The definition file to read default options 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /** Save the settings - this will save the settings to a file sepcified
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** Save the settings - this will save the settings to a file sepcified
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the building controls 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool BuildingControls
        (
        );
        /**Sets  the building controls 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetBuildingControls
        (
            bool buildingControls /** buildingcontrols */ 
        );
        /**Returns  the plumbing fire protection 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool PlumbingFireProtection
        (
        );
        /**Sets  the plumbing fire protection 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPlumbingFireProtection
        (
            bool plumbingFireProtection /** plumbingfireprotection */ 
        );
        /**Returns  the structural elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool StructuralElements
        (
        );
        /**Sets  the structural elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetStructuralElements
        (
            bool structuralElements /** structuralelements */ 
        );
        /**Returns  the structural analysis 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool StructuralAnalysis
        (
        );
        /**Sets  the structural analysis 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetStructuralAnalysis
        (
            bool structuralAnalysis /** structuralanalysis */ 
        );
        /**Returns  the h vac 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool Hvac
        (
        );
        /**Sets  the h vac 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetHvac
        (
            bool hvac /** hvac */ 
        );
        /**Returns  the electrical 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool Electrical
        (
        );
        /**Sets  the electrical 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetElectrical
        (
            bool electrical /** electrical */ 
        );
        /**Returns  the shared bldg services elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool SharedBldgServicesElements
        (
        );
        /**Sets  the shared bldg services elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSharedBldgServicesElements
        (
            bool sharedBldgServicesElements /** sharedbldgserviceselements */ 
        );
        /**Returns  the shared component elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool SharedComponentElements
        (
        );
        /**Sets  the shared component elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSharedComponentElements
        (
            bool sharedComponentElements /** sharedcomponentelements */ 
        );
        /**Returns  the shared building elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool SharedBuildingElements
        (
        );
        /**Sets  the shared building elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSharedBuildingElements
        (
            bool sharedBuildingElements /** sharedbuildingelements */ 
        );
        /**Returns  the shared facilities elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool SharedFacilitiesElements
        (
        );
        /**Sets  the shared facilities elements 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSharedFacilitiesElements
        (
            bool sharedFacilitiesElements /** sharedfacilitieselements */ 
        );
        /**Returns  the product extension 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: bool ProductExtension
        (
        );
        /**Sets  the product extension 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void SetProductExtension
        (
            bool productExtension /** productextension */ 
        );
        /**Returns  the import to Teamcenter  - if set to true then imported data can be added to Teamcenter
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: bool ImportToTeamcenter
        (
        );
        /**Sets  the import to Teamcenter  - if set to true then imported data can be added to Teamcenter
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportToTeamcenter
        (
            bool importToTeamcenter /** importtoteamcenter */ 
        );
        /**Sets  the ExcludePRVsList - List of PRVs to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExcludePRVsList
        (
            const NXString & excludePRVsList /** excludeprvslist */ 
        );
        /**Sets  the ExcludePRVsList - List of PRVs to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        void SetExcludePRVsList
        (
            const char * excludePRVsList /** excludeprvslist */ 
        );
        /**Returns  the ExcludePRVsList - List of PRVs to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ExcludePRVsList
        (
        );
        /**Sets  the CollapsePRVsList - List of PRVs to collapse 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCollapsePRVsList
        (
            const NXString & collapsePRVsList /** collapseprvslist */ 
        );
        /**Sets  the CollapsePRVsList - List of PRVs to collapse 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        void SetCollapsePRVsList
        (
            const char * collapsePRVsList /** collapseprvslist */ 
        );
        /**Returns  the CollapsePRVsList - List of PRVs to collapse 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString CollapsePRVsList
        (
        );
        /**Sets  the ImportFacetsAsConvergentGeometryList - List of PRVs to import facets as convergent geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportFacetsAsConvergentGeometryList
        (
            const NXString & importFacetsAsConvergentGeometryList /** importfacetsasconvergentgeometrylist */ 
        );
        /**Sets  the ImportFacetsAsConvergentGeometryList - List of PRVs to import facets as convergent geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        void SetImportFacetsAsConvergentGeometryList
        (
            const char * importFacetsAsConvergentGeometryList /** importfacetsasconvergentgeometrylist */ 
        );
        /**Returns  the ImportFacetsAsConvergentGeometryList - List of PRVs to import facets as convergent geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ImportFacetsAsConvergentGeometryList
        (
        );
        /**Sets  the ImportFacetsAsPreciseGeometryList - List of PRVs to import facets as precise geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetImportFacetsAsPreciseGeometryList
        (
            const NXString & importFacetsAsPreciseGeometryList /** importfacetsasprecisegeometrylist */ 
        );
        /**Sets  the ImportFacetsAsPreciseGeometryList - List of PRVs to import facets as precise geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        void SetImportFacetsAsPreciseGeometryList
        (
            const char * importFacetsAsPreciseGeometryList /** importfacetsasprecisegeometrylist */ 
        );
        /**Returns  the ImportFacetsAsPreciseGeometryList - List of PRVs to import facets as precise geometry 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ImportFacetsAsPreciseGeometryList
        (
        );
        /**Sets  the ExcludeElementClassifications - List of Element Classifications to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExcludeElementClassifications
        (
            const NXString & excludeElementClassifications /** excludeelementclassifications */ 
        );
        /**Sets  the ExcludeElementClassifications - List of Element Classifications to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        void SetExcludeElementClassifications
        (
            const char * excludeElementClassifications /** excludeelementclassifications */ 
        );
        /**Returns  the ExcludeElementClassifications - List of Element Classifications to exclude 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ExcludeElementClassifications
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
