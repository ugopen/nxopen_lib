#ifndef NXOpen_DSEPLATFORM_STUDYMANAGER_HXX_INCLUDED
#define NXOpen_DSEPLATFORM_STUDYMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DSEPlatform_StudyManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/DSEPlatform_ExplorationStudy.hxx>
#include <NXOpen/DSEPlatform_OptimizationWorkflow.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libdseplatformopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DSEPlatform
    {
        class StudyManager;
    }
    class Session;
    namespace DSEPlatform
    {
        class ExplorationStudy;
    }
    namespace DSEPlatform
    {
        class OptimizationWorkflow;
    }
    class Part;
    namespace DSEPlatform
    {
        class StudyManagerImpl;
        /** Represents the Design Space Explorer Study Manager class. <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class DSEPLATFORMOPENCPPEXPORT  StudyManager
        {
            private: StudyManagerImpl * m_studymanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit StudyManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static StudyManager* theStudyManager;
            /** Returns the StudyManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static StudyManager* GetStudyManager(NXOpen::Session *owner);
            public: ~StudyManager();
            /** Get the active study in the part.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DSEPlatform::ExplorationStudy * GetActiveStudy
            (
                NXOpen::Part * part /** part */ 
            );
            /** Set the active study in the part.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetActiveStudy
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::DSEPlatform::ExplorationStudy * activeStudy /** activestudy */ 
            );
            /** Get the number of studies in the part 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int GetNumberOfStudies
            (
                NXOpen::Part * part /** part */ 
            );
            /** Get the study at index in the part 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DSEPlatform::ExplorationStudy * GetStudyAtIndex
            (
                NXOpen::Part * part /** part */ ,
                int index /** index */ 
            );
            /** Set design workflow on optimization study
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void AddWorkflow
            (
                NXOpen::DSEPlatform::ExplorationStudy * study /** study */ ,
                NXOpen::DSEPlatform::OptimizationWorkflow * workflow /** workflow */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
