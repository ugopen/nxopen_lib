#ifndef NXOpen_FEATURES_HEALSURFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_HEALSURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_HealSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class HealSurfaceBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class SelectDisplayableObjectList;
    namespace Features
    {
        class _HealSurfaceBuilderBuilder;
        class HealSurfaceBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link Features::HealSurface Features::HealSurface@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::SynchronousEdgeCollection::CreateHealSurfaceBuilder  NXOpen::Features::SynchronousEdgeCollection::CreateHealSurfaceBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AngularThreshold </term> <description> 
         
        15 </description> </item> 

        <item><term> 
         
        ContinuityType </term> <description> 
         
        G0Position </description> </item> 

        <item><term> 
         
        MaxDiscontinuityLabelMethod </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        ToleranceMarkup </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        Type </term> <description> 
         
        RemoveGashes </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  HealSurfaceBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** This attribute represents two heal types */
            public: enum HealTypes
            {
                HealTypesRemoveGashes/** remove gashes */ ,
                HealTypesHealInternalEdges/** heal internal edges */ 
            };

            /** This attribute represents two continuity types */
            public: enum ContinuityTypes
            {
                ContinuityTypesG0Position/** g0position */ ,
                ContinuityTypesG1Tangent/** g1tangent */ 
            };

            /** This attribute represents three maximum discontinuity types */
            public: enum MaxDiscontinuityLabelMethods
            {
                MaxDiscontinuityLabelMethodsNone/** none */ ,
                MaxDiscontinuityLabelMethodsPerEdge/** per edge */ ,
                MaxDiscontinuityLabelMethodsPerBody/** per body */ 
            };

            private: HealSurfaceBuilderImpl * m_healsurfacebuilder_impl;
            private: friend class  _HealSurfaceBuilderBuilder;
            protected: HealSurfaceBuilder();
            public: ~HealSurfaceBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::HealSurfaceBuilder::HealTypes Type
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetType
            (
                NXOpen::Features::HealSurfaceBuilder::HealTypes type /** type */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the sheetBodies 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * SheetBodies
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the edges 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Edges
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the continuityType 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::HealSurfaceBuilder::ContinuityTypes ContinuityType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the continuityType 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetContinuityType
            (
                NXOpen::Features::HealSurfaceBuilder::ContinuityTypes continuityType /** continuitytype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the sharpEdges 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SharpEdges
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the toleranceMarkup 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ToleranceMarkup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the toleranceMarkup 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetToleranceMarkup
            (
                bool toleranceMarkup /** tolerancemarkup */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the maxDiscontinuityLabelMethod 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::HealSurfaceBuilder::MaxDiscontinuityLabelMethods MaxDiscontinuityLabelMethod
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the maxDiscontinuityLabelMethod 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMaxDiscontinuityLabelMethod
            (
                NXOpen::Features::HealSurfaceBuilder::MaxDiscontinuityLabelMethods maximumDiscontinuityType /** maximumdiscontinuitytype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the distanceThreshold 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DistanceThreshold
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the angularThreshold 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double AngularThreshold
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the angularThreshold 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAngularThreshold
            (
                double angularThreshold /** angularthreshold */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the disTol 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double DisTol
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the disTol 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetDisTol
            (
                double disTol /** distol */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the angTol 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double AngTol
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the angTol 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAngTol
            (
                double angTol /** angtol */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
