#ifndef NXOpen_CAE_MULTIPLECOMPANIONRESULTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MULTIPLECOMPANIONRESULTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MultipleCompanionResultBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CompanionResultBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MultipleCompanionResultBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CompanionResult;
    }
    namespace CAE
    {
        class _MultipleCompanionResultBuilderBuilder;
        class MultipleCompanionResultBuilderImpl;
        /** Represents multiple builder be used to create or edit an @link NXOpen::CAE::CompanionResult NXOpen::CAE::CompanionResult@endlink   <br> To create a new instance of this class, use @link NXOpen::CAE::CompanionResultCollection::CreateMultipleCompanionResultBuilder  NXOpen::CAE::CompanionResultCollection::CreateMultipleCompanionResultBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AppendMethod </term> <description> 
         
        CreateNewLoadCases </description> </item> 

        <item><term> 
         
        Disposition </term> <description> 
         
        Delete </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MultipleCompanionResultBuilder : public NXOpen::Builder
        {
            private: MultipleCompanionResultBuilderImpl * m_multiplecompanionresultbuilder_impl;
            private: friend class  _MultipleCompanionResultBuilderBuilder;
            protected: MultipleCompanionResultBuilder();
            public: ~MultipleCompanionResultBuilder();
            /** Commits This method must be used instead of commit 
                        if you want to get the @link NXOpen::CAE::CompanionResult NXOpen::CAE::CompanionResult@endlink  returned. This is because the  
                        @link NXOpen::CAE::CompanionResult NXOpen::CAE::CompanionResult@endlink  is not an @link NXOpen::NXObject NXOpen::NXObject@endlink  which is returned 
                        by the standard builder  @return  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: std::vector<NXOpen::CAE::CompanionResult *> CommitResult
            (
            );
            /** Sets the file names to the builder and validate them
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCompanionResultFiles
            (
                std::vector<NXString> & filenames /** filenames */ 
            );
            /** Gets the companion results file name.  @return  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetCompanionResultFiles
            (
            );
            /**Returns  the append method indicate how the companion results data will be presented 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CompanionResultBuilder::ResultAppendMethod AppendMethod
            (
            );
            /**Sets  the append method indicate how the companion results data will be presented 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetAppendMethod
            (
                NXOpen::CAE::CompanionResultBuilder::ResultAppendMethod appendMethod /** appendmethod */ 
            );
            /**Returns  the file disposition  attribute indicates how the companion result file will be disposed of when the primary results are gone.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CompanionResultBuilder::CompanionResultDisposition Disposition
            (
            );
            /**Sets  the file disposition  attribute indicates how the companion result file will be disposed of when the primary results are gone.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDisposition
            (
                NXOpen::CAE::CompanionResultBuilder::CompanionResultDisposition disposition /** disposition */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
