#ifndef NXOpen_SCHEMATIC_PREFERENCESANNOTATIONBUILDER_HXX_INCLUDED
#define NXOpen_SCHEMATIC_PREFERENCESANNOTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Schematic_PreferencesAnnotationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_DataType.hxx>
#include <NXOpen/Diagramming_RenderingPropertiesBuilder.hxx>
#include <NXOpen/Diagramming_Tables_CellSettingsBuilder.hxx>
#include <NXOpen/Diagramming_TextStyleBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_schematic_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Schematic
    {
        class PreferencesAnnotationBuilder;
    }
    namespace Diagramming
    {
        class RenderingPropertiesBuilder;
    }
    namespace Diagramming
    {
        namespace Tables
        {
            class CellSettingsBuilder;
        }
    }
    namespace Diagramming
    {
        class TextStyleBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Schematic
    {
        class _PreferencesAnnotationBuilderBuilder;
        class PreferencesAnnotationBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a PreferencesAnnotationBuilder
            
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_SCHEMATICEXPORT  PreferencesAnnotationBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: PreferencesAnnotationBuilderImpl * m_preferencesannotationbuilder_impl;
            private: friend class  _PreferencesAnnotationBuilderBuilder;
            protected: PreferencesAnnotationBuilder();
            public: ~PreferencesAnnotationBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal position of the connection tag. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::DiagrammingConnectionlabelhorizontaloffsetposition ConnectionLabelHorizontalOffsetPosition
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the horizontal position of the connection tag. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: void SetConnectionLabelHorizontalOffsetPosition
            (
                NXOpen::Diagramming::DiagrammingConnectionlabelhorizontaloffsetposition position /** position */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical position of the connection tag. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::DiagrammingConnectionlabelverticaloffsetposition ConnectionLabelVerticalOffsetPosition
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the vertical position of the connection tag. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: void SetConnectionLabelVerticalOffsetPosition
            (
                NXOpen::Diagramming::DiagrammingConnectionlabelverticaloffsetposition position /** position */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the tag is displayed at the center of the connection.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: bool ConnectionLabelPositionCenter
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the tag is displayed at the center of the connection.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: void SetConnectionLabelPositionCenter
            (
                bool center /** center */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the gap between the connection and the tag.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: double ConnectionLabelOffset
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the gap between the connection and the tag.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: void SetConnectionLabelOffset
            (
                double offset /** offset */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the connection text style of the Annotation. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::TextStyleBuilder * TextStyleConnectionBuilder
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the note text style of the Annotation. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::TextStyleBuilder * TextStyleNoteBuilder
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns     the preferences tabular note settings builder 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::Tables::CellSettingsBuilder * TablesCellSettings
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns     the preferences tabular note border cell settings builder 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_diagramming ("NX Diagramming") */
            public: NXOpen::Diagramming::RenderingPropertiesBuilder * TablesBorderCellSettings
            (
            );

            /// \endcond 
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
