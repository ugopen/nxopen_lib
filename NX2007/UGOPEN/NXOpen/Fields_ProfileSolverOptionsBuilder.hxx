#ifndef NXOpen_FIELDS_PROFILESOLVEROPTIONSBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_PROFILESOLVEROPTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_ProfileSolverOptionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class ProfileSolverOptionsBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Fields
    {
        class _ProfileSolverOptionsBuilderBuilder;
        class ProfileSolverOptionsBuilderImpl;
        /**  @brief 
                    Represents a builder class to handle the solver options of an @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink .
                 

         
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  ProfileSolverOptionsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**  @brief 
                        the interpolation method used for the profile
                     

              */
            public: enum Interpolation
            {
                InterpolationLinear/** Linear */,
                InterpolationAkima/** Akima */,
                InterpolationAkima72/** Akima72 */,
                InterpolationCubic/** Cubic */
            };

            /**  @brief 
                        the extrapolation method used for the profile
                     

              */
            public: enum Extrapolation
            {
                ExtrapolationLinear/** Linear */,
                ExtrapolationParabolic/** Parabolic */,
                ExtrapolationCubic/** Cubic */
            };

            /**  @brief 
                        Defines if the profile is repeating cyclically in any direction.
                     

             
                    
                        If not set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink ,
                        this trumps any @link NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation@endlink  which might have been set.
                    */
            public: enum CyclicType
            {
                CyclicTypeNone/** not cyclic */,
                CyclicTypeXOnly/** cyclic in x direction */,
                CyclicTypeYOnly/** cyclic in y direction */,
                CyclicTypeBoth/** cyclic in both x and y direction */
            };

            private: ProfileSolverOptionsBuilderImpl * m_profilesolveroptionsbuilder_impl;
            private: friend class  _ProfileSolverOptionsBuilderBuilder;
            protected: ProfileSolverOptionsBuilder();
            public: ~ProfileSolverOptionsBuilder();
            /**Returns   @brief 
                        the interpolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72 NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic@endlink </li>
                        </ul>
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder::Interpolation XInterpolation
            (
            );
            /**Sets   @brief 
                        the interpolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72 NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic@endlink </li>
                        </ul>
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXInterpolation
            (
                NXOpen::Fields::ProfileSolverOptionsBuilder::Interpolation interpolation /** interpolation */ 
            );
            /**Returns   @brief 
                        the interpolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72 NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used surface profiles
                         <br> 
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder::Interpolation YInterpolation
            (
            );
            /**Sets   @brief 
                        the interpolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72 NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::InterpolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used surface profiles
                         <br> 
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYInterpolation
            (
                NXOpen::Fields::ProfileSolverOptionsBuilder::Interpolation interpolation /** interpolation */ 
            );
            /**Returns   @brief 
                        the extrapolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic@endlink </li>
                        </ul>
                         <br> 
                            This is only used when @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType@endlink 
                            is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                         <br> 
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation XExtrapolation
            (
            );
            /**Sets   @brief 
                        the extrapolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic@endlink </li>
                        </ul>
                         <br> 
                            This is only used when @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType@endlink 
                            is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                         <br> 
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXExtrapolation
            (
                NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation extrapolation /** extrapolation */ 
            );
            /**Returns   @brief 
                        the extrapolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used surface profiles
                        and when @link NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclicType@endlink 
                        is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation YExtrapolation
            (
            );
            /**Sets   @brief 
                        the extrapolation in y direction.
                         

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationParabolic@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationCubic NXOpen::Fields::ProfileSolverOptionsBuilder::ExtrapolationCubic@endlink </li>
                        </ul>
                         <br> 
                        This is only used surface profiles
                        and when @link NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclicType@endlink 
                        is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                        or @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly@endlink 
                         <br> 
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYExtrapolation
            (
                NXOpen::Fields::ProfileSolverOptionsBuilder::Extrapolation extrapolation /** extrapolation */ 
            );
            /**Returns   @brief 
                        the cyclic type.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly@endlink </li>
                        </ul>
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType Cyclic
            (
            );
            /**Sets   @brief 
                        the cyclic type.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeXOnly@endlink </li>
                        </ul>
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCyclic
            (
                NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType cyclicType /** cyclictype */ 
            );
            /**Returns   @brief 
                        the left slope.
                     

             
                    
                        This is only used when @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType@endlink 
                        is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlopeLeft
            (
            );
            /**Returns   @brief 
                        the right slope.
                     

             
                    
                        This is only used when @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicType@endlink 
                        is set to @link NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone NXOpen::Fields::ProfileSolverOptionsBuilder::CyclicTypeNone@endlink 
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlopeRight
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
