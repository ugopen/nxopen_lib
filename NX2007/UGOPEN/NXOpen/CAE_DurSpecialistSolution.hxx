#ifndef NXOpen_CAE_DURSPECIALISTSOLUTION_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTSOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DataSource.hxx>
#include <NXOpen/CAE_DurSpecialistEvent.hxx>
#include <NXOpen/CAE_DurSpecialistResultDataSource.hxx>
#include <NXOpen/CAE_DurSpecialistResultTableSetup.hxx>
#include <NXOpen/CAE_DurSpecialistResultTableToggles.hxx>
#include <NXOpen/CAE_DurSpecialistSimulationObjectTable.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistSolution;
    }
    namespace CAE
    {
        class DataSource;
    }
    namespace CAE
    {
        class DurSpecialistEvent;
    }
    namespace CAE
    {
        class DurSpecialistFunctionDefinitionCollection;
    }
    namespace CAE
    {
        class DurSpecialistLocalDefinitionCollection;
    }
    namespace CAE
    {
        class DurSpecialistResultDataSource;
    }
    namespace CAE
    {
        class DurSpecialistResultTableSetup;
    }
    namespace CAE
    {
        class DurSpecialistResultTableToggles;
    }
    namespace CAE
    {
        class DurSpecialistSimulationObjectTable;
    }
    class NXObject;
    namespace CAE
    {
        class _DurSpecialistSolutionBuilder;
        class DurSpecialistSolutionImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistSolution NXOpen::CAE::DurSpecialistSolution@endlink .  <br> To create or edit an instance of this class, use @link NXOpen::CAE::DurSpecialistSolutionBuilder  NXOpen::CAE::DurSpecialistSolutionBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistSolution : public NXOpen::NXObject
        {
            /** Solve Options */
            public: enum SolveOption
            {
                SolveOptionSolve/** write solver input file and launch solve */,
                SolveOptionWriteSolverInputFile/** write solver input file only*/,
                SolveOptionSolveInputFile/** launch solve with existing solver input file*/
            };

            private: DurSpecialistSolutionImpl * m_durspecialistsolution_impl;
            private: friend class  _DurSpecialistSolutionBuilder;
            protected: DurSpecialistSolution();
            public: ~DurSpecialistSolution();
            /** Rename the Solution. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void Rename
            (
                const NXString & title /** new solution name */
            );
            /** Rename the Solution. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void Rename
            (
                const char * title /** new solution name */
            );
            /** Clone the Solution.  @return  Cloned Solution
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistSolution * CloneSolution
            (
            );
            /** Activate the Solution. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void Activate
            (
                bool activityStatus /** The Activity Status flag*/
            );
            /** Solve the Solution. This function is deprecated. Use method Commit of @link NXOpen::CAE::DurSpecialistSolveBuilder NXOpen::CAE::DurSpecialistSolveBuilder@endlink  instead. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void Solve
            (
                NXOpen::CAE::DurSpecialistSolution::SolveOption solveOption /** solve option */,
                bool check /** Check the Solution before solving */
            );
            /** Check the Solution. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void Check
            (
            );
            /** Opens the Information window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void InformationWindow
            (
            );
            /**Returns  the Solver Parameters name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SolverParameters
            (
            );
            /**Sets  the Solver Parameters name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSolverParameters
            (
                const NXString & solverParameters /** solverparameters */ 
            );
            /**Sets  the Solver Parameters name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetSolverParameters
            (
                const char * solverParameters /** solverparameters */ 
            );
            /** Returns the description  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDescription
            (
            );
            /** Sets the description 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const std::vector<NXString> & description /** description */ 
            );
            /** Export the result table to Excel 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void ExportResultsCsv
            (
                const NXString & resultFileName /** resultfilename */ ,
                const NXString & exportFileName /** exportfilename */ ,
                NXOpen::CAE::DurSpecialistResultTableSetup * setup /** setup */ 
            );
            /** Export the result table to Excel 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void ExportResultsCsv
            (
                const char * resultFileName /** resultfilename */ ,
                const char * exportFileName /** exportfilename */ ,
                NXOpen::CAE::DurSpecialistResultTableSetup * setup /** setup */ 
            );
            /** Export the result table to Excel 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void ExportCsv
            (
                const NXString & resultFileName /** resultfilename */ ,
                const NXString & exportFileName /** exportfilename */ ,
                NXOpen::CAE::DurSpecialistResultTableToggles * toggles /** toggles */ 
            );
            /** Export the result table to Excel 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void ExportCsv
            (
                const char * resultFileName /** resultfilename */ ,
                const char * exportFileName /** exportfilename */ ,
                NXOpen::CAE::DurSpecialistResultTableToggles * toggles /** toggles */ 
            );
            /**Returns  the simulation objects 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistSimulationObjectTable * SimulationObjects
            (
            );
            /** Sets solution event 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetEvent
            (
                NXOpen::CAE::DurSpecialistEvent * eventObject /** Solution Event*/
            );
            /** Gets or generates a result data source @link NXOpen::CAE::DurSpecialistResultDataSource NXOpen::CAE::DurSpecialistResultDataSource@endlink . 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistResultDataSource * ResultDataSource
            (
                bool* newObject /** If true, use @link CAE::DurSpecialistSolution::CleanOutOfDateResultDataSources CAE::DurSpecialistSolution::CleanOutOfDateResultDataSources@endlink  to remove out-of-date result data sources. */
            );
            /** Deletes out-of-date result data sources @link NXOpen::CAE::DurSpecialistResultDataSource NXOpen::CAE::DurSpecialistResultDataSource@endlink . 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void CleanOutOfDateResultDataSources
            (
            );
            /** Sets a given apppp data source @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink  to the solution. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetResult
            (
                NXOpen::CAE::DataSource * dataSource /** datasource */ 
            );


            /** Returns the @link NXOpen::CAE::DurSpecialistLocalDefinitionCollection NXOpen::CAE::DurSpecialistLocalDefinitionCollection@endlink  belonging to this 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistLocalDefinitionCollection *LocalDefinitions();
            /** Returns the @link NXOpen::CAE::DurSpecialistFunctionDefinitionCollection NXOpen::CAE::DurSpecialistFunctionDefinitionCollection@endlink  belonging to this 
             <br>  Created in NX1872.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistFunctionDefinitionCollection *FunctionDefinitions();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
