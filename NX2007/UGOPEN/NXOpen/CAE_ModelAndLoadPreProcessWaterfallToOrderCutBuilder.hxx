#ifndef NXOpen_CAE_MODELANDLOADPREPROCESSWATERFALLTOORDERCUTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELANDLOADPREPROCESSWATERFALLTOORDERCUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelAndLoadPreProcessWaterfallToOrderCutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_ModelAndLoadPreProcessOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelAndLoadPreProcessWaterfallToOrderCutBuilder;
    }
    namespace CAE
    {
        class ModelAndLoadPreProcessOperationBuilder;
    }
    class Expression;
    namespace CAE
    {
        class _ModelAndLoadPreProcessWaterfallToOrderCutBuilderBuilder;
        class ModelAndLoadPreProcessWaterfallToOrderCutBuilderImpl;
        /**
            Builds a @link NXOpen::CAE::ModelAndLoadPreProcessWaterfallToOrderCutBuilder NXOpen::CAE::ModelAndLoadPreProcessWaterfallToOrderCutBuilder@endlink  object which 
            represets an operation.
             <br> There is no kf creator for this.  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelAndLoadPreProcessWaterfallToOrderCutBuilder : public NXOpen::CAE::ModelAndLoadPreProcessOperationBuilder
        {
            private: ModelAndLoadPreProcessWaterfallToOrderCutBuilderImpl * m_modelandloadpreprocesswaterfalltoordercutbuilder_impl;
            private: friend class  _ModelAndLoadPreProcessWaterfallToOrderCutBuilderBuilder;
            protected: ModelAndLoadPreProcessWaterfallToOrderCutBuilder();
            public: ~ModelAndLoadPreProcessWaterfallToOrderCutBuilder();
            /**Returns  the Order Start 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double OrderStart
            (
            );
            /**Sets  the Order Start 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOrderStart
            (
                double orderStart /** orderstart */ 
            );
            /**Returns  the Order End 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double OrderEnd
            (
            );
            /**Sets  the Order End 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOrderEnd
            (
                double orderEnd /** orderend */ 
            );
            /**Returns  the Order Step 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double OrderStep
            (
            );
            /**Sets  the Order Step 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOrderStep
            (
                double orderStep /** orderstep */ 
            );
            /**Returns  the Method 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int Method
            (
            );
            /**Sets  the Method 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMethod
            (
                int method /** method */ 
            );
            /**Returns  the Order Bandwidth 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double OrderBandwidth
            (
            );
            /**Sets  the Order Bandwidth 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOrderBandwidth
            (
                double orderBandwidth /** orderbandwidth */ 
            );
            /**Returns  the Percentage Order 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double PercentageOrder
            (
            );
            /**Sets  the Percentage Order 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPercentageOrder
            (
                double percentage /** percentage */ 
            );
            /**Returns  the Spectral line's Number of Frequencies 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfFrequencies
            (
            );
            /**Sets  the Spectral line's Number of Frequencies 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNumberOfFrequencies
            (
                int numberOfFrequencies /** numberoffrequencies */ 
            );
            /**Returns  the Frequency Bandwidth 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrequencyBandwidth
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
