#ifndef NXOpen_JOIN_FACEINTERSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_FACEINTERSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_FaceIntersectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class FaceIntersectionBuilder;
    }
    class Builder;
    class Expression;
    class ScCollector;
    class Section;
    namespace Join
    {
        class _FaceIntersectionBuilderBuilder;
        class FaceIntersectionBuilderImpl;
        /** Represents a FaceIntersectionBuilder class  <br> To create a new instance of this class, use @link NXOpen::Join::JoinManager::CreateFaceIntersectionBuilder  NXOpen::Join::JoinManager::CreateFaceIntersectionBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  FaceIntersectionBuilder : public NXOpen::Builder
        {
            private: FaceIntersectionBuilderImpl * m_faceintersectionbuilder_impl;
            private: friend class  _FaceIntersectionBuilderBuilder;
            protected: FaceIntersectionBuilder();
            public: ~FaceIntersectionBuilder();
            /**Returns  the primary selected faces 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::ScCollector * FaceCollector1
            (
            );
            /**Returns  the secondary selected faces 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::ScCollector * FaceCollector2
            (
            );
            /**Returns  the primary selected edges 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * EdgeSection1
            (
            );
            /**Returns  the secondary selected edges 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Section * EdgeSection2
            (
            );
            /**Returns  the primary extension distance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Expression * ExtensionDistance1
            (
            );
            /**Returns  the secondary extension distance 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Expression * ExtensionDistance2
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
