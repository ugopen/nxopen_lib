#ifndef NXOpen_CAE_DURSPECIALISTDATASOURCES_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTDATASOURCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistDataSources.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistDataSource.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistDataSources;
    }
    namespace CAE
    {
        class DurSpecialistDataSource;
    }
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        class _DurSpecialistDataSourcesBuilder;
        class DurSpecialistDataSourcesImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistDataSources NXOpen::CAE::DurSpecialistDataSources@endlink  
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistDataSources : public NXOpen::TaggedObject
        {
            /**  @brief the unit system. 

              */
            public: enum UnitSystem
            {
                UnitSystemImplicit/** use from file */,
                UnitSystemMillinewtonMillimeter/** mN mm kg */,
                UnitSystemNewtonMeter/** N m kg */,
                UnitSystemNewtonMillimeter/** N mm tonne */,
                UnitSystemCentinewtonCentimeter/** cN cm kg */,
                UnitSystemKgfMeter/** kgf m kgf-s^2/m */,
                UnitSystemKgfMillimeter/** kgf mm kgf-s^2/mm */,
                UnitSystemLbfFoot/** lbf ft slug */,
                UnitSystemLbfInch/** lbf in lbf-s^2/in */,
                UnitSystemPoundalFoot/** poundal ft lbm */
            };

            /**  @brief the temperature unit system. 

              */
            public: enum TemperatureUnitSystem
            {
                TemperatureUnitSystemImplicit/** use from file */,
                TemperatureUnitSystemCelsius/** Celsius */,
                TemperatureUnitSystemFahrenheit/** Fahrenheit */,
                TemperatureUnitSystemKelvin/** Kelvin */,
                TemperatureUnitSystemRankine/** Rankine */
            };

            /**  @brief supported file formats. 

              */
            public: enum FileFormat
            {
                FileFormatNastranResult/** nastran result */ ,
                FileFormatTestLab/** test lab */ ,
                FileFormatUniversalFile/** universal file */ ,
                FileFormatMotionResult/** motion result */ ,
                FileFormatSamcefResult/** samcef result */ ,
                FileFormatAbaqusResult/** abaqus result */ ,
                FileFormatTecware/** tecware */ ,
                FileFormatAnsysResult/** ansys result */ ,
                FileFormatSCHDF5File/** schdf5file */ ,
                FileFormatSCD5File/** scd5file */ 
            };

            /** Represents the Plot(XY) type */
            public: enum XyPlotType
            {
                XyPlotTypePlot2D/** 2D plot */,
                XyPlotTypePlot2DInStack/** 2D plot in stacked sequence */,
                XyPlotTypePlot2DOverlay/** 2D plot overlay*/
            };

            private: DurSpecialistDataSourcesImpl * m_durspecialistdatasources_impl;
            private: friend class  _DurSpecialistDataSourcesBuilder;
            protected: DurSpecialistDataSources();
            public: ~DurSpecialistDataSources();
            /**  @brief Add a file. 

               @return  the index of the added file 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: int AddDataSource
            (
                const NXString & fileName /** name of the file to be added */,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat driver /** driver */ 
            );
            /**  @brief Add a file. 

               @return  the index of the added file 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            int AddDataSource
            (
                const char * fileName /** name of the file to be added */,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat driver /** driver */ 
            );
            /**  @brief Add a solution. 

               @return  the index of the added solution 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: int AddSolution
            (
                NXOpen::CAE::SimSolution * sol /** the solution to be added */
            );
            /**  @brief Replace a data source with a solution. 

              
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void ReplaceDataSourceWithSolution
            (
                int fileIndex /** starts with 0 */,
                NXOpen::CAE::SimSolution * sol /** the solution */
            );
            /**  @brief Remove a file. 

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void RemoveDataSource
            (
                int fileIndex /** starts with 0 */
            );
            /**  @brief Get unit system of a data source file. 

               @return  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistDataSources::UnitSystem GetDataSourceUnitSystem
            (
                int fileIndex /** starts with 0 */
            );
            /**  @brief Edit unit system of a data source file. 

              
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDataSourceUnitSystem
            (
                int fileIndex /** starts with 0 */,
                NXOpen::CAE::DurSpecialistDataSources::UnitSystem unitSystem /** unitsystem */ 
            );
            /**  @brief Opens the Information window. 

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void InformationWindow
            (
                int fileIndex /** starts with 0 */
            );
            /**  @brief Plots the load histories 

              
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void PlotLoadHistories
            (
                int fileIndex /** starts with 0 */,
                const std::vector<int> & loadHistoriesIndexes /** Load history indexes, starts with 0 */,
                int deviceIndex /** deviceindex */ ,
                int viewIndex /** viewindex */ ,
                NXOpen::CAE::DurSpecialistDataSources::XyPlotType plotType /** plottype */ 
            );
            /**  @brief Swap the position of the two given @link NXOpen::CAE::DurSpecialistDataSource NXOpen::CAE::DurSpecialistDataSource@endlink  objects. 

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SwapDataSource
            (
                NXOpen::CAE::DurSpecialistDataSource * dataSource1 /** The first DataSource object */,
                NXOpen::CAE::DurSpecialistDataSource * dataSource2 /** The second DataSource object */
            );
            /**  @brief Set the channels / subcases activity for load histories or finite element results  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetChannelsActivity
            (
                int fileIndex /** starts with 0 */,
                const std::vector<int> & loadHistoryIndices /** Load history or subcase indices starting with 0 */,
                bool activity /** The activity to be set */
            );
            /**  @brief Copy the transient load status from the source @link NXOpen::CAE::DurSpecialistDataSource NXOpen::CAE::DurSpecialistDataSource@endlink  object to the destinated.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void CopyTransientLoadStatus
            (
                NXOpen::CAE::DurSpecialistDataSource * dataSourceSrc /** The source DataSource object */,
                NXOpen::CAE::DurSpecialistDataSource * dataSourceDes /** The destination DataSource object */
            );
            /**  @brief Get nth data source object @link NXOpen::CAE::DurSpecialistDataSource NXOpen::CAE::DurSpecialistDataSource@endlink .  

               @return  The source DataSource object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistDataSource * GetNthDataSource
            (
                int index /** The index of the DataSource in the DataSources array starting with 0 */
            );
            /**  @brief Get temperature unit system of a data source file. 

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistDataSources::TemperatureUnitSystem GetDataSourceTemperatureUnitSystem
            (
                int fileIndex /** starts with 0 */
            );
            /**  @brief Edit temperature unit system of a data source file. 

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDataSourceTemperatureUnitSystem
            (
                int fileIndex /** starts with 0 */,
                NXOpen::CAE::DurSpecialistDataSources::TemperatureUnitSystem unitSystem /** unitsystem */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
