#ifndef NXOpen_DIAGRAMMING_TITLEBLOCKCELLBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_TITLEBLOCKCELLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_TitleBlockCellBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class TitleBlockCellBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Diagramming
    {
        class _TitleBlockCellBuilderBuilder;
        class TitleBlockCellBuilderImpl;
        /**
            Represents a builder to edit @link NXOpen::Diagramming::TitleBlock NXOpen::Diagramming::TitleBlock@endlink 's cell 
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  TitleBlockCellBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: TitleBlockCellBuilderImpl * m_titleblockcellbuilder_impl;
            private: friend class  _TitleBlockCellBuilderBuilder;
            protected: TitleBlockCellBuilder();
            public: ~TitleBlockCellBuilder();
            /**Returns  the lock status 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool Lock
            (
            );
            /**Sets  the lock status 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLock
            (
                bool lockStatus /** lockstatus */ 
            );
            /**Returns  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );
            /**Sets  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLabel
            (
                const NXString & label /** label */ 
            );
            /**Sets  the cell label 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetLabel
            (
                const char * label /** label */ 
            );
            /**Returns  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Value
            (
            );
            /**Sets  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetValue
            (
                const NXString & text /** text */ 
            );
            /**Sets  the editable text of the cell 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetValue
            (
                const char * text /** text */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
