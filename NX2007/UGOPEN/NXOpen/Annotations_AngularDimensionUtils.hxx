#ifndef NXOpen_ANNOTATIONS_ANGULARDIMENSIONUTILS_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ANGULARDIMENSIONUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_AngularDimensionUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class AngularDimensionUtils;
    }
    class Session;
    namespace Annotations
    {
        class Dimension;
    }
    namespace Annotations
    {
        class AngularDimensionUtilsImpl;

        /// \cond NX_NO_DOC 
        /** This class is a utility class containing functions for Angular Dimension utilities.  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  AngularDimensionUtils
        {
            private: AngularDimensionUtilsImpl * m_angulardimensionutils_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AngularDimensionUtils(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AngularDimensionUtils* theAngularDimensionUtils;
            /** Returns the AngularDimensionUtils object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AngularDimensionUtils* GetAngularDimensionUtils(NXOpen::Session *owner);
            public: ~AngularDimensionUtils();

            /// \cond NX_NO_DOC 
            /** Infer angular dimension quadrant change from location.
                        For minor angle dimensions, the result will either be the
                        current dimension or its supplement. For major angle dimensions, the
                        result will either be the current angle dimension or its explement.
                        NOTE: The input dimension is modified to reflect the correct result.  @return  Result changed status 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: bool InferQuadrantAngleFromLocation
            (
                NXOpen::Annotations::Dimension * dimension /** dimension */ ,
                const NXOpen::Point3d & location /** Quadrant location in dimension entity space */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Return the flag for allowing a change in dimension origin to determine the supplement of an angle.  @return  AllowSupplementaryAngle status 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetAllowSupplementaryAngle
            (
                NXOpen::Annotations::Dimension * dimension /** dimension */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set the flag for allowing a change in dimension origin to determine the supplement of an angle. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetAllowSupplementaryAngle
            (
                NXOpen::Annotations::Dimension * dimension /** dimension */ ,
                bool allowSupplementaryAngle /** AllowSupplementaryAngle status */
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
