#ifndef NXOpen_CAE_MESHSLICERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHSLICERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshSlicerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_MeshSlicingData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MeshSlicerBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CaeGroup;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class MeshSlicingData;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class _MeshSlicerBuilderBuilder;
        class MeshSlicerBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::MeshSlicerBuilder NXOpen::CAE::MeshSlicerBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateMeshSlicerBuilder  NXOpen::CAE::NodeElementManager::CreateMeshSlicerBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MeshSlicerBuilder : public NXOpen::Builder
        {
            private: MeshSlicerBuilderImpl * m_meshslicerbuilder_impl;
            private: friend class  _MeshSlicerBuilderBuilder;
            protected: MeshSlicerBuilder();
            public: ~MeshSlicerBuilder();

            /// \cond NX_NO_DOC 
            /** Creates an object of MeshSlicingData. Create this object before using MeshSlicer
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshSlicingData * CreateMeshSlicingDataObject
            (
                NXOpen::CAE::MeshSlicingData::Type slicingType /** slicingtype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the property table associated with the builder. 
                        The property table contains the parameters needed for the generation
                        of the mesh.  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Slices meshes in the model
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void ProcessMeshSlicer
            (
                NXOpen::CAE::MeshSlicingData * meshSlicingDataObj /** meshslicingdataobj */ ,
                const std::vector<NXOpen::CAE::Mesh *> & meshes /** meshes */ ,
                std::vector<int> & nbSlicesPerMesh /** nbslicespermesh */ ,
                std::vector<int> & sliceLayers /** slicelayers */ ,
                std::vector<NXOpen::CAE::CaeGroup *> & sliceElements /** sliceelements */ ,
                std::vector<NXOpen::CAE::CaeGroup *> & sliceTopFaces /** slicetopfaces */ ,
                std::vector<NXOpen::CAE::CaeGroup *> & sliceBotFaces /** slicebotfaces */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
