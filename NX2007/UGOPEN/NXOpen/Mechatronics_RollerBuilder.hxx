#ifndef NXOpen_MECHATRONICS_ROLLERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_ROLLERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_RollerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class RollerBuilder;
    }
    class Builder;
    class Direction;
    class NXObject;
    class SelectNXObject;
    namespace Mechatronics
    {
        class _RollerBuilderBuilder;
        class RollerBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::Roller NXOpen::Mechatronics::Roller@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::RollerCollection::CreateRollerBuilder  NXOpen::Mechatronics::RollerCollection::CreateRollerBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  RollerBuilder : public NXOpen::Builder
        {
            /** the roller types. */
            public: enum RollerTypes
            {
                RollerTypesWinding/** winding type */,
                RollerTypesSupport/** support type */
            };

            private: RollerBuilderImpl * m_rollerbuilder_impl;
            private: friend class  _RollerBuilderBuilder;
            protected: RollerBuilder();
            public: ~RollerBuilder();
            /**Returns  the cylinder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObject * Cylinder
            (
            );
            /** Set the cylinder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCylinder
            (
                NXOpen::NXObject * cylinder /** cylinder */ 
            );
            /**Returns  the axis vector which is tangent to the connected curve at the selected point 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Direction * AxisVector
            (
            );
            /**Sets  the axis vector which is tangent to the connected curve at the selected point 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAxisVector
            (
                NXOpen::Direction * axisVector /** axisvector */ 
            );
            /**Returns  the roller type. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::RollerBuilder::RollerTypes RollerType
            (
            );
            /**Sets  the roller type. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetRollerType
            (
                NXOpen::Mechatronics::RollerBuilder::RollerTypes rollerType /** rollertype */ 
            );
            /**Returns  the flexible belt 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObject * FlexibleBelt
            (
            );
            /** Set the flexible belt 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetFlexiblebelt
            (
                NXOpen::NXObject * flexibleBelt /** flexiblebelt */ 
            );
            /**Returns  the flag which indicates whether creates container 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateContainer
            (
            );
            /**Sets  the flag which indicates whether creates container 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCreateContainer
            (
                bool createContainer /** createcontainer */ 
            );
            /**Returns  the name. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
