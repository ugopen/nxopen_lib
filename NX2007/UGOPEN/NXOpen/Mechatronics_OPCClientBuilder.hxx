#ifndef NXOpen_MECHATRONICS_OPCCLIENTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_OPCCLIENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_OPCClientBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_GenericTagInfo.hxx>
#include <NXOpen/Mechatronics_SignalBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class OPCClientBuilder;
    }
    class Builder;
    class Expression;
    namespace Mechatronics
    {
        class GenericTagInfo;
    }
    class Part;
    namespace Mechatronics
    {
        class _OPCClientBuilderBuilder;
        class OPCClientBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::OPCClientBuilder NXOpen::Mechatronics::OPCClientBuilder@endlink   <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  OPCClientBuilder : public NXOpen::Builder
        {
            /** the server option. */
            public: enum ServerOption
            {
                ServerOptionLocal/** local server */,
                ServerOptionRemote/** remote server */,
                ServerOptionInProc/** in proc server */
            };

            /** the data type of OPC item. */
            public: enum TagDataType
            {
                TagDataTypeUnknown/** unknown type */,
                TagDataTypeInteger/** integer type */,
                TagDataTypeFloat/** float   type */,
                TagDataTypeBoolean/** boolean type */
            };

            /** the access right of OPC item. */
            public: enum TagAccess
            {
                TagAccessReadOnly/** read only */ = 1,
                TagAccessWriteOnly/** write only */,
                TagAccessReadWrite/** read and write */
            };

             /** the attribute of OPC item. */
            public:
            struct TagAttribute
            {
                public: /** item Name */NXString TagName;
                public: /** Data Type */NXOpen::Mechatronics::OPCClientBuilder::TagDataType TagType;
                public: /** Access Right */NXOpen::Mechatronics::OPCClientBuilder::TagAccess TagAccess;
                public: TagAttribute() :
                    TagName(),
                    TagType((NXOpen::Mechatronics::OPCClientBuilder::TagDataType)0),
                    TagAccess((NXOpen::Mechatronics::OPCClientBuilder::TagAccess)0)
                {
                }
                /** Constructor for the TagAttribute struct. */ 
                public: TagAttribute(const NXString &tagNameInitial /** item Name */, 
                        NXOpen::Mechatronics::OPCClientBuilder::TagDataType tagTypeInitial /** Data Type */, 
                        NXOpen::Mechatronics::OPCClientBuilder::TagAccess tagAccessInitial /** Access Right */) :
                    TagName(tagNameInitial),
                    TagType(tagTypeInitial),
                    TagAccess(tagAccessInitial)
                {
                }
            };

             /**  @brief  Represents OPCDATag info definition structure.  

              */
            public:
            struct TagInfo
            {
                public: /** PLCTag Name          */NXString Name;
                public: /** IO type              */NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType EIOType;
                public: /** Data type            */NXOpen::Mechatronics::SignalBuilder::DataType EDataType;
                public: TagInfo() :
                    Name(),
                    EIOType((NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType)0),
                    EDataType((NXOpen::Mechatronics::SignalBuilder::DataType)0)
                {
                }
                /** Constructor for the TagInfo struct. */ 
                public: TagInfo(const NXString &nameInitial /** PLCTag Name          */, 
                        NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType eIOTypeInitial /** IO type              */, 
                        NXOpen::Mechatronics::SignalBuilder::DataType eDataTypeInitial /** Data type            */) :
                    Name(nameInitial),
                    EIOType(eIOTypeInitial),
                    EDataType(eDataTypeInitial)
                {
                }
            };

             /**  @brief  Represents Extended OPCDA Tag info definition structure.  

              */
            public:
            struct TagInfoEx
            {
                public: /** PLCTag Name          */NXString Name;
                public: /** IO type              */NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType EIOType;
                public: /** Data type name       */NXString DataTypeName;
                public: TagInfoEx() :
                    Name(),
                    EIOType((NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType)0),
                    DataTypeName()
                {
                }
                /** Constructor for the TagInfoEx struct. */ 
                public: TagInfoEx(const NXString &nameInitial /** PLCTag Name          */, 
                        NXOpen::Mechatronics::SignalBuilder::ExternalSignalIOType eIOTypeInitial /** IO type              */, 
                        const NXString &dataTypeNameInitial /** Data type name       */) :
                    Name(nameInitial),
                    EIOType(eIOTypeInitial),
                    DataTypeName(dataTypeNameInitial)
                {
                }
            };

             /**  @brief  Represents Server information definition structure.  

              */
            public:
            struct ServerInfo
            {
                public: /** server name                   */NXString ProgID;
                public: /** server host name              */NXString HostName;
                public: /** server update time            */double UpdateTime;
                public: /** servertype */ NXOpen::Mechatronics::OPCClientBuilder::ServerOption ServerType;
                public: ServerInfo() :
                    ProgID(),
                    HostName(),
                    UpdateTime(),
                    ServerType((NXOpen::Mechatronics::OPCClientBuilder::ServerOption)0)
                {
                }
                /** Constructor for the ServerInfo struct. */ 
                public: ServerInfo(const NXString &progIDInitial /** server name                   */, 
                        const NXString &hostNameInitial /** server host name              */, 
                        double updateTimeInitial /** server update time            */, 
                        NXOpen::Mechatronics::OPCClientBuilder::ServerOption serverTypeInitial /** servertype */ ) :
                    ProgID(progIDInitial),
                    HostName(hostNameInitial),
                    UpdateTime(updateTimeInitial),
                    ServerType(serverTypeInitial)
                {
                }
            };

            private: OPCClientBuilderImpl * m_opcclientbuilder_impl;
            private: friend class  _OPCClientBuilderBuilder;
            protected: OPCClientBuilder();
            public: ~OPCClientBuilder();
            /**Returns  the server type. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServers Mechatronics::OPCClientBuilder::GetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServers instead.") NXOpen::Mechatronics::OPCClientBuilder::ServerOption ServerType
            (
            );
            /**Sets  the server type. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServers instead.") void SetServerType
            (
                NXOpen::Mechatronics::OPCClientBuilder::ServerOption serverType /** servertype */ 
            );
            /**Returns  the server prog ID. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServers Mechatronics::OPCClientBuilder::GetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServers instead.") NXString ServerProgID
            (
            );
            /**Sets  the server prog ID. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServers instead.") void SetServerProgID
            (
                const NXString & serverProgID /** serverprogid */ 
            );
            /**Sets  the server prog ID. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetServerProgID
            (
                const char * serverProgID /** serverprogid */ 
            );
            /**Returns  the host name. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServers Mechatronics::OPCClientBuilder::GetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServers instead.") NXString HostName
            (
            );
            /**Sets  the host name. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServers instead.") void SetHostName
            (
                const NXString & hostName /** hostname */ 
            );
            /**Sets  the host name. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetHostName
            (
                const char * hostName /** hostname */ 
            );
            /**Returns  the update time. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServers Mechatronics::OPCClientBuilder::GetServers@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServers instead.") NXOpen::Expression * UpdateTime
            (
            );
            /**Returns  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString OpcFileBrowser
            (
            );
            /**Sets  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetOpcFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the opc file browser. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetOpcFileBrowser
            (
                const char * filename /** filename */ 
            );
            /** Delete item from the list. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServerTagsEx instead.") void DeleteTags
            (
            );
            /** Add item to the list. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServerTagsEx instead.") void AddTags
            (
            );
            /** Get the available OPC items. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServerTagsEx instead.") void GetAvailableItems
            (
                std::vector<NXString> & tagName /** tagname */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagDataType> & tagType /** tagtype */ 
            );
            /** Set the available OPC items. 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServerTagsEx instead.") void SetAvailableItems
            (
                const std::vector<NXString> & tagName /** tagname */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagDataType> & tagType /** tagtype */ 
            );
            /** Get the attribute of OPC items 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServerTagsEx instead.") void GetItemAttributes
            (
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagAttribute> & attr /** attr */ 
            );
            /** Set the attribute of OPC items 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServerTagsEx instead.") void SetItemAttributes
            (
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagAttribute> & attr /** attr */ 
            );
            /**  @brief  Gets OPC instance names  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServers Mechatronics::OPCClientBuilder::GetServers@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServers instead.") std::vector<NXString> GetServerNames
            (
            );
            /**  @brief  Sets OPC instance names  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServers Mechatronics::OPCClientBuilder::SetServers@endlink  instead. <br>  

             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServers instead.") void SetServerNames
            (
                std::vector<NXString> & names /** names */ 
            );
            /**  @brief  Gets OPC instance Tags  

               @return  Array of TagInfos 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServerTagsEx instead.") std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> GetServerTags
            (
                const NXString & serverName /** servername */ 
            );
            /**  @brief  Gets OPC instance Tags  

               @return  Array of TagInfos 
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> GetServerTags
            (
                const char * serverName /** servername */ 
            );
            /**  @brief  Gets OPC instance Info  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::GetServerTagsEx instead.") void GetServerInfos
            (
                const NXString & serverName /** servername */ ,
                NXOpen::Part * ownerPart /** ownerpart */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> & tagInfos /** Array of TagInfos */
            );
            /**  @brief  Gets OPC instance Info  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::GetServerTagsEx Mechatronics::OPCClientBuilder::GetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void GetServerInfos
            (
                const char * serverName /** servername */ ,
                NXOpen::Part * ownerPart /** ownerpart */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> & tagInfos /** Array of TagInfos */
            );
            /**  @brief  Gets OPC DA instance information  

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void GetServerTagsEx
            (
                const NXString & serverName /** servername */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfoEx> & tagInfos /** Array of TagInfoExs */
            );
            /**  @brief  Gets OPC DA instance information  

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void GetServerTagsEx
            (
                const char * serverName /** servername */ ,
                std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfoEx> & tagInfos /** Array of TagInfoExs */
            );
            /**  @brief  Sets OPC DA instance information  

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetServerTagsEx
            (
                const NXString & serverName /** servername */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfoEx> & tagInfos /** Array of TagInfoExs */
            );
            /**  @brief  Sets OPC DA instance information  

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetServerTagsEx
            (
                const char * serverName /** servername */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfoEx> & tagInfos /** Array of TagInfoExs */
            );
            /**  @brief  Sets OPC instance Tags  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Mechatronics::OPCClientBuilder::SetServerTagsEx instead.") void SetServerInfos
            (
                const NXString & serverName /** servername */ ,
                NXOpen::Part * ownerPart /** ownerpart */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> & tagInfos /** Array of TagInfos */
            );
            /**  @brief  Sets OPC instance Tags  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Mechatronics::OPCClientBuilder::SetServerTagsEx Mechatronics::OPCClientBuilder::SetServerTagsEx@endlink  instead. <br>  

             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetServerInfos
            (
                const char * serverName /** servername */ ,
                NXOpen::Part * ownerPart /** ownerpart */ ,
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::TagInfo> & tagInfos /** Array of TagInfos */
            );
            /**Returns   @brief  the selected configuration name  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SelectedConfigurationName
            (
            );
            /**Sets   @brief  the selected configuration name  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetSelectedConfigurationName
            (
                const NXString & configurationName /** configurationname */ 
            );
            /**Sets   @brief  the selected configuration name  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetSelectedConfigurationName
            (
                const char * configurationName /** configurationname */ 
            );
            /**Returns   @brief  the selected configuration part  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * SelectedConfigurationPart
            (
            );
            /**Sets   @brief  the selected configuration part  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetSelectedConfigurationPart
            (
                NXOpen::Part * ownerPart /** ownerpart */ 
            );
            /**  @brief  Gets OPC DA instance servers  

               @return  Array of ServerInfos 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: std::vector<NXOpen::Mechatronics::OPCClientBuilder::ServerInfo> GetServers
            (
            );
            /**  @brief  Sets OPC DA instance servers  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetServers
            (
                const std::vector<NXOpen::Mechatronics::OPCClientBuilder::ServerInfo> & serverInfos /** Array of ServerInfos */
            );
            /**  @brief  Gets server tags.  

              
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void GetTags
            (
                const NXString & serverName /** servername */ ,
                std::vector<NXOpen::Mechatronics::GenericTagInfo *> & tagInfos /** Array of tag */
            );
            /**  @brief  Gets server tags.  

              
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void GetTags
            (
                const char * serverName /** servername */ ,
                std::vector<NXOpen::Mechatronics::GenericTagInfo *> & tagInfos /** Array of tag */
            );
            /**  @brief  Sets server tags.  

              
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetTags
            (
                const NXString & serverName /** servername */ ,
                const std::vector<NXOpen::Mechatronics::GenericTagInfo *> & tagInfos /** Array of tag data */
            );
            /**  @brief  Sets server tags.  

              
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetTags
            (
                const char * serverName /** servername */ ,
                const std::vector<NXOpen::Mechatronics::GenericTagInfo *> & tagInfos /** Array of tag data */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
