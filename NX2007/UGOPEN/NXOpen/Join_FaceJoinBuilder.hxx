#ifndef NXOpen_JOIN_FACEJOINBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_FACEJOINBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_FaceJoinBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Join_JoinBuilder.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class FaceJoinBuilder;
    }
    namespace Join
    {
        class JoinBuilder;
    }
    class ScCollector;
    namespace Join
    {
        class _FaceJoinBuilderBuilder;
        class FaceJoinBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link NXOpen::Join::FaceJoin NXOpen::Join::FaceJoin@endlink  builder.
             <br> To create a new instance of this class, use @link NXOpen::Join::JoinManager::CreateFaceJoinBuilder  NXOpen::Join::JoinManager::CreateFaceJoinBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  FaceJoinBuilder : public NXOpen::Join::JoinBuilder
        {
            private: FaceJoinBuilderImpl * m_facejoinbuilder_impl;
            private: friend class  _FaceJoinBuilderBuilder;
            protected: FaceJoinBuilder();
            public: ~FaceJoinBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the selected faces 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::ScCollector * FaceCollector
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
