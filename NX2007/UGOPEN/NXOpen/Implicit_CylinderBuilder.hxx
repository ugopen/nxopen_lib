#ifndef NXOpen_IMPLICIT_CYLINDERBUILDER_HXX_INCLUDED
#define NXOpen_IMPLICIT_CYLINDERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Implicit_CylinderBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Implicit_OperationBuilder.hxx>
#include <NXOpen/libnxopencpp_implicit_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Implicit
    {
        class CylinderBuilder;
    }
    class CartesianCoordinateSystem;
    class Expression;
    namespace Implicit
    {
        class OperationBuilder;
    }
    namespace Implicit
    {
        class _CylinderBuilderBuilder;
        class CylinderBuilderImpl;
        /** 
            Represents a Implicit.CylinderBuilder.
            It will create a cylinder inside the Implicit task environment.
             <br> To create a new instance of this class, use @link NXOpen::Implicit::ImplicitOperationCollection::CreateCylinderBuilder  NXOpen::Implicit::ImplicitOperationCollection::CreateCylinderBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Associative </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        Diameter.Value </term> <description> 
         
        50 (millimeters part), 2 (inches part) </description> </item> 

        <item><term> 
         
        Height.Value </term> <description> 
         
        100 (millimeters part), 4 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_IMPLICITEXPORT  CylinderBuilder : public NXOpen::Implicit::OperationBuilder
        {
            private: CylinderBuilderImpl * m_cylinderbuilder_impl;
            private: friend class  _CylinderBuilderBuilder;
            protected: CylinderBuilder();
            public: ~CylinderBuilder();
            /**Returns  the origin Point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CartesianCoordinateSystem * CenterAndOrientation
            (
            );
            /**Sets  the origin Point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_implicit (" NX Implicit Modeling") */
            public: void SetCenterAndOrientation
            (
                NXOpen::CartesianCoordinateSystem * csys /** csys */ 
            );
            /**Returns  the cylinder diameter 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Diameter
            (
            );
            /**Returns  the height 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Height
            (
            );
            /**Returns  the option to keep the cylinder associative with the specified Center And Orientation.
                        this does not apply to selection methods Dynamic, Inferred, Absolute CSYS, and CSYS of Current View.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the option to keep the cylinder associative with the specified Center And Orientation.
                        this does not apply to selection methods Dynamic, Inferred, Absolute CSYS, and CSYS of Current View.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_implicit (" NX Implicit Modeling") */
            public: void SetAssociative
            (
                bool associativeCenter /** associativecenter */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
