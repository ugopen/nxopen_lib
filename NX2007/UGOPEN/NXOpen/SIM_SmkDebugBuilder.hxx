#ifndef NXOpen_SIM_SMKDEBUGBUILDER_HXX_INCLUDED
#define NXOpen_SIM_SMKDEBUGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_SmkDebugBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class SmkDebugBuilder;
    }
    class Builder;
    namespace SIM
    {
        class _SmkDebugBuilderBuilder;
        class SmkDebugBuilderImpl;
        /**
            Represents a @link SIM::SmkDebugBuilder SIM::SmkDebugBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::SIM::KinematicConfigurator::CreateSmkDebugBuilder  NXOpen::SIM::KinematicConfigurator::CreateSmkDebugBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  SmkDebugBuilder : public NXOpen::Builder
        {
            /** Represents the dump type */
            public: enum DumpType
            {
                DumpTypeNone/** none */ ,
                DumpTypeMachineKit/** machine kit */ 
            };

            /** The output type */
            public: enum OutputType
            {
                OutputTypeSyslog/** Output to syslog */,
                OutputTypeListingWindow/** Output to listing window */,
                OutputTypeAutotest/** Output to autotest */,
                OutputTypeToFile/** Output to file */
            };

            private: SmkDebugBuilderImpl * m_smkdebugbuilder_impl;
            private: friend class  _SmkDebugBuilderBuilder;
            protected: SmkDebugBuilder();
            public: ~SmkDebugBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::SmkDebugBuilder::OutputType Output
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOutput
            (
                NXOpen::SIM::SmkDebugBuilder::OutputType type /** The output type*/
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the dump 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::SmkDebugBuilder::DumpType Dump
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the dump 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDump
            (
                NXOpen::SIM::SmkDebugBuilder::DumpType type /** The dump type*/
            );

            /// \endcond 
            /**Returns  the part folder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PartFolder
            (
            );
            /**Sets  the part folder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetPartFolder
            (
                const NXString & partFolder /** The part folder */
            );
            /**Sets  the part folder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetPartFolder
            (
                const char * partFolder /** The part folder */
            );
            /**Returns  the output file 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString OutputFile
            (
            );
            /**Sets  the output file 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetOutputFile
            (
                const NXString & outputFile /** The output file */
            );
            /**Sets  the output file 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetOutputFile
            (
                const char * outputFile /** The output file */
            );
            /** Export geometry information 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void ExportGeometryInformation
            (
                const NXString & partFolder /** The part folder */,
                const NXString & outputFile /** The output file */
            );
            /** Export geometry information 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void ExportGeometryInformation
            (
                const char * partFolder /** The part folder */,
                const char * outputFile /** The output file */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
