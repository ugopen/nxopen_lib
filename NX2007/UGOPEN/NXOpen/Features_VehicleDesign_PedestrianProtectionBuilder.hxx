#ifndef NXOpen_FEATURES_VEHICLEDESIGN_PEDESTRIANPROTECTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_PEDESTRIANPROTECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_PedestrianProtectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class PedestrianProtectionBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class NXColor;
    class Plane;
    class Point;
    class Section;
    class SelectDisplayableObjectList;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _PedestrianProtectionBuilderBuilder;
            class PedestrianProtectionBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::VehicleDesign::PedestrianProtection NXOpen::Features::VehicleDesign::PedestrianProtection@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreatePedestrianProtectionBuilder  NXOpen::Features::VehicleDesignCollection::CreatePedestrianProtectionBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AdultHic1000Angle.Value </term> <description> 
             
            50 </description> </item> 

            <item><term> 
             
            AdultHic1000AngleWindscreen.Value </term> <description> 
             
            60 </description> </item> 

            <item><term> 
             
            AdultHic1000Offset.Value (deprecated) </term> <description> 
             
            95 (millimeters part), 3.7 (inches part) </description> </item> 

            <item><term> 
             
            AdultHic1000OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            AdultHic1000OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            AdultHic1000OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            AdultHic1700Angle.Value </term> <description> 
             
            50 </description> </item> 

            <item><term> 
             
            AdultHic1700Offset.Value (deprecated) </term> <description> 
             
            74 (millimeters part), 2.9 (inches part) </description> </item> 

            <item><term> 
             
            AdultHic1700OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            AdultHic1700OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            AdultHic1700OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            ChildHic1000Angle.Value </term> <description> 
             
            65 </description> </item> 

            <item><term> 
             
            ChildHic1000AngleForwardBle.Value </term> <description> 
             
            20 </description> </item> 

            <item><term> 
             
            ChildHic1000AngleWindscreen.Value </term> <description> 
             
            60 </description> </item> 

            <item><term> 
             
            ChildHic1000Offset.Value (deprecated) </term> <description> 
             
            85 (millimeters part), 3.3 (inches part) </description> </item> 

            <item><term> 
             
            ChildHic1000OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            ChildHic1000OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ChildHic1000OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            ChildHic1700Angle.Value </term> <description> 
             
            65 </description> </item> 

            <item><term> 
             
            ChildHic1700Offset.Value (deprecated) </term> <description> 
             
            68 (millimeters part), 2.7 (inches part) </description> </item> 

            <item><term> 
             
            ChildHic1700OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            ChildHic1700OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ChildHic1700OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            ConstructGeometryFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            ConstructGeometryLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ConstructGeometryWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            CornerBumperAngle.Value </term> <description> 
             
            30 </description> </item> 

            <item><term> 
             
            CornerBumperAngleMarginal.Value </term> <description> 
             
            32 </description> </item> 

            <item><term> 
             
            CreateBasins </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateHeadImpactZones </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateImpactGrid </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateLegImpact </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateNcapCircles </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateNcapSheets </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateOffsetData </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateReferenceLines </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateWrapAroundDistanceLines </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CyclistHic1000Angle.Value </term> <description> 
             
            70 </description> </item> 

            <item><term> 
             
            CyclistHic1000OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            CyclistHic1000OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            CyclistHic1000OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            CyclistHic1700OutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            CyclistHic1700OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            CyclistHic1700OutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            DisplayConstructionGeometry </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            DisplayDeletedGridPoints </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            DisplayInterferenceResult </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EnableMlsStandard </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            FrontRefAngle.Value </term> <description> 
             
            40 </description> </item> 

            <item><term> 
             
            FrontRefAngleMarginal.Value </term> <description> 
             
            38 </description> </item> 

            <item><term> 
             
            FrontRefAngleNcap.Value </term> <description> 
             
            50 </description> </item> 

            <item><term> 
             
            GridAdultFullOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridAdultPartialOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridChildFullOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridChildPartialOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridNCAP1000OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridNCAP1350OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridNCAP1700OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridNCAP650OutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GridOutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            GridOutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            HeadDiameter.Value </term> <description> 
             
            165 (millimeters part), 6.5 (inches part) </description> </item> 

            <item><term> 
             
            HeadDiameterMarginal.Value </term> <description> 
             
            145 (millimeters part), 5.7 (inches part) </description> </item> 

            <item><term> 
             
            HingeDistance.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            InterferenceFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            InterferenceLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            InterferenceWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            LegZonesOutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            LegZonesOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            LegZonesOutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            LowerBumperAngle.Value </term> <description> 
             
            20 </description> </item> 

            <item><term> 
             
            MirrorFaces (deprecated) </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            PopupDistance.Value </term> <description> 
             
            120 (millimeters part), 4.7 (inches part) </description> </item> 

            <item><term> 
             
            ProcessActiveHood </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            RearRefAngle.Value </term> <description> 
             
            75 </description> </item> 

            <item><term> 
             
            ReferenceOutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            ReferenceOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ReferenceOutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            RodDiameter.Value </term> <description> 
             
            50 (millimeters part), 2 (inches part) </description> </item> 

            <item><term> 
             
            SideRefAngle.Value </term> <description> 
             
            45 </description> </item> 

            <item><term> 
             
            SideRefAngleMarginal.Value </term> <description> 
             
            47 </description> </item> 

            <item><term> 
             
            SideRefAngleNcap.Value </term> <description> 
             
            45 </description> </item> 

            <item><term> 
             
            Standard </term> <description> 
             
            NorthAmerican </description> </item> 

            <item><term> 
             
            StepDistance.Value </term> <description> 
             
            50 (millimeters part), 2 (inches part) </description> </item> 

            <item><term> 
             
            TransformMethod </term> <description> 
             
            Translation </description> </item> 

            <item><term> 
             
            UpperBumperAngle.Value </term> <description> 
             
            25 </description> </item> 

            <item><term> 
             
            UseMarginal </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            WadBoundaryValue </term> <description> 
             
            Fourth </description> </item> 

            <item><term> 
             
            WadEndValue </term> <description> 
             
            Sixth </description> </item> 

            <item><term> 
             
            WadOutputFont </term> <description> 
             
            Solid </description> </item> 

            <item><term> 
             
            WadOutputLayer </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            WadOutputWidth </term> <description> 
             
            Two </description> </item> 

            <item><term> 
             
            WadStartValue </term> <description> 
             
            First </description> </item> 

            </list> 

             <br>  Created in NX6.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PedestrianProtectionBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Settings for the type of pedestrian protection impact study */
                public: enum Types
                {
                    TypesHeadAndLegImpact/** Head and leg impact study */,
                    TypesHeadImpact/** Head impact study only */,
                    TypesLegImpact/** Leg impact study only */
                };

                /** Settings for the type of pedestrian protection standard to use in the study */
                public: enum StandardType
                {
                    StandardTypeNorthAmerican/** North american standard */,
                    StandardTypeGtrMls/** GTR standard - Most Lightly Scenario */,
                    StandardTypeEuropean/** European standard */,
                    StandardTypeEuropeanMls/** European standard - Most Lightly Scenario */,
                    StandardTypeJapanese/** Japanese standard */,
                    StandardTypeKorean/** Korean standard */,
                    StandardTypeKoreanMls/** Korean standard - Most Lightly Scenario */,
                    StandardTypeChinese/** Chinese standard */,
                    StandardTypeGtrTangentBasin/** GTR - Tangent Basin */
                };

                /** Settings for the type of pedestrian protection internal bumper line method to use in the study */
                public: enum InternalBumperType
                {
                    InternalBumperTypeBumperTopPlane/** bumper top plane method */,
                    InternalBumperTypeBumperBeamFaces/** bumper beam faces method */
                };

                /** Settings for the start, end and boundary wrap around distance line to create */
                public: enum Wad
                {
                    WadFirst/** First wrap around distance line */,
                    WadSecond/** Second wrap around distance line */,
                    WadThird/** Third wrap around distance line */,
                    WadFourth/** Fourth wrap around distance line */,
                    WadFifth/** Fifth wrap around distance line */,
                    WadSixth/** Sixth wrap around distance line. Not valid for boundary */,
                    WadSeventh/** Seventh wrap around distance line. Not valid for boundary */,
                    WadEighth/** Eighth wrap around distance line. Not valid for boundary */,
                    WadNinth/** Ninth wrap around distance line. Not valid for boundary */,
                    WadTenth/** Tenth wrap around distance line. Not valid for boundary */,
                    WadEleventh/** eleventh wrap around distance line. Not valid for boundary */,
                    WadTwelfth/** twelfth */ 
                };

                /** Settings for font to create the various output with */
                public: enum Font
                {
                    FontDefault/** Default Font */,
                    FontSolid/** Solid Font */,
                    FontDashed/** Dashed Font */,
                    FontPhantom/** Phantom Font */,
                    FontCenterline/** Centerline Font */,
                    FontDotted/** Dotted Font */,
                    FontLongDashed/** LongDashed Font */,
                    FontDottedDashed/** Long Dashed Double Dotted Font */,
                    FontEight/** Long Dashed Dotted Font for OOTB fonts and Undulating Font for shipbuilding fonts */,
                    FontNine/** Long Dashed Triplicate Dotted Font for OOTB fonts and Zigzag Font for shipbuilding fonts */,
                    FontTen/** Long Dashed Double Short Dashed Font for OOTB fonts and Railway Font for shipbuilding fonts */,
                    FontEleven/** eleven */ 
                };

                /** Settings for width to create the various output with */
                public: enum Width
                {
                    WidthDefault/**Default Width*/ = -1,
                    WidthNormal/**normal Width*/,
                    WidthThick/**Thick width*/,
                    WidthThin/**Thin width*/,
                    WidthOne/** one */  = 5,
                    WidthTwo/** two */ ,
                    WidthThree/** three */ ,
                    WidthFour/** four */ ,
                    WidthFive/** five */ ,
                    WidthSix/** six */ ,
                    WidthSeven/** seven */ ,
                    WidthEight/** eight */ ,
                    WidthNine/** nine */ 
                };

                /** Settings for the transform method of pedestrian protection active hood system */
                public: enum TransformMethods
                {
                    TransformMethodsTranslation/** Translation method */,
                    TransformMethodsRotation/** Rotation method */
                };

                private: PedestrianProtectionBuilderImpl * m_pedestrianprotectionbuilder_impl;
                private: friend class  _PedestrianProtectionBuilderBuilder;
                protected: PedestrianProtectionBuilder();
                public: ~PedestrianProtectionBuilder();
                /**Returns  the standard that should be used in the analysis 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardType Standard
                (
                );
                /**Sets  the standard that should be used in the analysis 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStandard
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardType setStandard /** setstandard */ 
                );
                /**Returns  the method that should be used to create the internal bumper reference line 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::InternalBumperType InternalBumperLineMethod
                (
                );
                /**Sets  the method that should be used to create the internal bumper reference line 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInternalBumperLineMethod
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::InternalBumperType bumperMethod /** bumpermethod */ 
                );
                /**Returns  the setting to indicate whether the loading is specified by standard 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: bool UseLoadingSpecifiedByStandard
                (
                );
                /**Sets  the setting to indicate whether the loading is specified by standard 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseLoadingSpecifiedByStandard
                (
                    bool useLoadingSpecifiedByStandard /** useloadingspecifiedbystandard */ 
                );
                /**Returns  the ground plane 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * Plane
                (
                );
                /**Sets  the ground plane 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPlane
                (
                    NXOpen::Plane * plane /** plane */ 
                );
                /**Returns  the bumper plane 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * BumperPlane
                (
                );
                /**Sets  the bumper plane 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBumperPlane
                (
                    NXOpen::Plane * bumperPlane /** bumperplane */ 
                );
                /**Returns  the collector containing the faces of the bonnet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * BonnetTop
                (
                );
                /**Returns  the collector containing the faces of the bonnet that are not to be mirrored 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * BonnetTopNotMirrored
                (
                );
                /**Returns  the collector containing the faces of the windshield 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * Windshield
                (
                );
                /**Returns  the faces and facetted bodies of the bumper beam 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * BumperBeam
                (
                );
                /**Returns  the collector containing the edge of the windshield blackout zone 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * BlackoutZone
                (
                );
                /**Returns  the setting to indicate the blackout zone edge is the windshield edge 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseWindshieldEdge
                (
                );
                /**Sets  the setting to indicate the blackout zone edge is the windshield edge 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseWindshieldEdge
                (
                    bool useWindshieldEdge /** usewindshieldedge */ 
                );
                /**Returns  the collector containing the faces of the roof and seal 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * Roof
                (
                );
                /**Returns  the collector containing the faces of the active hood 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * Hood
                (
                );
                /**Returns  the point about which to rotate the active hood 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * HingePoint
                (
                );
                /**Sets  the point about which to rotate the active hood 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHingePoint
                (
                    NXOpen::Point * hingePoint /** hingepoint */ 
                );
                /**Returns  the reference point of the active hood. At this point the active hood will be rotated
                                about the hinge point so that this point is moved the popup distance in the +Z direction 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * PopupPoint
                (
                );
                /**Sets  the reference point of the active hood. At this point the active hood will be rotated
                                about the hinge point so that this point is moved the popup distance in the +Z direction 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPopupPoint
                (
                    NXOpen::Point * popupPoint /** popuppoint */ 
                );
                /**Returns  the distance to move the reference point of the active hood 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * PopupDistance
                (
                );
                /**Returns  the transform method that should be used in active hood system 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::TransformMethods TransformMethod
                (
                );
                /**Sets  the transform method that should be used in active hood system 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTransformMethod
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::TransformMethods transformMethod /** transformmethod */ 
                );
                /**Returns  the distance to move the reference point of the active hood 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HingeDistance
                (
                );
                /**Returns  the collector containing the faces and facetted bodies of the A-Pillar 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * APillar
                (
                );
                /**Returns  the list of the components to check interference with the impact sheets 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * Component
                (
                );
                /**Returns  the collector containing the faces of the Instrument Panel 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * IpFaces
                (
                );
                /**Returns  the upper leg impact locations.  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * UpperLegPositions
                (
                );
                /**Returns  the setting to indicate if the bonnet, windshield and hood faces should be mirrored
                                before performing the analysis,
                                true they will be mirrored, false they will not be mirrored.  
                 <br>  @deprecated Deprecated in NX9.0.0.  This API is no longer used. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  This API is no longer used.") bool MirrorFaces
                (
                );
                /**Sets  the setting to indicate if the bonnet, windshield and hood faces should be mirrored
                                before performing the analysis,
                                true they will be mirrored, false they will not be mirrored.  
                 <br>  @deprecated Deprecated in NX9.0.0.  This API is no longer used. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  This API is no longer used.") void SetMirrorFaces
                (
                    bool mirrorFaces /** mirrorfaces */ 
                );
                /**Returns  the setting to indicate if the wrap around distance lines should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateWrapAroundDistanceLines
                (
                );
                /**Sets  the setting to indicate if the wrap around distance lines should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateWrapAroundDistanceLines
                (
                    bool wad /** wad */ 
                );
                /**Returns  the setting to indicate if the reference lines should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateReferenceLines
                (
                );
                /**Sets  the setting to indicate if the reference lines should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateReferenceLines
                (
                    bool referenceLines /** referencelines */ 
                );
                /**Returns  the setting to indicate if the adult and child head impact sheets should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateHeadImpactZones
                (
                );
                /**Sets  the setting to indicate if the adult and child head impact sheets should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateHeadImpactZones
                (
                    bool headImpactZones /** headimpactzones */ 
                );
                /**Returns  the setting to indicate if the leg impact curves should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateLegImpact
                (
                );
                /**Sets  the setting to indicate if the leg impact curves should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateLegImpact
                (
                    bool legImpact /** legimpact */ 
                );
                /**Returns  the setting to indicate if the interference curves should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayInterferenceResult
                (
                );
                /**Sets  the setting to indicate if the interference curves should be created, 
                                true they will be created, false they will not be created.  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayInterferenceResult
                (
                    bool displayInterferenceResult /** displayinterferenceresult */ 
                );
                /**Returns  the setting to indicate if the construction geometry should be created, 
                                true they will be created, false they will not be created 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayConstructionGeometry
                (
                );
                /**Sets  the setting to indicate if the construction geometry should be created, 
                                true they will be created, false they will not be created 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayConstructionGeometry
                (
                    bool displayConstructionGeometry /** displayconstructiongeometry */ 
                );
                /**Returns  the setting to indicate if the marginal values should be used when creating the impact zone, 
                                true they will be used, false they will not be used 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseMarginal
                (
                );
                /**Sets  the setting to indicate if the marginal values should be used when creating the impact zone, 
                                true they will be used, false they will not be used 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseMarginal
                (
                    bool useMarginal /** usemarginal */ 
                );
                /**Returns  the setting to indicate if the active hood should be analyzed, 
                                true it will be used, false it will not be used 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ProcessActiveHood
                (
                );
                /**Sets  the setting to indicate if the active hood should be analyzed, 
                                true it will be used, false it will not be used 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetProcessActiveHood
                (
                    bool processActiveHood /** processactivehood */ 
                );
                /**Returns  the setting to indicate if the deleted grid points should be displayed, 
                                true they will be displayed, false they will not be displayed 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayDeletedGridPoints
                (
                );
                /**Sets  the setting to indicate if the deleted grid points should be displayed, 
                                true they will be displayed, false they will not be displayed 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayDeletedGridPoints
                (
                    bool displayDeletedGridPoints /** displaydeletedgridpoints */ 
                );
                /**Returns  the setting to indicate if the impact grid should be created, 
                                true it will be created, false it will not be created 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateImpactGrid
                (
                );
                /**Sets  the setting to indicate if the impact grid should be created, 
                                true it will be created, false it will not be created 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateImpactGrid
                (
                    bool createImpactGrid /** createimpactgrid */ 
                );
                /**Returns  the type of impact study to perform 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Types Type
                (
                );
                /**Sets  the type of impact study to perform 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetType
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Types type /** type */ 
                );
                /**Returns  the distance between sections used in the analysis 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StepDistance
                (
                );
                /**Returns  the distance between rear reference sections used in the analysis 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearReferenceStepDistance
                (
                );
                /**Returns  the setting to indicate if the Most Lightly Scenario Standards should be enabled
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EnableMlsStandard
                (
                );
                /**Sets  the setting to indicate if the Most Lightly Scenario Standards should be enabled
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEnableMlsStandard
                (
                    bool enableMlsStandard /** enablemlsstandard */ 
                );
                /**Returns  the diameter of the headform 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HeadDiameter
                (
                );
                /**Returns  the marginal diameter of the headform 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HeadDiameterMarginal
                (
                );
                /**Returns  the testing rod diameter of the leg impact 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RodDiameter
                (
                );
                /**Returns  the leg impact spreadsheet file 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString LegSpreadsheet
                (
                );
                /**Sets  the leg impact spreadsheet file 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegSpreadsheet
                (
                    const NXString & legSpreadsheet /** legspreadsheet */ 
                );
                /**Sets  the leg impact spreadsheet file 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLegSpreadsheet
                (
                    const char * legSpreadsheet /** legspreadsheet */ 
                );
                /**Returns  the first wrap around distance line to create 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad WadStartValue
                (
                );
                /**Sets  the first wrap around distance line to create 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadStartValue
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad wadstartenum /** wadstartenum */ 
                );
                /**Returns  the last wrap around distance line to create 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad WadEndValue
                (
                );
                /**Sets  the last wrap around distance line to create 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadEndValue
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad wadendenum /** wadendenum */ 
                );
                /**Returns  the wrap around distance line to use as the boundary between the adult and child zones 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad WadBoundaryValue
                (
                );
                /**Sets  the wrap around distance line to use as the boundary between the adult and child zones 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadBoundaryValue
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad wadboundaryenum /** wadboundaryenum */ 
                );
                /**Returns  the wrap around distance line to use as the boundary between the adult and cyclist zones 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad WadAdultCyclistBoundaryValue
                (
                );
                /**Sets  the wrap around distance line to use as the boundary between the adult and cyclist zones 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadAdultCyclistBoundaryValue
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Wad wadadultcyclistboundaryenum /** wadadultcyclistboundaryenum */ 
                );
                /**Returns  the angle that is used to determine the front reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontRefAngle
                (
                );
                /**Returns  the marginal angle that is used to determine the front reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontRefAngleMarginal
                (
                );
                /**Returns  the second marginal angle that is used to determine the front reference line 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontReferenceAngleSecondMarginal
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) angle that is used to determine the front reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontRefAngleNcap
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) marginal angle that is used to determine the front reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontRefAngleNcapMarginal
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) second marginal angle that is used to determine the front reference line 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontReferenceAngleNcapSecondMarginal
                (
                );
                /**Returns  the angle that is used to determine the side reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideRefAngle
                (
                );
                /**Returns  the marginal angle that is used to determine the side reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideRefAngleMarginal
                (
                );
                /**Returns  the second marginal angle that is used to determine the side reference line 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideReferenceAngleSecondMarginal
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) angle that is used to determine the side reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideRefAngleNcap
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) marginal angle that is used to determine the side reference line 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideRefAngleNcapMarginal
                (
                );
                /**Returns  the European NCAP (New Car Assessment Program) second marginal angle that is used to determine the side reference line 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SideReferenceAngleNcapSecondMarginal
                (
                );
                /**Returns  the angle that is used to determine the windshield rear reference line when the
                                @link  NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardType  NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardTypeJapanese NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::StandardTypeJapanese@endlink  
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearRefAngle
                (
                );
                /**Returns  the angle to translate the adult HIC (Head Injury Criterion) 1000 impact sheet and grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AdultHic1000Angle
                (
                );
                /**Returns  the distance to translate the adult HIC (Head Injury Criterion) 1000 impact sheet and grid 
                 <br>  @deprecated Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property.") NXOpen::Expression * AdultHic1000Offset
                (
                );
                /**Returns  the angle to translate the adult HIC (Head Injury Criterion) 1700 impact sheet and grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AdultHic1700Angle
                (
                );
                /**Returns  the distance to translate the adult HIC (Head Injury Criterion) 1700 impact sheet and grid 
                 <br>  @deprecated Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property.") NXOpen::Expression * AdultHic1700Offset
                (
                );
                /**Returns  the angle to translate the child HIC (Head Injury Criterion) 1000 impact sheet and grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ChildHic1000Angle
                (
                );
                /**Returns  the angle to translate the child HIC (Head Injury Criterion) 1000 impact sheet and grid (Forward BLE)
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ChildHic1000AngleForwardBle
                (
                );
                /**Returns  the distance to translate the child HIC (Head Injury Criterion) 1000 impact sheet and grid 
                 <br>  @deprecated Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property.") NXOpen::Expression * ChildHic1000Offset
                (
                );
                /**Returns  the angle to translate the child HIC (Head Injury Criterion) 1700 impact sheet and grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ChildHic1700Angle
                (
                );
                /**Returns  the distance to translate the child HIC (Head Injury Criterion) 1700 impact sheet and grid 
                 <br>  @deprecated Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property. <br>  

                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.0.  The offset value will be retrieved from the physical material property.") NXOpen::Expression * ChildHic1700Offset
                (
                );
                /**Returns  the angle to translate the cyclist HIC (Head Injury Criterion) impact sheet and grid 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CyclistHic1000Angle
                (
                );
                /**Returns  the angle to translate the adult HIC (Head Injury Criterion) impact sheet and grid on windscreen
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AdultHic1000AngleWindscreen
                (
                );
                /**Returns  the angle to translate the child HIC (Head Injury Criterion)  impact sheet and grid on windscreen
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ChildHic1000AngleWindscreen
                (
                );
                /**Returns  the angle that is used to determine the upper limit of the bumper 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * UpperBumperAngle
                (
                );
                /**Returns  the angle that is used to determine the lower limit of the bumper 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * LowerBumperAngle
                (
                );
                /**Returns  the angle that is used to determine the corner of the bumper 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CornerBumperAngle
                (
                );
                /**Returns  the marginal angle that is used to determine the corner of the bumper 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CornerBumperAngleMarginal
                (
                );
                /**Returns  the second marginal angle that is used to determine the corner of the bumper 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CornerBumperAngleSecondMarginal
                (
                );
                /**Returns  the score value is used to check NCAP 650 offset interference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridNcap650OffsetScore
                (
                );
                /**Returns  the score value is used to check NCAP 1000 offset interference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridNcap1000OffsetScore
                (
                );
                /**Returns  the score value is used to check NCAP 1350 offset interference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridNcap1350OffsetScore
                (
                );
                /**Returns  the score value is used to check NCAP 1700 offset interference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridNcap1700OffsetScore
                (
                );
                /**Returns  the score value is used to check NCAP untranslated interference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double GridNcapUntranslatedScore
                (
                );
                /**Returns  the color that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * WadOutputColor
                (
                );
                /**Sets  the color that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font WadOutputFont
                (
                );
                /**Sets  the font that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int WadOutputLayer
                (
                );
                /**Sets  the layer that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width WadOutputWidth
                (
                );
                /**Sets  the line width that will be used for the wrap around distance lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWadOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ReferenceOutputColor
                (
                );
                /**Sets  the color that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferenceOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font ReferenceOutputFont
                (
                );
                /**Sets  the font that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferenceOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int ReferenceOutputLayer
                (
                );
                /**Sets  the layer that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferenceOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width ReferenceOutputWidth
                (
                );
                /**Sets  the line width that will be used for the reference lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferenceOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * AdultHic1000OutputColor
                (
                );
                /**Sets  the color that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1000OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font AdultHic1000OutputFont
                (
                );
                /**Sets  the font that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1000OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int AdultHic1000OutputLayer
                (
                );
                /**Sets  the layer that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1000OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width AdultHic1000OutputWidth
                (
                );
                /**Sets  the line width that will be used for the adult HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1000OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * AdultHic1700OutputColor
                (
                );
                /**Sets  the color that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1700OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font AdultHic1700OutputFont
                (
                );
                /**Sets  the font that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1700OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int AdultHic1700OutputLayer
                (
                );
                /**Sets  the layer that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1700OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width AdultHic1700OutputWidth
                (
                );
                /**Sets  the line width that will be used for the adult HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultHic1700OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ChildHic1000OutputColor
                (
                );
                /**Sets  the color that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1000OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font ChildHic1000OutputFont
                (
                );
                /**Sets  the font that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1000OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int ChildHic1000OutputLayer
                (
                );
                /**Sets  the layer that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1000OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width ChildHic1000OutputWidth
                (
                );
                /**Sets  the line width that will be used for the child HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1000OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ChildHic1700OutputColor
                (
                );
                /**Sets  the color that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1700OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font ChildHic1700OutputFont
                (
                );
                /**Sets  the font that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1700OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int ChildHic1700OutputLayer
                (
                );
                /**Sets  the layer that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1700OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width ChildHic1700OutputWidth
                (
                );
                /**Sets  the line width that will be used for the child HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildHic1700OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * CyclistHic1000OutputColor
                (
                );
                /**Sets  the color that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1000OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font CyclistHic1000OutputFont
                (
                );
                /**Sets  the font that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1000OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int CyclistHic1000OutputLayer
                (
                );
                /**Sets  the layer that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1000OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width CyclistHic1000OutputWidth
                (
                );
                /**Sets  the line width that will be used for the cyclist HIC (Head Injury Criterion) 1000 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1000OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * CyclistHic1700OutputColor
                (
                );
                /**Sets  the color that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1700OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font CyclistHic1700OutputFont
                (
                );
                /**Sets  the font that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1700OutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int CyclistHic1700OutputLayer
                (
                );
                /**Sets  the layer that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1700OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width CyclistHic1700OutputWidth
                (
                );
                /**Sets  the line width that will be used for the cyclist HIC (Head Injury Criterion) 1700 impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistHic1700OutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * LegZonesOutputColor
                (
                );
                /**Sets  the color that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegZonesOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font LegZonesOutputFont
                (
                );
                /**Sets  the font that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegZonesOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int LegZonesOutputLayer
                (
                );
                /**Sets  the layer that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegZonesOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the layer that will be used for the upper leg impact zone 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int UpperLegZonesOutputLayer
                (
                );
                /**Sets  the layer that will be used for the upper leg impact zone 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUpperLegZonesOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the layer that will be used for the leg impact curve 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: int LegImpactCurveOutputLayer
                (
                );
                /**Sets  the layer that will be used for the leg impact curve 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegImpactCurveOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width LegZonesOutputWidth
                (
                );
                /**Sets  the line width that will be used for the leg impact zone lines 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLegZonesOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * InterferenceColor
                (
                );
                /**Sets  the color that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInterferenceColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font InterferenceFont
                (
                );
                /**Sets  the font that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInterferenceFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int InterferenceLayer
                (
                );
                /**Sets  the layer that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInterferenceLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width InterferenceWidth
                (
                );
                /**Sets  the line width that will be used for the interference curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetInterferenceWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ConstructGeometryColor
                (
                );
                /**Sets  the color that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetConstructGeometryColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font ConstructGeometryFont
                (
                );
                /**Sets  the font that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetConstructGeometryFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int ConstructGeometryLayer
                (
                );
                /**Sets  the layer that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetConstructGeometryLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width ConstructGeometryWidth
                (
                );
                /**Sets  the line width that will be used for the various construction curves 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetConstructGeometryWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the passing areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridPassColor
                (
                );
                /**Sets  the color that will be used for the passing areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridPassColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the color that will be used for the warning areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridWarningColor
                (
                );
                /**Sets  the color that will be used for the warning areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridWarningColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the color that will be used for the failing areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridFailColor
                (
                );
                /**Sets  the color that will be used for the failing areas of the NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridFailColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the European NCAP (New Car Assessment Program) grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font GridOutputFont
                (
                );
                /**Sets  the font that will be used for the European NCAP (New Car Assessment Program) grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the line width that will be used for the NCAP (New Car Assessment Program) grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width GridOutputWidth
                (
                );
                /**Sets  the line width that will be used for the NCAP (New Car Assessment Program) grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the layer that will be used for the NCAP (New Car Assessment Program) adult full grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridAdultFullOutputLayer
                (
                );
                /**Sets  the layer that will be used for the NCAP (New Car Assessment Program) adult full grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridAdultFullOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the layer that will be used for the NCAP (New Car Assessment Program) adult partial grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridAdultPartialOutputLayer
                (
                );
                /**Sets  the layer that will be used for the NCAP (New Car Assessment Program) adult partial grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridAdultPartialOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the layer that will be used for the NCAP (New Car Assessment Program) child full grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridChildFullOutputLayer
                (
                );
                /**Sets  the layer that will be used for the NCAP (New Car Assessment Program) child full grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridChildFullOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the layer that will be used for the NCAP (New Car Assessment Program) child partial grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridChildPartialOutputLayer
                (
                );
                /**Sets  the layer that will be used for the NCAP (New Car Assessment Program) child partial grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridChildPartialOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the European NCAP (New Car Assessment Program) 650 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridNCAP650OutputColor
                (
                );
                /**Sets  the color that will be used for the European NCAP (New Car Assessment Program) 650 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP650OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the layer that will be used for the European NCAP (New Car Assessment Program) 650 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridNCAP650OutputLayer
                (
                );
                /**Sets  the layer that will be used for the European NCAP (New Car Assessment Program) 650 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP650OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the European NCAP (New Car Assessment Program) 1000 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridNCAP1000OutputColor
                (
                );
                /**Sets  the color that will be used for the European NCAP (New Car Assessment Program) 1000 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1000OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the layer that will be used for the European NCAP (New Car Assessment Program) 1000 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridNCAP1000OutputLayer
                (
                );
                /**Sets  the layer that will be used for the European NCAP (New Car Assessment Program) 1000 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1000OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the European NCAP (New Car Assessment Program) 1350 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridNCAP1350OutputColor
                (
                );
                /**Sets  the color that will be used for the European NCAP (New Car Assessment Program) 1350 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1350OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the layer that will be used for the European NCAP (New Car Assessment Program) 1350 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridNCAP1350OutputLayer
                (
                );
                /**Sets  the layer that will be used for the European NCAP (New Car Assessment Program) 1350 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1350OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the European NCAP (New Car Assessment Program) 1700 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridNCAP1700OutputColor
                (
                );
                /**Sets  the color that will be used for the European NCAP (New Car Assessment Program) 1700 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1700OutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the layer that will be used for the European NCAP (New Car Assessment Program) 1700 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridNCAP1700OutputLayer
                (
                );
                /**Sets  the layer that will be used for the European NCAP (New Car Assessment Program) 1700 offset grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAP1700OutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the European NCAP (New Car Assessment Program) untranslated grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridNCAPUntranslatedOutputColor
                (
                );
                /**Sets  the color that will be used for the European NCAP (New Car Assessment Program) untranslated grid sheet 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridNCAPUntranslatedOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the layer that will be used for the NCAP (New Car Assessment Program) untranslated grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int GridUntranslatedOutputLayer
                (
                );
                /**Sets  the layer that will be used for the NCAP (New Car Assessment Program) untranslated grid sheet 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridUntranslatedOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the color that will be used for the headform grid points of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridPointsColor
                (
                );
                /**Sets  the color that will be used for the headform grid points of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGridPointsColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the headform blackout zone points color of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * BlackoutPointsColor
                (
                );
                /**Sets  the headform blackout zone points color of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBlackoutPointsColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the color that will be used for the headform deleted points of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * DeletedPointsColor
                (
                );
                /**Sets  the color that will be used for the headform deleted points of the European NCAP (New Car Assessment Program) grid 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDeletedPointsColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the setting to indicate if the basin curves should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : None */
                public: bool CreateBasins
                (
                );
                /**Sets  the setting to indicate if the basin curves should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateBasins
                (
                    bool createBasins /** createbasins */ 
                );
                /**Returns  the setting to indicate if the offset data should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : None */
                public: bool CreateOffsetData
                (
                );
                /**Sets  the setting to indicate if the offset data should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateOffsetData
                (
                    bool createOffsetData /** createoffsetdata */ 
                );
                /**Returns  the setting to indicate if the ncap circles should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : None */
                public: bool CreateNcapCircles
                (
                );
                /**Sets  the setting to indicate if the ncap circles should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateNcapCircles
                (
                    bool createNcapCircles /** createncapcircles */ 
                );
                /**Returns  the setting to indicate if the ncap sheets should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : None */
                public: bool CreateNcapSheets
                (
                );
                /**Sets  the setting to indicate if the ncap sheets should be created 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateNcapSheets
                (
                    bool createNcapSheets /** createncapsheets */ 
                );
                /**Returns  the loading name from base data 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXString Loading
                (
                );
                /**Sets  the loading name from base data 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLoading
                (
                    const NXString & loading /** loading */ 
                );
                /**Sets  the loading name from base data 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLoading
                (
                    const char * loading /** loading */ 
                );
                /**Returns  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * AdultGtrUntranslateOutputColor
                (
                );
                /**Sets  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultGtrUntranslateOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font AdultGtrUntranslateOutputFont
                (
                );
                /**Sets  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultGtrUntranslateOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: int AdultGtrUntranslateOutputLayer
                (
                );
                /**Sets  the layer that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultGtrUntranslateOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width ChildGtrUntranslateOutputWidth
                (
                );
                /**Sets  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildGtrUntranslateOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ChildGtrUntranslateOutputColor
                (
                );
                /**Sets  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildGtrUntranslateOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font ChildGtrUntranslateOutputFont
                (
                );
                /**Sets  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildGtrUntranslateOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: int ChildGtrUntranslateOutputLayer
                (
                );
                /**Sets  the layer that will be used for the the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetChildGtrUntranslateOutputLayer
                (
                    int layer /** layer */ 
                );
                /**Returns  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width AdultGtrUntranslateOutputWidth
                (
                );
                /**Sets  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAdultGtrUntranslateOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width CyclistGtrUntranslateOutputWidth
                (
                );
                /**Sets  the line width that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistGtrUntranslateOutputWidth
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Width width /** width */ 
                );
                /**Returns  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * CyclistGtrUntranslateOutputColor
                (
                );
                /**Sets  the color that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistGtrUntranslateOutputColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font CyclistGtrUntranslateOutputFont
                (
                );
                /**Sets  the font that will be used for the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistGtrUntranslateOutputFont
                (
                    NXOpen::Features::VehicleDesign::PedestrianProtectionBuilder::Font font /** font */ 
                );
                /**Returns  the layer that will be used for the the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: int CyclistGtrUntranslateOutputLayer
                (
                );
                /**Sets  the layer that will be used for the the GTR untranslate impact sheet 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCyclistGtrUntranslateOutputLayer
                (
                    int layer /** layer */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
