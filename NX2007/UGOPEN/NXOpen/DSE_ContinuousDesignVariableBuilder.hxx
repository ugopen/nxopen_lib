#ifndef NXOpen_DSE_CONTINUOUSDESIGNVARIABLEBUILDER_HXX_INCLUDED
#define NXOpen_DSE_CONTINUOUSDESIGNVARIABLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DSE_ContinuousDesignVariableBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libdseopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DSE
    {
        class ContinuousDesignVariableBuilder;
    }
    class Builder;
    namespace DSE
    {
        class _ContinuousDesignVariableBuilderBuilder;
        class ContinuousDesignVariableBuilderImpl;
        /** Represents Continuous Design Variable Builder class. <br> To create a new instance of this class, use @link NXOpen::DSE::DesignVariableBuilder::GetContinuousDesignVariableBuilder  NXOpen::DSE::DesignVariableBuilder::GetContinuousDesignVariableBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class DSEOPENCPPEXPORT  ContinuousDesignVariableBuilder : public NXOpen::Builder
        {
            private: ContinuousDesignVariableBuilderImpl * m_continuousdesignvariablebuilder_impl;
            private: friend class  _ContinuousDesignVariableBuilderBuilder;
            protected: ContinuousDesignVariableBuilder();
            public: ~ContinuousDesignVariableBuilder();
            /**Returns  the upper limit 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double UpperLimit
            (
            );
            /**Sets  the upper limit 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetUpperLimit
            (
                double upperLimit /** upperlimit */ 
            );
            /**Returns  the nominal value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double NominalValue
            (
            );
            /**Sets  the nominal value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetNominalValue
            (
                double nominalValue /** nominalvalue */ 
            );
            /**Returns  the lower limit 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double LowerLimit
            (
            );
            /**Sets  the lower limit 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetLowerLimit
            (
                double lowerLimit /** lowerlimit */ 
            );
            /**Returns  the increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double Increment
            (
            );
            /**Sets  the increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_design_explorer (" NX Design Space Exploration") */
            public: void SetIncrement
            (
                double increment /** increment */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
