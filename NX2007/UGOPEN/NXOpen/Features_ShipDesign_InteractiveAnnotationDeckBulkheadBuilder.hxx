#ifndef NXOpen_FEATURES_SHIPDESIGN_INTERACTIVEANNOTATIONDECKBULKHEADBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_INTERACTIVEANNOTATIONDECKBULKHEADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_InteractiveAnnotationDeckBulkheadBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_InteractiveAnnotationSubBaseBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class InteractiveAnnotationDeckBulkheadBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class InteractiveAnnotationSubBaseBuilder;
        }
    }
    class NXObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _InteractiveAnnotationDeckBulkheadBuilderBuilder;
            class InteractiveAnnotationDeckBulkheadBuilderImpl;
            /** Represents a @link NXOpen::Features::ShipDesign::InteractiveAnnotationBuilder NXOpen::Features::ShipDesign::InteractiveAnnotationBuilder@endlink  builder . This builder returns NULL.  <br> Create this class by parent.  <br> 
             <br>  Created in NX2007.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  InteractiveAnnotationDeckBulkheadBuilder : public NXOpen::Features::ShipDesign::InteractiveAnnotationSubBaseBuilder
            {
                /** Settings that indicate how to handle the exsiting annotation in the drawing.*/
                public: enum DirectionType
                {
                    DirectionTypeX/** x */ ,
                    DirectionTypeY/** y */ ,
                    DirectionTypeZ/** z */ 
                };

                private: InteractiveAnnotationDeckBulkheadBuilderImpl * m_interactiveannotationdeckbulkheadbuilder_impl;
                private: friend class  _InteractiveAnnotationDeckBulkheadBuilderBuilder;
                protected: InteractiveAnnotationDeckBulkheadBuilder();
                public: ~InteractiveAnnotationDeckBulkheadBuilder();
                /**Returns  the direction 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::InteractiveAnnotationDeckBulkheadBuilder::DirectionType Direction
                (
                );
                /**Sets  the direction 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetDirection
                (
                    NXOpen::Features::ShipDesign::InteractiveAnnotationDeckBulkheadBuilder::DirectionType direction /** direction */ 
                );
                /**Returns  the reference entity 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXObject * ReferenceObject
                (
                );
                /**Sets  the reference entity 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetReferenceObject
                (
                    NXOpen::NXObject * referenceObject /** referenceobject */ 
                );
                /** Get the text of symbol 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetSymbolText
                (
                    std::vector<NXString> & symbolTexts /** symboltexts */ 
                );
                /** Set the text of symbol 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetSymbolText
                (
                    std::vector<NXString> & symbolTexts /** symboltexts */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
