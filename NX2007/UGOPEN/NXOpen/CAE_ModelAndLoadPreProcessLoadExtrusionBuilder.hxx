#ifndef NXOpen_CAE_MODELANDLOADPREPROCESSLOADEXTRUSIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELANDLOADPREPROCESSLOADEXTRUSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelAndLoadPreProcessLoadExtrusionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_ModelAndLoadPreProcessOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelAndLoadPreProcessLoadExtrusionBuilder;
    }
    namespace CAE
    {
        class ModelAndLoadPreProcessOperationBuilder;
    }
    class Expression;
    namespace CAE
    {
        class _ModelAndLoadPreProcessLoadExtrusionBuilderBuilder;
        class ModelAndLoadPreProcessLoadExtrusionBuilderImpl;
        /**
            Builds a @link NXOpen::CAE::ModelAndLoadPreProcessLoadExtrusionBuilder NXOpen::CAE::ModelAndLoadPreProcessLoadExtrusionBuilder@endlink  object which 
            represets an operation.
             <br> There is no kf creator for this.  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelAndLoadPreProcessLoadExtrusionBuilder : public NXOpen::CAE::ModelAndLoadPreProcessOperationBuilder
        {
            /** the distane criteria enum*/
            public: enum DistanceCriterionEnum
            {
                DistanceCriterionEnumPerCopy/** per copy */ ,
                DistanceCriterionEnumTotal/** total */ 
            };

            private: ModelAndLoadPreProcessLoadExtrusionBuilderImpl * m_modelandloadpreprocessloadextrusionbuilder_impl;
            private: friend class  _ModelAndLoadPreProcessLoadExtrusionBuilderBuilder;
            protected: ModelAndLoadPreProcessLoadExtrusionBuilder();
            public: ~ModelAndLoadPreProcessLoadExtrusionBuilder();
            /** Sets the region selection. Clears previous selection.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetRegionSelection
            (
                const std::vector<int> & intermediateEntities /** intermediateentities */ 
            );
            /**Returns  the number of copies 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int NumCopies
            (
            );
            /**Sets  the number of copies 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNumCopies
            (
                int numCopies /** numcopies */ 
            );
            /**Returns  the distance criterion 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModelAndLoadPreProcessLoadExtrusionBuilder::DistanceCriterionEnum DistanceCriterion
            (
            );
            /**Sets  the distance criterion 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDistanceCriterion
            (
                NXOpen::CAE::ModelAndLoadPreProcessLoadExtrusionBuilder::DistanceCriterionEnum distanceCriterion /** distancecriterion */ 
            );
            /**Returns  the distance 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
