#ifndef NXOpen_ROUTING_DEFININGPOINT_HXX_INCLUDED
#define NXOpen_ROUTING_DEFININGPOINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_DefiningPoint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class DefiningPoint;
    }
    namespace Routing
    {
        class DefiningPointImpl;
        /**  @brief  Represents a @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink  object.  

         
                 <br>  This class is used by the @link NXOpen::Routing::SplineData NXOpen::Routing::SplineData@endlink  object to
                       represent a defining point of an NX Routing spline segment.  <br> 
                 <br>  The class provides interfaces to specify a point's position and optional extension
                       direction and magnitudes.  <br> 
                 <br>  Use the @link NXOpen::Routing::SplineData::GetDefiningPoints NXOpen::Routing::SplineData::GetDefiningPoints@endlink  method
                       to get the point and extension data for a spline.  <br>  
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  DefiningPoint : public NXOpen::TransientObject
        {
            private: DefiningPointImpl * m_definingpoint_impl;
            /// \cond NX_NO_DOC 
            public: explicit DefiningPoint(void *ptr);
            /// \endcond 
            /**Returns  the position of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point3d Position
            (
            );
            /**Sets  the position of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPosition
            (
                const NXOpen::Point3d & position /** position */ 
            );
            /**Returns  the extension direction of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Vector3d Direction
            (
            );
            /**Sets  the extension direction of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetDirection
            (
                const NXOpen::Vector3d & direction /** direction */ 
            );
            /**Returns  the backward extension of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double BackwardExtension
            (
            );
            /**Sets  the backward extension of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBackwardExtension
            (
                double backwardExtension /** backwardextension */ 
            );
            /**Returns  the forward extension of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double ForwardExtension
            (
            );
            /**Sets  the forward extension of the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetForwardExtension
            (
                double forwardExtension /** forwardextension */ 
            );
            /** Does the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink  have any
                        @link NXOpen::Positioning::Constraint NXOpen::Positioning::Constraint@endlink  that determines its location?
                        If so, you cannot change the position of this point. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool IsConstrained
            (
            );
            /** Destroys the @link NXOpen::Routing::DefiningPoint NXOpen::Routing::DefiningPoint@endlink  object. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~DefiningPoint();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
