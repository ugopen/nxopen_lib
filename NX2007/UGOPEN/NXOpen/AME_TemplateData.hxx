#ifndef NXOpen_AME_TEMPLATEDATA_HXX_INCLUDED
#define NXOpen_AME_TEMPLATEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_TemplateData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_BasicTemplateData.hxx>
#include <NXOpen/AME_BasicTemplateData.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class TemplateData;
    }
    namespace AME
    {
        class BasicTemplateData;
    }
    namespace AME
    {
        class _TemplateDataBuilder;
        class TemplateDataImpl;
        /** JA class for the Template Data object <br> This is the singleton Template Data class.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  TemplateData : public NXOpen::AME::BasicTemplateData
        {
            private: TemplateDataImpl * m_templatedata_impl;
            private: friend class  _TemplateDataBuilder;
            protected: TemplateData();
            public: ~TemplateData();
            /**Returns   the default solution template 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::BasicTemplateData * DefaultSolutionTemplate
            (
            );
            /**Sets   the default solution template 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDefaultSolutionTemplate
            (
                NXOpen::AME::BasicTemplateData * solutionTemplate /** solutiontemplate */ 
            );
            /**  Method to move up solution template 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void MoveUpSolutionTemplate
            (
                NXOpen::AME::BasicTemplateData * solutionTemplate /** solutiontemplate */ 
            );
            /**  Method to move down solution template 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void MoveDownSolutionTemplate
            (
                NXOpen::AME::BasicTemplateData * solutionTemplate /** solutiontemplate */ 
            );
            /**  Method to remove the solution template from the template data 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void RemoveSolutionTemplates
            (
                const std::vector<NXOpen::AME::BasicTemplateData *> & solutionTemplates /** solutiontemplates */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
