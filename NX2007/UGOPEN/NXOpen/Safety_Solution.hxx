#ifndef NXOpen_SAFETY_SOLUTION_HXX_INCLUDED
#define NXOpen_SAFETY_SOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Safety_Solution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Safety_SolveJob.hxx>
#include <NXOpen/libsafetyopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Safety
    {
        class Solution;
    }
    class NXObject;
    namespace Safety
    {
        class SolveJob;
    }
    namespace Safety
    {
        class _SolutionBuilder;
        class SolutionImpl;
        /**  Represents the Safety Solution.     <br> To create or edit an instance of this class, use @link NXOpen::Safety::SolutionBuilder  NXOpen::Safety::SolutionBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class SAFETYOPENCPPEXPORT  Solution : public NXOpen::NXObject
        {
            /** Madymo release */
            public: enum SolverRelease
            {
                SolverReleaseR75/** Release R7.5 */,
                SolverReleaseR76/** Release R7.6 */,
                SolverReleaseR77/** Release R7.7 */,
                SolverReleaseR78/** Release R7.8 */,
                SolverReleaseR20201/** Release R2020.1 */,
                SolverReleaseR20202/** Release R2020.2 */,
                SolverReleaseR20211/** Release R2021.1 */,
                SolverReleaseR20221/** Release R2022.1 */
            };

            /** Analysis type */
            public: enum AnalysisType
            {
                AnalysisTypeDynamic/** Dynamic */,
                AnalysisTypeAssemble/** Assemble */,
                AnalysisTypeParse/** Parse */
            };

            /** Integration method */
            public: enum IntegrationMethod
            {
                IntegrationMethodEuler/** Euler */,
                IntegrationMethodRuku4/** Ruku4 */,
                IntegrationMethodRuku5/** Ruku5 */,
                IntegrationMethodMatlab/** Matlab */
            };

            private: SolutionImpl * m_solution_impl;
            private: friend class  _SolutionBuilder;
            protected: Solution();
            public: ~Solution();
            /** Creates an object to setup and solve a solution 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Safety::SolveJob * CreateSolveJob
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
