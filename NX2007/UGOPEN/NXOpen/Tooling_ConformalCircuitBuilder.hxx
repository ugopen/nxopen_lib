#ifndef NXOpen_TOOLING_CONFORMALCIRCUITBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CONFORMALCIRCUITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ConformalCircuitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ConformalCircuitBuilder;
    }
    class Builder;
    class Curve;
    class Expression;
    class NXObject;
    class Section;
    namespace Tooling
    {
        class _ConformalCircuitBuilderBuilder;
        class ConformalCircuitBuilderImpl;
        /** Conformal Cooling Curves management builder, create intersection curve by intersect plane with selected offset body, or fit curves by specified point, 
            or create the cooling curve by projecting a sketch curve or a 3D curve into offset body.  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateConformalCircuitBuilder  NXOpen::Tooling::MoldwizardManager::CreateConformalCircuitBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Associative </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        OriginalCurveLayer </term> <description> 
         
        255 </description> </item> 

        <item><term> 
         
        OriginalCurveOperation </term> <description> 
         
        Hide </description> </item> 

        <item><term> 
         
        SmoothCurve </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ConformalCircuitBuilder : public NXOpen::Builder
        {
            /** The action for the circuit tree list node */
            public: enum CircuitNodeAction
            {
                CircuitNodeActionRemove/** Remove selected node. */,
                CircuitNodeActionHide/** Hide selected node. */,
                CircuitNodeActionShow/** Show selected node. */,
                CircuitNodeActionShowOnly/** Show selected node. */,
                CircuitNodeActionAdd/** Add new circuit node. */,
                CircuitNodeActionUpdate/** Update selected circuit node. */,
                CircuitNodeActionAll/** Update all circuits. */,
                CircuitNodeActionDiameter/** Update all circuits's diameter. */,
                CircuitNodeActionNone/** None of circuit node action. */
            };

            /** Operation to be performed on the original curve */
            public: enum OriginalCurveOperationType
            {
                OriginalCurveOperationTypeNone/** none */ ,
                OriginalCurveOperationTypeHide/** hide */ ,
                OriginalCurveOperationTypeMovetoLayer/** moveto layer */ ,
                OriginalCurveOperationTypeDelete/** delete */ 
            };

            private: ConformalCircuitBuilderImpl * m_conformalcircuitbuilder_impl;
            private: friend class  _ConformalCircuitBuilderBuilder;
            protected: ConformalCircuitBuilder();
            public: ~ConformalCircuitBuilder();
            /**Returns  the sketch used to create the conformal guide curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ConformalCurve
            (
            );
            /**Returns  the distance between cooling diameter.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CoolingDiameter
            (
            );
            /**Returns  the operation to be performed on the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalCircuitBuilder::OriginalCurveOperationType OriginalCurveOperation
            (
            );
            /**Sets  the operation to be performed on the original curve  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOriginalCurveOperation
            (
                NXOpen::Tooling::ConformalCircuitBuilder::OriginalCurveOperationType originalCurveOperation /** originalcurveoperation */ 
            );
            /**Returns  the move to layer for the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int OriginalCurveLayer
            (
            );
            /**Sets  the move to layer for the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOriginalCurveLayer
            (
                int originalCurveLayer /** originalcurvelayer */ 
            );
            /**Returns  the associative flag that indicates whether if output curve is associative with the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative flag that indicates whether if output curve is associative with the original curve 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the smooth cooling curve flag 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool SmoothCurve
            (
            );
            /**Sets  the smooth cooling curve flag 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSmoothCurve
            (
                bool smoothFlag /** smoothflag */ 
            );
            /**Returns  the smooth curve rate.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int CurveSmoothRates
            (
            );
            /**Sets  the smooth curve rate.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurveSmoothRates
            (
                int smoothRates /** smoothrates */ 
            );
            /**Returns  the angle limit to smooth curve corner.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CornerAngleLimit
            (
            );
            /**Returns  the distance between each sample point for fiting conformal curve.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SampleDistance
            (
            );
            /** Set the Conformal Circuit node name. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCircuitNodeName
            (
                int index /** index */ ,
                const NXString & nodeName /** nodename */ 
            );
            /** Set the Conformal Circuit node name. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetCircuitNodeName
            (
                int index /** index */ ,
                const char * nodeName /** nodename */ 
            );
            /** Initialize the conformal cooling circuit data structure. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void InitializeConformalCircuitData
            (
            );
            /** Update the conformal cooling circuit data. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void UpdateConformalCircuitData
            (
                NXOpen::Tooling::ConformalCircuitBuilder::CircuitNodeAction type /** type */ ,
                std::vector<NXString> & deleteNodes /** deletenodes */ 
            );
            /** Adjust the smooth corner for conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void AdjustSmoothCorner
            (
                const NXString & nodeName /** nodename */ 
            );
            /** Adjust the smooth corner for conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void AdjustSmoothCorner
            (
                const char * nodeName /** nodename */ 
            );
            /** Update the status conformal cooling tubes. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateTubesStatus
            (
                const NXString & nodeName /** nodename */ 
            );
            /** Update the status conformal cooling tubes. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void UpdateTubesStatus
            (
                const char * nodeName /** nodename */ 
            );
            /** Update the conformal curve selection section data. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateConformalCurveSection
            (
                const std::vector<NXOpen::Curve *> & curve /** curve */ 
            );
            /** Remove one cooling curve object from a conformal circuit data structure. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveSingleCurveObjectFromACircuitData
            (
                NXOpen::NXObject * objectTag /** objecttag */ 
            );
            /** Adjust the smooth corner for conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowChannelFlag
            (
                const NXString & nodeName /** nodename */ ,
                bool checkedFlag /** checkedflag */ 
            );
            /** Adjust the smooth corner for conformal cooling curves. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetShowChannelFlag
            (
                const char * nodeName /** nodename */ ,
                bool checkedFlag /** checkedflag */ 
            );
            /** Initialize the tree node definition of the conformal cooling circuit data structure. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void InitializeNodeOfConformalCircuitData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
