#ifndef NXOpen_COMPOSITES_BASE_HXX_INCLUDED
#define NXOpen_COMPOSITES_BASE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Composites_Base.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/libcompositesopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Composites
    {
        class Base;
    }
    class DisplayableObject;
    namespace Composites
    {
        class _BaseBuilder;
        class BaseImpl;

        /// \cond NX_NO_DOC 
        /** Represents a base object, which other composite objects inherit functionality from  <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class COMPOSITESOPENCPPEXPORT  Base : public NXOpen::DisplayableObject
        {
            private: BaseImpl * m_base_impl;
            private: friend class  _BaseBuilder;
            protected: Base();
            public: ~Base();

            /// \cond NX_NO_DOC 
            /** Overrides the default function for setting an object's name, respecting the case of the provided name 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetName
            (
                const NXString & desiredName /** desiredname */ 
            );
            /** Overrides the default function for setting an object's name, respecting the case of the provided name 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetName
            (
                const char * desiredName /** desiredname */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
