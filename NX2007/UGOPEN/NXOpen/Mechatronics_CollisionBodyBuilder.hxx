#ifndef NXOpen_MECHATRONICS_COLLISIONBODYBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_COLLISIONBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_CollisionBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_CollisionShapeBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class CollisionBodyBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class CollisionMaterial;
    }
    namespace Mechatronics
    {
        class CollisionShapeBuilder;
    }
    class NXObject;
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _CollisionBodyBuilderBuilder;
        class CollisionBodyBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::CollisionBodyBuilder NXOpen::Mechatronics::CollisionBodyBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::CollisionBodyCollection::CreateCollisionBodyBuilder  NXOpen::Mechatronics::CollisionBodyCollection::CreateCollisionBodyBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  CollisionBodyBuilder : public NXOpen::Mechatronics::CollisionShapeBuilder
        {
            /** the collide shape types. */
            public: enum CollisionShapeTypes
            {
                CollisionShapeTypesBox/** Box */,
                CollisionShapeTypesSphere/** Sphere */,
                CollisionShapeTypesCylinder/** Cylinder */,
                CollisionShapeTypesCapsule/** Capsule */,
                CollisionShapeTypesConvex/** Convex */,
                CollisionShapeTypesMultiConvex/** Multi-Convex */,
                CollisionShapeTypesHole/** Hole */,
                CollisionShapeTypesMesh/** Mesh */
            };

            /** the shape calculation option. */
            public: enum ShapePropertyTypes
            {
                ShapePropertyTypesAutomatic/** automatic */,
                ShapePropertyTypesUserDefined/** user defined */
            };

            private: CollisionBodyBuilderImpl * m_collisionbodybuilder_impl;
            private: friend class  _CollisionBodyBuilderBuilder;
            protected: CollisionBodyBuilder();
            public: ~CollisionBodyBuilder();
            /**Returns  the geometries. This can be a @link NXOpen::Assemblies::ComponentAssembly NXOpen::Assemblies::ComponentAssembly@endlink , @link NXOpen::Point NXOpen::Point@endlink 
                    @link NXOpen::Face NXOpen::Face@endlink , @link NXOpen::Edge NXOpen::Edge@endlink , bodies and curves.
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * Geometry
            (
            );
            /** Sets the geometry
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetGeometry
            (
                const std::vector<NXOpen::NXObject *> & geometries /** Input geometries*/
            );
            /**Returns  the shape type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes CollisionShape
            (
            );
            /**Sets  the shape type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCollisionShape
            (
                NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes collisionShape /** collisionshape */ 
            );
            /**Returns  the shape option. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::CollisionBodyBuilder::ShapePropertyTypes CollisionProperties
            (
            );
            /**Sets  the shape option. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCollisionProperties
            (
                NXOpen::Mechatronics::CollisionBodyBuilder::ShapePropertyTypes collisionProperties /** collisionproperties */ 
            );
            /**Returns  the category. It should be between 0 and 16. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int Category
            (
            );
            /**Sets  the category. It should be between 0 and 16. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCategory
            (
                int category /** category */ 
            );
            /**Returns  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the material.  This can be a @link NXOpen::Mechatronics::CollisionMaterial NXOpen::Mechatronics::CollisionMaterial@endlink . 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::CollisionMaterial * CollisionMaterial
            (
            );
            /**Sets  the material.  This can be a @link NXOpen::Mechatronics::CollisionMaterial NXOpen::Mechatronics::CollisionMaterial@endlink . 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCollisionMaterial
            (
                NXOpen::Mechatronics::CollisionMaterial * collisionMaterial /** collisionmaterial */ 
            );
            /** The convex of the collide. Call this function to generate convex when 
                    @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes@endlink  is set 
                   to @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesConvex NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesConvex@endlink . 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void CalculateConvex
            (
            );
            /** The mesh of the collide. Call this function to generate mesh when 
                    @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes@endlink  is set 
                   to @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesMesh NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesMesh@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void CalculateMesh
            (
            );
            /** The multi-convex of the collide. Call this function to generate multi-convex when 
                    @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes@endlink  is set 
                   to @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesMultiConvex NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesMultiConvex@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void CalculateMultiConvex
            (
            );
            /**Returns  the highlight on collision. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool HighlightOnCollision
            (
            );
            /**Sets  the highlight on collision. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetHighlightOnCollision
            (
                bool highlight /** highlight */ 
            );
            /**Returns  the option for stick when collision. If stickCollision is true, then this collision body
                    will become sticky in the simulation. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool StickCollision
            (
            );
            /**Sets  the option for stick when collision. If stickCollision is true, then this collision body
                    will become sticky in the simulation. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetStickCollision
            (
                bool stickCollision /** stickcollision */ 
            );
            /**Returns  the collision factor. It should be between 0 and 1.0.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: double CollisionFactor
            (
            );
            /**Sets  the collision factor. It should be between 0 and 1.0.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCollisionFactor
            (
                double factor /** factor */ 
            );
            /**Returns  the thickness on collision shape hole. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool Thickness
            (
            );
            /**Sets  the thickness on collision shape hole. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetThickness
            (
                bool thickness /** thickness */ 
            );
            /**Returns  the offset of thickness for collision shape hole. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * Offset
            (
            );
            /** The hole of the collide. Call this function to generate hole when 
                    @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypes@endlink  is set 
                   to @link NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesHole NXOpen::Mechatronics::CollisionBodyBuilder::CollisionShapeTypesHole@endlink . 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void CalculateHole
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
