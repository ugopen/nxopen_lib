#ifndef NXOpen_ANNOTATIONS_SHEETMETALPMISETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_SHEETMETALPMISETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_SheetMetalPMISettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class SheetMetalPMISettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _SheetMetalPMISettingsBuilderBuilder;
        class SheetMetalPMISettingsBuilderImpl;
        /** Represents a @link NXOpen::Annotations::SheetMetalPMISettingsBuilder NXOpen::Annotations::SheetMetalPMISettingsBuilder@endlink . <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  SheetMetalPMISettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** This represents the bend parameters.*/
            public: enum BendParameterType
            {
                BendParameterTypeBendRadius/** bend radius */ ,
                BendParameterTypeBendAngle/** bend angle */ ,
                BendParameterTypeNeutralFactor/** neutral factor */ 
            };

            /** This represents the body parameters.*/
            public: enum BodyParameterType
            {
                BodyParameterTypeMaterialthickness/** materialthickness */ ,
                BodyParameterTypePhysicalMaterial/** physical material */ ,
                BodyParameterTypeMaterial/** material */ 
            };

            /** This represents sheet metal pmi type.*/
            public: enum SmPmiType
            {
                SmPmiTypeBend/** bend */ ,
                SmPmiTypeBody/** body */ 
            };

            private: SheetMetalPMISettingsBuilderImpl * m_sheetmetalpmisettingsbuilder_impl;
            private: friend class  _SheetMetalPMISettingsBuilderBuilder;
            protected: SheetMetalPMISettingsBuilder();
            public: ~SheetMetalPMISettingsBuilder();
            /**Returns  the include bend radius setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeBendRadius
            (
            );
            /**Sets  the include bend radius setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludeBendRadius
            (
                bool includeBendRadius /** includebendradius */ 
            );
            /**Returns  the include bend angle setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeBendAngle
            (
            );
            /**Sets  the include bend angle setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludeBendAngle
            (
                bool includeBendAngle /** includebendangle */ 
            );
            /**Returns  the include neutral factor setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeNeutralFactor
            (
            );
            /**Sets  the include neutral factor setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludeNeutralFactor
            (
                bool includeNeutralFactor /** includeneutralfactor */ 
            );
            /**Returns  the include material thickness setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeThickness
            (
            );
            /**Sets  the include material thickness setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludeThickness
            (
                bool includeMaterialhickness /** includematerialhickness */ 
            );
            /**Returns  the include physical material setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludePhysicalMaterial
            (
            );
            /**Sets  the include physical material setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludePhysicalMaterial
            (
                bool includePhysicalMaterial /** includephysicalmaterial */ 
            );
            /**Returns  the include sm material setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeMaterial
            (
            );
            /**Sets  the include sm material setting.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetIncludeMaterial
            (
                bool includeSmMaterial /** includesmmaterial */ 
            );
            /** Sets prefix for bend parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetPrefixForBendParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BendParameterType parameterType /** parametertype */ ,
                const NXString & prefix /** prefix */ 
            );
            /** Sets prefix for bend parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            void SetPrefixForBendParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BendParameterType parameterType /** parametertype */ ,
                const char * prefix /** prefix */ 
            );
            /** Gets prefix for bend parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetPrefixForBendParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BendParameterType parameterType /** parametertype */ 
            );
            /** Sets prefix for body parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetPrefixForBodyParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BodyParameterType parameterType /** parametertype */ ,
                const NXString & prefix /** prefix */ 
            );
            /** Sets prefix for body parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            void SetPrefixForBodyParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BodyParameterType parameterType /** parametertype */ ,
                const char * prefix /** prefix */ 
            );
            /** Gets prefix for body parameter type.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetPrefixForBodyParameterType
            (
                NXOpen::Annotations::SheetMetalPMISettingsBuilder::BodyParameterType parameterType /** parametertype */ 
            );
            /**Returns  the decimal places setting. Only values from 0 to 6 are valid.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: int DecimalPlaces
            (
            );
            /**Sets  the decimal places setting. Only values from 0 to 6 are valid.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT"), nx_sheet_metal ("NX Sheet Metal") */
            public: void SetDecimalPlaces
            (
                int decimalPlaces /** decimalplaces */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
