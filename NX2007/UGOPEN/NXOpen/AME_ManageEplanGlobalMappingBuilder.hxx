#ifndef NXOpen_AME_MANAGEEPLANGLOBALMAPPINGBUILDER_HXX_INCLUDED
#define NXOpen_AME_MANAGEEPLANGLOBALMAPPINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ManageEplanGlobalMappingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_ADPropertyData.hxx>
#include <NXOpen/AME_AMEBaseBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ManageEplanGlobalMappingBuilder;
    }
    namespace AME
    {
        class ADPropertyData;
    }
    namespace AME
    {
        class AMEBaseBuilder;
    }
    namespace AME
    {
        class SelectAMEBaseNode;
    }
    namespace AME
    {
        class _ManageEplanGlobalMappingBuilderBuilder;
        class ManageEplanGlobalMappingBuilderImpl;
        /** Represents a ManageEplanGlobalMappingBuilder class Builder   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateManageEplanGlobalMappingBuilder  NXOpen::AME::AMEManager::CreateManageEplanGlobalMappingBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ManageEplanGlobalMappingBuilder : public NXOpen::AME::AMEBaseBuilder
        {
            private: ManageEplanGlobalMappingBuilderImpl * m_manageeplanglobalmappingbuilder_impl;
            private: friend class  _ManageEplanGlobalMappingBuilderBuilder;
            protected: ManageEplanGlobalMappingBuilder();
            public: ~ManageEplanGlobalMappingBuilder();
            /**Returns  the Eplan property node selection 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectAMEBaseNode * SelectedEplanProperty
            (
            );
            /**Returns  the selected AD property 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ADPropertyData * AdPropertyData
            (
            );
            /**Sets  the selected AD property 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetAdPropertyData
            (
                NXOpen::AME::ADPropertyData * adPropData /** adpropdata */ 
            );
            /** Map selected Eplan property with AD Library Object property 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void MapEplanPropertyToADLibraryObjectProperty
            (
                const NXString & selectedEplanProperty /** selectedeplanproperty */ ,
                const NXString & selectedADPropertyId /** selectedadpropertyid */ ,
                const NXString & selectedADPropertyName /** selectedadpropertyname */ ,
                const NXString & selectedADPropertyDataType /** selectedadpropertydatatype */ 
            );
            /** Map selected Eplan property with AD Library Object property 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void MapEplanPropertyToADLibraryObjectProperty
            (
                const char * selectedEplanProperty /** selectedeplanproperty */ ,
                const char * selectedADPropertyId /** selectedadpropertyid */ ,
                const char * selectedADPropertyName /** selectedadpropertyname */ ,
                const char * selectedADPropertyDataType /** selectedadpropertydatatype */ 
            );
            /** Unmaps selected Eplan property with AD Library Object property 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void UnMapEplanProperty
            (
            );
            /** Map selected Eplan property value with AD Library Object property value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void MapEplanPropertyValueToAdPropertyValue
            (
                const NXString & selectedEplanValue /** selectedeplanvalue */ ,
                const NXString & selectedADValue /** selectedadvalue */ 
            );
            /** Map selected Eplan property value with AD Library Object property value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void MapEplanPropertyValueToAdPropertyValue
            (
                const char * selectedEplanValue /** selectedeplanvalue */ ,
                const char * selectedADValue /** selectedadvalue */ 
            );
            /** Unmaps selected Eplan property value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void UnMapEplanPropertyValue
            (
                const NXString & selectedADValue /** selectedadvalue */ 
            );
            /** Unmaps selected Eplan property value 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void UnMapEplanPropertyValue
            (
                const char * selectedADValue /** selectedadvalue */ 
            );
            /** Map selected Eplan global values with AD Library Object property values
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void MapEplanGlobalValues
            (
                const NXString & selectedEplanValueListId /** selectedeplanvaluelistid */ ,
                const NXString & selectedEplanValueId /** selectedeplanvalueid */ ,
                const NXString & selAdValueName /** seladvaluename */ 
            );
            /** Map selected Eplan global values with AD Library Object property values
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void MapEplanGlobalValues
            (
                const char * selectedEplanValueListId /** selectedeplanvaluelistid */ ,
                const char * selectedEplanValueId /** selectedeplanvalueid */ ,
                const char * selAdValueName /** seladvaluename */ 
            );
            /** Unmaps selected Eplan values with AD Library Object property values
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void UnmapEplanGlobalValue
            (
                const NXString & selectedEplanValueId /** selectedeplanvalueid */ 
            );
            /** Unmaps selected Eplan values with AD Library Object property values
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void UnmapEplanGlobalValue
            (
                const char * selectedEplanValueId /** selectedeplanvalueid */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
