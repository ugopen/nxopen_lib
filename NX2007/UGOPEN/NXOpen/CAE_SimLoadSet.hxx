#ifndef NXOpen_CAE_SIMLOADSET_HXX_INCLUDED
#define NXOpen_CAE_SIMLOADSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLoadSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_IExportableFEEntity.hxx>
#include <NXOpen/CAE_NamedPropertyTable.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLoadSet;
    }
    namespace CAE
    {
        class IExportableFEEntity;
    }
    namespace CAE
    {
        class NamedPropertyTable;
    }
    namespace CAE
    {
        class SimLbcFolder;
    }
    namespace CAE
    {
        class SimLoad;
    }
    namespace CAE
    {
        class _SimLoadSetBuilder;
        class SimLoadSetImpl;
        /**  @brief  Represents a cae load set object  

           <br> To create a new instance of this class, use @link NXOpen::CAE::SimLoadSetCollection::CreateLoadSet  NXOpen::CAE::SimLoadSetCollection::CreateLoadSet @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLoadSet : public NXOpen::CAE::NamedPropertyTable, public virtual NXOpen::CAE::IExportableFEEntity
        {
            /** Load Set type */
            public: enum Type
            {
                TypeInvalid/** Static load set. */ = -1,
                TypeStatic/** Static load set. */,
                TypeFrequency/** Frequency Excitation Load Set. */,
                TypeTransient/** Transient Excitation Load Set. */,
                TypeAcoustic/** Acoustic Load Set. */,
                TypeTemperature/** Temperature Set. */,
                TypeBolt/** Bolt Load Set. */,
                TypeFrequencyGust/** Frequency Gust Load Set. */,
                TypeTransientGust/** Transient Gust Load Set. */
            };

            private: SimLoadSetImpl * m_simloadset_impl;
            private: friend class  _SimLoadSetBuilder;
            protected: SimLoadSet();
            public: ~SimLoadSet();
            /**Returns  the name of the load set descriptor 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString DescriptorName
            (
            );
            /**Returns  the type of the load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimLoadSet::Type LoadSetType
            (
            );
            /** Add a load set member to load set. Only load set with type of @link SimLoadSet::TypeFrequency SimLoadSet::TypeFrequency@endlink  
                    and @link SimLoadSet::TypeTransient SimLoadSet::TypeTransient@endlink  can add only one set member with type of 
                    @link SimLoadSet::TypeStatic SimLoadSet::TypeStatic@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddMemberSet
            (
                NXOpen::CAE::SimLoadSet * tmember /** member load set*/
            );
            /** Remove a load set memeber from load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveMemberSet
            (
                NXOpen::CAE::SimLoadSet * tmember /** member load set*/
            );
            /** Get the load set member from load set  @return  member load set
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimLoadSet * GetMemberSet
            (
            );
            /** Add load members to load set. Only load set with type of @link SimLoadSet::TypeStatic SimLoadSet::TypeStatic@endlink  
                    and @link SimLoadSet::TypeAcoustic SimLoadSet::TypeAcoustic@endlink  and @link SimLoadSet::TypeTemperature SimLoadSet::TypeTemperature@endlink  
                    can add member load 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddMemberLoads
            (
                const std::vector<NXOpen::CAE::SimLoad *> & tmembers /** member loads*/
            );
            /** Remove load members from load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveMemberLoads
            (
                const std::vector<NXOpen::CAE::SimLoad *> & tmembers /** member loads*/
            );
            /** Get all load members from load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetMemberLoads
            (
                std::vector<NXOpen::CAE::SimLoad *> & tmembers /** member loads*/
            );
            /** Add root folder members to load set. Only load set with type of @link SimLoadSet::TypeStatic SimLoadSet::TypeStatic@endlink  
                    and @link SimLoadSet::TypeAcoustic SimLoadSet::TypeAcoustic@endlink  and @link SimLoadSet::TypeTemperature SimLoadSet::TypeTemperature@endlink  
                    can add member folder  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddMemberFolders
            (
                const std::vector<NXOpen::CAE::SimLbcFolder *> & tmembers /** member folders*/
            );
            /** Remove root folder memebers from load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveMemberFolders
            (
                const std::vector<NXOpen::CAE::SimLbcFolder *> & tmembers /** member folders*/
            );
            /** Get all root folder memebers of load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetMemberFolders
            (
                std::vector<NXOpen::CAE::SimLbcFolder *> & tmembers /** member folders*/
            );
            /** Get all valid loads under given root folder in given load set 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetMemberFolderValidLoads
            (
                NXOpen::CAE::SimLbcFolder * tFolder /** member folder */,
                std::vector<NXOpen::CAE::SimLoad *> & tmembers /** member loads under folder*/
            );
            /** Returns the solver card syntax strings for this entity.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXString> GetSolverCardSyntax
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
