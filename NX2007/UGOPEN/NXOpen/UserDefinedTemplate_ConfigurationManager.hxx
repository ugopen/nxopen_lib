#ifndef NXOpen_USERDEFINEDTEMPLATE_CONFIGURATIONMANAGER_HXX_INCLUDED
#define NXOpen_USERDEFINEDTEMPLATE_CONFIGURATIONMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UserDefinedTemplate_ConfigurationManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_userdefinedtemplate_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace UserDefinedTemplate
    {
        class ConfigurationManager;
    }
    class Part;
    namespace UserDefinedTemplate
    {
        class ConfigurableObject;
    }
    namespace UserDefinedTemplate
    {
        class ConfigurationManagerImpl;
        /** Provides methods for manipulating the template studio configuration objects in a part.
                Inputs to this feature can be convergent objects. <br> To obtain an instance of this class, refer to @link NXOpen::Part  NXOpen::Part @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_USERDEFINEDTEMPLATEEXPORT  ConfigurationManager
        {
            /** Indicates the type of template being created */
            public: enum TemplateType
            {
                TemplateTypeNone/** none */ ,
                TemplateTypePts/** pts */ ,
                TemplateTypeFts/** fts */ 
            };

            /** Indicates the type of item node being created */
            public: enum ItemType
            {
                ItemTypeGroup/** group */ ,
                ItemTypeTab/** tab */ ,
                ItemTypeButton/** button */ ,
                ItemTypeLabel/** label */ ,
                ItemTypeSeparator/** separator */ ,
                ItemTypeLayer/** layer */ ,
                ItemTypeRouting/** routing */ ,
                ItemTypeArrangement/** arrangement */ ,
                ItemTypeFamily/** family */ ,
                ItemTypeNumber/** number */ ,
                ItemTypeString/** string */ ,
                ItemTypeBoolean/** boolean */ ,
                ItemTypeInteger/** integer */ ,
                ItemTypeReference/** reference */ ,
                ItemTypeBody/** body */ ,
                ItemTypeSketch/** sketch */ ,
                ItemTypeGeometry/** geometry */ ,
                ItemTypeExtract/** extract */ ,
                ItemTypePoint/** point */ ,
                ItemTypePosition/** position */ 
            };

            /** Indicates where to move the node */
            public: enum MoveType
            {
                MoveTypeUp/** up */ ,
                MoveTypeDown/** down */ ,
                MoveTypeOut/** reduce group nesting */
            };

            private: ConfigurationManagerImpl * m_configurationmanager_impl;
            private: NXOpen::Part* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ConfigurationManager(NXOpen::Part *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ConfigurationManager();
            /** Create a root node of the template configuration dialog. @return  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::UserDefinedTemplate::ConfigurableObject * CreateRootNode
            (
                NXOpen::UserDefinedTemplate::ConfigurationManager::TemplateType templateType /** template type */ 
            );
            /** Create a UI item node for the template configuration dialog. @return  
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::UserDefinedTemplate::ConfigurableObject * CreateItemNode
            (
                NXOpen::UserDefinedTemplate::ConfigurationManager::ItemType itemType /** item type */ 
            );
            /** Add or move a node in the configuration dialog.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void DragDropNode
            (
                NXOpen::UserDefinedTemplate::ConfigurableObject * rootNode /** rootnode */ ,
                NXOpen::UserDefinedTemplate::ConfigurableObject * sourceNode /** sourcenode */ ,
                NXOpen::UserDefinedTemplate::ConfigurableObject * targetNode /** targetnode */ 
            );
            /** Remove a node in the configuration dialog.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveItemNode
            (
                NXOpen::UserDefinedTemplate::ConfigurableObject * targetNode /** targetnode */ 
            );
            /** Move a node up or down in the configuration dialog.
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void MoveItemNode
            (
                NXOpen::UserDefinedTemplate::ConfigurationManager::MoveType moveType /** move type */ ,
                NXOpen::UserDefinedTemplate::ConfigurableObject * sourceNode /** sourcenode */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
