#ifndef NXOpen_FEATURES_VEHICLEDESIGN_MANIKINBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_MANIKINBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_ManikinBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class ManikinBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class _ManikinBuilderBuilder;
            class ManikinBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::VehicleDesign::Manikin NXOpen::Features::VehicleDesign::Manikin@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateManikinBuilder  NXOpen::Features::VehicleDesignCollection::CreateManikinBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AHPHeight.Value </term> <description> 
             
            325 (millimeters part), 12.8 (inches part) </description> </item> 

            <item><term> 
             
            AHPLength.Value </term> <description> 
             
            698.5 (millimeters part), 27.5 (inches part) </description> </item> 

            <item><term> 
             
            AHPToSWCHeight.Value </term> <description> 
             
            620 (millimeters part), 24.41 (inches part) </description> </item> 

            <item><term> 
             
            AHPToSWCLength.Value </term> <description> 
             
            500 (millimeters part), 19.69 (inches part) </description> </item> 

            <item><term> 
             
            AlignmentMethod </term> <description> 
             
            ProjectPerpendicular </description> </item> 

            <item><term> 
             
            AllowPostureValueOutOfRange </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            ArmLength.Value </term> <description> 
             
            296.12 (millimeters part), 11.66 (inches part) </description> </item> 

            <item><term> 
             
            BackAngle.Value </term> <description> 
             
            22 </description> </item> 

            <item><term> 
             
            Classification </term> <description> 
             
            ClassA </description> </item> 

            <item><term> 
             
            CreateFootComfort </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateFootReach </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateHandComfort </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateHandReach </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            CreateSteeringWheel </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            DrivingPostureCheck </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            ForearmLength.Value </term> <description> 
             
            268.83 (millimeters part), 10.58 (inches part) </description> </item> 

            <item><term> 
             
            HandGripLength.Value </term> <description> 
             
            120.89 (millimeters part), 4.76 (inches part) </description> </item> 

            <item><term> 
             
            HandLength.Value </term> <description> 
             
            244.09 (millimeters part), 9.61 (inches part) </description> </item> 

            <item><term> 
             
            HandPointActive </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            HideEnvelope </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            JointAngleReport </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            LegLength.Value </term> <description> 
             
            436.82 (millimeters part), 17.20 (inches part) </description> </item> 

            <item><term> 
             
            OccupantPosture </term> <description> 
             
            Sitting </description> </item> 

            <item><term> 
             
            PedalPlaneAngle.Value </term> <description> 
             
            51 </description> </item> 

            <item><term> 
             
            Position </term> <description> 
             
            Driver </description> </item> 

            <item><term> 
             
            SAEPercentile </term> <description> 
             
            J826Type95thPercentile </description> </item> 

            <item><term> 
             
            SeatDirection </term> <description> 
             
            Frontward </description> </item> 

            <item><term> 
             
            SgRPHeight.Value </term> <description> 
             
            650 (millimeters part), 25.6 (inches part) </description> </item> 

            <item><term> 
             
            SgRPLength.Value </term> <description> 
             
            1500 (millimeters part), 59 (inches part) </description> </item> 

            <item><term> 
             
            SgRPWidth.Value </term> <description> 
             
            -400 (millimeters part), -15.75 (inches part) </description> </item> 

            <item><term> 
             
            ShoulderToHipLength.Value </term> <description> 
             
            442 (millimeters part), 17.40 (inches part) </description> </item> 

            <item><term> 
             
            Standard </term> <description> 
             
            SAEJ826Jul1995 </description> </item> 

            <item><term> 
             
            ThighLength.Value </term> <description> 
             
            469.26 (millimeters part), 18.47 (inches part) </description> </item> 

            <item><term> 
             
            TorsoLength.Value </term> <description> 
             
            563 (millimeters part), 22.17 (inches part) </description> </item> 

            <item><term> 
             
            WheelAngle.Value </term> <description> 
             
            15 </description> </item> 

            <item><term> 
             
            WheelDiameter.Value </term> <description> 
             
            400 (millimeters part), 15.75 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ManikinBuilder : public NXOpen::Features::FeatureBuilder
            {
                /**the vehicle seat position type*/
                public: enum PositionType
                {
                    PositionTypeDriver/**Driver Type*/,
                    PositionTypePassenger/**Passenger Type*/
                };

                /**the vehicle classification type*/
                public: enum ClassificationType
                {
                    ClassificationTypeClassA/**Class A Classification Type. The type of vehicles includes passenger cars, vans, and light trucks.*/,
                    ClassificationTypeClassB/**Class B Classification Type. The type of vehicles includes heavy trucks, some buses and multipurpose passenger vehicles.*/,
                    ClassificationTypeClassHE/**Class HE Classification Type. The type of vehicles includes heavy trucks.*/,
                    ClassificationTypeClassAS/**Class AS Classification Type. The type of aero space.*/
                };

                /**the vehicle standard type*/
                public: enum StandardType
                {
                    StandardTypeSAEJ826Jul1995/**1995 SAE j826 Standard Type*/,
                    StandardTypeSaej833/**SAE j833 Standard Type*/,
                    StandardTypeUserDefined/**User Defined Manikin Size Type*/,
                    StandardTypeSAEJ826Nov2008/**2008 SAE j826 Standard Type*/,
                    StandardTypeSAEJ826Nov2015/**2015 SAE j826 Standard Type*/,
                    StandardTypeIso34112007/**ISO 3411:2007 Standard Type*/,
                    StandardTypeIso66821986/**ISO 6682:1986 Standard Type*/,
                    StandardTypeMilstd1333/**MIL STD 1333 Standard Type*/
                };

                /**the vehicle percentile type*/
                public: enum SAEPercentileType
                {
                    SAEPercentileTypeJ826Type95thPercentile/**95th Percentile SAE j826 Standard Type*/,
                    SAEPercentileTypeJ826Type50thPercentile/**50th Percentile SAE j826 Standard Type*/,
                    SAEPercentileTypeJ826Type10thPercentile/**10th Percentile SAE j826 Standard Type*/,
                    SAEPercentileTypeJ833LargeHuman95thMale/**Large Human SAE j833 Standard Type*/,
                    SAEPercentileTypeJ833MediumHumanHalfwayPosition/**Medium Human SAE j833 Standard Type*/,
                    SAEPercentileTypeJ833SmallHuman5thFemale/**Small Human SAE j833 Standard Type*/,
                    SAEPercentileTypeJ826TypeFMVSS208/**FMVSS208 SAE j826 Standard Type*/,
                    SAEPercentileTypeMIL1333Type95thPercentileMale/**95th Percentile Male MIL1333 Standard Type*/,
                    SAEPercentileTypeMIL1333Type95thPercentileFemale/**95th Percentile Female MIL1333 Standard Type*/,
                    SAEPercentileTypeMIL1333Type5thPercentileMale/**5th Percentile Male MIL1333 Standard Type*/,
                    SAEPercentileTypeMIL1333Type5thPercentileFemale/**5th Percentile Female MIL1333 Standard Type*/
                };

                /**the vehicle operator size*/
                public: enum OperatorSizeType
                {
                    OperatorSizeTypeSmall/**Small Operator*/,
                    OperatorSizeTypeMedium/**Medium Operator*/,
                    OperatorSizeTypeLarge/**Large Operator*/
                };

                /** This enum represents the options to define the occupant's seat direction type. */
                public: enum SeatDirectionOption
                {
                    SeatDirectionOptionFrontward/** Seat position driving direction. */,
                    SeatDirectionOptionBackward/** Seat position opposite to the driving direction. */,
                    SeatDirectionOptionLeft/** Seat directed towards the left side of the car. */,
                    SeatDirectionOptionRight/** Seat directed towards the right side of the car. */,
                    SeatDirectionOptionCustom/** Specify a custom value for the seat position (in deg). 1 to 180: Turning the seat rightwards; -1 to -180: Turning the seat leftwards. */
                };

                /** This enum represents the options to define the reference point to plane alignment method. */
                public: enum AlignmentMethods
                {
                    AlignmentMethodsProjectPerpendicular/** Project perpendicular */,
                    AlignmentMethodsProjectAlongY/** Project along Y axis*/,
                    AlignmentMethodsRotateAboutSgRP/** Rotate about SgRP */,
                    AlignmentMethodsDistanceFromSgRP/** Distance from SgRP */
                };

                /**the control type for class he and as*/
                public: enum DirectionControlType
                {
                    DirectionControlTypeWheel/**Wheel Type*/,
                    DirectionControlTypeStick/**Stick Type*/,
                    DirectionControlTypeHandlebar/**Handlebar Type*/
                };

                /**the occupant posture type*/
                public: enum PostureType
                {
                    PostureTypeSitting/** Sitting posture type*/,
                    PostureTypeStanding/** Standing posture type*/
                };

                private: ManikinBuilderImpl * m_manikinbuilder_impl;
                private: friend class  _ManikinBuilderBuilder;
                protected: ManikinBuilder();
                public: ~ManikinBuilder();
                /**Returns  the position of the manikin in the vehicle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::PositionType Position
                (
                );
                /**Sets  the position of the manikin in the vehicle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPosition
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::PositionType position /** position */ 
                );
                /**Returns  the classification of the vehicle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationType Classification
                (
                );
                /**Sets  the classification of the vehicle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClassification
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationType classification /** classification */ 
                );
                /**Returns  the name of the selected passenger. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Passenger
                (
                );
                /**Sets  the name of the selected passenger. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPassenger
                (
                    const NXString & passenger /** passenger */ 
                );
                /**Sets  the name of the selected passenger. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetPassenger
                (
                    const char * passenger /** passenger */ 
                );
                /**Returns  the standard used to define the manikin 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType Standard
                (
                );
                /**Sets  the standard used to define the manikin 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetStandard
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType standard /** standard */ 
                );
                /**Returns  the setting to indicate if posture values can be out of the standard range or not, 
                                true indicates the values can be out of range, false indicates the values cannot be out of range. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool AllowPostureValueOutOfRange
                (
                );
                /**Sets  the setting to indicate if posture values can be out of the standard range or not, 
                                true indicates the values can be out of range, false indicates the values cannot be out of range. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAllowPostureValueOutOfRange
                (
                    bool allowPostureValueOutOfRange /** allowposturevalueoutofrange */ 
                );
                /**Returns  the percentile limit that the manikin represents. 
                                If the Standard is set to @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSAEJ826Jul1995 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSAEJ826Jul1995@endlink ,
                                then the valid settings are: @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type95thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type95thPercentile@endlink ,
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type50thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type50thPercentile@endlink  and 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type10thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type10thPercentile@endlink .
                                If the standard is set to @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSaej833 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSaej833@endlink ,
                                then the valid settings are: @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833LargeHuman95thMale NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833LargeHuman95thMale@endlink ,
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833MediumHumanHalfwayPosition NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833MediumHumanHalfwayPosition@endlink  and
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833SmallHuman5thFemale NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833SmallHuman5thFemale@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileType SAEPercentile
                (
                );
                /**Sets  the percentile limit that the manikin represents. 
                                If the Standard is set to @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSAEJ826Jul1995 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSAEJ826Jul1995@endlink ,
                                then the valid settings are: @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type95thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type95thPercentile@endlink ,
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type50thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type50thPercentile@endlink  and 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type10thPercentile NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ826Type10thPercentile@endlink .
                                If the standard is set to @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSaej833 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeSaej833@endlink ,
                                then the valid settings are: @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833LargeHuman95thMale NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833LargeHuman95thMale@endlink ,
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833MediumHumanHalfwayPosition NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833MediumHumanHalfwayPosition@endlink  and
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833SmallHuman5thFemale NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileTypeJ833SmallHuman5thFemale@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSAEPercentile
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::SAEPercentileType sAEPercentile /** saepercentile */ 
                );
                /**Returns  the operator size. It is only used when the vehicle classification is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationTypeClassHE NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationTypeClassHE@endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::OperatorSizeType OperatorSize
                (
                );
                /**Sets  the operator size. It is only used when the vehicle classification is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationTypeClassHE NXOpen::Features::VehicleDesign::ManikinBuilder::ClassificationTypeClassHE@endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOperatorSize
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::OperatorSizeType operatorSize /** operatorsize */ 
                );
                /**Returns  the current manikin size string. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString CurrentManikinSize
                (
                );
                /**Sets  the current manikin size string. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCurrentManikinSize
                (
                    const NXString & currentManikinSize /** currentmanikinsize */ 
                );
                /**Sets  the current manikin size string. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetCurrentManikinSize
                (
                    const char * currentManikinSize /** currentmanikinsize */ 
                );
                /**Returns  the thigh length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ThighLength
                (
                );
                /**Returns  the leg length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * LegLength
                (
                );
                /**Returns  the arm length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ArmLength
                (
                );
                /**Returns  the forearm length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ForearmLength
                (
                );
                /**Returns  the torso length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * TorsoLength
                (
                );
                /**Returns  the shoulder to hip length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ShoulderToHipLength
                (
                );
                /**Returns  the hand length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HandLength
                (
                );
                /**Returns  the hand grip length. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HandGripLength
                (
                );
                /** Save the manikin size definition into a file. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SaveToFile
                (
                    const NXString & filename /** filename */ 
                );
                /** Save the manikin size definition into a file. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SaveToFile
                (
                    const char * filename /** filename */ 
                );
                /** Update the manikin size definition from a file. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void OpenFromFile
                (
                    const NXString & filename /** filename */ 
                );
                /** Update the manikin size definition from a file. It is only used when the vehicle standard type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeUserDefined@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void OpenFromFile
                (
                    const char * filename /** filename */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType@endlink  for occupant posture. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType OccupantPosture
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType@endlink  for occupant posture. 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOccupantPosture
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::PostureType occupantPosture /** occupantposture */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption@endlink  for the direction that occupant is facing. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption SeatDirection
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption@endlink  for the direction that occupant is facing. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSeatDirection
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::SeatDirectionOption seatDirection /** seatdirection */ 
                );
                /**Returns  the seat angle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SeatAngle
                (
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods@endlink  for point to plane alignment method. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods AlignmentMethod
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods@endlink  for point to plane alignment method. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAlignmentMethod
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::AlignmentMethods alignmentMethod /** alignmentmethod */ 
                );
                /**Returns  the SgRP length 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgRPLength
                (
                );
                /**Returns  the SgRP width 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgRPWidth
                (
                );
                /**Returns  the SgRP height 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SgRPHeight
                (
                );
                /**Returns  the back angle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * BackAngle
                (
                );
                /**Returns  the hide seat envelope option toggle. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HideEnvelope
                (
                );
                /**Sets  the hide seat envelope option toggle. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHideEnvelope
                (
                    bool hideEnvelope /** hideenvelope */ 
                );
                /**Returns  the AHP length 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPLength
                (
                );
                /**Returns  the AHP height 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPHeight
                (
                );
                /**Returns  the seat reference point to floor reference point width. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToAHPWidth
                (
                );
                /**Returns  the distance length from seat reference point to floor reference point measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToAHPLengthDistance
                (
                );
                /**Returns  the distance height from seat reference point to floor reference point measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToAHPHeightDistance
                (
                );
                /**Returns  the pedal plane angle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * PedalPlaneAngle
                (
                );
                /**Returns  the he and as vehicle's control type. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ManikinBuilder::DirectionControlType DirectionControl
                (
                );
                /**Sets  the he and as vehicle's control type. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDirectionControl
                (
                    NXOpen::Features::VehicleDesign::ManikinBuilder::DirectionControlType directionControl /** directioncontrol */ 
                );
                /**Returns  the AHP to Steering Wheel Center length. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToSWCLength
                (
                );
                /**Returns  the AHP to Steering Wheel Center height. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToSWCHeight
                (
                );
                /**Returns  the seat reference point to steering wheel center width. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToSWCWidth
                (
                );
                /**Returns  the distance length from seat reference point to steering wheel center measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToSWCLengthDistance
                (
                );
                /**Returns  the distance height from seat reference point to steering wheel center measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToSWCHeightDistance
                (
                );
                /**Returns  the wheel diameter. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * WheelDiameter
                (
                );
                /**Returns  the wheel angle. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink . 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * WheelAngle
                (
                );
                /**Returns  the create steering wheel option toggle. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateSteeringWheel
                (
                );
                /**Sets  the create steering wheel option toggle. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateSteeringWheel
                (
                    bool createSteeringWheel /** createsteeringwheel */ 
                );
                /**Returns  the AHP to GCP Length. It is only used when the vehicle style type is set to stick
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToGCPLength
                (
                );
                /**Returns  the AHP to GCP height. It is only used when the vehicle style type is set to stick
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToGCPHeight
                (
                );
                /**Returns  the seat reference point to GCP width. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPWidth
                (
                );
                /**Returns  the distance length from seat reference point to GCP measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPLengthDistance
                (
                );
                /**Returns  the distance height from seat reference point to GCP measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPHeightDistance
                (
                );
                /**Returns  the AHP to GCP point height. It is only used when the vehicle style type is set to stick
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GripDiameter
                (
                );
                /**Returns  the grip forward angle
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GripForwardAngle
                (
                );
                /**Returns  the grip sideway angle
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GripSidewaysAngle
                (
                );
                /**Returns  the create stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateStickLever
                (
                );
                /**Sets  the create stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateStickLever
                (
                    bool createStickLever /** createsticklever */ 
                );
                /**Returns  the active second stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ActiveStickSecondLever
                (
                );
                /**Sets  the active second stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetActiveStickSecondLever
                (
                    bool activeStickSecondLever /** activesticksecondlever */ 
                );
                /**Returns  the AHP to SGCP Length. It is only used when the second stick is active 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToGCPLengthSecond
                (
                );
                /**Returns  the AHP to SGCP height. It is only used when the second stick is active 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AHPToGCPHeightSecond
                (
                );
                /**Returns  the seat reference point to SGCP width. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPWidthSecond
                (
                );
                /**Returns  the distance length from seat reference point to SGCP measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPLengthDistanceSecond
                (
                );
                /**Returns  the distance height from seat reference point to SGCP measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToGCPHeightDistanceSecond
                (
                );
                /**Returns  the second grip forward angle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GripForwardAngleSecondLever
                (
                );
                /**Returns  the second grip sideway angle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GripSidewaysAngleSecondLever
                (
                );
                /**Returns  the create second stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateStickSecondLever
                (
                );
                /**Sets  the create second stick lever option toggle. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateStickSecondLever
                (
                    bool createStickSecondLever /** createsticksecondlever */ 
                );
                /**Returns  the toggle whether the hand center point is used. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HandPointActive
                (
                );
                /**Sets  the toggle whether the hand center point is used. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHandPointActive
                (
                    bool handPointActive /** handpointactive */ 
                );
                /**Returns  the floor reference point to hand center point length. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FRPToHCPLength
                (
                );
                /**Returns  the floor reference point to hand center point height. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FRPToHCPHeight
                (
                );
                /**Returns  the seat reference point to hand center point width. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToHCPWidth
                (
                );
                /**Returns  the distance length from seat reference point to hand center point measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToHCPLengthDistance
                (
                );
                /**Returns  the distance height from seat reference point to hand center point measured in manikin plane. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SRPToHCPHeightDistance
                (
                );
                /**Returns  the driving posture check. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink 
                                and vehicle SAE percentile type is not small human type. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool DrivingPostureCheck
                (
                );
                /**Sets  the driving posture check. It is only used when the vehicle style type is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver NXOpen::Features::VehicleDesign::ManikinBuilder::PositionTypeDriver@endlink 
                                and vehicle SAE percentile type is not small human type. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDrivingPostureCheck
                (
                    bool drivingPostureCheck /** drivingposturecheck */ 
                );
                /**Returns  the joint angle report 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool JointAngleReport
                (
                );
                /**Sets  the joint angle report 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetJointAngleReport
                (
                    bool jointAngleReport /** jointanglereport */ 
                );
                /**Returns  the option toggle to create hand control location zone - zone of comfort.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateHandComfort
                (
                );
                /**Sets  the option toggle to create hand control location zone - zone of comfort.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateHandComfort
                (
                    bool createHandComfort /** createhandcomfort */ 
                );
                /**Returns  the option toggle to create hand control location zone - zone of reach.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateHandReach
                (
                );
                /**Sets  the option toggle to create hand control location zone - zone of reach.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateHandReach
                (
                    bool createHandReach /** createhandreach */ 
                );
                /**Returns  the option toggle to create foot control location zone - zone of comfort.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateFootComfort
                (
                );
                /**Sets  the option toggle to create foot control location zone - zone of comfort.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateFootComfort
                (
                    bool createFootComfort /** createfootcomfort */ 
                );
                /**Returns  the option toggle to create foot control location zone - zone of reach.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateFootReach
                (
                );
                /**Sets  the option toggle to create foot control location zone - zone of reach.
                                It is only used when the @link  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType  NXOpen::Features::VehicleDesign::ManikinBuilder::StandardType@endlink  is set to 
                                @link NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986 NXOpen::Features::VehicleDesign::ManikinBuilder::StandardTypeIso66821986@endlink  
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateFootReach
                (
                    bool createFootReach /** createfootreach */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
