#ifndef NXOpen_CAE_CURVEOPERATIONDATASOURCE_HXX_INCLUDED
#define NXOpen_CAE_CURVEOPERATIONDATASOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CurveOperationDataSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CurveOperationDataSource;
    }
    class NXObject;
    namespace CAE
    {
        class _CurveOperationDataSourceBuilder;
        class CurveOperationDataSourceImpl;
        /** Represents the abstract class of data source for curve operation.  <br> Not support KF.  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CurveOperationDataSource : public NXOpen::NXObject
        {
            private: CurveOperationDataSourceImpl * m_curveoperationdatasource_impl;
            private: friend class  _CurveOperationDataSourceBuilder;
            protected: CurveOperationDataSource();
            public: ~CurveOperationDataSource();
            /**Returns  the description of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the identifier of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Identifier
            (
            );
            /**Sets  the identifier of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIdentifier
            (
                const NXString & identifier /** identifier */ 
            );
            /**Sets  the identifier of data source. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetIdentifier
            (
                const char * identifier /** identifier */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
