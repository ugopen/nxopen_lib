#ifndef NXOpen_PRESSLINESIMULATION_GENERATETRACKCURVEBUILDER_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_GENERATETRACKCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_GenerateTrackCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class GenerateTrackCurveBuilder;
    }
    class Builder;
    class Point;
    namespace PressLineSimulation
    {
        class _GenerateTrackCurveBuilderBuilder;
        class GenerateTrackCurveBuilderImpl;
        /**  Represents a @link PressLineSimulation::GenerateTrackCurveBuilder PressLineSimulation::GenerateTrackCurveBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::PressLineSimulation::ApplicationManager::CreateGenerateTrackCurveBuilder  NXOpen::PressLineSimulation::ApplicationManager::CreateGenerateTrackCurveBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CurveFrom </term> <description> 
         
        UserDefinedPoint </description> </item> 

        <item><term> 
         
        EndAngle </term> <description> 
         
        360 </description> </item> 

        <item><term> 
         
        Increment </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        IsAssociative </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        StartAngle </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  GenerateTrackCurveBuilder : public NXOpen::Builder
        {
            /** the creation type of the track curve builder*/
            public: enum CurveType
            {
                CurveTypeUserDefinedPoint/** user defined point */ ,
                CurveTypeToolCenterPoint/** tool center point */ 
            };

            private: GenerateTrackCurveBuilderImpl * m_generatetrackcurvebuilder_impl;
            private: friend class  _GenerateTrackCurveBuilderBuilder;
            protected: GenerateTrackCurveBuilder();
            public: ~GenerateTrackCurveBuilder();
            /**Returns  the creation type property of the track curve builder
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::GenerateTrackCurveBuilder::CurveType CurveFrom
            (
            );
            /**Sets  the creation type property of the track curve builder
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") OR nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetCurveFrom
            (
                NXOpen::PressLineSimulation::GenerateTrackCurveBuilder::CurveType curveType /** curvetype */ 
            );
            /**Returns  the dispay name of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DispayName
            (
            );
            /**Sets  the dispay name of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDispayName
            (
                const NXString & dispayName /** dispayname */ 
            );
            /**Sets  the dispay name of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            void SetDispayName
            (
                const char * dispayName /** dispayname */ 
            );
            /**Returns  the start angle of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double StartAngle
            (
            );
            /**Sets  the start angle of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStartAngle
            (
                double startAngle /** startangle */ 
            );
            /**Returns  the increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double Increment
            (
            );
            /**Sets  the increment 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIncrement
            (
                double increment /** increment */ 
            );
            /**Returns  the end angle of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double EndAngle
            (
            );
            /**Sets  the end angle of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndAngle
            (
                double endAngle /** endangle */ 
            );
            /**Returns  the associativity property of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsAssociative
            (
            );
            /**Sets  the associativity property of the track curve
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool isAssociative /** isassociative */ 
            );
            /**Returns  the select point property
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the select point property
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectPoint
            (
                NXOpen::Point * selectPoint /** selectpoint */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
