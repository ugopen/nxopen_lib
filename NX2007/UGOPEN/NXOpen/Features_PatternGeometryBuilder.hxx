#ifndef NXOpen_FEATURES_PATTERNGEOMETRYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_PATTERNGEOMETRYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_PatternGeometryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_PatternDefinition.hxx>
#include <NXOpen/GeometricUtilities_PatternReferencePointServiceBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class PatternGeometryBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class PatternDefinition;
    }
    namespace GeometricUtilities
    {
        class PatternReferencePointServiceBuilder;
    }
    class SelectDisplayableObjectList;
    namespace Features
    {
        class _PatternGeometryBuilderBuilder;
        class PatternGeometryBuilderImpl;
        /**
            This class represents the builder to be used to create Pattern Geometry features.
             Inputs to this class can be convergent objects.
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreatePatternGeometryBuilder  NXOpen::Features::FeatureCollection::CreatePatternGeometryBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CopyThreads </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        HideOriginal </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsAssociative </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.XOnPathSpacing.NCopies.Value </term> <description> 
         
        2 </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.XOnPathSpacing.SpaceType </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.XPathOption </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YDirectionOption </term> <description> 
         
        Section </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YOnPathSpacing.NCopies.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YPathOption </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YSpacing.NCopies.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YSpacing.PitchDistance.Value </term> <description> 
         
        10 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YSpacing.SpaceType </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.AlongPathDefinition.YSpacing.SpanDistance.Value </term> <description> 
         
        100 (millimeters part), 10 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.NCopies.Value </term> <description> 
         
        12 </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.PitchAngle.Value </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.PitchDistance.Value </term> <description> 
         
        10 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.SpaceType </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.SpanAngle.Value </term> <description> 
         
        360 (millimeters part), 360 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.AngularSpacing.UsePitchOption </term> <description> 
         
        Angle </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.CreateLastStaggered </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.HorizontalRef.RotationAngle.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.IncludeSeedToggle </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.RadialSpacing.NCopies.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.CircularDefinition.StaggerType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.AnglePitch.Value </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.CountOfInstances.Value </term> <description> 
         
        6 </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.DirectionType </term> <description> 
         
        Righthand </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.DistancePitch.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.HelixPitch.Value </term> <description> 
         
        50 (millimeters part), 2 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.HelixSpan.Value </term> <description> 
         
        100 (millimeters part), 4 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.NumberOfTurns.Value </term> <description> 
         
        2 </description> </item> 

        <item><term> 
         
        PatternService.HelixDefinition.SizeOption </term> <description> 
         
        CountAngleDistance </description> </item> 

        <item><term> 
         
        PatternService.PatternFill.FillMargin.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.PatternFill.FillOptions </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        PatternService.PatternFill.SimplifiedBoundaryToggle </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.AlongOrientationOption </term> <description> 
         
        NormalToPath </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.CircularOrientationOption </term> <description> 
         
        FollowPattern </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.FollowFaceProjDirOption </term> <description> 
         
        PatternPlaneNormal </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.GeneralOrientationOption </term> <description> 
         
        Fixed </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.HelixOrientationOption </term> <description> 
         
        FollowPattern </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.LinearOrientationOption </term> <description> 
         
        Fixed </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.MirrorOrientationOption </term> <description> 
         
        FollowPattern </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.OrientationOption </term> <description> 
         
        Fixed </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.PolygonOrientationOption </term> <description> 
         
        FollowPattern </description> </item> 

        <item><term> 
         
        PatternService.PatternOrientation.SpiralOrientationOption </term> <description> 
         
        FollowPattern </description> </item> 

        <item><term> 
         
        PatternService.PatternType </term> <description> 
         
        Linear </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.NumberOfSides.Value </term> <description> 
         
        6 </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.PolygonSizeOption </term> <description> 
         
        Inscribed </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.PolygonSpacing.NCopies.Value </term> <description> 
         
        4 </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.PolygonSpacing.PitchDistance.Value </term> <description> 
         
        25 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.PolygonSpacing.SpaceType </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.PolygonSpacing.SpanAngle.Value </term> <description> 
         
        360 </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.RadialSpacing.NCopies.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.RadialSpacing.PitchDistance.Value </term> <description> 
         
        25 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.PolygonDefinition.RadialSpacing.SpanDistance.Value </term> <description> 
         
        100 (millimeters part), 4 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.RectangularDefinition.CreateLastStaggered </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        PatternService.RectangularDefinition.SimplifiedLayoutType </term> <description> 
         
        Square </description> </item> 

        <item><term> 
         
        PatternService.RectangularDefinition.StaggerType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        PatternService.RectangularDefinition.XSpacing.NCopies.Value </term> <description> 
         
        2 </description> </item> 

        <item><term> 
         
        PatternService.RectangularDefinition.YSpacing.NCopies.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PatternService.SpiralDefinition.DirectionType </term> <description> 
         
        Lefthand </description> </item> 

        <item><term> 
         
        PatternService.SpiralDefinition.NumberOfTurns.Value </term> <description> 
         
        1 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.SpiralDefinition.RadialPitch.Value </term> <description> 
         
        50 (millimeters part), 2 (inches part) </description> </item> 

        <item><term> 
         
        PatternService.SpiralDefinition.SizeSpiralType </term> <description> 
         
        NumberOfTurns </description> </item> 

        <item><term> 
         
        PatternService.SpiralDefinition.TotalAngle.Value </term> <description> 
         
        360 (millimeters part), 360 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  PatternGeometryBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: PatternGeometryBuilderImpl * m_patterngeometrybuilder_impl;
            private: friend class  _PatternGeometryBuilderBuilder;
            protected: PatternGeometryBuilder();
            public: ~PatternGeometryBuilder();
            /**Returns  the inputs for geometry to pattern
                        such as bodies, faces, curves, datum planes, datum axes, points, datum coordinate systems etc...
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * GeometryToPattern
            (
            );
            /**Returns  the reference point service.
                        It contains the point of reference that will be used as the origin for creating pattern based transformations. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternReferencePointServiceBuilder * ReferencePoint
            (
            );
            /**Returns  the Pattern Defintion service.
                        Inputs for different transformation types 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternDefinition * PatternService
            (
            );
            /**Returns  the associative option. 
                        'true' if pattern geometry feature needs to be created
                        'false' if only the outputs of the pattern geometry feature is required. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsAssociative
            (
            );
            /**Sets  the associative option. 
                        'true' if pattern geometry feature needs to be created
                        'false' if only the outputs of the pattern geometry feature is required. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAssociative
            (
                bool isAssociative /** isassociative */ 
            );
            /**Returns  the hide original option.
                        'true' if the input to the pattern geometry needs to be hidden
                        'false' if the input to pattern geometry need not be hidden 
                         Note: false does not indicate the inputs that were hidden will be unhidden. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool HideOriginal
            (
            );
            /**Sets  the hide original option.
                        'true' if the input to the pattern geometry needs to be hidden
                        'false' if the input to pattern geometry need not be hidden 
                         Note: false does not indicate the inputs that were hidden will be unhidden. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetHideOriginal
            (
                bool isHideOriginal /** ishideoriginal */ 
            );
            /**Returns  the copy threads option.
                        'true' if the threads on the input body also need to be patterned 
                        'false' if the threads need not be patterned along with the input body
                         Note: the copy threads option can be 'true' only when the associative option is also set to 'true' 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CopyThreads
            (
            );
            /**Sets  the copy threads option.
                        'true' if the threads on the input body also need to be patterned 
                        'false' if the threads need not be patterned along with the input body
                         Note: the copy threads option can be 'true' only when the associative option is also set to 'true' 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCopyThreads
            (
                bool isCopyThreads /** iscopythreads */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
