#ifndef NXOpen_CAE_ACOUSTICS_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Acoustics.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class Acoustics;
    }
    namespace CAE
    {
        class SimSimulation;
    }
    namespace CAE
    {
        class AcousticsPanelGenerator;
    }
    namespace CAE
    {
        class CaeRegion;
    }
    namespace CAE
    {
        class AcousticsImpl;
        /** Represents the acoustics manager.  <br> To obtain an instance of this class, refer to @link NXOpen::CAE::SimSimulation  NXOpen::CAE::SimSimulation @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  Acoustics
        {
            private: AcousticsImpl * m_acoustics_impl;
            private: NXOpen::CAE::SimSimulation* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit Acoustics(NXOpen::CAE::SimSimulation *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~Acoustics();
            /** Imports specific duct modes from csv file.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void ImportSpecificDuctModes
            (
                NXOpen::CAE::CaeRegion * ductInletRegion /** ductinletregion */ ,
                const NXString & csvFileName /** csvfilename */ 
            );
            /** Imports specific duct modes from csv file.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void ImportSpecificDuctModes
            (
                NXOpen::CAE::CaeRegion * ductInletRegion /** ductinletregion */ ,
                const char * csvFileName /** csvfilename */ 
            );

            /// \cond NX_NO_DOC 
            /** Computes loudness from 1/3 octaves SPLs 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double ComputeLoudness
            (
                const std::vector<double> & frequencyValues /** frequencyvalues */ ,
                const std::vector<double> & pressureValues /** pressurevalues */ 
            );

            /// \endcond 


            /** Returns the @link NXOpen::CAE::AcousticsPanelGenerator NXOpen::CAE::AcousticsPanelGenerator@endlink . 
             <br>  Created in NX2007.0.0.  <br>  
            */
            public: NXOpen::CAE::AcousticsPanelGenerator *PanelGenerator();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
