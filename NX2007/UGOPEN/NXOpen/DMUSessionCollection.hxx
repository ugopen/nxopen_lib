#ifndef NXOpen_DMUSESSIONCOLLECTION_HXX_INCLUDED
#define NXOpen_DMUSESSIONCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DMUSessionCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ComponentReferenceCollector.hxx>
#include <NXOpen/DesignSessionBuilder.hxx>
#include <NXOpen/PDM_DatabaseObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DMUSessionCollection;
    class Session;
    namespace Assemblies
    {
        class Component;
    }
    class ComponentReferenceCollector;
    class DesignSessionBuilder;
    namespace PDM
    {
        class DatabaseObject;
    }
    class Part;
    class DMUSessionCollectionImpl;
    /**  @brief  Represents a Design Session utilities class.  

       <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Created in NX1953.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  DMUSessionCollection
    {
        private: DMUSessionCollectionImpl * m_dmusessioncollection_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit DMUSessionCollection(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~DMUSessionCollection();
        /** Creates a new Design Session. 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
        public: void CreateDesignSession
        (
            const NXString & referencePart /** File specs of the reference part */
        );
        /** Creates a new Design Session. 
         <br>  Created in NX1953.0.0.  <br>  
         <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
        void CreateDesignSession
        (
            const char * referencePart /** File specs of the reference part */
        );
        /** Opens a Design Session. 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void OpenDesignSession
        (
            NXOpen::PDM::DatabaseObject * databaseObject /** Database Object of the session to be opened */
        );
        /** Given an array of component, this API will add those component in TC interop session recipe delta 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void DesignSessionIncludeComponentsInRecipe
        (
            NXOpen::Part * dmusessionPartTag /** dmusessionparttag */ ,
            const std::vector<NXOpen::Assemblies::Component *> & componentsToInclude /**  Array of part occurrences */
        );
        /** Given an array of component, this API will remove those component from TC interop session recipe delta
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void DesignSessionExcludeComponentsFromRecipe
        (
            NXOpen::Part * dmusessionPartTag /** dmusessionparttag */ ,
            const std::vector<NXOpen::Assemblies::Component *> & componentsToExclude /** Array of part occurrences*/
        );
        /** Opens a Design session with selected components. 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void OpenDesignSessionWithSelectedComponents
        (
            NXOpen::PDM::DatabaseObject * databaseObject /** Database Object of the session to be opened */,
            NXOpen::ComponentReferenceCollector * componentReferenceCollector /** List of the selected components */
        );
        /** Gets the @link NXOpen::ComponentReferenceCollector NXOpen::ComponentReferenceCollector@endlink  object.  @return  
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ComponentReferenceCollector * GetComponentReferenceCollector
        (
        );
        /** Creates a @link NXOpen::DesignSessionBuilder NXOpen::DesignSessionBuilder@endlink .  
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
        public: NXOpen::DesignSessionBuilder * CreateDesignSessionBuilder
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
