#ifndef NXOpen_CAE_ROTORDYNAMICS_MERGE_HXX_INCLUDED
#define NXOpen_CAE_ROTORDYNAMICS_MERGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_RotorDynamics_Merge.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace RotorDynamics
        {
            class Merge;
        }
    }
    class Session;
    namespace CAE
    {
        namespace RotorDynamics
        {
            class MergeImpl;
            /** Results Merge for Rotor Dynamics  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
             <br>  Created in NX2007.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Merge
            {
                private: MergeImpl * m_merge_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit Merge(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static Merge* theMerge;
                /** Returns the Merge object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static Merge* GetMerge(NXOpen::Session *owner);
                public: ~Merge();
                /** Merge the Results 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString CompleteMerge
                (
                    std::vector<NXString> & u18Names /** u18names */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableFolderChoice /** executablefolderchoice */ ,
                    const NXString & executableFolder /** executablefolder */ ,
                    const NXString & configVar /** configvar */ ,
                    const NXString & outputName /** outputname */ 
                );
                /** Merge the Results 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                NXString CompleteMerge
                (
                    std::vector<NXString> & u18Names /** u18names */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableFolderChoice /** executablefolderchoice */ ,
                    const char * executableFolder /** executablefolder */ ,
                    const char * configVar /** configvar */ ,
                    const char * outputName /** outputname */ 
                );
                /** Merge the Results 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString CompleteMerge2
                (
                    std::vector<NXString> & u18Names /** u18names */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableFolderChoice /** executablefolderchoice */ ,
                    bool theAskQualification /** theaskqualification */ ,
                    const NXString & executableFolder /** executablefolder */ ,
                    const NXString & configVar /** configvar */ ,
                    const NXString & outputName /** outputname */ 
                );
                /** Merge the Results 
                 <br>  Created in NX2007.0.0.  <br>  
                 <br> License requirements : None */
                NXString CompleteMerge2
                (
                    std::vector<NXString> & u18Names /** u18names */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableFolderChoice /** executablefolderchoice */ ,
                    bool theAskQualification /** theaskqualification */ ,
                    const char * executableFolder /** executablefolder */ ,
                    const char * configVar /** configvar */ ,
                    const char * outputName /** outputname */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
