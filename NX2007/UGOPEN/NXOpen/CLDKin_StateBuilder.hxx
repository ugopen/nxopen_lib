#ifndef NXOpen_CLDKIN_STATEBUILDER_HXX_INCLUDED
#define NXOpen_CLDKIN_STATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CLDKin_StateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libcldkinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CLDKin
    {
        class StateBuilder;
    }
    class Builder;
    class SelectTaggedObject;
    namespace CLDKin
    {
        class _StateBuilderBuilder;
        class StateBuilderImpl;

        /// \cond NX_NO_DOC 
        /**    <br> To create a new instance of this class, use @link NXOpen::CLDKin::CldKinematicsManager::CreateStateBuilder  NXOpen::CLDKin::CldKinematicsManager::CreateStateBuilder @endlink  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class CLDKINOPENCPPEXPORT  StateBuilder : public NXOpen::Builder
        {
            private: StateBuilderImpl * m_statebuilder_impl;
            private: friend class  _StateBuilderBuilder;
            protected: StateBuilder();
            public: ~StateBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the select comp group 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * SelectedDeviceGroup
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the group state name string 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StateName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the group state name string 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStateName
            (
                const NXString & stateName /** statename */ 
            );
            /**Sets  the group state name string 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            void SetStateName
            (
                const char * stateName /** statename */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
