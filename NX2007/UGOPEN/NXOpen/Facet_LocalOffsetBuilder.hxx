#ifndef NXOpen_FACET_LOCALOFFSETBUILDER_HXX_INCLUDED
#define NXOpen_FACET_LOCALOFFSETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_LocalOffsetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/FacetCollector.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class LocalOffsetBuilder;
    }
    class Builder;
    class Expression;
    class FacetCollector;
    namespace Facet
    {
        class _LocalOffsetBuilderBuilder;
        class LocalOffsetBuilderImpl;
        /** Represents a @link NXOpen::Facet::LocalOffsetBuilder NXOpen::Facet::LocalOffsetBuilder@endlink .
                This class adds or removes material on facet bodies by creating local offsets. <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateLocalOffsetBuilder  NXOpen::Facet::FacetModelingCollection::CreateLocalOffsetBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        IsEditCopy </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsSmoothEdge </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        OffsetDistance.Value </term> <description> 
         
        5 (millimeters part), 0.2 (inches part) </description> </item> 

        <item><term> 
         
        RegionDistance.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        ShapeMethod </term> <description> 
         
        Smooth </description> </item> 

        <item><term> 
         
        TransitionMethod </term> <description> 
         
        None </description> </item> 

        </list> 

         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  LocalOffsetBuilder : public NXOpen::Builder
        {
            /** Transition Region Definition */
            public: enum TransitionMethodType
            {
                TransitionMethodTypeNone/** None creates an offset without a transition region.*/,
                TransitionMethodTypeByConstantOffset/** Constant offset creates a transition region of constant distance.*/,
                TransitionMethodTypeByRegionSelection/** Region selection allows the user to select transtion regions.*/
            };

            /** Continuity Method */
            public: enum ShapeMethodType
            {
                ShapeMethodTypeSharp/** Sharp specifies a transition region without smoothing.*/,
                ShapeMethodTypeSmooth/** Smooth specifies a transition region with smoothing.*/
            };

            private: LocalOffsetBuilderImpl * m_localoffsetbuilder_impl;
            private: friend class  _LocalOffsetBuilderBuilder;
            protected: LocalOffsetBuilder();
            public: ~LocalOffsetBuilder();
            /**Returns  the facets to be offset 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::FacetCollector * FacetRegion
            (
            );
            /**Returns  the method to reverse the direction of the offset. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsReverseDirection
            (
            );
            /**Sets  the method to reverse the direction of the offset. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetReverseDirection
            (
                bool isReverseDirection /** isreversedirection */ 
            );
            /**Returns  the linear distance of the created local offset, which may be a positive or negative distance 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetDistance
            (
            );
            /**Returns  the type of transition region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::LocalOffsetBuilder::TransitionMethodType TransitionMethod
            (
            );
            /**Sets  the type of transition region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetTransitionMethod
            (
                NXOpen::Facet::LocalOffsetBuilder::TransitionMethodType transitionMethod /** transitionmethod */ 
            );
            /**Returns  the distance of the transition region with the constant offset option 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RegionDistance
            (
            );
            /**Returns  the option to rebuild the mesh structure of the offset output 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsRegenerateOffsetMesh
            (
            );
            /**Sets  the option to rebuild the mesh structure of the offset output 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetRegenerateOffsetMesh
            (
                bool isRegenerateOffsetMesh /** isregenerateoffsetmesh */ 
            );
            /**Returns  the user-selected transition regions 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::FacetCollector * FacetTransitionRegions
            (
            );
            /**Returns  the method to define the shape of the transition region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::LocalOffsetBuilder::ShapeMethodType ShapeMethod
            (
            );
            /**Sets  the method to define the shape of the transition region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetShapeMethod
            (
                NXOpen::Facet::LocalOffsetBuilder::ShapeMethodType shapeMethod /** shapemethod */ 
            );
            /**Returns  the option to create a non-associative copy of the selected body and edit that copy 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsEditCopy
            (
            );
            /**Sets  the option to create a non-associative copy of the selected body and edit that copy 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetEditCopy
            (
                bool isEditCopy /** iseditcopy */ 
            );
            /**Returns  the option to add smoothing to the edge of the offset region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsSmoothEdge
            (
            );
            /**Sets  the option to add smoothing to the edge of the offset region 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetSmoothEdge
            (
                bool isSmoothEdge /** issmoothedge */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
