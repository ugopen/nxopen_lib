#ifndef NXOpen_TOOLING_MOLDWIZARDMANAGER_HXX_INCLUDED
#define NXOpen_TOOLING_MOLDWIZARDMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MoldwizardManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Tooling_BomListDataProvider.hxx>
#include <NXOpen/Tooling_CostTableDataProvider.hxx>
#include <NXOpen/Tooling_RasterImageBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class MoldwizardManager;
    }
    namespace Tooling
    {
        class ToolingManager;
    }
    namespace Annotations
    {
        class SimpleDraftingAid;
    }
    namespace Display
    {
        class RasterImage;
    }
    namespace Tooling
    {
        class BomListBuilder;
    }
    namespace Tooling
    {
        class BomListDataProvider;
    }
    namespace Tooling
    {
        class ColorExpressionsBuilder;
    }
    namespace Tooling
    {
        class ConformalCircuitBuilder;
    }
    namespace Tooling
    {
        class ConformalOffsetBuilder;
    }
    namespace Tooling
    {
        class CopySolidBuilder;
    }
    namespace Tooling
    {
        class CostTableDataProvider;
    }
    namespace Tooling
    {
        class CreateMoldDesignReportBuilder;
    }
    namespace Tooling
    {
        class DesignEjectorPinBuilder;
    }
    namespace Tooling
    {
        class EditCoolingCurveBuilder;
    }
    namespace Tooling
    {
        class EjectorTableBuilder;
    }
    namespace Tooling
    {
        class FeatureReferenceSetBuilder;
    }
    namespace Tooling
    {
        class InsertBarcodeBuilder;
    }
    namespace Tooling
    {
        class InsertQRBarCodeBuilder;
    }
    namespace Tooling
    {
        class InsertTextBuilder;
    }
    namespace Tooling
    {
        class MoldFeatureRecognitionBuilder;
    }
    namespace Tooling
    {
        class MoldFillingBuilder;
    }
    namespace Tooling
    {
        class MoldInsertDesignBuilder;
    }
    namespace Tooling
    {
        class RasterImageBuilder;
    }
    namespace Tooling
    {
        class ReferenceCopyBuilder;
    }
    namespace Tooling
    {
        class SheetMetalFeatureRecognitionBuilder;
    }
    namespace Tooling
    {
        class StampingProcessRecognitionBuilder;
    }
    namespace Tooling
    {
        class VentingDesignBuilder;
    }
    namespace Tooling
    {
        class MoldwizardManagerImpl;
        /** Provides create builder methods for Moldwizard.   <br> To obtain an instance of this class, refer to @link NXOpen::Tooling::ToolingManager  NXOpen::Tooling::ToolingManager @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  MoldwizardManager
        {
            private: MoldwizardManagerImpl * m_moldwizardmanager_impl;
            private: NXOpen::Tooling::ToolingManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit MoldwizardManager(NXOpen::Tooling::ToolingManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~MoldwizardManager();
            /** Creates Ejector Pin Table builder. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::EjectorTableBuilder * CreateEjectorTableBuilder
            (
            );
            /** Creates Bom List builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::BomListBuilder * CreateBomListBuilder
            (
            );
            /** Creates Mold Filling builder. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::MoldFillingBuilder * CreateMoldFillingBuilder
            (
            );
            /** Creates a data provider for BOM list.  @return @link  Tooling::BomListDataProvider  Tooling::BomListDataProvider@endlink  object object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::BomListDataProvider * CreateBomListDataProvider
            (
            );
            /** Creates Copy Solid builder. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::CopySolidBuilder * CreateCopySolidBuilder
            (
            );
            /** Creates mold feature recognition builder. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::MoldFeatureRecognitionBuilder * CreateMoldFeatureRecognitionBuilder
            (
            );
            /** Creates sheet metal feature recognition builder. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::SheetMetalFeatureRecognitionBuilder * CreateSheetMetalFeatureRecognitionBuilder
            (
            );
            /** Creates a data provider for cost feature data.  @return @link  Tooling::CostTableDataProvider  Tooling::CostTableDataProvider@endlink  object object 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CostTableDataProvider * CreateCostFeatureDataProvider
            (
            );
            /** Creates Color Expressions builder. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::ColorExpressionsBuilder * CreateColorExpressionsBuilder
            (
            );
            /** Creates Featrue Reference Set builder. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::FeatureReferenceSetBuilder * CreateFeatureReferenceSetBuilder
            (
            );
            /** Creates Reference Copy builder. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::ReferenceCopyBuilder * CreateReferenceCopyBuilder
            (
            );
            /** Creates Mold Design Report builder. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CreateMoldDesignReportBuilder * CreateMoldDesignReportBuilder
            (
            );
            /** Creates Design Ejector Pin builder. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::DesignEjectorPinBuilder * CreateDesignEjectorPinBuilder
            (
            );
            /** Creates Mold Insert Design builder. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::MoldInsertDesignBuilder * CreateMoldInsertDesignBuilder
            (
            );
            /** Creates Venting Design builder 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::VentingDesignBuilder * CreateVentingDesignBuilder
            (
            );
            /** Creates Tooling Raster Image builder. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::RasterImageBuilder * CreateRasterImageBuilder
            (
                NXOpen::Display::RasterImage * rasterImageTag /** rasterimagetag */ 
            );
            /** Creates Tooling Insert Barcode builder. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::InsertBarcodeBuilder * CreateInsertBarcodeBuilder
            (
                NXOpen::Annotations::SimpleDraftingAid * pmiNoteTag /** @link NXOpen::Annotations::SimpleDraftingAid NXOpen::Annotations::SimpleDraftingAid@endlink  to be edited */
            );
            /** Creates Insert QR or Bar Code builder. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::InsertQRBarCodeBuilder * CreateInsertQRBarCodeBuilder
            (
            );
            /** Creates Insert Text builder. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::InsertTextBuilder * CreateInsertTextBuilder
            (
            );
            /** Creates ConformalOffset builder  @return @link  ConformalOffsetBuilder   ConformalOffsetBuilder @endlink  object object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalOffsetBuilder * CreateConformalOffsetBuilder
            (
            );
            /** Creates EditCoolingCurve builder  @return @link  EditCoolingCurveBuilder   EditCoolingCurveBuilder @endlink  object object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::EditCoolingCurveBuilder * CreateEditCoolingCurveBuilder
            (
            );
            /** Creates ConformalCircuit builder  @return @link  ConformalCircuitBuilder   ConformalCircuitBuilder @endlink  object object 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConformalCircuitBuilder * CreateConformalCircuitBuilder
            (
            );
            /** Creates stamping process recognition builder. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::StampingProcessRecognitionBuilder * CreateStampingProcessRecognitionBuilder
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
