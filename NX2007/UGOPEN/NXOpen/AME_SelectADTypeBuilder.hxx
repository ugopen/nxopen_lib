#ifndef NXOpen_AME_SELECTADTYPEBUILDER_HXX_INCLUDED
#define NXOpen_AME_SELECTADTYPEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_SelectADTypeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_BaseDefinition.hxx>
#include <NXOpen/AME_SelectADReuseLibraryItemBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class SelectADTypeBuilder;
    }
    namespace AME
    {
        class BaseDefinition;
    }
    namespace AME
    {
        class INodeObject;
    }
    namespace AME
    {
        class SelectADReuseLibraryItemBuilder;
    }
    namespace AME
    {
        class _SelectADTypeBuilderBuilder;
        class SelectADTypeBuilderImpl;
        /**
                Journalling Interface class for Builder which allows selection of Type, Product or Template.
             <br> This object does not need a creator.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  SelectADTypeBuilder : public NXOpen::TaggedObject
        {
            private: SelectADTypeBuilderImpl * m_selectadtypebuilder_impl;
            private: friend class  _SelectADTypeBuilderBuilder;
            protected: SelectADTypeBuilder();
            public: ~SelectADTypeBuilder();
            /**Returns  the builder for reuse library selection item
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectADReuseLibraryItemBuilder * ReuseLibraryItem
            (
            );
            /**Returns  the selected @link NXOpen::AME::INodeObject NXOpen::AME::INodeObject@endlink 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::INodeObject * SelectedINodeObject
            (
            );
            /**Sets  the selected @link NXOpen::AME::INodeObject NXOpen::AME::INodeObject@endlink 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectedINodeObject
            (
                NXOpen::AME::INodeObject * nodeObject /** nodeobject */ 
            );
            /** Gets selected base definition from node
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::BaseDefinition * GetSelectedBaseDefinitionFromNode
            (
            );
            /** Gets selected base definition from reuse item
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::BaseDefinition * GetSelectedBaseDefinitionFromReuseItem
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
