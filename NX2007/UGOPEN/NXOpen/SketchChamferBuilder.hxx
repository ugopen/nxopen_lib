#ifndef NXOpen_SKETCHCHAMFERBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHCHAMFERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchChamferBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchChamferBuilder;
    class Builder;
    class Expression;
    class Point;
    class SelectDisplayableObjectList;
    class _SketchChamferBuilderBuilder;
    class SketchChamferBuilderImpl;
    /** Represents a Chamfer builder  <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateSketchChamferBuilder  NXOpen::SketchCollection::CreateSketchChamferBuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    Angle.Value </term> <description> 
     
    45 </description> </item> 

    <item><term> 
     
    ChamferOption </term> <description> 
     
    Symmetric </description> </item> 

    <item><term> 
     
    Distance1.Value </term> <description> 
     
    2 (millimeters part), .0625 (inches part) </description> </item> 

    <item><term> 
     
    Distance2.Value </term> <description> 
     
    2 (millimeters part), .0625 (inches part) </description> </item> 

    <item><term> 
     
    TrimInputCurves </term> <description> 
     
    1 </description> </item> 

    </list> 

     <br>  Created in NX7.5.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchChamferBuilder : public NXOpen::Builder
    {
        /** Dialog options for Chamfer Creation */
        public: enum ChamferOptions
        {
            ChamferOptionsSymmetric/** Symmetric - specify one distance */,
            ChamferOptionsAsymmetric/** Asymmetric - specify two distances */,
            ChamferOptionsOffsetandAngle/** OffsetandAngle - specify offset distance and angle */
        };

        private: SketchChamferBuilderImpl * m_sketchchamferbuilder_impl;
        private: friend class  _SketchChamferBuilderBuilder;
        protected: SketchChamferBuilder();
        public: ~SketchChamferBuilder();
        /**Returns  the two lines for which a chamfer is to be created 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::SelectDisplayableObjectList * CurvesToChamfer
        (
        );
        /**Returns  the toggle that specifies whether the two selected lines are to be trimmed 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: bool TrimInputCurves
        (
        );
        /**Sets  the toggle that specifies whether the two selected lines are to be trimmed 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetTrimInputCurves
        (
            bool trimInputCurves /** triminputcurves */ 
        );
        /**Returns  the chamfer options that specify what type of chamfer is to be created 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::SketchChamferBuilder::ChamferOptions ChamferOption
        (
        );
        /**Sets  the chamfer options that specify what type of chamfer is to be created 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetChamferOption
        (
            NXOpen::SketchChamferBuilder::ChamferOptions chamferOption /** chamferoption */ 
        );
        /**Returns  the distance for line 1 for Symmetric, Asymmetric, and for OffSet and Angle Chamfer
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::Expression * Distance1
        (
        );
        /**Returns  the distance for line 2 for Asymmetric Chamfer 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::Expression * Distance2
        (
        );
        /**Returns  the angle for Offset and Angle Chamfer 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::Expression * Angle
        (
        );
        /**Returns  the coordinates of the help point for Chamfer creation 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: NXOpen::Point * HelpPoint
        (
        );
        /**Sets  the coordinates of the help point for Chamfer creation 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetHelpPoint
        (
            NXOpen::Point * helpPoint /** helppoint */ 
        );
        /**Returns  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Distance1 SketchChamferBuilder::Distance1@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: bool CreateDistance1Dimension
        (
        );
        /**Sets  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Distance1 SketchChamferBuilder::Distance1@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetCreateDistance1Dimension
        (
            bool createDistance1Dimension /** createdistance1dimension */ 
        );
        /**Returns  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Distance2 SketchChamferBuilder::Distance2@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: bool CreateDistance2Dimension
        (
        );
        /**Sets  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Distance2 SketchChamferBuilder::Distance2@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetCreateDistance2Dimension
        (
            bool createDistance2Dimension /** createdistance2dimension */ 
        );
        /**Returns  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Angle SketchChamferBuilder::Angle@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: bool CreateAngleDimension
        (
        );
        /**Sets  the flag to indicate whether to create a dimension for @link SketchChamferBuilder::Angle SketchChamferBuilder::Angle@endlink  
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : drafting ("DRAFTING") OR solid_modeling ("SOLIDS MODELING") OR geometric_tol ("GDT") */
        public: void SetCreateAngleDimension
        (
            bool createAngleDimension /** createangledimension */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
