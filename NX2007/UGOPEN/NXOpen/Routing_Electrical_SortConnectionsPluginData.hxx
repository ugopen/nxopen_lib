#ifndef NXOpen_ROUTING_ELECTRICAL_SORTCONNECTIONSPLUGINDATA_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_SORTCONNECTIONSPLUGINDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_SortConnectionsPluginData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class SortConnectionsPluginData;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class ElectricalStockDevice;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _SortConnectionsPluginDataBuilder;
            class SortConnectionsPluginDataImpl;
            /** Data object created by Routing just before routing connections.
                        Routing sends this object to any registered Sort Connections plugin with the
                        "Stock Devices to sort" filled in.

                        It is the Sort Connections plugin responsibility to sort the Stock Devices and
                        to put the sorted Stock Devices into "Sorted Stock Devices".

                        For more information, see @link Routing::CustomManager Routing::CustomManager@endlink  and the
                        @link Routing::CustomManager::SetSortConnectionsPlugin Routing::CustomManager::SetSortConnectionsPlugin@endlink 
                     <br> An instance of this object will be sent to the Sort Connections plugin.  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_ROUTINGEXPORT  SortConnectionsPluginData : public NXOpen::TaggedObject
            {
                private: SortConnectionsPluginDataImpl * m_sortconnectionsplugindata_impl;
                private: friend class  _SortConnectionsPluginDataBuilder;
                protected: SortConnectionsPluginData();
                public: ~SortConnectionsPluginData();
                /** Gets the stock devices such as @link Routing::Electrical::WireDevice Routing::Electrical::WireDevice@endlink s
                                that implement connections Routing is about to route along their paths. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void GetStockDevicesToSort
                (
                    std::vector<NXOpen::Routing::Electrical::ElectricalStockDevice *> & stockDevices /** The @link Routing::Electrical::ElectricalStockDevice Routing::Electrical::ElectricalStockDevice@endlink s to sort in the order in which
                                        you want to route them. */
                );
                /** Sets the stock devices sorted in the order in which you want their connections to route. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetSortedStockDevices
                (
                    const std::vector<NXOpen::Routing::Electrical::ElectricalStockDevice *> & stockDevices /** The @link Routing::Electrical::ElectricalStockDevice Routing::Electrical::ElectricalStockDevice@endlink s sorted in the order in which
                                        you want to route them. */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
