#ifndef NXOpen_ALP_CONFIGVARIANTCONDITIONBUILDER_HXX_INCLUDED
#define NXOpen_ALP_CONFIGVARIANTCONDITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ALP_ConfigVariantConditionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MfgModel_BOPBaseModel.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libalpopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ALP
    {
        class ConfigVariantConditionBuilder;
    }
    class Builder;
    namespace MfgModel
    {
        class BOPBaseModel;
    }
    namespace ALP
    {
        class _ConfigVariantConditionBuilderBuilder;
        class ConfigVariantConditionBuilderImpl;
        /** For creating and editing Product Configurator Variant Conditions  <br> To create a new instance of this class, use @link NXOpen::ALP::ALPManager::CreateConfigVariantConditionBuilder  NXOpen::ALP::ALPManager::CreateConfigVariantConditionBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class ALPOPENCPPEXPORT  ConfigVariantConditionBuilder : public NXOpen::Builder
        {
            private: ConfigVariantConditionBuilderImpl * m_configvariantconditionbuilder_impl;
            private: friend class  _ConfigVariantConditionBuilderBuilder;
            protected: ConfigVariantConditionBuilder();
            public: ~ConfigVariantConditionBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the selected operation to define Variant Condition 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXOpen::MfgModel::BOPBaseModel * SelectedComponent
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the selected operation to define Variant Condition 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: void SetSelectedComponent
            (
                NXOpen::MfgModel::BOPBaseModel * selectedComponent /** selectedcomponent */ 
            );

            /// \endcond 
            /**Returns  the selected attribute to get or set config variant condition string 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: NXString ConfigVariantCondition
            (
            );
            /**Sets  the selected attribute to get or set config variant condition string 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            public: void SetConfigVariantCondition
            (
                const NXString & configVariantCondition /** configvariantcondition */ 
            );
            /**Sets  the selected attribute to get or set config variant condition string 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : alp_planner ("Assembly Line Planner") */
            void SetConfigVariantCondition
            (
                const char * configVariantCondition /** configvariantcondition */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
