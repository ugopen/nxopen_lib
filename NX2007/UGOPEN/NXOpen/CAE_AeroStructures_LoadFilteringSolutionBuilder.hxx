#ifndef NXOpen_CAE_AEROSTRUCTURES_LOADFILTERINGSOLUTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_LOADFILTERINGSOLUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_LoadFilteringSolutionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadFilteringSolutionBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class _LoadFilteringSolutionBuilderBuilder;
            class LoadFilteringSolutionBuilderImpl;
            /** This is a manager to the @link CAE::AeroStructures::LoadFilteringSolution CAE::AeroStructures::LoadFilteringSolution@endlink  class.
                Object of type @link CAE::AeroStructures::LoadFilteringSolution CAE::AeroStructures::LoadFilteringSolution@endlink  can be
                created and edited only through this class
                 <br> To create a new instance of this class, use @link NXOpen::CAE::AeroStructures::LoadFilteringSolutionCollection::CreateLoadFilteringSolutionBuilder  NXOpen::CAE::AeroStructures::LoadFilteringSolutionCollection::CreateLoadFilteringSolutionBuilder @endlink  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LoadFilteringSolutionBuilder : public NXOpen::Builder
            {
                private: LoadFilteringSolutionBuilderImpl * m_loadfilteringsolutionbuilder_impl;
                private: friend class  _LoadFilteringSolutionBuilderBuilder;
                protected: LoadFilteringSolutionBuilder();
                public: ~LoadFilteringSolutionBuilder();
                /**Returns  the metasolution name
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString Name
                (
                );
                /**Sets  the metasolution name
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetName
                (
                    const NXString & title /** title */ 
                );
                /**Sets  the metasolution name
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetName
                (
                    const char * title /** title */ 
                );
                /**Sets   a Get the metasolution description
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetDescription
                (
                    const NXString & title /** title */ 
                );
                /**Sets   a Get the metasolution description
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetDescription
                (
                    const char * title /** title */ 
                );
                /**Returns   a Get the metasolution description
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString Description
                (
                );
                /**Returns  the referenced FE-Solution of the AeroStructure solution 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::SimSolution * ReferenceSolution
                (
                );
                /**Sets  the referenced FE-Solution of the AeroStructure solution 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReferenceSolution
                (
                    NXOpen::CAE::SimSolution * referenceSolution /** referencesolution */ 
                );
                /**Returns  the unit system of the load filtering solution
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString UnitSystem
                (
                );
                /**Sets  the unit system of the load filtering solution
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetUnitSystem
                (
                    const NXString & unitSystem /** unit system */ 
                );
                /**Sets  the unit system of the load filtering solution
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetUnitSystem
                (
                    const char * unitSystem /** unit system */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
