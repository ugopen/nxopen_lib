#ifndef NXOpen_CABLEROUTER_NETWORKUTILIZATIONSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_CABLEROUTER_NETWORKUTILIZATIONSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CableRouter_NetworkUtilizationSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cablerouter_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CableRouter
    {
        class NetworkUtilizationSettingsBuilder;
    }
    class Builder;
    class NXColor;
    namespace CableRouter
    {
        class _NetworkUtilizationSettingsBuilderBuilder;
        class NetworkUtilizationSettingsBuilderImpl;
        /** Builder Class for Network Utilization Settings UI  <br> To create a new instance of this class, use @link NXOpen::CableRouter::CableRouterCollection::CreateNetworkUtilizationSettingsBuilder  NXOpen::CableRouter::CableRouterCollection::CreateNetworkUtilizationSettingsBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DisplayStyle </term> <description> 
         
        ExceedingRange </description> </item> 

        <item><term> 
         
        SelectedColorCount </term> <description> 
         
        Two </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_CABLEROUTEREXPORT  NetworkUtilizationSettingsBuilder : public NXOpen::Builder
        {
            /** This enum is a setting for the different display methods */
            public: enum DisplayMethod
            {
                DisplayMethodExceedingRange/** Exceed Fill Volume Threshold*/,
                DisplayMethodExceedingDefinedRange/** Exceed Specified Fill Volume Threshold*/,
                DisplayMethodRangeAreas/** Use Ranges of Fill Volume Threshold*/
            };

            /** This enum is a setting for the amount of limits used */
            public: enum AmountOfColors
            {
                AmountOfColorsTwo/** Use two points to define ranges*/,
                AmountOfColorsThree/** Use three points to define ranges*/
            };

            private: NetworkUtilizationSettingsBuilderImpl * m_networkutilizationsettingsbuilder_impl;
            private: friend class  _NetworkUtilizationSettingsBuilderBuilder;
            protected: NetworkUtilizationSettingsBuilder();
            public: ~NetworkUtilizationSettingsBuilder();
            /**Returns  the display style 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CableRouter::NetworkUtilizationSettingsBuilder::DisplayMethod DisplayStyle
            (
            );
            /**Sets  the display style 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDisplayStyle
            (
                NXOpen::CableRouter::NetworkUtilizationSettingsBuilder::DisplayMethod displayStyle /** displaystyle */ 
            );
            /**Returns  the exceeding threshold fill color 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ExceedingFillColor
            (
            );
            /**Sets  the exceeding threshold fill color 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetExceedingFillColor
            (
                NXOpen::NXColor * exceedColor /** exceedcolor */ 
            );
            /**Returns  the specified fill color 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * SpecifiedFillColor
            (
            );
            /**Sets  the specified fill color 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSpecifiedFillColor
            (
                NXOpen::NXColor * specifiedColor /** specifiedcolor */ 
            );
            /**Returns  the specified fill limit amount 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double SpecifiedFillAmount
            (
            );
            /**Sets  the specified fill limit amount 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSpecifiedFillAmount
            (
                double specifiedAmount /** specifiedamount */ 
            );
            /**Returns  the amount of colors used for range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CableRouter::NetworkUtilizationSettingsBuilder::AmountOfColors SelectedColorCount
            (
            );
            /**Sets  the amount of colors used for range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedColorCount
            (
                NXOpen::CableRouter::NetworkUtilizationSettingsBuilder::AmountOfColors amountOfColors /** amountofcolors */ 
            );
            /**Returns  the range for the first section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double Range1Number
            (
            );
            /**Sets  the range for the first section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange1Number
            (
                double rangeValue /** rangevalue */ 
            );
            /**Returns  the color for the first section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * Range1Color
            (
            );
            /**Sets  the color for the first section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange1Color
            (
                NXOpen::NXColor * rangeColor /** rangecolor */ 
            );
            /**Returns  the range for the second section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double Range2Number
            (
            );
            /**Sets  the range for the second section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange2Number
            (
                double rangeValue /** rangevalue */ 
            );
            /**Returns  the color for the second section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * Range2Color
            (
            );
            /**Sets  the color for the second section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange2Color
            (
                NXOpen::NXColor * rangeColor /** rangecolor */ 
            );
            /**Returns  the color for the third section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * Range3Color
            (
            );
            /**Sets  the color for the third section of range based coloring 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange3Color
            (
                NXOpen::NXColor * rangeColor /** rangecolor */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
