#ifndef NXOpen_TOOLING_SOLIDPATCHBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SOLIDPATCHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SolidPatchBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SolidPatchBuilder;
    }
    class Builder;
    class SelectBody;
    class SelectBodyList;
    namespace Tooling
    {
        class _SolidPatchBuilderBuilder;
        class SolidPatchBuilderImpl;
        /** Represents a builder to be used to create a solid patch. <br> To create a new instance of this class, use @link NXOpen::Tooling::SolidPatchCollection::CreateBuilder  NXOpen::Tooling::SolidPatchCollection::CreateBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        PatchType </term> <description> 
         
        SolidPatch </description> </item> 

        <item><term> 
         
        Subtract </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SolidPatchBuilder : public NXOpen::Builder
        {
            /** Settings of the solid patch creation types.*/
            public: enum SolidPatchType
            {
                SolidPatchTypeSolidPatch/** Solid patch type indicates to create solid patch*/,
                SolidPatchTypeLinkBody/** Link body type indicates to create link body*/
            };

            private: SolidPatchBuilderImpl * m_solidpatchbuilder_impl;
            private: friend class  _SolidPatchBuilderBuilder;
            protected: SolidPatchBuilder();
            public: ~SolidPatchBuilder();
            /**Returns  the patch type of the solid patch creation.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SolidPatchBuilder::SolidPatchType PatchType
            (
            );
            /**Sets  the patch type of the solid patch creation.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPatchType
            (
                NXOpen::Tooling::SolidPatchBuilder::SolidPatchType patchType /** patchtype */ 
            );
            /**Returns  the product body selected as the target body for unite with tool bodies.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * Product
            (
            );
            /**Returns  the tool bodies selected as linked source bodies for patching up the target body.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * Patch
            (
            );
            /**Returns  the toggle for indicating if the tool is subtracted by the target or not.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Subtract
            (
            );
            /**Sets  the toggle for indicating if the tool is subtracted by the target or not.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSubtract
            (
                bool isSubtract /** issubtract */ 
            );
            /** Show result button to write the patch and link this information to the list window.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ShowResult
            (
            );
            /** Add the selected list part as the destionation components.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void AddListPartToPatchData
            (
                std::vector<NXString> & selectedListString /** Names of selected List */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
