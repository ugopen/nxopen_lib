#ifndef NXOpen_COMPONENTREFERENCECOLLECTOR_HXX_INCLUDED
#define NXOpen_COMPONENTREFERENCECOLLECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ComponentReferenceCollector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ComponentReferenceCollector;
    class ComponentReferenceCollectorImpl;
    /**  @brief Represents a Component Reference collector object.  

      
     <br>  Created in NX1980.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  ComponentReferenceCollector : public NXOpen::TransientObject
    {
        private: ComponentReferenceCollectorImpl * m_componentreferencecollector_impl;
        /// \cond NX_NO_DOC 
        public: explicit ComponentReferenceCollector(void *ptr);
        /// \endcond 
        /** Frees the object from memory.  After this method is called,
            it is illegal to use the object.  In .NET, this method is automatically
            called when the object is deleted by the garbage collector. 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~ComponentReferenceCollector();
        /** Add a reference to component using Clone Stable Instance Identifiers. 
         <br>  Created in NX1980.0.0.  <br>  
         <br> License requirements : None */
        public: void AddComponentWithCsidVector
        (
            std::vector<NXString> & componentReference /** The string vector containing CSIDs of part occ.*/
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
