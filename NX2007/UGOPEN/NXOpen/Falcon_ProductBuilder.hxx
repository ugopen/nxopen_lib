#ifndef NXOpen_FALCON_PRODUCTBUILDER_HXX_INCLUDED
#define NXOpen_FALCON_PRODUCTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Falcon_ProductBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_falcon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Falcon
    {
        class ProductBuilder;
    }
    class Builder;
    class NXColor;
    namespace Falcon
    {
        class _ProductBuilderBuilder;
        class ProductBuilderImpl;
        /** the class for creating Falcon Product  <br> To create a new instance of this class, use @link NXOpen::Falcon::FalconManager::CreateProductBuilder  NXOpen::Falcon::FalconManager::CreateProductBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ProdContainerStackCheck </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProdContainerUnstackCheck </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ProductVolume </term> <description> 
         
        100 </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_FALCONEXPORT  ProductBuilder : public NXOpen::Builder
        {
            private: ProductBuilderImpl * m_productbuilder_impl;
            private: friend class  _ProductBuilderBuilder;
            protected: ProductBuilder();
            public: ~ProductBuilder();
            /**Returns  the product name for the Assembly Data
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ProductName
            (
            );
            /**Sets  the product name for the Assembly Data
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProductName
            (
                const NXString & productName /** productname */ 
            );
            /**Sets  the product name for the Assembly Data
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetProductName
            (
                const char * productName /** productname */ 
            );
            /**Returns  the volumn for the product
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: double ProductVolume
            (
            );
            /**Sets  the volumn for the product
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProductVolume
            (
                double productVolume /** productvolume */ 
            );
            /**Returns  the color picker for the product 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ProductColorPicker
            (
            );
            /**Sets  the color picker for the product 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProductColorPicker
            (
                NXOpen::NXColor * productColorPicker /** productcolorpicker */ 
            );
            /** Returns the product description 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetProductDescription
            (
            );
            /** Sets the product description 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProductDescription
            (
                const std::vector<NXString> & productDescription /** productdescription */ 
            );
            /**Returns  the prod container stack check 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ProdContainerStackCheck
            (
            );
            /**Sets  the prod container stack check 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProdContainerStackCheck
            (
                bool prodContainerStackCheck /** prodcontainerstackcheck */ 
            );
            /**Returns  the prod container unstack check 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool ProdContainerUnstackCheck
            (
            );
            /**Sets  the prod container unstack check 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProdContainerUnstackCheck
            (
                bool prodContainerUnstackCheck /** prodcontainerunstackcheck */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
