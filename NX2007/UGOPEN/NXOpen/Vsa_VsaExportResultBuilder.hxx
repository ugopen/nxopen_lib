#ifndef NXOpen_VSA_VSAEXPORTRESULTBUILDER_HXX_INCLUDED
#define NXOpen_VSA_VSAEXPORTRESULTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_VsaExportResultBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class VsaExportResultBuilder;
    }
    class Builder;
    namespace Vsa
    {
        class _VsaExportResultBuilderBuilder;
        class VsaExportResultBuilderImpl;
        /**
            
             <br> To create a new instance of this class, use @link NXOpen::Vsa::VsaManager::CreateVsaExportResultBuilder  NXOpen::Vsa::VsaManager::CreateVsaExportResultBuilder @endlink  <br> 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  VsaExportResultBuilder : public NXOpen::Builder
        {
            private: VsaExportResultBuilderImpl * m_vsaexportresultbuilder_impl;
            private: friend class  _VsaExportResultBuilderBuilder;
            protected: VsaExportResultBuilder();
            public: ~VsaExportResultBuilder();
            /**Returns  the property represents Folder Statistical Paramenter 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool StatisticalParamenter
            (
            );
            /**Sets  the property represents Folder Statistical Paramenter 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStatisticalParamenter
            (
                bool boolSwap /** boolswap */ 
            );
            /**Returns  the property represents Contribution Matix. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool ContributionMatix
            (
            );
            /**Sets  the property represents Contribution Matix. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetContributionMatix
            (
                bool boolSwap /** boolswap */ 
            );
            /**Returns  the property represents Measurement Values. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool MeasurementValues
            (
            );
            /**Sets  the property represents Measurement Values. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetMeasurementValues
            (
                bool boolSwap /** boolswap */ 
            );
            /**Returns  the property represents Folder Path 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FolderPath
            (
            );
            /**Sets  the property represents Folder Path 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetFolderPath
            (
                const NXString & name /** name */ 
            );
            /**Sets  the property represents Folder Path 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetFolderPath
            (
                const char * name /** name */ 
            );
            /** To print measurement values in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void PrintMeasurementValues
            (
                const NXString & folderpath /** folderpath */ 
            );
            /** To print measurement values in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void PrintMeasurementValues
            (
                const char * folderpath /** folderpath */ 
            );
            /** To print measurement statistics in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void PrintMeasurementStatistics
            (
                const NXString & folderpath /** folderpath */ 
            );
            /** To print measurement statistics in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void PrintMeasurementStatistics
            (
                const char * folderpath /** folderpath */ 
            );
            /** To print Total tolerance cotribution in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void PrintTotalToleranceContribution
            (
                const NXString & folderpath /** folderpath */ 
            );
            /** To print Total tolerance cotribution in report
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void PrintTotalToleranceContribution
            (
                const char * folderpath /** folderpath */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
