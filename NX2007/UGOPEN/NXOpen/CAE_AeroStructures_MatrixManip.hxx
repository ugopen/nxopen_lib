#ifndef NXOpen_CAE_AEROSTRUCTURES_MATRIXMANIP_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MATRIXMANIP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_MatrixManip.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class MatrixManip;
        }
    }
    class Expression;
    class NXObject;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _MatrixManipBuilder;
            class MatrixManipImpl;
            /**  @brief  This is the User LoadExtraction class  

               <br> No support for KF  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MatrixManip : public NXOpen::NXObject
            {
                /** Map Operations */
                public: enum MapOperations
                {
                    MapOperationsAbsolute/** absolute */ ,
                    MapOperationsNone/** none */ 
                };

                /** Filter Operations */
                public: enum FilterOperations
                {
                    FilterOperationsPositive/** positive */ ,
                    FilterOperationsNegative/** negative */ ,
                    FilterOperationsRange/** range */ ,
                    FilterOperationsNone/** none */ 
                };

                /** Reduce Operations */
                public: enum ReduceOperations
                {
                    ReduceOperationsMax/** max */ ,
                    ReduceOperationsMin/** min */ ,
                    ReduceOperationsAverage/** average */ ,
                    ReduceOperationsSum/** sum */ ,
                    ReduceOperationsNone/** none */ ,
                    ReduceOperationsSignedAbsoluteExtremum/** signed absolute extremum */ 
                };

                private: MatrixManipImpl * m_matrixmanip_impl;
                private: friend class  _MatrixManipBuilder;
                protected: MatrixManip();
                public: ~MatrixManip();
                /** Get Map Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MatrixManip::MapOperations GetMapOperation
                (
                );
                /** Set Map Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetMapOperation
                (
                    NXOpen::CAE::AeroStructures::MatrixManip::MapOperations mapOp /** mapop */ 
                );
                /** Get Filter Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MatrixManip::FilterOperations GetFilterOperation
                (
                );
                /** Set Filter Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFilterOperation
                (
                    NXOpen::CAE::AeroStructures::MatrixManip::FilterOperations filterOp /** filterop */ 
                );
                /** Get Reduce Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MatrixManip::ReduceOperations GetReduceOperation
                (
                );
                /** Set Reduce Operation 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReduceOperation
                (
                    NXOpen::CAE::AeroStructures::MatrixManip::ReduceOperations reduceOp /** reduceop */ 
                );
                /** Get Conversion Factor Value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetFactorConversion
                (
                );
                /** Set Conversion Factor Value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFactorConversion
                (
                    double factor /** factor */ 
                );
                /** Get Factor Value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetFactor
                (
                );
                /** Set Factor Value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFactor
                (
                    double factor /** factor */ 
                );
                /** Get filter lower bound
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetFilterLowerBound
                (
                );
                /** Set filter lower bound
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFilterLowerBound
                (
                    double lowerBound /** lowerbound */ 
                );
                /** Get filter upper bound
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetFilterUpperBound
                (
                );
                /** Set filter upper bound
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFilterUpperBound
                (
                    double upperBound /** upperbound */ 
                );
                /** Get Conversion Factor expression 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Expression * GetFactorConversionExpression
                (
                );
                /** Set Conversion Factor expression 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFactorConversionExpression
                (
                    NXOpen::Expression * exp /** exp */ 
                );
                /** Get Factor expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Expression * GetFactorExpression
                (
                );
                /** Set Factor expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFactorExpression
                (
                    NXOpen::Expression * exp /** exp */ 
                );
                /** Get filter lower bound expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Expression * GetFilterLowerBoundExpression
                (
                );
                /** Set filter lower bound expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFilterLowerBoundExpression
                (
                    NXOpen::Expression * exp /** exp */ 
                );
                /** Get filter upper bound expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Expression * GetFilterUpperBoundExpression
                (
                );
                /** Set filter upper bound expression
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFilterUpperBoundExpression
                (
                    NXOpen::Expression * exp /** exp */ 
                );
                /** Get start Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString GetStartMeasure
                (
                );
                /** Set start Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetStartMeasure
                (
                    const NXString & measure /** measure */ 
                );
                /** Set start Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetStartMeasure
                (
                    const char * measure /** measure */ 
                );
                /** Get end Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString GetEndMeasure
                (
                );
                /** Set end Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetEndMeasure
                (
                    const NXString & measure /** measure */ 
                );
                /** Set end Measure
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetEndMeasure
                (
                    const char * measure /** measure */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
