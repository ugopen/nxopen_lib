#ifndef NXOpen_NESTEDSOLUTION_HXX_INCLUDED
#define NXOpen_NESTEDSOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NestedSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class NestedSolution;
    class NestedSolutionImpl;

    /// \cond NX_NO_DOC 
    /** Represents a sheet metal nesting solution class. 
     <br>  Created in NX2007.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  NestedSolution : public NXOpen::TransientObject
    {
        private: NestedSolutionImpl * m_nestedsolution_impl;
        /// \cond NX_NO_DOC 
        public: explicit NestedSolution(void *ptr);
        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object. In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~NestedSolution();

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the cut length. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double CutLength
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the utilization. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: double Utilization
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the number of parts nested. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: int NumberOfPartsNested
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the number of unplaced parts. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: int NumberOfUnplacedParts
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the number of sheets used. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: int NumberOfSheetsUsed
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the unique identifier. 
         <br>  Created in NX2007.0.0.  <br>  
         <br> License requirements : None */
        public: int Identifier
        (
        );

        /// \endcond 
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
