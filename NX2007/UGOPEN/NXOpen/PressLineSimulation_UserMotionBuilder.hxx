#ifndef NXOpen_PRESSLINESIMULATION_USERMOTIONBUILDER_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_USERMOTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_UserMotionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PressLineSimulation_MotionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class UserMotionBuilder;
    }
    class Direction;
    class Point;
    namespace PressLineSimulation
    {
        class MotionBuilder;
    }
    class SelectBodyList;
    namespace PressLineSimulation
    {
        class _UserMotionBuilderBuilder;
        class UserMotionBuilderImpl;
        /** Represents a @link PressLineSimulation::UserMotionBuilder PressLineSimulation::UserMotionBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::PressLineSimulation::ApplicationManager::CreateUserMotionBuilder  NXOpen::PressLineSimulation::ApplicationManager::CreateUserMotionBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Disable </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        PressStart </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        PressStop </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ReturnStart </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ReturnStop </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        TypeOfCurve </term> <description> 
         
        Calculate </description> </item> 

        <item><term> 
         
        TypeOfMotion </term> <description> 
         
        Linear </description> </item> 

        <item><term> 
         
        ValuesInitial </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ValuesPeak </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX12.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  UserMotionBuilder : public NXOpen::PressLineSimulation::MotionBuilder
        {
            /** The type of motion to create. */
            public: enum MotionType
            {
                MotionTypeLinear/** linear */ ,
                MotionTypeRotary/** rotary */ 
            };

            /** The method used to define the motion curve. */
            public: enum CurveType
            {
                CurveTypeCalculate/** calculate */ ,
                CurveTypeFromFile/** from file */ 
            };

            private: UserMotionBuilderImpl * m_usermotionbuilder_impl;
            private: friend class  _UserMotionBuilderBuilder;
            protected: UserMotionBuilder();
            public: ~UserMotionBuilder();
            /**Returns  the motion bodies. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * MotionBodies
            (
            );
            /**Returns  the type of motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::UserMotionBuilder::MotionType TypeOfMotion
            (
            );
            /**Sets  the type of motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetTypeOfMotion
            (
                NXOpen::PressLineSimulation::UserMotionBuilder::MotionType typeOfMotion /** typeofmotion */ 
            );
            /**Returns  the motion vector. Defines the direction of motion for linear type and axis of rotation for rotary type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * MotionVector
            (
            );
            /**Sets  the motion vector. Defines the direction of motion for linear type and axis of rotation for rotary type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetMotionVector
            (
                NXOpen::Direction * motionVector /** motionvector */ 
            );
            /**Returns  the motion vector origin 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * MotionOrigin
            (
            );
            /**Sets  the motion vector origin 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetMotionOrigin
            (
                NXOpen::Point * motionOrigin /** motionorigin */ 
            );
            /**Returns  the method used to define the motion curve. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::UserMotionBuilder::CurveType TypeOfCurve
            (
            );
            /**Sets  the method used to define the motion curve. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetTypeOfCurve
            (
                NXOpen::PressLineSimulation::UserMotionBuilder::CurveType typeOfCurve /** typeofcurve */ 
            );
            /** Get the motion curve values if type is set to from file. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void GetMotionCurve
            (
                std::vector<double> & curveValues /** The array of motion curve values. */
            );
            /** Set the motion curve values if type is set to from file. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetMotionCurve
            (
                const std::vector<double> & curveValues /** The array of motion curve values. */
            );
            /**Returns  the press start angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double PressStart
            (
            );
            /**Sets  the press start angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetPressStart
            (
                double pressStart /** pressstart */ 
            );
            /**Returns  the press stop angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double PressStop
            (
            );
            /**Sets  the press stop angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetPressStop
            (
                double pressStop /** pressstop */ 
            );
            /**Returns  the return start angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double ReturnStart
            (
            );
            /**Sets  the return start angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetReturnStart
            (
                double returnStart /** returnstart */ 
            );
            /**Returns  the return stop angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double ReturnStop
            (
            );
            /**Sets  the return stop angle. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetReturnStop
            (
                double returnStop /** returnstop */ 
            );
            /**Returns  the initial value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double ValuesInitial
            (
            );
            /**Sets  the initial value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetValuesInitial
            (
                double valuesInitial /** valuesinitial */ 
            );
            /**Returns  the peak value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double ValuesPeak
            (
            );
            /**Sets  the peak value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetValuesPeak
            (
                double valuesPeak /** valuespeak */ 
            );
            /**Returns  the description of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the simulation component name. 
             <br>  @deprecated Deprecated in NX1899.0.0.  Use @link NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1899.0.0.  Use NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName instead.") NXString ComponentName
            (
            );
            /**Sets  the simulation component name. 
             <br>  @deprecated Deprecated in NX1899.0.0.  Use @link NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: NX_DEPRECATED("Deprecated in NX1899.0.0.  Use NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName instead.") void SetComponentName
            (
                const NXString & componentName /** componentname */ 
            );
            /**Sets  the simulation component name. 
             <br>  @deprecated Deprecated in NX1899.0.0.  Use @link NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName NXOpen::PressLineSimulation::MotionBuilder::CamDisplayName@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            void SetComponentName
            (
                const char * componentName /** componentname */ 
            );
            /**Returns  the disabled status of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool Disable
            (
            );
            /**Sets  the disabled status of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetDisable
            (
                bool disable /** disable */ 
            );
            /** To set the out of date status of the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetOutOfDate
            (
            );
            /** To delete the motion. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void DeleteCam
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
