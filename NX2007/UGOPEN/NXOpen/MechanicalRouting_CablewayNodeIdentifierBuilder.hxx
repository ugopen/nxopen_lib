#ifndef NXOpen_MECHANICALROUTING_CABLEWAYNODEIDENTIFIERBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_CABLEWAYNODEIDENTIFIERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_CablewayNodeIdentifierBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class CablewayNodeIdentifierBuilder;
    }
    class Builder;
    namespace Routing
    {
        class RouteObjectCollector;
    }
    class SmartObject;
    namespace MechanicalRouting
    {
        class _CablewayNodeIdentifierBuilderBuilder;
        class CablewayNodeIdentifierBuilderImpl;
        /** Builder class for Cableway Node Identifier command.  <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayNodeIdentifierBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayNodeIdentifierBuilder @endlink  <br> 
         <br>  Created in NX1988.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  CablewayNodeIdentifierBuilder : public NXOpen::Builder
        {
            private: CablewayNodeIdentifierBuilderImpl * m_cablewaynodeidentifierbuilder_impl;
            private: friend class  _CablewayNodeIdentifierBuilderBuilder;
            protected: CablewayNodeIdentifierBuilder();
            public: ~CablewayNodeIdentifierBuilder();
            /**Returns  the object used for selection of @link Routing::ControlPoint Routing::ControlPoint@endlink  or @link Point Point@endlink 
                        (a.k.a. "nodes"). 
             <br>  Created in NX1988.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: NXOpen::Routing::RouteObjectCollector * NodeSelection
            (
            );
            /** Gets the @link Routing::ControlPoint Routing::ControlPoint@endlink s or @link Point Point@endlink s 
             <br>  Created in NX1988.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: std::vector<NXOpen::SmartObject *> GetNodes
            (
            );
            /** Sets the @link Routing::ControlPoint Routing::ControlPoint@endlink s or @link Point Point@endlink s. 
             <br>  Created in NX1988.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void SetNodes
            (
                const std::vector<NXOpen::SmartObject *> & nodes /** nodes */ 
            );
            /** Sets the identifiers to be placed on the nodes by the Commit method.
                    
             <br>  Created in NX1988.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void SetIdentifiers
            (
                std::vector<NXString> & identifiers /** identifiers */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
