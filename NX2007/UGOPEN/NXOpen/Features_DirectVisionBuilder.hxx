#ifndef NXOpen_FEATURES_DIRECTVISIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DIRECTVISIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DirectVisionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class DirectVisionBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class Point;
    namespace Features
    {
        class _DirectVisionBuilderBuilder;
        class DirectVisionBuilderImpl;
        /**
            Represents a @link Features::DirectVision Features::DirectVision@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::AVDACollection::CreateDirectVisionBuilder  NXOpen::Features::AVDACollection::CreateDirectVisionBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        EyePointType </term> <description> 
         
        Monocular </description> </item> 

        <item><term> 
         
        EyeRotationDown.Value </term> <description> 
         
        15 </description> </item> 

        <item><term> 
         
        EyeRotationLeft.Value </term> <description> 
         
        15 </description> </item> 

        <item><term> 
         
        EyeRotationRight.Value </term> <description> 
         
        15 </description> </item> 

        <item><term> 
         
        EyeRotationType </term> <description> 
         
        Maximum </description> </item> 

        <item><term> 
         
        EyeRotationUp.Value </term> <description> 
         
        15 </description> </item> 

        <item><term> 
         
        HeadRotationLeft.Value </term> <description> 
         
        45 </description> </item> 

        <item><term> 
         
        HeadRotationRight.Value </term> <description> 
         
        45 </description> </item> 

        <item><term> 
         
        HeadTurnType </term> <description> 
         
        Easy </description> </item> 

        <item><term> 
         
        UseHeadTurnToggle </term> <description> 
         
        false </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  DirectVisionBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Represents the eyepoint type */
            public: enum VisionType
            {
                VisionTypeMonocular/** monocular */ ,
                VisionTypeBinocular/** binocular */ ,
                VisionTypeUserDefined/** user defined */ 
            };

            /** Represents the eye rotation type */
            public: enum EyeRotationTypes
            {
                EyeRotationTypesEasy/** easy */ ,
                EyeRotationTypesMaximum/** maximum */ ,
                EyeRotationTypesUserDefined/** user defined */ 
            };

            /** Represents the head turn type */
            public: enum HeadTurnTypes
            {
                HeadTurnTypesEasy/** easy */ ,
                HeadTurnTypesMaximum/** maximum */ ,
                HeadTurnTypesUserDefined/** user defined */ 
            };

            private: DirectVisionBuilderImpl * m_directvisionbuilder_impl;
            private: friend class  _DirectVisionBuilderBuilder;
            protected: DirectVisionBuilder();
            public: ~DirectVisionBuilder();
            /**Returns  the eye point type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::DirectVisionBuilder::VisionType EyePointType
            (
            );
            /**Sets  the eye point type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetEyePointType
            (
                NXOpen::Features::DirectVisionBuilder::VisionType eyePointType /** eyepointtype */ 
            );
            /**Returns  the user defined point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * UserDefinedPoint
            (
            );
            /**Sets  the user defined point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetUserDefinedPoint
            (
                NXOpen::Point * userDefinedPoint /** userdefinedpoint */ 
            );
            /**Returns  the eyellipse 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeature * Eyellipse
            (
            );
            /**Returns  the standard 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Standard
            (
            );
            /**Sets  the standard 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetStandard
            (
                const NXString & standard /** standard */ 
            );
            /**Sets  the standard 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            void SetStandard
            (
                const char * standard /** standard */ 
            );
            /**Returns  the eye point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EyePoint
            (
            );
            /**Sets  the eye point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetEyePoint
            (
                const NXString & eyePoint /** eyepoint */ 
            );
            /**Sets  the eye point 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            void SetEyePoint
            (
                const char * eyePoint /** eyepoint */ 
            );
            /**Returns  the eye rotation type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::DirectVisionBuilder::EyeRotationTypes EyeRotationType
            (
            );
            /**Sets  the eye rotation type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetEyeRotationType
            (
                NXOpen::Features::DirectVisionBuilder::EyeRotationTypes eyeRotationType /** eyerotationtype */ 
            );
            /**Returns  the eye rotation left 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EyeRotationLeft
            (
            );
            /**Returns  the eye rotation right 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EyeRotationRight
            (
            );
            /**Returns  the eye rotation up 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EyeRotationUp
            (
            );
            /**Returns  the eye rotation down 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EyeRotationDown
            (
            );
            /**Returns  the UseHeadTurnToggle 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseHeadTurnToggle
            (
            );
            /**Sets  the UseHeadTurnToggle 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetUseHeadTurnToggle
            (
                bool useHeadTurnToggle /** useheadturntoggle */ 
            );
            /**Returns  the head turn type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::DirectVisionBuilder::HeadTurnTypes HeadTurnType
            (
            );
            /**Sets  the head turn type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetHeadTurnType
            (
                NXOpen::Features::DirectVisionBuilder::HeadTurnTypes headTurnType /** headturntype */ 
            );
            /**Returns  the head rotationLeft 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HeadRotationLeft
            (
            );
            /**Returns  the head rotation right 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HeadRotationRight
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
