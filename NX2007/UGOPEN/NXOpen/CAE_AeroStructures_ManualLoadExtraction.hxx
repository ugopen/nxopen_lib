#ifndef NXOpen_CAE_AEROSTRUCTURES_MANUALLOADEXTRACTION_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MANUALLOADEXTRACTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_ManualLoadExtraction.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_LoadExtractionStrategy.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class ManualLoadExtraction;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadExtractionStrategy;
        }
    }
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _ManualLoadExtractionBuilder;
            class ManualLoadExtractionImpl;
            /**  @brief  This is the Manual LoadExtraction class  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ManualLoadExtraction : public NXOpen::CAE::AeroStructures::LoadExtractionStrategy
            {
                private: ManualLoadExtractionImpl * m_manualloadextraction_impl;
                private: friend class  _ManualLoadExtractionBuilder;
                protected: ManualLoadExtraction();
                public: ~ManualLoadExtraction();
                /** Get values in given units 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetValues
                (
                    NXOpen::Unit * unit /** unit in which values are expected. */,
                    std::vector<NXString> & keys /** list of keys (loadcase names) */,
                    std::vector<double> & values /** list of values */
                );
                /** Set values in given units 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetValues
                (
                    NXOpen::Unit * unit /** unit in which values are specified. */,
                    std::vector<NXString> & keys /** list of keys (loadcase names) */,
                    const std::vector<double> & values /** list of values */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
