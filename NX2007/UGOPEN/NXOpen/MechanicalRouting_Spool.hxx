#ifndef NXOpen_MECHANICALROUTING_SPOOL_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_SPOOL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_Spool.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class Spool;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class ComponentGroup;
    }
    class NXObject;
    class ViewSet;
    namespace MechanicalRouting
    {
        class _SpoolBuilder;
        class SpoolImpl;
        /** The Spool class maintains a list of components used in a single manufactuable unit.
                Use the @link NXOpen::MechanicalRouting::SpoolBuilder NXOpen::MechanicalRouting::SpoolBuilder@endlink 
                to create a new Spool object.
                 <br> To create an instance of this class use @link NXOpen::MechanicalRouting::SpoolBuilder NXOpen::MechanicalRouting::SpoolBuilder@endlink   <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  Spool : public NXOpen::NXObject
        {
            private: SpoolImpl * m_spool_impl;
            private: friend class  _SpoolBuilder;
            protected: Spool();
            public: ~Spool();
            /**Returns  the name of the spool 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: NXString Name
            (
            );
            /**Returns  the description of the spool 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: NXString Description
            (
            );
            /** Gets the members of the spool 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: std::vector<NXOpen::Assemblies::Component *> GetMembers
            (
            );
            /** Does the spool have the passed in object as a member? 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: bool HasMember
            (
                NXOpen::Assemblies::Component * object /** object */ 
            );

            /// \cond NX_NO_DOC 
            /**Returns  the view set of the spool 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: NXOpen::ViewSet * ViewSet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the component group of the spool 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced") OR routing_pipetube ("Routing Piping and Tubing") OR routing_hvac ("Routing HVAC") */
            public: NXOpen::Assemblies::ComponentGroup * ComponentGroup
            (
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
