#ifndef NXOpen_JOIN_GROUPJOINSBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_GROUPJOINSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_GroupJoinsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class GroupJoinsBuilder;
    }
    class Builder;
    namespace Join
    {
        class _GroupJoinsBuilderBuilder;
        class GroupJoinsBuilderImpl;
        /** Represents a join grouping utility builder.  <br> To create a new instance of this class, use @link NXOpen::Join::JoinManager::CreateGroupJoinsBuilder  NXOpen::Join::JoinManager::CreateGroupJoinsBuilder @endlink  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  GroupJoinsBuilder : public NXOpen::Builder
        {
            /** Specifies a grouping method type to be used while grouping joins. */
            public: enum GroupingMethod
            {
                GroupingMethodStandard/** A standard one, which uses different default criterias of grouping. */,
                GroupingMethodCustom/** A custom method type uses a pre-registered callback for join grouping. */
            };

            private: GroupJoinsBuilderImpl * m_groupjoinsbuilder_impl;
            private: friend class  _GroupJoinsBuilderBuilder;
            protected: GroupJoinsBuilder();
            public: ~GroupJoinsBuilder();
            /**Returns  the value of grouping type. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Join::GroupJoinsBuilder::GroupingMethod GroupingMethodType
            (
            );
            /**Sets  the value of grouping type. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetGroupingMethodType
            (
                NXOpen::Join::GroupJoinsBuilder::GroupingMethod groupingMethod /** groupingmethod */ 
            );
            /**Returns  the value of hardware criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool Hardware
            (
            );
            /**Sets  the value of hardware criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetHardware
            (
                bool hardware /** hardware */ 
            );
            /**Returns  the value of hole requirement criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool HoleRequirements
            (
            );
            /**Sets  the value of hole requirement criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetHoleRequirements
            (
                bool holeRequirements /** holerequirements */ 
            );
            /**Returns  the value of custom attributes criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool CustomAttributes
            (
            );
            /**Sets  the value of custom attributes criteria. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetCustomAttributes
            (
                bool customAttributes /** customattributes */ 
            );
            /**Returns  the value of use custom naming scheme. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseCustomNamingScheme
            (
            );
            /**Sets  the value of use custom naming scheme. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetUseCustomNamingScheme
            (
                bool useCustomNamingScheme /** usecustomnamingscheme */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
