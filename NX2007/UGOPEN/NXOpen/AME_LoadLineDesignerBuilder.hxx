#ifndef NXOpen_AME_LOADLINEDESIGNERBUILDER_HXX_INCLUDED
#define NXOpen_AME_LOADLINEDESIGNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_LoadLineDesignerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class LoadLineDesignerBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace AME
    {
        class _LoadLineDesignerBuilderBuilder;
        class LoadLineDesignerBuilderImpl;
        /** JA class for the insert LoadLineDesigner dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateLoadLineDesignerBuilder  NXOpen::AME::AMEManager::CreateLoadLineDesignerBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  LoadLineDesignerBuilder : public NXOpen::Builder
        {
            /**enum for the revision rule*/
            public: enum RevisionRuleType
            {
                RevisionRuleTypeWorking/** working */ ,
                RevisionRuleTypeNoWorking/** no working */ 
            };

            private: LoadLineDesignerBuilderImpl * m_loadlinedesignerbuilder_impl;
            private: friend class  _LoadLineDesignerBuilderBuilder;
            protected: LoadLineDesignerBuilder();
            public: ~LoadLineDesignerBuilder();
            /**Returns  the revision rule 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::LoadLineDesignerBuilder::RevisionRuleType EnumRevisionRule
            (
            );
            /**Sets  the revision rule 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetEnumRevisionRule
            (
                NXOpen::AME::LoadLineDesignerBuilder::RevisionRuleType enumRevisionRule /** enumrevisionrule */ 
            );
            /**Returns  the selected objects
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::SelectNXObjectList * SelectionEngObject
            (
            );
            /**Returns  the toggle for additional objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleAdditionalObjects
            (
            );
            /**Sets  the toggle for additional objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleAdditionalObjects
            (
                bool toggleAdditionalObjects /** toggleadditionalobjects */ 
            );
            /**Returns  the perimeter 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: double Perimeter
            (
            );
            /**Sets  the perimeter 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetPerimeter
            (
                double perimeter /** perimeter */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
