#ifndef NXOpen_MFG_MLP_INPUT_HXX_INCLUDED
#define NXOpen_MFG_MLP_INPUT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_Mlp_Input.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmfgmlpopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace Mlp
        {
            class Input;
        }
    }
    class TaggedObject;
    namespace Mfg
    {
        namespace Mlp
        {
            class _InputBuilder;
            class InputImpl;
            /** Represents a Machining Line Planner command input  <br> To obtain an instance of this class use @link NXOpen::Mfg::Mlp::Command::CreateInput NXOpen::Mfg::Mlp::Command::CreateInput@endlink .  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class MFGMLPOPENCPPEXPORT  Input : public NXOpen::TaggedObject
            {
                private: InputImpl * m_input_impl;
                private: friend class  _InputBuilder;
                protected: Input();
                public: ~Input();
                /** Set input Machining Line Planner subjects that the command will work on 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                public: void SetSubjects
                (
                    const std::vector<NXOpen::TaggedObject *> & subjects /** subjects */ 
                );
                /** Set input Machining Line Planner targets for the command 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                public: void SetTargets
                (
                    const std::vector<NXOpen::TaggedObject *> & targets /** targets */ 
                );
                /** Add input argument for the command 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                public: void AddArgument
                (
                    const NXString & name /** name */ ,
                    const NXString & value /** value */ 
                );
                /** Add input argument for the command 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                void AddArgument
                (
                    const char * name /** name */ ,
                    const char * value /** value */ 
                );
                /** Set input property for the command 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                public: void SetProperty
                (
                    const NXString & name /** name */ ,
                    const NXString & value /** value */ 
                );
                /** Set input property for the command 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                void SetProperty
                (
                    const char * name /** name */ ,
                    const char * value /** value */ 
                );
                /** Destroy input 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_mlp_setup (" NX Multi Setup Planner") */
                public: void Destroy
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
