#ifndef NXOpen_ANNOTATIONS_PMISECTIONVIEWSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMISECTIONVIEWSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiSectionViewSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CuttingPlaneSymbolBuilder.hxx>
#include <NXOpen/Annotations_HatchFillSettingsBuilder.hxx>
#include <NXOpen/Annotations_PmiSectionViewViewBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PmiSectionViewSettingsBuilder;
    }
    namespace Annotations
    {
        class CuttingPlaneSymbolBuilder;
    }
    namespace Annotations
    {
        class HatchFillSettingsBuilder;
    }
    namespace Annotations
    {
        class PmiSectionViewViewBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    namespace Annotations
    {
        class _PmiSectionViewSettingsBuilderBuilder;
        class PmiSectionViewSettingsBuilderImpl;
        /** Represents the Lightweight Section View Settings 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PmiSectionViewSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: PmiSectionViewSettingsBuilderImpl * m_pmisectionviewsettingsbuilder_impl;
            private: friend class  _PmiSectionViewSettingsBuilderBuilder;
            protected: PmiSectionViewSettingsBuilder();
            public: ~PmiSectionViewSettingsBuilder();
            /**Returns  the View settings builder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiSectionViewViewBuilder * View
            (
            );
            /**Returns  the Crosshatch settings builder 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::HatchFillSettingsBuilder * Crosshatch
            (
            );
            /**Returns  the Cutting plane symbol builder
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CuttingPlaneSymbolBuilder * CuttingPlaneSymbol
            (
            );
            /** Inherit Settings From Selected Objects 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void InheritSettingsFromSelectedObject
            (
                NXOpen::NXObject * selectedObject /** The selected 2C Component object. NULL is not allowed. */
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void InheritSettingsFromPreferences
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
