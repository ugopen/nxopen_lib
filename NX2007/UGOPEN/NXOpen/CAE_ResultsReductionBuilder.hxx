#ifndef NXOpen_CAE_RESULTSREDUCTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESULTSREDUCTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultsReductionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResultsManipulationBuilder.hxx>
#include <NXOpen/CAE_ResultsManipulationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultsReductionBuilder;
    }
    namespace CAE
    {
        class Result;
    }
    namespace CAE
    {
        class ResultParameters;
    }
    namespace CAE
    {
        class ResultsManipulationBuilder;
    }
    namespace Fields
    {
        class FieldDomain;
    }
    class Unit;
    namespace CAE
    {
        class _ResultsReductionBuilderBuilder;
        class ResultsReductionBuilderImpl;
        /** Represents a @link NXOpen::CAE::ResultsReductionBuilder NXOpen::CAE::ResultsReductionBuilder@endlink   <br> To obtain an instance of this class use @link NXOpen::Session::ResultManager NXOpen::Session::ResultManager@endlink .  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultsReductionBuilder : public NXOpen::CAE::ResultsManipulationBuilder
        {
            /** Incompatible results options */
            public: enum IncompatibleResults
            {
                IncompatibleResultsSkip/** skip */ ,
                IncompatibleResultsAbort/** abort */ 
            };

            /** No data options */
            public: enum NoData
            {
                NoDataSkip/** skip */ ,
                NoDataZeroFill/** zero fill */ 
            };

            /** evaluation error options */
            public: enum EvaluationError
            {
                EvaluationErrorSkip/** skip */ ,
                EvaluationErrorZeroFill/** zero fill */ ,
                EvaluationErrorAbort/** abort */ 
            };

            /** output types  */
            public: enum Output
            {
                OutputExportResultFile/** export result file */ ,
                OutputCreatePostView/** create post view */ ,
                OutputCreateField/** create field */ 
            };

            private: ResultsReductionBuilderImpl * m_resultsreductionbuilder_impl;
            private: friend class  _ResultsReductionBuilderBuilder;
            protected: ResultsReductionBuilder();
            public: ~ResultsReductionBuilder();
            /** The result types 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResults
            (
                const std::vector<NXOpen::CAE::Result *> & results /** set results */,
                const std::vector<NXOpen::CAE::ResultParameters *> & parameters /** set result parameters */,
                std::vector<NXString> & names /** set result names */
            );
            /** The formula 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFormula
            (
                const NXString & formula /** set formula */
            );
            /** The formula 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFormula
            (
                const char * formula /** set formula */
            );
            /** Set incompatible results option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetIncompatibleResultsOption
            (
                NXOpen::CAE::ResultsReductionBuilder::IncompatibleResults incompatibleResultsOption /** incompatibleresultsoption */ 
            );
            /** Set no data option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNoDataOption
            (
                NXOpen::CAE::ResultsReductionBuilder::NoData noDataOption /** nodataoption */ 
            );
            /** Set evaluation error option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEvaluationErrorOption
            (
                NXOpen::CAE::ResultsReductionBuilder::EvaluationError evaluationErrorOption /** evaluationerroroption */ 
            );
            /** Set output type from result reduction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOutput
            (
                NXOpen::CAE::ResultsReductionBuilder::Output output /** output */ 
            );
            /** Set result type name that will be displayed in postview 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultTypeName
            (
                const NXString & resultTypeName /** resulttypename */ 
            );
            /** Set result type name that will be displayed in postview 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetResultTypeName
            (
                const char * resultTypeName /** resulttypename */ 
            );
            /** Set result unit for given result type/dependent field variable type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultUnit
            (
                NXOpen::Unit * unit /** unit */ 
            );
            /** Set view index where postview will be created
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetViewIndexForPostView
            (
                int viewIndex /** view index */ 
            );
            /** Set field Name to be created
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFieldName
            (
                const NXString & fieldName /** fieldname */ 
            );
            /** Set field Name to be created
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFieldName
            (
                const char * fieldName /** fieldname */ 
            );
            /** Set Independent Domain Name
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetIndependentDomain NXOpen::CAE::ResultsReductionBuilder::SetIndependentDomain@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::CAE::ResultsReductionBuilder::SetIndependentDomain instead.") void SetIndependentDomainName
            (
                const NXString & domainName /** domain name */ 
            );
            /** Set Independent Domain Name
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetIndependentDomain NXOpen::CAE::ResultsReductionBuilder::SetIndependentDomain@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetIndependentDomainName
            (
                const char * domainName /** domain name */ 
            );
            /** Set Dependent Domain Name
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetDependentDomain NXOpen::CAE::ResultsReductionBuilder::SetDependentDomain@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::CAE::ResultsReductionBuilder::SetDependentDomain instead.") void SetDependentDomainName
            (
                const NXString & domainName /** domain name */ 
            );
            /** Set Dependent Domain Name
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetDependentDomain NXOpen::CAE::ResultsReductionBuilder::SetDependentDomain@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetDependentDomainName
            (
                const char * domainName /** domain name */ 
            );
            /** Set element value to be used at a node 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetElementValueAtNode
            (
                NXOpen::CAE::ResultsManipulationBuilder::ElementValueAtNode value /** value */ 
            );
            /** Set Independent Domain
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetIndependentEnum NXOpen::CAE::ResultsReductionBuilder::SetIndependentEnum@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::ResultsReductionBuilder::SetIndependentEnum instead.") void SetIndependentDomain
            (
                NXOpen::Fields::FieldDomain * domain /** Independent Domain*/
            );
            /** Set Dependent Domain
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::ResultsReductionBuilder::SetDependentEnum NXOpen::CAE::ResultsReductionBuilder::SetDependentEnum@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::ResultsReductionBuilder::SetDependentEnum instead.") void SetDependentDomain
            (
                NXOpen::Fields::FieldDomain * domain /** Dependent Domain*/
            );
            /** Set Independent Domain Enum
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetIndependentEnum
            (
                int indepenDomain /** independomain */ 
            );
            /** Set Dependent Domain Enum
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDependentEnum
            (
                int depenDomain /** dependomain */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
