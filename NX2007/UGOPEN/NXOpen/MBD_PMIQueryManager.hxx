#ifndef NXOpen_MBD_PMIQUERYMANAGER_HXX_INCLUDED
#define NXOpen_MBD_PMIQUERYMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MBD_PMIQueryManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/MBD_PMIQueryBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmbdopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MBD
    {
        class PMIQueryManager;
    }
    class Session;
    namespace MBD
    {
        class PMIQueryBuilder;
    }
    class Part;
    namespace MBD
    {
        class PMIQueryManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents an object that manages PMI query related services.
              <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class MBDOPENCPPEXPORT  PMIQueryManager
        {
            private: PMIQueryManagerImpl * m_pmiquerymanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PMIQueryManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static PMIQueryManager* thePMIQueryManager;
            /** Returns the PMIQueryManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static PMIQueryManager* GetPMIQueryManager(NXOpen::Session *owner);
            public: ~PMIQueryManager();

            /// \cond NX_NO_DOC 
            /** Creates the @link NXOpen::MBD::PMIQueryBuilder NXOpen::MBD::PMIQueryBuilder@endlink  in the part.
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MBD::PMIQueryBuilder * CreatePmiqueryBuilder
            (
                NXOpen::Part * part /** The part that owns the builder. The builder owner is not
                                                                          strictly required (that is, it can be NULL), but it is
                                                                          highly suggested to ensure proper cleanup of the builder in
                                                                          case the client does not explicitly provided owner part.  */
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
