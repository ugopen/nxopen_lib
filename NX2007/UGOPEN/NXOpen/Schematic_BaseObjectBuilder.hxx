#ifndef NXOpen_SCHEMATIC_BASEOBJECTBUILDER_HXX_INCLUDED
#define NXOpen_SCHEMATIC_BASEOBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Schematic_BaseObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Schematic_Sheet.hxx>
#include <NXOpen/libnxopencpp_schematic_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Schematic
    {
        class BaseObjectBuilder;
    }
    class Builder;
    namespace Schematic
    {
        class Sheet;
    }
    namespace Schematic
    {
        class _BaseObjectBuilderBuilder;
        class BaseObjectBuilderImpl;

        /// \cond NX_NO_DOC 
        /**  @brief  Represents a BaseObjectBuilder.  

           <br> This is an abstract class and cannot be instantiated.  <br> 
         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_SCHEMATICEXPORT  BaseObjectBuilder : public NXOpen::Builder
        {
            private: BaseObjectBuilderImpl * m_baseobjectbuilder_impl;
            private: friend class  _BaseObjectBuilderBuilder;
            protected: BaseObjectBuilder();
            public: ~BaseObjectBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the id of the object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Id
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the tag of this object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the sheet containing the object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Schematic::Sheet * Sheet
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the sheet containing the object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSheet
            (
                NXOpen::Schematic::Sheet * sheet /** sheet */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the discipline of the object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDisciplines
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets the discipline of the object. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDisciplines
            (
                const std::vector<NXString> & disciplines /** disciplines */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
