#ifndef NXOpen_MOTION_SOLVERPERFORMANCEREPORT_HXX_INCLUDED
#define NXOpen_MOTION_SOLVERPERFORMANCEREPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SolverPerformanceReport.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_MotionObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class SolverPerformanceReport;
    }
    namespace Motion
    {
        class MotionObject;
    }
    namespace Motion
    {
        class _SolverPerformanceReportBuilder;
        class SolverPerformanceReportImpl;
        /** Represents the @link NXOpen::Motion::SolverPerformanceReport NXOpen::Motion::SolverPerformanceReport@endlink   <br> An instance of this class can be obtained with @link Motion::PostProcess::GetSolverPerformanceReport Motion::PostProcess::GetSolverPerformanceReport@endlink   <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  SolverPerformanceReport : public NXOpen::Motion::MotionObject
        {
            private: SolverPerformanceReportImpl * m_solverperformancereport_impl;
            private: friend class  _SolverPerformanceReportBuilder;
            protected: SolverPerformanceReport();
            public: ~SolverPerformanceReport();
            /** Parse information file 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ParseFile
            (
                const NXString & file /** The file to parse */,
                bool* hasTimeReport /** hastimereport */ ,
                bool* hasAdvanceDebug /** hasadvancedebug */ 
            );
            /** Parse information file 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ParseFile
            (
                const char * file /** The file to parse */,
                bool* hasTimeReport /** hastimereport */ ,
                bool* hasAdvanceDebug /** hasadvancedebug */ 
            );
            /** Plot display variables 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void PlotDisplayVariable
            (
                const std::vector<NXString> & files /** files */ ,
                int winDevice /** windevice */ ,
                int viewIndex /** viewindex */ ,
                NXOpen::Motion::SolverPerformanceReportDisplayVariableType varType /** vartype */ ,
                NXOpen::Motion::SolverPerformanceReportType reportType /** reporttype */ 
            );
            /** Finish solver performance report 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Finish
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
