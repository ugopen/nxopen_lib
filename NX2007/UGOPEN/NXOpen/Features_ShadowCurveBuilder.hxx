#ifndef NXOpen_FEATURES_SHADOWCURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHADOWCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShadowCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_CurveSettings.hxx>
#include <NXOpen/Features_ServiceOrientedFeatureCurveBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ShadowCurveBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class ServiceOrientedFeatureCurveBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveSettings;
    }
    class Plane;
    class Point;
    class ScCollector;
    class Section;
    namespace Features
    {
        class _ShadowCurveBuilderBuilder;
        class ShadowCurveBuilderImpl;
        /**
            Represents a @link Features::ShadowCurve Features::ShadowCurve@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::CurveFeatureCollection::CreateShadowCurveBuilder  NXOpen::Features::CurveFeatureCollection::CreateShadowCurveBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AccuracyType </term> <description> 
         
        Standard </description> </item> 

        <item><term> 
         
        ClippingType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        CurveLocationType </term> <description> 
         
        SilhouetteCurve </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.CurveJoinMethod </term> <description> 
         
        No </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.Degree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.FitMethod </term> <description> 
         
        DegreeAndSegments </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.IsAdvancedFit </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.IsAlignShape </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.MaximumDegree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.MaximumSegments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.MinimumDegree </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        CurveSettings.CurveFitData.Segments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DistanceThreshold </term> <description> 
         
        0.25 (millimeters part), 0.01 (inches part) </description> </item> 

        <item><term> 
         
        EnableShadowRange </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        HalfAngle.Value </term> <description> 
         
        20 </description> </item> 

        <item><term> 
         
        LightSourceType </term> <description> 
         
        Vector </description> </item> 

        <item><term> 
         
        MaskBodyProcessingTypes </term> <description> 
         
        FasterResult </description> </item> 

        <item><term> 
         
        MaskType </term> <description> 
         
        Bodies </description> </item> 

        <item><term> 
         
        OptimizeCurveFlag </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShadowRangeOnPlane.Value </term> <description> 
         
        5000 (millimeters part), 200 (inches part) </description> </item> 

        <item><term> 
         
        SphereDiameter.Value </term> <description> 
         
        10000 (millimeters part), 400 (inches part) </description> </item> 

        <item><term> 
         
        VerticalHalfAngle.Value </term> <description> 
         
        10 </description> </item> 

        <item><term> 
         
        WidthHalfAngle.Value </term> <description> 
         
        20 </description> </item> 

        </list> 

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ShadowCurveBuilder : public NXOpen::Features::ServiceOrientedFeatureCurveBuilder
        {
            /**
                    
                    */
            public: enum LightSourceTypes
            {
                LightSourceTypesVector/** vector */ ,
                LightSourceTypesPoint/** point */ 
            };

            /**
                    
                    */
            public: enum MaskTypes
            {
                MaskTypesBodies/** bodies */ ,
                MaskTypesCurves/** curves */ ,
                MaskTypesAssemblyUnassociativeOnly/** assembly unassociative only */ 
            };

            /**
                    
                    */
            public: enum ClippingTypes
            {
                ClippingTypesNone/** none */ ,
                ClippingTypesCone/** cone */ ,
                ClippingTypesPyramid/** pyramid */ ,
                ClippingTypesBody/** body */ 
            };

            /**
                    
                    */
            public: enum CurveLocationTypes
            {
                CurveLocationTypesSilhouetteCurve/** silhouette curve */ ,
                CurveLocationTypesShadowonPlane/** shadowon plane */ ,
                CurveLocationTypesShadowonFace/** shadowon face */ ,
                CurveLocationTypesShadowonSphere/** shadowon sphere */ 
            };

            /**
                    
                    */
            public: enum AccuracyTypes
            {
                AccuracyTypesUltraFine/** ultra fine */ ,
                AccuracyTypesFine/** fine */ ,
                AccuracyTypesStandard/** standard */ ,
                AccuracyTypesCourse/** course */ ,
                AccuracyTypesRough/** rough */ 
            };

            /**
                    
                    */
            public: enum MaskBodyProcessingType
            {
                MaskBodyProcessingTypeFasterResult/** faster result */ ,
                MaskBodyProcessingTypeMorePreciseResult/** more precise result */ 
            };

            private: ShadowCurveBuilderImpl * m_shadowcurvebuilder_impl;
            private: friend class  _ShadowCurveBuilderBuilder;
            protected: ShadowCurveBuilder();
            public: ~ShadowCurveBuilder();
            /**Returns  the light source type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::LightSourceTypes LightSourceType
            (
            );
            /**Sets  the light source type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetLightSourceType
            (
                NXOpen::Features::ShadowCurveBuilder::LightSourceTypes lightSourceType /** lightsourcetype */ 
            );
            /**Returns  the origin point 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * OriginPoint
            (
            );
            /**Sets  the origin point 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOriginPoint
            (
                NXOpen::Point * originPoint /** originpoint */ 
            );
            /**Returns  the ray direction 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * RayDirection
            (
            );
            /**Sets  the ray direction 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRayDirection
            (
                NXOpen::Direction * rayDirection /** raydirection */ 
            );
            /**Returns  the mask type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::MaskTypes MaskType
            (
            );
            /**Sets  the mask type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMaskType
            (
                NXOpen::Features::ShadowCurveBuilder::MaskTypes maskType /** masktype */ 
            );
            /**Returns  the masking bodies 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * MaskingBodies
            (
            );
            /**Sets  the masking bodies 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMaskingBodies
            (
                NXOpen::ScCollector * maskingBodies /** maskingbodies */ 
            );
            /**Returns  the masking curves 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * MaskingCurves
            (
            );
            /**Sets  the masking curves 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMaskingCurves
            (
                NXOpen::Section * maskingCurves /** maskingcurves */ 
            );
            /**Returns  the unassociative masking bodies from assembly 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * UnassociativeMaskingBodiesFromAssembly
            (
            );
            /**Sets  the unassociative masking bodies from assembly 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetUnassociativeMaskingBodiesFromAssembly
            (
                NXOpen::ScCollector * unassociativeMaskingBodiesFromAssembly /** unassociativemaskingbodiesfromassembly */ 
            );
            /**Returns  the  type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::ClippingTypes ClippingType
            (
            );
            /**Sets  the  type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetClippingType
            (
                NXOpen::Features::ShadowCurveBuilder::ClippingTypes clippingType /** clippingtype */ 
            );
            /**Returns  the beam direction 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * BeamDirection
            (
            );
            /**Sets  the beam direction 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBeamDirection
            (
                NXOpen::Direction * beamDirection /** beamdirection */ 
            );
            /**Returns  the half angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HalfAngle
            (
            );
            /**Returns  the up vector 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * UpVector
            (
            );
            /**Sets  the up vector 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetUpVector
            (
                NXOpen::Direction * upVector /** upvector */ 
            );
            /**Returns  the width half angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * WidthHalfAngle
            (
            );
            /**Returns  the vertical half angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * VerticalHalfAngle
            (
            );
            /**Returns  the clipping body 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ClippingBody
            (
            );
            /**Sets  the clipping body 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetClippingBody
            (
                NXOpen::ScCollector * clippingBody /** clippingbody */ 
            );
            /**Returns  the curve location type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::CurveLocationTypes CurveLocationType
            (
            );
            /**Sets  the curve location type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurveLocationType
            (
                NXOpen::Features::ShadowCurveBuilder::CurveLocationTypes curveLocationType /** curvelocationtype */ 
            );
            /**Returns  the curve location plane 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * CurveLocationPlane
            (
            );
            /**Sets  the curve location plane 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurveLocationPlane
            (
                NXOpen::Plane * curveLocationPlane /** curvelocationplane */ 
            );
            /**Returns  the enable shadow range 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableShadowRange
            (
            );
            /**Sets  the enable shadow range 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEnableShadowRange
            (
                bool enableShadowRange /** enableshadowrange */ 
            );
            /**Returns  the shadow range on plane 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ShadowRangeOnPlane
            (
            );
            /**Returns  the sphere diameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SphereDiameter
            (
            );
            /**Returns  the curve location faces 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CurveLocationFaces
            (
            );
            /**Sets  the curve location faces 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurveLocationFaces
            (
                NXOpen::ScCollector * curveLocationFaces /** curvelocationfaces */ 
            );
            /**Returns  the accuracy type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::AccuracyTypes AccuracyType
            (
            );
            /**Sets  the accuracy type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAccuracyType
            (
                NXOpen::Features::ShadowCurveBuilder::AccuracyTypes accuracyType /** accuracytype */ 
            );
            /**Returns  the curve setting data 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveSettings * CurveSettings
            (
            );
            /**Sets  the curve setting data 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurveSettings
            (
                NXOpen::GeometricUtilities::CurveSettings * curveSettingData /** curvesettingdata */ 
            );
            /**Returns  the Optimize Curve 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OptimizeCurveFlag
            (
            );
            /**Sets  the Optimize Curve 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOptimizeCurveFlag
            (
                bool optimizeCurveFlag /** optimizecurveflag */ 
            );
            /**Returns  the distance threshold 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceThreshold
            (
            );
            /**Sets  the distance threshold 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceThreshold
            (
                double distanceThreshold /** distancethreshold */ 
            );
            /**Returns  the mask body processing type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ShadowCurveBuilder::MaskBodyProcessingType MaskBodyProcessingTypes
            (
            );
            /**Sets  the mask body processing type 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMaskBodyProcessingTypes
            (
                NXOpen::Features::ShadowCurveBuilder::MaskBodyProcessingType maskBodyProcessingTypes /** maskbodyprocessingtypes */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
