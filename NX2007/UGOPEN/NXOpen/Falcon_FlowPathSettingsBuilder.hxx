#ifndef NXOpen_FALCON_FLOWPATHSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_FALCON_FLOWPATHSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Falcon_FlowPathSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_falcon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Falcon
    {
        class FlowPathSettingsBuilder;
    }
    class Builder;
    namespace Falcon
    {
        class _FlowPathSettingsBuilderBuilder;
        class FlowPathSettingsBuilderImpl;
        /**  <br> To create a new instance of this class, use @link NXOpen::Falcon::FalconManager::CreateFalconFlowPathSettingsBuilder  NXOpen::Falcon::FalconManager::CreateFalconFlowPathSettingsBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ColorFlowpathEnum </term> <description> 
         
        ByProduct </description> </item> 

        <item><term> 
         
        ShowArrowHeadEnum </term> <description> 
         
        DontShow </description> </item> 

        </list> 

         <br>  Created in NX2007.0.0.  <br>  
        */
        class NXOPENCPP_FALCONEXPORT  FlowPathSettingsBuilder : public NXOpen::Builder
        {
            /** */
            public: enum ShowArrowHead
            {
                ShowArrowHeadDontShow/** dont show */ ,
                ShowArrowHeadAtEndofPath/** at endof path */ ,
                ShowArrowHeadInMiddleofPathSegment/** in middleof path segment */ ,
                ShowArrowHeadAtEndofPathSegment/** at endof path segment */ 
            };

            /** */
            public: enum ColorFlowPath
            {
                ColorFlowPathByProduct/** by product */ ,
                ColorFlowPathByEquipment/** by equipment */ 
            };

            private: FlowPathSettingsBuilderImpl * m_flowpathsettingsbuilder_impl;
            private: friend class  _FlowPathSettingsBuilderBuilder;
            protected: FlowPathSettingsBuilder();
            public: ~FlowPathSettingsBuilder();
            /**Returns  the show arrow head enum 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Falcon::FlowPathSettingsBuilder::ShowArrowHead ShowArrowHeadEnum
            (
            );
            /**Sets  the show arrow head enum 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetShowArrowHeadEnum
            (
                NXOpen::Falcon::FlowPathSettingsBuilder::ShowArrowHead showArrowHeadEnum /** showarrowheadenum */ 
            );
            /**Returns  the color flowpath enum 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Falcon::FlowPathSettingsBuilder::ColorFlowPath ColorFlowpathEnum
            (
            );
            /**Sets  the color flowpath enum 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetColorFlowpathEnum
            (
                NXOpen::Falcon::FlowPathSettingsBuilder::ColorFlowPath colorFlowpathEnum /** colorflowpathenum */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
