#ifndef NXOpen_COMPOSITES_PRODUCIBILITYBUILDER_HXX_INCLUDED
#define NXOpen_COMPOSITES_PRODUCIBILITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Composites_ProducibilityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libcompositesopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Composites
    {
        class ProducibilityBuilder;
    }
    class Builder;
    namespace Composites
    {
        class SelectPly;
    }
    class Point;
    namespace Composites
    {
        class _ProducibilityBuilderBuilder;
        class ProducibilityBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Creates or edits a @link Composites::Producibility Composites::Producibility@endlink  object
             <br> To create a new instance of this class, use @link NXOpen::Composites::Manager::CreateProducibilityBuilder  NXOpen::Composites::Manager::CreateProducibilityBuilder @endlink  <br> 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class COMPOSITESOPENCPPEXPORT  ProducibilityBuilder : public NXOpen::Builder
        {
            private: ProducibilityBuilderImpl * m_producibilitybuilder_impl;
            private: friend class  _ProducibilityBuilderBuilder;
            protected: ProducibilityBuilder();
            public: ~ProducibilityBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the @link Composites::Ply Composites::Ply@endlink  on which the @link Composites::Producibility Composites::Producibility@endlink  is run. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Composites::SelectPly * Ply
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the starting @link Point Point@endlink  of the @link Composites::Producibility Composites::Producibility@endlink . 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Origin
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the starting @link Point Point@endlink  of the @link Composites::Producibility Composites::Producibility@endlink . 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                NXOpen::Point * originPoint /** originpoint */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the cell size of the @link Composites::Producibility Composites::Producibility@endlink  simulation. A smaller value creates denser results. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double CellSize
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the cell size of the @link Composites::Producibility Composites::Producibility@endlink  simulation. A smaller value creates denser results. 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCellSize
            (
                double cellSize /** cellsize */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
