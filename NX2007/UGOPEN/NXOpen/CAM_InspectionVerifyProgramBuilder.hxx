#ifndef NXOpen_CAM_INSPECTIONVERIFYPROGRAMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONVERIFYPROGRAMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionVerifyProgramBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionVerifyProgramBuilder;
    }
    class Builder;
    class NXColor;
    namespace CAM
    {
        class _InspectionVerifyProgramBuilderBuilder;
        class InspectionVerifyProgramBuilderImpl;
        /** Inspection Verify Program dialog builder  <br> To create a new instance of this class, use @link NXOpen::CAM::InspectionOperationCollection::CreateVerifyProgramBuilder  NXOpen::CAM::InspectionOperationCollection::CreateVerifyProgramBuilder @endlink  <br> 
         <br>  Created in NX1880.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionVerifyProgramBuilder : public NXOpen::Builder
        {
            private: InspectionVerifyProgramBuilderImpl * m_inspectionverifyprogrambuilder_impl;
            private: friend class  _InspectionVerifyProgramBuilderBuilder;
            protected: InspectionVerifyProgramBuilder();
            public: ~InspectionVerifyProgramBuilder();
            /**Returns  the log file 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LogFile
            (
            );
            /**Sets  the log file 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetLogFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the log file 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetLogFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the option to do DMIS syntax check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckDmisSyntax
            (
            );
            /**Sets  the option to do DMIS syntax check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetCheckDmisSyntax
            (
                bool checkDmisSyntax /** checkdmissyntax */ 
            );
            /**Returns  the option to do Program Error check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckProgramErrors
            (
            );
            /**Sets  the option to do Program Error check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetCheckProgramErrors
            (
                bool checkProgramErrors /** checkprogramerrors */ 
            );
            /**Returns  the option to do Tolerance Errors check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckToleranceErrors
            (
            );
            /**Sets  the option to do Tolerance Errors check 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetCheckToleranceErrors
            (
                bool checkTolErrors /** checktolerrors */ 
            );
            /**Returns  the option to color Inspection Navigator rows 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: bool ColorIonRows
            (
            );
            /**Sets  the option to color Inspection Navigator rows 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetColorIonRows
            (
                bool colorIonRows /** colorionrows */ 
            );
            /**Returns  the DMIS syntax color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * SyntaxColor
            (
            );
            /**Sets  the DMIS syntax color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetSyntaxColor
            (
                NXOpen::NXColor * syntaxColor /** syntaxcolor */ 
            );
            /**Returns  the Program error color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ProgramColor
            (
            );
            /**Sets  the Program error color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetProgramColor
            (
                NXOpen::NXColor * programColor /** programcolor */ 
            );
            /**Returns  the Tolerance error color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ToleranceColor
            (
            );
            /**Sets  the Tolerance error color 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetToleranceColor
            (
                NXOpen::NXColor * tolColor /** tolcolor */ 
            );
            /**Returns  the option to list output to window 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : None */
            public: bool ListOutput
            (
            );
            /**Sets  the option to list output to window 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetListOutput
            (
                bool listOutput /** listoutput */ 
            );
            /** Verify Program 
             <br>  Created in NX1880.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void VerifyProgram
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
