#ifndef NXOpen_CAE_CURVEOPERATION_HXX_INCLUDED
#define NXOpen_CAE_CURVEOPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CurveOperation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CurveOperationDataSource.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord2D.hxx>
#include <NXOpen/CAE_FTK_ExportFilesParameter.hxx>
#include <NXOpen/CAE_XYFunctionDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_Plot.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CurveOperation;
    }
    class Session;
    namespace CAE
    {
        class CurveOperationDataSource;
    }
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord2D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ExportFilesParameter;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Plot;
        }
    }
    class NXObject;
    namespace CAE
    {
        class CurveOperationImpl;
        /**  @brief  Provides methods to evaluate curve expressions.  

         
            
             <br>  
            A curve expressions can consist of math functions, curve variables, and expressions
            (see @link NXOpen::Expression NXOpen::Expression@endlink ). Curve expression could be evaluated 
            to generate a data list to represent a data component of a record.
             <br> 

             <br> 
            Curve variable is a function. It denotes a data list of curve. For curve expression 
            <b><tt>curve("w1v0p0r0c0","x")+sin(50)</tt></b>, curve variable is 
            <b><tt>curve("w1v0p0r0c0","x")</tt></b>. It consists of two parts:curve identifier 
            and data dimension. For curve variable <b><tt>curve("w1v0p0r0c0","x")</tt></b>, curve identifier 
            is <b><tt>w1v0p0r0c0</tt></b> and data dimension is <b><tt>x</tt></b>.
             <br> 

             <br> To obtain an instance of this class use @link NXOpen::Session::CurveOperation NXOpen::Session::CurveOperation@endlink .  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CurveOperation
        {
            private: CurveOperationImpl * m_curveoperation_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CurveOperation(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~CurveOperation();
            /**  @brief Generates array record data(see @link NXOpen::CAE::FTK::ArrayRecord2D NXOpen::CAE::FTK::ArrayRecord2D@endlink )
                    by evaluating an array of curve expressions. 

             
                    
                    Do math operation on displayed curves on existing Function Plot to create new record data 
                    or update an existing record data. 

                     <br> 
                    For different function data complex type, the curve expressions amount is limited.
                    And the elements of curve expression array needs to follow some orders.
                    <ol>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::RealOnly NXOpen::CAE::XyFunctionDataComplexType::RealOnly@endlink , curve expression 
                    array consists of two elements. The first element is X curve expression,
                    the second element is Y curve expression.
                    </li>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::RealImaginary NXOpen::CAE::XyFunctionDataComplexType::RealImaginary@endlink , curve 
                    expression array consists of three elements. The first element is X curve expression,
                    the second element is Real curve expression, the third element is Imaginary curve expression.
                    </li>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::MagnitudePhase NXOpen::CAE::XyFunctionDataComplexType::MagnitudePhase@endlink , curve 
                    expression array consists of three elements.The first element is X curve expression, 
                    the second element is Magnitude curve expression, the third element is Phase curve expression.
                    </li>
                    </ol>
                     <br> 
                    
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::FTK::ArrayRecord2D * EvaluateCurveExpressionStrings
            (
                const NXString & recordName /** recordname */ ,
                NXOpen::CAE::XyFunctionDataComplexType dataType /** datatype */ ,
                std::vector<NXString> & curveExpressionStrings /** curveexpressionstrings */ 
            );
            /**  @brief Generates array record data(see @link NXOpen::CAE::FTK::ArrayRecord2D NXOpen::CAE::FTK::ArrayRecord2D@endlink )
                    by evaluating an array of curve expressions. 

             
                    
                    Do math operation on displayed curves on existing Function Plot to create new record data 
                    or update an existing record data. 

                     <br> 
                    For different function data complex type, the curve expressions amount is limited.
                    And the elements of curve expression array needs to follow some orders.
                    <ol>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::RealOnly NXOpen::CAE::XyFunctionDataComplexType::RealOnly@endlink , curve expression 
                    array consists of two elements. The first element is X curve expression,
                    the second element is Y curve expression.
                    </li>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::RealImaginary NXOpen::CAE::XyFunctionDataComplexType::RealImaginary@endlink , curve 
                    expression array consists of three elements. The first element is X curve expression,
                    the second element is Real curve expression, the third element is Imaginary curve expression.
                    </li>
                    <li>
                    For @link NXOpen::CAE::XyFunctionDataComplexType::MagnitudePhase NXOpen::CAE::XyFunctionDataComplexType::MagnitudePhase@endlink , curve 
                    expression array consists of three elements.The first element is X curve expression, 
                    the second element is Magnitude curve expression, the third element is Phase curve expression.
                    </li>
                    </ol>
                     <br> 
                    
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAE::FTK::ArrayRecord2D * EvaluateCurveExpressionStrings
            (
                const char * recordName /** recordname */ ,
                NXOpen::CAE::XyFunctionDataComplexType dataType /** datatype */ ,
                std::vector<NXString> & curveExpressionStrings /** curveexpressionstrings */ 
            );
            /** Validates curve expression string. Prints error validation message 
                    to listing window if failing to validate and being required for output . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void ValidateCurveExpressionString
            (
                const NXString & curveExpressionString /** curveexpressionstring */ ,
                bool isNeedToPrintErrorMessages /** isneedtoprinterrormessages */ 
            );
            /** Validates curve expression string. Prints error validation message 
                    to listing window if failing to validate and being required for output . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            void ValidateCurveExpressionString
            (
                const char * curveExpressionString /** curveexpressionstring */ ,
                bool isNeedToPrintErrorMessages /** isneedtoprinterrormessages */ 
            );
            /** Creates a plot on the graphic window. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Xyplot::Plot * CreatePlot
            (
                int deviceIndex /** deviceindex */ ,
                int viewIndex /** viewindex */ ,
                NXOpen::CAE::FTK::ArrayRecord2D * arrayRecord /** arrayrecord */ 
            );
            /** Ask the data source by identifier. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CurveOperationDataSource * AskDataSource
            (
                NXOpen::NXObject * context /** context */ ,
                const NXString & identifier /** identifier */ 
            );
            /** Ask the data source by identifier. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAE::CurveOperationDataSource * AskDataSource
            (
                NXOpen::NXObject * context /** context */ ,
                const char * identifier /** identifier */ 
            );
            /** Ask all data sources. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: void AskAllDataSources
            (
                NXOpen::NXObject * context /** context */ ,
                std::vector<NXOpen::CAE::CurveOperationDataSource *> & dataSources /** datasources */ 
            );
            /** Creates an object @link  NXOpen::CAE::FTK::ExportFilesParameter   NXOpen::CAE::FTK::ExportFilesParameter @endlink  to contain the
                        settings when exporting data. The object needs to be destroyed after excuting exporting data. 
             <br>  Created in NX2007.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::FTK::ExportFilesParameter * NewExportFilesParameters
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
