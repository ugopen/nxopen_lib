#ifndef NXOpen_FEATURES_SEATBELTANCHORAGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SEATBELTANCHORAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SeatBeltAnchorageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SeatBeltAnchorageBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class SeatBeltAnchorageBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    namespace Features
    {
        class _SeatBeltAnchorageBuilderBuilder;
        /**
            Represents a @link Features::SeatBeltAnchorage Features::SeatBeltAnchorage@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateSeatBeltAnchorageBuilder Features::FeatureCollection::CreateSeatBeltAnchorageBuilder@endlink  <br> 
        Default values:
        AnchorageLocation: VehicleStructure
        BackAngleDbl: 22
        BackAngleDim.RightHandSide: 22
        BeltRouting: OutsideSeatThruSeatSpring
        FloorHeightDim.RightHandSide: 325 (millimeters part), 12.8 (inches part)
        SeatPosition: Left
        SeatType: MovableFront
        SgrpXvalDim.RightHandSide: 1500 (millimeters part), 59.06 (inches part)
        SgrpYvalDim.RightHandSide: -400 (millimeters part), -15.75 (inches part)
        SgrpZvalDim.RightHandSide: 650 (millimeters part), 25.59 (inches part)
        Standard: J383SeatBeltAnchorage
        */
        class NXOPENCPPEXPORT SeatBeltAnchorageBuilder : public Features::FeatureBuilder
        {
            /** the standard type */
            public: enum StandardTypes
            {
                StandardTypesJ383SeatBeltAnchorage/** j383 */,
                StandardTypesJ1369ChildRestraintTetherStraps/** j1369 */,
                StandardTypesBothJ383AndJ1369/** both */
            };

            /** the seat belt anchorage location type */
            public: enum AnchorageLocationTypes
            {
                AnchorageLocationTypesVehicleStructure/** vehicle structure */,
                AnchorageLocationTypesSeatAssembly/** seat assembly */
            };

            /** the seat belt routing type */
            public: enum RoutingTypes
            {
                RoutingTypesOutsideSeatThruSeatSpring/** outside */,
                RoutingTypesToAnchorage/** to anchorage */
            };

            /** the seat type */
            public: enum SeatTypes
            {
                SeatTypesMovableFront/** front */,
                SeatTypesMovableRear/** rear */,
                SeatTypesFixed/** fixed */
            };

            /** the seat position type */
            public: enum SeatPositionTypes
            {
                SeatPositionTypesLeft/** left */,
                SeatPositionTypesRight/** right */,
                SeatPositionTypesNotOutboard/** non-outboard */
            };

            private: friend class  _SeatBeltAnchorageBuilderBuilder;
            protected: SeatBeltAnchorageBuilder();
            /**Returns  the standard for seat belt anchorage  <br> License requirements : None */
            public: NXOpen::Features::SeatBeltAnchorageBuilder::StandardTypes Standard
            (
            );
            /**Sets  the standard for seat belt anchorage  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetStandard
            (
                NXOpen::Features::SeatBeltAnchorageBuilder::StandardTypes standard /** standard */ 
            );
            /** Shows an illustration picture for standard j383 <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void J383Illu
            (
            );
            /** Shows an illustration picture for standard j1369 <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void J1369Illu
            (
            );
            /**Returns  the dimension expression for the X coordinate of SgRp  <br> License requirements : None */
            public: NXOpen::Expression * SgrpXvalDim
            (
            );
            /**Returns  the dimension expression for the Y coordinate of SgRp  <br> License requirements : None */
            public: NXOpen::Expression * SgrpYvalDim
            (
            );
            /**Returns  the dimension expression for the Z coordinate of SgRp  <br> License requirements : None */
            public: NXOpen::Expression * SgrpZvalDim
            (
            );
            /**Returns  the SgRp point  <br> License requirements : None */
            public: NXOpen::Point * SgrpPoint
            (
            );
            /**Sets  the SgRp point  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetSgrpPoint
            (
                NXOpen::Point * sgrpPoint /** sgrppoint */ 
            );
            /**Returns  the dimension expression for back angle  <br> License requirements : None */
            public: NXOpen::Expression * BackAngleDim
            (
            );
            /**Returns  the value of back angle  <br> License requirements : None */
            public: double BackAngleDbl
            (
            );
            /**Sets  the value of back angle  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetBackAngleDbl
            (
                double backAngleDbl /** backangledbl */ 
            );
            /**Returns  the dimension expression for floor height  <br> License requirements : None */
            public: NXOpen::Expression * FloorHeightDim
            (
            );
            /**Returns  the anchorage location type  <br> License requirements : None */
            public: NXOpen::Features::SeatBeltAnchorageBuilder::AnchorageLocationTypes AnchorageLocation
            (
            );
            /**Sets  the anchorage location type  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetAnchorageLocation
            (
                NXOpen::Features::SeatBeltAnchorageBuilder::AnchorageLocationTypes anchorageLocation /** anchoragelocation */ 
            );
            /**Returns  the belt routing type  <br> License requirements : None */
            public: NXOpen::Features::SeatBeltAnchorageBuilder::RoutingTypes BeltRouting
            (
            );
            /**Sets  the belt routing type  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetBeltRouting
            (
                NXOpen::Features::SeatBeltAnchorageBuilder::RoutingTypes beltRouting /** beltrouting */ 
            );
            /**Returns  the seat type  <br> License requirements : None */
            public: NXOpen::Features::SeatBeltAnchorageBuilder::SeatTypes SeatType
            (
            );
            /**Sets  the seat type  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetSeatType
            (
                NXOpen::Features::SeatBeltAnchorageBuilder::SeatTypes seatType /** seattype */ 
            );
            /**Returns  the seat position type  <br> License requirements : None */
            public: NXOpen::Features::SeatBeltAnchorageBuilder::SeatPositionTypes SeatPosition
            (
            );
            /**Sets  the seat position type  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetSeatPosition
            (
                NXOpen::Features::SeatBeltAnchorageBuilder::SeatPositionTypes seatPosition /** seatposition */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
