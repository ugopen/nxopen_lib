#ifndef NXOpen_ANNOTATIONS_TARGETPOINTBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_TARGETPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_TargetPointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_TargetPointBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class TargetPointBuilder;
    }
    class Builder;
    class NXColor;
    class SelectNXObject;
    namespace Annotations
    {
        class _TargetPointBuilderBuilder;
        /** Represents a @link Annotations::TargetPoint Annotations::TargetPoint@endlink  builder  <br> To create a new instance of this class, use @link Annotations::TargetPointCollection::CreateTargetPointBuilder Annotations::TargetPointCollection::CreateTargetPointBuilder@endlink  <br> 
        Default values:
        Angle: 0
        Height: 5
        Width: Thin
        */
        class NXOPENCPPEXPORT TargetPointBuilder : public Builder
        {
            /** the types of target point thickness */
            public: enum Thickness
            {
                ThicknessThin/** Thin */,
                ThicknessNormal/** Normal */,
                ThicknessThick/** Thick  */
            };

            private: friend class  _TargetPointBuilderBuilder;
            protected: TargetPointBuilder();
            /**Returns  the location  <br> License requirements : None */
            public: NXOpen::SelectNXObject * Location
            (
            );
            /**Returns  the inherit  <br> License requirements : None */
            public: NXOpen::SelectNXObject * Inherit
            (
            );
            /**Returns  the height  <br> License requirements : None */
            public: double Height
            (
            );
            /**Sets  the height  <br> License requirements : drafting ("DRAFTING") */
            public: void SetHeight
            (
                double height /** height */ 
            );
            /**Returns  the angle  <br> License requirements : None */
            public: double Angle
            (
            );
            /**Sets  the angle  <br> License requirements : drafting ("DRAFTING") */
            public: void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the color  <br> License requirements : None */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color  <br> License requirements : drafting ("DRAFTING") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the width  <br> License requirements : None */
            public: NXOpen::Annotations::TargetPointBuilder::Thickness Width
            (
            );
            /**Sets  the width  <br> License requirements : drafting ("DRAFTING") */
            public: void SetWidth
            (
                NXOpen::Annotations::TargetPointBuilder::Thickness width /** width */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
