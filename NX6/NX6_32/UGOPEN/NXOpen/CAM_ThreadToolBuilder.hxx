#ifndef NXOpen_CAM_THREADTOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_THREADTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ThreadToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TurningToolBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class ThreadToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class TurningToolBuilder;
    }
    namespace CAM
    {
        class _ThreadToolBuilderBuilder;
        /** Represents a Thread tool builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateThreadToolBuilder CAM::NCGroupCollection::CreateThreadToolBuilder@endlink  <br> */
        class NXOPENCPPEXPORT ThreadToolBuilder : public CAM::TurningToolBuilder
        {
            /** the available insert shapes */
            public: enum InsertShapes
            {
                InsertShapesStandard/** Standard insert shape */,
                InsertShapesTrapezoidal/** Trapezoidal insert shape */
            };

            private: friend class  _ThreadToolBuilderBuilder;
            protected: ThreadToolBuilder();
            /**Returns  the insert shape  <br> License requirements : None */
            public: NXOpen::CAM::ThreadToolBuilder::InsertShapes InsertShape
            (
            );
            /**Sets  the insert shape  <br> License requirements : None */
            public: void SetInsertShape
            (
                NXOpen::CAM::ThreadToolBuilder::InsertShapes insertShape /** insertshape */ 
            );
            /**Returns  the tip offset builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TipOffsetBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
