#ifndef NXOpen_FEATURES_OFFSETSURFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_OFFSETSURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_OffsetSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class OffsetSurfaceBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class FaceSetOffset;
    }
    namespace GeometricUtilities
    {
        class FaceSetOffsetList;
    }
    class ObjectList;
    namespace Features
    {
        class _OffsetSurfaceBuilderBuilder;
        /** This class represents a offset surface builder, used for creating or editing an
             *  offset surface feature. The offset surface feature allows different face sets to
             *  be offset by different distances.
              <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateOffsetSurfaceBuilder Features::FeatureCollection::CreateOffsetSurfaceBuilder@endlink  <br> 
        Default values:
        ApproxOption: False
        OutputOption: OneFeatureForConnectedFaces
        StepOption: True
        */
        class NXOPENCPPEXPORT OffsetSurfaceBuilder : public Features::FeatureBuilder
        {
            /** This enum represents the type of output option. The faces to be offset can be disconnected 
                 *  and also from multiple bodies. If either is the case, then multiple features are created.
                 *  For deciding whether there should be one feature for each topologically connected set of
                 *  faces or one feature for each face selected the enum below has been provided */
            public: enum OutputOptionType
            {
                OutputOptionTypeOneFeatureForConnectedFaces/** one feature for connected faces */ ,
                OutputOptionTypeOneFeatureForEachFace/** one feature for each face */ 
            };

            /** This enum represents the type of orientation method. This is applicable only if the output
                 *  output is JA_OFFSET_SURFACE_BUILDER_output_option_type_one_feature_for_each_face. The first
                 *  enum value implies that the offset direction will be that of the surface normal whereas the
                 *  second enum value implies that am interior position will be specified and the offset direction
                 *  will be away from this point */
            public: enum OrientationMethodType
            {
                OrientationMethodTypeUseExistingNormals/** use existing normals */ ,
                OrientationMethodTypeSpecifyInteriorPosition/** specify interior position */ 
            };

            private: friend class  _OffsetSurfaceBuilderBuilder;
            protected: OffsetSurfaceBuilder();
            /**Returns  the list of face sets. Each element defines a set of faces, and an offset distance applied to those faces.
                  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FaceSetOffsetList * FaceSets
            (
            );
            /**Sets  the offset surface output option based on the enum JA_OFFSET_SURFACE_BUILDER_output_option_type
                  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOutputOption
            (
                NXOpen::Features::OffsetSurfaceBuilder::OutputOptionType outputOption /** Output option */
            );
            /**Returns  the offset surface output option based on the enum JA_OFFSET_SURFACE_BUILDER_output_option_type
                  <br> License requirements : None */
            public: NXOpen::Features::OffsetSurfaceBuilder::OutputOptionType OutputOption
            (
            );
            /**Sets  the option to create approximate offset surface if the offset surface has 
                 *  self-intersections.
                  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetApproxOption
            (
                bool approxOption /** Approximate offset option */
            );
            /**Returns  the option to create approximate offset surface if the offset surface has 
                 *  self-intersections.
                  <br> License requirements : None */
            public: bool ApproxOption
            (
            );
            /**Sets  the offset surface allow step boundaries option. If this option is true 
                 *  then side faces will be created along any smooth edge between a face 
                 *  which is offset and one which is not.
                  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStepOption
            (
                bool stepOption /** Allow step boundaries option */
            );
            /**Returns  the offset surface allow step boundaries option. If this option is true 
                 *  then side faces will be created along any smooth edge between a face 
                 *  which is offset and one which is not.
                  <br> License requirements : None */
            public: bool StepOption
            (
            );
            /**Returns  the offset surface tolerance
                 <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the offset surface tolerance
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** Tolerance */
            );
            public: void SetOrientationMethod
            (
                NXOpen::Features::OffsetSurfaceBuilder::OrientationMethodType orientationMethod /** Orientation method */
            );
            /** the offset surface orientation method based on the enum JA_OFFSET_SURFACE_BUILDER_orientation_method_type
                  @return  Orientation method  <br> License requirements : None */
            public: NXOpen::Features::OffsetSurfaceBuilder::OrientationMethodType GetOrientationMethod
            (
            );
            /** Sets the offset surface interior position for specify interior position method. This allows
                 *  the specified faces to be offset away from the interior position.
                  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetInteriorPosition
            (
                const NXOpen::Point3d & point /** Interior position for specify interior position method */
            );
            /** Gets the offset surface interior position for specify interior position method. 
                  @return  Interior position for specify interior position method  <br> License requirements : None */
            public: NXOpen::Point3d GetInteriorPosition
            (
            );
            /** Gets the list of face sets. This list is a simple variable length array of any JA object.
                 *  This method is deprecated. Please use @link FaceSets FaceSets@endlink  instead.
                    
                  @return  Face set list
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : None */
            public: NXOpen::ObjectList * GetFaceSetList
            (
            );
            /** Gets the face sets. A face set is a combination of a face collector and an offset
                 *  distance.
                 *  This method is deprecated. Please use @link FaceSets FaceSets@endlink  instead.
                  @return  Face set list
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : None */
            public: std::vector<NXOpen::GeometricUtilities::FaceSetOffset *> GetFaceSets
            (
            );
            /** Deletes a face set at the specified index from the face set list
                 *  This method is deprecated. Please use @link FaceSets FaceSets@endlink  instead.
                 
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void DeleteFaceSet
            (
                int index /** Index of face set to be deleted */
            );
            /** Finds and returns a face set at the specified index from the face set list
                 *  This method is deprecated. Please use @link FaceSets FaceSets@endlink  instead.
                  @return  Face set returned
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::FaceSetOffset * FindFaceSet
            (
                int index /** Index of face set to be returned */
            );
            /** Adds face sets to the face set list
                 *  This method is deprecated. Please use @link FaceSets FaceSets@endlink  instead.
                 
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void AddFaceSets
            (
                const std::vector<NXOpen::GeometricUtilities::FaceSetOffset *> & faceSets /** Face set list*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
