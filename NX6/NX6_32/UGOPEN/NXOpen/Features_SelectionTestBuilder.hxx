#ifndef NXOpen_FEATURES_SELECTIONTESTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SELECTIONTESTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SelectionTestBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_SelectionTestBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class SelectionTestBuilder;
    }
    class Axis;
    class Builder;
    class CoordinateSystem;
    class Direction;
    class Plane;
    class Point;
    class ScCollector;
    class Section;
    class SelectObject;
    class SelectObjectList;
    namespace Features
    {
        class _SelectionTestBuilderBuilder;
        /** Builder for the SelectionTest class */
        class NXOPENDEBUGSESSIONCPPEXPORT SelectionTestBuilder : public Builder
        {
            private: friend class  _SelectionTestBuilderBuilder;
            protected: SelectionTestBuilder();
            /**Returns  the object used for multi selection of a generic object.
                 <br> License requirements : None */
            public: NXOpen::SelectObjectList * MultiSelectObject
            (
            );
            /**Returns  the object used for single selection of a generic object.
                 <br> License requirements : None */
            public: NXOpen::SelectObject * SingleSelectObject
            (
            );
            /**Returns  the object used for selection of features.
                 <br> License requirements : None */
            public: NXOpen::SelectObjectList * Feature
            (
            );
            /**Returns  the object used for building sections.
                 <br> License requirements : None */
            public: NXOpen::Section * Section
            (
            );
            /**Returns  the object used for building super sections.
                 <br> License requirements : None */
            public: NXOpen::Section * SuperSection
            (
            );
            /**Returns  the object used for creating/selecting faces.
                 <br> License requirements : None */
            public: NXOpen::ScCollector * Face
            (
            );
            /**Returns  the object used for creating/selecting curves.
                 <br> License requirements : None */
            public: NXOpen::ScCollector * Curve
            (
            );
            /**Returns  the vector.
                 <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector.
                 <br> License requirements : None */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the point.
                 <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point.
                 <br> License requirements : None */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the plane.
                 <br> License requirements : None */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the plane.
                 <br> License requirements : None */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the axis.
                 <br> License requirements : None */
            public: NXOpen::Axis * Axis
            (
            );
            /**Sets  the axis.
                 <br> License requirements : None */
            public: void SetAxis
            (
                NXOpen::Axis * axis /** axis */ 
            );
            /**Returns  the CSYS.
                 <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the CSYS.
                 <br> License requirements : None */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
