#ifndef NXOpen_CAE_SIMRESOLVEOBJECT_HXX_INCLUDED
#define NXOpen_CAE_SIMRESOLVEOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimResolveObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class SimResolveObject;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class SimBC;
    }
    class NXObject;
    namespace CAE
    {
        class _SimResolveObjectBuilder;
        /**  @brief  Represents BC Resolve Object object  

          */
        class NXOPENCPPEXPORT SimResolveObject : public NXObject
        {
            /** Used to specify which rule to be used when resolving boundary condition conflicts
                      */
            public: enum Rule
            {
                RulePrecedence/** uses the following order of precedence (high to low)
                                                                                node, point, vertex, edge, face, body */,
                RuleSmallest/** uses the smallest value for each DOF */,
                RuleLargest/** uses the largest value for each DOF */,
                RuleAverage/** uses the average value for each DOF */,
                RuleSum/** uses the sum for each DOF */,
                RuleParent/** uses the user specified BC */,
                RuleUserDefined/** uses the user defined values for each DOF */,
                RuleExternalCallback/** this is not being used as of now but may be used in the future */,
                RuleMax/** Count of rules */
            };

            private: friend class  _SimResolveObjectBuilder;
            protected: SimResolveObject();
            /**Returns  the rule to be used while resolving conflicts  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimResolveObject::Rule AppliedRule
            (
            );
            /**Sets  the rule to be used while resolving conflicts  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAppliedRule
            (
                NXOpen::CAE::SimResolveObject::Rule rule /** rule to be applied while resolvign conflicts */
            );
            /** Returns the count of conflicting boundary conditions in the resolve object  @return  count of conflicting bcs  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int GetConflictBcCount
            (
            );
            /** Returns the conflicting boundary condition by index in the resolve object  @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimBC * GetConflictBcByIndex
            (
                int conflictBcIndex /** index of the conflict bc asked for */
            );
            /** Returns the conflicting boundary conditions in the resolve object  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetConflictBcs
            (
                std::vector<NXOpen::CAE::SimBC *> & conflictBcs /** array of conflicting bcs */
            );
            /**Returns  the property table associated with the resolve object  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns  the bc used when the rule is set to JA_SIM_RESOLVE_OBJECT_rule_parent  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimBC * ParentBc
            (
            );
            /**Sets  the bc used when the rule is set to JA_SIM_RESOLVE_OBJECT_rule_parent  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetParentBc
            (
                NXOpen::CAE::SimBC * bc /** bc to be used when the rule is set to JA_SIM_RESOLVE_OBJECT_rule_parent */
            );
            /**Returns  the flag whether the resolve object has been edited by the user  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool UserEditFlag
            (
            );
            /**Sets  the flag whether the resolve object has been edited by the user  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetUserEditFlag
            (
                bool userEditFlag /** user edit flag */
            );
            /** Updates the resolve objects based on the rule set  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Update
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
