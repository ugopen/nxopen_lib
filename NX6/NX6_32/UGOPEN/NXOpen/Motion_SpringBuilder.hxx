#ifndef NXOpen_MOTION_SPRINGBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SPRINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SpringBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_ConnectorBuilder.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_SpringBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class SpringBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    namespace Motion
    {
        class ConnectorBuilder;
    }
    namespace Motion
    {
        class _SpringBuilderBuilder;
        /**
            Represents a SpringBuilder
             <br> To create a new instance of this class, use @link Motion::SpringCollection::CreateSpringBuilder Motion::SpringCollection::CreateSpringBuilder@endlink  <br> 
        Default values:
        FreeLength: 0.0
        InitialLength: 0.0
        Stiffness: 1.0
        StiffnessType: Constant
        */
        class NXOPENCPPEXPORT SpringBuilder : public Motion::ConnectorBuilder
        {
            private: friend class  _SpringBuilderBuilder;
            protected: SpringBuilder();
            /**Returns  the stiffness type  <br> License requirements : None */
            public: NXOpen::Motion::ConnectorCoefficientTypes StiffnessType
            (
            );
            /**Sets  the stiffness type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStiffnessType
            (
                NXOpen::Motion::ConnectorCoefficientTypes stiffnessType /** stiffnesstype */ 
            );
            /**Returns  the stiffness. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set  <br> License requirements : None */
            public: double Stiffness
            (
            );
            /**Sets  the stiffness. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStiffness
            (
                double stiffness /** stiffness */ 
            );
            /**Returns  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set  <br> License requirements : None */
            public: NXOpen::CAE::Function * StiffnessFunction
            (
            );
            /**Sets  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStiffnessFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the free length  <br> License requirements : None */
            public: double FreeLength
            (
            );
            /**Sets  the free length  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFreeLength
            (
                double freeLength /** freelength */ 
            );
            /**Returns  the initial length used for spring attached to slide joint <br> License requirements : None */
            public: double InitialLength
            (
            );
            /**Sets  the initial length used for spring attached to slide joint <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetInitialLength
            (
                double initialLength /** initiallength */ 
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
