#ifndef NXOpen_ROUTING_ELECTRICAL_NONPATHCONNECTION_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_NONPATHCONNECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_NonPathConnection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Electrical_Connection.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class NonPathConnection;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class Connection;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _NonPathConnectionBuilder;
            /**  @brief 
                        Describes a connection that does not have a path
                         

             
                         <br> 
                        A pathless connection represents the abilitiy for objects to be 
                        connected even though there is not an explicit path between them.
                        See NX Open Routing help for detailed information on the Connection data model.
                         <br> 
                     <br> To create a new instance of this class, use @link Routing::Electrical::NonPathConnectionCollection::CreateNonPathConnection Routing::Electrical::NonPathConnectionCollection::CreateNonPathConnection@endlink  <br> */
            class NXOPENCPPEXPORT NonPathConnection : public Routing::Electrical::Connection
            {
                private: friend class  _NonPathConnectionBuilder;
                protected: NonPathConnection();
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
