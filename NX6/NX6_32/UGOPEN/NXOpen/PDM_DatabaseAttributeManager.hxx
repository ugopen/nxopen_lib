#ifndef NXOpen_PDM_DATABASEATTRIBUTEMANAGER_HXX_INCLUDED
#define NXOpen_PDM_DATABASEATTRIBUTEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_DatabaseAttributeManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_DatabaseAttributeManager.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace PDM
    {
        class DatabaseAttributeManager;
    }
    namespace PDM
    {
        /** This class is responsible for setting and getting NX Manager database attribute.  <br> Use @link PDM::PartBuilder::NewDatabaseAttributeManager PDM::PartBuilder::NewDatabaseAttributeManager@endlink  to get the instance of this class. <br> */
        class NXOPENCPPEXPORT DatabaseAttributeManager : public TransientObject
        {
            public: explicit DatabaseAttributeManager(void *ptr);
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector.  <br> License requirements : None */
            public: virtual ~DatabaseAttributeManager();
            /** Sets the value of a writable database attribute.  <br> License requirements : None */
            public: void SetAttribute
            (
                const NXString & attributeTitle /** the title of the attribute to be set */,
                const NXString & attributeValue /** the new value the attribute is to be set to */
            );
            /** Gets the value of a writable database attribute.  @return  the value of the attribute  <br> License requirements : None */
            public: NXString GetAttribute
            (
                const NXString & attributeTitle /** the title of the attribute */
            );
            /** Store any database attributes that were set by
                    @link SetAttribute SetAttribute@endlink . The attributes will not be applied
                    unless this method is called.  <br> License requirements : None */
            public: void StoreAttributes
            (
            );
            /** Refresh the Database Attributes from Teamcenter. This operation will discard any
                    changes made in this session that aren't committed to Teamcenter.
                      <br> License requirements : None */
            public: void RefreshAttributes
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
