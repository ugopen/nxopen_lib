#ifndef NXOpen_CAE_MECHANICALLOADSUMBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MECHANICALLOADSUMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MechanicalLoadSumBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_MechanicalLoadSumBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MechanicalLoadSumBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SimLoad;
    }
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        class SimSolutionStep;
    }
    class CoordinateSystem;
    class Expression;
    namespace CAE
    {
        class _MechanicalLoadSumBuilderBuilder;
        /**
            Represents a @link CAE::MechanicalLoadSumBuilder CAE::MechanicalLoadSumBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::ModelCheckManager::CreateMechanicalLoadSumBuilder CAE::ModelCheckManager::CreateMechanicalLoadSumBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MechanicalLoadSumBuilder : public Builder
        {
            /** User Specified output unit */
            public: enum UserUnit
            {
                UserUnitDeckUnit/** Load unit = same as Solver Deck Unit*/,
                UserUnitMilliNewton/** Load unit = "N", Moment unit N-mm*/,
                UserUnitMilliMillinewton/** Load unit = "mN", Moment unit N-mm*/,
                UserUnitMeterNewton/** Load unit = "N", Moment unit N-m*/,
                UserUnitFtPoundForce/** Load unit = "lbf", Moment unit lbf-ft*/,
                UserUnitInPoundForce/** Load unit = "lbf", Moment unit lbf-in*/
            };

            private: friend class  _MechanicalLoadSumBuilderBuilder;
            protected: MechanicalLoadSumBuilder();
            /** The solution object  @return  Ask Solution  <br> License requirements : None */
            public: NXOpen::CAE::SimSolution * GetSolution
            (
            );
            /** The solution object  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSolution
            (
                NXOpen::CAE::SimSolution * solution /** Set Solution */
            );
            /** The subcase object  @return  Ask Solutionstep  <br> License requirements : None */
            public: NXOpen::CAE::SimSolutionStep * GetSubcase
            (
            );
            /** The subcase object  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSubcase
            (
                NXOpen::CAE::SimSolutionStep * subcase /** Get Solutionstep */
            );
            /** The load objects  @return   <br> License requirements : None */
            public: std::vector<NXOpen::CAE::SimLoad *> GetLoads
            (
            );
            /** Sets the loads  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLoads
            (
                const std::vector<NXOpen::CAE::SimLoad *> & loads /** sets the loads */
            );
            /**Returns  the reference csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ReferenceCsys
            (
            );
            /**Sets  the reference csys  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetReferenceCsys
            (
                NXOpen::CoordinateSystem * referenceCsys /** referencecsys */ 
            );
            /**Returns  the output result unit   <br> License requirements : None */
            public: NXOpen::CAE::MechanicalLoadSumBuilder::UserUnit UserSpecifiedUnit
            (
            );
            /**Sets  the output result unit   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetUserSpecifiedUnit
            (
                NXOpen::CAE::MechanicalLoadSumBuilder::UserUnit userSpecifiedUnit /** userspecifiedunit */ 
            );
            /**Returns  the evaluation time  <br> License requirements : None */
            public: NXOpen::Expression * EvaluationTime
            (
            );
            /**Returns  the evaluation frequency  <br> License requirements : None */
            public: NXOpen::Expression * EvaluationFrequency
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
