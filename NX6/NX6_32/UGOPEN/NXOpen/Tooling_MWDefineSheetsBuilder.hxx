#ifndef NXOpen_TOOLING_MWDEFINESHEETSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MWDEFINESHEETSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MWDefineSheetsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_MWDefineSheetsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Tooling
    {
        class MWDefineSheetsBuilder;
    }
    class Builder;
    class SelectBodyList;
    namespace Tooling
    {
        class _MWDefineSheetsBuilderBuilder;
        /** Builder for defining sheets in Mold Wizard  <br> To create a new instance of this class, use @link Tooling::MWDefineSheetsCollection::CreateBuilder Tooling::MWDefineSheetsCollection::CreateBuilder@endlink  <br> 
        Default values:
        CheckGeometryToggle: 0
        CheckOverlappingToggle: 0
        RenameComponentPartToggle: 0
        SewTolerance: 0.01
        */
        class NXOPENCPPEXPORT MWDefineSheetsBuilder : public Builder
        {
            private: friend class  _MWDefineSheetsBuilderBuilder;
            protected: MWDefineSheetsBuilder();
            /**Returns  the select sheets is for selecting region, parting and patched shhets to form a new sheet  <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectSheetBodies
            (
            );
            /** Button for suppressing parting  <br> License requirements : None */
            public: void SuppressPartingButton
            (
            );
            /**Returns  the check geometry toggle for the final sewn sheet  <br> License requirements : None */
            public: bool CheckGeometryToggle
            (
            );
            /**Sets  the check geometry toggle for the final sewn sheet  <br> License requirements : None */
            public: void SetCheckGeometryToggle
            (
                bool checkGeometryToggle /** checkgeometrytoggle */ 
            );
            /**Returns  the check overlapping toggle for the final sewn sheet  <br> License requirements : None */
            public: bool CheckOverlappingToggle
            (
            );
            /**Sets  the check overlapping toggle for the final sewn sheet  <br> License requirements : None */
            public: void SetCheckOverlappingToggle
            (
                bool checkOverlappingToggle /** checkoverlappingtoggle */ 
            );
            /**Returns  the  toggle for invoking rename dialog for creating new component part  <br> License requirements : None */
            public: bool RenameComponentPartToggle
            (
            );
            /**Sets  the  toggle for invoking rename dialog for creating new component part  <br> License requirements : None */
            public: void SetRenameComponentPartToggle
            (
                bool renameComponentPartToggle /** renamecomponentparttoggle */ 
            );
            /**Returns  the sew tolerance for sewing sheets  <br> License requirements : None */
            public: double SewTolerance
            (
            );
            /**Sets  the sew tolerance for sewing sheets  <br> License requirements : None */
            public: void SetSewTolerance
            (
                double sewTolerance /** sewtolerance */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
