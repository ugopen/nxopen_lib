#ifndef NXOpen_ANNOTATIONS_CENTERLINESETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CENTERLINESETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CenterlineSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CenterlineSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class CenterlineSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXColor;
    namespace Annotations
    {
        class _CenterlineSettingsBuilderBuilder;
        /** Represents a Builder for Centerline Settings. This contains settings common to all centerlines */
        class NXOPENCPPEXPORT CenterlineSettingsBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** the types of centerline thickness */
            public: enum CenterlineThickness
            {
                CenterlineThicknessThin/** Thin */,
                CenterlineThicknessNormal/** Normal */,
                CenterlineThicknessThick/** Thick  */
            };

            private: friend class  _CenterlineSettingsBuilderBuilder;
            protected: CenterlineSettingsBuilder();
            /**Returns  the gap parameter for centeline  <br> License requirements : None */
            public: double Gap
            (
            );
            /**Sets  the gap parameter for centeline  <br> License requirements : drafting ("DRAFTING") */
            public: void SetGap
            (
                double gap /** gap */ 
            );
            /**Returns  the color of centerline  <br> License requirements : None */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color of centerline  <br> License requirements : drafting ("DRAFTING") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the width of centerline  <br> License requirements : None */
            public: NXOpen::Annotations::CenterlineSettingsBuilder::CenterlineThickness Width
            (
            );
            /**Sets  the width of centerline  <br> License requirements : drafting ("DRAFTING") */
            public: void SetWidth
            (
                NXOpen::Annotations::CenterlineSettingsBuilder::CenterlineThickness width /** width */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
