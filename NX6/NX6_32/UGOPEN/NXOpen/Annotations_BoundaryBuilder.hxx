#ifndef NXOpen_ANNOTATIONS_BOUNDARYBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BOUNDARYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BoundaryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_BoundaryBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class BoundaryBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SectionList;
    class View;
    namespace Annotations
    {
        class _BoundaryBuilderBuilder;
        /** This builder contains the boundaries that define a crosshatch pattern */
        class NXOPENCPPEXPORT BoundaryBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the methods for selecting boundaries  */
            public: enum SelectionMethod
            {
                SelectionMethodCurves/** Select boundaries by selecting curves */,
                SelectionMethodLocation/** Select boundaries by cursor location */
            };

            private: friend class  _BoundaryBuilderBuilder;
            protected: BoundaryBuilder();
            /**Returns  the selection type  <br> License requirements : None */
            public: NXOpen::Annotations::BoundaryBuilder::SelectionMethod SelectionType
            (
            );
            /**Sets  the selection type  <br> License requirements : drafting ("DRAFTING") */
            public: void SetSelectionType
            (
                NXOpen::Annotations::BoundaryBuilder::SelectionMethod type /** type */ 
            );
            /** The boundary view  @return  Drafting view  <br> License requirements : None */
            public: NXOpen::View * GetView
            (
            );
            /** The boundary view  <br> License requirements : None */
            public: void SetView
            (
                NXOpen::View * view /** Drafting view */
            );
            /**Returns  the curve boundaries  <br> License requirements : None */
            public: NXOpen::SectionList * CurveBoundaries
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
