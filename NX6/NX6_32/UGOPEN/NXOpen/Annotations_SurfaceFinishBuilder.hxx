#ifndef NXOpen_ANNOTATIONS_SURFACEFINISHBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_SURFACEFINISHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_SurfaceFinishBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_SurfaceFinishBuilder.hxx>
#include <NXOpen/Annotations_PmiAttributeBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class SurfaceFinishBuilder;
    }
    namespace Annotations
    {
        class PmiAttributeBuilder;
    }
    namespace Annotations
    {
        class _SurfaceFinishBuilderBuilder;
        /** Represents a @link Annotations::SurfaceFinish Annotations::SurfaceFinish@endlink  builder  <br> To create a new instance of this class, use @link Annotations::PmiAttributeCollection::CreateSurfaceFinishBuilder Annotations::PmiAttributeCollection::CreateSurfaceFinishBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SurfaceFinishBuilder : public Annotations::PmiAttributeBuilder
        {
            /** */
            public: enum StandardType
            {
                StandardTypeAnsi/** ANSI */,
                StandardTypeIso/** ISO */,
                StandardTypeJis/** JIS */,
                StandardTypeDin/** DIN */
            };

            /** */
            public: enum FinishType
            {
                FinishTypeBasic/** Basic*/,
                FinishTypeModifier/** Modifier */,
                FinishTypeModifierAllAround/** Modifier, All Around*/,
                FinishTypeMaterialRemovalRequired/** Material Removal Required */,
                FinishTypeModifierMaterialRemovalRequired/** Modifier, Material Removal Required */,
                FinishTypeModifierMaterialRemovalRequiredAllAround/** Modifier, Material Removal Required, All Around*/,
                FinishTypeMaterialRemovalProhibited/** Material Removal Prohibited*/,
                FinishTypeModifierMaterialRemovalProhibited/** Modifier, Material Removal Prohibited*/,
                FinishTypeModifierMaterialRemovalProhibitedAllAround/** Modifier, Material Removal Prohibited, All Around*/
            };

            private: friend class  _SurfaceFinishBuilderBuilder;
            protected: SurfaceFinishBuilder();
            /**Returns  the str title  <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the str title  <br> License requirements : None */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Returns  the standard  <br> License requirements : None */
            public: NXOpen::Annotations::SurfaceFinishBuilder::StandardType Standard
            (
            );
            /**Sets  the standard  <br> License requirements : None */
            public: void SetStandard
            (
                NXOpen::Annotations::SurfaceFinishBuilder::StandardType standard /** standard */ 
            );
            /**Returns  the finish  <br> License requirements : None */
            public: NXOpen::Annotations::SurfaceFinishBuilder::FinishType Finish
            (
            );
            /**Sets  the finish  <br> License requirements : None */
            public: void SetFinish
            (
                NXOpen::Annotations::SurfaceFinishBuilder::FinishType finish /** finish */ 
            );
            /**Returns  the a1  <br> License requirements : None */
            public: NXString A1
            (
            );
            /**Sets  the a1  <br> License requirements : None */
            public: void SetA1
            (
                const NXString & a1 /** a1 */ 
            );
            /**Returns  the a2  <br> License requirements : None */
            public: NXString A2
            (
            );
            /**Sets  the a2  <br> License requirements : None */
            public: void SetA2
            (
                const NXString & a2 /** a2 */ 
            );
            /**Returns  the b  <br> License requirements : None */
            public: NXString B
            (
            );
            /**Sets  the b  <br> License requirements : None */
            public: void SetB
            (
                const NXString & b /** b */ 
            );
            /**Returns  the c  <br> License requirements : None */
            public: NXString C
            (
            );
            /**Sets  the c  <br> License requirements : None */
            public: void SetC
            (
                const NXString & c /** c */ 
            );
            /**Returns  the d  <br> License requirements : None */
            public: NXString D
            (
            );
            /**Sets  the d  <br> License requirements : None */
            public: void SetD
            (
                const NXString & d /** d */ 
            );
            /**Returns  the e  <br> License requirements : None */
            public: NXString E
            (
            );
            /**Sets  the e  <br> License requirements : None */
            public: void SetE
            (
                const NXString & e /** e */ 
            );
            /**Returns  the f1  <br> License requirements : None */
            public: NXString F1
            (
            );
            /**Sets  the f1  <br> License requirements : None */
            public: void SetF1
            (
                const NXString & f1 /** f1 */ 
            );
            /**Returns  the f2  <br> License requirements : None */
            public: NXString F2
            (
            );
            /**Sets  the f2  <br> License requirements : None */
            public: void SetF2
            (
                const NXString & f2 /** f2 */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
