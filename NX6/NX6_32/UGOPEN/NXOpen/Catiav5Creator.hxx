#ifndef NXOpen_CATIAV5CREATOR_HXX_INCLUDED
#define NXOpen_CATIAV5CREATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Catiav5Creator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Catiav5Creator.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Catiav5Creator;
    class Builder;
    class ObjectSelector;
    class _Catiav5CreatorBuilder;
    /** Represents a @link Catiav5Creator Catiav5Creator@endlink  to be used when exporting the IGES Data
        This class is created using @link DexManager DexManager@endlink .  <br> To create a new instance of this class, use @link DexManager::CreateCatiav5Creator DexManager::CreateCatiav5Creator@endlink  <br> 
    Default values:
    IncludeBlankedObj: 0
    IncludeIndWireFrame: 0
    */
    class NXOPENCPPEXPORT Catiav5Creator : public Builder
    {
        private: friend class  _Catiav5CreatorBuilder;
        protected: Catiav5Creator();
        /** the save settings - this will save the settings to a file sepcified <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Returns  the export selection block - the object selection will be done by this block.  <br> License requirements : None */
        public: NXOpen::ObjectSelector * ExportSelectionBlock
        (
        );
        /**Returns  the output file - the exported data will be written to file specified  <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - the exported data will be written to file specified  <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Returns  the settings file - The definition file to read default options  <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - The definition file to read default options  <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Returns  the include ind wire frame  if set true then indpendent wireframe objects will be exported
                    to catia v5 file  <br> License requirements : None */
        public: bool IncludeIndWireFrame
        (
        );
        /**Sets  the include ind wire frame  if set true then indpendent wireframe objects will be exported
                    to catia v5 file  <br> License requirements : None */
        public: void SetIncludeIndWireFrame
        (
            bool includeIndWireFrame /** includeindwireframe */ 
        );
        /**Returns  the include blanked obj - If set to true then blanked objects will also be written to catia 
                    file.  <br> License requirements : None */
        public: bool IncludeBlankedObj
        (
        );
        /**Sets  the include blanked obj - If set to true then blanked objects will also be written to catia 
                    file.  <br> License requirements : None */
        public: void SetIncludeBlankedObj
        (
            bool includeBlankedObj /** includeblankedobj */ 
        );
        /**Returns  the file save flag - this should be set to false if doing File Export  <br> License requirements : None */
        public: bool FileSaveFlag
        (
        );
        /**Sets  the file save flag - this should be set to false if doing File Export  <br> License requirements : None */
        public: void SetFileSaveFlag
        (
            bool doingFileSave /** doingfilesave */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
