#ifndef NXOpen_DRAWINGS_HALFSECTIONLINEBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_HALFSECTIONLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_HalfSectionLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_HalfSectionLineBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class HalfSectionLineBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace Drawings
    {
        class _HalfSectionLineBuilderBuilder;
        /** Represents a @link Drawings::HalfSectionLineBuilder Drawings::HalfSectionLineBuilder@endlink .
                This class is used to create or edit a
                @link Drawings::HalfSectionLine Drawings::HalfSectionLine@endlink . */
        class NXOPENCPPEXPORT HalfSectionLineBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _HalfSectionLineBuilderBuilder;
            protected: HalfSectionLineBuilder();
            /**Returns  the cut location  <br> License requirements : None */
            public: NXOpen::Point * CutLocation
            (
            );
            /**Sets  the cut location  <br> License requirements : drafting ("DRAFTING") */
            public: void SetCutLocation
            (
                NXOpen::Point * cutLocation /** cutlocation */ 
            );
            /**Returns  the bend location  <br> License requirements : None */
            public: NXOpen::Point * BendLocation
            (
            );
            /**Sets  the bend location  <br> License requirements : drafting ("DRAFTING") */
            public: void SetBendLocation
            (
                NXOpen::Point * bendLocation /** bendlocation */ 
            );
            /**Returns  the arrow location  <br> License requirements : None */
            public: NXOpen::Point * EndLocation1
            (
            );
            /**Sets  the arrow location  <br> License requirements : drafting ("DRAFTING") */
            public: void SetEndLocation1
            (
                NXOpen::Point * endLocation1 /** endlocation1 */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
