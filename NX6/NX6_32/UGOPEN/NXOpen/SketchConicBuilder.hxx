#ifndef NXOpen_SKETCHCONICBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHCONICBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchConicBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SketchConicBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchConicBuilder;
    class Builder;
    class Point;
    class _SketchConicBuilderBuilder;
    /**
    Represents a @link SketchConicBuilder SketchConicBuilder@endlink  builder
     <br> To create a new instance of this class, use @link SketchCollection::CreateSketchConicBuilder SketchCollection::CreateSketchConicBuilder@endlink  <br> 
    Default values:
    Rho: 0.5
    */
    class NXOPENCPPEXPORT SketchConicBuilder : public Builder
    {
        private: friend class  _SketchConicBuilderBuilder;
        protected: SketchConicBuilder();
        /**Returns  the start point  <br> License requirements : None */
        public: NXOpen::Point * StartPoint
        (
        );
        /**Sets  the start point  <br> License requirements : None */
        public: void SetStartPoint
        (
            NXOpen::Point * startPoint /** startpoint */ 
        );
        /**Returns  the end point  <br> License requirements : None */
        public: NXOpen::Point * EndPoint
        (
        );
        /**Sets  the end point  <br> License requirements : None */
        public: void SetEndPoint
        (
            NXOpen::Point * endPoint /** endpoint */ 
        );
        /**Returns  the control point  <br> License requirements : None */
        public: NXOpen::Point * ControlPoint
        (
        );
        /**Sets  the control point  <br> License requirements : None */
        public: void SetControlPoint
        (
            NXOpen::Point * controlPoint /** controlpoint */ 
        );
        /**Returns  the Rho value  <br> License requirements : None */
        public: double Rho
        (
        );
        /**Sets  the Rho value  <br> License requirements : None */
        public: void SetRho
        (
            double rho /** rho */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
