#ifndef NXOpen_GEOMETRICUTILITIES_CURVERANGEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CURVERANGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_CurveRangeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveRangeBuilder.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class CurveRangeBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    namespace GeometricUtilities
    {
        class _CurveRangeBuilderBuilder;
        /** Represents the curve range and anchor builder */
        class NXOPENCPPEXPORT CurveRangeBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents the anchor position type*/
            public: enum AnchorPositionType
            {
                AnchorPositionTypeStart/** Anchor at the start of the curve */,
                AnchorPositionTypeCenter/** Anchor at the center of the curve */,
                AnchorPositionTypeEnd/** Anchor at the end of the curve */
            };

            private: friend class  _CurveRangeBuilderBuilder;
            protected: CurveRangeBuilder();
            /**Sets  the anchor position  <br> License requirements : None */
            public: void SetAnchorPosition
            (
                NXOpen::GeometricUtilities::CurveRangeBuilder::AnchorPositionType anchorPosition /** anchorposition */ 
            );
            /**Returns  the anchor position  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveRangeBuilder::AnchorPositionType AnchorPosition
            (
            );
            /**Returns  the start  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * Start
            (
            );
            /**Returns  the center  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * Center
            (
            );
            /**Returns  the end  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * End
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
