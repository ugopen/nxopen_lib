#ifndef NXOpen_CAM_DRILLTOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DRILLTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DrillToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MillingToolBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class DrillToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class MillingToolBuilder;
    }
    namespace CAM
    {
        class _DrillToolBuilderBuilder;
        /** Represents a drill Tool Builder  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT DrillToolBuilder : public CAM::MillingToolBuilder
        {
            private: friend class  _DrillToolBuilderBuilder;
            protected: DrillToolBuilder();
            /**Returns  the Point Angle builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlPointAngBuilder
            (
            );
            /**Returns  the Corner Radius builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlCor1RadBuilder
            (
            );
            /**Returns  the X Offset builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlXOffsetBuilder
            (
            );
            /**Returns  the YZ Offset builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlYzOffsetBuilder
            (
            );
            /**Returns  the coolant through   <br> License requirements : None */
            public: bool TlCoolantThro
            (
            );
            /**Sets  the coolant through   <br> License requirements : None */
            public: void SetTlCoolantThro
            (
                bool tlCoolantThroValue /**  the coolant through value */
            );
            /**Returns  the pilot diameter builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlPilotDiaBuilder
            (
            );
            /**Returns  the pilot length builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlPilotLengthBuilder
            (
            );
            /**Returns  the Tip Length builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlTipLengthBuilder
            (
            );
            /**Returns  the Included Angle builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlIncludedAngBuilder
            (
            );
            /**Returns  the Tip Diameter builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlTipDiameterBuilder
            (
            );
            /**Returns  the Designation   <br> License requirements : None */
            public: NXString TlDesignation
            (
            );
            /**Sets  the Designation   <br> License requirements : None */
            public: void SetTlDesignation
            (
                const NXString & tlDesignation /**  the designation value */
            );
            /**Returns  the Pitch builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlPitchBuilder
            (
            );
            /**Returns  the Taper Diameter Distance builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlTaperDiaDistBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
