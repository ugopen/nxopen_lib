#ifndef NXOpen_PREFERENCES_SESSIONVISUALIZATIONSHADE_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONVISUALIZATIONSHADE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionVisualizationShade.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class SessionVisualizationShade;
    }
    class UI;
    namespace Preferences
    {
        /** Represents the UI related Visualization Shade preferences. These preferences are maintained at
        UI level and applicable to entire session  <br> To obtain an instance of this class, refer to @link UI UI@endlink  <br> */
        class NXOPENUICPPEXPORT SessionVisualizationShade
        {
            private: NXOpen::UI* m_owner;
            public: explicit SessionVisualizationShade(NXOpen::UI *owner): m_owner(owner)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            /**Returns  the show facet edge flag. Toggles the display of facet edges. If this flag is true it can help 
                when trying to evaluate or interpret faceted edges.  <br> License requirements : None */
            public: bool ShowFacetEdges
            (
            );
            /**Sets  the show facet edge flag. Toggles the display of facet edges. If this flag is true it can help 
                when trying to evaluate or interpret faceted edges.  <br> License requirements : None */
            public: void SetShowFacetEdges
            (
                bool facetEdges /** facet edges */ 
            );
            /**Returns  the edge emphasis flag.Alters how edges are displayed when Shaded Face Edges is flag is true.  <br> License requirements : None */
            public: bool EdgesEmphasis
            (
            );
            /**Sets  the edge emphasis flag.Alters how edges are displayed when Shaded Face Edges is flag is true.  <br> License requirements : None */
            public: void SetEdgesEmphasis
            (
                bool edgesEmphasis /** Edge Emphasis Option to be set or not */
            );
            /**Returns  the lwrt studio display flag.Alters how studio are displayed.  <br> License requirements : None */
            public: bool LwrtStudioDisplay
            (
            );
            /**Sets  the lwrt studio display flag.Alters how studio are displayed.  <br> License requirements : None */
            public: void SetLwrtStudioDisplay
            (
                bool lwrtStudioDisplay /** Option to be set or not */
            );
            /** Regenerates Studio Analysis Views. Updates all objects based on their surfacing tolerance.  <br> License requirements : None */
            public: void RegenerateStudioAnalysisViewsFromTolChange
            (
                bool updateEnvOption /** Send TRUE if env cube updation is required. Else send FALSE */
            );
            /** Regenerates Shaded Views. Updates all objects based on their surfacing tolerance.  <br> License requirements : None */
            public: void RegenerateShadedViewsFromToleranceChange
            (
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
