#ifndef NXOpen_CAE_RESPONSESIMULATION_RSEVENTATTRIBUTES_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_RSEVENTATTRIBUTES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_RSEventAttributes.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation.hxx>
#include <NXOpen/CAE_ResponseSimulation_DDAMExcitation.hxx>
#include <NXOpen/CAE_ResponseSimulation_RSEvent.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RSEventAttributes;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _RSEventAttributesBuilder;
            /** Represents all possible attributes setting for response analysis event */
            class NXOPENCPPEXPORT RSEventAttributes : public TaggedObject
            {
                private: friend class  _RSEventAttributesBuilder;
                protected: RSEventAttributes();
                /**Returns  the analysis type. Only available for transient event and frequency event  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RSEvent::AnalysisType AnalysisType
                (
                );
                /**Sets  the analysis type. Only available for transient event and frequency event  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetAnalysisType
                (
                    NXOpen::CAE::ResponseSimulation::RSEvent::AnalysisType analysisType /** analysis type */ 
                );
                /**Returns  the time duration in second for transient event  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: double Duration
                (
                );
                /**Sets  the time duration in second for transient event  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDuration
                (
                    double duration /** duration */ 
                );
                /**Returns  the spectral lines setting. Only available when event type is
                        @link CAE::ResponseSimulation::RSEvent::TypeFrequency CAE::ResponseSimulation::RSEvent::TypeFrequency@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeRandom CAE::ResponseSimulation::RSEvent::TypeRandom@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum@endlink , 
                         <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: int SpectralLines
                (
                );
                /**Sets  the spectral lines setting. Only available when event type is
                        @link CAE::ResponseSimulation::RSEvent::TypeFrequency CAE::ResponseSimulation::RSEvent::TypeFrequency@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeRandom CAE::ResponseSimulation::RSEvent::TypeRandom@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum@endlink , 
                         <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetSpectralLines
                (
                    int spectralLine /** spectral line */ 
                );
                /**Returns  the interpolation method. only available when event type is
                        @link CAE::ResponseSimulation::RSEvent::TypeFrequency CAE::ResponseSimulation::RSEvent::TypeFrequency@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeRandom CAE::ResponseSimulation::RSEvent::TypeRandom@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum@endlink , 
                         <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::InterpolationMethod InterpolationMethod
                (
                );
                /**Sets  the interpolation method. only available when event type is
                        @link CAE::ResponseSimulation::RSEvent::TypeFrequency CAE::ResponseSimulation::RSEvent::TypeFrequency@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeRandom CAE::ResponseSimulation::RSEvent::TypeRandom@endlink , 
                        @link CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum CAE::ResponseSimulation::RSEvent::TypeResponseSpectrum@endlink , 
                         <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetInterpolationMethod
                (
                    NXOpen::CAE::ResponseSimulation::InterpolationMethod interpolationMethod /** interpolation method */ 
                );
                /**Returns  the DDAM coefficient definition method  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionType CoefficientDefinitionMethod
                (
                );
                /**Sets  the DDAM coefficient definition method  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetCoefficientDefinitionMethod
                (
                    NXOpen::CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionType definitionMethod /** definition method */ 
                );
                /**Returns  the DDAM coefficients definition file. Only available when event type is
                        @link CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionTypeByFile CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionTypeByFile@endlink .  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXString CoefficientFile
                (
                );
                /**Sets  the DDAM coefficients definition file. Only available when event type is
                        @link CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionTypeByFile CAE::ResponseSimulation::DDAMExcitation::CoefficientDefinitionTypeByFile@endlink .  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetCoefficientFile
                (
                    const NXString & coefficientFile /** coefficient file */ 
                );
                /**Returns  the ship type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DDAMExcitation::ShipType ShipType
                (
                );
                /**Sets  the ship type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetShipType
                (
                    NXOpen::CAE::ResponseSimulation::DDAMExcitation::ShipType shipType /** ship type */ 
                );
                /**Returns  the ship type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::DDAMExcitation::MountingType MountingType
                (
                );
                /**Sets  the ship type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetMountingType
                (
                    NXOpen::CAE::ResponseSimulation::DDAMExcitation::MountingType mountingType /** mounting type */ 
                );
                /**Returns  the spacing type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RSEvent::SpacingType Spacing
                (
                );
                /**Sets  the spacing type <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetSpacing
                (
                    NXOpen::CAE::ResponseSimulation::RSEvent::SpacingType spacing /** spacing */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
