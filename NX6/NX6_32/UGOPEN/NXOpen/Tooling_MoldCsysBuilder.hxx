#ifndef NXOpen_TOOLING_MOLDCSYSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MOLDCSYSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MoldCsysBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_MoldCsysBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Tooling
    {
        class MoldCsysBuilder;
    }
    class Builder;
    class SelectFaceList;
    namespace Tooling
    {
        class _MoldCsysBuilderBuilder;
        /** Mold Wizard MoldCsys project builder  <br> To create a new instance of this class, use @link Tooling::MoldCsysCollection::CreateMoldCsysBuilder Tooling::MoldCsysCollection::CreateMoldCsysBuilder@endlink  <br> 
        Default values:
        Lockx: 0
        Locky: 0
        Lockz: 1
        Wcstype: CurrentWcs
        */
        class NXOPENCPPEXPORT MoldCsysBuilder : public Builder
        {
            /**the JA_MOLD_CSYS_BUILDER_wcsposition is the method to computer the WCS positino*/
            public: enum Wcsposition
            {
                WcspositionCurrentWcs/**current wcs position*/,
                WcspositionProductBodyCenter/**product body center position*/,
                WcspositionBoundaryFaceCenter/**boundary face center position*/
            };

            private: friend class  _MoldCsysBuilderBuilder;
            protected: MoldCsysBuilder();
            /**Returns  the wcstype to decide the method to get csys position <br> License requirements : None */
            public: NXOpen::Tooling::MoldCsysBuilder::Wcsposition Wcstype
            (
            );
            /**Sets  the wcstype to decide the method to get csys position <br> License requirements : None */
            public: void SetWcstype
            (
                NXOpen::Tooling::MoldCsysBuilder::Wcsposition wcstype /** wcstype */ 
            );
            /**Returns  the selected faces are used to create a bounding box whose center
                        will be the new origin of WCS  <br> License requirements : None */
            public: NXOpen::SelectFaceList * Prod
            (
            );
            /**Returns  the product doesn't move along X to the new position of WCS if lockx is true  <br> License requirements : None */
            public: bool Lockx
            (
            );
            /**Sets  the product doesn't move along X to the new position of WCS if lockx is true  <br> License requirements : None */
            public: void SetLockx
            (
                bool lockx /** lockx */ 
            );
            /**Returns  the product doesn't move along Y to the new position of WCS if locky is true  <br> License requirements : None */
            public: bool Locky
            (
            );
            /**Sets  the product doesn't move along Y to the new position of WCS if locky is true  <br> License requirements : None */
            public: void SetLocky
            (
                bool locky /** locky */ 
            );
            /**Returns  the product doesn't move along Z to the new position of WCS if lockz is true  <br> License requirements : None */
            public: bool Lockz
            (
            );
            /**Sets  the product doesn't move along Z to the new position of WCS if lockz is true  <br> License requirements : None */
            public: void SetLockz
            (
                bool lockz /** lockz */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
