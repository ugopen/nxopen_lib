#ifndef NXOpen_MOTION_DRIVEROPERATION_HXX_INCLUDED
#define NXOpen_MOTION_DRIVEROPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DriverOperation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_DriverOperation.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class DriverOperation;
    }
    namespace Motion
    {
        class PMDCMotor;
    }
    namespace Motion
    {
        class SignalChart;
    }
    class NXObject;
    namespace Motion
    {
        class _DriverOperationBuilder;
        /** Represents a @link Motion::DriverOperation Motion::DriverOperation@endlink  */
        class NXOPENCPPEXPORT DriverOperation : public TaggedObject
        {
            /** Driver operation type */
            public: enum Type
            {
                TypeUndefined/** Undefined */,
                TypeConstant/** Constant*/,
                TypeHarmonic/** Harmonic */,
                TypeFunction/** Function */,
                TypeArticulation/** Articulation */,
                TypeMotor/** Motor */
            };

            /** Integration type */
            public: enum IntegrationType
            {
                IntegrationTypeDisplacement/** Displacement */,
                IntegrationTypeVelocity/** Velocity */,
                IntegrationTypeAcceleration/** Acceleration */
            };

            private: friend class  _DriverOperationBuilder;
            protected: DriverOperation();
            /**Returns  the type option  <br> License requirements : None */
            public: NXOpen::Motion::DriverOperation::Type TypeOption
            (
            );
            /**Sets  the type option  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTypeOption
            (
                NXOpen::Motion::DriverOperation::Type typeOption /** typeoption */ 
            );
            /**Returns  the displacement  <br> License requirements : None */
            public: double Displacement
            (
            );
            /**Sets  the displacement  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDisplacement
            (
                double displacement /** displacement */ 
            );
            /**Returns  the velocity  <br> License requirements : None */
            public: double Velocity
            (
            );
            /**Sets  the velocity  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetVelocity
            (
                double velocity /** velocity */ 
            );
            /**Returns  the acceleration  <br> License requirements : None */
            public: double Acceleration
            (
            );
            /**Sets  the acceleration  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAcceleration
            (
                double acceleration /** acceleration */ 
            );
            /**Returns  the amplitude  <br> License requirements : None */
            public: double Amplitude
            (
            );
            /**Sets  the amplitude  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAmplitude
            (
                double amplitude /** amplitude */ 
            );
            /**Returns  the frequency  <br> License requirements : None */
            public: double Frequency
            (
            );
            /**Sets  the frequency  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFrequency
            (
                double frequency /** frequency */ 
            );
            /**Returns  the phase angle  <br> License requirements : None */
            public: double PhaseAngle
            (
            );
            /**Sets  the phase angle  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPhaseAngle
            (
                double phaseAngle /** phaseangle */ 
            );
            /**Returns  the harmonic displacement  <br> License requirements : None */
            public: double HarmonicDisplacement
            (
            );
            /**Sets  the harmonic displacement  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetHarmonicDisplacement
            (
                double harmonicDisplacement /** harmonicdisplacement */ 
            );
            /**Returns  the initial displacement  <br> License requirements : None */
            public: double InitialDisplacement
            (
            );
            /**Sets  the initial displacement  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetInitialDisplacement
            (
                double initialDisplacement /** initialdisplacement */ 
            );
            /**Returns  the initial velocity  <br> License requirements : None */
            public: double InitialVelocity
            (
            );
            /**Sets  the initial velocity  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetInitialVelocity
            (
                double initialVelocity /** initialvelocity */ 
            );
            /**Returns  the integration type option  <br> License requirements : None */
            public: NXOpen::Motion::DriverOperation::IntegrationType IntegrationTypeOption
            (
            );
            /**Sets  the integration type option  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIntegrationTypeOption
            (
                NXOpen::Motion::DriverOperation::IntegrationType integrationTypeOption /** integrationtypeoption */ 
            );
            /**Returns  the function tag  <br> License requirements : None */
            public: NXOpen::NXObject * Function
            (
            );
            /**Sets  the function tag  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFunction
            (
                NXOpen::NXObject * function /** function */ 
            );
            /**Returns  the motor tag  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::Motion::PMDCMotor * Motor
            (
            );
            /**Sets  the motor tag  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetMotor
            (
                NXOpen::Motion::PMDCMotor * motor /** motor */ 
            );
            /**Returns  the signal chart tag  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::Motion::SignalChart * SignalChart
            (
            );
            /**Sets  the signal chart tag  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetSignalChart
            (
                NXOpen::Motion::SignalChart * signalChart /** signal chart */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
