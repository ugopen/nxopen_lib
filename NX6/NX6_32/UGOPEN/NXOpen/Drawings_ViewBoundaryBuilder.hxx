#ifndef NXOpen_DRAWINGS_VIEWBOUNDARYBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWBOUNDARYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewBoundaryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewBoundaryBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class ViewBoundaryBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace Drawings
    {
        class _ViewBoundaryBuilderBuilder;
        /** Represents the View Boundary (Drawings.ViewBoundaryBuilder)
            */
        class NXOPENCPPEXPORT ViewBoundaryBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** The view boundary type */
            public: enum Type
            {
                TypeAutomatic/** automatic rectangle */,
                TypeManual/** top view */,
                TypeBreakLine/** break line / detail */,
                TypeBound/** bound by objects */
            };

            private: friend class  _ViewBoundaryBuilderBuilder;
            protected: ViewBoundaryBuilder();
            /**Returns  the orientation type  <br> License requirements : None */
            public: NXOpen::Drawings::ViewBoundaryBuilder::Type BoundaryType
            (
            );
            /**Sets  the orientation type  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetBoundaryType
            (
                NXOpen::Drawings::ViewBoundaryBuilder::Type type /** sets the boundary type. */
            );
            /**Returns  the first corner point  <br> License requirements : None */
            public: NXOpen::Point * BoundaryPoint1
            (
            );
            /**Sets  the first corner point  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetBoundaryPoint1
            (
                NXOpen::Point * boundaryPoint1 /** boundarypoint1 */ 
            );
            /**Returns  the second corner point  <br> License requirements : None */
            public: NXOpen::Point * BoundaryPoint2
            (
            );
            /**Sets  the second corner point  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetBoundaryPoint2
            (
                NXOpen::Point * boundaryPoint2 /** boundarypoint2 */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
