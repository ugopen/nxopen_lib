#ifndef NXOpen_FEATURES_DECKSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DECKSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DecksBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_DeckListItemBuilder.hxx>
#include <NXOpen/Features_DecksBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DecksBuilder;
    }
    namespace Features
    {
        class DeckListItemBuilder;
    }
    namespace Features
    {
        class DeckListItemBuilderList;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _DecksBuilderBuilder;
        /**
            Represents a @link Features::Decks Features::Decks@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDecksBuilder Features::FeatureCollection::CreateDecksBuilder@endlink  <br> */
        class NXOPENCPPEXPORT DecksBuilder : public Features::FeatureBuilder
        {
            private: friend class  _DecksBuilderBuilder;
            protected: DecksBuilder();
            /**Returns  the deck name  <br> License requirements : None */
            public: NXString AutoDeckName
            (
            );
            /**Sets  the deck name  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAutoDeckName
            (
                const NXString & deckName /** deckname */ 
            );
            /**Returns  the auto name toggle  <br> License requirements : None */
            public: bool AutoNameToggle
            (
            );
            /**Sets  the auto name toggle  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAutoNameToggle
            (
                bool autoNameToggle /** autonametoggle */ 
            );
            /**Returns  the deck list  <br> License requirements : None */
            public: NXOpen::Features::DeckListItemBuilderList * DeckList
            (
            );
            /** Create a list containing all required info to generate a single deck  @return   <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: NXOpen::Features::DeckListItemBuilder * CreateNewDeckListItem
            (
                const NXString & deckName /** deckname */ ,
                double zCoord /** zcoord */ ,
                int normalDir /** normaldir */ ,
                bool isSeed /** isseed */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
