#ifndef NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ALONGCURVEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ALONGCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SectionAnalysis_AlongCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_AlongCurveBuilder.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_GridSpacingBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveRangeBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class AlongCurveBuilder;
        }
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class GridSpacingBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class CurveRangeBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectDisplayableObjectList;
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class _AlongCurveBuilderBuilder;
            /** Represents the along curve section specifications for a @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder@endlink .
                        Only used when type is @link SectionAnalysisBuilder::TypesAlongCurve SectionAnalysisBuilder::TypesAlongCurve@endlink .
                    */
            class NXOPENCPPEXPORT AlongCurveBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** Represents the along curve methods */
                public: enum Methods
                {
                    MethodsPerpendicular/** Perpendicular to curve */,
                    MethodsProjection/** Along Curve with projection */
                };

                private: friend class  _AlongCurveBuilderBuilder;
                protected: AlongCurveBuilder();
                /**Returns  the method  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::AlongCurveBuilder::Methods Method
                (
                );
                /**Sets  the method  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: void SetMethod
                (
                    NXOpen::GeometricAnalysis::SectionAnalysis::AlongCurveBuilder::Methods method /** method */ 
                );
                /**Returns  the curves  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::SelectDisplayableObjectList * Curves
                (
                );
                /**Returns  the projection direction, i.e., normal of projection plane  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::Vector3d ProjectionDirection
                (
                );
                /**Sets  the projection direction, i.e., normal of projection plane  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: void SetProjectionDirection
                (
                    const NXOpen::Vector3d & projectionDirection /** projectiondirection */ 
                );
                /**Returns  the spacing specification for the curve grid  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::GridSpacingBuilder * Spacing
                (
                );
                /**Returns  the curve range  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricUtilities::CurveRangeBuilder * CurveRange
                (
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
