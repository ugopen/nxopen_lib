#ifndef NXOpen_FIELDS_FIELDDOMAIN_HXX_INCLUDED
#define NXOpen_FIELDS_FIELDDOMAIN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_FieldDomain.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Fields
    {
        class FieldDomain;
    }
    class NXObject;
    namespace Fields
    {
        class _FieldDomainBuilder;
        /** Represents the Field Domains.
            
                 <br> In general usage a domain is most commonly used to describe a set of values for which
                a function is defined.  The value of the function within this "domain" is the function's "range".
                In NX, a domain defines a group of variables which define one or more quantifiable phenomenon
                which are inextricably related, for example "time", or "space" (three length variables which
                define the attribute of "location"), or force magnitude (single force value) or vector
                (XYZ components). <br> 
                
                 <br> <b><tt>Independent domain</tt></b> <br> 
                 <br> The independent domain is the set of variables which vary independent of any other quantities.
                Essentially these are the "inputs" to a function. <br> 
                 <br> <b><tt>Dependent domain</tt></b> <br> 
                 <br> The dependent domain is the set of variables which vary according to some function of 
                the inputs, or independent variables.  Essentially these are the "range" of a function.  If the
                dependent phenomenon has multiple components (e.g., location, vector or tensor quantities) the 
                dependent domain is expressed as multiple dependent variables. <br>  */
        class NXOPENCPPEXPORT FieldDomain : public NXObject
        {
            private: friend class  _FieldDomainBuilder;
            protected: FieldDomain();
        };
    }
}
#undef EXPORTLIBRARY
#endif
