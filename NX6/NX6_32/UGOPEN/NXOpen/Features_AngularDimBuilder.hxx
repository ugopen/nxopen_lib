#ifndef NXOpen_FEATURES_ANGULARDIMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ANGULARDIMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_AngularDimBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_DimensionBuilder.hxx>
#include <NXOpen/Features_AngularDimBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class AngularDimBuilder;
    }
    namespace Features
    {
        class DimensionBuilder;
    }
    class SelectNXObject;
    namespace Features
    {
        class _AngularDimBuilderBuilder;
        /**
            Represents a @link Features::AngularDim Features::AngularDim@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateAngularDimensionBuilder Features::FeatureCollection::CreateAngularDimensionBuilder@endlink  <br> */
        class NXOPENCPPEXPORT AngularDimBuilder : public Features::DimensionBuilder
        {
            private: friend class  _AngularDimBuilderBuilder;
            protected: AngularDimBuilder();
            /**Returns  the origin object is for the fixed object  <br> License requirements : None */
            public: NXOpen::SelectNXObject * OriginObject
            (
            );
            /**Returns  the measurement object is for the move object  <br> License requirements : None */
            public: NXOpen::SelectNXObject * MeasurementObject
            (
            );
            /**Returns  the alternative angle toggle allows you to compute angle that is 360 degree subtracts current angle  <br> License requirements : None */
            public: bool AlternativeAngle
            (
            );
            /**Sets  the alternative angle toggle allows you to compute angle that is 360 degree subtracts current angle  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAlternativeAngle
            (
                bool alternativeAngle /** alternativeangle */ 
            );
            /**Returns  the complement angle flag  <br> License requirements : None */
            public: bool ComplementAngleFlag
            (
            );
            /**Sets  the complement angle flag  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetComplementAngleFlag
            (
                bool complementAngleFlag /** complementangleflag */ 
            );
            public: bool GetIsComplementAngle
            (
                const NXOpen::Point3d & dimensionLocation /** Indicates dimension origin cursor location */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
