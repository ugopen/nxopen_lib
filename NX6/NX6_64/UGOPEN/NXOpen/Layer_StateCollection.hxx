#ifndef NXOpen_LAYER_STATECOLLECTION_HXX_INCLUDED
#define NXOpen_LAYER_STATECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layer_StateCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layer.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Layer
    {
        class StateCollection;
    }
    namespace Layer
    {
        class Category;
    }
    namespace Layer
    {
        /** Represents a copy of the layer states.  You can manipulate the 
            StateCollection without affecting the actual layer states in the part.
            Your changes to the StateCollection will not be applied to the part until you
            apply them through the method @link Layer::LayerManager::SetStates Layer::LayerManager::SetStates@endlink . */
        class NXOPENCPPEXPORT StateCollection : public TransientObject
        {
            public: explicit StateCollection(void *ptr);
            /** Returns the state of the specified layer  @return   <br> License requirements : None */
            public: NXOpen::Layer::State GetState
            (
                int layer /** layer */ 
            );
            /** Sets the state of the specified layer  <br> License requirements : None */
            public: void SetState
            (
                int layer /** layer */ ,
                NXOpen::Layer::State state /** state */ 
            );
            /** Sets the state of every layer in the category to the
                    specified state, except the work layer   <br> License requirements : None */
            public: void SetStateOfCategory
            (
                NXOpen::Layer::Category * category /** category */ ,
                NXOpen::Layer::State state /** new state for the category.  Must not be
                                                @link Layer::StateWorkLayer Layer::StateWorkLayer@endlink  */
            );
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~StateCollection();
        };
    }
}
#undef EXPORTLIBRARY
#endif
