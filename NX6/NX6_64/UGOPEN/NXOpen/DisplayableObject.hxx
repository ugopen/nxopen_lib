#ifndef NXOpen_DISPLAYABLEOBJECT_HXX_INCLUDED
#define NXOpen_DISPLAYABLEOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DisplayableObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/IFitTo.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class DisplayableObject;
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class IFitTo;
    class INXObject;
    class NXObject;
    class _DisplayableObjectBuilder;
    /** Base class for all objects that are displayable.  <br> This is an abstract class, and cannot be instantiated. <br> */
    class NXOPENCPPEXPORT DisplayableObject : public NXObject, public virtual IFitTo
    {
        /** specifies object width for objects such as lines and text */
        public: enum ObjectWidth
        {
            ObjectWidthNormal/** normal */ ,
            ObjectWidthThick/** thick */ ,
            ObjectWidthThin/** thin */ 
        };

        /** specifies the object font for objects such as lines */
        public: enum ObjectFont
        {
            ObjectFontSolid = 1/** solid */ ,
            ObjectFontDashed/** dashed */ ,
            ObjectFontPhantom/** phantom */ ,
            ObjectFontCenterline/** centerline */ ,
            ObjectFontDotted/** dotted */ ,
            ObjectFontLongDashed/** long dashed */ ,
            ObjectFontDottedDashed/** dotted dashed */ 
        };

        private: friend class  _DisplayableObjectBuilder;
        protected: DisplayableObject();
        /** Blanks the object.  <br> License requirements : None */
        public: void Blank
        (
        );
        /** Unblanks the object.  <br> License requirements : None */
        public: void Unblank
        (
        );
        /**Returns  the blank status of this object.  <br> License requirements : None */
        public: bool IsBlanked
        (
        );
        /** Highlights the object.  <br> License requirements : None */
        public: void Highlight
        (
        );
        /** Unhighlights the object.  <br> License requirements : None */
        public: void Unhighlight
        (
        );
        /**Returns  the color of the object.  <br> License requirements : None */
        public: int Color
        (
        );
        /**Returns  the layer that the object is in.  <br> License requirements : None */
        public: int Layer
        (
        );
        /**Returns  the line font of the object.  <br> License requirements : None */
        public: NXOpen::DisplayableObject::ObjectFont LineFont
        (
        );
        /**Returns  the line width of the object.  <br> License requirements : None */
        public: NXOpen::DisplayableObject::ObjectWidth LineWidth
        (
        );
        /** Sets the location of the object's name.  <br> License requirements : None */
        public: void SetNameLocation
        (
            const NXOpen::Point3d & location /** location */ 
        );
        /**Returns  the location of the object's name.  <br> License requirements : None */
        public: NXOpen::Point3d NameLocation
        (
        );
        /**Sets  the color of the object.  <br> License requirements : None */
        public: void SetColor
        (
            int color /** color */ 
        );
        /**Sets  the layer that the object is in.  <br> License requirements : None */
        public: void SetLayer
        (
            int layer /** layer */ 
        );
        /**Sets  the line font of the object.  <br> License requirements : None */
        public: void SetLineFont
        (
            NXOpen::DisplayableObject::ObjectFont font /** font */ 
        );
        /**Sets  the line width of the object.  <br> License requirements : None */
        public: void SetLineWidth
        (
            NXOpen::DisplayableObject::ObjectWidth width /** width */ 
        );
        /** Redisplays the object in all views. Typically this is used to display
            an object after its creation.  <br> License requirements : None */
        public: void RedisplayObject
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
