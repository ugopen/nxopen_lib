#ifndef NXOpen_CAE_BEAMEADBUILDER_HXX_INCLUDED
#define NXOpen_CAE_BEAMEADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BeamEADBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_BeamEADBuilder.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class BeamEADBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    class Direction;
    namespace CAE
    {
        class _BeamEADBuilderBuilder;
        /** This class provides Beam/Bar Associated Data Support  <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateBeamEadBuilder CAE::NodeElementManager::CreateBeamEadBuilder@endlink  <br> 
        Default values:
        OrientationState: Apply
        */
        class NXOPENCPPEXPORT BeamEADBuilder : public Builder
        {
            /** indicates to apply or clear the section orientation property upon commit */
            public: enum State
            {
                StateApply/** apply the property */,
                StateClear/** clear the property */
            };

            private: friend class  _BeamEADBuilderBuilder;
            protected: BeamEADBuilder();
            /**Returns  the select element operator selects elements  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectElementsBuilder * Elements
            (
            );
            /**Returns  the get selection ori operator gets section orientaion value  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Direction * SelectSectionOri
            (
            );
            /**Sets  the get selection ori operator gets section orientaion value  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSelectSectionOri
            (
                NXOpen::Direction * selectSectionOri /** selectsectionori */ 
            );
            /**Returns  the state drives the commit action  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State OrientationState
            (
            );
            /**Sets  the state drives the commit action  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientationState
            (
                NXOpen::CAE::BeamEADBuilder::State orientationState /** orientation state */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
