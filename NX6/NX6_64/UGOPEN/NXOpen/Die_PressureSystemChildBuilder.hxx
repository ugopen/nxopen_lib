#ifndef NXOpen_DIE_PRESSURESYSTEMCHILDBUILDER_HXX_INCLUDED
#define NXOpen_DIE_PRESSURESYSTEMCHILDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_PressureSystemChildBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class PressureSystemChildBuilder;
    }
    class CartesianCoordinateSystem;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    namespace Die
    {
        class _PressureSystemChildBuilderBuilder;
        /** Represents a Die Pressure System Child sub feature.  <br> This sub feature is created via the main feature builder. <br> */
        class NXOPENCPPEXPORT PressureSystemChildBuilder : public Features::FeatureBuilder
        {
            private: friend class  _PressureSystemChildBuilderBuilder;
            protected: PressureSystemChildBuilder();
            /**Sets  the location of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the location of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the csys of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCsys
            (
                NXOpen::CartesianCoordinateSystem * csys /** csys */ 
            );
            /**Returns  the csys of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::CartesianCoordinateSystem * Csys
            (
            );
            /**Sets  the diameter of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDiameter
            (
                double diameter /** diameter */ 
            );
            /**Returns  the diameter of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: double Diameter
            (
            );
            /**Sets  the height of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetHeight
            (
                double height /** height */ 
            );
            /**Returns  the height of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: double Height
            (
            );
            /**Sets  the clearance of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetClearance
            (
                double clearance /** clearance */ 
            );
            /**Returns  the clearance of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: double Clearance
            (
            );
            /**Sets  the design status of the pressure system, if true the pressure system will be built into the model, if false it will not.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool designStatus /** design status */ 
            );
            /**Returns  the design status of the pressure system, if true the pressure system will be built into the model, if false it will not.  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of the pressure system.  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of the pressure system, if true input data to the pressure system will be displayed, 
                    if false the input data will not be displayed.  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool displayStatus /** display status */ 
            );
            /**Returns  the display status of the pressure system, if true input data to the pressure system will be displayed, 
                    if false the input data will not be displayed.  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
