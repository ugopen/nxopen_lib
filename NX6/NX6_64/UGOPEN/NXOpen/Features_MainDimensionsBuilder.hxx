#ifndef NXOpen_FEATURES_MAINDIMENSIONSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_MAINDIMENSIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_MainDimensionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_MainDimensionsBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class MainDimensionsBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBody;
    namespace Features
    {
        class _MainDimensionsBuilderBuilder;
        /**
            Represents a @link Features::MainDimensions Features::MainDimensions@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateMainDimensionsBuilder Features::FeatureCollection::CreateMainDimensionsBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MainDimensionsBuilder : public Features::FeatureBuilder
        {
            private: friend class  _MainDimensionsBuilderBuilder;
            protected: MainDimensionsBuilder();
            /**Returns  the ship body  <br> License requirements : None */
            public: NXOpen::SelectBody * ShipBody
            (
            );
            /**Returns  the x min  <br> License requirements : None */
            public: double XMin
            (
            );
            /**Sets  the x min  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetXMin
            (
                double xMin /** xmin */ 
            );
            /**Returns  the x max  <br> License requirements : None */
            public: double XMax
            (
            );
            /**Sets  the x max  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetXMax
            (
                double xMax /** xmax */ 
            );
            /**Returns  the y max  <br> License requirements : None */
            public: double YMax
            (
            );
            /**Sets  the y max  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetYMax
            (
                double yMax /** ymax */ 
            );
            /**Returns  the z min  <br> License requirements : None */
            public: double ZMin
            (
            );
            /**Sets  the z min  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetZMin
            (
                double zMin /** zmin */ 
            );
            /**Returns  the z max  <br> License requirements : None */
            public: double ZMax
            (
            );
            /**Sets  the z max  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetZMax
            (
                double zMax /** zmax */ 
            );
            /**Returns  the app  <br> License requirements : None */
            public: double App
            (
            );
            /**Sets  the app  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetApp
            (
                double app /** app */ 
            );
            /**Returns  the fpp  <br> License requirements : None */
            public: double Fpp
            (
            );
            /**Sets  the fpp  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetFpp
            (
                double fpp /** fpp */ 
            );
            /**Returns  the base  <br> License requirements : None */
            public: double Base
            (
            );
            /**Sets  the base  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetBase
            (
                double base /** base */ 
            );
            /**Returns  the cwl  <br> License requirements : None */
            public: double Cwl
            (
            );
            /**Sets  the cwl  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetCwl
            (
                double cwl /** cwl */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
