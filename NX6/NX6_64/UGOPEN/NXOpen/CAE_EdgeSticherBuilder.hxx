#ifndef NXOpen_CAE_EDGESTICHERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_EDGESTICHERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_EdgeSticherBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_EdgeSticherBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class EdgeSticherBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectCAEEdgeList;
    }
    namespace CAE
    {
        class SelectCAEFaceList;
    }
    class Expression;
    namespace CAE
    {
        class _EdgeSticherBuilderBuilder;
        /** Represents a @link CAE::EdgeSticherBuilder CAE::EdgeSticherBuilder@endlink   <br> To create a new instance of this class, use @link CAE::FemPart::CreateEdgeSticherBuilder CAE::FemPart::CreateEdgeSticherBuilder@endlink  <br> 
        Default values:
        SearchDistance.RightHandSide: 0.1 (millimeters part), 0.004 (inches part)
        SnapEnds.RightHandSide: 0.1 (millimeters part), 0.004 (inches part)
        */
        class NXOPENCPPEXPORT EdgeSticherBuilder : public Builder
        {

            public: enum Types
            {
                TypesAutomaticFreeEdgeToAllEdges/** automatic free edge to all edges */ ,
                TypesManualEdgeToEdge/** manual edge to edge */ ,
                TypesManualEdgeToFace/** manual edge to face */ 
            };

            private: friend class  _EdgeSticherBuilderBuilder;
            protected: EdgeSticherBuilder();
            /**Returns  the source edge selection for Stitch Edge <br> License requirements : None */
            public: NXOpen::CAE::SelectCAEEdgeList * SourceEdgeSelection
            (
            );
            /**Returns  the target edge selection for stitch edge when type is @link CAE::EdgeSticherBuilder::TypesManualEdgeToEdge CAE::EdgeSticherBuilder::TypesManualEdgeToEdge@endlink   <br> License requirements : None */
            public: NXOpen::CAE::SelectCAEEdgeList * TargetEdgeSelection
            (
            );
            /**Returns  the target face selection for stitch edge when type is @link CAE::EdgeSticherBuilder::TypesManualEdgeToFace CAE::EdgeSticherBuilder::TypesManualEdgeToFace@endlink   <br> License requirements : None */
            public: NXOpen::CAE::SelectCAEFaceList * TargetFaceSelection
            (
            );
            /**Returns  the search distance value to check overlap  <br> License requirements : None */
            public: NXOpen::Expression * SearchDistance
            (
            );
            /**Returns  the snap ends value to snap to vertex at the end of edge  <br> License requirements : None */
            public: NXOpen::Expression * SnapEnds
            (
            );
            /**Returns  the type   <br> License requirements : None */
            public: NXOpen::CAE::EdgeSticherBuilder::Types Type
            (
            );
            /**Sets  the type   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetType
            (
                NXOpen::CAE::EdgeSticherBuilder::Types type /** type */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
