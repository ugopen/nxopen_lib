#ifndef NXOpen_OBJECTSELECTOR_HXX_INCLUDED
#define NXOpen_OBJECTSELECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ObjectSelector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class ObjectSelector;
    class Builder;
    class SelectNXObjectList;
    class _ObjectSelectorBuilder;
    /**
        Represents a @link ObjectSelector ObjectSelector@endlink  to be used when exporting the the selected objects
        from NX part.This class is created using @link DexManager DexManager@endlink .  <br> Creator not available in KF. <br> */
    class NXOPENCPPEXPORT ObjectSelector : public Builder
    {
        /** Represents the selection scope */
        public: enum Scope
        {
            ScopeEntirePart/** Export entire part */,
            ScopeSelectedObjects/** Export selected objects from the part */
        };

        private: friend class  _ObjectSelectorBuilder;
        protected: ObjectSelector();
        /**Returns  the selection scope option. This will decide if entire part should be exported or only
                some objects.  <br> License requirements : None */
        public: NXOpen::ObjectSelector::Scope SelectionScope
        (
        );
        /**Sets  the selection scope option. This will decide if entire part should be exported or only
                some objects.  <br> License requirements : None */
        public: void SetSelectionScope
        (
            NXOpen::ObjectSelector::Scope selectionScope /** selectionscope */ 
        );
        /**Returns  the selection comp. This holds the list of selected objects.  <br> License requirements : None */
        public: NXOpen::SelectNXObjectList * SelectionComp
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
