#ifndef NXOpen_AUTOTESTPRINT_HXX_INCLUDED
#define NXOpen_AUTOTESTPRINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AutotestPrint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    class AutotestPrint;
    class DebugSession;
    class TaggedObject;
    /** Represents a class that is used for NX testing.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link DebugSession DebugSession@endlink  <br> */
    class NXOPENDEBUGSESSIONCPPEXPORT AutotestPrint
    {
        /** The types for printing parameters */
        public: enum PrintType
        {
            PrintTypeReturnValue/** return value */ ,
            PrintTypeOutputValue/** output value */ ,
            PrintTypeStructElement/** struct element */ ,
            PrintTypeEmbeddedStruct/** embedded struct */ 
        };

        private: NXOpen::DebugSession* m_owner;
        public: explicit AutotestPrint(NXOpen::DebugSession *owner): m_owner(owner)
        {
        }
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        /** Start printing object element for object represented by tag  <br> License requirements : None */
        public: void PrintObjectStart
        (
            NXOpen::TaggedObject * variableObject /** variable object */ ,
            const NXString & variableName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int lineNumber /** line number */ 
        );
        /** End printing object element for object represented by tag  <br> License requirements : None */
        public: void PrintObjectEnd
        (
        );
        /** Start printing method element for method of an object  <br> License requirements : None */
        public: void PrintMethodStart
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** End printing method element for method of an object  <br> License requirements : None */
        public: void PrintMethodEnd
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Print method error  <br> License requirements : None */
        public: void PrintMethodError
        (
            const NXString & methodName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int errorCode /** error code */ 
        );
        /** Start printing struct element  <br> License requirements : None */
        public: void PrintStructStart
        (
            const NXString & structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** End printing struct element  <br> License requirements : None */
        public: void PrintStructEnd
        (
            const NXString & structName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print double parameter  <br> License requirements : None */
        public: void PrintDoubleParameter
        (
            double value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const NXString & tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print double parameter array  <br> License requirements : None */
        public: void PrintDoubleParameterArray
        (
            const std::vector<double> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ ,
            const NXString & tolerance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool isAbsoluteTolerance /** is absolute tolerance */ 
        );
        /** Print integer parameter  <br> License requirements : None */
        public: void PrintIntegerParameter
        (
            int value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print integer parameter array  <br> License requirements : None */
        public: void PrintIntegerParameterArray
        (
            const std::vector<int> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter  <br> License requirements : None */
        public: void PrintBooleanParameter
        (
            bool value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print logical parameter array  <br> License requirements : None */
        public: void PrintBooleanParameterArray
        (
            const std::vector<bool> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print enum parameter  <br> License requirements : None */
        public: void PrintEnumParameter
        (
            const NXString & value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print invalid enum parameter  <br> License requirements : None */
        public: void PrintInvalidEnumParameter
        (
            int value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter  <br> License requirements : None */
        public: void PrintStringParameter
        (
            const NXString & value /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print string parameter array  <br> License requirements : None */
        public: void PrintStringParameterArray
        (
            std::vector<NXString> & values /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter  <br> License requirements : None */
        public: void PrintTextStringParameter
        (
            const NXString & value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print international string parameter array  <br> License requirements : None */
        public: void PrintTextStringParameterArray
        (
            std::vector<NXString> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter  <br> License requirements : None */
        public: void PrintObjectParameter
        (
            NXOpen::TaggedObject * value /** value */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        /** Print object parameter array  <br> License requirements : None */
        public: void PrintObjectParameterArray
        (
            const std::vector<NXOpen::TaggedObject *> & values /** values */ ,
            const NXString & parameterName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::AutotestPrint::PrintType printType /** print type */ 
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
