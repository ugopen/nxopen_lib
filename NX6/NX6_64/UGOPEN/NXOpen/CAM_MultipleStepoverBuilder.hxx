#ifndef NXOpen_CAM_MULTIPLESTEPOVERBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MULTIPLESTEPOVERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MultipleStepoverBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MultipleStepoverBuilder;
    }
    class Builder;
    namespace CAM
    {
        class _MultipleStepoverBuilderBuilder;
        /** Represents a Builder which holds the data for a set of individual number of passes and 
                stepover distance.  <br> This is an abstract class and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT MultipleStepoverBuilder : public Builder
        {
            private: friend class  _MultipleStepoverBuilderBuilder;
            protected: MultipleStepoverBuilder();
            /** Add a new item  <br> License requirements : cam_base ("CAM BASE") */
            public: void Add
            (
                int indexAfter /** the index which new item will be added after */,
                int numOfPasses /** the num of passes for new item */,
                double distance /** the distance for new item */,
                int intent /** the intent for new item */
            );
            /** Modify item  <br> License requirements : cam_base ("CAM BASE") */
            public: void Modify
            (
                int index /** the index of item to be modified */,
                int numOfPasses /** the new value of num of passes */,
                double distance /** the new value of distance */,
                int intent /** the new value of intent */
            );
            /** Delete a item  <br> License requirements : cam_base ("CAM BASE") */
            public: void Delete
            (
                int index /** the index of item to be deleted */
            );
            /** Move up a item  <br> License requirements : cam_base ("CAM BASE") */
            public: void MoveUp
            (
                int index /** the index of item to be moved up */
            );
            /** Move down a item  <br> License requirements : cam_base ("CAM BASE") */
            public: void MoveDown
            (
                int index /** the index of item to be moved down */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
