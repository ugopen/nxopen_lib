#ifndef NXOpen_CATIAV4IMPORTER_HXX_INCLUDED
#define NXOpen_CATIAV4IMPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Catiav4Importer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Catiav4Importer.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Catiav4Importer;
    class Builder;
    class _Catiav4ImporterBuilder;
    /**
        Represents a @link Catiav4Importer Catiav4Importer@endlink  to be used when importing the CATIA V4 Data
        This class is created using @link DexManager DexManager@endlink .  <br> To create a new instance of this class, use @link DexManager::CreateCatiav4Importer DexManager::CreateCatiav4Importer@endlink  <br> 
    Default values:
    HealBodies: 0
    */
    class NXOPENCPPEXPORT Catiav4Importer : public Builder
    {
        private: friend class  _Catiav4ImporterBuilder;
        protected: Catiav4Importer();
        /** the save settings - this will save the settings to a file sepcified  <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Returns  the input file - name of a file which is being imported <br> License requirements : None */
        public: NXString InputFile
        (
        );
        /**Sets  the input file - name of a file which is being imported <br> License requirements : None */
        public: void SetInputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Returns  the settings file - definition file for default settings <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - definition file for default settings <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Returns  the heal bodies - if set to true then imported data will be healed  <br> License requirements : None */
        public: bool HealBodies
        (
        );
        /**Sets  the heal bodies - if set to true then imported data will be healed  <br> License requirements : None */
        public: void SetHealBodies
        (
            bool healBodies /** healbodies */ 
        );
        /**Returns  the file open flag - should be set to false if doing file import <br> License requirements : None */
        public: bool FileOpenFlag
        (
        );
        /**Sets  the file open flag - should be set to false if doing file import <br> License requirements : None */
        public: void SetFileOpenFlag
        (
            bool doingFileOpen /** doingfileopen */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
