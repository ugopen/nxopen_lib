#ifndef NXOpen_GEOMETRICUTILITIES_BOOLEANOPERATION_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BOOLEANOPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BooleanOperation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class Body;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _BooleanOperationBuilder;
        /** Represents a boolean operation .  
            */
        class NXOPENCPPEXPORT BooleanOperation : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Boolean operation type. */
            public: enum BooleanType
            {
                BooleanTypeCreate/** Create */,
                BooleanTypeUnite/** Unite */,
                BooleanTypeSubtract/** Subtract */,
                BooleanTypeIntersect/** Intersect */,
                BooleanTypeSew/** Sew */
            };

            private: friend class  _BooleanOperationBuilder;
            protected: BooleanOperation();
            /**  Get the Boolean operation type and target body
                    
             @deprecated Deprecated in NX4 <br> 
             <br> License requirements : None */
            public: void GetBooleanOperationAndBody
            (
                NXOpen::GeometricUtilities::BooleanOperation::BooleanType* type /** boolean type */,
                NXOpen::Body ** targetBody /** target body */
            );
            /**  Set the Boolean operation type and target body
                    
             @deprecated Deprecated in NX4 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBooleanOperationAndBody
            (
                NXOpen::GeometricUtilities::BooleanOperation::BooleanType type /** boolean type */,
                NXOpen::Body * targetBody /** target body */
            );
            /**Returns   the boolean operation type
                     <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation::BooleanType Type
            (
            );
            /**Sets   the boolean operation type
                     <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::GeometricUtilities::BooleanOperation::BooleanType type /** boolean type */
            );
            /**  Get the target bodies 
                     @return  target bodies of boolean  <br> License requirements : None */
            public: std::vector<NXOpen::Body *> GetTargetBodies
            (
            );
            /**  Set the target bodies 
                     <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargetBodies
            (
                const std::vector<NXOpen::Body *> & targetBodies /**  target bodies of boolean */
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
