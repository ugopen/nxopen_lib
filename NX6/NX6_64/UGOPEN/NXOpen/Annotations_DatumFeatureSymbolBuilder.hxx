#ifndef NXOpen_ANNOTATIONS_DATUMFEATURESYMBOLBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DATUMFEATURESYMBOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DatumFeatureSymbolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DatumFeatureSymbolBuilder.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class DatumFeatureSymbolBuilder;
    }
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class Builder;
    namespace Annotations
    {
        class _DatumFeatureSymbolBuilderBuilder;
        /** Represents a Base Datum Feature Symbol Builder for all types of datum feature symbols  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT DatumFeatureSymbolBuilder : public Builder
        {
            private: friend class  _DatumFeatureSymbolBuilderBuilder;
            protected: DatumFeatureSymbolBuilder();
            /**Returns  the datum feature symbol origin  <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /**Returns  the @link Annotations::LeaderBuilder Annotations::LeaderBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::LeaderBuilder * Leader
            (
            );
            /**Returns  the datum feature string  <br> License requirements : None */
            public: NXString Letter
            (
            );
            /**Sets  the datum feature string  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetLetter
            (
                const NXString & datumFeatureLetter /** datumfeatureletter */ 
            );
            /**Returns  the datum feature  style  <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
