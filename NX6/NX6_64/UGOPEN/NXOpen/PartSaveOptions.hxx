#ifndef NXOpen_PARTSAVEOPTIONS_HXX_INCLUDED
#define NXOpen_PARTSAVEOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartSaveOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class PartSaveOptions;
    class BasePart;
    /** Contains accessor methods for all part save options that follow the part. See
    @link  SaveOptions   SaveOptions @endlink  for those part save options that are not specific to a 
    particular part.  <br> To obtain an instance of this class, refer to @link BasePart BasePart@endlink  <br> */
    class NXOPENCPPEXPORT PartSaveOptions
    {
        /** Options for specifying how pattern data should be saved while saving a part */
        public: enum PatternData
        {
            PatternDataSaveNoShadedOrPattern/** save no shaded or pattern */ ,
            PatternDataSavePatternOnly/** save pattern only */ ,
            PatternDataSavePatternAndShaded/** save pattern and shaded */ 
        };

        private: NXOpen::BasePart* m_owner;
        public: explicit PartSaveOptions(NXOpen::BasePart *owner): m_owner(owner)
        {
        }
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        /**Sets  the option indicating how pattern data will be saved while saving
            a part  <br> License requirements : None */
        public: void SetPatternDataToSave
        (
            NXOpen::PartSaveOptions::PatternData option /** option */ 
        );
        /**Returns  the option indicating how pattern data will be saved while saving
            a part  <br> License requirements : None */
        public: NXOpen::PartSaveOptions::PatternData PatternDataToSave
        (
        );
        /**Sets  the option indicating whether solid data within part files
            will be compressed as it is saved to disk  <br> License requirements : None */
        public: void SetCompressPart
        (
            bool option /** option */ 
        );
        /**Returns  the option indicating whether solid data within part files
            will be compressed as it is saved to disk  <br> License requirements : None */
        public: bool CompressPart
        (
        );
        /**Sets  the option indicating whether the weight and other mass properties
            of a part will be updated and saved when the part is saved  <br> License requirements : None */
        public: void SetGenerateWeightData
        (
            bool option /** option */ 
        );
        /**Returns  the option indicating whether the weight and other mass properties
            of a part will be updated and saved when the part is saved  <br> License requirements : None */
        public: bool GenerateWeightData
        (
        );
        /**Sets  the option indicating whether to generate the CGM data and
            store it in the QAF when you save the part file  <br> License requirements : None */
        public: void SetDrawingCgmData
        (
            bool option /** option */ 
        );
        /**Sets  the option indicating whether to generate 3D Annotation data and store in 
            NX part Quick Access Folder when you save the part file  <br> License requirements : None */
        public: void SetAnnotation3dData
        (
            bool option /** option */ 
        );
        /**Returns  the option indicating whether to generate 3D Annotation data and store in 
            NX part Quick Access Folder when you save the part file  <br> License requirements : None */
        public: bool Annotation3dData
        (
        );
        /**Returns  the option indicating whether to generate the CGM data and
            store it in the QAF when you save the part file  <br> License requirements : None */
        public: bool DrawingCgmData
        (
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
