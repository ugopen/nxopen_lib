#ifndef NXOpen_CAE_FEELEMENTSET_HXX_INCLUDED
#define NXOpen_CAE_FEELEMENTSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FEElementSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class FEElementSet;
    }
    namespace CAE
    {
        class FEElement;
    }
    class NXObject;
    namespace CAE
    {
        class _FEElementSetBuilder;
        /**  @brief  Represents FE Element Set. This is a collection of FE Elements with a label and name 

          */
        class NXOPENCPPEXPORT FEElementSet : public NXObject
        {
            private: friend class  _FEElementSetBuilder;
            protected: FEElementSet();
            /**Returns  the label of the FE Element Set 
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int Label
            (
            );
            /**Sets  the label of the FE Element Set 
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLabel
            (
                int label /** label */
            );
            /**Returns  the count of elements (@link CAE::FEElement CAE::FEElement@endlink )  in the set  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int ElementCount
            (
            );
            /** Returns the element (@link CAE::FEElement CAE::FEElement@endlink ) at the index passed. 
                        If a invalid index is passed a NULL object is returned 
                      @return  element at the index passed  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::FEElement * GetElementByIndex
            (
                int index /** index of the required element */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
