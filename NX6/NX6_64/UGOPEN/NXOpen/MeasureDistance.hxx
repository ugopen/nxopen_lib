#ifndef NXOpen_MEASUREDISTANCE_HXX_INCLUDED
#define NXOpen_MEASUREDISTANCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MeasureDistance.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MeasureManager.hxx>
#include <NXOpen/SingleMeasure.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class MeasureDistance;
    class Measure;
    class Scalar;
    class SingleMeasure;
    /** Represents a single valued distance measurement */
    class NXOPENCPPEXPORT MeasureDistance : public SingleMeasure
    {
        public: explicit MeasureDistance(void *ptr);
        /** Creates and returns a measurement feature  @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Measure * CreateFeature
        (
        );
        /** Creates and returns an embedded measurement expression.
          Deprecated: Use CreateEmbeddedObject instead  @return  
         @deprecated Deprecated in NX5.0.1 <br> 
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXString CreateEmbedded
        (
        );
        /** Creates an embedded measurement.
              The name of the measurement can be used in an expression formula.  @return  the measurement  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Scalar * CreateEmbeddedObject
        (
            NXString* name /** the name of the measurement */
        );
    };
}
#undef EXPORTLIBRARY
#endif
