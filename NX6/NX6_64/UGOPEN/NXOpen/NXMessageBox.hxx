#ifndef NXOpen_NXMESSAGEBOX_HXX_INCLUDED
#define NXOpen_NXMESSAGEBOX_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NXMessageBox.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    class NXMessageBox;
    class UI;
    /** Displays message box  <br> To obtain an instance of this class, refer to @link UI UI@endlink  <br> */
    class NXOPENUICPPEXPORT NXMessageBox
    {
        /** Describes type of message box. */
        public: enum DialogType
        {
            DialogTypeError/** Error */,
            DialogTypeWarning/** Warning */,
            DialogTypeInformation/** Informattion */,
            DialogTypeQuestion/** Question */
        };

        private: NXOpen::UI* m_owner;
        public: explicit NXMessageBox(NXOpen::UI *owner): m_owner(owner)
        {
        }
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        /** Show message box.  @return  Return value from Message Box  <br> License requirements : None */
        public: int Show
        (
            const NXString & title /** Title   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            const NXString & message /** Message   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Show message box.  @return  Return value from Message Box  <br> License requirements : None */
        public: int Show
        (
            const NXString & title /** Title   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            std::vector<NXString> & messages /** Multi-line message   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
