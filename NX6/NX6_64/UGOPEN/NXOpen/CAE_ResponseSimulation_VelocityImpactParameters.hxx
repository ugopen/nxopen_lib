#ifndef NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_VelocityImpactParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_VelocityImpactParameters.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class VelocityImpactParameters;
        }
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _VelocityImpactParametersBuilder;
            /**
                Represents a @link CAE::ResponseSimulation::VelocityImpactParameters CAE::ResponseSimulation::VelocityImpactParameters@endlink 
                */
            class NXOPENCPPEXPORT VelocityImpactParameters : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** the calculation start position for impact */
                public: enum StartPositionType
                {
                    StartPositionTypeAtDrop/** Calculation starts from the drop time*/,
                    StartPositionTypeBeforeImpact/** Calculation ends at the impact time */,
                    StartPositionTypeAtImpact/** Calculation starts from the impact time */
                };

                private: friend class  _VelocityImpactParametersBuilder;
                protected: VelocityImpactParameters();
                /**Returns  the velocity  <br> License requirements : None */
                public: NXOpen::Expression * Velocity
                (
                );
                /**Returns  the drop height. Not available if the impact excitation is of type @link  
                        CAE::ResponseSimulation::VelocityImpactExcitationBuilder::ImpactMethodTypeConstantVelocity
                          
                        CAE::ResponseSimulation::VelocityImpactExcitationBuilder::ImpactMethodTypeConstantVelocity
                        @endlink   <br> License requirements : None */
                public: NXOpen::Expression * DropHeight
                (
                );
                /**Returns  the impact pulse duration  <br> License requirements : None */
                public: NXOpen::Expression * PulseDuration
                (
                );
                /**Returns  the time step. The value must be larger than 1/20 of the impact pulse duration  <br> License requirements : None */
                public: NXOpen::Expression * TimeStep
                (
                );
                /**Returns  the start position  <br> License requirements : None */
                public: NXOpen::CAE::ResponseSimulation::VelocityImpactParameters::StartPositionType StartPosition
                (
                );
                /**Sets  the start position  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetStartPosition
                (
                    NXOpen::CAE::ResponseSimulation::VelocityImpactParameters::StartPositionType mStartPosition /** mstartposition */ 
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
