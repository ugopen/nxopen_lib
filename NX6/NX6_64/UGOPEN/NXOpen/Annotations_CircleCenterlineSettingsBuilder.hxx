#ifndef NXOpen_ANNOTATIONS_CIRCLECENTERLINESETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CIRCLECENTERLINESETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CircleCenterlineSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CircleCenterlineSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterlineSettingsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class CircleCenterlineSettingsBuilder;
    }
    namespace Annotations
    {
        class CenterlineSettingsBuilder;
    }
    namespace Annotations
    {
        class _CircleCenterlineSettingsBuilderBuilder;
        /** Represents a Builder for Circle Centerline Settings */
        class NXOPENCPPEXPORT CircleCenterlineSettingsBuilder : public Annotations::CenterlineSettingsBuilder
        {
            private: friend class  _CircleCenterlineSettingsBuilderBuilder;
            protected: CircleCenterlineSettingsBuilder();
            /**Returns  the Center Cross Size parameter  <br> License requirements : None */
            public: double Size
            (
            );
            /**Sets  the Center Cross Size parameter  <br> License requirements : drafting ("DRAFTING") */
            public: void SetSize
            (
                double size /** size */ 
            );
            /**Returns  the extension parameter  <br> License requirements : None */
            public: double Extension
            (
            );
            /**Sets  the extension parameter  <br> License requirements : drafting ("DRAFTING") */
            public: void SetExtension
            (
                double extension /** extension */ 
            );
            /**Returns  the individual extension distance On/Off parameter  <br> License requirements : None */
            public: bool IndividualDistance
            (
            );
            /**Sets  the individual extension distance On/Off parameter  <br> License requirements : drafting ("DRAFTING") */
            public: void SetIndividualDistance
            (
                bool individualDistance /** individualdistance */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
