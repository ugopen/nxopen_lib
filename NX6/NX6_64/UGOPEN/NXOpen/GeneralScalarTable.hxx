#ifndef NXOpen_GENERALSCALARTABLE_HXX_INCLUDED
#define NXOpen_GENERALSCALARTABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeneralScalarTable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class GeneralScalarTable;
    /**  @brief  Represents a General M x N table of scalar (real) values.   

       <br> This is an abstract class <br> */
    class NXOPENCPPEXPORT GeneralScalarTable : public TransientObject
    {
        public: explicit GeneralScalarTable(void *ptr);
        /**  <br> License requirements : None */
        public: void SetTableSize
        (
            int nRows /** Number of Rows */,
            int nCols /** Number of Columns */,
            double dDefaultValue /** Default Value */
        );
        /**Returns   <br> License requirements : None */
        public: int NumRows
        (
        );
        /**Returns   <br> License requirements : None */
        public: int NumCols
        (
        );
        /**  @return   <br> License requirements : None */
        public: double GetCellValue
        (
            int iRow /** Row Index */,
            int iCol /** Column Index */
        );
        /**  <br> License requirements : None */
        public: void SetCellValue
        (
            int iRow /** Row Index*/,
            int iCol /** Column Index*/,
            double cellValue /** cellvalue */ 
        );
        /** Sets the entire Nth row of values. Input array must be as long as 
                the number of columns @link NumCols NumCols@endlink       <br> License requirements : None */
        public: void SetNthRow
        (
            int iRow /** Row Index */,
            const std::vector<double> & rowValues /** Row Values */
        );
        /** Returns the entire Nth row of values. Output array will be as long as 
                the number of columns @link NumCols NumCols@endlink       @return  Row Values  <br> License requirements : None */
        public: std::vector<double> GetNthRow
        (
            int iRow /** Row Index */
        );
        /** Sets the entire Nth column of values. Input array must be as long as 
                the number of rows @link NumRows NumRows@endlink       <br> License requirements : None */
        public: void SetNthColumn
        (
            int iCol /** Column Index*/,
            const std::vector<double> & columnValues /** columnvalues */ 
        );
        /** Returns the entire Nth column of values. Output array will be as long as 
                the number of rows @link NumRows NumRows@endlink       @return  Column Values  <br> License requirements : None */
        public: std::vector<double> GetNthColumn
        (
            int iCol /** Column Index*/
        );
        /** Destroys the object  <br> License requirements : None */
        public: virtual ~GeneralScalarTable();
    };
}
#undef EXPORTLIBRARY
#endif
