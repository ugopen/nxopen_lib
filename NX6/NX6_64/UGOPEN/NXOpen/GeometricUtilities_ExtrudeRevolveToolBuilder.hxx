#ifndef NXOpen_GEOMETRICUTILITIES_EXTRUDEREVOLVETOOLBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_EXTRUDEREVOLVETOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ExtrudeRevolveToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_ExtrudeRevolveToolBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ExtrudeRevolveToolBuilder;
    }
    class Axis;
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _ExtrudeRevolveToolBuilderBuilder;
        /** a class which is a sub-component of BooleanTool. It provides other two basic tools
              * creation methods by creating extrude or revolve bodies on the fly. Given a
              * super section with non-intersecting loops and a certain direction,
              * it will create a revolve tool or an extrude tool to do the boolean operation.
              */
        class NXOPENCPPEXPORT ExtrudeRevolveToolBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _ExtrudeRevolveToolBuilderBuilder;
            protected: ExtrudeRevolveToolBuilder();
            /**Returns  the tool super section  <br> License requirements : None */
            public: NXOpen::Section * ToolSection
            (
            );
            /**Returns  the tool direction used for doing extrude  <br> License requirements : None */
            public: NXOpen::Direction * ToolDirection
            (
            );
            /**Sets  the tool direction used for doing extrude  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolDirection
            (
                NXOpen::Direction * toolDirection /** tooldirection */ 
            );
            /**Returns  the tool axis used for doing revolve <br> License requirements : None */
            public: NXOpen::Axis * ToolAxis
            (
            );
            /**Sets  the tool axis used for doing revolve <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolAxis
            (
                NXOpen::Axis * toolAxis /** toolaxis */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
