#ifndef NXOpen_USERDEFINEDOBJECTS_USERDEFINEDEVENT_HXX_INCLUDED
#define NXOpen_USERDEFINEDOBJECTS_USERDEFINEDEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UserDefinedObjects_UserDefinedEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace UserDefinedObjects
    {
        class UserDefinedEvent;
    }
    namespace UserDefinedObjects
    {
        class UserDefinedObject;
    }
    namespace UserDefinedObjects
    {
    }
    namespace UserDefinedObjects
    {
        /** Implements the Event Object for UDO's */
        class NXOPENCPPEXPORT UserDefinedEvent : public TransientObject
        {
            /** Available link types for a @link UserDefinedObject UserDefinedObject@endlink . */
            public: enum Reason
            {
                ReasonDisplay/** Display UDO event */,
                ReasonDelete/** An associated object was deleted - UDO cleanup event */,
                ReasonUpdate/** Update UDO event */,
                ReasonSelection/** Select UDO event */,
                ReasonFit/** Fit display event */,
                ReasonAttentionPoint/** Find Attention Point for the UDO event */,
                ReasonInfo = 7/** Query UDO Information event */,
                ReasonEdit/** Edit UDO event */
            };

            public: explicit UserDefinedEvent(void *ptr);
            /** Frees the object from memory.  After this method is
                        called, it is illegal to use the object.  In .NET and Java,
                        his method is automatically called when the object is
                        deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~UserDefinedEvent();
            /**Returns  the related UDO.  <br> License requirements : None */
            public: NXOpen::UserDefinedObjects::UserDefinedObject * UserDefinedObject
            (
            );
            /**Returns  the reason we fired this event.  <br> License requirements : None */
            public: NXOpen::UserDefinedObjects::UserDefinedEvent::Reason EventReason
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
