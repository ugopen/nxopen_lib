#ifndef NXOpen_DRAWINGS_SECTIONLINEBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_SECTIONLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_SectionLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Drawings_HalfSectionLineBuilder.hxx>
#include <NXOpen/Drawings_OrientedSectionLineBuilder.hxx>
#include <NXOpen/Drawings_ParentViewBuilder.hxx>
#include <NXOpen/Drawings_PointAndAngleSectionLineBuilder.hxx>
#include <NXOpen/Drawings_PointToPointSectionLineBuilder.hxx>
#include <NXOpen/Drawings_RevolvedSectionLineBuilder.hxx>
#include <NXOpen/Drawings_SectionLineBuilder.hxx>
#include <NXOpen/Drawings_SectionLineStyleBuilder.hxx>
#include <NXOpen/Drawings_SteppedSectionLineBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class SectionLineBuilder;
    }
    class Builder;
    class Direction;
    namespace Drawings
    {
        class HalfSectionLineBuilder;
    }
    namespace Drawings
    {
        class OrientedSectionLineBuilder;
    }
    namespace Drawings
    {
        class ParentViewBuilder;
    }
    namespace Drawings
    {
        class PointAndAngleSectionLineBuilder;
    }
    namespace Drawings
    {
        class PointToPointSectionLineBuilder;
    }
    namespace Drawings
    {
        class RevolvedSectionLineBuilder;
    }
    namespace Drawings
    {
        class SectionLineStyleBuilder;
    }
    namespace Drawings
    {
        class SteppedSectionLineBuilder;
    }
    namespace Drawings
    {
        class _SectionLineBuilderBuilder;
        /** Represents a @link Drawings::SectionLineBuilder Drawings::SectionLineBuilder@endlink .
                This class is used to create or edit a
                @link Drawings::SectionLine Drawings::SectionLine@endlink .  <br> To create a new instance of this class, use @link Drawings::SectionLineCollection::CreateSectionLineBuilder Drawings::SectionLineCollection::CreateSectionLineBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SectionLineBuilder : public Builder
        {

            public: enum Types
            {
                TypesSimpleOrStepped/** Creates or edits a @link Drawings::SteppedSectionLine Drawings::SteppedSectionLine@endlink  */,
                TypesHalf/** Creates or edits a @link Drawings::HalfSectionLine Drawings::HalfSectionLine@endlink  */,
                TypesRevolved/** Creates or edits a @link Drawings::RevolvedSectionLine Drawings::RevolvedSectionLine@endlink  */,
                TypesPointToPoint/** Creates or edits a @link Drawings::PointToPointSectionLine Drawings::PointToPointSectionLine@endlink  */,
                TypesPointAndAngle/** Creates or edits a @link Drawings::PointAndAngleSectionLine Drawings::PointAndAngleSectionLine@endlink  */,
                TypesPictorial/** Creates or edits a @link Drawings::PictorialSectionLine Drawings::PictorialSectionLine@endlink  */,
                TypesHalfPictorial/** Creates or edits a @link Drawings::HalfPictorialSectionLine Drawings::HalfPictorialSectionLine@endlink  */,
                TypesOriented/** Creates or edits a @link Drawings::OrientedSectionLine Drawings::OrientedSectionLine@endlink  */
            };

            private: friend class  _SectionLineBuilderBuilder;
            protected: SectionLineBuilder();
            /**Returns  the simple or stepped section line data.

                        Use the simple or stepped section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesSimpleOrStepped Drawings::SectionLineBuilder::TypesSimpleOrStepped@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::SteppedSectionLineBuilder * SimpleOrStepped
            (
            );
            /**Returns  the half section line data.

                        Use the half section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesHalf Drawings::SectionLineBuilder::TypesHalf@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::HalfSectionLineBuilder * Half
            (
            );
            /**Returns  the revolved section line data.

                        Use the revolved section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesRevolved Drawings::SectionLineBuilder::TypesRevolved@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::RevolvedSectionLineBuilder * Revolved
            (
            );
            /**Returns  the point to point section line data.

                        Use the point to point section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesPointToPoint Drawings::SectionLineBuilder::TypesPointToPoint@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::PointToPointSectionLineBuilder * PointToPoint
            (
            );
            /**Returns  the point and angle section line data.

                        Use the point and angle section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesPointAndAngle Drawings::SectionLineBuilder::TypesPointAndAngle@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::PointAndAngleSectionLineBuilder * PointAndAngle
            (
            );
            /**Returns  the pictorial section line data.

                        Use the pictorial section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesPictorial Drawings::SectionLineBuilder::TypesPictorial@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::SteppedSectionLineBuilder * Pictorial
            (
            );
            /**Returns  the half pictorial section line data.

                        Use the half pictorial section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesHalfPictorial Drawings::SectionLineBuilder::TypesHalfPictorial@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::HalfSectionLineBuilder * HalfPictorial
            (
            );
            /**Returns  the simple 3D section line data.

                        Use the simple 3D section line data when the type is set to
                        @link Drawings::SectionLineBuilder::TypesOriented Drawings::SectionLineBuilder::TypesOriented@endlink   <br> License requirements : None */
            public: NXOpen::Drawings::OrientedSectionLineBuilder * Oriented
            (
            );
            /**Returns  the section line type  <br> License requirements : None */
            public: NXOpen::Drawings::SectionLineBuilder::Types Type
            (
            );
            /**Sets  the section line type  <br> License requirements : drafting ("DRAFTING") */
            public: void SetType
            (
                NXOpen::Drawings::SectionLineBuilder::Types type /** type */ 
            );
            /**Returns  the hinge direction.

                        The hinge direction is only used for 
                        @link Drawings::SectionLineBuilder::TypesSimpleOrStepped Drawings::SectionLineBuilder::TypesSimpleOrStepped@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalf Drawings::SectionLineBuilder::TypesHalf@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesRevolved Drawings::SectionLineBuilder::TypesRevolved@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesPointToPoint Drawings::SectionLineBuilder::TypesPointToPoint@endlink  , and
                        @link Drawings::SectionLineBuilder::TypesPointAndAngle Drawings::SectionLineBuilder::TypesPointAndAngle@endlink  section lines  <br> License requirements : None */
            public: NXOpen::Direction * HingeDirection
            (
            );
            /**Sets  the hinge direction.

                        The hinge direction is only used for 
                        @link Drawings::SectionLineBuilder::TypesSimpleOrStepped Drawings::SectionLineBuilder::TypesSimpleOrStepped@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalf Drawings::SectionLineBuilder::TypesHalf@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesRevolved Drawings::SectionLineBuilder::TypesRevolved@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesPointToPoint Drawings::SectionLineBuilder::TypesPointToPoint@endlink  , and
                        @link Drawings::SectionLineBuilder::TypesPointAndAngle Drawings::SectionLineBuilder::TypesPointAndAngle@endlink  section lines  <br> License requirements : drafting ("DRAFTING") */
            public: void SetHingeDirection
            (
                NXOpen::Direction * hingeDirection /** hingedirection */ 
            );
            /**Returns  the arrow direction.  The arrow direction defines the direction of
                        the section line arrows and must be perpendicular to the cut
                        direction.

                        The arrow direction is only used for
                        @link Drawings::SectionLineBuilder::TypesPictorial Drawings::SectionLineBuilder::TypesPictorial@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalfPictorial Drawings::SectionLineBuilder::TypesHalfPictorial@endlink  and
                        @link Drawings::SectionLineBuilder::TypesOriented Drawings::SectionLineBuilder::TypesOriented@endlink  section lines  <br> License requirements : None */
            public: NXOpen::Direction * ArrowDirection
            (
            );
            /**Sets  the arrow direction.  The arrow direction defines the direction of
                        the section line arrows and must be perpendicular to the cut
                        direction.

                        The arrow direction is only used for
                        @link Drawings::SectionLineBuilder::TypesPictorial Drawings::SectionLineBuilder::TypesPictorial@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalfPictorial Drawings::SectionLineBuilder::TypesHalfPictorial@endlink  and
                        @link Drawings::SectionLineBuilder::TypesOriented Drawings::SectionLineBuilder::TypesOriented@endlink  section lines  <br> License requirements : drafting ("DRAFTING") */
            public: void SetArrowDirection
            (
                NXOpen::Direction * arrowDirection /** arrowdirection */ 
            );
            /**Returns  the cut direction.  The cut direction is a vector that specifies
                        the direction of the cutting plane. A vector arrow displays showing
                        the direction of the vector.

                        The cut direction is only used for
                        @link Drawings::SectionLineBuilder::TypesPictorial Drawings::SectionLineBuilder::TypesPictorial@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalfPictorial Drawings::SectionLineBuilder::TypesHalfPictorial@endlink  and
                        @link Drawings::SectionLineBuilder::TypesOriented Drawings::SectionLineBuilder::TypesOriented@endlink  section lines  <br> License requirements : None */
            public: NXOpen::Direction * CutDirection
            (
            );
            /**Sets  the cut direction.  The cut direction is a vector that specifies
                        the direction of the cutting plane. A vector arrow displays showing
                        the direction of the vector.

                        The cut direction is only used for
                        @link Drawings::SectionLineBuilder::TypesPictorial Drawings::SectionLineBuilder::TypesPictorial@endlink  ,
                        @link Drawings::SectionLineBuilder::TypesHalfPictorial Drawings::SectionLineBuilder::TypesHalfPictorial@endlink  and
                        @link Drawings::SectionLineBuilder::TypesOriented Drawings::SectionLineBuilder::TypesOriented@endlink  section lines  <br> License requirements : drafting ("DRAFTING") */
            public: void SetCutDirection
            (
                NXOpen::Direction * cutDirection /** cutdirection */ 
            );
            /**Returns  the parent view.  The view that the section line will cut.  <br> License requirements : None */
            public: NXOpen::Drawings::ParentViewBuilder * ParentView
            (
            );
            /**Returns  the style.  The preferences of a section line.  <br> License requirements : None */
            public: NXOpen::Drawings::SectionLineStyleBuilder * Style
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
