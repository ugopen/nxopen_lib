#ifndef NXOpen_MOTION_POINTONCURVEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_POINTONCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_PointOnCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/Motion_PointOnCurveBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class PointOnCurveBuilder;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    class NXObject;
    class Point;
    namespace Motion
    {
        class _PointOnCurveBuilderBuilder;
        /**
            Represents a @link Motion::PointOnCurveBuilder Motion::PointOnCurveBuilder@endlink 
             <br> To create a new instance of this class, use @link Motion::PointOnCurveCollection::CreatePointOnCurveBuilder Motion::PointOnCurveCollection::CreatePointOnCurveBuilder@endlink  <br> */
        class NXOPENCPPEXPORT PointOnCurveBuilder : public Motion::MotionBuilder
        {
            private: friend class  _PointOnCurveBuilderBuilder;
            protected: PointOnCurveBuilder();
            /**Returns  the selected point  <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the selected point  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /** Returns the curves  @return  curve or edge <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetCurves
            (
            );
            /** Sets the curves  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCurves
            (
                const std::vector<NXOpen::NXObject *> & curves /** curve or edge*/
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
