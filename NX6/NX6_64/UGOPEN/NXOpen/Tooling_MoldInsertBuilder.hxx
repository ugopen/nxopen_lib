#ifndef NXOpen_TOOLING_MOLDINSERTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MOLDINSERTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MoldInsertBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_MoldInsertBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Tooling
    {
        class MoldInsertBuilder;
    }
    class Builder;
    class SelectBodyList;
    namespace Tooling
    {
        class _MoldInsertBuilderBuilder;
        /** Mold Wizard mold insert management builder  <br> To create a new instance of this class, use @link Tooling::MoldInsertCollection::CreateMoldInsertBuilder Tooling::MoldInsertCollection::CreateMoldInsertBuilder@endlink  <br> 
        Default values:
        MethodType: UniteSingleWorkpieces
        Rename: 0
        */
        class NXOPENCPPEXPORT MoldInsertBuilder : public Builder
        {
            /** design type: unite single workpieces, subtract overall workpieces */
            public: enum BooleanType
            {
                BooleanTypeUniteSingleWorkpieces/** unite single */,
                BooleanTypeSubtractOverallWorkpieces/** subtract overall */
            };

            private: friend class  _MoldInsertBuilderBuilder;
            protected: MoldInsertBuilder();
            /**Returns  the select body  <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectBody
            (
            );
            /**Returns  the method type  <br> License requirements : None */
            public: NXOpen::Tooling::MoldInsertBuilder::BooleanType MethodType
            (
            );
            /**Sets  the method type  <br> License requirements : None */
            public: void SetMethodType
            (
                NXOpen::Tooling::MoldInsertBuilder::BooleanType methodType /** methodtype */ 
            );
            /**Returns  the rename method  <br> License requirements : None */
            public: bool Rename
            (
            );
            /**Sets  the rename method  <br> License requirements : None */
            public: void SetRename
            (
                bool rename /** rename */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
