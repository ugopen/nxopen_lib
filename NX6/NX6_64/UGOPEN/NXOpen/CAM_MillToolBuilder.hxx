#ifndef NXOpen_CAM_MILLTOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MILLTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MillToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MillingToolBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MillToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class MillingToolBuilder;
    }
    namespace CAM
    {
        class _MillToolBuilderBuilder;
        /** Represents a Mill Tool Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateMillToolBuilder CAM::NCGroupCollection::CreateMillToolBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MillToolBuilder : public CAM::MillingToolBuilder
        {
            /** Available types for  mill tool subtype */
            public: enum CutterSubtypes
            {
                CutterSubtypesMill5 = 1/** 5-Parameter */,
                CutterSubtypesMill7/** 7-Parameter */,
                CutterSubtypesMill10/** 10-Parameter */,
                CutterSubtypesMillBall/** Ball MillTool */
            };

            private: friend class  _MillToolBuilderBuilder;
            protected: MillToolBuilder();
            /**Returns  the cutter subtypes  <br> License requirements : None */
            public: NXOpen::CAM::MillToolBuilder::CutterSubtypes CutterSubtype
            (
            );
            /**Sets  the cutter subtypes  <br> License requirements : None */
            public: void SetCutterSubtype
            (
                NXOpen::CAM::MillToolBuilder::CutterSubtypes cutterSubtype /** cuttersubtype */ 
            );
            /**Returns  the Lower Radius builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlCor1RadBuilder
            (
            );
            /**Returns  the Tip Angle builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlTipAngBuilder
            (
            );
            /**Returns  the X Center R1 builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlXcenCor1Builder
            (
            );
            /**Returns  the Y Center R1 builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlYcenCor1Builder
            (
            );
            /**Returns  the Upper Radius builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlCor2RadBuilder
            (
            );
            /**Returns  the X Center R2 builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlXcenCor2Builder
            (
            );
            /**Returns  the Y Center R2 builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlYcenCor2Builder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
