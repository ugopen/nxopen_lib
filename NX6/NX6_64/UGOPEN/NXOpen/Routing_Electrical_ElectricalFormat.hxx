#ifndef NXOpen_ROUTING_ELECTRICAL_ELECTRICALFORMAT_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_ELECTRICALFORMAT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_ElectricalFormat.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class ElectricalFormat;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _ElectricalFormatBuilder;
            /** Represents a Routing Electrical ElectricalFormat.
                      <br> To create an  instance of this class use @link Routing::Electrical::ElectricalFormatCollection Routing::Electrical::ElectricalFormatCollection@endlink  <br> */
            class NXOPENCPPEXPORT ElectricalFormat : public TaggedObject
            {
                /** Describes how system reports the lengths of the stock. */
                public: enum Type
                {
                    TypeConnections/** connections */ ,
                    TypeComponents/** components */ 
                };

                private: friend class  _ElectricalFormatBuilder;
                protected: ElectricalFormat();
                /**Returns  the name of @link ElectricalFormat ElectricalFormat@endlink   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXString Name
                (
                );
                /**Sets  the name of @link ElectricalFormat ElectricalFormat@endlink   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Returns  the type of @link ElectricalFormat ElectricalFormat@endlink   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXOpen::Routing::Electrical::ElectricalFormat::Type FormatType
                (
                );
                /**Sets  the type of @link ElectricalFormat ElectricalFormat@endlink   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: void SetFormatType
                (
                    NXOpen::Routing::Electrical::ElectricalFormat::Type type /** type */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
