#ifndef NXOpen_ANNOTATIONS_ASSOCIATIVITYBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ASSOCIATIVITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_AssociativityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_AssociativityBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class AssociativityBuilder;
    }
    class Builder;
    class SelectDisplayableObject;
    class SelectDisplayableObjectList;
    namespace Annotations
    {
        class _AssociativityBuilderBuilder;
        /**
            Represents a @link Annotations::AssociativityBuilder Annotations::AssociativityBuilder@endlink 
             <br> To create a new instance of this class, use @link Annotations::AnnotationManager::CreateAssociativityBuilder Annotations::AnnotationManager::CreateAssociativityBuilder@endlink  <br> */
        class NXOPENCPPEXPORT AssociativityBuilder : public Builder
        {
            private: friend class  _AssociativityBuilderBuilder;
            protected: AssociativityBuilder();
            /**Returns  the line option  <br> License requirements : None */
            public: NXOpen::Annotations::AssociativityLineOption LineOption
            (
            );
            /**Sets  the line option  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetLineOption
            (
                NXOpen::Annotations::AssociativityLineOption lineOption /** lineoption */ 
            );
            /**Returns  the angle  <br> License requirements : None */
            public: double Angle
            (
            );
            /**Sets  the angle  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the select object  <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * SelectObject
            (
            );
            /**Returns  the vector  <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * Vector
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
