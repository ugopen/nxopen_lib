#ifndef NXOpen_ROUTING_ELECTRICAL_HARNESSDEVICE_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_HARNESSDEVICE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_HarnessDevice.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_SingleDevice.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class HarnessDevice;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class HarnessDefinition;
        }
    }
    namespace Routing
    {
        class SingleDevice;
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _HarnessDeviceBuilder;
            /**
                        The Electrical HarnessDevice corresponds to a harness instance of the 
                        @link Routing::SingleDevice Routing::SingleDevice@endlink .
                     <br> To create a new instance of this class, use @link Routing::Electrical::HarnessDeviceCollection::CreateHarnessDevice Routing::Electrical::HarnessDeviceCollection::CreateHarnessDevice@endlink  <br> */
            class NXOPENCPPEXPORT HarnessDevice : public Routing::SingleDevice
            {
                private: friend class  _HarnessDeviceBuilder;
                protected: HarnessDevice();
                /** Get harness definition.  @return   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXOpen::Routing::Electrical::HarnessDefinition * GetHarnessDefinition
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
