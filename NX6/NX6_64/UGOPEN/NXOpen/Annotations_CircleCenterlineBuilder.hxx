#ifndef NXOpen_ANNOTATIONS_CIRCLECENTERLINEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CIRCLECENTERLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CircleCenterlineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CircleCenterlineBuilder.hxx>
#include <NXOpen/Annotations_CircleCenterlineSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterlineBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class CircleCenterlineBuilder;
    }
    namespace Annotations
    {
        class CenterlineBuilder;
    }
    namespace Annotations
    {
        class CircleCenterlineSettingsBuilder;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Annotations
    {
        class _CircleCenterlineBuilderBuilder;
        /** Represents a CircleCenterline Builder  <br> This is an abstract class. <br> 
        Default values:
        Settings.Extension: 6.35 (millimeters part), 0.25 (inches part)
        Settings.Gap: 1.5875 (millimeters part), 0.0625 (inches part)
        Settings.IndividualDistance: 0
        Settings.Size: 3.175 (millimeters part), 0.125 (inches part)
        Settings.Width: Thin
        */
        class NXOPENCPPEXPORT CircleCenterlineBuilder : public Annotations::CenterlineBuilder
        {
            /** the valid enumeration used for the creation types */
            public: enum Types
            {
                TypesThrough3Points/** Centerline using 3 or More Points Method */,
                TypesCenterpoint/** Centerline using Centerpoint Method */
            };

            private: friend class  _CircleCenterlineBuilderBuilder;
            protected: CircleCenterlineBuilder();
            /**Returns  the selction object of the centerline <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Locations
            (
            );
            /**Returns  the method which returns full or partial circle flag <br> License requirements : None */
            public: bool FullCircle
            (
            );
            /**Sets  the method which returns full or partial circle flag <br> License requirements : drafting ("DRAFTING") */
            public: void SetFullCircle
            (
                bool fullType /** fulltype */ 
            );
            /**Returns  the method which returns type of centerline  <br> License requirements : None */
            public: NXOpen::Annotations::CircleCenterlineBuilder::Types Type
            (
            );
            /**Sets  the method which returns type of centerline  <br> License requirements : drafting ("DRAFTING") */
            public: void SetType
            (
                NXOpen::Annotations::CircleCenterlineBuilder::Types method /** method */ 
            );
            /**Returns  the inherit object <br> License requirements : None */
            public: NXOpen::SelectNXObject * Inherit
            (
            );
            /**Returns  the settings builder object for the centerline  <br> License requirements : None */
            public: NXOpen::Annotations::CircleCenterlineSettingsBuilder * Settings
            (
            );
            /** Removes location object for a given index from the Select Object List.
                        This method is required for the retained circle centerline case , however the method
                        can be used for removing any object from select object list for the Circle Centerline.  <br> License requirements : drafting ("DRAFTING") */
            public: void RemoveLocation
            (
                int index /** Index of the object in the select object list */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
