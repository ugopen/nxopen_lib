#ifndef NXOpen_FEATURES_ADMMOVEFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ADMMOVEFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_AdmMoveFaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_AdmMoveFaceBuilder.hxx>
#include <NXOpen/Features_FaceRecognitionBuilder.hxx>
#include <NXOpen/GeometricUtilities_ModlMotion.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class AdmMoveFaceBuilder;
    }
    namespace Features
    {
        class FaceRecognitionBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ModlMotion;
    }
    namespace Features
    {
        class _AdmMoveFaceBuilderBuilder;
        /**
            Represents a @link Features::AdmMoveFace Features::AdmMoveFace@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateAdmMoveFaceBuilder Features::FeatureCollection::CreateAdmMoveFaceBuilder@endlink  <br> 
        Default values:
        FaceToMove.CoaxialEnabled: 0
        FaceToMove.CoplanarAxesEnabled: 0
        FaceToMove.CoplanarEnabled: 0
        FaceToMove.EqualDiameterEnabled: 0
        FaceToMove.ParallelEnabled: 0
        FaceToMove.PerpendicularEnabled: 0
        FaceToMove.SymmetricEnabled: 0
        FaceToMove.TangentEnabled: 0
        FaceToMove.UseFaceBrowse: 1
        Motion.Option: DistanceAngle
        */
        class NXOPENCPPEXPORT AdmMoveFaceBuilder : public Features::FeatureBuilder
        {
            private: friend class  _AdmMoveFaceBuilderBuilder;
            protected: AdmMoveFaceBuilder();
            /**Returns  the face to move. Please refer @link Features::FaceRecognitionBuilder Features::FaceRecognitionBuilder@endlink  for details.  <br> License requirements : None */
            public: NXOpen::Features::FaceRecognitionBuilder * FaceToMove
            (
            );
            /**Returns  the motion. The motion block provides a suite of linear and angular transform methods. Please refer @link GeometricUtilities::ModlMotion GeometricUtilities::ModlMotion@endlink  for details.  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ModlMotion * Motion
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
