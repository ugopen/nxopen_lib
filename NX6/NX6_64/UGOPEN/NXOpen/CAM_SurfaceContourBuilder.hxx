#ifndef NXOpen_CAM_SURFACECONTOURBUILDER_HXX_INCLUDED
#define NXOpen_CAM_SURFACECONTOURBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SurfaceContourBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MillOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class SurfaceContourBuilder;
    }
    namespace CAM
    {
        class DmAmBuilder;
    }
    namespace CAM
    {
        class DmBndBuilder;
    }
    namespace CAM
    {
        class DmCmBuilder;
    }
    namespace CAM
    {
        class DmCurveBuilder;
    }
    namespace CAM
    {
        class DmRadBuilder;
    }
    namespace CAM
    {
        class DmSpiralBuilder;
    }
    namespace CAM
    {
        class DmSurfBuilder;
    }
    namespace CAM
    {
        class DmTpBuilder;
    }
    namespace CAM
    {
        class DmUserExitCiBuilder;
    }
    namespace CAM
    {
        class FlowBuilder;
    }
    namespace CAM
    {
        class MillOperationBuilder;
    }
    namespace CAM
    {
        class NcmScBuilder;
    }
    namespace CAM
    {
        class ProjVecCiBuilder;
    }
    namespace CAM
    {
        class ToolAxisCiBuilder;
    }
    namespace CAM
    {
        class _SurfaceContourBuilderBuilder;
        /** Represents a SurfaceContour Builder  <br> To create a new instance of this class, use @link CAM::OperationCollection::CreateSurfaceContourBuilder CAM::OperationCollection::CreateSurfaceContourBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SurfaceContourBuilder : public CAM::MillOperationBuilder
        {
            /** Available types for Drive Method */
            public: enum DriveMethodTypes
            {
                DriveMethodTypesUndef/** Undefined */,
                DriveMethodTypesCurve/** Curve/Point */,
                DriveMethodTypesSpiral/** Spiral */,
                DriveMethodTypesBoundary/** Boundary */,
                DriveMethodTypesAreaMilling/** Area Milling */,
                DriveMethodTypesSurfaceArea/** Surface Area */,
                DriveMethodTypesInterpolatedToolPath/** Interpolated tool path */,
                DriveMethodTypesToolPath/** Tool Path */,
                DriveMethodTypesRadialCut/** Radial Cut */,
                DriveMethodTypesContourProfile/** Contour Profile */,
                DriveMethodTypesFlowCut/** Flow Cut */,
                DriveMethodTypesText/** Text */,
                DriveMethodTypesUserDefined/** User Function */,
                DriveMethodTypesTotal/** Total */
            };

            /** Available types for access vector for the contour profile method of surface milling  */
            public: enum AccessVectorMethodType
            {
                AccessVectorMethodTypeZm/**positive z-direction of MCS*/,
                AccessVectorMethodTypeNegZm/**negative z-direction of MCS*/,
                AccessVectorMethodTypeSpecify/**user specified*/
            };

            /** Available types for cleanup */
            public: enum CleanupTypes
            {
                CleanupTypesOff/** off */ ,
                CleanupTypesUncutValley/** uncut valley */ ,
                CleanupTypesSteepArea/** steep area */ ,
                CleanupTypesBoth/** both */ ,
                CleanupTypesFlowcutContacts/** flowcut contacts */ ,
                CleanupTypesFlowcutToolend/** flowcut toolend */ ,
                CleanupTypesFlowcutBoth/** flowcut both */ 
            };

            private: friend class  _SurfaceContourBuilderBuilder;
            protected: SurfaceContourBuilder();
            /**Returns  the non-cutting moves builder   <br> License requirements : None */
            public: NXOpen::CAM::NcmScBuilder * NonCuttingBuilder
            (
            );
            /** Get drive method  @return  the drive method menu value  <br> License requirements : None */
            public: NXOpen::CAM::SurfaceContourBuilder::DriveMethodTypes GetDriveMethod
            (
            );
            /** Set drive method  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDriveMethod
            (
                NXOpen::CAM::SurfaceContourBuilder::DriveMethodTypes driveMethod /** the drive method menu value */
            );
            /**Returns  the Projection Vector builder (block)  <br> License requirements : None */
            public: NXOpen::CAM::ProjVecCiBuilder * ProjectionVector
            (
            );
            /**Returns  the Curve Drive Method builder  <br> License requirements : None */
            public: NXOpen::CAM::DmCurveBuilder * DmcurveBuilder
            (
            );
            /**Returns  the Spiral Drive Method builder  <br> License requirements : None */
            public: NXOpen::CAM::DmSpiralBuilder * DmSpiralBuilder
            (
            );
            /**Returns  the Boundary Drive Method builder  <br> License requirements : None */
            public: NXOpen::CAM::DmBndBuilder * DmboundaryBuilder
            (
            );
            /**Returns  the Area Milling Drive Method builder  <br> License requirements : None */
            public: NXOpen::CAM::DmAmBuilder * DmareaMillingBuilder
            (
            );
            /**Returns  the  Automatic Auxiliary Floor   <br> License requirements : None */
            public: bool AutomaticAuxiliaryFloor
            (
            );
            /**Sets  the  Automatic Auxiliary Floor   <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAutomaticAuxiliaryFloor
            (
                bool applyAutoAuxFloor /** the Automatic Auxiliary Floor value */
            );
            /**Returns  the Automatic Auxiliary Floor Distance  <br> License requirements : None */
            public: double AutomaticAuxiliaryFloorDistance
            (
            );
            /**Sets  the Automatic Auxiliary Floor Distance  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAutomaticAuxiliaryFloorDistance
            (
                double auxFloorDis /** the Distance value */
            );
            /**Returns  the Access Vector Method <br> License requirements : None */
            public: NXOpen::CAM::SurfaceContourBuilder::AccessVectorMethodType AccessVectorMethod
            (
            );
            /**Sets  the Access Vector Method <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAccessVectorMethod
            (
                NXOpen::CAM::SurfaceContourBuilder::AccessVectorMethodType accessVectorMethod /** the value of Access Vector Method */
            );
            /**Returns  the tool axis builder   <br> License requirements : None */
            public: NXOpen::CAM::ToolAxisCiBuilder * ToolAxis
            (
            );
            /**Returns  the Surface Area Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder * DmSurfBuilder
            (
            );
            /**Returns  the Contour Profile Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::DmCmBuilder * DmCmBuilder
            (
            );
            /**Returns  the Radial Cut Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::DmRadBuilder * DmradBuilder
            (
            );
            /**Returns  the Flow Cut Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::FlowBuilder * FlowBuilder
            (
            );
            /**Returns  the Tool Path Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::DmTpBuilder * DmtpBuilder
            (
            );
            /**Returns  the CAM Exit name builder in User Defined Drive Method builder   <br> License requirements : None */
            public: NXOpen::CAM::DmUserExitCiBuilder * UserExitCiBuilder
            (
            );
            /**Returns  the cleanup type  <br> License requirements : None */
            public: NXOpen::CAM::SurfaceContourBuilder::CleanupTypes CleanupType
            (
            );
            /**Sets  the cleanup type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCleanupType
            (
                NXOpen::CAM::SurfaceContourBuilder::CleanupTypes propValue /** the value of cleanup type */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
