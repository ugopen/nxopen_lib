#ifndef NXOpen_FEATURES_COPYFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_COPYFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CopyFaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_CopyFaceBuilder.hxx>
#include <NXOpen/Features_FaceRecognitionBuilder.hxx>
#include <NXOpen/GeometricUtilities_ModlMotion.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class CopyFaceBuilder;
    }
    namespace Features
    {
        class FaceRecognitionBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ModlMotion;
    }
    class SelectBody;
    namespace Features
    {
        class _CopyFaceBuilderBuilder;
        /**
            Represents a builder for a copy face feature.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateCopyFaceBuilder Features::FeatureCollection::CreateCopyFaceBuilder@endlink  <br> 
        Default values:
        FaceToCopy.CoaxialEnabled: 0
        FaceToCopy.CoplanarAxesEnabled: 0
        FaceToCopy.CoplanarEnabled: 0
        FaceToCopy.EqualDiameterEnabled: 0
        FaceToCopy.ParallelEnabled: 0
        FaceToCopy.PerpendicularEnabled: 0
        FaceToCopy.SymmetricEnabled: 0
        FaceToCopy.TangentEnabled: 0
        FaceToCopy.UseFaceBrowse: 1
        Motion.Option: DistanceAngle
        */
        class NXOPENCPPEXPORT CopyFaceBuilder : public Features::FeatureBuilder
        {
            private: friend class  _CopyFaceBuilderBuilder;
            protected: CopyFaceBuilder();
            /**Returns  the face recognition builder holding the faces to copy.  <br> License requirements : None */
            public: NXOpen::Features::FaceRecognitionBuilder * FaceToCopy
            (
            );
            /**Returns  the motion about which the copied faces move  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ModlMotion * Motion
            (
            );
            /**Returns  the do paste option defines whether paste the copied faces to a target body.  <br> License requirements : None */
            public: bool DoPaste
            (
            );
            /**Sets  the do paste option defines whether paste the copied faces to a target body.  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDoPaste
            (
                bool doPaste /** do paste */ 
            );
            /**Returns  the target body.
                        The target body can be a solid or sheet.  <br> License requirements : None */
            public: NXOpen::SelectBody * TargetBody
            (
            );
            /**Returns  the reverse direction.
                        A flag to indicate whether the target body direction is reversed, disabled if target body is solid.  <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction.
                        A flag to indicate whether the target body direction is reversed, disabled if target body is solid.  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reverse direction */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
