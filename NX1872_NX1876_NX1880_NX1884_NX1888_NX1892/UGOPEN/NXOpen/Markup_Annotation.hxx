#ifndef NXOpen_MARKUP_ANNOTATION_HXX_INCLUDED
#define NXOpen_MARKUP_ANNOTATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Markup_Annotation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_markup_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Markup
    {
        class Annotation;
    }
    class DisplayableObject;
    namespace Markup
    {
        class _AnnotationBuilder;
        class AnnotationImpl;

        /// \cond NX_NO_DOC 
        /**
                Represents a @link NXOpen::Markup::Annotation NXOpen::Markup::Annotation@endlink  on the screen.
             <br> This is an abstract class and cannot be directly instantiated  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_MARKUPEXPORT  Annotation : public NXOpen::DisplayableObject
        {
            /** Represents the @link NXOpen::Markup::Polyline NXOpen::Markup::Polyline@endlink  line option. */
            public: enum CoordinateType
            {
                CoordinateTypeViewSpace/** View Space */,
                CoordinateTypeAbsoluteSpace/** Absolute Space  */
            };

            private: AnnotationImpl * m_annotation_impl;
            private: friend class  _AnnotationBuilder;
            protected: Annotation();
            public: ~Annotation();
            /** Gets the location 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d GetLocation
            (
            );
            /** Sets the location 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLocation
            (
                const NXOpen::Point3d & location /** location */ 
            );
            /**Returns  the anchor object 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::DisplayableObject * AnchorObject
            (
            );
            /**Sets  the anchor object 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAnchorObject
            (
                NXOpen::DisplayableObject * anchorObj /** anchorobj */ 
            );
            /**Returns  the pin to screen 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool PinToScreen
            (
            );
            /**Sets  the pin to screen 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPinToScreen
            (
                bool pin /** pin */ 
            );
            /**Returns  the visible 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool Visible
            (
            );
            /**Sets  the visible 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVisible
            (
                bool visible /** visible */ 
            );
            /** Gets the associated objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DisplayableObject *> GetAssociatedObjects
            (
            );
            /** Sets the associated objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociatedObjects
            (
                const std::vector<NXOpen::DisplayableObject *> & associatedObjects /** associatedobjects */ 
            );
            /**Returns  the comment 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Comment
            (
            );
            /**Sets  the comment 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetComment
            (
                const NXString & comment /** comment */ 
            );
            /**Sets  the comment 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            void SetComment
            (
                const char * comment /** comment */ 
            );
            /** Gets the leader line length 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double GetLeaderLineLength
            (
            );
            /** Sets the leader line length 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLeaderLineLength
            (
                double length /** length */ 
            );
            /** Gets the terminating objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DisplayableObject *> GetTerminatingObjects
            (
            );
            /** Sets the terminating objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTerminatingObjects
            (
                const std::vector<NXOpen::DisplayableObject *> & terminatingObjs /** terminatingobjs */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
