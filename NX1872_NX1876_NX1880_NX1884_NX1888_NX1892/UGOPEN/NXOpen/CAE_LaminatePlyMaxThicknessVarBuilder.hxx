#ifndef NXOpen_CAE_LAMINATEPLYMAXTHICKNESSVARBUILDER_HXX_INCLUDED
#define NXOpen_CAE_LAMINATEPLYMAXTHICKNESSVARBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminatePlyMaxThicknessVarBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LaminatePlyMaxThicknessVarBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _LaminatePlyMaxThicknessVarBuilderBuilder;
        class LaminatePlyMaxThicknessVarBuilderImpl;
        /** Builder used to modify the ply maximum accepted thickness variation for laminate fill  <br> To create a new instance of this class, use @link NXOpen::CAE::LaminatePly::CreateLaminatePlyMaxThicknessVarBuilder  NXOpen::CAE::LaminatePly::CreateLaminatePlyMaxThicknessVarBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LaminatePlyMaxThicknessVarBuilder : public NXOpen::Builder
        {
            private: LaminatePlyMaxThicknessVarBuilderImpl * m_laminateplymaxthicknessvarbuilder_impl;
            private: friend class  _LaminatePlyMaxThicknessVarBuilderBuilder;
            protected: LaminatePlyMaxThicknessVarBuilder();
            public: ~LaminatePlyMaxThicknessVarBuilder();
            /**Returns  the layup thickness variation limit override option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ThicknessOverride
            (
            );
            /**Sets  the layup thickness variation limit override option 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetThicknessOverride
            (
                bool thicknessOverride /** thicknessoverride */ 
            );
            /**Returns  the maximum allowed relative thickness increase variation, in percentage, for the ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double ThicknessVariationUpLimit
            (
            );
            /**Sets  the maximum allowed relative thickness increase variation, in percentage, for the ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetThicknessVariationUpLimit
            (
                double thicknessVariationUpLimit /** thicknessvariationuplimit */ 
            );
            /**Returns  the maximum allowed relative thickness reduction variation, in percentage, for the ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double ThicknessVariationDownLimit
            (
            );
            /**Sets  the maximum allowed relative thickness reduction variation, in percentage, for the ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetThicknessVariationDownLimit
            (
                double thicknessVariationDownLimit /** thicknessvariationdownlimit */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
