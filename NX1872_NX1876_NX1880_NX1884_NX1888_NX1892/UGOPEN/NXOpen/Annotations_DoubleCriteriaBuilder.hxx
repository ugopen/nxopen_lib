#ifndef NXOpen_ANNOTATIONS_DOUBLECRITERIABUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DOUBLECRITERIABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DoubleCriteriaBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class DoubleCriteriaBuilder;
    }
    class Builder;
    namespace Annotations
    {
        class _DoubleCriteriaBuilderBuilder;
        class DoubleCriteriaBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link NXOpen::Annotations::DoubleCriteriaBuilder NXOpen::Annotations::DoubleCriteriaBuilder@endlink 
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Criteria </td> <td> 
         
        Any </td> </tr> 

        <tr><td> 
         
        MaxValue </td> <td> 
         
        1.0e19 </td> </tr> 

        <tr><td> 
         
        MinValue </td> <td> 
         
        1.0e-19 </td> </tr> 

        <tr><td> 
         
        Value </td> <td> 
         
        0.0 </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  DoubleCriteriaBuilder : public NXOpen::Builder
        {
            /** filtering criteria options. */
            public: enum FilterCriteria
            {
                FilterCriteriaAny/** any */ ,
                FilterCriteriaEqual/** equal */ ,
                FilterCriteriaLessThan/** less than */ ,
                FilterCriteriaLessThanEqual/** less than equal */ ,
                FilterCriteriaGreaterThan/** greater than */ ,
                FilterCriteriaGreaterThanEqual/** greater than equal */ ,
                FilterCriteriaBetween/** between */ 
            };

            private: DoubleCriteriaBuilderImpl * m_doublecriteriabuilder_impl;
            private: friend class  _DoubleCriteriaBuilderBuilder;
            protected: DoubleCriteriaBuilder();
            public: ~DoubleCriteriaBuilder();
            /**Returns  the filtering criteria 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::DoubleCriteriaBuilder::FilterCriteria Criteria
            (
            );
            /**Sets  the filtering criteria 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCriteria
            (
                NXOpen::Annotations::DoubleCriteriaBuilder::FilterCriteria criteria /** criteria */ 
            );
            /**Returns  the value for filtering 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double Value
            (
            );
            /**Sets  the value for filtering 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetValue
            (
                double filterValue /** filtervalue */ 
            );
            /**Returns  the minimum value when filtering criteria is In Between 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double MinValue
            (
            );
            /**Sets  the minimum value when filtering criteria is In Between 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMinValue
            (
                double filterValue /** filtervalue */ 
            );
            /**Returns  the maximum value when filtering criteria is In Between 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxValue
            (
            );
            /**Sets  the maximum value when filtering criteria is In Between 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMaxValue
            (
                double filterValue /** filtervalue */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
