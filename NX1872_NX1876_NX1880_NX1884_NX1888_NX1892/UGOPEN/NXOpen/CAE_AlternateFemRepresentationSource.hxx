#ifndef NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCE_HXX_INCLUDED
#define NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AlternateFemRepresentationSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectionRecipe.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AlternateFemRepresentationSource;
    }
    class BasePropertyTable;
    namespace CAE
    {
        class FEModelOccurrence;
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    namespace CAE
    {
        class _AlternateFemRepresentationSourceBuilder;
        class AlternateFemRepresentationSourceImpl;
        /**  @brief  This is the class representing a Alternate Fem Representation Source.  

           <br> Not support KF.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AlternateFemRepresentationSource : public NXOpen::TaggedObject
        {
            /** Create mesh options */
            public: enum CreateMeshMode
            {
                CreateMeshModeAllElements/** create all elements */,
                CreateMeshModeDataElements/** create data elements */,
                CreateMeshModeVisualizationElements/** create visualization elements only */
            };

             /** The structure for a {name, label} pair */
            public:
            struct NameLabelPair
            {
                public: /** the name */NXString Name;
                public: /** the node label */int Label;
                public: NameLabelPair() :
                    Name(),
                    Label()
                {
                }
                /** Constructor for the NameLabelPair struct. */ 
                public: NameLabelPair(const NXString &nameInitial /** the name */, 
                        int labelInitial /** the node label */) :
                    Name(nameInitial),
                    Label(labelInitial)
                {
                }
            };

             /** The structure for a {name, identifier} pair */
            public:
            struct NameIdentifierPair
            {
                public: /** the name */NXString Name;
                public: /** the node string identifier */NXString Identifier;
                public: NameIdentifierPair() :
                    Name(),
                    Identifier()
                {
                }
                /** Constructor for the NameIdentifierPair struct. */ 
                public: NameIdentifierPair(const NXString &nameInitial /** the name */, 
                        const NXString &identifierInitial /** the node string identifier */) :
                    Name(nameInitial),
                    Identifier(identifierInitial)
                {
                }
            };

            private: AlternateFemRepresentationSourceImpl * m_alternatefemrepresentationsource_impl;
            private: friend class  _AlternateFemRepresentationSourceBuilder;
            protected: AlternateFemRepresentationSource();
            public: ~AlternateFemRepresentationSource();
            /** Set the name of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Rename
            (
                const NXString & name /** Name of the Alternate Fem Representation Source. */
            );
            /** Set the name of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void Rename
            (
                const char * name /** Name of the Alternate Fem Representation Source. */
            );
            /** Force update of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ForceUpdate
            (
            );
            /** Returns true if the given Alternate Fem Representation Source has node string 
                        identifiers to labels mappings, i.e. if the nodes are identified by strings instead of labels  @return  True if FEM Data Set has node string identifiers to labels mappings 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool HasNodeIdMappings
            (
            );
            /** Gets the mappings between a node string identifier and the correspondig node label. 
                         Available only when the Alternate Fem Representation Source has such mappings. @return  the mappings 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::AlternateFemRepresentationSource::NameLabelPair> GetNodeIdMappings
            (
            );
            /** Adds or replaces a named node in an Alternate Fem Representation Source having no mappings.
                        The recipeNameString can be obtained by the GetName() method
                        of the @link CAE::SelectionRecipe CAE::SelectionRecipe@endlink  class 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void InsertNamedNodeWithLabel
            (
                const NXString & recipeNameString /** Recipe name */,
                int nodeLabel /** Label of the named node */
            );
            /** Adds or replaces a named node in an Alternate Fem Representation Source having no mappings.
                        The recipeNameString can be obtained by the GetName() method
                        of the @link CAE::SelectionRecipe CAE::SelectionRecipe@endlink  class 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void InsertNamedNodeWithLabel
            (
                const char * recipeNameString /** Recipe name */,
                int nodeLabel /** Label of the named node */
            );
            /** Adds or replaces a named node in an Alternate Fem Representation Source having mappings.
                        The recipeNameString can be obtained by the GetName() method
                        of the @link CAE::SelectionRecipe CAE::SelectionRecipe@endlink  class 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void InsertNamedNodeWithNodeId
            (
                const NXString & recipeNameString /** Recipe name */,
                const NXString & nodeIDString /** The node string identifier. Must be in the node string identifiers to labels mappings */
            );
            /** Adds or replaces a named node in an Alternate Fem Representation Source having mappings.
                        The recipeNameString can be obtained by the GetName() method
                        of the @link CAE::SelectionRecipe CAE::SelectionRecipe@endlink  class 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void InsertNamedNodeWithNodeId
            (
                const char * recipeNameString /** Recipe name */,
                const char * nodeIDString /** The node string identifier. Must be in the node string identifiers to labels mappings */
            );
            /** Clears all the named nodes of an Alternate Fem Representation Source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ClearNamedNodes
            (
            );
            /** Gets the Finite Element Model Occurrences
                        replaced by the Alternate Fem Representation Source  @return  The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  array
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::FEModelOccurrence *> GetReplacedFeModelOccs
            (
            );
            /** Adds or replaces a @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  for the given replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink 
                        in an Alternate Fem Representation Source having mappings 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void InsertSelectionRecipeMappingWithNodeId
            (
                NXOpen::CAE::FEModelOccurrence * feModelOccTag /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink */,
                NXOpen::CAE::SelectionRecipe * pSelectionRecipe /** The @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  */,
                const NXString & nodeIDString /** The node string identifier. Must be in the node string identifiers to labels mappings */
            );
            /** Adds or replaces a @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  for the given replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink 
                        in an Alternate Fem Representation Source having mappings 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void InsertSelectionRecipeMappingWithNodeId
            (
                NXOpen::CAE::FEModelOccurrence * feModelOccTag /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink */,
                NXOpen::CAE::SelectionRecipe * pSelectionRecipe /** The @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  */,
                const char * nodeIDString /** The node string identifier. Must be in the node string identifiers to labels mappings */
            );
            /** Adds or replaces a @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  for the given replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink 
                         in an Alternate Fem Representation Source without mappings 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void InsertSelectionRecipeMappingWithLabel
            (
                NXOpen::CAE::FEModelOccurrence * feModelOccTag /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  */,
                NXOpen::CAE::SelectionRecipe * pSelectionRecipe /** The @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  */,
                int nodeLabel /** The node label */
            );
            /** Removes a @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  for the given replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  
                         from the Alternate Fem Representation Source 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveSelectionRecipeMapping
            (
                NXOpen::CAE::FEModelOccurrence * feModelOccTag /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  */,
                NXOpen::CAE::SelectionRecipe * pSelectionRecipe /** The @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  */
            );
            /** Gets the mapped @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  array in an Alternate Fem Representation Source 
                         for the given @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink   @return  The mapped @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  array 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::SelectionRecipe *> GetMappedSelectionRecipes
            (
                NXOpen::CAE::FEModelOccurrence * feModelOccTag /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  */
            );
            /** Gets the @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  array in an Alternate Fem Representation Source 
                        and the corresponding replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  array 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetAltRepSelectionRecipes
            (
                std::vector<NXOpen::CAE::FEModelOccurrence *> & pptFeModelOccTags /** The replaced @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  array*/,
                std::vector<NXOpen::CAE::SelectionRecipe *> & pppSelectionRecipe /** The @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink  array */
            );
            /** Gets the named nodes in an Alternate Fem Representation Source having mappings  @return  the named nodes 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::AlternateFemRepresentationSource::NameIdentifierPair> GetNamedNodesWithNodeId
            (
            );
            /** Gets the named nodes in an Alternate Fem Representation Source having no mappings  @return  the named nodes 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::AlternateFemRepresentationSource::NameLabelPair> GetNamedNodesWithLabel
            (
            );
            /**Returns  the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  of the Alternate Fem Representation Source.
                        Not all Alternate Fem Representation Sources do have property table 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::BasePropertyTable * PropertyTable
            (
            );
            /** Shows in the info window the information about the Alternate Fem Representation Source.
                        If the showWarnings flag is true, warnings are also shown 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Information
            (
                bool showWarnings /** if true, show also the warnings */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
