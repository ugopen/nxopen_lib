#ifndef NXOpen_CAM_PATHLEVELMARKER_HXX_INCLUDED
#define NXOpen_CAM_PATHLEVELMARKER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PathLevelMarker.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_PathData.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PathLevelMarker;
    }
    namespace CAM
    {
        class PathLevelMarkerImpl;
        /** This class represents the data of a Linear Motion
         <br>  Created in NX10.0.3.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PathLevelMarker : public NXOpen::TransientObject
        {
            private: PathLevelMarkerImpl * m_pathlevelmarker_impl;
            /// \cond NX_NO_DOC 
            public: explicit PathLevelMarker(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: virtual ~PathLevelMarker();
            /**Returns  the level normal 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d LevelNormal
            (
            );
            /**Sets  the level normal 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: void SetLevelNormal
            (
                const NXOpen::Vector3d & levelNormal /** levelnormal */ 
            );
            /**Returns  the level depth 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: double LevelDepth
            (
            );
            /**Sets  the level depth 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: void SetLevelDepth
            (
                double levelDepth /** leveldepth */ 
            );
            /**Returns  the level number 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: int LevelNumber
            (
            );
            /**Sets  the level number 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: void SetLevelNumber
            (
                int levelnumber /** levelnumber */ 
            );
            /**Returns  the operation name 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: NXString OperationName
            (
            );
            /**Sets  the operation name 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: void SetOperationName
            (
                const NXString & operName /** opername */ 
            );
            /**Sets  the operation name 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            void SetOperationName
            (
                const char * operName /** opername */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
