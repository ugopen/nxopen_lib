#ifndef NXOpen_ANNOTATIONS_LOCATORDESIGNATORBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_LOCATORDESIGNATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_LocatorDesignatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_PmiAttributeBuilder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class LocatorDesignatorBuilder;
    }
    namespace Annotations
    {
        class PmiAttributeBuilder;
    }
    class Direction;
    class Point;
    namespace Annotations
    {
        class _LocatorDesignatorBuilderBuilder;
        class LocatorDesignatorBuilderImpl;
        /** Represents a @link NXOpen::Annotations::LocatorDesignator NXOpen::Annotations::LocatorDesignator@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Annotations::PmiAttributeCollection::CreateLocatorDesignatorBuilder  NXOpen::Annotations::PmiAttributeCollection::CreateLocatorDesignatorBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  LocatorDesignatorBuilder : public NXOpen::Annotations::PmiAttributeBuilder
        {
            private: LocatorDesignatorBuilderImpl * m_locatordesignatorbuilder_impl;
            private: friend class  _LocatorDesignatorBuilderBuilder;
            protected: LocatorDesignatorBuilder();
            public: ~LocatorDesignatorBuilder();
            /**Returns  the punch direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * PunchDirection
            (
            );
            /**Sets  the punch direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPunchDirection
            (
                NXOpen::Direction * punchDirection /** punchdirection */ 
            );
            /**Returns  the pin direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * PinDirection
            (
            );
            /**Sets  the pin direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPinDirection
            (
                NXOpen::Direction * pinDirection /** pindirection */ 
            );
            /**Returns  the normal direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * NormalDirection
            (
            );
            /**Sets  the normal direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNormalDirection
            (
                NXOpen::Direction * normalDirection /** normaldirection */ 
            );
            /**Returns  the hot spot 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * HotSpot
            (
            );
            /**Sets  the hot spot 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHotSpot
            (
                NXOpen::Point * hotSpot /** hotspot */ 
            );
            /**Returns  the str title 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the str title 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Sets  the str title 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetTitle
            (
                const char * title /** title */ 
            );
            /**Returns  the locatortype 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LocatorType
            (
            );
            /**Sets  the locatortype 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLocatorType
            (
                const NXString & locatorType /** locatortype */ 
            );
            /**Sets  the locatortype 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetLocatorType
            (
                const char * locatorType /** locatortype */ 
            );
            /**Returns  the locatorletter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LocatorLetter
            (
            );
            /**Sets  the locatorletter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLocatorLetter
            (
                const NXString & locatorLetter /** locatorletter */ 
            );
            /**Sets  the locatorletter 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetLocatorLetter
            (
                const char * locatorLetter /** locatorletter */ 
            );
            /**Returns  the coordinateplane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CoordinatePlane
            (
            );
            /**Sets  the coordinateplane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCoordinatePlane
            (
                const NXString & coordinatePlane /** coordinateplane */ 
            );
            /**Sets  the coordinateplane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetCoordinatePlane
            (
                const char * coordinatePlane /** coordinateplane */ 
            );
            /**Returns  the notetext 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NoteText
            (
            );
            /**Sets  the notetext 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNoteText
            (
                const NXString & noteText /** notetext */ 
            );
            /**Sets  the notetext 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetNoteText
            (
                const char * noteText /** notetext */ 
            );
            /**Returns  the subscript 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Subscript
            (
            );
            /**Sets  the subscript 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSubscript
            (
                const NXString & subscript /** subscript */ 
            );
            /**Sets  the subscript 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetSubscript
            (
                const char * subscript /** subscript */ 
            );
            /**Returns  the hot spot text 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString HotSpotText
            (
            );
            /**Sets  the hot spot text 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHotSpotText
            (
                const NXString & hotSpotText /** hotspottext */ 
            );
            /**Sets  the hot spot text 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetHotSpotText
            (
                const char * hotSpotText /** hotspottext */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
