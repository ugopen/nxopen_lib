#ifndef NXOpen_AME_MANAGEINTERRUPTIONPOINTSBUILDER_HXX_INCLUDED
#define NXOpen_AME_MANAGEINTERRUPTIONPOINTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ManageInterruptionPointsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PageObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ManageInterruptionPointsBuilder;
    }
    namespace AME
    {
        class PageObject;
    }
    class Builder;
    namespace AME
    {
        class _ManageInterruptionPointsBuilderBuilder;
        class ManageInterruptionPointsBuilderImpl;
        /** JA class for the Manage Interruption Points builder <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateManageInterruptionPointsBuilder  NXOpen::AME::AMEManager::CreateManageInterruptionPointsBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ActionType </td> <td> 
         
        Link </td> </tr> 

        </table>  

         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ManageInterruptionPointsBuilder : public NXOpen::Builder
        {
            /** The types of managing interruption points actions.*/
            public: enum ActionTypes
            {
                ActionTypesLink/** link */ ,
                ActionTypesUnlink/** unlink */ ,
                ActionTypesUnlinkAutolinked/** unlink autolinked */ 
            };

            private: ManageInterruptionPointsBuilderImpl * m_manageinterruptionpointsbuilder_impl;
            private: friend class  _ManageInterruptionPointsBuilderBuilder;
            protected: ManageInterruptionPointsBuilder();
            public: ~ManageInterruptionPointsBuilder();
            /**Returns  the action type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ManageInterruptionPointsBuilder::ActionTypes ActionType
            (
            );
            /**Sets  the action type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetActionType
            (
                NXOpen::AME::ManageInterruptionPointsBuilder::ActionTypes actionType /** actiontype */ 
            );
            /** Set the pages on which interruption points will be linked to builder.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPages
            (
                const std::vector<NXOpen::AME::PageObject *> & pages /** pages */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
