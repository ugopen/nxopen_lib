#ifndef NXOpen_CAM_AVOIDANCEMETHODSBUILDER_HXX_INCLUDED
#define NXOpen_CAM_AVOIDANCEMETHODSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_AvoidanceMethodsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BaseBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class AvoidanceMethodsBuilder;
    }
    namespace CAM
    {
        class BaseBuilder;
    }
    namespace CAM
    {
        class _AvoidanceMethodsBuilderBuilder;
        class AvoidanceMethodsBuilderImpl;
        /**Represents an avoidance methods builder
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  AvoidanceMethodsBuilder : public NXOpen::CAM::BaseBuilder
        {
            /** Enum of Avoidance Meethod Types */
            public: enum JaOperationAvoidanceMethodType
            {
                JaOperationAvoidanceMethodTypeNone/** Avoidance method: none */,
                JaOperationAvoidanceMethodTypeRetract/** Avoidance method: retract */,
                JaOperationAvoidanceMethodTypeTilt/** Avoidance method: tilt/retract */,
                JaOperationAvoidanceMethodTypeWarning/** Avoidance method: warning */,
                JaOperationAvoidanceMethodTypeStop/** Avoidance method: stop */,
                JaOperationAvoidanceMethodTypeTiltstop/** Avoidance method: tilt/stop */
            };

            private: AvoidanceMethodsBuilderImpl * m_avoidancemethodsbuilder_impl;
            private: friend class  _AvoidanceMethodsBuilderBuilder;
            protected: AvoidanceMethodsBuilder();
            public: ~AvoidanceMethodsBuilder();
            /**Returns  the avoidance method used for common block 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::AvoidanceMethodsBuilder::JaOperationAvoidanceMethodType AvoidanceMethod
            (
            );
            /**Sets  the avoidance method used for common block 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAvoidanceMethod
            (
                NXOpen::CAM::AvoidanceMethodsBuilder::JaOperationAvoidanceMethodType avoidanceMethodType /** the avoidance method value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
