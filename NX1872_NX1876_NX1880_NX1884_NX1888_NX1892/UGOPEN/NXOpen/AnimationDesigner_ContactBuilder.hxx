#ifndef NXOpen_ANIMATIONDESIGNER_CONTACTBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_CONTACTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_ContactBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class ContactBuilder;
    }
    class Builder;
    class NXObject;
    class SelectNXObjectList;
    namespace AnimationDesigner
    {
        class _ContactBuilderBuilder;
        class ContactBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::ContactBuilder NXOpen::AnimationDesigner::ContactBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::ContactCollection::CreateContactBuilder  NXOpen::AnimationDesigner::ContactCollection::CreateContactBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  ContactBuilder : public NXOpen::Builder
        {
            private: ContactBuilderImpl * m_contactbuilder_impl;
            private: friend class  _ContactBuilderBuilder;
            protected: ContactBuilder();
            public: ~ContactBuilder();
            /**Returns  the geometries. This can be a @link NXOpen::Assemblies::ComponentAssembly NXOpen::Assemblies::ComponentAssembly@endlink ,
                        @link NXOpen::Point NXOpen::Point@endlink , @link NXOpen::Face NXOpen::Face@endlink ,
                        @link NXOpen::Edge NXOpen::Edge@endlink , bodies and curves. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::SelectNXObjectList * Geometry
            (
            );
            /** Sets the geometry 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetGeometry
            (
                const std::vector<NXOpen::NXObject *> & geometries /** Input geometries */
            );
            /**Returns  the name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
