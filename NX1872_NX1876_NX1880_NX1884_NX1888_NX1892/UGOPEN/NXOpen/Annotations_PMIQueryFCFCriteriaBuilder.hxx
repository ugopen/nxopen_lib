#ifndef NXOpen_ANNOTATIONS_PMIQUERYFCFCRITERIABUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIQUERYFCFCRITERIABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PMIQueryFCFCriteriaBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DoubleCriteriaBuilder.hxx>
#include <NXOpen/Annotations_StringCriteriaBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PMIQueryFCFCriteriaBuilder;
    }
    namespace Annotations
    {
        class DoubleCriteriaBuilder;
    }
    namespace Annotations
    {
        class StringCriteriaBuilder;
    }
    class Builder;
    namespace Annotations
    {
        class _PMIQueryFCFCriteriaBuilderBuilder;
        class PMIQueryFCFCriteriaBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link NXOpen::Annotations::PMIQueryFCFCriteriaBuilder NXOpen::Annotations::PMIQueryFCFCriteriaBuilder@endlink 
             <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PMIQueryFCFCriteriaBuilder : public NXOpen::Builder
        {
            /** PMI FCF  types characteristic for query */
            public: enum FcfType
            {
                FcfTypeDefault/** default */ = -1,
                FcfTypeStraightness/** straightness */,
                FcfTypeFlatness/** flatness */,
                FcfTypeCircular/** circular */,
                FcfTypeCylindrical/** cylindrical */,
                FcfTypeLineProfile/** line profile */,
                FcfTypeSurfaceProfile/** surface profile */,
                FcfTypeAngular/** angular */,
                FcfTypePerpendicular/** perpendicular */,
                FcfTypeParallel/** parallel */,
                FcfTypeAxisIntersection/** axis intersection */,
                FcfTypePosition/** position */,
                FcfTypeConcentric/** concentric */,
                FcfTypeSymmetric/** symmetric */,
                FcfTypeCircularRunout/** circular runout */,
                FcfTypeTotalRunout/** total runout */
            };

            private: PMIQueryFCFCriteriaBuilderImpl * m_pmiqueryfcfcriteriabuilder_impl;
            private: friend class  _PMIQueryFCFCriteriaBuilderBuilder;
            protected: PMIQueryFCFCriteriaBuilder();
            public: ~PMIQueryFCFCriteriaBuilder();
            /** Sets PMI FCF characteristic types to be enabled for query 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void EnableCharacteristics
            (
                const std::vector<NXOpen::Annotations::PMIQueryFCFCriteriaBuilder::FcfType> & types /** types */ 
            );
            /** Sets PMI FCF characteristic types to be disabled for query 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void DisableCharacteristics
            (
                const std::vector<NXOpen::Annotations::PMIQueryFCFCriteriaBuilder::FcfType> & types /** types */ 
            );
            /** The @link NXOpen::Annotations::StringCriteriaBuilder NXOpen::Annotations::StringCriteriaBuilder@endlink  for datum letter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StringCriteriaBuilder * GetDatumLetter
            (
            );
            /** The @link NXOpen::Annotations::DoubleCriteriaBuilder NXOpen::Annotations::DoubleCriteriaBuilder@endlink  for tolerance value 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::DoubleCriteriaBuilder * GetToleranceValue
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
