#ifndef NXOpen_CAM_PATHMARKER_HXX_INCLUDED
#define NXOpen_CAM_PATHMARKER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PathMarker.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_PathData.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PathMarker;
    }
    namespace CAM
    {
        class PatternMarker;
    }
    namespace CAM
    {
        class RegionMarker;
    }
    namespace CAM
    {
        class PathMarkerImpl;
        /** This class represents the data of a path marker
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PathMarker : public NXOpen::TransientObject
        {
            /** path marker types*/
            public: enum Type
            {
                TypeSystem/** system */ ,
                TypePattern/** pattern */ ,
                TypeRegion/** region */ 
            };

            private: PathMarkerImpl * m_pathmarker_impl;
            /// \cond NX_NO_DOC 
            public: explicit PathMarker(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: virtual ~PathMarker();
            /**Returns  the marker type
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PathMarker::Type MarkerType
            (
            );
            /**Returns  the pattern marker 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PatternMarker * PatternMarker
            (
            );
            /**Returns  the region marker 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::RegionMarker * RegionMarker
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
