#ifndef NXOpen_CAE_CORRELBASESOLUTION_HXX_INCLUDED
#define NXOpen_CAE_CORRELBASESOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CorrelBaseSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ISensorSet.hxx>
#include <NXOpen/CAE_SensorSetMgr.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CorrelBaseSolution;
    }
    namespace CAE
    {
        class ISensorSet;
    }
    namespace CAE
    {
        class SensorSetMgr;
    }
    namespace CAE
    {
        class SimSolution;
    }
    class NXObject;
    namespace CAE
    {
        class _CorrelBaseSolutionBuilder;
        class CorrelBaseSolutionImpl;
        /** Represents a @link NXOpen::CAE::CorrelBaseSolution NXOpen::CAE::CorrelBaseSolution@endlink , which is a meta-solution used to compare results from two structural dynamics solutions  <br> To create or edit an instance of this class, use @link NXOpen::CAE::CorrelSolutionBuilder  NXOpen::CAE::CorrelSolutionBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CorrelBaseSolution : public NXOpen::NXObject
        {
            private: CorrelBaseSolutionImpl * m_correlbasesolution_impl;
            private: friend class  _CorrelBaseSolutionBuilder;
            protected: CorrelBaseSolution();
            public: ~CorrelBaseSolution();
            /** Returns the correlation base solution name  @return  the @link NXOpen::CAE::CorrelBaseSolution NXOpen::CAE::CorrelBaseSolution@endlink   name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetName
            (
            );
            /** Sets the correlation base solution name
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetName
            (
                const NXString & solutionName /** new solution name */,
                bool renameResultFile /** if there are result files associated with the solution, rename the files or not*/
            );
            /** Sets the correlation base solution name
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void SetName
            (
                const char * solutionName /** new solution name */,
                bool renameResultFile /** if there are result files associated with the solution, rename the files or not*/
            );
            /** Deletes a correlation base solution 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void Delete
            (
                bool deleteResultFile /** delete the result files associated with the solution or not */
            );
            /** Generate dof set 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void GenerateDofSet
            (
            );
            /** Create dof set from sensor set 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void CreateDofSet
            (
                NXOpen::CAE::ISensorSet * sensorSet /** sensorset */ ,
                bool modifyNodeDisplacementCsys /** modifynodedisplacementcsys */ 
            );
            /** Update correlation base solution node matchings 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void UpdateNodeMap
            (
            );
            /** Update results for solution 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void UpdateResultsForSol
            (
                NXOpen::CAE::SimSolution * sol /** sol */ ,
                bool ignoreReload /** ignorereload */ 
            );
            /** Show node map information. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ShowNodeMapInfo
            (
            );
            /** Import node map CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ImportNodeMapFromCsvFile
            (
                const NXString & filename /** CSV file name. */
            );
            /** Import node map CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void ImportNodeMapFromCsvFile
            (
                const char * filename /** CSV file name. */
            );
            /** Export node map to CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ExportNodeMapToCsvFile
            (
                const NXString & filename /** CSV file name. */
            );
            /** Export node map to CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            void ExportNodeMapToCsvFile
            (
                const char * filename /** CSV file name. */
            );
            /** Lock the node map. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void NodeMapLock
            (
            );
            /** Unlock the node map. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void NodeMapUnlock
            (
            );
            /** Show information. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ShowInfo
            (
            );
            /** Get the sensor set manager 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SensorSetMgr * GetSensorSetMgr
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
