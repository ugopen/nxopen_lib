#ifndef NXOpen_CAE_FTK_EXPORTFILESPARAMETER_HXX_INCLUDED
#define NXOpen_CAE_FTK_EXPORTFILESPARAMETER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_ExportFilesParameter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_NumberFormat.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class ExportFilesParameter;
        }
    }
    namespace CAE
    {
        class NumberFormat;
    }
    namespace CAE
    {
        namespace FTK
        {
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ExportFilesParameterImpl;
            /** Represents the parameter settings for exporting data to external files.  <br> This is an abstract class  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ExportFilesParameter : public NXOpen::TransientObject
            {
                /** Defines the expor behavior when file is exist */
                public: enum OverrideOption
                {
                    OverrideOptionRename/** Rename the file name with number postfix, like A -> A1 */,
                    OverrideOptionAppend/** Append data to the end of the given file */,
                    OverrideOptionReplace/** Replace the whole data in the given file */,
                    OverrideOptionSkip/** Skip to write data */
                };

                private: ExportFilesParameterImpl * m_exportfilesparameter_impl;
                /// \cond NX_NO_DOC 
                public: explicit ExportFilesParameter(void *ptr);
                /// \endcond 
                /**Returns  the number format options.
                            
                            The NumberFormat object will be deleted along with the file parameter object.
                            
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::NumberFormat * NumberFormat
                (
                );
                /**Returns  the header print required 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsHeaderExportRequired
                (
                );
                /**Sets  the header print required 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetHeaderExportRequired
                (
                    bool hasHeader /** hasheader */ 
                );
                /** Gets the external files for export 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetFileNames
                (
                );
                /** Sets the external files for export 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetFileNames
                (
                    std::vector<NXString> & fileNames /** filenames */ 
                );
                /** Destroys the object 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~ExportFilesParameter();
                /**Returns  the file override option 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::ExportFilesParameter::OverrideOption OverrideSetting
                (
                );
                /**Sets  the file override option 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetOverrideSetting
                (
                    NXOpen::CAE::FTK::ExportFilesParameter::OverrideOption overrideOption /** overrideoption */ 
                );
                /** Gets the custom record names for export 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetCustomRecordNames
                (
                );
                /** Sets the custom record names for export 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetCustomRecordNames
                (
                    std::vector<NXString> & customRecordNames /** customrecordnames */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
