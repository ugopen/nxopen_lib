#ifndef NXOpen_DIE_STEELINSERTSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_DIE_STEELINSERTSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_SteelInsertSectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class SteelInsertSectionBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Die
    {
        class _SteelInsertSectionBuilderBuilder;
        class SteelInsertSectionBuilderImpl;
        /** Represents a Steel Insert Section sub feature.  <br> This sub feature is created via the main feature builder.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  SteelInsertSectionBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Settings for the extension type. */
            public: enum ExtensionTypeOption
            {
                ExtensionTypeOptionConstant/** constant */,
                ExtensionTypeOptionMaxdistPlusConst/** maximum distance + constant */,
                ExtensionTypeOptionLaw/** law */
            };

            private: SteelInsertSectionBuilderImpl * m_steelinsertsectionbuilder_impl;
            private: friend class  _SteelInsertSectionBuilderBuilder;
            protected: SteelInsertSectionBuilder();
            public: ~SteelInsertSectionBuilder();
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackSideReliefDistance
            (
                const NXString & backSideReliefDistance /** back side relief distance */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetBackSideReliefDistance
            (
                const char * backSideReliefDistance /** back side relief distance */ 
            );
            /**Returns  the back/side relief distance of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * BackSideReliefDistance
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProductContactWidth
            (
                const NXString & productContactWidth /** product contact width */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetProductContactWidth
            (
                const char * productContactWidth /** product contact width */ 
            );
            /**Returns  the product contact width of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProductContactWidth
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProductContactRelief
            (
                const NXString & productContactRelief /** product contact relief */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetProductContactRelief
            (
                const char * productContactRelief /** product contact relief */ 
            );
            /**Returns  the product contact relief of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProductContactRelief
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPlanarOffsetHeight
            (
                const NXString & planarOffsetHeight /** planar offset height */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetPlanarOffsetHeight
            (
                const char * planarOffsetHeight /** planar offset height */ 
            );
            /**Returns  the planar contact height of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * PlanarOffsetHeight
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOffsetProfileToTop
            (
                const NXString & offsetProfileToTop /** offset profile to top */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetOffsetProfileToTop
            (
                const char * offsetProfileToTop /** offset profile to top */ 
            );
            /**Returns  the offset of the profile to the top of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * OffsetProfileToTop
            (
            );
            /**Sets  the mass limit of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetMassLimit
            (
                double massLimit /** mass limit */ 
            );
            /**Returns  the mass limit of the steel insert casting 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double MassLimit
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBeltThickness
            (
                const NXString & beltThickness /** belt thickness */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetBeltThickness
            (
                const char * beltThickness /** belt thickness */ 
            );
            /**Returns  the belt thickness 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * BeltThickness
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReliefAngle
            (
                const NXString & reliefAngle /** relief angle */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetReliefAngle
            (
                const char * reliefAngle /** relief angle */ 
            );
            /**Returns  the relief angle 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ReliefAngle
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProfileRelief
            (
                const NXString & profileRelief /** profile relief */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetProfileRelief
            (
                const char * profileRelief /** profile relief */ 
            );
            /**Returns  the profile relief 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProfileRelief
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetExtensionDistance
            (
                const NXString & extensionDistance /** extension distance */ 
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetExtensionDistance
            (
                const char * extensionDistance /** extension distance */ 
            );
            /**Returns  the extension distance 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ExtensionDistance
            (
            );
            /**Sets  the extension type 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetExtensionType
            (
                NXOpen::Die::SteelInsertSectionBuilder::ExtensionTypeOption extensionType /** extension type */ 
            );
            /**Returns  the extension type 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::SteelInsertSectionBuilder::ExtensionTypeOption ExtensionType
            (
            );
            /** Gets the forming faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetFormingAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of forming faces */
            );
            /** Sets the forming faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetFormingAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of forming faces */
            );
            /** Sets the forming faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetFormingAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of forming faces */
            );
            /** Gets the steelinsert trim wall faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetTrimWallAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of trim wall faces */
            );
            /** Sets the steelinsert trim wall faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetTrimWallAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of trim wall faces */
            );
            /** Sets the steelinsert trim wall faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetTrimWallAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of trim wall faces */
            );
            /** Gets the flange wall attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetFlangeWallAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of flange wall faces */
            );
            /** Sets the flange wall attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetFlangeWallAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of flange wall faces */
            );
            /** Sets the flange wall attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetFlangeWallAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of flange wall faces */
            );
            /** Gets the end faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetEndAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of end faces */
            );
            /** Sets the end faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetEndAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of end faces */
            );
            /** Sets the end faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetEndAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of end faces */
            );
            /** Gets the back faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetBackAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of back faces */
            );
            /** Sets the back faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of back faces */
            );
            /** Sets the back faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetBackAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of back faces */
            );
            /** Gets the base faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetBaseAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of base faces */
            );
            /** Sets the base faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBaseAttributes
            (
                const NXString & title /** title for attribute */,
                const NXString & value /** value of attribute */,
                int color /** color of base faces */
            );
            /** Sets the base faces attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetBaseAttributes
            (
                const char * title /** title for attribute */,
                const char * value /** value of attribute */,
                int color /** color of base faces */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
