#ifndef NXOpen_MARKUP_FREEHAND_HXX_INCLUDED
#define NXOpen_MARKUP_FREEHAND_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Markup_Freehand.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Markup_Polyline.hxx>
#include <NXOpen/libnxopencpp_markup_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Markup
    {
        class Freehand;
    }
    namespace Markup
    {
        class Polyline;
    }
    namespace Markup
    {
        class _FreehandBuilder;
        class FreehandImpl;

        /// \cond NX_NO_DOC 
        /**
                Represents a @link NXOpen::Markup::Freehand NXOpen::Markup::Freehand@endlink 
             <br> To create a new instance of this class, use @link NXOpen::Markup::AnnotationCollection::CreateFreehand  NXOpen::Markup::AnnotationCollection::CreateFreehand @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MARKUPEXPORT  Freehand : public NXOpen::Markup::Polyline
        {
            private: FreehandImpl * m_freehand_impl;
            private: friend class  _FreehandBuilder;
            protected: Freehand();
            public: ~Freehand();
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
