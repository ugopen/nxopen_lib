#ifndef NXOpen_MFGMODEL_MFGMODELMANAGER_HXX_INCLUDED
#define NXOpen_MFGMODEL_MFGMODELMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MfgModel_MfgModelManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libmfgmodelopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MfgModel
    {
        class MfgModelManager;
    }
    class INXObject;
    class NXObject;
    namespace MfgModel
    {
        class _MfgModelManagerBuilder;
        class MfgModelManagerImpl;

        /// \cond NX_NO_DOC 
        /**
                Represents the manager for Mfg model
             <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class MFGMODELOPENCPPEXPORT  MfgModelManager : public NXOpen::NXObject
        {
            private: MfgModelManagerImpl * m_mfgmodelmanager_impl;
            private: friend class  _MfgModelManagerBuilder;
            protected: MfgModelManager();
            public: ~MfgModelManager();
            /** Finds the BOP Model Objects with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  IPA found, or null if no such IPA exists.
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::INXObject * FindObject
            (
                const NXString & journalIdentifier /** Name of the IPA to be found */
            );
            /** Finds the BOP Model Objects with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  IPA found, or null if no such IPA exists.
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            NXOpen::INXObject * FindObject
            (
                const char * journalIdentifier /** Name of the IPA to be found */
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
