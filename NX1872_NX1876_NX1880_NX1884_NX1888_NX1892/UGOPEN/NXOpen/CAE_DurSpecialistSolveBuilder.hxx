#ifndef NXOpen_CAE_DURSPECIALISTSOLVEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTSOLVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistSolveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistSolverParameterTable.hxx>
#include <NXOpen/CAE_DurSpecialistSolverProfile.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistSolveBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistSolverParameterTable;
    }
    namespace CAE
    {
        class DurSpecialistSolverProfile;
    }
    namespace CAE
    {
        class _DurSpecialistSolveBuilderBuilder;
        class DurSpecialistSolveBuilderImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistSolveBuilder NXOpen::CAE::DurSpecialistSolveBuilder@endlink    <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistManager::CreateSolveBuilder  NXOpen::CAE::DurSpecialistManager::CreateSolveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FunctionResultsOnly </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ModelCheck </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SubmitOptions </td> <td> 
         
        Solve </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistSolveBuilder : public NXOpen::Builder
        {
            /** the submit options enum.*/
            public: enum SubmitOptionsEnum
            {
                SubmitOptionsEnumSolve/** Solve */,
                SubmitOptionsEnumWriteSolverInputFile/** Write Solver Input File */,
                SubmitOptionsEnumSolveInputFile/** Solve Input File */
            };

            private: DurSpecialistSolveBuilderImpl * m_durspecialistsolvebuilder_impl;
            private: friend class  _DurSpecialistSolveBuilderBuilder;
            protected: DurSpecialistSolveBuilder();
            public: ~DurSpecialistSolveBuilder();
            /**Returns  the submit options. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistSolveBuilder::SubmitOptionsEnum SubmitOptions
            (
            );
            /**Sets  the submit options. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSubmitOptions
            (
                NXOpen::CAE::DurSpecialistSolveBuilder::SubmitOptionsEnum submitOptions /** submitoptions */ 
            );
            /**Returns  the model check. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool ModelCheck
            (
            );
            /**Sets  the model check. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetModelCheck
            (
                bool modelCheck /** modelcheck */ 
            );
            /**Returns  the function results only flag. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool FunctionResultsOnly
            (
            );
            /**Sets  the function results only flag. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFunctionResultsOnly
            (
                bool functionResultsOnly /** functionresultsonly */ 
            );
            /**Returns  the solver profile. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistSolverProfile * SolverProfile
            (
            );
            /**Sets  the solver profile. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSolverProfile
            (
                NXOpen::CAE::DurSpecialistSolverProfile * solverProfile /** the @link NXOpen::CAE::DurSpecialistSolverProfile NXOpen::CAE::DurSpecialistSolverProfile@endlink  to assign */
            );
            /**Returns  the solver parameters 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistSolverParameterTable * SolverParameters
            (
            );
            /** Returns the flag that indicates not solving the solution as builder committed if true. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetCommitNoSolve
            (
            );
            /** Sets the flag that indicates not solving the solution as builder committed. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetCommitNoSolve
            (
                bool flag /** flag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
