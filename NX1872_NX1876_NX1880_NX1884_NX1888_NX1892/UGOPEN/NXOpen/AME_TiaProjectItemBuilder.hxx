#ifndef NXOpen_AME_TIAPROJECTITEMBUILDER_HXX_INCLUDED
#define NXOpen_AME_TIAPROJECTITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_TiaProjectItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class TiaProjectItemBuilder;
    }
    class Builder;
    namespace AME
    {
        class _TiaProjectItemBuilderBuilder;
        class TiaProjectItemBuilderImpl;
        /** the TIA project item builder  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateTiaprojectItemBuilder  NXOpen::AME::AMEManager::CreateTiaprojectItemBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  TiaProjectItemBuilder : public NXOpen::Builder
        {
            private: TiaProjectItemBuilderImpl * m_tiaprojectitembuilder_impl;
            private: friend class  _TiaProjectItemBuilderBuilder;
            protected: TiaProjectItemBuilder();
            public: ~TiaProjectItemBuilder();
            /**Returns  the project item name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  the project item name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetName
            (
                const NXString & projectName /** projectname */ 
            );
            /**Sets  the project item name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetName
            (
                const char * projectName /** projectname */ 
            );
            /**Returns  the project item path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Path
            (
            );
            /**Sets  the project item path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPath
            (
                const NXString & projectPath /** projectpath */ 
            );
            /**Sets  the project item path 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPath
            (
                const char * projectPath /** projectpath */ 
            );
            /**Returns  the project item full path (project folder path plus project file name with extension) 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString FullPath
            (
            );
            /**Sets  the project item full path (project folder path plus project file name with extension) 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFullPath
            (
                const NXString & projectFullPath /** projectfullpath */ 
            );
            /**Sets  the project item full path (project folder path plus project file name with extension) 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetFullPath
            (
                const char * projectFullPath /** projectfullpath */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
