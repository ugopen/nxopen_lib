#ifndef NXOpen_ANIMATIONDESIGNER_ANIMATIONDESIGNERMANAGER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_ANIMATIONDESIGNERMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_AnimationDesignerManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AnimationDesigner_InverseKinematicsBuilder.hxx>
#include <NXOpen/AnimationDesigner_Nav_Solution.hxx>
#include <NXOpen/AnimationDesigner_PreferencesBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class AnimationDesignerManager;
    }
    class Session;
    namespace AnimationDesigner
    {
        class AnimatedCameraCollection;
    }
    namespace AnimationDesigner
    {
        class AnimatedExplodeCollection;
    }
    namespace AnimationDesigner
    {
        class AnimatedVisibilityCollection;
    }
    namespace AnimationDesigner
    {
        class ConstraintConversionBuilder;
    }
    namespace AnimationDesigner
    {
        class ContactCollection;
    }
    namespace AnimationDesigner
    {
        class CurveOnCurveJointCollection;
    }
    namespace AnimationDesigner
    {
        class CylindricalJointCollection;
    }
    namespace AnimationDesigner
    {
        class FixedJointCollection;
    }
    namespace AnimationDesigner
    {
        class GearCollection;
    }
    namespace AnimationDesigner
    {
        class InverseKinematicsBuilder;
    }
    namespace AnimationDesigner
    {
        class JointJoggerCollection;
    }
    namespace AnimationDesigner
    {
        class MeasureCollection;
    }
    namespace AnimationDesigner
    {
        class MechanicalCamCollection;
    }
    namespace AnimationDesigner
    {
        namespace Nav
        {
            class Solution;
        }
    }
    namespace AnimationDesigner
    {
        namespace Nav
        {
            class SolutionCollection;
        }
    }
    namespace AnimationDesigner
    {
        class PlanarJointCollection;
    }
    namespace AnimationDesigner
    {
        class PointOnCurveJointCollection;
    }
    namespace AnimationDesigner
    {
        class PositionMotorCollection;
    }
    namespace AnimationDesigner
    {
        class PreferencesBuilder;
    }
    namespace AnimationDesigner
    {
        class RackPinionCollection;
    }
    namespace AnimationDesigner
    {
        class RevoluteJointCollection;
    }
    namespace AnimationDesigner
    {
        class RigidGroupCollection;
    }
    namespace AnimationDesigner
    {
        class ScrewJointCollection;
    }
    namespace AnimationDesigner
    {
        class SliderJointCollection;
    }
    namespace AnimationDesigner
    {
        class SpeedMotorCollection;
    }
    namespace AnimationDesigner
    {
        class SphericalJointCollection;
    }
    class NXObject;
    class Part;
    namespace AnimationDesigner
    {
        class AnimationDesignerManagerImpl;
        /** Represents an object to manage Animation Designer application objects.  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  AnimationDesignerManager
        {
            private: AnimationDesignerManagerImpl * m_animationdesignermanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AnimationDesignerManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AnimationDesignerManager* theAnimationDesignerManager;
            /** Returns the AnimationDesignerManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AnimationDesignerManager* GetAnimationDesignerManager(NXOpen::Session *owner);
            public: ~AnimationDesignerManager();
            /** Renames the physics object for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetName
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::NXObject * physicsObject /** physics object */ ,
                const NXString & name /** the new name */
            );
            /** Renames the physics object for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetName
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::NXObject * physicsObject /** physics object */ ,
                const char * name /** the new name */
            );
            /** Exports the PLMXML from Animation Designer in teamcenter. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void ExportPlmxmlInTeamcenter
            (
            );
            /** Imports the PLMXML for Animation Designer in teamcenter. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void ImportPlmxmlInTeamcenter
            (
            );
            /** Exports the PLMXML from Animation Designer in native. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void ExportPlmxmlInNative
            (
                const NXString & dirName /** the plmxml dir name */,
                const NXString & configFileName /** the config file name */,
                bool reportWind /** reportwind */ 
            );
            /** Exports the PLMXML from Animation Designer in native. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void ExportPlmxmlInNative
            (
                const char * dirName /** the plmxml dir name */,
                const char * configFileName /** the config file name */,
                bool reportWind /** reportwind */ 
            );
            /** Imports the PLMXML for Animation Designer in native. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void ImportPlmxmlInNative
            (
                const NXString & fileName /** the plmxml file name */,
                bool reportWind /** reportwind */ 
            );
            /** Imports the PLMXML for Animation Designer in native. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void ImportPlmxmlInNative
            (
                const char * fileName /** the plmxml file name */,
                bool reportWind /** reportwind */ 
            );
            /** Creates the preferences builder for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::PreferencesBuilder * CreatePreferenceBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates the solution for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::Nav::Solution * CreateSolution
            (
                NXOpen::Part * part /** part */ 
            );
            /** Gets the active solution for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::Nav::Solution * GetActiveSolution
            (
                NXOpen::Part * part /** part */ 
            );
            /** Sets the active solution for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetActiveSolution
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::AnimationDesigner::Nav::Solution * studyFolder /** studyfolder */ 
            );
            /** Clears the auto solve data for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void AutoSolveClear
            (
                NXOpen::Part * part /** part */ 
            );
            /** Records the auto solve data for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void AutoSolveRecord
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::NXObject * physicsObject /** physics object */ ,
                const std::vector<double> & matrix /** matrix */ 
            );
            /** Records the auto solve data for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void AutoSolve
            (
                NXOpen::Part * part /** part */ 
            );
            /** Indicates whether to freeze the animation position to do modeling operations. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void ModelingInAnimationContext
            (
                NXOpen::Part * part /** part */ ,
                bool bFreeze /** bfreeze */ 
            );
            /** Creates a @link AnimationDesigner::ConstraintConversionBuilder AnimationDesigner::ConstraintConversionBuilder@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::ConstraintConversionBuilder * CreateConstraintConversionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Update the motor index for Animation Designer. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void UpdateMotorIndex
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::NXObject * motor /** motor */ ,
                int index /** index */ 
            );
            /** Creates a @link AnimationDesigner::InverseKinematicsBuilder AnimationDesigner::InverseKinematicsBuilder@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::InverseKinematicsBuilder * CreateInverseKinematicsBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Sets the display or hide state of icons in folder object. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetSubfolderDisplayOrHide
            (
                NXOpen::NXObject * folderObject /** folder object */ ,
                bool bDisplay /** bdisplay */ 
            );


            /** Returns the @link NXOpen::AnimationDesigner::Nav::SolutionCollection NXOpen::AnimationDesigner::Nav::SolutionCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::Nav::SolutionCollection *Solutions();
            /** Returns the @link NXOpen::AnimationDesigner::RigidGroupCollection NXOpen::AnimationDesigner::RigidGroupCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::RigidGroupCollection *RigidGroups();
            /** Returns the @link NXOpen::AnimationDesigner::ContactCollection NXOpen::AnimationDesigner::ContactCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::ContactCollection *Contacts();
            /** Returns the @link NXOpen::AnimationDesigner::RevoluteJointCollection  NXOpen::AnimationDesigner::RevoluteJointCollection @endlink  belonging to this part 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::RevoluteJointCollection *RevoluteJoints();
            /** Returns the @link NXOpen::AnimationDesigner::SliderJointCollection  NXOpen::AnimationDesigner::SliderJointCollection @endlink  belonging to this part 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::SliderJointCollection *SliderJoints();
            /** Returns the @link NXOpen::AnimationDesigner::CylindricalJointCollection NXOpen::AnimationDesigner::CylindricalJointCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::CylindricalJointCollection *CylindricalJoints();
            /** Returns the @link NXOpen::AnimationDesigner::SphericalJointCollection  NXOpen::AnimationDesigner::SphericalJointCollection @endlink  belonging to this part 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::SphericalJointCollection *SphericalJoints();
            /** Returns the @link NXOpen::AnimationDesigner::FixedJointCollection NXOpen::AnimationDesigner::FixedJointCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::FixedJointCollection *FixedJoints();
            /** Returns the @link NXOpen::AnimationDesigner::GearCollection NXOpen::AnimationDesigner::GearCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::GearCollection *Gears();
            /** Returns the @link NXOpen::AnimationDesigner::RackPinionCollection NXOpen::AnimationDesigner::RackPinionCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::RackPinionCollection *RackPinions();
            /** Returns the @link NXOpen::AnimationDesigner::PositionMotorCollection NXOpen::AnimationDesigner::PositionMotorCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::PositionMotorCollection *PositionMotors();
            /** Returns the @link NXOpen::AnimationDesigner::SpeedMotorCollection NXOpen::AnimationDesigner::SpeedMotorCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::SpeedMotorCollection *SpeedMotors();
            /** Returns the @link NXOpen::AnimationDesigner::MeasureCollection NXOpen::AnimationDesigner::MeasureCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::MeasureCollection *Measures();
            /** Returns the @link NXOpen::AnimationDesigner::PointOnCurveJointCollection NXOpen::AnimationDesigner::PointOnCurveJointCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::PointOnCurveJointCollection *PointOnCurveJoints();
            /** Returns the @link NXOpen::AnimationDesigner::CurveOnCurveJointCollection NXOpen::AnimationDesigner::CurveOnCurveJointCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::CurveOnCurveJointCollection *CurveOnCurveJoints();
            /** Returns the @link NXOpen::AnimationDesigner::MechanicalCamCollection NXOpen::AnimationDesigner::MechanicalCamCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::MechanicalCamCollection *MechanicalCams();
            /** Returns the @link NXOpen::AnimationDesigner::ScrewJointCollection  NXOpen::AnimationDesigner::ScrewJointCollection @endlink  belonging to this application. 
             <br>  Created in NX12.0.2.  <br>  
            */
            public: NXOpen::AnimationDesigner::ScrewJointCollection *ScrewJoints();
            /** Returns the @link NXOpen::AnimationDesigner::PlanarJointCollection NXOpen::AnimationDesigner::PlanarJointCollection@endlink  belonging to this application. 
             <br>  Created in NX12.0.2.  <br>  
            */
            public: NXOpen::AnimationDesigner::PlanarJointCollection *PlanarJoints();
            /** Returns the @link NXOpen::AnimationDesigner::AnimatedVisibilityCollection NXOpen::AnimationDesigner::AnimatedVisibilityCollection@endlink  belonging to this application. 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::AnimatedVisibilityCollection *AnimatedVisibilities();
            /** Returns the @link NXOpen::AnimationDesigner::AnimatedCameraCollection NXOpen::AnimationDesigner::AnimatedCameraCollection@endlink  belonging to this application. 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::AnimatedCameraCollection *AnimatedCameras();
            /** Returns the @link NXOpen::AnimationDesigner::AnimatedExplodeCollection NXOpen::AnimationDesigner::AnimatedExplodeCollection@endlink  belonging to this application. 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::AnimatedExplodeCollection *AnimatedExplodes();
            /** Returns the @link NXOpen::AnimationDesigner::JointJoggerCollection NXOpen::AnimationDesigner::JointJoggerCollection@endlink  belonging to this application. 
             <br>  Created in NX1872.0.0.  <br>  
            */
            public: NXOpen::AnimationDesigner::JointJoggerCollection *JointJoggers();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
