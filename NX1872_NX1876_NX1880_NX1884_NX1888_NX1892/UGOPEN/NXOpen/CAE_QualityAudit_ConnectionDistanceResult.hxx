#ifndef NXOpen_CAE_QUALITYAUDIT_CONNECTIONDISTANCERESULT_HXX_INCLUDED
#define NXOpen_CAE_QUALITYAUDIT_CONNECTIONDISTANCERESULT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_QualityAudit_ConnectionDistanceResult.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_IConnection.hxx>
#include <NXOpen/CAE_QualityAudit_Result.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace QualityAudit
        {
            class ConnectionDistanceResult;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class IConnection;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class Result;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class _ConnectionDistanceResultBuilder;
            class ConnectionDistanceResultImpl;
            /**  @brief  The Quality Audit ConnectionPointsDistanceResult is a class containing information about failed distance between connection distance checks on universal connections. 

               <br> To obtain this type of results see @link CAE::QualityAudit::ConnectionDistanceCheck CAE::QualityAudit::ConnectionDistanceCheck@endlink .  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ConnectionDistanceResult : public NXOpen::CAE::QualityAudit::Result
            {
                private: ConnectionDistanceResultImpl * m_connectiondistanceresult_impl;
                private: friend class  _ConnectionDistanceResultBuilder;
                protected: ConnectionDistanceResult();
                public: ~ConnectionDistanceResult();
                /**Returns  the first connection.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::IConnection * Connection1
                (
                );
                /**Returns  the second connection.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::IConnection * Connection2
                (
                );
                /**Returns  the definition index of the first point. See @link NXOpen::CAE::Connections::ILocationsContainer NXOpen::CAE::Connections::ILocationsContainer@endlink  for details 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int DefinitionIndex1
                (
                );
                /**Returns  the definition index of the second point. See @link NXOpen::CAE::Connections::ILocationsContainer NXOpen::CAE::Connections::ILocationsContainer@endlink  for details 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int DefinitionIndex2
                (
                );
                /**Returns  the location index of the first point. See @link NXOpen::CAE::Connections::ILocationsContainer NXOpen::CAE::Connections::ILocationsContainer@endlink  for details  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int LocationIndex1
                (
                );
                /**Returns  the location index of the second point. See @link NXOpen::CAE::Connections::ILocationsContainer NXOpen::CAE::Connections::ILocationsContainer@endlink  for details  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int LocationIndex2
                (
                );
                /**Returns  the coordinate index of the first point. See @link NXOpen::CAE::Connections::Location NXOpen::CAE::Connections::Location@endlink  for details  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int CoordinateIndex1
                (
                );
                /**Returns  the coordinate index of the second point. See @link NXOpen::CAE::Connections::Location NXOpen::CAE::Connections::Location@endlink  for details  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int CoordinateIndex2
                (
                );
                /**Returns  the coordinates of the first point. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point3d Coordinates1
                (
                );
                /**Returns  the coordinates of the second point. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point3d Coordinates2
                (
                );
                /**Returns  the distance between the two connections.  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: double Distance
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
