#ifndef NXOpen_CAE_MODELCHECK_TESTRESULT_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_TESTRESULT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_TestResult.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ModelCheck_TestValueTypes.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class TestResult;
        }
    }
    namespace CAE
    {
        namespace ModelCheck
        {
        }
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class TestResultImpl;
            /** Represents quality checking result of a quality test
                 <br> To obtain an instance of this class use CAE.ModelCheck.ElementTestResult.GetTestResults  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TestResult : public NXOpen::TransientObject
            {
                private: TestResultImpl * m_testresult_impl;
                /// \cond NX_NO_DOC 
                public: explicit TestResult(void *ptr);
                /// \endcond 
                /** Frees the object from memory.  After this method is called,
                        it is illegal to use the object.  In .NET, this method is automatically
                        called when the object is deleted by the garbage collector.  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~TestResult();
                /**Returns  the test type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::TestValueTypes::TestType TestType
                (
                );
                /** Tells whether there is a test value associated with this test 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool HasTestValue
                (
                );
                /**Returns  the test value. An exception will be thrown f there is no test value associated with this test 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: double TestValue
                (
                );
                /**Returns  the validation result of comparing test value with the criteria value.
                            if no test value is associated this test, the result just indicates the test 
                            is passed or failed 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::TestValueTypes::Result ValidatedTestResult
                (
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
