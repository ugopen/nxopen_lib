#ifndef NXOpen_MOTION_MOTIONSESSION_HXX_INCLUDED
#define NXOpen_MOTION_MOTIONSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MotionSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MotionSession;
    }
    class Session;
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace Motion
    {
        class AnimationConversionBuilder;
    }
    namespace Motion
    {
        class MechanismExport;
    }
    namespace Motion
    {
        class MechanismImport;
    }
    namespace Motion
    {
        class MotionEnvironment;
    }
    namespace Motion
    {
        class MotionFunction;
    }
    namespace Motion
    {
        class MotionMethods;
    }
    namespace Motion
    {
        class PhysicsConversionBuilder;
    }
    namespace Motion
    {
        class PostProcess;
    }
    class NXObject;
    class Part;
    namespace Motion
    {
        class MotionSessionImpl;
        /** Represents motion session  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MotionSession
        {
            private: MotionSessionImpl * m_motionsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit MotionSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~MotionSession();
            /** Clones the Simulation.  @return  new motion simulation part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString CloneSimulation
            (
                NXOpen::NXObject * masterPart /** the master part */,
                const NXString & motionSimName /** motion simulation part which ready to be cloned */
            );
            /** Clones the Simulation.  @return  new motion simulation part name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString CloneSimulation
            (
                NXOpen::NXObject * masterPart /** the master part */,
                const char * motionSimName /** motion simulation part which ready to be cloned */
            );
            /** Deletes the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void DeleteSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const NXString & motionSimName /** motion simulation part which ready to be deleted */
            );
            /** Deletes the Simulation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void DeleteSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const char * motionSimName /** motion simulation part which ready to be deleted */
            );
            /** Creates the Simulation.  @return  created motion simulation part name 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::FileNew NXOpen::FileNew@endlink  and @link NXOpen::Motion::MotionSession::InitializeSimulation NXOpen::Motion::MotionSession::InitializeSimulation@endlink  <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::FileNew and NXOpen::Motion::MotionSession::InitializeSimulation") NXString CreateSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */
            );
            /** Creates the Non-master Simulation in NX Manager mode with an input name. @return  the created motion simulation part name 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString CreateNamingSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const NXString & inputSimName /** the input simulation name*/
            );
            /** Creates the Non-master Simulation in NX Manager mode with an input name. @return  the created motion simulation part name 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString CreateNamingSimulation
            (
                NXOpen::NXObject * masterPart /** the master_part */,
                const char * inputSimName /** the input simulation name*/
            );
            /** Opens the Simulation directly. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::PartCollection::OpenDisplay NXOpen::PartCollection::OpenDisplay@endlink  and @link NXOpen::Motion::MotionSession::InitializeSimulation NXOpen::Motion::MotionSession::InitializeSimulation@endlink  <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::PartCollection::OpenDisplay and NXOpen::Motion::MotionSession::InitializeSimulation") void DirectOpenSimulation
            (
                const NXString & motionSimName /** motion simulation part name */
            );
            /** Opens the Simulation directly. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::PartCollection::OpenDisplay NXOpen::PartCollection::OpenDisplay@endlink  and @link NXOpen::Motion::MotionSession::InitializeSimulation NXOpen::Motion::MotionSession::InitializeSimulation@endlink  <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void DirectOpenSimulation
            (
                const char * motionSimName /** motion simulation part name */
            );
            /** Reparents the Simulation. 
             <br>  @deprecated Deprecated in NX12.0.0.  Removed without replacement. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Removed without replacement.") void ReparentSimulation
            (
                const NXString & motionSimFullName /** motion simulation full name */,
                const NXString & destinationDirectory /** destination directory */
            );
            /** Reparents the Simulation. 
             <br>  @deprecated Deprecated in NX12.0.0.  Removed without replacement. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ReparentSimulation
            (
                const char * motionSimFullName /** motion simulation full name */,
                const char * destinationDirectory /** destination directory */
            );
            /** Initializes the mech 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Motion::MotionSession::InitializeSimulation NXOpen::Motion::MotionSession::InitializeSimulation@endlink  <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Motion::MotionSession::InitializeSimulation") void InitializeMechanisms
            (
            );
            /** Initializes the motion simulation context for the loaded motion part 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void InitializeSimulation
            (
                NXOpen::Part * simulationPart /** the loaded motion simulation part */
            );
            /** Converts mating conditions and constraints to motion bodies and joints  @return  the motion body which will be fixed to ground 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXObject * ConstraintsToMotionObject
            (
                NXOpen::NXObject * scenarioPart /** the scenario part object */,
                NXOpen::NXObject * masterPart /** the master part object */
            );
            /** Fixes the motion body to ground  @return  the joint object created 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXObject * FixLinkToGround
            (
                NXOpen::NXObject * link /** the motion body object */
            );
            /** Gets all scenario names from motion subfolder of master part  @return  scenario names 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXString> GetScenarioNames
            (
                NXOpen::NXObject * masterPart /** the master part object */
            );
            /** Returns all new created but not saved motion simulation parts of the master part  @return  unsaved motion simulation parts 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::BasePart *> GetUnsavedNewMotionParts
            (
                NXOpen::BasePart * masterPart /** the master part object */
            );
            /** Returns all direct motion components with full path names from motion part.
                    The direct motion components can be loaded or unloaded. For unloaded component, a simple part name is returned.

                     <br>  An error will be thrown if the input part is not a motion part.  <br> 
                     @return  motion component part names 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetMotionComponentPartNames
            (
                NXOpen::BasePart * motionPart /** the motion part object */,
                std::vector<NXOpen::Assemblies::Component *> & motionComponents /** motion components */
            );
            /** Gets the full name for a scenario name, which is located in motion subfolder of master part  @return  full path to the file 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString GetFullName
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const NXString & scenarioName /** scenario name to check (with or without extension) */
            );
            /** Gets the full name for a scenario name, which is located in motion subfolder of master part  @return  full path to the file 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            NXString GetFullName
            (
                NXOpen::NXObject * masterPart /** the master part object */,
                const char * scenarioName /** scenario name to check (with or without extension) */
            );
            /** Creates a @link NXOpen::Motion::PhysicsConversionBuilder NXOpen::Motion::PhysicsConversionBuilder@endlink  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::PhysicsConversionBuilder * CreatePhysicsConversionBuilder
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ 
            );
            /** Creates a @link NXOpen::Motion::AnimationConversionBuilder NXOpen::Motion::AnimationConversionBuilder@endlink  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::AnimationConversionBuilder * CreateAnimationConversionBuilder
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ 
            );
            /** Exports kinematics for Process Simulate 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ExportProcessSimulateKinematics
            (
            );
            /** Gets the referencing motion objects.  @return  The referencing motion objects. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::NXObject *> GetReferencingMotionObjects
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::NXObject * originObject /**  Non-function motion object. For function, please use @link Motion::MotionSession::GetReferencingMotionObjects Motion::MotionSession::GetReferencingMotionObjects@endlink . */
            );
            /** Gets the referenced motion objects. @return  The referenced motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::NXObject *> GetReferencedMotionObjects
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::NXObject * originObject /**  Non-function motion object. For function, please use @link Motion::MotionSession::GetReferencedMotionObjects Motion::MotionSession::GetReferencedMotionObjects@endlink . */
            );
            /** Gets the referencing functions @return  The referencing functions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::Motion::MotionFunction *> GetReferencingFunctions
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::NXObject * originObject /**  Non-function motion object. */
            );
            /** Gets the referenced functions @return  The referenced functions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::Motion::MotionFunction *> GetReferencedFunctions
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::NXObject * originObject /**  Non-function motion object. */
            );
            /** Gets function referencing motion objects. @return  The referencing motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::NXObject *> GetFunctionReferencingMotionObjects
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::Motion::MotionFunction * funcObject /** funcobject */ 
            );
            /** Gets function referenced motion objects. @return  The referenced motion objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::NXObject *> GetFunctionReferencedMotionObjects
            (
                NXOpen::NXObject * scenarioPart /** scenario part */ ,
                NXOpen::Motion::MotionFunction * funcObject /** funcobject */ 
            );


            /** Returns the @link NXOpen::Motion::MotionEnvironment  NXOpen::Motion::MotionEnvironment @endlink  belonging to this part 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: NXOpen::Motion::MotionEnvironment *Environments();
            /** Returns the @link NXOpen::Motion::PostProcess  NXOpen::Motion::PostProcess @endlink  belonging to this part 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: NXOpen::Motion::PostProcess *PostProcess();
            /** Returns the @link NXOpen::Motion::MotionMethods  NXOpen::Motion::MotionMethods @endlink belonging to this part 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: NXOpen::Motion::MotionMethods *MotionMethods();
            /** Returns the @link NXOpen::Motion::MechanismImport  NXOpen::Motion::MechanismImport @endlink  object belonging to this part 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::Motion::MechanismImport *MechanismImport();
            /** Returns the @link NXOpen::Motion::MechanismExport  NXOpen::Motion::MechanismExport @endlink  object belonging to this part 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::Motion::MechanismExport *MechanismExport();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
