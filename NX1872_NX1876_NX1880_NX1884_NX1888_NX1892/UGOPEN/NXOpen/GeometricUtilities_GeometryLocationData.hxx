#ifndef NXOpen_GEOMETRICUTILITIES_GEOMETRYLOCATIONDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_GEOMETRYLOCATIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_GeometryLocationData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class GeometryLocationData;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class SelectObject;
    namespace GeometricUtilities
    {
        class _GeometryLocationDataBuilder;
        class GeometryLocationDataImpl;
        /** Represents a @link NXOpen::GeometricUtilities::GeometryLocationData NXOpen::GeometricUtilities::GeometryLocationData@endlink 
             <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::GeometryLocationDataCollection::CreateGeometryLocationData  NXOpen::GeometricUtilities::GeometryLocationDataCollection::CreateGeometryLocationData @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  GeometryLocationData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**Represents the entity type. */
            public: enum EntityTypes
            {
                EntityTypesPoint/** point */ ,
                EntityTypesCsys/** csys */ 
            };

            private: GeometryLocationDataImpl * m_geometrylocationdata_impl;
            private: friend class  _GeometryLocationDataBuilder;
            protected: GeometryLocationData();
            public: ~GeometryLocationData();
            /**Returns  the type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::GeometryLocationData::EntityTypes EntityType
            (
            );
            /**Sets  the type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEntityType
            (
                NXOpen::GeometricUtilities::GeometryLocationData::EntityTypes entityType /** entitytype */ 
            );
            /**Returns  the csys 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectObject * Csys
            (
            );
            /**Returns  the point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
