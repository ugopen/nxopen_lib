#ifndef NXOpen_ROUTING_INSULATIONBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_INSULATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_InsulationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/Routing_StockBlockBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class InsulationBuilder;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Builder;
    class Expression;
    namespace PDM
    {
        class LogicalObject;
    }
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        class StockBlockBuilder;
    }
    namespace Routing
    {
        class _InsulationBuilderBuilder;
        class InsulationBuilderImpl;
        /** Represents @link NXOpen::Routing::InsulationBuilder NXOpen::Routing::InsulationBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::Routing::BuilderFactory::CreateInsulationBuilder  NXOpen::Routing::BuilderFactory::CreateInsulationBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  InsulationBuilder : public NXOpen::Builder
        {
            /** The application type for wrapped Insulation */
            public: enum WrapType
            {
                WrapTypeNoWarp/** No wrapping */,
                WrapTypeOverlapSpiral/** Overlap Spiral */,
                WrapTypeStripedSpiral/** Striped Spiral */
            };

            private: InsulationBuilderImpl * m_insulationbuilder_impl;
            private: friend class  _InsulationBuilderBuilder;
            protected: InsulationBuilder();
            public: ~InsulationBuilder();
            /**Returns  the insulation component to edit. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Assemblies::SelectComponent * InsulationPartOccurrenceSelection
            (
            );
            /**Returns  the routing object collector to collect the segments to assign Insulation to.
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::RouteObjectCollector * SegmentCollector
            (
            );
            /**Returns  the value for whether insulation be added on fitting parts or not 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool AddInsulationOnFittings
            (
            );
            /**Sets  the value for whether insulation be added on fitting parts or not 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetAddInsulationOnFittings
            (
                bool addInsulationOnFittings /** addinsulationonfittings */ 
            );
            /**Returns  the stock settings for Insulation assignment. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::StockBlockBuilder * StockSettings
            (
            );
            /**Returns  the @link NXOpen::Routing::InsulationBuilder::WrapType NXOpen::Routing::InsulationBuilder::WrapType@endlink  for Wrapped Insulation. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::InsulationBuilder::WrapType WrapMethod
            (
            );
            /**Sets  the @link NXOpen::Routing::InsulationBuilder::WrapType NXOpen::Routing::InsulationBuilder::WrapType@endlink  for Wrapped Insulation. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetWrapMethod
            (
                NXOpen::Routing::InsulationBuilder::WrapType wrapMethod /** wrapmethod */ 
            );
            /**Returns  the percentage overlap if the @link NXOpen::Routing::InsulationBuilder::WrapType NXOpen::Routing::InsulationBuilder::WrapType@endlink 
                        is @link NXOpen::Routing::InsulationBuilder::WrapTypeOverlapSpiral NXOpen::Routing::InsulationBuilder::WrapTypeOverlapSpiral@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Expression * OverlapPercentage
            (
            );
            /**Returns  the gap distance if the @link NXOpen::Routing::InsulationBuilder::WrapType NXOpen::Routing::InsulationBuilder::WrapType@endlink 
                        is @link NXOpen::Routing::InsulationBuilder::WrapTypeStripedSpiral NXOpen::Routing::InsulationBuilder::WrapTypeStripedSpiral@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Expression * GapDistance
            (
            );
            /** Performs the operations needed prior to a commit. This method has to be called before invoking commit. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void PreCommit
            (
            );
            /** Returns the @link PDM::LogicalObject PDM::LogicalObject@endlink s that represent the content that will be created by this builder. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::PDM::LogicalObject * GetLogicalObject
            (
            );
            /** Returns the suggestion for @link NXOpen::Routing::InsulationBuilder::WrapType NXOpen::Routing::InsulationBuilder::WrapType@endlink  based on
                        @link Routing::StockBlockBuilder Routing::StockBlockBuilder@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::InsulationBuilder::WrapType SuggestWrapMethodBasedOnStockSettings
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
