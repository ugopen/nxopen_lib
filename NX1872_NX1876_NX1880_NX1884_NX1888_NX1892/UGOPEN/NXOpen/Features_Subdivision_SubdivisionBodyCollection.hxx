#ifndef NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONBODYCOLLECTION_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONBODYCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SubdivisionBodyCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <iterator>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/Features_Subdivision_CagePolylineBuilder.hxx>
#include <NXOpen/Features_Subdivision_CageSectionData.hxx>
#include <NXOpen/Features_Subdivision_CopyCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_CopyCageData.hxx>
#include <NXOpen/Features_Subdivision_DefineWorkRegionBuilder.hxx>
#include <NXOpen/Features_Subdivision_DeleteConstraintBuilder.hxx>
#include <NXOpen/Features_Subdivision_DrawCageData.hxx>
#include <NXOpen/Features_Subdivision_ExportSubdivisionGeometryBuilder.hxx>
#include <NXOpen/Features_Subdivision_ExtractCagePolylineBuilder.hxx>
#include <NXOpen/Features_Subdivision_ImportSubdivisionGeometryBuilder.hxx>
#include <NXOpen/Features_Subdivision_MergeSubdivisionBodiesBuilder.hxx>
#include <NXOpen/Features_Subdivision_MirrorCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_OffsetCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_PasteCageData.hxx>
#include <NXOpen/Features_Subdivision_SectionTubeData.hxx>
#include <NXOpen/Features_Subdivision_SplitSubdivisionBodyBuilder.hxx>
#include <NXOpen/Features_Subdivision_StartSymmetricModelingBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionBridgeFaceBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionConnectCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionDeleteCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionDeleteFaceBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionDeleteObjectBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionExtrudeCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionFillBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionLoftBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionMergeFaceBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionPrimitiveShapeBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionPrimitiveShapeBuilderEx.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionProjectCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionRevolveBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSetContinuityBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSetWeightBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSewCageBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSplitFaceBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSubdivideFaceBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionSweepBuilder.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionTubeBuilder.hxx>
#include <NXOpen/Features_Subdivision_TransformCageData.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionBodyCollection;
        }
    }
    class Part;
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionBody;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class CagePolylineBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class CageSectionData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class CopyCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class CopyCageData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class DefineWorkRegionBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class DeleteConstraintBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class DrawCageData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class ExportSubdivisionGeometryBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class ExtractCagePolylineBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class ImportSubdivisionGeometryBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class MergeSubdivisionBodiesBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class MirrorCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class OffsetCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class PasteCageData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SectionTubeData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SplitSubdivisionBodyBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class StartSymmetricModelingBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionBridgeFaceBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionConnectCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionDeleteCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionDeleteFaceBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionDeleteObjectBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionExtrudeCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionFillBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionLoftBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionMergeFaceBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionPrimitiveShapeBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionPrimitiveShapeBuilderEx;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionProjectCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionRevolveBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSetContinuityBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSetWeightBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSewCageBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSplitFaceBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSubdivideFaceBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionSweepBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionTubeBuilder;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class TransformCageData;
        }
    }
    class Polyline;
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionBodyCollectionImpl;
            /** Represents a collection of subdivision body feature tools.  <br> To obtain an instance of this class, refer to @link NXOpen::Part  NXOpen::Part @endlink  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SubdivisionBodyCollection : public NXOpen::TaggedObjectCollection
            {
                private: SubdivisionBodyCollectionImpl * m_subdivisionbodycollection_impl;
                private: NXOpen::Part* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit SubdivisionBodyCollection(NXOpen::Part *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~SubdivisionBodyCollection();
                /** Iterator for accessing the contents of the collection. */
                //lint -sem(NXOpen::Features::Subdivision::SubdivisionBodyCollection::iterator::copy,initializer)
                class iterator : public std::iterator<std::forward_iterator_tag, NXOpen::Features::Subdivision::SubdivisionBody *>
                {
                public:
                    /** Default constructor */
                    iterator() : m_context(nullptr), m_current(NULL_TAG)
                    {
                        // coverity[uninit_member]
                    } //lint !e1401 m_state is not initialized
                    /// \cond NX_NO_DOC
                    explicit iterator(NXOpen::Features::Subdivision::SubdivisionBodyCollection *context) : m_context(context), m_current(NULL_TAG)
                    {
                        // coverity[uninit_member]
                    }//lint !e1401 m_state is not initialized
                    /// \endcond
                    /** Copy constructor */
                    iterator(const iterator &other): m_context(nullptr), m_current(NULL_TAG)
                    {
                        copy(other);
                    }
                    /** Copy constructor */
                    iterator &operator =(const iterator &other)
                    {
                        if (&other != this)
                            copy(other);
                        return *this;
                    }
                    /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                    bool operator ==(const iterator &other) const
                    {
                        return m_current == other.m_current && m_context == other.m_context;
                    }
                    /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                    bool operator !=(const iterator &other) const
                    {
                        return !operator == (other);
                    }
                    /** Return the element currently pointed to by the iterator. */
                    NXOPENCPP_FEATURESEXPORT  value_type operator * () const;
                    /** Points the iterator to next element. */
                    iterator & operator ++()
                    {
                        next();
                        return *this;
                    }
                    /** Points the iterator to next element. */
                    iterator operator ++(int)
                    {
                        iterator tmp(*this);
                        ++*this;
                        return tmp;
                    }
                private:
                    void copy(const iterator &other)
                    {
                        m_context = other.m_context;
                        m_current = other.m_current;
                        for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                             m_state[i] = other.m_state[i];
                    }
                    NXOPENCPP_FEATURESEXPORT  void next();
                    NXOpen::Features::Subdivision::SubdivisionBodyCollection *m_context;
                    tag_t m_current;
                    unsigned int m_state[8];
                };
                /** Returns an iterator addressing the first element. */
                iterator begin();
                /** Returns an iterator addressing one past the last element. */
                iterator end()
                {
                    return iterator(this);
                }
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilder NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilder@endlink . 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionPrimitiveShapeBuilderEx NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionPrimitiveShapeBuilderEx@endlink  instead <br>  

                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NX_DEPRECATED("Deprecated in NX10.0.0.  Use NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionPrimitiveShapeBuilderEx instead") NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilder * CreateSubdivisionPrimitiveShapeBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilderEx NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilderEx@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionPrimitiveShapeBuilderEx * CreateSubdivisionPrimitiveShapeBuilderEx
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionExtrudeCageBuilder * CreateSubdivisionExtrudeCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSetWeightBuilder NXOpen::Features::Subdivision::SubdivisionSetWeightBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionSetWeightBuilder * CreateSubdivisionSetWeightBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSetContinuityBuilder NXOpen::Features::Subdivision::SubdivisionSetContinuityBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionSetContinuityBuilder * CreateSubdivisionSetContinuityBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionDeleteFaceBuilder NXOpen::Features::Subdivision::SubdivisionDeleteFaceBuilder@endlink . 
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link  Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteCageBuilder   Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteCageBuilder @endlink  instead. <br>  

                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NX_DEPRECATED("Deprecated in NX10.0.0.  Use  Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteCageBuilder  instead.") NXOpen::Features::Subdivision::SubdivisionDeleteFaceBuilder * CreateSubdivisionDeleteFaceBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::TransformCageData NXOpen::Features::Subdivision::TransformCageData@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::TransformCageData * CreateTransformCageData
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionFillBuilder NXOpen::Features::Subdivision::SubdivisionFillBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionFillBuilder * CreateSubdivisionFillBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionBridgeFaceBuilder NXOpen::Features::Subdivision::SubdivisionBridgeFaceBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionBridgeFaceBuilder * CreateSubdivisionBridgeFaceBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::StartSymmetricModelingBuilder NXOpen::Features::Subdivision::StartSymmetricModelingBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::StartSymmetricModelingBuilder * CreateStartSymmetricModelingBuilder
                (
                );
                /** Stops the symmetric modeling. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: void StopSymmetricModeling
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder * CreateSubdivisionProjectCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionMergeFaceBuilder NXOpen::Features::Subdivision::SubdivisionMergeFaceBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionMergeFaceBuilder * CreateSubdivisionMergeFaceBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSplitFaceBuilder NXOpen::Features::Subdivision::SubdivisionSplitFaceBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionSplitFaceBuilder * CreateSubdivisionSplitFaceBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSubdivideFaceBuilder NXOpen::Features::Subdivision::SubdivisionSubdivideFaceBuilder@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionSubdivideFaceBuilder * CreateSubdivisionSubdivideFaceBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::ImportSubdivisionGeometryBuilder NXOpen::Features::Subdivision::ImportSubdivisionGeometryBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::ImportSubdivisionGeometryBuilder * CreateImportSubdivisionGeometryBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::CagePolylineBuilder NXOpen::Features::Subdivision::CagePolylineBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::CagePolylineBuilder * CreateCagePolylineBuilder
                (
                    NXOpen::Polyline * polyline /** @link NXOpen::Polyline NXOpen::Polyline@endlink */
                );
                /** Creates a @link NXOpen::Features::Subdivision::ExtractCagePolylineBuilder NXOpen::Features::Subdivision::ExtractCagePolylineBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::ExtractCagePolylineBuilder * CreateExtractCagePolylineBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionRevolveBuilder NXOpen::Features::Subdivision::SubdivisionRevolveBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionRevolveBuilder * CreateSubdivisionRevolveBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionTubeBuilder NXOpen::Features::Subdivision::SubdivisionTubeBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionTubeBuilder * CreateSubdivisionTubeBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::CopyCageBuilder NXOpen::Features::Subdivision::CopyCageBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::CopyCageBuilder * CreateCopyCageBuilder
                (
                );
                /** Creates an empty cage section builder object. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::CageSectionData * CreateEmptyCageSectionBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionLoftBuilder NXOpen::Features::Subdivision::SubdivisionLoftBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionLoftBuilder * CreateSubdivisionLoftBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSweepBuilder NXOpen::Features::Subdivision::SubdivisionSweepBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionSweepBuilder * CreateSubdivisionSweepBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionSewCageBuilder NXOpen::Features::Subdivision::SubdivisionSewCageBuilder@endlink . 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionSewCageBuilder * CreateSubdivisionSewCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionDeleteCageBuilder NXOpen::Features::Subdivision::SubdivisionDeleteCageBuilder@endlink . 
                 <br>  @deprecated Deprecated in NX11.0.0.  Use @link  Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteObjectBuilder   Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteObjectBuilder @endlink  instead. <br>  

                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use  Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionDeleteObjectBuilder  instead.") NXOpen::Features::Subdivision::SubdivisionDeleteCageBuilder * CreateSubdivisionDeleteCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SplitSubdivisionBodyBuilder NXOpen::Features::Subdivision::SplitSubdivisionBodyBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SplitSubdivisionBodyBuilder * CreateSplitSubdivisionBodyBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::MergeSubdivisionBodiesBuilder NXOpen::Features::Subdivision::MergeSubdivisionBodiesBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::MergeSubdivisionBodiesBuilder * CreateMergeSubdivisionBodiesBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::CopyCageData NXOpen::Features::Subdivision::CopyCageData@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::CopyCageData * CreateCopyCageData
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::PasteCageData NXOpen::Features::Subdivision::PasteCageData@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::PasteCageData * CreatePasteCageData
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::DefineWorkRegionBuilder NXOpen::Features::Subdivision::DefineWorkRegionBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::DefineWorkRegionBuilder * CreateDefineWorkRegionBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::MirrorCageBuilder NXOpen::Features::Subdivision::MirrorCageBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::MirrorCageBuilder * CreateMirrorCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::OffsetCageBuilder NXOpen::Features::Subdivision::OffsetCageBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::OffsetCageBuilder * CreateOffsetCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionDeleteObjectBuilder NXOpen::Features::Subdivision::SubdivisionDeleteObjectBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") OR nx_polygon_modeling (" NX Polygon Modeling") */
                public: NXOpen::Features::Subdivision::SubdivisionDeleteObjectBuilder * CreateSubdivisionDeleteObjectBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::DeleteConstraintBuilder NXOpen::Features::Subdivision::DeleteConstraintBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::DeleteConstraintBuilder * CreateDeleteConstraintBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SubdivisionConnectCageBuilder NXOpen::Features::Subdivision::SubdivisionConnectCageBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SubdivisionConnectCageBuilder * CreateSubdivisionConnectCageBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::ExportSubdivisionGeometryBuilder NXOpen::Features::Subdivision::ExportSubdivisionGeometryBuilder@endlink . 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::ExportSubdivisionGeometryBuilder * CreateExportSubdivisionGeometryBuilder
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::DrawCageData NXOpen::Features::Subdivision::DrawCageData@endlink . 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::DrawCageData * CreateDrawCageData
                (
                );
                /** Creates a @link NXOpen::Features::Subdivision::SectionTubeData NXOpen::Features::Subdivision::SectionTubeData@endlink . 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NXOpen::Features::Subdivision::SectionTubeData * CreateSectionTubeData
                (
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
