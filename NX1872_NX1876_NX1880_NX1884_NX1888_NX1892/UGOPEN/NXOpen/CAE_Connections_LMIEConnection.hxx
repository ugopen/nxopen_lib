#ifndef NXOpen_CAE_CONNECTIONS_LMIECONNECTION_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_LMIECONNECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_LMIEConnection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_CommonTypes.hxx>
#include <NXOpen/CAE_Connections_LMIECenterDefinition.hxx>
#include <NXOpen/CAE_Connections_LMIEInertia.hxx>
#include <NXOpen/CAE_Connections_LMIELegConnection.hxx>
#include <NXOpen/CAE_Connections_LMIELegDefinition.hxx>
#include <NXOpen/CAE_Connections_LMIEMass.hxx>
#include <NXOpen/CAE_Connections_LMIEUnitSystem.hxx>
#include <NXOpen/CAE_Connections_LMIEError.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class LMIEConnection;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIECenterDefinition;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEError;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEInertia;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIELegConnection;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIELegDefinition;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEMass;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEUnitSystem;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class _LMIEConnectionBuilder;
            class LMIEConnectionImpl;
            /**  LMIEConnection   <br> No creator  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LMIEConnection : public NXOpen::CAE::Connections::LMIEError
            {
                private: LMIEConnectionImpl * m_lmieconnection_impl;
                private: friend class  _LMIEConnectionBuilder;
                protected: LMIEConnection();
                public: ~LMIEConnection();
                /**Returns  the mass description 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Description
                (
                );
                /**Sets  the mass description 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetDescription
                (
                    const NXString & desc /** Connection description */
                );
                /**Sets  the mass description 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetDescription
                (
                    const char * desc /** Connection description */
                );
                /**Returns  the mass 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEMass * Mass
                (
                );
                /**Sets  the mass 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMass
                (
                    NXOpen::CAE::Connections::LMIEMass * opt /** Mass Options */
                );
                /** Create a standalone mass  @return  Mass Options 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEMass * CreateMass
                (
                );
                /**Returns  the leg connection 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIELegConnection * LegConnection
                (
                );
                /**Sets  the leg connection 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLegConnection
                (
                    NXOpen::CAE::Connections::LMIELegConnection * opt /** The leg connection */
                );
                /** Create a standalone leg connection  @return  The leg connection 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIELegConnection * CreateLegConnection
                (
                );
                /**Returns  the unit system  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEUnitSystem * UnitSystem
                (
                );
                /**Sets  the unit system  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUnitSystem
                (
                    NXOpen::CAE::Connections::LMIEUnitSystem * opt /** Unit System */
                );
                /** Create a standalone unit system   @return  Unit System 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEUnitSystem * CreateUnitSystem
                (
                );
                /**Returns  the center definition 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIECenterDefinition * CenterDefinition
                (
                );
                /**Sets  the center definition 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetCenterDefinition
                (
                    NXOpen::CAE::Connections::LMIECenterDefinition * opt /** The center definition */
                );
                /** Create a standalone center definition  @return  The center definition 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIECenterDefinition * CreateCenterDefinition
                (
                );
                /**Returns  the inertia 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEInertia * Inertia
                (
                );
                /**Sets  the inertia 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetInertia
                (
                    NXOpen::CAE::Connections::LMIEInertia * opt /** The inertia */
                );
                /** Create a standalone inertia  @return  The inertia 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEInertia * CreateInertia
                (
                );
                /** Get the leg definitions  @return  The leg definitions 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Connections::LMIELegDefinition *> GetLegDefinitions
                (
                );
                /** Set the leg definitions 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLegDefinitions
                (
                    const std::vector<NXOpen::CAE::Connections::LMIELegDefinition *> & opt /** The leg definitions */
                );
                /** Create a standalone leg definition  @return  The leg definition 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIELegDefinition * CreateLegDefinition
                (
                );
                /**Returns  the folder name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString FolderName
                (
                );
                /**Sets  the folder name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetFolderName
                (
                    const NXString & folderName /** Folder name */
                );
                /**Sets  the folder name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetFolderName
                (
                    const char * folderName /** Folder name */
                );
                /**Returns  the connection element type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::ElementType ConnectionElementType
                (
                );
                /**Sets  the connection element type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetConnectionElementType
                (
                    NXOpen::CAE::Connections::ElementType connElementType /** The connection element type */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
