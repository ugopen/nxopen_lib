#ifndef NXOpen_SIM_LOADSNAPSHOTBUILDER_HXX_INCLUDED
#define NXOpen_SIM_LOADSNAPSHOTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_LoadSnapshotBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_Snapshot.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class LoadSnapshotBuilder;
    }
    class Builder;
    namespace SIM
    {
        class Snapshot;
    }
    namespace SIM
    {
        class _LoadSnapshotBuilderBuilder;
        class LoadSnapshotBuilderImpl;
        /**
            Represents a @link NXOpen::SIM::LoadSnapshotBuilder NXOpen::SIM::LoadSnapshotBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::SIM::KinematicConfigurator::CreateSimulationLoadsnapshotBuilder  NXOpen::SIM::KinematicConfigurator::CreateSimulationLoadsnapshotBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  LoadSnapshotBuilder : public NXOpen::Builder
        {
            private: LoadSnapshotBuilderImpl * m_loadsnapshotbuilder_impl;
            private: friend class  _LoadSnapshotBuilderBuilder;
            protected: LoadSnapshotBuilder();
            public: ~LoadSnapshotBuilder();
            /** Returns the snapshot 
             <br>  @deprecated Deprecated in NX12.0.2.  Use new version with few arguments instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.2.  Use new version with few arguments instead.") NXOpen::SIM::Snapshot * GetSnapshot
            (
                const NXString & snapshotName /** snapshotname */ ,
                const NXString & setupName /** setupname */ 
            );
            /** Returns the snapshot 
             <br>  @deprecated Deprecated in NX12.0.2.  Use new version with few arguments instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::SIM::Snapshot * GetSnapshot
            (
                const char * snapshotName /** snapshotname */ ,
                const char * setupName /** setupname */ 
            );
            /**Returns  the snapshot 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::Snapshot * Snapshot
            (
            );
            /**Sets  the snapshot 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetSnapshot
            (
                NXOpen::SIM::Snapshot * snapshot /** snapshot */ 
            );
            /**Returns  the run to simulation time 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool RunToSimTime
            (
            );
            /**Sets  the run to simulation time 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetRunToSimTime
            (
                bool bRunToTime /** bruntotime */ 
            );
            /**Returns  the external reference 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXString ExternalReference
            (
            );
            /**Sets  the external reference 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetExternalReference
            (
                const NXString & reference /** reference */ 
            );
            /**Sets  the external reference 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            void SetExternalReference
            (
                const char * reference /** reference */ 
            );
            /** The external snapshot selection
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetExternalSnapshotSelection
            (
                const std::vector<NXOpen::SIM::Snapshot *> & snapshotTags /** snapshottags */ ,
                std::vector<NXString> & targetSetups /** The setup where each snapshot is attached*/
            );
            /** The external snapshots 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::SIM::Snapshot *> GetExternalSnapshots
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
