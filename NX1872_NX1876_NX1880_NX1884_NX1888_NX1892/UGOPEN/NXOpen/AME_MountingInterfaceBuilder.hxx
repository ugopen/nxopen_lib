#ifndef NXOpen_AME_MOUNTINGINTERFACEBUILDER_HXX_INCLUDED
#define NXOpen_AME_MOUNTINGINTERFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_MountingInterfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class MountingInterfaceBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class ScCollector;
    class SelectTaggedObject;
    namespace AME
    {
        class _MountingInterfaceBuilderBuilder;
        class MountingInterfaceBuilderImpl;
        /** Builder class for creating mounting interface object in @link NXOpen::Part NXOpen::Part@endlink   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateMountingInterfaceBuilder  NXOpen::AME::AMEManager::CreateMountingInterfaceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FixingType </td> <td> 
         
        Point </td> </tr> 

        <tr><td> 
         
        MountingInterfaceType </td> <td> 
         
        Fixing </td> </tr> 

        <tr><td> 
         
        ReceptacleType </td> <td> 
         
        Fixed </td> </tr> 

        </table>  

         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  MountingInterfaceBuilder : public NXOpen::Builder
        {
            /** Represents mounting interface type */
            public: enum InterfaceType
            {
                InterfaceTypeFixing/** fixing */ ,
                InterfaceTypeComponentReceptacle/** component receptacle */ 
            };

            /** Represents component fixing type */
            public: enum FixingPolicy
            {
                FixingPolicyPoint/** point */ ,
                FixingPolicyFace/** face */ 
            };

            /** Represents component receptacle type */
            public: enum ReceptaclePolicy
            {
                ReceptaclePolicyFixed/** fixed */ ,
                ReceptaclePolicyAxisMovement/** axis movement */ ,
                ReceptaclePolicyPlaneMovement/** plane movement */ 
            };

            private: MountingInterfaceBuilderImpl * m_mountinginterfacebuilder_impl;
            private: friend class  _MountingInterfaceBuilderBuilder;
            protected: MountingInterfaceBuilder();
            public: ~MountingInterfaceBuilder();
            /**Returns  the @link NXOpen::AME::MountingInterfaceBuilder::InterfaceType NXOpen::AME::MountingInterfaceBuilder::InterfaceType@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::MountingInterfaceBuilder::InterfaceType MountingInterfaceType
            (
            );
            /**Sets  the @link NXOpen::AME::MountingInterfaceBuilder::InterfaceType NXOpen::AME::MountingInterfaceBuilder::InterfaceType@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMountingInterfaceType
            (
                NXOpen::AME::MountingInterfaceBuilder::InterfaceType type /** type */ 
            );
            /**Returns  the @link NXOpen::AME::MountingInterfaceBuilder::FixingPolicy NXOpen::AME::MountingInterfaceBuilder::FixingPolicy@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::MountingInterfaceBuilder::FixingPolicy FixingType
            (
            );
            /**Sets  the @link NXOpen::AME::MountingInterfaceBuilder::FixingPolicy NXOpen::AME::MountingInterfaceBuilder::FixingPolicy@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFixingType
            (
                NXOpen::AME::MountingInterfaceBuilder::FixingPolicy type /** type */ 
            );
            /**Returns  the @link NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy ReceptacleType
            (
            );
            /**Sets  the @link NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetReceptacleType
            (
                NXOpen::AME::MountingInterfaceBuilder::ReceptaclePolicy receptacleType /** receptacletype */ 
            );
            /**Returns  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the specify point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Point * SpecifyPoint
            (
            );
            /**Sets  the specify point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSpecifyPoint
            (
                NXOpen::Point * specifyPoint /** specifypoint */ 
            );
            /**Returns  the specify line 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::SelectTaggedObject * SpecifyLine
            (
            );
            /**Returns  the specify face 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::ScCollector * SpecifyFace
            (
            );
            /**Sets  the specify face 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSpecifyFace
            (
                NXOpen::ScCollector * collector /** collector */ 
            );
            /**Returns  the direction of interface 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Direction * DirectionOfInterface
            (
            );
            /**Sets  the direction of interface 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDirectionOfInterface
            (
                NXOpen::Direction * directionOfInterface /** directionofinterface */ 
            );
            /**Returns  the parallel reference object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Direction * ParallelReferenceObject
            (
            );
            /**Sets  the parallel reference object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetParallelReferenceObject
            (
                NXOpen::Direction * parallelReferenceObject /** parallelreferenceobject */ 
            );
            /** Adds a @link NXOpen::AME::MountingInterface NXOpen::AME::MountingInterface@endlink  object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void AddInterface
            (
            );
            /** Delete input @link NXOpen::AME::MountingInterface NXOpen::AME::MountingInterface@endlink  objects 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void RemoveInterfaces
            (
                const std::vector<NXString> & mountingInterfaces /** mountinginterfaces */ 
            );
            /** Sets input @link NXOpen::AME::MountingInterface NXOpen::AME::MountingInterface@endlink  as default 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDefaultFixingInterface
            (
                const NXString & fixingName /** fixingname */ 
            );
            /** Sets input @link NXOpen::AME::MountingInterface NXOpen::AME::MountingInterface@endlink  as default 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetDefaultFixingInterface
            (
                const char * fixingName /** fixingname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
