#ifndef NXOpen_DISPLAY_POINTCLOUDBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_POINTCLOUDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_PointCloudBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_PointCloudClippingBoxesListItemBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class PointCloudBuilder;
    }
    class Builder;
    namespace Display
    {
        class PointCloudClippingBoxesListItemBuilder;
    }
    namespace Display
    {
        class PointCloudClippingBoxesListItemBuilderList;
    }
    namespace Display
    {
        class _PointCloudBuilderBuilder;
        class PointCloudBuilderImpl;
        /** Represents a @link Display::PointCloudBuilder Display::PointCloudBuilder@endlink .
            @link NXOpen::Display::PointCloud NXOpen::Display::PointCloud@endlink is a cloud object based on an
            imported point data files file (e.g. a POD file from Bentley). The point data
            (list of coordinates) itself won't be stored within NX part file but an object
            ("Reference Point Cloud") is created which references to the point data file
            and stores several meta data like clipping areas, display and current location.
            When loaded the point cloud will be visible as defined in the object parameters.
            Access to the point cloud like display, measurement, blanking/showing, sectioning,
            POD file loading will requires license checkout of the new basic point cloud 
            license. For deleting a Reference Point Cloud object the license is not required.
             <br> To create a new instance of this class, use @link NXOpen::Display::PointCloudCollection::CreatePointCloudBuilder  NXOpen::Display::PointCloudCollection::CreatePointCloudBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        LoadPointDataWithPart </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        PointBrightnessMode </td> <td> 
         
        Uniform </td> </tr> 

        <tr><td> 
         
        PointColorMode </td> <td> 
         
        Individual </td> </tr> 

        <tr><td> 
         
        PointDensity </td> <td> 
         
        100.0 </td> </tr> 

        <tr><td> 
         
        PointSize </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  PointCloudBuilder : public NXOpen::Builder
        {
            /** Specifies point cloud color display mode choice. */
            public: enum ColorModes
            {
                ColorModesIndividual/** individual */,
                ColorModesUniform/** uniform */
            };

            /** Specifies point cloud brightness display mode choice. */
            public: enum BrightnessModes
            {
                BrightnessModesUniform/** uniform */,
                BrightnessModesShaded/** Shaded */
            };

            private: PointCloudBuilderImpl * m_pointcloudbuilder_impl;
            private: friend class  _PointCloudBuilderBuilder;
            protected: PointCloudBuilder();
            public: ~PointCloudBuilder();
            /**Returns  the point cloud data file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PointDataFile
            (
            );
            /**Sets  the point cloud data file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetPointDataFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the point cloud data file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            void SetPointDataFile
            (
                const char * filename /** filename */ 
            );
            /** Loads the selected point cloud data now. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void LoadPointData
            (
            );
            /**Returns  the indication if the point cloud data will be loaded with part load. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool LoadPointDataWithPart
            (
            );
            /**Sets  the indication if the point cloud data will be loaded with part load. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetLoadPointDataWithPart
            (
                bool loadPointDataWithPart /** loadpointdatawithpart */ 
            );
            /**Returns  the list of @link NXOpen::Display::PointCloudClippingBoxesListItemBuilder NXOpen::Display::PointCloudClippingBoxesListItemBuilder@endlink  defining the clipping boxes parameters. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::PointCloudClippingBoxesListItemBuilderList * ClippingBoxesList
            (
            );
            /**Returns  the point color display mode 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::PointCloudBuilder::ColorModes PointColorMode
            (
            );
            /**Sets  the point color display mode 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetPointColorMode
            (
                NXOpen::Display::PointCloudBuilder::ColorModes pointColorMode /** pointcolormode */ 
            );
            /**Returns  the point brightness display mode 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::PointCloudBuilder::BrightnessModes PointBrightnessMode
            (
            );
            /**Sets  the point brightness display mode 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetPointBrightnessMode
            (
                NXOpen::Display::PointCloudBuilder::BrightnessModes pointBrightnessMode /** pointbrightnessmode */ 
            );
            /**Returns  the point size 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int PointSize
            (
            );
            /**Sets  the point size 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetPointSize
            (
                int pointSize /** pointsize */ 
            );
            /**Returns  the point density 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double PointDensity
            (
            );
            /**Sets  the point density 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetPointDensity
            (
                double pointDensity /** pointdensity */ 
            );
            /** Creates a @link Display::PointCloudClippingBoxesListItemBuilder Display::PointCloudClippingBoxesListItemBuilder@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: NXOpen::Display::PointCloudClippingBoxesListItemBuilder * CreateClippingBoxesListItemBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
