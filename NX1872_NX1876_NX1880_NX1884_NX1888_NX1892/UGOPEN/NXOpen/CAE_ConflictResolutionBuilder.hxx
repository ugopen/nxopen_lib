#ifndef NXOpen_CAE_CONFLICTRESOLUTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_CONFLICTRESOLUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ConflictResolutionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ConflictResolutionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class _ConflictResolutionBuilderBuilder;
        class ConflictResolutionBuilderImpl;
        /** Represents a @link NXOpen::CAE::ConflictResolutionBuilder NXOpen::CAE::ConflictResolutionBuilder@endlink  builder which can resolve conflicts between the two input BCs by a specified rule  <br> To create a new instance of this class, use @link NXOpen::CAE::SimSolution::CreateConflictResolutionBuilder  NXOpen::CAE::SimSolution::CreateConflictResolutionBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ConflictResolutionBuilder : public NXOpen::Builder
        {
            /**  Conflict Resolution Rule */
            public: enum Rule
            {
                RuleApplyFirstBc/** apply first BC on the intersection  */,
                RuleApplySecondBc/** apply second BC on the intersection  */,
                RuleAverageDofValues/** average dof values on the intersection  */,
                RuleAddDofValues/** add dof values on the intersection  */,
                RuleSpecifyDofValues/** specify dof values on the intersection  */,
                RuleIgnoreConflict/** ignore the conflict */,
                RuleApplyOverride/** apply override recipe on the intersection  */
            };

            private: ConflictResolutionBuilderImpl * m_conflictresolutionbuilder_impl;
            private: friend class  _ConflictResolutionBuilderBuilder;
            protected: ConflictResolutionBuilder();
            public: ~ConflictResolutionBuilder();
            /**Returns  the new BC's property table which can be used to update its property 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns  the resolution rule which will be used to resolve the conflict between the two input BCs 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ConflictResolutionBuilder::Rule ResolveRule
            (
            );
            /**Sets  the resolution rule which will be used to resolve the conflict between the two input BCs 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetResolveRule
            (
                NXOpen::CAE::ConflictResolutionBuilder::Rule resolutionRule /** resolutionrule */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
