#ifndef NXOpen_GENERATETESTSUITEFROMHEADERBUILDER_HXX_INCLUDED
#define NXOpen_GENERATETESTSUITEFROMHEADERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GenerateTestSuiteFromHeaderBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class GenerateTestSuiteFromHeaderBuilder;
    class Builder;
    class _GenerateTestSuiteFromHeaderBuilderBuilder;
    class GenerateTestSuiteFromHeaderBuilderImpl;

    /// \cond NX_NO_DOC 
    /**
        This class it only to make dialog memory work.
         <br> To create a new instance of this class, use @link NXOpen::DebugSession::CreateTestSuiteBuilder  NXOpen::DebugSession::CreateTestSuiteBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    CheckWorldBetweenSubTest </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    CloseAllPartsBetweenSubTest </td> <td> 
     
    DoNotCloseAllParts </td> </tr> 

    <tr><td> 
     
    ContinueOnSubTestFailure </td> <td> 
     
    StopOnFailure </td> </tr> 

    <tr><td> 
     
    SetUp </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    SubTestSetUp </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    SubTestTearDown </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    TearDown </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    UndoToSetMarkBetweenSubTest </td> <td> 
     
    0 </td> </tr> 

    </table>  

     <br>  Created in NX10.0.0.  <br>  
    */
    class NXOPENDEBUGSESSIONCPPEXPORT  GenerateTestSuiteFromHeaderBuilder : public NXOpen::Builder
    {
        /** TODO: Add documentation for this enum and each of its members*/
        public: enum ContinueIfSubTestFailTypes
        {
            ContinueIfSubTestFailTypesStopOnFailure/** stop on failure */ ,
            ContinueIfSubTestFailTypesContinueOnFailure/** continue on failure */ ,
            ContinueIfSubTestFailTypesResetAndContinueOnFailure/** reset and continue on failure */ 
        };

        /** TODO: Add documentation for this enum and each of its members*/
        public: enum CloseAllPartsBetweenSubTestsTypes
        {
            CloseAllPartsBetweenSubTestsTypesDoNotCloseAllParts/** do not close all parts */ ,
            CloseAllPartsBetweenSubTestsTypesVerifyThenCloseParts/** verify then close parts */ ,
            CloseAllPartsBetweenSubTestsTypesSkipVerificationCloseParts/** skip verification close parts */ 
        };

        private: GenerateTestSuiteFromHeaderBuilderImpl * m_generatetestsuitefromheaderbuilder_impl;
        private: friend class  _GenerateTestSuiteFromHeaderBuilderBuilder;
        protected: GenerateTestSuiteFromHeaderBuilder();
        public: ~GenerateTestSuiteFromHeaderBuilder();
        /**Returns  the base class name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: NXString BaseClassName
        (
        );
        /**Sets  the base class name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetBaseClassName
        (
            const NXString & baseClassName /** baseclassname */ 
        );
        /**Sets  the base class name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        void SetBaseClassName
        (
            const char * baseClassName /** baseclassname */ 
        );
        /**Returns  the test suite name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: NXString TestSuiteName
        (
        );
        /**Sets  the test suite name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTestSuiteName
        (
            const NXString & testSuiteName /** testsuitename */ 
        );
        /**Sets  the test suite name 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        void SetTestSuiteName
        (
            const char * testSuiteName /** testsuitename */ 
        );
        /**Returns  the set up 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool SetUp
        (
        );
        /**Sets  the set up 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSetUp
        (
            bool setUp /** setup */ 
        );
        /**Returns  the tear down 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool TearDown
        (
        );
        /**Sets  the tear down 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTearDown
        (
            bool tearDown /** teardown */ 
        );
        /**Returns  the sub test set up 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool SubTestSetUp
        (
        );
        /**Sets  the sub test set up 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSubTestSetUp
        (
            bool subTestSetUp /** subtestsetup */ 
        );
        /**Returns  the sub test tear down 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool SubTestTearDown
        (
        );
        /**Sets  the sub test tear down 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSubTestTearDown
        (
            bool subTestTearDown /** subtestteardown */ 
        );
        /**Returns  the continue on sub test failure 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::GenerateTestSuiteFromHeaderBuilder::ContinueIfSubTestFailTypes ContinueOnSubTestFailure
        (
        );
        /**Sets  the continue on sub test failure 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetContinueOnSubTestFailure
        (
            NXOpen::GenerateTestSuiteFromHeaderBuilder::ContinueIfSubTestFailTypes continueOnSubTestFailure /** continueonsubtestfailure */ 
        );
        /**Returns  the check world between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool CheckWorldBetweenSubTest
        (
        );
        /**Sets  the check world between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCheckWorldBetweenSubTest
        (
            bool checkWorldBetweenSubTest /** checkworldbetweensubtest */ 
        );
        /**Returns  the close all parts between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::GenerateTestSuiteFromHeaderBuilder::CloseAllPartsBetweenSubTestsTypes CloseAllPartsBetweenSubTest
        (
        );
        /**Sets  the close all parts between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCloseAllPartsBetweenSubTest
        (
            NXOpen::GenerateTestSuiteFromHeaderBuilder::CloseAllPartsBetweenSubTestsTypes closeAllPartsBetweenSubTest /** closeallpartsbetweensubtest */ 
        );
        /**Returns  the undo to set mark between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: bool UndoToSetMarkBetweenSubTest
        (
        );
        /**Sets  the undo to set mark between sub test 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUndoToSetMarkBetweenSubTest
        (
            bool undoToSetMarkBetweenSubTest /** undotosetmarkbetweensubtest */ 
        );
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
