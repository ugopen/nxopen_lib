#ifndef NXOpen_MFG_AM_LIBRARY_HXX_INCLUDED
#define NXOpen_MFG_AM_LIBRARY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_Library.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_ProfileObject.hxx>
#include <NXOpen/Mfg_AM_ProfileObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class Library;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class ProfileObject;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class _LibraryBuilder;
            class LibraryImpl;
            /** Interface for Services Profile Library objects  <br> To obtain an instance of this class use @link NXOpen::Mfg::AM::ApplicationManager NXOpen::Mfg::AM::ApplicationManager@endlink .  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class MFGAMOPENCPPEXPORT  Library : public NXOpen::Mfg::AM::ProfileObject
            {
                private: LibraryImpl * m_library_impl;
                private: friend class  _LibraryBuilder;
                protected: Library();
                public: ~Library();
                /** Adds a Library  @return  the new library 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::Library * AddLibrary
                (
                );
                /** Adds a Profile Library  @return  the new profile library 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::Library * AddProfileLibrary
                (
                );
                /** Adds a Support Library  @return  the new support library 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::Library * AddSupportLibrary
                (
                );
                /** Adds a New Profile  @return  the new profile 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::ProfileObject * AddNewProfile
                (
                );
                /** Imports a New Profile 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ImportNewProfile
                (
                    const NXString & mmcgFileName /** mmcgfilename */ ,
                    const NXString & profileName /** profilename */ 
                );
                /** Imports a New Profile 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                bool ImportNewProfile
                (
                    const char * mmcgFileName /** mmcgfilename */ ,
                    const char * profileName /** profilename */ 
                );
                /** Gets all the children Libraries   @return  the libraries 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::AM::Library *> GetChildLibraries
                (
                );
                /** Gets the children Profiles of the Library  @return  the profiles 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::AM::ProfileObject *> GetChildProfiles
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
