#ifndef NXOpen_AME_PROPERTYEVALUATORBUILDER_HXX_INCLUDED
#define NXOpen_AME_PROPERTYEVALUATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PropertyEvaluatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_BaseEvaluatorBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PropertyEvaluatorBuilder;
    }
    namespace AME
    {
        class BaseEvaluatorBuilder;
    }
    namespace AME
    {
        class _PropertyEvaluatorBuilderBuilder;
        class PropertyEvaluatorBuilderImpl;
        /** Evaluates the property of an object given a category and property  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreatePropertyEvaluatorBuilder  NXOpen::AME::AMEManager::CreatePropertyEvaluatorBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PropertyEvaluatorBuilder : public NXOpen::AME::BaseEvaluatorBuilder
        {
            private: PropertyEvaluatorBuilderImpl * m_propertyevaluatorbuilder_impl;
            private: friend class  _PropertyEvaluatorBuilderBuilder;
            protected: PropertyEvaluatorBuilder();
            public: ~PropertyEvaluatorBuilder();
            /**Returns  the category name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString CategoryName
            (
            );
            /**Sets  the category name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCategoryName
            (
                const NXString & categoryName /** categoryname */ 
            );
            /**Sets  the category name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetCategoryName
            (
                const char * categoryName /** categoryname */ 
            );
            /**Returns  the property name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString PropertyName
            (
            );
            /**Sets  the property name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPropertyName
            (
                const NXString & propertyName /** propertyname */ 
            );
            /**Sets  the property name given by the user 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPropertyName
            (
                const char * propertyName /** propertyname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
