#ifndef NXOpen_GEOMETRICUTILITIES_UVMAPPING_MAKESYMMETRICPARAMETERIZATIONDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_UVMAPPING_MAKESYMMETRICPARAMETERIZATIONDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_UVMapping_MakeSymmetricParameterizationData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        namespace UVMapping
        {
            class MakeSymmetricParameterizationData;
        }
    }
    class Builder;
    class Point;
    class SelectNXObject;
    namespace GeometricUtilities
    {
        namespace UVMapping
        {
            class _MakeSymmetricParameterizationDataBuilder;
            class MakeSymmetricParameterizationDataImpl;
            /** Make UV parameterization symmetric.  <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::UVMapping::UVMappingCollection::CreateMakeSymmetricParameterizationData  NXOpen::GeometricUtilities::UVMapping::UVMappingCollection::CreateMakeSymmetricParameterizationData @endlink  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_GEOMETRICUTILITIESEXPORT  MakeSymmetricParameterizationData : public NXOpen::Builder
            {
                /** Options to make parameterization symmetric about. */
                public: enum Types
                {
                    TypesSymmetryInU/** Symmetric about U */,
                    TypesSymmetryInV/** Symmetric about V */
                };

                private: MakeSymmetricParameterizationDataImpl * m_makesymmetricparameterizationdata_impl;
                private: friend class  _MakeSymmetricParameterizationDataBuilder;
                protected: MakeSymmetricParameterizationData();
                public: ~MakeSymmetricParameterizationData();
                /**Returns  the type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::UVMapping::MakeSymmetricParameterizationData::Types Type
                (
                );
                /**Sets  the type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetType
                (
                    NXOpen::GeometricUtilities::UVMapping::MakeSymmetricParameterizationData::Types type /** type */ 
                );
                /**Returns  the uv patches 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * UVPatches
                (
                );
                /**Returns  the point of symmetry. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * Point
                (
                );
                /**Sets  the point of symmetry. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetPoint
                (
                    NXOpen::Point * point0 /** point0 */ 
                );
                /**Returns  the reverse direction 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection
                (
                );
                /**Sets  the reverse direction 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetReverseDirection
                (
                    bool reverseDirection /** reversedirection */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
