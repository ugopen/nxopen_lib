#ifndef NXOpen_DISPLAY_DATUMPLANEGRIDBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_DATUMPLANEGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_DatumPlaneGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_BoundedGridBuilder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class DatumPlaneGridBuilder;
    }
    class DatumPlane;
    namespace Display
    {
        class BoundedGridBuilder;
    }
    namespace Display
    {
        class _DatumPlaneGridBuilderBuilder;
        class DatumPlaneGridBuilderImpl;
        /** Represents the builder for adding a datum plane grid @link NXOpen::Display::DatumPlaneGrid NXOpen::Display::DatumPlaneGrid@endlink  
                to a datum plane.
             <br> To create a new instance of this class, use @link NXOpen::Display::GridCollection::CreateDatumPlaneGridBuilder  NXOpen::Display::GridCollection::CreateDatumPlaneGridBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associative </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        GridOrientation </td> <td> 
         
        Custom </td> </tr> 

        <tr><td> 
         
        LabelReference </td> <td> 
         
        Local </td> </tr> 

        <tr><td> 
         
        MajorLineSpacing </td> <td> 
         
        100 (millimeters part), 1 (inches part) </td> </tr> 

        <tr><td> 
         
        MajorLineStyle </td> <td> 
         
        Solid </td> </tr> 

        <tr><td> 
         
        MajorLineWeight </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        MinorLineStyle </td> <td> 
         
        Dashed </td> </tr> 

        <tr><td> 
         
        MinorLineWeight </td> <td> 
         
        Thin </td> </tr> 

        <tr><td> 
         
        MinorLinesPerMajor </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Show </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ShowLabel </td> <td> 
         
        Always </td> </tr> 

        <tr><td> 
         
        ShowMajorLines </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ShowOnTop </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SnapPointsPerMinor </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SnapToGrid </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  DatumPlaneGridBuilder : public NXOpen::Display::BoundedGridBuilder
        {
            /** Specifies grid orientation option to be used for grid display.
                     */
            public: enum GridOrientationType
            {
                GridOrientationTypeFromDatumPlane/** Grid display matches
                                                                                                datum plane display */,
                GridOrientationTypeCustom/** Grid size, location, and
                                                                                       orientation can be customized 
                                                                                       using the manipulator controls */
            };

            private: DatumPlaneGridBuilderImpl * m_datumplanegridbuilder_impl;
            private: friend class  _DatumPlaneGridBuilderBuilder;
            protected: DatumPlaneGridBuilder();
            public: ~DatumPlaneGridBuilder();
            /** Get the list of datum planes.  @return  datum plane list 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DatumPlane *> GetDatumPlanes
            (
            );
            /** Set the list of datum planes.  When editing an existing datum plane grid, 
                        only a single datum plane may be set and it must meet the following conditions:
                        - one that currently does not have a grid associated to it
                        - one that matches @link NXOpen::Display::DatumPlaneGridBuilder::GetDatumPlanes NXOpen::Display::DatumPlaneGridBuilder::GetDatumPlanes@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDatumPlanes
            (
                const std::vector<NXOpen::DatumPlane *> & datumPlanes /** datum plane list */
            );
            /**Returns  the grid orientation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DatumPlaneGridBuilder::GridOrientationType GridOrientation
            (
            );
            /**Sets  the grid orientation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGridOrientation
            (
                NXOpen::Display::DatumPlaneGridBuilder::GridOrientationType gridOrientation /** gridorientation */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
