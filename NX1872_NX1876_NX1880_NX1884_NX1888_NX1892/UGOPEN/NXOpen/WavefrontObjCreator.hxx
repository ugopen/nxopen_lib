#ifndef NXOpen_WAVEFRONTOBJCREATOR_HXX_INCLUDED
#define NXOpen_WAVEFRONTOBJCREATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     WavefrontObjCreator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class WavefrontObjCreator;
    class Builder;
    class ObjectSelector;
    class _WavefrontObjCreatorBuilder;
    class WavefrontObjCreatorImpl;
    /**
        Represents a @link NXOpen::WavefrontObjCreator NXOpen::WavefrontObjCreator@endlink  to be used when exporting the OBJ Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit().  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateWavefrontObjCreator  NXOpen::DexManager::CreateWavefrontObjCreator @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    AngularTolerance </td> <td> 
     
    18.0 </td> </tr> 

    <tr><td> 
     
    ChordalTolerance </td> <td> 
     
    0.08 (millimeters part), 0.003 (inches part) </td> </tr> 

    <tr><td> 
     
    ExportFrom </td> <td> 
     
    DisplayPart </td> </tr> 

    <tr><td> 
     
    ExportUnits </td> <td> 
     
    Millimeters </td> </tr> 

    </table>  

     <br>  Created in NX1872.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  WavefrontObjCreator : public NXOpen::Builder
    {
        /** Export from options */
        public: enum ExportFromOption
        {
            ExportFromOptionDisplayPart/**  export data from displayed part */,
            ExportFromOptionExistingPart/**  export data from existing part which is on disk */
        };

        /** Units of the the OBJ file. */
        public: enum UnitsEnum
        {
            UnitsEnumMillimeters/** millimeters */ ,
            UnitsEnumInches/** inches */ ,
            UnitsEnumMeters/** meters */ ,
            UnitsEnumCentimeters/** centimeters */ ,
            UnitsEnumFeet/** feet */ ,
            UnitsEnumMicrons/** microns */ 
        };

        private: WavefrontObjCreatorImpl * m_wavefrontobjcreator_impl;
        private: friend class  _WavefrontObjCreatorBuilder;
        protected: WavefrontObjCreator();
        public: ~WavefrontObjCreator();
        /**Returns  the export from - this option will determine if data from display part or existing part is exported 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::WavefrontObjCreator::ExportFromOption ExportFrom
        (
        );
        /**Sets  the export from - this option will determine if data from display part or existing part is exported 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportFrom
        (
            NXOpen::WavefrontObjCreator::ExportFromOption exportFrom /** exportfrom */ 
        );
        /**Returns  the inputFile - the data to be exported will be read from this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXString InputFile
        (
        );
        /**Sets  the inputFile - the data to be exported will be read from this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetInputFile
        (
            const NXString & inputFile /** inputfile */ 
        );
        /**Sets  the inputFile - the data to be exported will be read from this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        void SetInputFile
        (
            const char * inputFile /** inputfile */ 
        );
        /**Returns  the export selection block - the object selection will be done by this block. 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectSelector * ExportSelectionBlock
        (
        );
        /**Returns  the chordal tolerance option - will determine how precise xt brep is tessellated 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: double ChordalTolerance
        (
        );
        /**Sets  the chordal tolerance option - will determine how precise xt brep is tessellated 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetChordalTolerance
        (
            double chordalTolerance /** chordaltolerance */ 
        );
        /**Returns  the angular tolerance option - will determine how precise xt brep is tessellated 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: double AngularTolerance
        (
        );
        /**Sets  the angular tolerance option - will determine how precise xt brep is tessellated 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAngularTolerance
        (
            double angularTolerance /** angulartolerance */ 
        );
        /**Returns  the outputFile - the exported data will be written to this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the outputFile - the exported data will be written to this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & outputFile /** outputfile */ 
        );
        /**Sets  the outputFile - the exported data will be written to this file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * outputFile /** outputfile */ 
        );
        /**Returns  the units to convert to when exporting OBJ files 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::WavefrontObjCreator::UnitsEnum ExportUnits
        (
        );
        /**Sets  the units to convert to when exporting OBJ files 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetExportUnits
        (
            NXOpen::WavefrontObjCreator::UnitsEnum exportUnits /** exportunits */ 
        );
        /**Returns  the flattenAssemblyStructure - the indicator for whether to flatten assembly structure within the OBJ file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: bool FlattenAssemblyStructure
        (
        );
        /**Sets  the flattenAssemblyStructure - the indicator for whether to flatten assembly structure within the OBJ file 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFlattenAssemblyStructure
        (
            bool flattenAssemblyStructure /** flattenassemblystructure */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
