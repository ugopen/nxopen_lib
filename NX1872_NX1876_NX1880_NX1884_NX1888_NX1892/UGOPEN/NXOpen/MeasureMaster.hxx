#ifndef NXOpen_MEASUREMASTER_HXX_INCLUDED
#define NXOpen_MEASUREMASTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MeasureMaster.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MeasureManager.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class MeasureMaster;
    namespace Features
    {
        class Feature;
    }
    class MeasureElement;
    class _MeasureMasterBuilder;
    class MeasureMasterImpl;
    /** Represents a collector of measure elements  <br> To create an instance of this use 
                        @link NXOpen::MeasureManager NXOpen::MeasureManager@endlink   <br> 
     <br>  Created in NX12.0.1.  <br>  
    */
    class NXOPENCPPEXPORT  MeasureMaster : public NXOpen::Features::Feature
    {
        /** Indicates the kind of connections to be made between selections */
        public: enum Sequence
        {
            SequenceFree/** free */ ,
            SequencePair/** pair */ ,
            SequenceChain/** chain */ ,
            SequenceReference/** reference */ ,
            SequenceReference2/** reference2 */ ,
            SequenceReference3/** reference3 */ 
        };

        private: MeasureMasterImpl * m_measuremaster_impl;
        private: friend class  _MeasureMasterBuilder;
        protected: MeasureMaster();
        public: ~MeasureMaster();
        /**Returns  the measurement sequence type. 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::MeasureMaster::Sequence SequenceType
        (
        );
        /**Sets  the measurement sequence type. 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: void SetSequenceType
        (
            NXOpen::MeasureMaster::Sequence sequenceType /** sequence type */ 
        );
        /** Sets the feature name suffix. 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: void SetNameSuffix
        (
            const NXString & name /** Feature name suffix */
        );
        /** Sets the feature name suffix. 
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        void SetNameSuffix
        (
            const char * name /** Feature name suffix */
        );
        /** Get a particular measurement element.  @return  
         <br>  Created in NX12.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::MeasureElement * GetMeasureElement
        (
            int elementIndex /** the index of the measure element */
        );
        /**Returns  the measurement feature update at timestamp. 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: bool UpdateAtTimestamp
        (
        );
        /**Sets  the measurement feature update at timestamp. 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUpdateAtTimestamp
        (
            bool updateAtTimestamp /** update at timestamp */ 
        );
        /** Fix up modeling parents. 
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void FixupModelingParents
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
