#ifndef NXOpen_AME_DIAGRAMNODEBUILDER_HXX_INCLUDED
#define NXOpen_AME_DIAGRAMNODEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_DiagramNodeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PageObject.hxx>
#include <NXOpen/Diagramming_Node.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class DiagramNodeBuilder;
    }
    namespace AME
    {
        class PageObject;
    }
    class Builder;
    namespace Diagramming
    {
        class Node;
    }
    class NXObject;
    namespace AME
    {
        class _DiagramNodeBuilderBuilder;
        class DiagramNodeBuilderImpl;
        /** Represents builder for  Diagramming::Node  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateDiagramNodeBuilder  NXOpen::AME::AMEManager::CreateDiagramNodeBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  DiagramNodeBuilder : public NXOpen::Builder
        {
            private: DiagramNodeBuilderImpl * m_diagramnodebuilder_impl;
            private: friend class  _DiagramNodeBuilderBuilder;
            protected: DiagramNodeBuilder();
            public: ~DiagramNodeBuilder();
            /** Set the symbol location on page. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSymbolLocation
            (
                const NXOpen::Point2d & point /** point */ 
            );
            /** Method to create the Diagramming Node 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Diagramming::Node * CreateDiagramNode
            (
                NXOpen::AME::PageObject * pageObject /** pageobject */ ,
                const NXString & symbolVariantName /** symbolvariantname */ 
            );
            /** Method to create the Diagramming Node 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            NXOpen::Diagramming::Node * CreateDiagramNode
            (
                NXOpen::AME::PageObject * pageObject /** pageobject */ ,
                const char * symbolVariantName /** symbolvariantname */ 
            );
            /** Set the Object for which Node is to be created 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetReferenceObject
            (
                NXOpen::NXObject * objTag /** objtag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
