#ifndef NXOpen_FEATURES_SHEETMETAL_HOLETREATMENTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_HOLETREATMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_HoleTreatmentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class HoleTreatmentBuilder;
        }
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class _HoleTreatmentBuilderBuilder;
            class HoleTreatmentBuilderImpl;
            /** The HoleTreatmentBuilder class is used to manage a builder object for
                    a hole treatment in the flat pattern dialogs. It includes
                    properties and an enumeration type for a flag that indicates whether the
                    global (flat pattern preferences) value is to be used, an enumeration type
                    that indicates what type of hole treatment to apply, and an expression
                    to indicate the diameter value associated with treatment type.
                
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  HoleTreatmentBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                /** Hole Treatment Type */
                public: enum TreatmentType
                {
                    TreatmentTypeNone/** none */ ,
                    TreatmentTypeCentermark/** centermark */ ,
                    TreatmentTypeHoleAndCentermark/** hole and centermark */ 
                };

                private: HoleTreatmentBuilderImpl * m_holetreatmentbuilder_impl;
                private: friend class  _HoleTreatmentBuilderBuilder;
                protected: HoleTreatmentBuilder();
                public: ~HoleTreatmentBuilder();
                /**Returns  the use global toggle value 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseGlobal
                (
                );
                /**Sets  the use global toggle value 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetUseGlobal
                (
                    bool useGlobal /** useglobal */ 
                );
                /**Returns  the treatment type option menu value 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::HoleTreatmentBuilder::TreatmentType Treatment
                (
                );
                /**Sets  the treatment type option menu value 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetTreatment
                (
                    NXOpen::Features::SheetMetal::HoleTreatmentBuilder::TreatmentType treatmentType /** treatmenttype */ 
                );
                /**Returns  the hole diameter value associated with the treatment type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Diameter
                (
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
