#ifndef NXOpen_CAM_MACHINEHEADGROUPBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MACHINEHEADGROUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MachineHeadGroupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class MachineHeadGroupBuilder;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class _MachineHeadGroupBuilderBuilder;
        class MachineHeadGroupBuilderImpl;
        /** Represents a MachineHeadGroup Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::NCGroupCollection::CreateMachineHeadGroupBuilder  NXOpen::CAM::NCGroupCollection::CreateMachineHeadGroupBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  MachineHeadGroupBuilder : public NXOpen::CAM::NCGroupBuilder
        {
            private: MachineHeadGroupBuilderImpl * m_machineheadgroupbuilder_impl;
            private: friend class  _MachineHeadGroupBuilderBuilder;
            protected: MachineHeadGroupBuilder();
            public: ~MachineHeadGroupBuilder();
            /**Returns  the x distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double XDistanceBuilder
            (
            );
            /**Sets  the x distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetXDistanceBuilder
            (
                double xValue /** the x distance value */
            );
            /**Returns  the y distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double YDistanceBuilder
            (
            );
            /**Sets  the y distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetYDistanceBuilder
            (
                double yValue /** the y distance value */
            );
            /**Returns  the z distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double ZDistanceBuilder
            (
            );
            /**Sets  the z distance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetZDistanceBuilder
            (
                double zValue /** the z distance value */
            );
            /**Returns  the i direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double IDirectionBuilder
            (
            );
            /**Sets  the i direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIDirectionBuilder
            (
                double iValue /** the i direction value */
            );
            /**Returns  the j direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double JDirectionBuilder
            (
            );
            /**Sets  the j direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetJDirectionBuilder
            (
                double jValue /** the j direction value */
            );
            /**Returns  the k direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double KDirectionBuilder
            (
            );
            /**Sets  the k direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetKDirectionBuilder
            (
                double kValue /** the k direction value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
