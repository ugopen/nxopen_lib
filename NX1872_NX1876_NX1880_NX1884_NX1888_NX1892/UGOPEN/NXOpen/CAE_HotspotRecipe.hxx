#ifndef NXOpen_CAE_HOTSPOTRECIPE_HXX_INCLUDED
#define NXOpen_CAE_HOTSPOTRECIPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_HotspotRecipe.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class HotspotRecipe;
    }
    class NXObject;
    namespace CAE
    {
        class _HotspotRecipeBuilder;
        class HotspotRecipeImpl;
        /**
            Represents a @link NXOpen::CAE::HotspotRecipe NXOpen::CAE::HotspotRecipe@endlink 
             <br> An instance of this class can be obtained from @link NXOpen::CAE::HotspotRecipeBuilder NXOpen::CAE::HotspotRecipeBuilder@endlink .  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  HotspotRecipe : public NXOpen::NXObject
        {
            private: HotspotRecipeImpl * m_hotspotrecipe_impl;
            private: friend class  _HotspotRecipeBuilder;
            protected: HotspotRecipe();
            public: ~HotspotRecipe();
            /** Resolves recipe on context and returns the hotspot
                        It will return 0 if the recipe is resolved on context. Else it will return non zero.
                    It is user's responsibility to destroy the selection entity object once done 
                    using @link NXOpen::CAE::Hotspot::Delete NXOpen::CAE::Hotspot::Delete@endlink , in order to free up system resources
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ResolveHotspotRecipe
            (
                int pvid /** pvid */ 
            );
            /**
                        Create group from entities in the hotspots resolved on recipe
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateGroup
            (
                int pvid /** pvid */ 
            );
            /**
                        Show the hotspots resolved on recipe
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Show
            (
                int pvid /** pvid */ 
            );
            /**
                        Show Only the hotspots resolved on recipe
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ShowOnly
            (
                int pvid /** pvid */ 
            );
            /**
                        Hide the hotspots resolved on recipe
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Hide
            (
                int pvid /** pvid */ 
            );
            /**
                        Create group from seeds in the hotspots resolved on recipe
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateGroupOfSeed
            (
                int pvid /** pvid */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
