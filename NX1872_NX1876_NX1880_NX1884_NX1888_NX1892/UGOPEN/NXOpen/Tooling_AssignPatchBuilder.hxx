#ifndef NXOpen_TOOLING_ASSIGNPATCHBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_ASSIGNPATCHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_AssignPatchBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class AssignPatchBuilder;
    }
    class Body;
    class Builder;
    class NXColor;
    class SelectBodyList;
    namespace Tooling
    {
        class _AssignPatchBuilderBuilder;
        class AssignPatchBuilderImpl;
        /** Represents a builder to be used to add sheet bodies as patch surfaces or delete patch surfaces.  <br> To create a new instance of this class, use @link NXOpen::Tooling::AssignPatchCollection::CreateBuilder  NXOpen::Tooling::AssignPatchCollection::CreateBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ConvertType </td> <td> 
         
        WithCopies </td> </tr> 

        <tr><td> 
         
        KeepSheet </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  AssignPatchBuilder : public NXOpen::Builder
        {
            /** The types for assigning sheets. */
            public: enum Types
            {
                TypesPatchSurface/** patch surface */ ,
                TypesPartingSurface/** parting surface */ 
            };

            /** The option to convert to have copies or no copies for all selected sheets. */
            public: enum ConvertTypeOption
            {
                ConvertTypeOptionWithCopies/** with copies */ ,
                ConvertTypeOptionNoCopies/** no copies */ 
            };

            private: AssignPatchBuilderImpl * m_assignpatchbuilder_impl;
            private: friend class  _AssignPatchBuilderBuilder;
            protected: AssignPatchBuilder();
            public: ~AssignPatchBuilder();
            /**Returns  the selected surfaces added as patch surfaces or deleted from patch surfaces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * PatchSurfaces
            (
            );
            /**Returns  the option to convert to have copies or no copies for all selected sheets. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::AssignPatchBuilder::ConvertTypeOption ConvertType
            (
            );
            /**Sets  the option to convert to have copies or no copies for all selected sheets. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConvertType
            (
                NXOpen::Tooling::AssignPatchBuilder::ConvertTypeOption convertType /** converttype */ 
            );
            /**Returns  the patch surface color. 
             <br>  Created in NX7.5.5.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * PatchColor
            (
            );
            /**Sets  the patch surface color. 
             <br>  Created in NX7.5.5.  <br>  
             <br> License requirements : None */
            public: void SetPatchColor
            (
                NXOpen::NXColor * patchColor /** patchcolor */ 
            );
            /** Get the defined color of patch surfaces. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Tooling::AssignPatchBuilder::PatchColor Tooling::AssignPatchBuilder::PatchColor@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use Tooling::AssignPatchBuilder::PatchColor instead.") void GetPatchColor
            (
                double* redValue /** red value between 0 and 1 */,
                double* greenValue /** green value between 0 and 1 */,
                double* blueValue /** blue value between 0 and 1 */
            );
            /** Set the defined color of patch surfaces. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Tooling::AssignPatchBuilder::SetPatchColor Tooling::AssignPatchBuilder::SetPatchColor@endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use Tooling::AssignPatchBuilder::SetPatchColor instead.") void SetPatchColor
            (
                double redValue /** red value between 0 and 1 */,
                double greenValue /** green value between 0 and 1 */,
                double blueValue /** blue value between 0 and 1 */
            );
            /**Returns  the parting surface color 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * PartingColor
            (
            );
            /**Sets  the parting surface color 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartingColor
            (
                NXOpen::NXColor * partingColor /** partingcolor */ 
            );
            /**Returns  the flag indicating whether to Keep the sheet body or just delete it when deleting a patch surface. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool KeepSheet
            (
            );
            /**Sets  the flag indicating whether to Keep the sheet body or just delete it when deleting a patch surface. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetKeepSheet
            (
                bool keepSheet /** keepsheet */ 
            );
            /**Returns  the type for editing patch or parting 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::AssignPatchBuilder::Types Type
            (
            );
            /**Sets  the type for editing patch or parting 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::AssignPatchBuilder::Types type /** type */ 
            );
            /** Add selected face to select list. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddSelectFace
            (
                NXOpen::Body * addFace /** face to add to user selected face list */
            );
            /** Get initial patched and parting faces to do delete surface function. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void InitOnEnter
            (
            );
            /** Update initial candidates after changing sheet type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateInitialCandidates
            (
            );
            /** Get all the related sheets in one feature set. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void PrepareAllRemovingSheets
            (
                const std::vector<NXOpen::Body *> & sheets /** The sheets to find their related originals */
            );
            /** Clear the m_addingCandidates list. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ClearAddingCandidates
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
