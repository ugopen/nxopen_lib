#ifndef NXOpen_FEATURES_SHIPDESIGN_DRAWINGPARTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_DRAWINGPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_DrawingPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_DrawingSheetBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class DrawingPartBuilder;
        }
    }
    namespace Drawings
    {
        class DrawingSheet;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class DrawingSheetBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class DrawingSheetBuilderList;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _DrawingPartBuilderBuilder;
            class DrawingPartBuilderImpl;
            /** Represents a @link NXOpen::Features::ShipDesign::DrawingPartBuilder NXOpen::Features::ShipDesign::DrawingPartBuilder@endlink .
                    This class is used to define a drawing part in Ship Section Drawing command, in this case user can define 
                    the drawing part manually as he want.
                    Originally, we use a @link NXOpen::Features::ShipDesign::SectionDrawingBuilder NXOpen::Features::ShipDesign::SectionDrawingBuilder@endlink  class and a list of @link NXOpen::Features::ShipDesign::SectionViewBuilder NXOpen::Features::ShipDesign::SectionViewBuilder@endlink  
                    and the command will calculate the arrangement (like how many drawing parts/draw sheets need to create and which view in which sheet ) 
                    automatically. User can't define which view in which sheet.

                     @code 
                    In this project we make user has ability to define the arrangement in a tree like
                    Drawing Part1
                    |- Drawing Sheet1
                          |-View1
                          |-View2
                    |- Drawing Sheet2
                          |- View3
                          |- View4
                    Drawing Part2
                    | - Drawing Sheet1
                          |- View5
                          |- View6
                     @endcode 

                    So we add @link NXOpen::Features::ShipDesign::DrawingPartBuilder NXOpen::Features::ShipDesign::DrawingPartBuilder@endlink  and @link NXOpen::Features::ShipDesign::DrawingSheetBuilder NXOpen::Features::ShipDesign::DrawingSheetBuilder@endlink  between them and make them has structure as below:
                    @link NXOpen::Features::ShipDesign::SectionDrawingBuilder NXOpen::Features::ShipDesign::SectionDrawingBuilder@endlink 
                        @link NXOpen::Features::ShipDesign::DrawingPartBuilder NXOpen::Features::ShipDesign::DrawingPartBuilder@endlink 
                            @link NXOpen::Features::ShipDesign::DrawingSheetBuilder NXOpen::Features::ShipDesign::DrawingSheetBuilder@endlink 
                                @link NXOpen::Features::ShipDesign::SectionViewBuilder NXOpen::Features::ShipDesign::SectionViewBuilder@endlink 

                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipDesign::SectionDrawingBuilder::CreateDrawingPartBuilder  NXOpen::Features::ShipDesign::SectionDrawingBuilder::CreateDrawingPartBuilder @endlink  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  DrawingPartBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                private: DrawingPartBuilderImpl * m_drawingpartbuilder_impl;
                private: friend class  _DrawingPartBuilderBuilder;
                protected: DrawingPartBuilder();
                public: ~DrawingPartBuilder();
                /**Returns  the drawing name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString DrawingName
                (
                );
                /**Sets  the drawing name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetDrawingName
                (
                    const NXString & drawingName /** drawingname */ 
                );
                /**Sets  the drawing name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                void SetDrawingName
                (
                    const char * drawingName /** drawingname */ 
                );
                /** Creates a @link NXOpen::Features::ShipDesign::DrawingSheetBuilder NXOpen::Features::ShipDesign::DrawingSheetBuilder@endlink  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: NXOpen::Features::ShipDesign::DrawingSheetBuilder * CreateDrawingSheetBuilder
                (
                    NXOpen::Drawings::DrawingSheet * drawingSheet /** drawingsheet */ 
                );
                /**Returns  the drawing sheet list 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::DrawingSheetBuilderList * DrawingSheetList
                (
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
