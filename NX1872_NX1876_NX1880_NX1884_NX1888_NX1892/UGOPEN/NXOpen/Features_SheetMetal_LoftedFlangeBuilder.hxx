#ifndef NXOpen_FEATURES_SHEETMETAL_LOFTEDFLANGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_LOFTEDFLANGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_LoftedFlangeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_SheetMetal_BendOptions.hxx>
#include <NXOpen/Features_SheetMetal_SheetmetalBaseBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class LoftedFlangeBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        namespace SheetMetal
        {
            class BendOptions;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalBaseBuilder;
        }
    }
    namespace Features
    {
        class SketchFeature;
    }
    class Section;
    namespace Features
    {
        namespace SheetMetal
        {
            class _LoftedFlangeBuilderBuilder;
            class LoftedFlangeBuilderImpl;
            /** Represents a Lofted Flange feature builder.  <br> To create a new instance of this class, use @link NXOpen::Features::SheetMetal::SheetmetalManager::CreateLoftedFlangeFeatureBuilder  NXOpen::Features::SheetMetal::SheetmetalManager::CreateLoftedFlangeFeatureBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            IndexMarkLength.Value </td> <td> 
             
            5 (millimeters part), 0.5 (inches part) </td> </tr> 

            <tr><td> 
             
            NumberOfBendSegments </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            UseSegmentedBends </td> <td> 
             
            0 </td> </tr> 

            </table>  

             <br>  Created in NX4.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  LoftedFlangeBuilder : public NXOpen::Features::SheetMetal::SheetmetalBaseBuilder
            {
                /** This enum represents the side of the section that the lofted flange creates thickness. The "left" option
                        represents the side to the left of a person who is walking along the section in the direction of its curves
                        when the section normal is pointing up. The "right" option represents the person's right hand side.
                        This interpretation is the same regardless of whether the section is open or closed. The "right" side at any point
                        along the section can also be represented by the vector resulting from the cross product of the curve tangent
                        (of the section curve at that point) and the section normal. The "left" side is the opposite.
                        */
                public: enum SectionSideOptions
                {
                    SectionSideOptionsLeft/** Side pointed to by the inverse of the tangent cross normal vector */,
                    SectionSideOptionsRight/** Side pointed to by the tangent cross normal vector */
                };

                private: LoftedFlangeBuilderImpl * m_loftedflangebuilder_impl;
                private: friend class  _LoftedFlangeBuilderBuilder;
                protected: LoftedFlangeBuilder();
                public: ~LoftedFlangeBuilder();
                /**Returns  the type of lofted flange feature - base lofted flange/secondary lofted flange. Specify false for base lofted flanges and true for secondary lofted flanges.
                         
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: bool IsSecondary
                (
                );
                /**Sets  the type of lofted flange feature - base lofted flange/secondary lofted flange. Specify false for base lofted flanges and true for secondary lofted flanges.
                         
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetSecondary
                (
                    bool isSecondary /** is secondary */ 
                );
                /**Returns  the start section of the lofted flange. The section profile should be open looped.
                        
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Section * StartSection
                (
                );
                /**Sets  the start section of the lofted flange. The section profile should be open looped.
                        
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSection
                (
                    NXOpen::Section * startSection /** start section */ 
                );
                /**Returns  the start/end point of the start section.It can be start/end point of the section profile.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Point3d StartSectionPoint
                (
                );
                /**Sets  the start/end point of the start section.It can be start/end point of the section profile.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSectionPoint
                (
                    const NXOpen::Point3d & point /** point*/
                );
                /**Returns  the end section of the lofted flange.The section profile should be open looped.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Section * EndSection
                (
                );
                /**Sets  the end section of the lofted flange.The section profile should be open looped.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSection
                (
                    NXOpen::Section * endSection /** end section */ 
                );
                /**Returns  the start/end point of the end section.It can be start/end point of the section profile.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Point3d EndSectionPoint
                (
                );
                /**Sets  the start/end point of the end section.It can be start/end point of the section profile.
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSectionPoint
                (
                    const NXOpen::Point3d & point /** point*/
                );
                /** The thickness  of base lofted flange.Applicable only for Base lofted flange. Ignored for a Secondary Lofted Flange. @return  
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Expression * GetThickness
                (
                );
                /** The thickness  of base lofted flange.Applicable only for Base lofted flange. Ignored for a Secondary Lofted Flange.
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink  on the @link Expression Expression@endlink  object returned from @link Features::SheetMetal::LoftedFlangeBuilder::GetThickness Features::SheetMetal::LoftedFlangeBuilder::GetThickness@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NX_DEPRECATED("Deprecated in NX10.0.0.  Use Expression::SetRightHandSide on the Expression object returned from Features::SheetMetal::LoftedFlangeBuilder::GetThickness instead.") void SetThickness
                (
                    const NXString & thickness /** thickness */ 
                );
                /** The thickness  of base lofted flange.Applicable only for Base lofted flange. Ignored for a Secondary Lofted Flange.
                 <br>  @deprecated Deprecated in NX10.0.0.  Use @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink  on the @link Expression Expression@endlink  object returned from @link Features::SheetMetal::LoftedFlangeBuilder::GetThickness Features::SheetMetal::LoftedFlangeBuilder::GetThickness@endlink  instead. <br>  

                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                void SetThickness
                (
                    const char * thickness /** thickness */ 
                );
                /**Returns  the thickness side of base lofted flange.
                        
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::LoftedFlangeBuilder::SectionSideOptions ThicknessSide
                (
                );
                /**Sets  the thickness side of base lofted flange.
                        
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetThicknessSide
                (
                    NXOpen::Features::SheetMetal::LoftedFlangeBuilder::SectionSideOptions thickSide /** thick side */ 
                );
                /**Returns  the bend options object.

                        Get the bend options object which is created while creating builder. Then set values to parameters of
                        bend options object(like bend radius, bend relief type etc.) using set methods of bend options object.

                        
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::BendOptions * BendOptions
                (
                );
                /**Returns  the start section sketch as slave.

                       Set the sketch which is used to create start section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or start sketch is not required to be slave, set slave sketch as NULL.
                      
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SketchFeature * StartSketch
                (
                );
                /**Sets  the start section sketch as slave.

                       Set the sketch which is used to create start section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or start sketch is not required to be slave, set slave sketch as NULL.
                      
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSketch
                (
                    NXOpen::Features::SketchFeature * slaveStartSketch /** slave start sketch */ 
                );
                /**Returns  the end section sketch as slave.

                       Set the sketch which is used to create end section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or if the end sketch is not required to be slave, set the value as NULL .
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SketchFeature * EndSketch
                (
                );
                /**Sets  the end section sketch as slave.

                       Set the sketch which is used to create end section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or if the end sketch is not required to be slave, set the value as NULL .
                       
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSketch
                (
                    NXOpen::Features::SketchFeature * slaveEndSketch /** slave end sketch */ 
                );
                /** Verify user data validity.

                        If the data is valid, returned value should be 0.


                         @return  Data Validity Flag.
                 <br>  Created in NX4.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: int ValidateBuilderData
                (
                );
                /**Returns   the use multi segment bends 
                        Set use_segmented_bends to true or false and get the same 
                        If use multi segment bends is set to true then lofted flange bend face is gets divided as per the number bend segments mentioned by the user
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseSegmentedBends
                (
                );
                /**Sets   the use multi segment bends 
                        Set use_segmented_bends to true or false and get the same 
                        If use multi segment bends is set to true then lofted flange bend face is gets divided as per the number bend segments mentioned by the user
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetUseSegmentedBends
                (
                    bool useMultiSegmentBends /** usemultisegmentbends */ 
                );
                /**Returns  the number of bend segments 
                         Get and set the number of bend segments
                        If use segmented bends is set to true then only the number of bend segments value is used for dividing the bend even though a value is set
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: int NumberOfBendSegments
                (
                );
                /**Sets  the number of bend segments 
                         Get and set the number of bend segments
                        If use segmented bends is set to true then only the number of bend segments value is used for dividing the bend even though a value is set
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetNumberOfBendSegments
                (
                    int numberOfBendSegments /** numberofbendsegments */ 
                );
                /**Returns  the index mark length 
                        Get the index mark length expression 
                        If use segmented bends is set to true the only the index mark length value 
                        is used for dividing the bend even though a value is set 
                        Index mark length value only gets reflected in flat pattern view
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * IndexMarkLength
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
