#ifndef NXOpen_GATEWAY_MASSVALUEBUILDER_HXX_INCLUDED
#define NXOpen_GATEWAY_MASSVALUEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Gateway_MassValueBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_gateway_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Gateway
    {
        class MassValueBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Gateway
    {
        class _MassValueBuilderBuilder;
        class MassValueBuilderImpl;
        /** Represents a @link NXOpen::Gateway::MassValueBuilder NXOpen::Gateway::MassValueBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Gateway::MassCollection::CreateValueBuilder  NXOpen::Gateway::MassCollection::CreateValueBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Area </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        Density </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        GravityCenterX </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        GravityCenterY </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        GravityCenterZ </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaXX </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaXY </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaXZ </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaYY </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaYZ </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        InertiaZZ </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        Mass </td> <td> 
         
        Unset </td> </tr> 

        <tr><td> 
         
        MassType </td> <td> 
         
        MassOnly </td> </tr> 

        <tr><td> 
         
        Volume </td> <td> 
         
        Unset </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_GATEWAYEXPORT  MassValueBuilder : public NXOpen::Builder
        {
            /**the mass value type */
            public: enum MassTypes
            {
                MassTypesMassOnly/** mass only */ ,
                MassTypesDensityMass/** density mass */ ,
                MassTypesDensityVolume/** density volume */ ,
                MassTypesMassVolume/** mass volume */ 
            };

            /** the value source type*/
            public: enum ValueSourceType
            {
                ValueSourceTypeUnset/** unset */ ,
                ValueSourceTypeComputed/** computed */ ,
                ValueSourceTypeAsserted/** asserted */ ,
                ValueSourceTypeUserDefined1/** user defined1 */ ,
                ValueSourceTypeUserDefined2/** user defined2 */ ,
                ValueSourceTypeUserDefined3/** user defined3 */ ,
                ValueSourceTypeUserDefined4/** user defined4 */ 
            };

            private: MassValueBuilderImpl * m_massvaluebuilder_impl;
            private: friend class  _MassValueBuilderBuilder;
            protected: MassValueBuilder();
            public: ~MassValueBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Objects
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the mass type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::MassTypes MassType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the mass type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMassType
            (
                NXOpen::Gateway::MassValueBuilder::MassTypes massType /** masstype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the mass 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType Mass
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the mass 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMass
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType mass /** mass */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the density 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType Density
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the density 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDensity
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType density /** density */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the volume 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType Volume
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the volume 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVolume
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType volume /** volume */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the area 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType Area
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the area 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetArea
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType area /** area */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the gravity center x 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType GravityCenterX
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the gravity center x 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGravityCenterX
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType gravityCenterX /** gravitycenterx */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the gravity center y 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType GravityCenterY
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the gravity center y 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGravityCenterY
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType gravityCenterY /** gravitycentery */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the gravity center z 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType GravityCenterZ
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the gravity center z 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGravityCenterZ
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType gravityCenterZ /** gravitycenterz */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia xx 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaXX
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia xx 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaXX
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaXX /** inertiaxx */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia yy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaYY
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia yy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaYY
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaYY /** inertiayy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia zz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaZZ
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia zz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaZZ
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaZZ /** inertiazz */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia yz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaYZ
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia yz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaYZ
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaYZ /** inertiayz */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia xz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaXZ
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia xz 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaXZ
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaXZ /** inertiaxz */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the inertia xy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::MassValueBuilder::ValueSourceType InertiaXY
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the inertia xy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInertiaXY
            (
                NXOpen::Gateway::MassValueBuilder::ValueSourceType inertiaXY /** inertiaxy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get the value settings of the root part or user selected object, and save to the builder . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void GetMassValues
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the assignRolledUpAttribute xy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool AssignRolledUpAttribute
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the assignRolledUpAttribute xy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssignRolledUpAttribute
            (
                bool assignRolledUpAttribute /** assignrolledupattribute */ 
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
