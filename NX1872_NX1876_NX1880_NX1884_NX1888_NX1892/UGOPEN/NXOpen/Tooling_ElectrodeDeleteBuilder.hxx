#ifndef NXOpen_TOOLING_ELECTRODEDELETEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_ELECTRODEDELETEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ElectrodeDeleteBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ElectrodeDeleteBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    namespace Tooling
    {
        class _ElectrodeDeleteBuilderBuilder;
        class ElectrodeDeleteBuilderImpl;
        /** Electrode delete component builder to remove blank, pallet and holder from assembly.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ElectrodeDesignCollection::CreateDeleteComponentBuilder  NXOpen::Tooling::ElectrodeDesignCollection::CreateDeleteComponentBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        KeepSize </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ElectrodeDeleteBuilder : public NXOpen::Builder
        {
            /** delete sparking solid from blank or delete blank, pallet or holder directly. */
            public: enum Types
            {
                TypesSparkingBody/** Delete sparking body from electrode.*/,
                TypesComponent/** Delete electrode, holder and pallet.*/
            };

            private: ElectrodeDeleteBuilderImpl * m_electrodedeletebuilder_impl;
            private: friend class  _ElectrodeDeleteBuilderBuilder;
            protected: ElectrodeDeleteBuilder();
            public: ~ElectrodeDeleteBuilder();
            /**Returns  the utility to get sparking solid to delete. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Features::SelectFeatureList * Head
            (
            );
            /**Returns  the utility to get component to delete. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Assemblies::SelectComponentList * Component
            (
            );
            /**Returns  the option to keep blank size after deleting sparking solid. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool KeepSize
            (
            );
            /**Sets  the option to keep blank size after deleting sparking solid. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetKeepSize
            (
                bool keepSize /** keepsize */ 
            );
            /**Returns  the option to round electrode position. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RoundPosition
            (
            );
            /**Sets  the option to round electrode position. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRoundPosition
            (
                bool roundPosition /** roundposition */ 
            );
            /**Returns  the object type to be deleted. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Tooling::ElectrodeDeleteBuilder::Types Type
            (
            );
            /**Sets  the object type to be deleted. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetType
            (
                NXOpen::Tooling::ElectrodeDeleteBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
