#ifndef NXOpen_FEATURES_OFFSETEMBOSSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_OFFSETEMBOSSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_OffsetEmbossBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class OffsetEmbossBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class ScCollector;
    class Section;
    namespace Features
    {
        class _OffsetEmbossBuilderBuilder;
        class OffsetEmbossBuilderImpl;
        /**
             Represents a builder for an offset emboss feature. 
             This allows creation and editing of an offset emboss feature takes a sheet body, a curve or a point at center, 
             and several dimensions to create an offset pad on the target sheet body.
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateOffsetEmbossBuilder  NXOpen::Features::FeatureCollection::CreateOffsetEmbossBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  OffsetEmbossBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Enumeration of center types 
             <br>  Created in NX5.0.0.  <br>  
            */
            public: enum Types
            {
                TypesCurve/** This stands for curve case. */,
                TypesPoint/** This stands for point case. */
            };

            private: OffsetEmbossBuilderImpl * m_offsetembossbuilder_impl;
            private: friend class  _OffsetEmbossBuilderBuilder;
            protected: OffsetEmbossBuilder();
            public: ~OffsetEmbossBuilder();
            /**Returns  the center type 
                    This defines input types: 0 stands for curve case and 1 stands for point case.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::OffsetEmbossBuilder::Types Type
            (
            );
            /**Sets  the center type 
                    This defines input types: 0 stands for curve case and 1 stands for point case.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::OffsetEmbossBuilder::Types type /** type */ 
            );
            /**Returns  the target body to offset 
                    This defines a sheet body to offset emboss. 
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Target
            (
            );
            /**Sets  the target body to offset 
                    This defines a sheet body to offset emboss. 
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTarget
            (
                NXOpen::ScCollector * target /** target */ 
            );
            /**Returns  the center line:
                    An existing curve/path on the sheet that defines the full extent of the offset feature required.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * CenterLine
            (
            );
            /**Returns  the center point:
                    An existing point on the input sheet body is selected as the reference from which the feature is defined.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * CenterPoint
            (
            );
            /**Sets  the center point:
                    An existing point on the input sheet body is selected as the reference from which the feature is defined.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCenterPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the side offset:
                    Offset from pad boundary to define the sidewall draft.
                    This defines an offset distance around all edges of the offset pad 
                    that in conjunction with the offset height determines the amount of sidewall draft.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SideOffset
            (
            );
            /**Returns  the height offset:
                    Distance to offset the input sheet to create the pad.
                    This defines the amount by which the input sheet body is offset to create the pad.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HeightOffset
            (
            );
            /**Returns  the reverse direction:
                    The value of true means that the direction for the feature is reversed from the surface normal 
                    of the target body, or the offset emboss will create a pocket. The value of false for the reverse 
                    direction property means that the offset emboss feature will create a pad. 
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction:
                    The value of true means that the direction for the feature is reversed from the surface normal 
                    of the target body, or the offset emboss will create a pocket. The value of false for the reverse 
                    direction property means that the offset emboss feature will create a pad. 
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool direction /** direction */ 
            );
            /**Returns  the right width: 
                    Width of pad to the right of the path curve.
                    This defines an offset distance (along the input sheet body) away from the curve/path 
                    that defines the extent of the feature. 
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RightWidth
            (
            );
            /**Returns  the left width:
                    Width of pad to the left of the path curve.
                    This defines an offset distance (along the input sheet body) away from the curve/path 
                    that defines the extent of the feature
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * LeftWidth
            (
            );
            /**Returns  the top distance(Only for point case):
                    The top distance defines the extent of the offset pad from the reference point above the point.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TopDistance
            (
            );
            /**Returns  the bottom distance(Only for point case):
                    The bottom distance defines the extent of the offset pad from the reference point below the point.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BottomDistance
            (
            );
            /**Returns  the distance tolerance:
                    The maximum allowable distance between the true theoretical sheet and the body created to approximate it.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance:
                    The maximum allowable distance between the true theoretical sheet and the body created to approximate it.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /**Returns  the angle tolerance:
                    The maximum allowable angle between the true theoretical sheet and the body created to approximate it.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance:
                    The maximum allowable angle between the true theoretical sheet and the body created to approximate it.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angletolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
