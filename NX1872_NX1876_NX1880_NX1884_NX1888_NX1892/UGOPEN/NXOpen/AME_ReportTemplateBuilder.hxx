#ifndef NXOpen_AME_REPORTTEMPLATEBUILDER_HXX_INCLUDED
#define NXOpen_AME_REPORTTEMPLATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ReportTemplateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PageTypes.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ReportTemplateBuilder;
    }
    class Builder;
    namespace AME
    {
        class _ReportTemplateBuilderBuilder;
        class ReportTemplateBuilderImpl;
        /** Class to create Report Template and assign the ReportQuery and Report Layout to them  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateReportTemplateBuilder  NXOpen::AME::AMEManager::CreateReportTemplateBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ReportTemplateBuilder : public NXOpen::Builder
        {
            /** Represents Report type for report Template */
            public: enum ReportType
            {
                ReportTypeListReport/** list report */ ,
                ReportTypeReportsWithTargets/** reports with targets */ ,
                ReportTypeConnectionReports/** connection reports */ 
            };

            private: ReportTemplateBuilderImpl * m_reporttemplatebuilder_impl;
            private: friend class  _ReportTemplateBuilderBuilder;
            protected: ReportTemplateBuilder();
            public: ~ReportTemplateBuilder();
            /**Returns  the Report type of report Template @link NXOpen::AME::ReportTemplateBuilder::ReportType NXOpen::AME::ReportTemplateBuilder::ReportType@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ReportTemplateBuilder::ReportType ReportTemplateType
            (
            );
            /**Sets  the Report type of report Template @link NXOpen::AME::ReportTemplateBuilder::ReportType NXOpen::AME::ReportTemplateBuilder::ReportType@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetReportTemplateType
            (
                NXOpen::AME::ReportTemplateBuilder::ReportType type /** type */ 
            );
            /**Returns  the document type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::PageTypes DocumentType
            (
            );
            /**Sets  the document type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDocumentType
            (
                NXOpen::AME::PageTypes type /** type */ 
            );
            /**Returns  the name of selected form sheet  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString FileBrowserText
            (
            );
            /**Sets  the name of selected form sheet  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFileBrowserText
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of selected form sheet  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetFileBrowserText
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
