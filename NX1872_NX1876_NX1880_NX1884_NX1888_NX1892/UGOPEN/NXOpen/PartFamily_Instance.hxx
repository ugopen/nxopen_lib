#ifndef NXOpen_PARTFAMILY_INSTANCE_HXX_INCLUDED
#define NXOpen_PARTFAMILY_INSTANCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartFamily_Instance.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/PartFamily_Template.hxx>
#include <NXOpen/libnxopencpp_partfamily_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PartFamily
    {
        class Instance;
    }
    namespace PartFamily
    {
        class Template;
    }
    namespace PartFamily
    {
        class _InstanceBuilder;
        class InstanceImpl;
        /**
                Represents an instance of a part family member
             <br> Use @link NXOpen::Part::GetFamilyInstance NXOpen::Part::GetFamilyInstance@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_PARTFAMILYEXPORT  Instance : public NXOpen::TaggedObject
        {
            private: InstanceImpl * m_instance_impl;
            private: friend class  _InstanceBuilder;
            protected: Instance();
            public: ~Instance();
            /**Returns  the @link NXOpen::PartFamily::Template NXOpen::PartFamily::Template@endlink  of instance. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::PartFamily::Template * Family
            (
            );
            /**Returns  the version of instance. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: int Version
            (
            );
            /** Returns whether this instance/member is out of date relative to the definition on the template. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool IsOutOfDate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
