#ifndef NXOpen_DISPLAY_GRIDBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_GRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_GridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_Grid.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class GridBuilder;
    }
    class Builder;
    namespace Display
    {
        class Grid;
    }
    class NXColor;
    namespace Display
    {
        class _GridBuilderBuilder;
        class GridBuilderImpl;
        /** Represents the builder for adding a grid @link NXOpen::Display::Grid NXOpen::Display::Grid@endlink 
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  GridBuilder : public NXOpen::Builder
        {
            /** Specifies line style to be used for major and minor lines of the grid.
                     */
            public: enum LineStyleType
            {
                LineStyleTypeSolid/** solid */ ,
                LineStyleTypeDashed/** dashed */ ,
                LineStyleTypePhantom/** phantom */ ,
                LineStyleTypeCenterline/** centerline */ ,
                LineStyleTypeDotted/** dotted */ ,
                LineStyleTypeLongdash/** longdash */ ,
                LineStyleTypeDotdash/** dotdash */ 
            };

            /** Specifies line weight to be used for major and minor lines of the grid.
                     */
            public: enum LineWeightType
            {
                LineWeightTypeThin/** thin */ ,
                LineWeightTypeNormal/** normal */ ,
                LineWeightTypeThick/** thick */ ,
                LineWeightTypeOne/** one */ ,
                LineWeightTypeTwo/** two */ ,
                LineWeightTypeThree/** three */ ,
                LineWeightTypeFour/** four */ ,
                LineWeightTypeFive/** five */ ,
                LineWeightTypeSix/** six */ ,
                LineWeightTypeSeven/** seven */ ,
                LineWeightTypeEight/** eight */ ,
                LineWeightTypeNine/** nine */ 
            };

            private: GridBuilderImpl * m_gridbuilder_impl;
            private: friend class  _GridBuilderBuilder;
            protected: GridBuilder();
            public: ~GridBuilder();
            /**Returns  the major line spacing 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double MajorLineSpacing
            (
            );
            /**Sets  the major line spacing 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMajorLineSpacing
            (
                double majorLineSpacing /** majorlinespacing */ 
            );
            /**Returns  the minor lines per major 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int MinorLinesPerMajor
            (
            );
            /**Sets  the minor lines per major 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMinorLinesPerMajor
            (
                int minorLinesPerMajor /** minorlinespermajor */ 
            );
            /**Returns  the snap points per minor 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int SnapPointsPerMinor
            (
            );
            /**Sets  the snap points per minor 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSnapPointsPerMinor
            (
                int snapPointsPerMinor /** snappointsperminor */ 
            );
            /**Returns  the line color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * LineColor
            (
            );
            /**Sets  the line color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLineColor
            (
                NXOpen::NXColor * lineColor /** linecolor */ 
            );
            /**Returns  the major line style 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::GridBuilder::LineStyleType MajorLineStyle
            (
            );
            /**Sets  the major line style 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMajorLineStyle
            (
                NXOpen::Display::GridBuilder::LineStyleType majorLineStyle /** majorlinestyle */ 
            );
            /**Returns  the major line weight 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::GridBuilder::LineWeightType MajorLineWeight
            (
            );
            /**Sets  the major line weight 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMajorLineWeight
            (
                NXOpen::Display::GridBuilder::LineWeightType majorLineWeight /** majorlineweight */ 
            );
            /**Returns  the minor line style 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::GridBuilder::LineStyleType MinorLineStyle
            (
            );
            /**Sets  the minor line style 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMinorLineStyle
            (
                NXOpen::Display::GridBuilder::LineStyleType minorLineStyle /** minorlinestyle */ 
            );
            /**Returns  the minor line weight 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::GridBuilder::LineWeightType MinorLineWeight
            (
            );
            /**Sets  the minor line weight 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMinorLineWeight
            (
                NXOpen::Display::GridBuilder::LineWeightType minorLineWeight /** minorlineweight */ 
            );
            /**Returns  the show 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Show
            (
            );
            /**Sets  the show 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShow
            (
                bool show /** show */ 
            );
            /**Returns  the show on top 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowOnTop
            (
            );
            /**Sets  the show on top 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowOnTop
            (
                bool showOnTop /** showontop */ 
            );
            /**Returns  the show major lines 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowMajorLines
            (
            );
            /**Sets  the show major lines 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowMajorLines
            (
                bool showMajorLines /** showmajorlines */ 
            );
            /**Returns  the snap to grid 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool SnapToGrid
            (
            );
            /**Sets  the snap to grid 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSnapToGrid
            (
                bool snapToGrid /** snaptogrid */ 
            );
            /** Inherits the settings from the specified grid. These includes
                        settings such as 
                        @link Display::GridBuilder::MajorLineSpacing Display::GridBuilder::MajorLineSpacing @endlink and @link Display::GridBuilder::SetMajorLineSpacing Display::GridBuilder::SetMajorLineSpacing @endlink .
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void InheritSettings
            (
                NXOpen::Display::Grid * grid /** The grid. NULL is invalid. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
