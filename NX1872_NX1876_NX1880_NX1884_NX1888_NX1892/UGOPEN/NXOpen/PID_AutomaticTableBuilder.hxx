#ifndef NXOpen_PID_AUTOMATICTABLEBUILDER_HXX_INCLUDED
#define NXOpen_PID_AUTOMATICTABLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_AutomaticTableBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Assemblies_Partition.hxx>
#include <NXOpen/Diagramming_Tables_TableBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PDM_SheetRevision.hxx>
#include <NXOpen/PID_PropertyCellRangeBuilder.hxx>
#include <NXOpen/PID_PropertyType.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class AutomaticTableBuilder;
    }
    namespace Assemblies
    {
        class Partition;
    }
    class Builder;
    namespace Diagramming
    {
        namespace Tables
        {
            class TableBuilder;
        }
    }
    namespace PID
    {
        class PropertyCellRangeBuilder;
    }
    namespace PID
    {
        class Sheet;
    }
    namespace PID
    {
        class _AutomaticTableBuilderBuilder;
        class AutomaticTableBuilderImpl;
        /**  @brief  Represents a AutomaticTableBuilder.  

           <br> To create a new instance of this class, use @link NXOpen::PID::PidManager::CreateAutomaticTableBuilder  NXOpen::PID::PidManager::CreateAutomaticTableBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ScopeType </td> <td> 
         
        CurrentSheet </td> </tr> 

        <tr><td> 
         
        StockType </td> <td> 
         
        Pipe </td> </tr> 

        </table>  

         <br>  Created in NX1847.0.0.  <br>  
        */
        class PIDOPENCPPEXPORT  AutomaticTableBuilder : public NXOpen::Builder
        {
            /** Represents the scope type.  
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: enum ScopeTypeOption
            {
                ScopeTypeOptionCurrentSheet/** Lists objects in current sheet */,
                ScopeTypeOptionOtherSheet/** Lists objects in other sheet */,
                ScopeTypeOptionSystem/** Lists objects in specific system */
            };

            /** Represents the object type. 
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: enum ObjectTypeOption
            {
                ObjectTypeOptionEquipment/** Equipment */,
                ObjectTypeOptionInlineEquipment/** Inline quipment, deprecated from nx1872 and combined with @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink .*/,
                ObjectTypeOptionRun/** Run */,
                ObjectTypeOptionPipeStock/** Pipe Stock */
            };

            /** Represents the stock type. 
             <br>  Created in NX1872.0.0.  <br>  
            */
            public: enum StockOption
            {
                StockOptionPipe/** Pipe Stock */,
                StockOptionInstrumentation/** Instrumentation Line Stock*/
            };

            private: AutomaticTableBuilderImpl * m_automatictablebuilder_impl;
            private: friend class  _AutomaticTableBuilderBuilder;
            protected: AutomaticTableBuilder();
            public: ~AutomaticTableBuilder();
            /**Returns  the scope type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PID::AutomaticTableBuilder::ScopeTypeOption ScopeType
            (
            );
            /**Sets  the scope type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetScopeType
            (
                NXOpen::PID::AutomaticTableBuilder::ScopeTypeOption scopeType /** scopetype */ 
            );
            /**Returns  the object type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PID::AutomaticTableBuilder::ObjectTypeOption ObjectType
            (
            );
            /**Sets  the object type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetObjectType
            (
                NXOpen::PID::AutomaticTableBuilder::ObjectTypeOption objectType /** objecttype */ 
            );
            /**Returns  the sheet, only available if the ScopeType is OtherSheet. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PID::Sheet * Sheet
            (
            );
            /**Sets  the sheet, only available if the ScopeType is OtherSheet. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetSheet
            (
                NXOpen::PID::Sheet * sheet /** sheet */ 
            );
            /**Returns  the system, only available if the ScopeType is System. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Partition * System
            (
            );
            /**Sets  the system, only available if the ScopeType is System. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetSystem
            (
                NXOpen::Assemblies::Partition * system /** system */ 
            );
            /**Returns  the manual update flag. If true, the automatic update will be disabled, the table could be updated manually. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ManualUpdate
            (
            );
            /**Sets  the manual update flag. If true, the automatic update will be disabled, the table could be updated manually. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetManualUpdate
            (
                bool manualUpdate /** manualupdate */ 
            );
            /** Gets the number of property cell ranges.  @return  the number of property cell ranges 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int GetNumberOfPropertyCellRanges
            (
            );
            /** Gets the property cell range at the given index. 
                        The index must be greater than or equal to 0, and less than the number of property cell ranges. 
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PID::PropertyCellRangeBuilder * GetPropertyCellRange
            (
                int index /** the index of property cell range */
            );
            /** Inserts the given number of property cell ranges at the given index. 
                        The index must be greater than or equal to 0, and less than or equal to the number of property cell ranges.
                        The number of property types and the number of property keys must be same, and must be greater than 0.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void InsertPropertyCellRanges
            (
                int index /** the index of the first inserted property cell range */,
                const std::vector<NXOpen::PID::PropertyType> & propertyTypes /** the property types of inserted property cell ranges */,
                const std::vector<NXString> & propertyKeys /** the property keys of inserted property cell ranges */
            );
            /** Removes the given number of property cell ranges starting with the given index. 
                        The index must be greater than or equal to 0, and less than the number of property cell ranges.
                        The number must be greater than 0, and "index + number" must be less than or equal to the number of property cell ranges.
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void RemovePropertyCellRanges
            (
                int index /** the index of the first removed property cell range */,
                int number /** the number of removed property cell ranges */
            );
            /**Sets  the @link NXOpen::Diagramming::Tables::TableBuilder NXOpen::Diagramming::Tables::TableBuilder@endlink  of the @link NXOpen::Diagramming::Tables::Table NXOpen::Diagramming::Tables::Table@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetTable
            (
                NXOpen::Diagramming::Tables::TableBuilder * diagrammingTable /** diagrammingtable */ 
            );
            /**Returns  the @link NXOpen::Diagramming::Tables::TableBuilder NXOpen::Diagramming::Tables::TableBuilder@endlink  of the @link NXOpen::Diagramming::Tables::Table NXOpen::Diagramming::Tables::Table@endlink . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::Tables::TableBuilder * Table
            (
            );
            /**Returns  the option to output the equipment list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputEquipment
            (
            );
            /**Sets  the option to output the equipment list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOutputEquipment
            (
                bool equipment /** equipment */ 
            );
            /**Returns  the option to output the inline equipment/valve list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputInlineEquipmentValve
            (
            );
            /**Sets  the option to output the inline equipment/valve list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOutputInlineEquipmentValve
            (
                bool inlineEquipmentValve /** inlineequipmentvalve */ 
            );
            /**Returns  the option to output the instrumentation list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputInstrumentation
            (
            );
            /**Sets  the option to output the instrumentation list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionEquipment@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOutputInstrumentation
            (
                bool instrumentation /** instrumentation */ 
            );
            /**Returns  the option to output the run list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputRun
            (
            );
            /**Sets  the option to output the run list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOutputRun
            (
                bool run /** run */ 
            );
            /**Returns  the option to output the control loop list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputControlLoop
            (
            );
            /**Sets  the option to output the control loop list. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionRun@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetOutputControlLoop
            (
                bool controlLoop /** controlloop */ 
            );
            /**Returns  the stock type to output. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionPipeStock NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionPipeStock@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PID::AutomaticTableBuilder::StockOption StockType
            (
            );
            /**Sets  the stock type to output. Only applicable when @link NXOpen::PID::AutomaticTableBuilder::ScopeType NXOpen::PID::AutomaticTableBuilder::ScopeType@endlink  is @link NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionPipeStock NXOpen::PID::AutomaticTableBuilder::ObjectTypeOptionPipeStock@endlink . 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetStockType
            (
                NXOpen::PID::AutomaticTableBuilder::StockOption stockType /** stocktype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
