#ifndef NXOpen_DMU_ISNAPSHOT_HXX_INCLUDED
#define NXOpen_DMU_ISNAPSHOT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DMU_ISnapshot.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libdmuopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DMU
    {
        class ISnapshot;
    }
    class INXObject;
    namespace DMU
    {
        /**  Represents the @link NXOpen::DMU::ISnapshot NXOpen::DMU::ISnapshot@endlink  object.
            
         <br>  Created in NX12.0.0.  <br>  
        */
        class DMUOPENCPPEXPORT  ISnapshot : public virtual NXOpen::INXObject
        {
            public: virtual ~ISnapshot() {}
            /** Applies a @link NXOpen::DMU::ISnapshot NXOpen::DMU::ISnapshot@endlink  on current model.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void Apply
            (
            ) = 0;
            /** Deletes a @link NXOpen::DMU::ISnapshot NXOpen::DMU::ISnapshot@endlink  object.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void Delete
            (
            ) = 0;
            /** Replaces a @link NXOpen::DMU::ISnapshot NXOpen::DMU::ISnapshot@endlink  object with current state of model.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void Replace
            (
            ) = 0;
            /** Captures and removes selective assets to @link NXOpen::DMU::ISnapshot NXOpen::DMU::ISnapshot@endlink .
                    If the asset already exists while capture, then it will get over-written.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void UpdateAssets
            (
                std::vector<NXString> & assetsToBeCaptured /** the ids of the assets to be captured */,
                std::vector<NXString> & assetsToBeRemoved /** the ids of the assets to be removed */
            ) = 0;
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
