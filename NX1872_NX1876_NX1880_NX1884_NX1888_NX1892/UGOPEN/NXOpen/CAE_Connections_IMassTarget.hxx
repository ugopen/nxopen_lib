#ifndef NXOpen_CAE_CONNECTIONS_IMASSTARGET_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_IMASSTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_IMassTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_Types.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class IMassTarget;
        }
    }
    class INXObject;
    class TaggedObject;
    namespace CAE
    {
        namespace Connections
        {
            /**  @brief  This class represents an Interface to the Lumped Mass target.  

              
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  IMassTarget : public virtual NXOpen::INXObject
            {
                public: virtual ~IMassTarget() {}
                /**Returns  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::Connections::MassDistributionType MassDistributionType
                (
                ) = 0;
                /**Sets  the mass distribution type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void SetMassDistributionType
                (
                    NXOpen::CAE::Connections::MassDistributionType type /** Mass distribution type*/
                ) = 0;
                /**Returns  the mass connection type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual bool UseCenterOfSlaveNodes
                (
                ) = 0;
                /**Sets  the mass connection type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void SetUseCenterOfSlaveNodes
                (
                    bool use /** Mass center type */
                ) = 0;
                /**Returns  the target center 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::TaggedObject * Center
                (
                ) = 0;
                /**Sets  the target center 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void SetCenter
                (
                    NXOpen::TaggedObject * center /** Mass center */
                ) = 0;
                /** Gets entities from mass spider legs. 
                            These can be any combination of CAD (point, edge, face, body) or FE (node, edge, face, element and mesh) 
                            objects able to return nodes.  @return  Mass support entities 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual std::vector<NXOpen::TaggedObject *> GetSupportEntities
                (
                ) = 0;
                /** Add entities to mass spider legs. 
                            Changes are not applied till an update is performed by calling @link Update::DoUpdate Update::DoUpdate@endlink  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void AddSupportEntities
                (
                    const std::vector<NXOpen::TaggedObject *> & entities /** Mass support entities */
                ) = 0;
                /** Remove entities from mass spider legs. 
                            Changes are not applied till an update is performed by calling @link Update::DoUpdate Update::DoUpdate@endlink  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void RemoveSupportEntities
                (
                    const std::vector<NXOpen::TaggedObject *> & entities /** Mass support entities */
                ) = 0;
                /** Add entities to mass spider legs. 
                            Changes are not applied till an update is performed by calling @link Update::DoUpdate Update::DoUpdate@endlink  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void SetSupportEntities
                (
                    const std::vector<NXOpen::TaggedObject *> & entities /** Mass support entities */
                ) = 0;
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
