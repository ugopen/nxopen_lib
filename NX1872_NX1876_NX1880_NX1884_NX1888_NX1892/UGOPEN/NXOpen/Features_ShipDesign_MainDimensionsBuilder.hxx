#ifndef NXOpen_FEATURES_SHIPDESIGN_MAINDIMENSIONSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_MAINDIMENSIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_MainDimensionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class MainDimensionsBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBody;
    namespace Features
    {
        namespace ShipDesign
        {
            class _MainDimensionsBuilderBuilder;
            class MainDimensionsBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::MainDimensions NXOpen::Features::ShipDesign::MainDimensions@endlink  builder.
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateMainDimensionsBuilder  NXOpen::Features::ShipCollection::CreateMainDimensionsBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AftPerpendicular.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            Baseline.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            ForwardPerpendicular.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            Midship.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            Waterline.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            XMax.Value </td> <td> 
             
            25000 (millimeters part), 1000 (inches part) </td> </tr> 

            <tr><td> 
             
            XMin.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            YMax.Value </td> <td> 
             
            2500 (millimeters part), 100 (inches part) </td> </tr> 

            <tr><td> 
             
            ZMax.Value </td> <td> 
             
            2500 (millimeters part), 100 (inches part) </td> </tr> 

            <tr><td> 
             
            ZMin.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            </table>  

             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  MainDimensionsBuilder : public NXOpen::Features::FeatureBuilder
            {
                private: MainDimensionsBuilderImpl * m_maindimensionsbuilder_impl;
                private: friend class  _MainDimensionsBuilderBuilder;
                protected: MainDimensionsBuilder();
                public: ~MainDimensionsBuilder();
                /**Returns  the ship body. 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBody * ShipBody
                (
                );
                /**Returns  the expression containing the x min value. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * XMin
                (
                );
                /**Returns  the expression containing the x max value. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * XMax
                (
                );
                /**Returns  the expression containing the y max value. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * YMax
                (
                );
                /**Returns  the expression containing the z min value. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ZMin
                (
                );
                /**Returns  the expression containing the z max value. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ZMax
                (
                );
                /**Returns  the expression containing the position value of Aft Perpendicular along the X axis. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AftPerpendicular
                (
                );
                /**Returns  the expression containing the position value of forward Perpendicular along the X axis. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ForwardPerpendicular
                (
                );
                /**Returns  the expression containing the position value of baseline along the Z axis. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Baseline
                (
                );
                /**Returns  the expression containing the position value of waterline along the Z axis. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Waterline
                (
                );
                /**Returns  the expression containing the position value of midship along the X axis. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Midship
                (
                );
                /**Returns  the unique "Grid ID" for each ship. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GridID
                (
                );
                /**Sets  the unique "Grid ID" for each ship. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetGridID
                (
                    const NXString & gridID /** gridid */ 
                );
                /**Sets  the unique "Grid ID" for each ship. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                void SetGridID
                (
                    const char * gridID /** gridid */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
