#ifndef NXOpen_ANNOTATIONS_PINLISTBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PINLISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PinListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PinListBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _PinListBuilderBuilder;
        class PinListBuilderImpl;
        /** Builder for Formboard pin list functionality used in formboard. 
                This class queries and sets settings specific to formboard pin list.
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PinListBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** The options specify the filter type.*/
            public: enum FilterType
            {
                FilterTypeRoutedandUnroutedConnections/** routedand unrouted connections */ ,
                FilterTypeOnlyRoutedConnections/** only routed connections */ ,
                FilterTypeOnlyUnroutedConnections/** only unrouted connections */ 
            };

            private: PinListBuilderImpl * m_pinlistbuilder_impl;
            private: friend class  _PinListBuilderBuilder;
            protected: PinListBuilder();
            public: ~PinListBuilder();
            /**Returns  the options specifies whether annotation automatically updates.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutoUpdate
            (
            );
            /**Sets  the options specifies whether annotation automatically updates.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetAutoUpdate
            (
                bool autoUpdate /** autoupdate */ 
            );
            /**Returns  the options specifies whether to flatten hierarchy.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlattenHierarchy
            (
            );
            /**Sets  the options specifies whether to flatten hierarchy.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetFlattenHierarchy
            (
                bool flattenHierarchy /** flattenhierarchy */ 
            );
            /**Returns  the category specifies the filter type.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PinListBuilder::FilterType Filter
            (
            );
            /**Sets  the category specifies the filter type.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetFilter
            (
                NXOpen::Annotations::PinListBuilder::FilterType filter /** filter */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
