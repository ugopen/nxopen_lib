#ifndef NXOpen_PID_PROPERTYCELLRANGEBUILDER_HXX_INCLUDED
#define NXOpen_PID_PROPERTYCELLRANGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PID_PropertyCellRangeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_Tables_CellRangeBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/PID_PropertyType.hxx>
#include <NXOpen/libpidopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PID
    {
        class PropertyCellRangeBuilder;
    }
    namespace Diagramming
    {
        namespace Tables
        {
            class CellRangeBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace PID
    {
        class _PropertyCellRangeBuilderBuilder;
        class PropertyCellRangeBuilderImpl;
        /**  @brief  Represents a PropertyCellRangeBuilder.  

           <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class PIDOPENCPPEXPORT  PropertyCellRangeBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: PropertyCellRangeBuilderImpl * m_propertycellrangebuilder_impl;
            private: friend class  _PropertyCellRangeBuilderBuilder;
            protected: PropertyCellRangeBuilder();
            public: ~PropertyCellRangeBuilder();
            /**Returns  the property type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::PID::PropertyType PropertyType
            (
            );
            /**Sets  the property type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetPropertyType
            (
                NXOpen::PID::PropertyType propertyType /** propertytype */ 
            );
            /**Returns  the property key. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXString PropertyKey
            (
            );
            /**Sets  the property key. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: void SetPropertyKey
            (
                const NXString & propertyKey /** propertykey */ 
            );
            /**Sets  the property key. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            void SetPropertyKey
            (
                const char * propertyKey /** propertykey */ 
            );
            /**Returns  the cell range. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_pid_design_author ("NX P and ID Design Author") */
            public: NXOpen::Diagramming::Tables::CellRangeBuilder * TableCellRange
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
