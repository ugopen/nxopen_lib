#ifndef NXOpen_MFG_AM_PRINTERMANAGER_HXX_INCLUDED
#define NXOpen_MFG_AM_PRINTERMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_PrinterManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_Printer.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class PrinterManager;
        }
    }
    class Session;
    namespace Mfg
    {
        namespace AM
        {
            class Printer;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class PrinterManagerImpl;
            /** Represents the Additive Manufacturing Printer Service  <br> Use the static method in this class to obtain an instance.  <br> 
             <br>  Created in NX11.0.1.  <br>  
            */
            class MFGAMOPENCPPEXPORT  PrinterManager
            {
                private: PrinterManagerImpl * m_printermanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit PrinterManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static PrinterManager* thePrinterManager;
                /** Returns the PrinterManager object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static PrinterManager* GetPrinterManager(NXOpen::Session *owner);
                public: ~PrinterManager();
                /** Retrieves the available 3D printers 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::AM::Printer *> GetPrinters
                (
                );
                /** Retrieves a printer by name 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::Printer * GetPrinter
                (
                    const NXString & printerName /** printername */ 
                );
                /** Retrieves a printer by name 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                NXOpen::Mfg::AM::Printer * GetPrinter
                (
                    const char * printerName /** printername */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
