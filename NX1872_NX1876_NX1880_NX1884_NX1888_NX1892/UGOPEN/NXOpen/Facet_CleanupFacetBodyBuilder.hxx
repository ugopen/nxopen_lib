#ifndef NXOpen_FACET_CLEANUPFACETBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_CLEANUPFACETBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_CleanupFacetBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class CleanupFacetBodyBuilder;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Facet
    {
        class _CleanupFacetBodyBuilderBuilder;
        class CleanupFacetBodyBuilderImpl;
        /**
            Represents a @link NXOpen::Facet::CleanupFacetBodyBuilder NXOpen::Facet::CleanupFacetBodyBuilder@endlink  builder. 
            It removes defects that are present in the surfaces of the bodies selected. 
             <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateCleanupFacetBodyBuilder  NXOpen::Facet::FacetModelingCollection::CreateCleanupFacetBodyBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FoldedEdges </td> <td> 
         
        Analyze </td> </tr> 

        <tr><td> 
         
        InconsistentNormals </td> <td> 
         
        Analyze </td> </tr> 

        <tr><td> 
         
        LaminarSlits </td> <td> 
         
        Analyze </td> </tr> 

        <tr><td> 
         
        LongFacets </td> <td> 
         
        Analyze </td> </tr> 

        <tr><td> 
         
        MaxRatioLongFacets </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        MinAngleFoldedFacets </td> <td> 
         
        15 </td> </tr> 

        <tr><td> 
         
        OriginalBodyOption </td> <td> 
         
        Delete </td> </tr> 

        <tr><td> 
         
        SelfIntersections </td> <td> 
         
        Analyze </td> </tr> 

        <tr><td> 
         
        ShowInfo </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ThinFacets </td> <td> 
         
        Analyze </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  CleanupFacetBodyBuilder : public NXOpen::Builder
        {
            /** These represent the options for each facet defect */
            public: enum CleanupOptions
            {
                CleanupOptionsNone/** Don't perform Analysis or Repair */,
                CleanupOptionsAnalyze/** Perform Analysis */,
                CleanupOptionsRepair/** Perform Repair */
            };

            /** These represent the options for handling the input bodies  */
            public: enum OriginalBodyOptions
            {
                OriginalBodyOptionsKeep/** Keep original body */,
                OriginalBodyOptionsHide/** Hide original body */,
                OriginalBodyOptionsDelete/** Delete original body */
            };

            private: CleanupFacetBodyBuilderImpl * m_cleanupfacetbodybuilder_impl;
            private: friend class  _CleanupFacetBodyBuilderBuilder;
            protected: CleanupFacetBodyBuilder();
            public: ~CleanupFacetBodyBuilder();
            /**Returns  the input facet bodies to be analyzed or repaired 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * InputBodies
            (
            );
            /** Sets all cleanup options to @link Facet::CleanupFacetBodyBuilder::CleanupOptionsNone Facet::CleanupFacetBodyBuilder::CleanupOptionsNone@endlink , which means to do nothing 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAllOptionsToNone
            (
            );
            /** Sets all cleanup options to @link Facet::CleanupFacetBodyBuilder::CleanupOptionsAnalyze Facet::CleanupFacetBodyBuilder::CleanupOptionsAnalyze@endlink , which means to identify the defects only for the input bodies 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAllOptionsToAnalyze
            (
            );
            /** Sets all cleanup options to @link Facet::CleanupFacetBodyBuilder::CleanupOptionsRepair Facet::CleanupFacetBodyBuilder::CleanupOptionsRepair@endlink , which means to identify as well as repair the defects for the input bodies 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetAllOptionsToRepair
            (
            );
            /**Returns  the option to identify or repair facets having an angle with adjacent facets less than a specified minimum value 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions FoldedEdges
            (
            );
            /**Sets  the option to identify or repair facets having an angle with adjacent facets less than a specified minimum value 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetFoldedEdges
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions foldedEdges /** foldededges */ 
            );
            /**Returns  the option to identify or repair facets with a ratio of longest to shortest side exceeding a specified value 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions LongFacets
            (
            );
            /**Sets  the option to identify or repair facets with a ratio of longest to shortest side exceeding a specified value 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetLongFacets
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions longFacets /** longfacets */ 
            );
            /**Returns  the option to identify or repair facets with with one long edge and two edges with more or the less the same length and a ratio of length to width exceeding a specified value 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions ThinFacets
            (
            );
            /**Sets  the option to identify or repair facets with with one long edge and two edges with more or the less the same length and a ratio of length to width exceeding a specified value 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetThinFacets
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions thinFacets /** thinfacets */ 
            );
            /**Returns  the option to identify or repair facets of the same mesh intersecting each other 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions SelfIntersections
            (
            );
            /**Sets  the option to identify or repair facets of the same mesh intersecting each other 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSelfIntersections
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions selfIntersections /** selfintersections */ 
            );
            /**Returns  the option to identify or repair normals of neighboring facets or vertices that do not have the right orientation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions InconsistentNormals
            (
            );
            /**Sets  the option to identify or repair normals of neighboring facets or vertices that do not have the right orientation 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetInconsistentNormals
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions inconsistentNormals /** inconsistentnormals */ 
            );
            /**Returns  the option to identify or repair thin holes or slits in the mesh caused by facets not being aligned 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions LaminarSlits
            (
            );
            /**Sets  the option to identify or repair thin holes or slits in the mesh caused by facets not being aligned 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetLaminarSlits
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::CleanupOptions laminarSlits /** laminarslits */ 
            );
            /**Returns  the specified value used to define long facets 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxRatioLongFacets
            (
            );
            /**Sets  the specified value used to define long facets 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMaxRatioLongFacets
            (
                double maxRatioLongFacets /** maxratiolongfacets */ 
            );
            /**Returns  the minimum angle between adjacent facets to define folded facets 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double MinAngleFoldedFacets
            (
            );
            /**Sets  the minimum angle between adjacent facets to define folded facets 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMinAngleFoldedFacets
            (
                double minAngleFoldedFacets /** minanglefoldedfacets */ 
            );
            /**Returns  
                    the option to display numbers of various type of defects identified or repaired in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink .
                    If this option is true, but the program is running externally without UI, display would go to
                    a standard output devicethe.  The listing window output can be sent to the Information window or to a 
                    file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
                    for more information.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowInfo
            (
            );
            /**Sets  
                    the option to display numbers of various type of defects identified or repaired in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink .
                    If this option is true, but the program is running externally without UI, display would go to
                    a standard output devicethe.  The listing window output can be sent to the Information window or to a 
                    file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
                    for more information.
                    
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetShowInfo
            (
                bool showInfo /** showinfo */ 
            );
            /**Returns  the option for handling the input facet bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::CleanupFacetBodyBuilder::OriginalBodyOptions OriginalBodyOption
            (
            );
            /**Sets  the option for handling the input facet bodies 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetOriginalBodyOption
            (
                NXOpen::Facet::CleanupFacetBodyBuilder::OriginalBodyOptions enumOriginalBodyOption /** enumoriginalbodyoption */ 
            );
            /** 
                    Displays the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink  with numbers of various type of defects identified or repaired.
                    If we call this method externally without UI, it displays 
                    the information on standard output device. The listing 
                    window output can be sent to the Information window or to a 
                    file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
                    for more information.
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DisplayCleanupReportInListWindow
            (
            );
            /**Returns  the tolerance value use to detect the faults in facet body and fix the same 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the tolerance value use to detect the faults in facet body and fix the same 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetDistanceTolerance
            (
                double disTolerance /** distolerance */ 
            );
            /**Returns  the minimum number of facets per mesh 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: int MinFacetNumberPerBody
            (
            );
            /**Sets  the minimum number of facets per mesh 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMinFacetNumberPerBody
            (
                int minFacetNumber /** minfacetnumber */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
