#ifndef NXOpen_CAE_CAESENSOR_HXX_INCLUDED
#define NXOpen_CAE_CAESENSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaeSensor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CaeSensor;
    }
    class NXObject;
    namespace CAE
    {
        class _CaeSensorBuilder;
        class CaeSensorImpl;
        /**
          Represents a @link NXOpen::CAE::CaeSensor NXOpen::CAE::CaeSensor@endlink 
           <br> This is a sub object  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CaeSensor : public NXOpen::NXObject
        {
            private: CaeSensorImpl * m_caesensor_impl;
            private: friend class  _CaeSensorBuilder;
            protected: CaeSensor();
            public: ~CaeSensor();
            /** Get CaeSensor Label  @return  Label of the sensor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int GetLabel
            (
            );
            /** Get CaeSensor Active flag  @return  Active flag 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetSensorActive
            (
            );
            /** Set CaeSensor Active flag 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSensorActive
            (
                bool active /** Active flag */
            );
            /** Get CaeSensor sensor dofs 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetSensorDofs
            (
                bool* dof1 /** active/inactive status of degree of freedom 1 */,
                bool* dof2 /** active/inactive status of degree of freedom 2 */,
                bool* dof3 /** active/inactive status of degree of freedom 3 */,
                bool* dof4 /** active/inactive status of degree of freedom 4 */,
                bool* dof5 /** active/inactive status of degree of freedom 5 */,
                bool* dof6 /** active/inactive status of degree of freedom 6 */
            );
            /** Set CaeSensor sensor dofs 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSensorDofs
            (
                bool dof1 /** active/inactive status of degree of freedom 1 */,
                bool dof2 /** active/inactive status of degree of freedom 2 */,
                bool dof3 /** active/inactive status of degree of freedom 3 */,
                bool dof4 /** active/inactive status of degree of freedom 4 */,
                bool dof5 /** active/inactive status of degree of freedom 5 */,
                bool dof6 /** active/inactive status of degree of freedom 6 */
            );
            /** Set CaeSensor sensor dofs negative 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSensorDofsNegative
            (
                bool negative1 /** Dof1 negative status */,
                bool negative2 /** Dof2 negative status */,
                bool negative3 /** Dof3 negative status */,
                bool negative4 /** Dof4 negative status */,
                bool negative5 /** Dof5 negative status */,
                bool negative6 /** Dof6 negative status */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
