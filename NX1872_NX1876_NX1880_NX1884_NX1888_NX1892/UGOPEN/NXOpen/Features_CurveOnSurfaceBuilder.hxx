#ifndef NXOpen_FEATURES_CURVEONSURFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_CURVEONSURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CurveOnSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_GeometricConstraintDataManager.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/GeometricUtilities_CurveFitOptions.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CurveOnSurfaceBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class GeometricConstraintDataManager;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    namespace GeometricUtilities
    {
        class CurveFitOptions;
    }
    class ScCollector;
    namespace Features
    {
        class _CurveOnSurfaceBuilderBuilder;
        class CurveOnSurfaceBuilderImpl;
        /** Curve On Surface builder class.  <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateCurveOnSurfaceBuilder  NXOpen::Features::FeatureCollection::CreateCurveOnSurfaceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        CurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        CurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveFitProperties.FitOption </td> <td> 
         
        Cubic </td> </tr> 

        <tr><td> 
         
        CurveFitProperties.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        CurveFitProperties.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CurveOnSurfaceBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: CurveOnSurfaceBuilderImpl * m_curveonsurfacebuilder_impl;
            private: friend class  _CurveOnSurfaceBuilderBuilder;
            protected: CurveOnSurfaceBuilder();
            public: ~CurveOnSurfaceBuilder();
            /**Returns  the face collector 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ScCollector * Faces
            (
            );
            /**Returns  the constraint manager 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::GeometricConstraintDataManager * ConstraintManager
            (
            );
            /**Returns  the periodicity state of curve on surface 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool IsPeriodic
            (
            );
            /**Sets  the periodicity state of curve on surface 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPeriodic
            (
                bool periodicity /** periodicity */ 
            );
            /**Returns  the curve fit properties 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::CurveFitOptions * CurveFitProperties
            (
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distance tolerance */ 
            );
            /**Returns  the angle tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angle tolerance */ 
            );
            /**Returns  the curve fitting parameters  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
