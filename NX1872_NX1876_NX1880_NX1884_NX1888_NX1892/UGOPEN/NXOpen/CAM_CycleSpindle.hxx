#ifndef NXOpen_CAM_CYCLESPINDLE_HXX_INCLUDED
#define NXOpen_CAM_CYCLESPINDLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CycleSpindle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CycleSpindle;
    }
    namespace CAM
    {
        class _CycleSpindleBuilder;
        class CycleSpindleImpl;
        /** Represets a User Defined Event 
         <br>  Created in NX10.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CycleSpindle : public NXOpen::TaggedObject
        {
            /** Available types for spindle mode */
            public: enum Mode
            {
                ModeOff/** spindle off */,
                ModeOn/** spindle %main */,
                ModeRpm/** spindle rpm */
            };

            private: CycleSpindleImpl * m_cyclespindle_impl;
            private: friend class  _CycleSpindleBuilder;
            protected: CycleSpindle();
            public: ~CycleSpindle();
            /**Returns  the spindle status 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool IsActive
            (
            );
            /**Sets  the spindle status 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetActive
            (
                bool bActive /** the active status */
            );
            /**Returns  the spindle type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CycleSpindle::Mode SpindleMode
            (
            );
            /**Sets  the spindle type 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSpindleMode
            (
                NXOpen::CAM::CycleSpindle::Mode spindle /** the spindle mode */
            );
            /**Returns  the spindle value 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double SpindleSpeed
            (
            );
            /**Sets  the spindle value 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSpindleSpeed
            (
                double doubleValue /** the spindle value */
            );
            /**Returns  the spindle reverse status 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool IsReversed
            (
            );
            /**Sets  the spindle reverse status 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetReversed
            (
                bool bActive /** the spindle mode status */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
