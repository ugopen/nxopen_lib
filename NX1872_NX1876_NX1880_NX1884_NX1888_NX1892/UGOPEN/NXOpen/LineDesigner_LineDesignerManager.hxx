#ifndef NXOpen_LINEDESIGNER_LINEDESIGNERMANAGER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_LINEDESIGNERMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_LineDesignerManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/LineDesigner_DBColumnGridNode.hxx>
#include <NXOpen/LineDesigner_DBConveyorNode.hxx>
#include <NXOpen/LineDesigner_DBFactoryCadGeoNode.hxx>
#include <NXOpen/LineDesigner_DBFloorEquipmentNode.hxx>
#include <NXOpen/LineDesigner_DBNode.hxx>
#include <NXOpen/LineDesigner_DBPlatformEquipmentNode.hxx>
#include <NXOpen/LineDesigner_DBStairwayEquipmentNode.hxx>
#include <NXOpen/LineDesigner_FastPlacementUtilityBuilder.hxx>
#include <NXOpen/LineDesigner_GlobalSelectionBuilder.hxx>
#include <NXOpen/LineDesigner_LineDesignerApplicationBuilder.hxx>
#include <NXOpen/LineDesigner_ReuseLibraryUtilityBuilder.hxx>
#include <NXOpen/Session.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class LineDesignerManager;
    }
    class Session;
    namespace Drawings
    {
        class DrawingSheet;
    }
    namespace Drawings
    {
        class DrawingSheetBuilder;
    }
    namespace LineDesigner
    {
        class AlignComponentsBuilder;
    }
    namespace LineDesigner
    {
        class CaptureImageBuilder;
    }
    namespace LineDesigner
    {
        class ColumnFeature;
    }
    namespace LineDesigner
    {
        class ColumnFeatureBuilder;
    }
    namespace LineDesigner
    {
        class ColumnGridEquipmentBuilder;
    }
    namespace LineDesigner
    {
        class ConnectionCreatorBuilder;
    }
    namespace LineDesigner
    {
        class ConveyorStationFeature;
    }
    namespace LineDesigner
    {
        class ConveyorStationFeatureBuilder;
    }
    namespace LineDesigner
    {
        class CoverFeature;
    }
    namespace LineDesigner
    {
        class CoverFeatureBuilder;
    }
    namespace LineDesigner
    {
        class CreateFactoryElement;
    }
    namespace LineDesigner
    {
        class CreateFactoryElementBuilder;
    }
    namespace LineDesigner
    {
        class CreateFence;
    }
    namespace LineDesigner
    {
        class CreateFenceBuilder;
    }
    namespace LineDesigner
    {
        class CreateSystem;
    }
    namespace LineDesigner
    {
        class CreateSystemBuilder;
    }
    namespace LineDesigner
    {
        class DBColumnGridNode;
    }
    namespace LineDesigner
    {
        class DBConveyorNode;
    }
    namespace LineDesigner
    {
        class DBFactoryCadGeoNode;
    }
    namespace LineDesigner
    {
        class DBFloorEquipmentNode;
    }
    namespace LineDesigner
    {
        class DBNode;
    }
    namespace LineDesigner
    {
        class DBPlatformEquipmentNode;
    }
    namespace LineDesigner
    {
        class DBStairwayEquipmentNode;
    }
    namespace LineDesigner
    {
        class DefineRobotBuilder;
    }
    namespace LineDesigner
    {
        class DefineToolBuilder;
    }
    namespace LineDesigner
    {
        class DisconnectConnectionBuilder;
    }
    namespace LineDesigner
    {
        class DistributeComponentsBuilder;
    }
    namespace LineDesigner
    {
        class ExportPlantToDWG;
    }
    namespace LineDesigner
    {
        class ExportPlantToDWGBuilder;
    }
    namespace LineDesigner
    {
        class ExportToDWG;
    }
    namespace LineDesigner
    {
        class ExportToDWGBuilder;
    }
    namespace LineDesigner
    {
        class FactoryCadGeoEquipmentBuilder;
    }
    namespace LineDesigner
    {
        class FastPlacementUtilityBuilder;
    }
    namespace LineDesigner
    {
        class FloorEquipmentBuilder;
    }
    namespace LineDesigner
    {
        class GateFeature;
    }
    namespace LineDesigner
    {
        class GateFeatureBuilder;
    }
    namespace LineDesigner
    {
        class GlobalSelectionBuilder;
    }
    namespace LineDesigner
    {
        class HoleFeature;
    }
    namespace LineDesigner
    {
        class HoleFeatureBuilder;
    }
    namespace LineDesigner
    {
        class ImportFactoryCadGeoBuilder;
    }
    namespace LineDesigner
    {
        class InsertSheet;
    }
    namespace LineDesigner
    {
        class InsertSheetBuilder;
    }
    namespace LineDesigner
    {
        class JigOnPlaneBuilder;
    }
    namespace LineDesigner
    {
        class LineDesignerApplicationBuilder;
    }
    namespace LineDesigner
    {
        class MountBuilder;
    }
    namespace LineDesigner
    {
        class PickRectanglePointsBuilder;
    }
    namespace LineDesigner
    {
        class PlanViewManager;
    }
    namespace LineDesigner
    {
        class PlantProductionUnitCreatorBuilder;
    }
    namespace LineDesigner
    {
        class PlatformEquipmentBuilder;
    }
    namespace LineDesigner
    {
        class ProductionUnitCreatorBuilder;
    }
    namespace LineDesigner
    {
        class RailOpeningFeature;
    }
    namespace LineDesigner
    {
        class RailOpeningFeatureBuilder;
    }
    namespace LineDesigner
    {
        class RailingFeature;
    }
    namespace LineDesigner
    {
        class RailingFeatureBuilder;
    }
    namespace LineDesigner
    {
        class RenameDialogeBuilder;
    }
    namespace LineDesigner
    {
        class RenameItemRevisionBuilder;
    }
    namespace LineDesigner
    {
        class ResizeConnectorBuilder;
    }
    namespace LineDesigner
    {
        class ReuseLibraryUtilityBuilder;
    }
    namespace LineDesigner
    {
        class ShadowOutlineBuilder;
    }
    namespace LineDesigner
    {
        class SingleElementConveyorBuilder;
    }
    namespace LineDesigner
    {
        class StairwayEquipmentBuilder;
    }
    namespace LineDesigner
    {
        class TypedConnectorFeature;
    }
    namespace LineDesigner
    {
        class TypedConnectorFeatureBuilder;
    }
    namespace LineDesigner
    {
        class UnmountBuilder;
    }
    class Part;
    class TaggedObject;
    namespace LineDesigner
    {
        class LineDesignerManagerImpl;
        /** Represents a manager of line designer builders  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  LineDesignerManager
        {
            private: LineDesignerManagerImpl * m_linedesignermanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit LineDesignerManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static LineDesignerManager* theLineDesignerManager;
            /** Returns the LineDesignerManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static LineDesignerManager* GetLineDesignerManager(NXOpen::Session *owner);
            public: ~LineDesignerManager();
            /**  Consolidate Undo Marks 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ConsolidateUndoMarks
            (
                NXOpen::Session::UndoMarkId undoMarkId /** undomarkid */ 
            );
            /** Creates the plan view manager instance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::PlanViewManager * CreatePlanViewManagerInstance
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create the application builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::LineDesignerApplicationBuilder * CreateApplicationBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Application builder is return 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::LineDesignerApplicationBuilder * GetApplicationBuilder
            (
            );
            /** Returns the reuse library utility builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ReuseLibraryUtilityBuilder * GetReuseLibraryUtilityBuilder
            (
            );
            /**Create factory element builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CreateFactoryElementBuilder * CreateCreateFactoryElementBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::CreateFactoryElement * createFactoryElement /** @link LineDesigner::CreateFactoryElement LineDesigner::CreateFactoryElement@endlink  to be edited */
            );
            /** Creates the export to DWG builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ExportToDWGBuilder * CreateExportToDwgBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::ExportToDWG * exportToDwg /** @link LineDesigner::ExportToDWG LineDesigner::ExportToDWG@endlink  to be edited */
            );
            /** Creates the insert sheet builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::InsertSheetBuilder * CreateInsertSheetBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::InsertSheet * insertSheet /** @link LineDesigner::InsertSheet LineDesigner::InsertSheet@endlink  to be edited */
            );
            /**Create the drawing sheet builder  @return  the drawing sheet Builder with this identifier 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Drawings::DrawingSheetBuilder * DrawingSheetBuilder
            (
                NXOpen::Part * owningPart /** owning part */ ,
                NXOpen::Drawings::DrawingSheet * sheet /** the drawing sheet */
            );
            /** Create the export plant to DWG builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ExportPlantToDWGBuilder * CreateExportPlantToDwgBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::ExportPlantToDWG * exportPlantToDwg /** @link LineDesigner::ExportPlantToDWG LineDesigner::ExportPlantToDWG@endlink  to be edited */
            );
            /** Create fence builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CreateFenceBuilder * CreateCreateFenceBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::CreateFence * createFence /** @link LineDesigner::CreateFence LineDesigner::CreateFence@endlink  to be edited */
            );
            /**Create the jig on plane builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::JigOnPlaneBuilder * CreateJigOnPlaneBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create system builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CreateSystemBuilder * CreateCreateSystemBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::CreateSystem * createSystem /** @link LineDesigner::CreateSystem LineDesigner::CreateSystem@endlink  to be edited */
            );
            /** Create global selection builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::GlobalSelectionBuilder * CreateGlobalSelectionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /**Create pick rectangle points builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::PickRectanglePointsBuilder * CreatePickRectanglePointsBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create Platform Equipment Builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::PlatformEquipmentBuilder * CreatePlatformEquipmentBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBPlatformEquipmentNode * dbnode /** dbnode */ 
            );
            /** Create column feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ColumnFeatureBuilder * CreateColumnFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::ColumnFeature * columnFeature /** @link LineDesigner::ColumnFeature LineDesigner::ColumnFeature@endlink  to be edited */
            );
            /** Create railing feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder * CreateRailingFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::RailingFeature * railingFeature /** @link LineDesigner::RailingFeature LineDesigner::RailingFeature@endlink  to be edited */
            );
            /** Create railing feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailingFeatureBuilder * CreateRailingFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBNode * node /** node */ 
            );
            /** Create rail opening feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailOpeningFeatureBuilder * CreateRailOpeningFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::RailOpeningFeature * railingFeature /** @link LineDesigner::RailOpeningFeature LineDesigner::RailOpeningFeature@endlink  to be edited */
            );
            /** Create single element conveyor builder     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::SingleElementConveyorBuilder * CreateSingleElementConveyorBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBConveyorNode * node /** node */ 
            );
            /**Create Floor builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::FloorEquipmentBuilder * CreateFloorequipmentBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBFloorEquipmentNode * dbnode /** dbnode */ 
            );
            /** Create HoleFeature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::HoleFeatureBuilder * CreateHoleFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::HoleFeature * holeFeature /** @link LineDesigner::HoleFeature LineDesigner::HoleFeature@endlink  to be edited */
            );
            /**Create StairwayEquipment builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::StairwayEquipmentBuilder * CreateStairwayEquipmentBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBStairwayEquipmentNode * dbnode /** dbnode */ 
            );
            /** Create column grid equipment Builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ColumnGridEquipmentBuilder * CreateColumnGridEquipmentBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBColumnGridNode * dbnode /** dbnode */ 
            );
            /**Create column feature builder inside a node or using node  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ColumnFeatureBuilder * CreateColumnFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBNode * node /** node */ 
            );
            /** Create conveyor station feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ConveyorStationFeatureBuilder * CreateConveyorStationFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::ConveyorStationFeature * railingFeature /** @link LineDesigner::ConveyorStationFeature LineDesigner::ConveyorStationFeature@endlink  to be edited */
            );
            /** Create CoverFeature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CoverFeatureBuilder * CreateCoverFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::CoverFeature * coverFeature /** @link LineDesigner::CoverFeature LineDesigner::CoverFeature@endlink  to be edited */
            );
            /** Create GateFeature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::GateFeatureBuilder * CreateGateFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::GateFeature * coverFeature /** @link LineDesigner::GateFeature LineDesigner::GateFeature@endlink  to be edited */
            );
            /** Create Connection Creator Builder @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ConnectionCreatorBuilder * CreateConnectionCreatorBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create typed connector feature builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::TypedConnectorFeatureBuilder * CreateTypedConnectorFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::TypedConnectorFeature * typedConnectorFeature /** @link LineDesigner::TypedConnectorFeature LineDesigner::TypedConnectorFeature@endlink  to be edited */
            );
            /** Create resize connector Builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ResizeConnectorBuilder * CreateResizeConnectorBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create production unit creator builder  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ProductionUnitCreatorBuilder * CreateProductionUnitCreatorBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Create Disconnect Connection Builder @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DisconnectConnectionBuilder * CreateDisconnectConnectionBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /**Get the fast placement utility builder 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::FastPlacementUtilityBuilder * GetFastPlacementUtilityBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ImportFactoryCadGeoBuilder * CreateImportFactoryCadGeoBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** To create a rename ItemRevision Builder @return  
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RenameItemRevisionBuilder * CreateRenameItemRevisionBuilder
            (
                NXOpen::TaggedObject * partOccTag /** partocctag */ 
            );
            /** Creates a Rename Dialoge Builder
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RenameDialogeBuilder * CreateRenameDialogeBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** To create a rename factory cad geo equipment builder @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::FactoryCadGeoEquipmentBuilder * CreateFactorycadgeoequipmentBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::LineDesigner::DBFactoryCadGeoNode * dbnode /** dbnode */ 
            );
            /** To create a rename factory cad geo equipment assembly builder @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::FactoryCadGeoEquipmentBuilder * CreateFactorycadgeoequipmentassemblyBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** To create a new navigator production unit builder @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::PlantProductionUnitCreatorBuilder * PlantCreateProductionUnitCreatorBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** To create distribute components builder @return  
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DistributeComponentsBuilder * CreateDistributeComponentsBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Align Component Dialoge Builder
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::AlignComponentsBuilder * CreateAlignComponentsBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Define Robot Dialoge Builder
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DefineRobotBuilder * CreateDefineRobotBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Define Tool Dialoge Builder
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::DefineToolBuilder * CreateDefineToolBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Mount Dialoge Builder @return  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::MountBuilder * CreateMountBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a Unmount Dialoge Builder @return  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::UnmountBuilder * CreateUnmountBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a shadow outline Dialoge Builder @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ShadowOutlineBuilder * CreateShadowOutlineCreatorBuilder
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a capture image Dialoge Builder @return  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::CaptureImageBuilder * CreateCaptureImageBuilder
            (
                NXOpen::Part * part /** part */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
