#ifndef NXOpen_CAE_DEPENDENTMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DEPENDENTMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DependentMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DependentMeshListItemBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DependentMeshBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CAEEdge;
    }
    namespace CAE
    {
        class DependentMeshListItemBuilder;
    }
    namespace CAE
    {
        class DependentMeshListItemBuilderList;
    }
    namespace CAE
    {
        class Mesh2d;
    }
    namespace CAE
    {
        class SelectCAEFace;
    }
    class NXObject;
    namespace CAE
    {
        class _DependentMeshBuilderBuilder;
        class DependentMeshBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::Mesh2d NXOpen::CAE::Mesh2d@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateDependentMeshBuilder  NXOpen::CAE::MeshManager::CreateDependentMeshBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DependentMeshBuilder : public NXOpen::Builder
        {
            /** The mesh type for face dependency */
            public: enum MeshType
            {
                MeshTypeFree/** Free mesh */,
                MeshTypeMap/** Map mesh */
            };

            private: DependentMeshBuilderImpl * m_dependentmeshbuilder_impl;
            private: friend class  _DependentMeshBuilderBuilder;
            protected: DependentMeshBuilder();
            public: ~DependentMeshBuilder();
            /**Returns  the master face 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectCAEFace * MasterFace
            (
            );
            /**Returns  the target face 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectCAEFace * TargetFace
            (
            );
            /** Match cylinder seams 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void MatchCylinderSeams
            (
            );
            /** Check tiny edges 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: bool CheckForTinyEdges
            (
            );
            /** Check for symmetry 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: bool CheckForSymmetry
            (
            );
            /**Returns  the loop list 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DependentMeshListItemBuilderList * LoopList
            (
            );
            /** The list item 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DependentMeshListItemBuilder * CreateNewListItem
            (
                NXOpen::CAE::CAEEdge * tMasterEdge /** The master edge */,
                NXOpen::CAE::CAEEdge * tTargetEdge /** The target edge */,
                bool fFlipDirection /** flip direction */
            );
            /** The mesh type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DependentMeshBuilder::MeshType GetMeshType
            (
            );
            /** The mesh type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshType
            (
                NXOpen::CAE::DependentMeshBuilder::MeshType type /** Mesh Type */
            );
            /** The cys  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::NXObject * GetCsys
            (
            );
            /** The cys  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCsys
            (
                NXOpen::NXObject * tCsys /**Csys */
            );
            /** Commits the creation of the @link NXOpen::CAE::DependentMesh NXOpen::CAE::DependentMesh@endlink  objects
                        or Commits the changes made to the @link NXOpen::CAE::DependentMesh NXOpen::CAE::DependentMesh@endlink 
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh2d * CommitDependentMesh
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
