#ifndef NXOpen_CAE_DURSPECIALISTDUTYCYCLEEVENTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTDUTYCYCLEEVENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistDutyCycleEventBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistEvent.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistDutyCycleEventBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistEvent;
    }
    class Expression;
    namespace CAE
    {
        class _DurSpecialistDutyCycleEventBuilderBuilder;
        class DurSpecialistDutyCycleEventBuilderImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistDutyCycleEvent NXOpen::CAE::DurSpecialistDutyCycleEvent@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistEventCollection::CreateDutyCycleEventBuilder  NXOpen::CAE::DurSpecialistEventCollection::CreateDutyCycleEventBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistDutyCycleEventBuilder : public NXOpen::Builder
        {
            /** Represents the event list operation type */
            public: enum Operation
            {
                OperationRemove/** Remove Event Data */,
                OperationMoveUp/** Move Event Data Up*/,
                OperationMoveDown/** Move Event Data Down */,
                OperationActivate/** Activate Event Data */,
                OperationDeactivate/** Deactivate Event Data */,
                OperationRepetitions/** Set repetitions on Event Data */
            };

            /** Represents the event list operation errors */
            public: enum OperationError
            {
                OperationErrorNone/** No Error */,
                OperationErrorCircular/** Circular Dependency Error */,
                OperationErrorInvalidRepetitions/** Invalid Number of Repetitions*/
            };

            private: DurSpecialistDutyCycleEventBuilderImpl * m_durspecialistdutycycleeventbuilder_impl;
            private: friend class  _DurSpecialistDutyCycleEventBuilderBuilder;
            protected: DurSpecialistDutyCycleEventBuilder();
            public: ~DurSpecialistDutyCycleEventBuilder();
            /**Returns  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /** Adds new the Event Data object to the list in the builder. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void AddEventData
            (
                NXOpen::CAE::DurSpecialistEvent * newEvent /** Event object*/
            );
            /** Edits selected Event Data objects in the builder. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void EditEventData
            (
                const std::vector<int> & indexes /** indexes */ ,
                NXOpen::CAE::DurSpecialistDutyCycleEventBuilder::Operation operation /** operation */ ,
                NXOpen::Expression * repetitions /** repetitions */ 
            );
            /** Sets a flag on the builder that indicates the importance of order of events. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetUseOrder
            (
                bool useOrder /** useorder */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
