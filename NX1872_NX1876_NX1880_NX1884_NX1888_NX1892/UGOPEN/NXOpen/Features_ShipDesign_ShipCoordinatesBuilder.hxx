#ifndef NXOpen_FEATURES_SHIPDESIGN_SHIPCOORDINATESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SHIPCOORDINATESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ShipCoordinatesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipCoordinatesBuilder;
        }
    }
    class Builder;
    class Point;
    class SelectDisplayableObject;
    class TaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ShipCoordinatesBuilderBuilder;
            class ShipCoordinatesBuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::ShipCoordinates NXOpen::Features::ShipDesign::ShipCoordinates@endlink  builder
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateShipCoordinatesBuilder  NXOpen::Features::ShipCollection::CreateShipCoordinatesBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AbsXValue </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            AbsYValue </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            AbsZValue </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DeltaX </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DeltaY </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DeltaZ </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            XDirection </td> <td> 
             
            Forward </td> </tr> 

            <tr><td> 
             
            XDistance </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            YDirection </td> <td> 
             
            Port </td> </tr> 

            <tr><td> 
             
            YDistance </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            ZDirection </td> <td> 
             
            Above </td> </tr> 

            <tr><td> 
             
            ZDistance </td> <td> 
             
            0 </td> </tr> 

            </table>  

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ShipCoordinatesBuilder : public NXOpen::Builder
            {
                /** Represents the options to select point or component. */
                public: enum Selection
                {
                    SelectionPoint/** Allows point selection. */,
                    SelectionComponent/** Allows routing component selection. */
                };

                /** Represents X-frame direction. */
                public: enum XDirectionType
                {
                    XDirectionTypeForward/** forward */ ,
                    XDirectionTypeAft/** aft */ 
                };

                /** Represents Y-frame direction. */
                public: enum YDirectionType
                {
                    YDirectionTypePort/** port */ ,
                    YDirectionTypeStarboard/** starboard */ 
                };

                /** Represents Z-frame direction. */
                public: enum ZDirectionType
                {
                    ZDirectionTypeAbove/** above */ ,
                    ZDirectionTypeBelow/** below */ 
                };

                private: ShipCoordinatesBuilderImpl * m_shipcoordinatesbuilder_impl;
                private: friend class  _ShipCoordinatesBuilderBuilder;
                protected: ShipCoordinatesBuilder();
                public: ~ShipCoordinatesBuilder();
                /**Returns  the point to define ship coordinates. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::Point * Point
                (
                );
                /**Sets  the point to define ship coordinates. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetPoint
                (
                    NXOpen::Point * selectPoint /** selectpoint */ 
                );
                /**Returns  the routing component. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::SelectDisplayableObject * RoutingComponent
                (
                );
                /** Cycles through the ports on the selected routing component. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void CycleRoutingPorts
                (
                );
                /**Returns  the X value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double AbsXValue
                (
                );
                /**Sets  the X value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetAbsXValue
                (
                    double doubleABSX /** doubleabsx */ 
                );
                /**Returns  the delta value whic is distance between current point and previous point along X-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double DeltaX
                (
                );
                /**Sets  the delta value whic is distance between current point and previous point along X-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetDeltaX
                (
                    double deltaX /** deltax */ 
                );
                /**Returns  the Y value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double AbsYValue
                (
                );
                /**Sets  the Y value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetAbsYValue
                (
                    double doubleABSY /** doubleabsy */ 
                );
                /**Returns  the delta value whic is distance between current point and previous point along Y-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double DeltaY
                (
                );
                /**Sets  the delta value whic is distance between current point and previous point along Y-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetDeltaY
                (
                    double deltaY /** deltay */ 
                );
                /**Returns  the Z value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double AbsZValue
                (
                );
                /**Sets  the Z value in absolute coordinate system. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetAbsZValue
                (
                    double doubleABSZ /** doubleabsz */ 
                );
                /**Returns  the delta value which is distance between current point and previous point long Z-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double DeltaZ
                (
                );
                /**Sets  the delta value which is distance between current point and previous point long Z-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetDeltaZ
                (
                    double deltaZ /** deltaz */ 
                );
                /**Returns  the X-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXString XFrameOption
                (
                );
                /**Sets  the X-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetXFrameOption
                (
                    const NXString & xFrame /** xframe */ 
                );
                /**Sets  the X-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                void SetXFrameOption
                (
                    const char * xFrame /** xframe */ 
                );
                /**Returns  the X-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::XDirectionType XDirection
                (
                );
                /**Sets  the X-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetXDirection
                (
                    NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::XDirectionType xDirection /** xdirection */ 
                );
                /**Returns  the distance along X-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double XDistance
                (
                );
                /**Sets  the distance along X-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetXDistance
                (
                    double doubleXDistance /** doublexdistance */ 
                );
                /**Returns  the Y-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXString YFrameOption
                (
                );
                /**Sets  the Y-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetYFrameOption
                (
                    const NXString & yFrame /** yframe */ 
                );
                /**Sets  the Y-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                void SetYFrameOption
                (
                    const char * yFrame /** yframe */ 
                );
                /**Returns  the Y-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::YDirectionType YDirection
                (
                );
                /**Sets  the Y-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetYDirection
                (
                    NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::YDirectionType yDirection /** ydirection */ 
                );
                /**Returns  the distance along Y-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double YDistance
                (
                );
                /**Sets  the distance along Y-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetYDistance
                (
                    double doubleYDistance /** doubleydistance */ 
                );
                /**Returns  the Z-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXString ZFrameOption
                (
                );
                /**Sets  the Z-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetZFrameOption
                (
                    const NXString & zFrame /** zframe */ 
                );
                /**Sets  the Z-frame option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                void SetZFrameOption
                (
                    const char * zFrame /** zframe */ 
                );
                /**Returns  the Z-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::ZDirectionType ZDirection
                (
                );
                /**Sets  the Z-frame direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetZDirection
                (
                    NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::ZDirectionType zDirection /** zdirection */ 
                );
                /**Returns  the distance along Z-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: double ZDistance
                (
                );
                /**Sets  the distance along Z-direction. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetZDistance
                (
                    double doubleZDistance /** doublezdistance */ 
                );
                /** Creates a standard point. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void CreatePointByCoordinates
                (
                );
                /**Returns  the selection type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::Selection SelectionType
                (
                );
                /**Sets  the selection type. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetSelectionType
                (
                    NXOpen::Features::ShipDesign::ShipCoordinatesBuilder::Selection type /** type */ 
                );
                /** Sets the point information into the ShipCoordinate builder and a standard point will be created according to the position. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void SetPosition
                (
                    const NXOpen::Point3d & position /** position */ 
                );
                /** Gets ports in component.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void GetPorts
                (
                    std::vector<NXOpen::TaggedObject *> & ports /** ports */ 
                );
                /** Evaluates the Nth ports information and sets them into ShipCoordinatesBuilder builder, the index starts from 1 and should be equal or less than number of ports.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void EvaluateSinglePortInformation
                (
                    int portIndex /** portindex */ 
                );
                /** Evaluates the point per position and and sets them into ShipCoordinatesBuilder builder. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") OR routing_base ("Routing Basic") */
                public: void EvaluatePointInformation
                (
                    const NXOpen::Point3d & position /** position */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
