#ifndef NXOpen_TOOLING_CREATEMOLDDESIGNREPORTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CREATEMOLDDESIGNREPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_CreateMoldDesignReportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Gateway_ImageCaptureBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class CreateMoldDesignReportBuilder;
    }
    class Builder;
    namespace Gateway
    {
        class ImageCaptureBuilder;
    }
    class TaggedObject;
    namespace Tooling
    {
        class _CreateMoldDesignReportBuilderBuilder;
        class CreateMoldDesignReportBuilderImpl;
        /** Represents a builder to be used to generate mold design report.  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldwizardManager::CreateMoldDesignReportBuilder  NXOpen::Tooling::MoldwizardManager::CreateMoldDesignReportBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ImageCapture.CaptureMethod </td> <td> 
         
        GraphicsArea </td> </tr> 

        <tr><td> 
         
        ImageCapture.Format </td> <td> 
         
        Bmp </td> </tr> 

        <tr><td> 
         
        ImageCapture.Size </td> <td> 
         
        Pixels64 </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  CreateMoldDesignReportBuilder : public NXOpen::Builder
        {
            /** Represents the type to add picture. */
            public: enum ImageType
            {
                ImageTypeAppend/** Add new image */,
                ImageTypeReplace/** Replace image */
            };

            private: CreateMoldDesignReportBuilderImpl * m_createmolddesignreportbuilder_impl;
            private: friend class  _CreateMoldDesignReportBuilderBuilder;
            protected: CreateMoldDesignReportBuilder();
            public: ~CreateMoldDesignReportBuilder();
            /**Returns  the image capture builder 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::ImageCaptureBuilder * ImageCapture
            (
            );
            /**Returns  the type for adding picture. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CreateMoldDesignReportBuilder::ImageType AddPictureType
            (
            );
            /**Sets  the type for adding picture. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetAddPictureType
            (
                NXOpen::Tooling::CreateMoldDesignReportBuilder::ImageType type /** type */ 
            );
            /** Returns the comment 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetComment
            (
            );
            /** Sets the comment 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetComment
            (
                std::vector<NXString> & comment /** comment */ 
            );
            /**Returns  the output file path browser. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXString OutputLocation
            (
            );
            /**Sets  the output file path browser. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetOutputLocation
            (
                const NXString & foldername /** foldername */ 
            );
            /**Sets  the output file path browser. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetOutputLocation
            (
                const char * foldername /** foldername */ 
            );
            /**Returns  the output file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXString FileName
            (
            );
            /**Sets  the output file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetFileName
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the output file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetFileName
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the image file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXString ImageFileName
            (
            );
            /**Sets  the image file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetImageFileName
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the image file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetImageFileName
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the navigator node data 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::TaggedObject * NavNodeTag
            (
            );
            /**Sets  the navigator node data 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetNavNodeTag
            (
                NXOpen::TaggedObject * navNodeData /** navnodedata */ 
            );
            /**Returns  the read only status of the opened powerpoint file
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: bool ReadOnlyStatus
            (
            );
            /**Sets  the read only status of the opened powerpoint file
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetReadOnlyStatus
            (
                bool readOnlyStatus /** readonlystatus */ 
            );
            /** Opens the powerpoint file
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void OpenPowerPointFile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
