#ifndef NXOpen_CAM_CYLINDERMILLINGCUTPARAMETERS_HXX_INCLUDED
#define NXOpen_CAM_CYLINDERMILLINGCUTPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CylinderMillingCutParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_CutParameters.hxx>
#include <NXOpen/CAM_CylinderMillingCutParameters.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CylinderMillingCutParameters;
    }
    namespace CAM
    {
        class CutParameters;
    }
    namespace CAM
    {
        class VerticalPosition;
    }
    namespace CAM
    {
        class _CylinderMillingCutParametersBuilder;
        class CylinderMillingCutParametersImpl;
        /** Represents a CylinderMillingCutParameters Builder 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CylinderMillingCutParameters : public CAM::CutParameters
        {
            /** cut direction options 
             <br>  Created in NX8.0.0.  <br>  
            */
            public: enum CutDirectionTypes
            {
                CutDirectionTypesClimb/** Climb cut */,
                CutDirectionTypesConventional/** Conventional cut */
            };

            private: CylinderMillingCutParametersImpl * m_cylindermillingcutparameters_impl;
            private: friend class  _CylinderMillingCutParametersBuilder;
            protected: CylinderMillingCutParameters();
            public: ~CylinderMillingCutParameters();
            /**Returns  the cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CylinderMillingCutParameters::CutDirectionTypes CutDirection
            (
            );
            /**Sets  the cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutDirection
            (
                NXOpen::CAM::CylinderMillingCutParameters::CutDirectionTypes cutDir /** the cut directon type */
            );
            /**Returns  the top offset 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::VerticalPosition * TopOffset
            (
            );
            /**Returns  the bottom offset 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::VerticalPosition * BottomOffset
            (
            );
            /**Returns  the continuous cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ContinuousCut
            (
            );
            /**Sets  the continuous cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetContinuousCut
            (
                bool continuousCut /** the continuous cut */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
