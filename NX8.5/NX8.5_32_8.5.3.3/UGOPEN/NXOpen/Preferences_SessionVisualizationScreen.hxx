#ifndef NXOpen_PREFERENCES_SESSIONVISUALIZATIONSCREEN_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONVISUALIZATIONSCREEN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionVisualizationScreen.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class SessionVisualizationScreen;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class SessionVisualizationScreenImpl;
        /** Represents the set of visualization preferences under screen tab applicable to entire session <br> To obtain an instance of this class, refer to @link Preferences::SessionPreferences  Preferences::SessionPreferences @endlink  <br> 
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  SessionVisualizationScreen
        {
            private: SessionVisualizationScreenImpl * m_sessionvisualizationscreen_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SessionVisualizationScreen(NXOpen::Preferences::SessionPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SessionVisualizationScreen();
            /**Returns  the fit percentage. Specifies the area of the graphics display to be occupied by the model after a fit operation 
            is performed. For example, a fit percentage of 100% scales the model so that it occupies 100% of the graphics display. 
            Similarly, a fit percentage of 80% fits the model within 80% of the graphics display area. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: int FitPercentage
            (
            );
            /**Sets  the fit percentage. Specifies the area of the graphics display to be occupied by the model after a fit operation 
            is performed. For example, a fit percentage of 100% scales the model so that it occupies 100% of the graphics display. 
            Similarly, a fit percentage of 80% fits the model within 80% of the graphics display area. 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFitPercentage
            (
                int fitPercentage /** fit percentage */ 
            );
            /**Returns  whether plotted edges reflect onscreen edge appearance. This option 
            affects the appearance of edges in output produced by Plot, Print, CGM 
            Export and similar functions. It affects edge appearance for modeling 
            views only, not for views on a drawing sheet. When this option is disabled, 
            the appearance of plotted edges is controlled by edge display options 
            (Hidden Edges, Silhouettes, Smooth Edges) used for Static Wireframe 
            rendering style. When this option is enabled, the appearance of plotted 
            edges is inferred from onscreen edge appearance. 
             <br>  Created in NX4.0.4.  <br>  
             <br> License requirements : None */
            public: bool InferEdgeOutput
            (
            );
            /**Sets  whether plotted edges reflect onscreen edge appearance. This option 
            affects the appearance of edges in output produced by Plot, Print, CGM 
            Export and similar functions. It affects edge appearance for modeling 
            views only, not for views on a drawing sheet. When this option is disabled, 
            the appearance of plotted edges is controlled by edge display options 
            (Hidden Edges, Silhouettes, Smooth Edges) used for Static Wireframe 
            rendering style. When this option is enabled, the appearance of plotted 
            edges is inferred from onscreen edge appearance. 
             <br>  Created in NX4.0.4.  <br>  
             <br> License requirements : None */
            public: void SetInferEdgeOutput
            (
                bool inferEdgeOutput /** infer edge output */ 
            );
            /**Returns   
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int TriadVisibility
            (
            );
            /**Sets   
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTriadVisibility
            (
                int triadVisibility /** triad visibility */ 
            );
            /**Returns   
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int RotationPointDelay
            (
            );
            /**Sets   
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationPointDelay
            (
                int rotationPointDelay /** rotation point delay */ 
            );
            /**Returns  the option to specify whether a Fit should be done when a Hide or Show is performed. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool DoFitOnHideOrShow
            (
            );
            /**Sets  the option to specify whether a Fit should be done when a Hide or Show is performed. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDoFitOnHideOrShow
            (
                bool doFitOnHideOrShow /** do fit on hide or show */ 
            );
            /**Returns  the option to specify whether datum objects and planar ship grids should not be examined
                when a Fit is done. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ExcludeDatumsFromFit
            (
            );
            /**Sets  the option to specify whether datum objects and planar ship grids should not be examined
                when a Fit is done. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetExcludeDatumsFromFit
            (
                bool excludeDatumsFromFit /** exclude datums from fit */ 
            );
            /**Returns  the option to specify whether, when sectioning is enabled for a view, the bounds computed
                by a Fit operation should be limited by the sectioning clipping planes. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool FitToSectionClipPlanes
            (
            );
            /**Sets  the option to specify whether, when sectioning is enabled for a view, the bounds computed
                by a Fit operation should be limited by the sectioning clipping planes. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFitToSectionClipPlanes
            (
                bool fitToSectionClipPlanes /** fit to section clip planes */ 
            );
            /**Returns  whether for a perspective view the Fit operation should not change the
                field of view angle from the camera position to the view bounds 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool PreserveFieldOfViewAngleForFit
            (
            );
            /**Sets  whether for a perspective view the Fit operation should not change the
                field of view angle from the camera position to the view bounds 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPreserveFieldOfViewAngleForFit
            (
                bool preserveFieldOfViewAngleForFit /** preserve field of view angle for fit */ 
            );
            /**Returns  whether mouse-driven rotation is to be done using a higher precision
                than normal, which means that a given mouse motion will result in
                a smaller rotation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool HighPrecisionRotation
            (
            );
            /**Sets  whether mouse-driven rotation is to be done using a higher precision
                than normal, which means that a given mouse motion will result in
                a smaller rotation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHighPrecisionRotation
            (
                bool highPrecisionRotation /** high precision rotation */ 
            );
            /**Returns  whether a graphic representing the center of rotation is displayed 
                during interactive view rotation. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool DisplayCenterOfRotation
            (
            );
            /**Sets  whether a graphic representing the center of rotation is displayed 
                during interactive view rotation. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDisplayCenterOfRotation
            (
                bool displayCenterOfRotation /** display center of rotation */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
