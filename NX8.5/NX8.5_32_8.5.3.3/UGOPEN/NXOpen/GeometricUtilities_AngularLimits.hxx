#ifndef NXOpen_GEOMETRICUTILITIES_ANGULARLIMITS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_ANGULARLIMITS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_AngularLimits.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_Limits.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class AngularLimits;
    }
    namespace GeometricUtilities
    {
        class Limits;
    }
    namespace GeometricUtilities
    {
        class _AngularLimitsBuilder;
        class AngularLimitsImpl;
        /** Represents a angular limts data. 
            
         <br>  Created in NX3.0.1.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  AngularLimits : public GeometricUtilities::Limits
        {
            private: AngularLimitsImpl * m_angularlimits_impl;
            private: friend class  _AngularLimitsBuilder;
            protected: AngularLimits();
            public: ~AngularLimits();
            /**Returns  a computed distance
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double Distance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
