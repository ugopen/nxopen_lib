#ifndef NXOpen_MECHATRONICS_OBJECTINFORMATIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_OBJECTINFORMATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ObjectInformationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Mechatronics_ObjectInformationBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ObjectInformationBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class _ObjectInformationBuilderBuilder;
        class ObjectInformationBuilderImpl;
        /** Represents a @link Mechatronics::ObjectInformationBuilder Mechatronics::ObjectInformationBuilder@endlink   <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ObjectInformationBuilder : public Builder
        {
            private: ObjectInformationBuilderImpl * m_objectinformationbuilder_impl;
            private: friend class  _ObjectInformationBuilderBuilder;
            protected: ObjectInformationBuilder();
            public: ~ObjectInformationBuilder();
            /**Returns  the item types. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ItemTypes
            (
            );
            /**Sets  the item types. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetItemTypes
            (
                const NXString & itemTypes /** itemtypes */ 
            );
            /**Sets  the item types. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetItemTypes
            (
                const char * itemTypes /** itemtypes */ 
            );
            /**Returns  the name of item. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ItemName
            (
            );
            /**Sets  the name of item. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetItemName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of item. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetItemName
            (
                const char * name /** name */ 
            );
            /** Gets the description.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDescription
            (
            );
            /** Sets the description. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetDescription
            (
                const std::vector<NXString> & description /** description */ 
            );
            /**Returns  the item ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ItemID
            (
            );
            /**Sets  the item ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetItemID
            (
                const NXString & itemID /** itemid */ 
            );
            /**Sets  the item ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetItemID
            (
                const char * itemID /** itemid */ 
            );
            /**Returns  the revision ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString RevisionID
            (
            );
            /**Sets  the revision ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetRevisionID
            (
                const NXString & revID /** revid */ 
            );
            /**Sets  the revision ID. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetRevisionID
            (
                const char * revID /** revid */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
