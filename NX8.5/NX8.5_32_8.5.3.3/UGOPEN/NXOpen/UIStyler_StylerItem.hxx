#ifndef NXOpen_UISTYLER_STYLERITEM_HXX_INCLUDED
#define NXOpen_UISTYLER_STYLERITEM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UIStyler_StylerItem.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/UIStyler_Attachment.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace UIStyler
    {
        class StylerItem;
    }
    namespace UIStyler
    {
        class Attachment;
    }
    namespace UIStyler
    {
        /** Represents the dialog state */
        enum DialogState
        {
            DialogStateContinueDialog/** Continue the dialog */,
            DialogStateExitDialog/** Exit from the dialog */
        };

    }
    namespace UIStyler
    {
        class StylerItemImpl;
        /** Represents a Styler Item 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  StylerItem : public TransientObject
        {
            /** Describes kind of action to be taken from callbac. */
            public: enum ItemType
            {
                ItemTypeInvalidType = -1/** Invalid item */,
                ItemTypeActionButton/** Action Button item */,
                ItemTypeDialog/** Dialog item */,
                ItemTypeRadioBox/** Radio Box item */,
                ItemTypeReal/** Real item */,
                ItemTypeScaleReal/** Real Scale item */,
                ItemTypeBitmap/** Bitmap item */,
                ItemTypeRowColumn/** Row Column item */,
                ItemTypeButtonLayout/** Button Layout item */,
                ItemTypeScrolledWindow/** Scrolled Window item */,
                ItemTypeColorTool/** Color Item */,
                ItemTypeSelectionBox/** Section Box item */,
                ItemTypeSeparator/** Separator item */,
                ItemTypeSingleSelectionList/** Single Selection List item */,
                ItemTypeString/** String item */,
                ItemTypeBeginGroup/** Begin Group item */,
                ItemTypeInteger/** Integer item */,
                ItemTypeScaleInteger/** Scale item */,
                ItemTypeMultiList/** Multi List item */,
                ItemTypeLabel/** Label item */,
                ItemTypeMultiLineText/** Multi-line text item */,
                ItemTypeTabControl/** Tab Control item */,
                ItemTypeOptionMenu/** Option Menu item */,
                ItemTypeToggle/** Toggle item */,
                ItemTypeOptionToggle/** Option Toggle item */,
                ItemTypeToolPalette/** Tool Palette item */,
                ItemTypeWideString/** Wide String item */,
                ItemTypePropertyPage/** Property Page item */,
                ItemTypeCollapsibleGroup/** Callapsible Group item */
            };

            private: StylerItemImpl * m_styleritem_impl;
            /// \cond NX_NO_DOC 
            public: explicit StylerItem(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                is called, it is illegal to use the object.  In .NET or Java, this 
                method is automatically called when the object is deleted by the 
                garbage collector. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~StylerItem();
            /** Gets the dialog item type. User can write programs to query this attribute and determine the 
                type of a dialog item in order to determine what further actions should be taken. @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::UIStyler::StylerItem::ItemType GetItemType
            (
            );
            /** Returns initialized dialog item attachment information  @return attachment object
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::UIStyler::Attachment * InitializeAttachment
            (
            );
            /**Specifies the updated dialog item attachment information 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAttachment
            (
                NXOpen::UIStyler::Attachment * attachment /**attachment object*/
            );
            /** Equates two styler items  @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsEqualTo
            (
                NXOpen::UIStyler::StylerItem * itemToCompare /** styler item to compare*/
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
