#ifndef NXOpen_SCALARMATRIXVALUE_HXX_INCLUDED
#define NXOpen_SCALARMATRIXVALUE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ScalarMatrixValue.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeneralScalarTable.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ScalarMatrixValue;
    class GeneralScalarTable;
    class Unit;
    class ScalarMatrixValueImpl;
    /**  @brief  Represents a General M x N matrix of scalar (real) values.   

      
     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  ScalarMatrixValue : public GeneralScalarTable
    {
        private: ScalarMatrixValueImpl * m_scalarmatrixvalue_impl;
        /// \cond NX_NO_DOC 
        public: explicit ScalarMatrixValue(void *ptr);
        /// \endcond 
        /**Returns  the units for the Matrix Value.  
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Unit * Units
        (
        );
        /**Sets  the units for the Matrix Value.  
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetUnits
        (
            NXOpen::Unit * unitType /** unit type */ 
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
