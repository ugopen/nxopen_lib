#ifndef NXOpen_ROUTING_FILLERSTOCKBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_FILLERSTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_FillerStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_FillerStockBuilder.hxx>
#include <NXOpen/Routing_PathStockBuilder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class FillerStockBuilder;
    }
    class Builder;
    namespace Routing
    {
        class PathStockBuilder;
    }
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        class _FillerStockBuilderBuilder;
        class FillerStockBuilderImpl;
        /** Creates Filler stock on selected Segments.  <br> To create a new instance of this class, use @link Routing::RouteManager::CreateFillerStockBuilder  Routing::RouteManager::CreateFillerStockBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        RemoveExistingStock </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        StockSettings.AssignStockMethod </td> <td> 
         
        SpecifiedStock </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  FillerStockBuilder : public Builder
        {
            private: FillerStockBuilderImpl * m_fillerstockbuilder_impl;
            private: friend class  _FillerStockBuilderBuilder;
            protected: FillerStockBuilder();
            public: ~FillerStockBuilder();
            /**Returns  the route selection which allows selection of routing objects
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Routing::RouteObjectCollector * RouteSelection
            (
            );
            /**Returns  the stock settings for creating filler stock. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Routing::PathStockBuilder * StockSettings
            (
            );
            /**Sets  the stock settings for creating filler stock. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetStockSettings
            (
                NXOpen::Routing::PathStockBuilder * stockBuilder /** stockbuilder */ 
            );
            /**Returns  the remove existing stock flag. If set to TRUE the existing stock
                        on the path will be removed when assigning new stock.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: bool RemoveExistingStock
            (
            );
            /**Sets  the remove existing stock flag. If set to TRUE the existing stock
                        on the path will be removed when assigning new stock.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetRemoveExistingStock
            (
                bool removeStock /** removestock */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
