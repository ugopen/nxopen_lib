#ifndef NXOpen_ANNOTATIONS_CHAMFERDIMENSIONPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CHAMFERDIMENSIONPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_ChamferDimensionPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Dimensions.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class ChamferDimensionPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class ChamferDimensionPreferencesImpl;
        /** Represents chamfer dimension preferences 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  ChamferDimensionPreferences : public TransientObject
        {
            private: ChamferDimensionPreferencesImpl * m_chamferdimensionpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit ChamferDimensionPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ChamferDimensionPreferences();
            /**Returns  the form 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ChamferForm Form
            (
            );
            /**Sets  the form 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetForm
            (
                NXOpen::Annotations::ChamferForm form /** New form */
            );
            /**Returns  the stub type 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ChamferStubType StubType
            (
            );
            /**Sets  the stub type 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStubType
            (
                NXOpen::Annotations::ChamferStubType type /** New stub type */
            );
            /**Returns  the leader placement relative to the chamfer 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ChamferLeaderPlacement LeaderPlacement
            (
            );
            /**Sets  the leader placement relative to the chamfer 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLeaderPlacement
            (
                NXOpen::Annotations::ChamferLeaderPlacement leaderPlacement /** New leader placement relative to chamfer */
            );
            /**Returns  the symbol placement 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ChamferSymbolPlacement SymbolPlacement
            (
            );
            /**Sets  the symbol placement 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSymbolPlacement
            (
                NXOpen::Annotations::ChamferSymbolPlacement symbolPlacement /** New symbol placement */
            );
            /**Returns  the symbol name 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SymbolName
            (
            );
            /**Sets  the symbol name 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSymbolName
            (
                const NXString & symbolName /** New symbol name */
            );
            /**Sets  the symbol name 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetSymbolName
            (
                const char * symbolName /** New symbol name */
            );
            /**Returns  the space between the text characters or symbols as a factor of the character size 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double CharacterSpacing
            (
            );
            /**Sets  the space between the text characters or symbols as a factor of the character size 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCharacterSpacing
            (
                double characterSpacing /** New character spacing */
            );
            /**Returns  the separator type 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ChamferSeparatorType Separator
            (
            );
            /**Sets  the separator type 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSeparator
            (
                NXOpen::Annotations::ChamferSeparatorType separator /** New separator type */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
