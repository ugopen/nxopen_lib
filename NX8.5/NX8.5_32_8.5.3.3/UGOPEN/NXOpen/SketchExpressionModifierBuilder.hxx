#ifndef NXOpen_SKETCHEXPRESSIONMODIFIERBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHEXPRESSIONMODIFIERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchExpressionModifierBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/SketchExpressionModifierBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SketchExpressionModifierBuilder;
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Sketch;
    class _SketchExpressionModifierBuilderBuilder;
    class SketchExpressionModifierBuilderImpl;
    /** Represents a Sketch Expression Modifier Builder. 
     <br>  Created in NX5.3.0.  <br>  
    */
    class NXOPENCPPEXPORT  SketchExpressionModifierBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
    {
        /** End cut */
        public: enum EndCuts
        {
            EndCutsEndCut1/** end cut1 */ ,
            EndCutsEndCut2/** end cut2 */ 
        };

        private: SketchExpressionModifierBuilderImpl * m_sketchexpressionmodifierbuilder_impl;
        private: friend class  _SketchExpressionModifierBuilderBuilder;
        protected: SketchExpressionModifierBuilder();
        public: ~SketchExpressionModifierBuilder();
        /**Returns  the sketches 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SketchExpressionModifierBuilder::EndCuts Sketches
        (
        );
        /**Sets  the sketches 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetSketches
        (
            NXOpen::SketchExpressionModifierBuilder::EndCuts sketches /** sketches */ 
        );
        /**Returns  the exp1 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp1
        (
        );
        /**Returns  the exp2 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp2
        (
        );
        /**Returns  the exp3 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp3
        (
        );
        /**Returns  the exp4 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp4
        (
        );
        /**Returns  the exp5 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp5
        (
        );
        /**Returns  the exp6 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp6
        (
        );
        /**Returns  the exp7 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp7
        (
        );
        /**Returns  the exp8 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp8
        (
        );
        /**Returns  the exp9 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp9
        (
        );
        /**Returns  the exp10 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp10
        (
        );
        /**Returns  the exp11 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp11
        (
        );
        /**Returns  the exp12 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Expression * Exp12
        (
        );
        /**Returns  the sketch 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Sketch * Sketch
        (
        );
        /**Sets  the sketch 
         <br>  Created in NX5.3.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetSketch
        (
            NXOpen::Sketch * sketchTag /** sketchtag */ 
        );
        /** Validate whether the inputs to the component are sufficient for 
                    commit to be called.  If the component is not in a state to commit
                    then an exception is thrown.  For example, if the component requires
                    you to set some property, this method will throw an exception if
                    you haven't set it.  This method throws a not-yet-implemented
                    NXException for some components.
                 @return  Was self validation successful 
         <br>  Created in NX3.0.1.  <br>  
         <br> License requirements : None */
        public: virtual bool Validate
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
