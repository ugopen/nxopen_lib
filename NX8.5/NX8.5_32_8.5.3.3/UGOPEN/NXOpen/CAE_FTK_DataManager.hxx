#ifndef NXOpen_CAE_FTK_DATAMANAGER_HXX_INCLUDED
#define NXOpen_CAE_FTK_DATAMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_DataManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord2D.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord3D.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_FTK_BaseUnit.hxx>
#include <NXOpen/CAE_XYFunctionDataTypes.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class DataManager;
        }
    }
    class Session;
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord2D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord3D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseUnit;
        }
    }
    class Unit;
    namespace CAE
    {
        namespace FTK
        {
            class DataManagerImpl;
            /** Ftk data manager  <br> To obtain an instance of this class use @link Session::DataManager Session::DataManager@endlink .  <br> 
             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  DataManager
            {
                private: DataManagerImpl * m_datamanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit DataManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~DataManager();
                /** Loads afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void LoadFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Loads afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                void LoadFile
                (
                    const char * fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Unloads afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void UnloadFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Unloads afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                void UnloadFile
                (
                    const char * fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Deletes afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void DeleteFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Deletes afu/op2 file 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                void DeleteFile
                (
                    const char * fileName /** Afu/Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Gets afu record  @return  Afu record data 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::BaseRecord * GetAfuRecord
                (
                    const NXString & afuFileName /** Afu file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & recordName /** Afu record name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Gets afu record  @return  Afu record data 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                NXOpen::CAE::FTK::BaseRecord * GetAfuRecord
                (
                    const char * afuFileName /** Afu file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * recordName /** Afu record name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Gets op2 record  @return  Op2 record data 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::BaseRecord * GetOp2Record
                (
                    const NXString & op2FileName /** Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & dataSetName /** Op2 data set name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & recordName /** Op2 record name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Gets op2 record  @return  Op2 record data 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                NXOpen::CAE::FTK::BaseRecord * GetOp2Record
                (
                    const char * op2FileName /** Op2 file name with full path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * dataSetName /** Op2 data set name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * recordName /** Op2 record name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Creates 2d array record  @return  2D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::ArrayRecord2D * CreateArrayRecord2d
                (
                    const NXString & titleName /** Title name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & legendName /** Legend name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    int numPoints /** Point count */
                );
                /** Creates 2d array record  @return  2D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                NXOpen::CAE::FTK::ArrayRecord2D * CreateArrayRecord2d
                (
                    const char * titleName /** Title name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * legendName /** Legend name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    int numPoints /** Point count */
                );
                /** Creates 3d array record  @return  3D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::ArrayRecord3D * CreateArrayRecord3d
                (
                    const NXString & titleName /** Title name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & legendName /** Legend name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    int numPoints /** Point count */
                );
                /** Creates 3d array record  @return  3D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                NXOpen::CAE::FTK::ArrayRecord3D * CreateArrayRecord3d
                (
                    const char * titleName /** Title name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * legendName /** Legend name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    int numPoints /** Point count */
                );
                /** Deletes record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void DeleteRecord
                (
                    NXOpen::CAE::FTK::BaseRecord * deletedRecord /** Deleted record */
                );
                /** Creates array unit by nx system unit  @return  Array unit 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** NX system unit */
                );
                /** Creates array unit by xy function unit  @return  Array unit 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::CAE::XyFunctionMeasure measureType /** Unit measure type */,
                    NXOpen::CAE::XyFunctionUnit unitType /** Unit type */
                );
                /** Creates array unit by numerator and denominator unit  @return  Array unit 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * numeratorUnit /** Numerator unit */,
                    NXOpen::CAE::FTK::BaseUnit * denominatorUnit /** Denominator unit */
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
