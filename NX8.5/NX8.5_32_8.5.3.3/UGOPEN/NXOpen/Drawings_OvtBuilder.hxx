#ifndef NXOpen_DRAWINGS_OVTBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_OVTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_OvtBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_OvtBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class OvtBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drawings
    {
        class _OvtBuilderBuilder;
        class OvtBuilderImpl;
        /**
            Represents a @link Drawings::OvtBuilder Drawings::OvtBuilder@endlink 
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  OvtBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: OvtBuilderImpl * m_ovtbuilder_impl;
            private: friend class  _OvtBuilderBuilder;
            protected: OvtBuilder();
            public: ~OvtBuilder();
            /**Returns  the vector that represents the normal direction for the view to be created or edited 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Direction * NormalDirection
            (
            );
            /**Sets  the vector that represents the normal direction for the view to be created or edited 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetNormalDirection
            (
                NXOpen::Direction * normalDirection /** normaldirection */ 
            );
            /**Returns  the x direction vector for the view to be created or edited 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Direction * XDirection
            (
            );
            /**Sets  the x direction vector for the view to be created or edited 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetXDirection
            (
                NXOpen::Direction * xDirection /** xdirection */ 
            );
            /**Returns  the associative orientation that specifies whether or not the view 
                        will be associative to the specified plane and/or X direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: bool AssociativeOrientation
            (
            );
            /**Sets  the associative orientation that specifies whether or not the view 
                        will be associative to the specified plane and/or X direction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAssociativeOrientation
            (
                bool associativeOrientation /** associativeorientation */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
