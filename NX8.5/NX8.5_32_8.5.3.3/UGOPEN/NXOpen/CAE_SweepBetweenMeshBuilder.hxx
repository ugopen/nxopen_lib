#ifndef NXOpen_CAE_SWEEPBETWEENMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SWEEPBETWEENMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SweepBetweenMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_AutomaticSweepBetweenSelection.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/CAE_ManualSweepBetweenSelection.hxx>
#include <NXOpen/CAE_SweepBetweenMeshBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SweepBetweenMeshBuilder;
    }
    class Builder;
    namespace CAE
    {
        class AutomaticSweepBetweenSelection;
    }
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class ManualSweepBetweenSelection;
    }
    namespace CAE
    {
        class _SweepBetweenMeshBuilderBuilder;
        class SweepBetweenMeshBuilderImpl;
        /**
            Builder for creating swept mesh between faces. 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateSweepBetweenMeshBuilder  CAE::NodeElementManager::CreateSweepBetweenMeshBuilder @endlink  <br> 
         <br>  Created in NX7.5.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SweepBetweenMeshBuilder : public Builder
        {
            /** creation type */
            public: enum Types
            {
                TypesAutomatic/** Automatic */,
                TypesManual/** Manual */
            };

            private: SweepBetweenMeshBuilderImpl * m_sweepbetweenmeshbuilder_impl;
            private: friend class  _SweepBetweenMeshBuilderBuilder;
            protected: SweepBetweenMeshBuilder();
            public: ~SweepBetweenMeshBuilder();
            /**Returns  the manual sweep between selection 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ManualSweepBetweenSelection * ManualSweepBetween
            (
            );
            /**Returns  the automatic sweep between mesh selection 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::AutomaticSweepBetweenSelection * AutomaticSweepBetween
            (
            );
            /**Returns  the element type builder.  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the type of builder 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SweepBetweenMeshBuilder::Types Type
            (
            );
            /**Sets  the type of builder 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetType
            (
                NXOpen::CAE::SweepBetweenMeshBuilder::Types type /** type */ 
            );
            /**Returns  the number of layers 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumLayers
            (
            );
            /**Sets  the number of layers 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumLayers
            (
                int numLayers /** num layers */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
