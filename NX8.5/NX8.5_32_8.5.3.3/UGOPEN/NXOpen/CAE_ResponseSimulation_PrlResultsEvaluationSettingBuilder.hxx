#ifndef NXOpen_CAE_RESPONSESIMULATION_PRLRESULTSEVALUATIONSETTINGBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_PRLRESULTSEVALUATIONSETTINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_PrlResultsEvaluationSettingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_DynamicResultEvaluationSettingBuilder.hxx>
#include <NXOpen/CAE_ResponseSimulation.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class PrlResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class DynamicResultEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _PrlResultsEvaluationSettingBuilderBuilder;
            class PrlResultsEvaluationSettingBuilderImpl;
            /** Represents the abstract builder class of evaluation setting for peak value, RMS results
                and LCR results.  <br> This is an abstract class, and cannot be created.  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  PrlResultsEvaluationSettingBuilder : public CAE::ResponseSimulation::DynamicResultEvaluationSettingBuilder
            {
                private: PrlResultsEvaluationSettingBuilderImpl * m_prlresultsevaluationsettingbuilder_impl;
                private: friend class  _PrlResultsEvaluationSettingBuilderBuilder;
                protected: PrlResultsEvaluationSettingBuilder();
                public: ~PrlResultsEvaluationSettingBuilder();
                /**Returns  the result type 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::EvaluationResultType ResultType
                (
                );
                /**Sets  the result type 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetResultType
                (
                    NXOpen::CAE::ResponseSimulation::EvaluationResultType resultType /** result type */ 
                );
                /** Returns the destination nodes. Only available when result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeDisplacement CAE::ResponseSimulation::EvaluationResultTypeDisplacement@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeAcceleration CAE::ResponseSimulation::EvaluationResultTypeAcceleration@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeElementForce CAE::ResponseSimulation::EvaluationResultTypeElementForce@endlink 
                         @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXOpen::CAE::FENode *> GetOutputNodes
                (
                );
                /** Sets the destination nodes 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetOutputNodes
                (
                    const std::vector<NXOpen::CAE::FENode *> & destinationNodes /** destination nodes */ 
                );
                /**Returns  the option of using the observation node in evaluation
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool Relative
                (
                );
                /**Sets  the option of using the observation node in evaluation
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetRelative
                (
                    bool relative /** relative */ 
                );
                /**Returns  the relative node.Only available when result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeDisplacement CAE::ResponseSimulation::EvaluationResultTypeDisplacement@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeAcceleration CAE::ResponseSimulation::EvaluationResultTypeAcceleration@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeElementForce CAE::ResponseSimulation::EvaluationResultTypeElementForce@endlink 
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::FENode * ObservationNode
                (
                );
                /**Sets  the relative node.Only available when result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeDisplacement CAE::ResponseSimulation::EvaluationResultTypeDisplacement@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeAcceleration CAE::ResponseSimulation::EvaluationResultTypeAcceleration@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeElementForce CAE::ResponseSimulation::EvaluationResultTypeElementForce@endlink 
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetObservationNode
                (
                    NXOpen::CAE::FENode * relativeNode /** relative node */ 
                );
                /** Returns the destination elements. Only available when the result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeStress CAE::ResponseSimulation::EvaluationResultTypeStress@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeShellResultant CAE::ResponseSimulation::EvaluationResultTypeShellResultant@endlink 
                         @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXOpen::CAE::FEElement *> GetOutputElements
                (
                );
                /** Sets the destination elements 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetOutputElements
                (
                    const std::vector<NXOpen::CAE::FEElement *> & destinationElements /** destination elements */ 
                );
                /**Returns  the coordinate system. Only available when the result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeStress CAE::ResponseSimulation::EvaluationResultTypeStress@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeShellResultant CAE::ResponseSimulation::EvaluationResultTypeShellResultant@endlink 
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::CoordinateSystem CoordinateSystem
                (
                );
                /**Sets  the coordinate system. Only available when the result type is 
                        @link CAE::ResponseSimulation::EvaluationResultTypeStress CAE::ResponseSimulation::EvaluationResultTypeStress@endlink ,
                        @link CAE::ResponseSimulation::EvaluationResultTypeShellResultant CAE::ResponseSimulation::EvaluationResultTypeShellResultant@endlink 
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetCoordinateSystem
                (
                    NXOpen::CAE::ResponseSimulation::CoordinateSystem coordinateSystem /** coordinate system */ 
                );
                /** Returns the direction data components. The condidate choices will be changed according to 
                        @link CAE::ResponseSimulation::EvaluationResultType CAE::ResponseSimulation::EvaluationResultType@endlink  setting
                         @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXOpen::CAE::ResponseSimulation::DirectionDataComponent> GetDataComponents
                (
                );
                /** Sets the direction data components. The condidate choices will be changed according to 
                        @link CAE::ResponseSimulation::EvaluationResultType CAE::ResponseSimulation::EvaluationResultType@endlink  setting
                        
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDataComponents
                (
                    const std::vector<NXOpen::CAE::ResponseSimulation::DirectionDataComponent> & dataComponent /** data component */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
