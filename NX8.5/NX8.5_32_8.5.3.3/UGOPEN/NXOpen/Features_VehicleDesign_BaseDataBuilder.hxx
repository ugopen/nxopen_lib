#ifndef NXOpen_FEATURES_VEHICLEDESIGN_BASEDATABUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_BASEDATABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_BaseDataBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataBuilder.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataDriverBuilder.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataLoadingBuilder.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataPassengerBuilder.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataWheelBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataBuilder;
        }
    }
    class Builder;
    class Expression;
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataDriverBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataLoadingBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataPassengerBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataWheelBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class _BaseDataBuilderBuilder;
            class BaseDataBuilderImpl;
            /** Represents a @link Features::VehicleDesign::BaseDataBuilder Features::VehicleDesign::BaseDataBuilder@endlink .  <br> To create a new instance of this class, use @link Features::AutomotiveCollection::CreateBaseDataBuilder  Features::AutomotiveCollection::CreateBaseDataBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  BaseDataBuilder : public Builder
            {
                private: BaseDataBuilderImpl * m_basedatabuilder_impl;
                private: friend class  _BaseDataBuilderBuilder;
                protected: BaseDataBuilder();
                public: ~BaseDataBuilder();
                /**Returns  the vehicle category. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString VehicleCategory
                (
                );
                /**Sets  the vehicle category. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVehicleCategory
                (
                    const NXString & vehicleCategory /** vehiclecategory */ 
                );
                /**Sets  the vehicle category. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetVehicleCategory
                (
                    const char * vehicleCategory /** vehiclecategory */ 
                );
                /**Returns  the name or short description of the vehicle. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString VehicleDescription
                (
                );
                /**Sets  the name or short description of the vehicle. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVehicleDescription
                (
                    const NXString & vehicleDescription /** vehicledescription */ 
                );
                /**Sets  the name or short description of the vehicle. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetVehicleDescription
                (
                    const char * vehicleDescription /** vehicledescription */ 
                );
                /** Returns the wheelbase of the vehicle. Wheelbase is a computed value and cannot be changed by the user. 
                                The underlying formula calculates wheelbase based on the x coordinate of the rear wheel center point
                                minus the x coordinate of the front wheel center point.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: double GetWheelbase
                (
                );
                /** Returns the front overhang of the vehicle. 
                                The front overhang is measured from the front wheel center point in the negative x direction.  @return  
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp to query or edit it.") double GetFrontOverhang
                (
                );
                /** Sets the front overhang of the vehicle.
                                The front overhang is measured from the front wheel center point in the negative x direction.
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::FrontOverhangExp to query or edit it.") void SetFrontOverhang
                (
                    double overhangFront /** overhangfront */ 
                );
                /** Returns the rear overhang of the vehicle. 
                            The rear overhang is measured from the rear wheel center point in the positive x direction.  @return  
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::RearOverhangExp Features::VehicleDesign::BaseDataBuilder::RearOverhangExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::RearOverhangExp to query or edit it.") double GetRearOverhang
                (
                );
                /** Sets the rear overhang of the vehicle.
                            The rear overhang is measured from the rear wheel center point in the positive x direction. 
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::RearOverhangExp Features::VehicleDesign::BaseDataBuilder::RearOverhangExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::RearOverhangExp to query or edit it.") void SetRearOverhang
                (
                    double overhangBack /** overhangback */ 
                );
                /** Returns the overall vehicle length. Vehicle length is a computed value and cannot be changed by the user. 
                                The underlying formula calculates vehicle length based on wheelbase plus front and back overhang. @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: double GetVehicleLength
                (
                );
                /** Returns the vehicle width. The vehicle width is calculated outgoing from the vehicle
                                mid plane half of the defined value in positive y direction and as well half of the 
                                defined value in negative y direction. @return  
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp to query or edit it.") double GetVehicleWidth
                (
                );
                /** Sets the vehicle width. The vehicle width is calculated outgoing from the vehicle
                                mid plane half of the defined value in positive y direction and as well half of the 
                                defined value in negative y direction. 
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::VehicleWidthExp to query or edit it.") void SetVehicleWidth
                (
                    double vehicleWidth /** vehiclewidth */ 
                );
                /** Returns the body width. This value is used for calculating the fields of vision 
                                according to US and CDN standards instead of vehicle width.  @return  
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::BodyWidthExp Features::VehicleDesign::BaseDataBuilder::BodyWidthExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::BodyWidthExp to query or edit it.") double GetBodyWidth
                (
                );
                /** Sets the body width.  This value is used for calculating the fields of vision 
                                according to US and CDN standards instead of vehicle width. 
                 <br>  @deprecated Deprecated in NX8.5.3.  Obtain the expression using @link Features::VehicleDesign::BaseDataBuilder::BodyWidthExp Features::VehicleDesign::BaseDataBuilder::BodyWidthExp@endlink  to query or edit it. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public:  NX_DEPRECATED("Deprecated in NX8.5.3.  Obtain the expression using Features::VehicleDesign::BaseDataBuilder::BodyWidthExp to query or edit it.") void SetBodyWidth
                (
                    double bodyWidth /** bodywidth */ 
                );
                /**Returns  the wheel position definition option of the vehicle. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataWheelBuilder::PositionDefinitionOptions WheelPositionDefinition
                (
                );
                /**Sets  the wheel position definition option of the vehicle. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetWheelPositionDefinition
                (
                    NXOpen::Features::VehicleDesign::BaseDataWheelBuilder::PositionDefinitionOptions positionDefinition /** positiondefinition */ 
                );
                /** Gets the nth wheel.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataWheelBuilder * GetNthWheel
                (
                    int nWheelIndex /** nwheelindex */ 
                );
                /**Returns  the option to indicate whether to show curve or not. If it is true, the wheel curve is shown. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowWireframe
                (
                );
                /**Sets  the option to indicate whether to show curve or not. If it is true, the wheel curve is shown. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetShowWireframe
                (
                    bool showWireframe /** showwireframe */ 
                );
                /**Returns  the option to indicate whether to show surface or not. If it is true, the wheel surface is shown.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowSurface
                (
                );
                /**Sets  the option to indicate whether to show surface or not. If it is true, the wheel surface is shown.
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetShowSurface
                (
                    bool showSurface /** showsurface */ 
                );
                /**Returns  the driver builder, which represents a @link Features::VehicleDesign::BaseDataDriverBuilder Features::VehicleDesign::BaseDataDriverBuilder@endlink . 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataDriverBuilder * Driver
                (
                );
                /** Creates an instance of @link Features::VehicleDesign::BaseDataPassengerBuilder Features::VehicleDesign::BaseDataPassengerBuilder@endlink  from another instance.
                                If pOther is NULL, the created builder will be initialized with default value.
                                If pOther is not NULL, the created builder will be iniialized with pOther's value.
                              @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * CreatePassenger
                (
                    NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * pOther /** Data to be initialized from, can be NULL */
                );
                /** Adds a passenger, which represents @link Features::VehicleDesign::BaseDataPassengerBuilder Features::VehicleDesign::BaseDataPassengerBuilder@endlink , to the base data. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void AddPassenger
                (
                    NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * passenger /** passenger */ 
                );
                /** Removes a passenger, which represents @link Features::VehicleDesign::BaseDataPassengerBuilder Features::VehicleDesign::BaseDataPassengerBuilder@endlink , from the base data. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void RemovePassenger
                (
                    NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * passenger /** passenger */ 
                );
                /** Returns the total number of passengers in the base data.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: int GetPassengerCount
                (
                );
                /** Returns the nth passenger, which represents @link Features::VehicleDesign::BaseDataPassengerBuilder Features::VehicleDesign::BaseDataPassengerBuilder@endlink , from the base data.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * GetNthPassenger
                (
                    int nIndex /** nindex */ 
                );
                /**Returns  the passenger definition. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataPassengerBuilder * PassengerDefinition
                (
                );
                /** Creates an instance of @link Features::VehicleDesign::BaseDataLoadingBuilder Features::VehicleDesign::BaseDataLoadingBuilder@endlink  from another instance.
                                If pOther is NULL, the created builder will be initialized with default value.
                                If pOther is not NULL, the created builder will be iniialized with pOther's value.
                              @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * CreateLoading
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * pOther /** data to be initialized from, can be NULL */
                );
                /** Adds a loading, which represents @link Features::VehicleDesign::BaseDataLoadingBuilder Features::VehicleDesign::BaseDataLoadingBuilder@endlink , to the base data. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void AddLoading
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * loading /** loading */ 
                );
                /** Removes a loading, which represents @link Features::VehicleDesign::BaseDataLoadingBuilder Features::VehicleDesign::BaseDataLoadingBuilder@endlink , from the base data. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void RemoveLoading
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * loading /** loading */ 
                );
                /** Returns the total number of loadings in the base data.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: int GetLoadingCount
                (
                );
                /** Returns the nth loading, which represents @link Features::VehicleDesign::BaseDataLoadingBuilder Features::VehicleDesign::BaseDataLoadingBuilder@endlink , from the base data.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * GetNthLoading
                (
                    int nIndex /** nindex */ 
                );
                /**Returns  the loading definition. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * LoadingDefinition
                (
                );
                /**Returns  the front overhang of the vehicle which is measured from the front wheel center point in the negative x direction. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FrontOverhangExp
                (
                );
                /**Returns  the rear overhang of the vehicle which is measured from the rear wheel center point in the positive x direction. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * RearOverhangExp
                (
                );
                /**Returns  the vehicle width which is calculated outgoing from the vehicle mid plane half of the defined value in positive y direction and as well half of the defined value in negative y direction.
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * VehicleWidthExp
                (
                );
                /**Returns  the body width which is used for calculating the fields of vision according to US and CDN standards instead of vehicle width. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * BodyWidthExp
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
