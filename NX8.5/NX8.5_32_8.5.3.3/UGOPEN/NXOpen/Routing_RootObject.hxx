#ifndef NXOpen_ROUTING_ROOTOBJECT_HXX_INCLUDED
#define NXOpen_ROUTING_ROOTOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_RootObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class RootObject;
    }
    class NXObject;
    namespace Routing
    {
        class _RootObjectBuilder;
        class RootObjectImpl;
        /**
                
                The @link Routing::RootObject Routing::RootObject@endlink  is the parent
                class of all other Routing logical objects.  Every child inherits the Global Object
                Identifier (GUID) attribute and methods from @link Routing::RootObject Routing::RootObject@endlink .
                
                 <br> 
                See NX Routing help for the Connectivity data model documentation.
                 <br> 
              <br> Creator not available in KF.  <br> 
         <br>  Created in NX4.0.2.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  RootObject : public NXObject
        {
            private: RootObjectImpl * m_rootobject_impl;
            private: friend class  _RootObjectBuilder;
            protected: RootObject();
            public: ~RootObject();
            /**Returns  the object's Global Unique Identifier (GUID). 
             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXString Guid
            (
            );
            /**Sets  the object's Global Unique Identifier (GUID). 
             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetGuid
            (
                const NXString & guid /** guid */ 
            );
            /**Sets  the object's Global Unique Identifier (GUID). 
             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            void SetGuid
            (
                const char * guid /** guid */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
