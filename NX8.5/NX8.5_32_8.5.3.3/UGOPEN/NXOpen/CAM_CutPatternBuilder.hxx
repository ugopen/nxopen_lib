#ifndef NXOpen_CAM_CUTPATTERNBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CUTPATTERNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutPatternBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_CutPatternBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CutPatternBuilder;
    }
    namespace CAM
    {
        class _CutPatternBuilderBuilder;
        class CutPatternBuilderImpl;
        /** Represents a Cut Pattern Builder 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CutPatternBuilder : public TaggedObject
        {
            /** cut pattern options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum Types
            {
                TypesNone/** None */,
                TypesFollowPart/** Follow Part */,
                TypesFollowPeriphery/** Follow Periphery */,
                TypesHelical/** Helical */,
                TypesSpiral/** Spiral */,
                TypesHelicalSpiral/** Helical or Spiral */,
                TypesMixed/** Mixed */,
                TypesProfile/** Profile */,
                TypesStandardDrive/** Standard Drive */,
                TypesTrochoidal/** Trochoidal */,
                TypesZig/** Zig */,
                TypesZigZag/** Zig Zag */,
                TypesZigZagWithLifts = 14/** Zig Zag with Lifts */,
                TypesZigWithContour/** Zig with Contour */,
                TypesZigWithStepover/** Zig with Stepover */,
                TypesConcentricZig/** Concentric Zig */,
                TypesConcentricZigZag/** Concentric Zig Zag */,
                TypesConcentricZigWithContour/** Concentric Zig with Contour */,
                TypesConcentricZigWithStepover/** Concentric Zig with Stepover */,
                TypesRadialZig/** Radial Zig */,
                TypesRadialZigZag/** Radial Zig Zag */,
                TypesRadialZigZagWithLifts/** Radial Zig Zag with Lifts */,
                TypesRadialZigWithContour/** Radial Zig with Contour */,
                TypesRadialZigWithStepover/** Radial Zig with Stepover */,
                TypesCrosscutZig/** Crosscut Zig */,
                TypesCrosscutZigZag/** Crosscut Zig Zag */,
                TypesCrosscutZigZagWithLifts/** Crosscut Zig Zag with Lifts */,
                TypesZlevelZig/** Zlevel Zig */,
                TypesZlevelZigZag/** Zlevel Zig Zag */,
                TypesZlevelZigZagWithLifts/** Zlevel Zig Zag with Lifts */,
                TypesSameAsNonSteep/** Same as Non-steep */
            };

            private: CutPatternBuilderImpl * m_cutpatternbuilder_impl;
            private: friend class  _CutPatternBuilderBuilder;
            protected: CutPatternBuilder();
            public: ~CutPatternBuilder();
            /**Returns  the cut pattern option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutPatternBuilder::Types CutPattern
            (
            );
            /**Sets  the cut pattern option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutPattern
            (
                NXOpen::CAM::CutPatternBuilder::Types newValue /** the cut pattern option */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
