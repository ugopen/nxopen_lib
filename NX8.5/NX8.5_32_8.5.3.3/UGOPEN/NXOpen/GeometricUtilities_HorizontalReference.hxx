#ifndef NXOpen_GEOMETRICUTILITIES_HORIZONTALREFERENCE_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_HORIZONTALREFERENCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_HorizontalReference.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_HorizontalReference.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class HorizontalReference;
    }
    class Direction;
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectNXObject;
    namespace GeometricUtilities
    {
        class _HorizontalReferenceBuilder;
        class HorizontalReferenceImpl;
        /** the horizontal reference vector definition.  
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  HorizontalReference : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: HorizontalReferenceImpl * m_horizontalreference_impl;
            private: friend class  _HorizontalReferenceBuilder;
            protected: HorizontalReference();
            public: ~HorizontalReference();
            /**Returns  the rotation angle wrt horizontal reference direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RotationAngle
            (
            );
            /**Returns  the horizontal reference vector 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * HorizontalRefVector
            (
            );
            /**Sets  the horizontal reference vector 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHorizontalRefVector
            (
                NXOpen::Direction * horizontalRefVector /** horizontalrefvector */ 
            );
            /**Returns  the direction object. This function gets reference vector of the 2D pattern. This call will result in an Exception if not called in 2D mode. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * HorizontalRefObject
            (
            );
            /**Returns  the 2D Selection flip attribute. This function flips the selection object of the 2D pattern 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Flip
            (
            );
            /**Sets  the 2D Selection flip attribute. This function flips the selection object of the 2D pattern 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFlip
            (
                bool flip /** flip */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
