#ifndef NXOpen_FEATURES_ARCHTESTNAMESPACE1_TESTBLOCKFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ARCHTESTNAMESPACE1_TESTBLOCKFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ArchTestNamespace1_TestBlockFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ArchTestNamespace1
        {
            class TestBlockFeatureBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ArchTestNamespace1
        {
            class _TestBlockFeatureBuilderBuilder;
            class TestBlockFeatureBuilderImpl;

            /// \cond NX_NO_DOC 
            /** Represents a sheetmetal block feature builder. 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENDEBUGSESSIONCPPEXPORT  TestBlockFeatureBuilder : public Features::FeatureBuilder
            {
                private: TestBlockFeatureBuilderImpl * m_testblockfeaturebuilder_impl;
                private: friend class  _TestBlockFeatureBuilderBuilder;
                protected: TestBlockFeatureBuilder();
                public: ~TestBlockFeatureBuilder();
                /**Returns  the string value stored in the feature. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString StringField
                (
                );
                /**Sets  the string value stored in the feature. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: void SetStringField
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the string value stored in the feature. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                void SetStringField
                (
                    const char * name /** name */ 
                );
                /**Returns  the double value stored in the feature. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: double DoubleField
                (
                );
                /**Sets  the double value stored in the feature. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: void SetDoubleField
                (
                    double doubleField /** doublefield */ 
                );
            };

            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
