#ifndef NXOpen_CAM_OPERATION_HXX_INCLUDED
#define NXOpen_CAM_OPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_Operation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_CAMObject.hxx>
#include <NXOpen/CAM_CAMSetup.hxx>
#include <NXOpen/CAM_Move.hxx>
#include <NXOpen/CAM_Operation.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class Operation;
    }
    namespace CAM
    {
        class CAMObject;
    }
    namespace CAM
    {
        class Move;
    }
    namespace CAM
    {
        class MoveCollection;
    }
    namespace CAM
    {
        class NCGroup;
    }
    namespace CAM
    {
        class ToolPathEditorBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _OperationBuilder;
        class OperationImpl;
        /** Represents an operation  <br> To create or edit an instance of this class, use @link CAM::OperationBuilder  CAM::OperationBuilder @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  Operation : public CAM::CAMObject
        {
            private: OperationImpl * m_operation_impl;
            private: friend class  _OperationBuilder;
            protected: Operation();
            public: ~Operation();
            /** Returns the append move 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void AppendMove
            (
                NXOpen::CAM::Move * move /** move */ 
            );
            /** Returns the insert move 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void InsertMove
            (
                NXOpen::CAM::Move * insertAfter /** insert after */ ,
                NXOpen::CAM::Move * move /** move */ 
            );
            /** Get the valid User Defined Move Types  @return  User Defined Move Types 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetUserDefinedMoveTypes
            (
            );
            /** Create Tool Path Editor Move builder  @return  array of new objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::ToolPathEditorBuilder * CreateToolPathEditorBuilder
            (
            );
            /** Returns toolpath time in seconds   @return  the toolpath time in seconds 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double GetToolpathTime
            (
            );
            /** Sets toolpath time in seconds  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolpathTime
            (
                double time /** the toolpath time in seconds */
            );
            /** Returns toolpath length in Part units (mm or inch)  @return  the toolpath length in Part units (mm or inch) 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double GetToolpathLength
            (
            );
            /** Sets toolpath length in Part units (mm or inch) 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolpathLength
            (
                double length /** the toolpath length in Part units (mm or inch) */
            );
            /** Returns toolpath cutting time in seconds  @return  the toolpath cutting time in seconds 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double GetToolpathCuttingTime
            (
            );
            /** Sets toolpath cutting time in seconds 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolpathCuttingTime
            (
                double time /** the toolpath cutting time in seconds */
            );
            /** Returns toolpath cutting length in Part units (mm or inch)  @return  the toolpath cutting length in Part units (mm or inch) 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double GetToolpathCuttingLength
            (
            );
            /** Sets toolpath cutting length in Part units (mm or inch) 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolpathCuttingLength
            (
                double length /** the toolpath cutting length in Part units (mm or inch) */
            );
            /** Get parent @return  the operation parent 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NCGroup * GetParent
            (
                NXOpen::CAM::CAMSetup::View branch /**  branch from which to get the operation parent */
            );
            /** Unlink instance
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void UnlinkInstance
            (
            );
            /** Get input ipw  @return  the facet of the ipw 
             <br>  Created in NX8.5.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::NXObject * GetInputIpw
            (
            );


            /** Represents Move Collection 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAM::MoveCollection *CAMMoveCollection();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
