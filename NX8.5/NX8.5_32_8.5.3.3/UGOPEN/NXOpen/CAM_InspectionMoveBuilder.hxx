#ifndef NXOpen_CAM_INSPECTIONMOVEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONMOVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionMoveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionMoveBuilder;
    }
    class Builder;
    namespace CAM
    {
        class CAMObject;
    }
    namespace CAM
    {
        class _InspectionMoveBuilderBuilder;
        class InspectionMoveBuilderImpl;
        /** Represents CMM Inspection Move Builder  <br> This cannot be instantiated  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionMoveBuilder : public Builder
        {
            /** the sensor selection strategy */
            public: enum SensorStrategyTypes
            {
                SensorStrategyTypesCreateAsNeeded/** Create as needed */,
                SensorStrategyTypesUseExisting/** Use existing only */
            };

            /** the tip selection mode */
            public: enum TipModeTypes
            {
                TipModeTypesAuto/** Auto specify */,
                TipModeTypesSpecify/** Manual specify*/,
                TipModeTypesExisting/** From existing sensor */
            };

            /** the tip angle selection mode */
            public: enum TipAngleTypes
            {
                TipAngleTypesAuto/** Auto specify */,
                TipAngleTypesSpecify/** Manual specify*/,
                TipAngleTypesExisting/** From existing sensor */
            };

            private: InspectionMoveBuilderImpl * m_inspectionmovebuilder_impl;
            private: friend class  _InspectionMoveBuilderBuilder;
            protected: InspectionMoveBuilder();
            public: ~InspectionMoveBuilder();
            /** Set parent 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetParent
            (
                NXOpen::CAM::CAMObject * parent /** the parent object */
            );
            /** Set sibling 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSibling
            (
                NXOpen::CAM::CAMObject * sibling /** the sibling object */
            );
            /**Returns  the motion type 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::MoveBuilder::Motion MotionType
            (
            );
            /**Sets  the motion type 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMotionType
            (
                NXOpen::CAM::MoveBuilder::Motion motionType /** motion type */ 
            );
            /**Returns  the sensor selection strategy 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::SensorStrategyTypes SensorStrategy
            (
            );
            /**Sets  the sensor selection strategy 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetSensorStrategy
            (
                NXOpen::CAM::InspectionMoveBuilder::SensorStrategyTypes sensorStrategy /** sensorstrategy */ 
            );
            /**Returns  the inspection sensor operation name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXString SensorOpName
            (
            );
            /**Sets  the inspection sensor operation name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetSensorOpName
            (
                const NXString & sensorOpName /** sensoropname */ 
            );
            /**Sets  the inspection sensor operation name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetSensorOpName
            (
                const char * sensorOpName /** sensoropname */ 
            );
            /**Returns  the probe tip number 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: int TipNumber
            (
            );
            /**Sets  the probe tip number 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTipNumber
            (
                int tipNumber /** tipnumber */ 
            );
            /**Returns  the probe tip selection mode 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::TipModeTypes TipMode
            (
            );
            /**Sets  the probe tip selection mode 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTipMode
            (
                NXOpen::CAM::InspectionMoveBuilder::TipModeTypes tipMode /** tipmode */ 
            );
            /**Returns  the tip angle selection mode 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::TipAngleTypes TipAngleMode
            (
            );
            /**Sets  the tip angle selection mode 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTipAngleMode
            (
                NXOpen::CAM::InspectionMoveBuilder::TipAngleTypes tipAngleMode /** tipanglemode */ 
            );
            /**Returns  the A angle for an indexable head 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double AngleA
            (
            );
            /**Sets  the A angle for an indexable head 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetAngleA
            (
                double angle /** angle */ 
            );
            /**Returns  the B angle for an indexable head 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double AngleB
            (
            );
            /**Sets  the B angle for an indexable head 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetAngleB
            (
                double angle /** angle */ 
            );
            /**Returns  the approach distance 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double ApproachDistance
            (
            );
            /**Sets  the approach distance 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetApproachDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the retract distance 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double RetractDistance
            (
            );
            /**Sets  the retract distance 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRetractDistance
            (
                double distance /** distance */ 
            );
            /** Set default values for probe angles based on feature type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetProbeAngles
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
