#ifndef NXOpen_DIE_HANDLINGCOREBUILDER_HXX_INCLUDED
#define NXOpen_DIE_HANDLINGCOREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_HandlingCoreBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieLocationsBuilder.hxx>
#include <NXOpen/Die_DiePlaneBuilder.hxx>
#include <NXOpen/Die_HandlingCoreBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class HandlingCoreBuilder;
    }
    namespace Die
    {
        class DieLocationsBuilder;
    }
    namespace Die
    {
        class DiePlaneBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBody;
    namespace Die
    {
        class _HandlingCoreBuilderBuilder;
        class HandlingCoreBuilderImpl;
        /**
            Represents a builder that is used to create or edit a @link Die::HandlingCore Die::HandlingCore@endlink  feature.
             <br> To create a new instance of this class, use @link Die::DieCollection::CreateHandlingCoreBuilder  Die::DieCollection::CreateHandlingCoreBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Clearance.Value </td> <td> 
         
        100 (millimeters part), 4 (inches part) </td> </tr> 

        <tr><td> 
         
        Depth.Value </td> <td> 
         
        40 (millimeters part), 1.6 (inches part) </td> </tr> 

        <tr><td> 
         
        Height.Value </td> <td> 
         
        100 (millimeters part), 4 (inches part) </td> </tr> 

        <tr><td> 
         
        Width.Value </td> <td> 
         
        75 (millimeters part), 3 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  HandlingCoreBuilder : public Features::FeatureBuilder
        {
            /** Identifies how the handling Core is located in space. */
            public: enum Types
            {
                TypesAtLocation/** Location specified by the user. */,
                TypesFromBase/** Location is an offset from the base. */,
                TypesMapFromBase/** Locate by finding the minimum distance to the main profile of the target and then project and offset from the base. Used specifically for coring the main wall. */
            };

            private: HandlingCoreBuilderImpl * m_handlingcorebuilder_impl;
            private: friend class  _HandlingCoreBuilderBuilder;
            protected: HandlingCoreBuilder();
            public: ~HandlingCoreBuilder();
            /**Returns  the target solid the handling core will be subtracted from. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * Target
            (
            );
            /**Returns  the center location of the handling core. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DieLocationsBuilder * Location
            (
            );
            /**Returns  the plane of the core for deriving the rectangle and the start of the core. Only valid when type is @link Die::HandlingCoreBuilder::TypesAtLocation Die::HandlingCoreBuilder::TypesAtLocation@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DiePlaneBuilder * CoreOrientation
            (
            );
            /**Returns  the base plane of the target. Used for orienting the core and offset if needed. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DiePlaneBuilder * BaseOrientation
            (
            );
            /**Returns  the expression containing the value to use for the height of the core. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Height
            (
            );
            /**Returns  the expression containing the value to use for the width of the core. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Width
            (
            );
            /**Returns  the expression containing the value to use for the clearance offset of the core from the base plane. 
                        Only valid when type is @link Die::HandlingCoreBuilder::TypesFromBase Die::HandlingCoreBuilder::TypesFromBase@endlink  or @link Die::HandlingCoreBuilder::TypesMapFromBase Die::HandlingCoreBuilder::TypesMapFromBase@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Clearance
            (
            );
            /**Returns  the expression containing the value to use for the extrusion depth when creating the core. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Depth
            (
            );
            /**Returns  the distance tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /**Returns  the angle tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angletolerance */ 
            );
            /**Returns  the indicator defining how the handling core is located in space. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::HandlingCoreBuilder::Types Type
            (
            );
            /**Sets  the indicator defining how the handling core is located in space. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetType
            (
                NXOpen::Die::HandlingCoreBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
