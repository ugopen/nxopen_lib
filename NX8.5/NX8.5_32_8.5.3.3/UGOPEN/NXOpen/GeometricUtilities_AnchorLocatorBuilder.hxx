#ifndef NXOpen_GEOMETRICUTILITIES_ANCHORLOCATORBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_ANCHORLOCATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_AnchorLocatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_AnchorLocatorBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class AnchorLocatorBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _AnchorLocatorBuilderBuilder;
        class AnchorLocatorBuilderImpl;
        /** Represents a @link GeometricUtilities::AnchorLocatorBuilder GeometricUtilities::AnchorLocatorBuilder@endlink  
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  AnchorLocatorBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: AnchorLocatorBuilderImpl * m_anchorlocatorbuilder_impl;
            private: friend class  _AnchorLocatorBuilderBuilder;
            protected: AnchorLocatorBuilder();
            public: ~AnchorLocatorBuilder();
            /**Returns  the origin of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d Origin
            (
            );
            /**Sets  the origin of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                const NXOpen::Point3d & origin /** origin */ 
            );
            /**Returns  the x-axis of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d XAxis
            (
            );
            /**Sets  the x-axis of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXAxis
            (
                const NXOpen::Vector3d & xAxis /** xaxis */ 
            );
            /**Returns  the y-axis of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d YAxis
            (
            );
            /**Sets  the y-axis of the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYAxis
            (
                const NXOpen::Vector3d & yAxis /** yaxis */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
