#ifndef NXOpen_GEOMETRICUTILITIES_CONTINUITY_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CONTINUITY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_Continuity.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_Continuity.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class Continuity;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class ScCollector;
    namespace GeometricUtilities
    {
        class _ContinuityBuilder;
        class ContinuityImpl;
        /**
            Represents a @link GeometricUtilities::Continuity GeometricUtilities::Continuity@endlink 
            Allows user to specify continuity constraint surface construction.
            
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  Continuity : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Continuity type. 
                    */
            public: enum ContinuityTypes
            {
                ContinuityTypesG0/** G0 continuity */,
                ContinuityTypesG1/** G1 continuity */,
                ContinuityTypesG2/** G2 continuity */,
                ContinuityTypesG3/** G3 continuity*/,
                ContinuityTypesFree/** Free continuity */
            };

            private: ContinuityImpl * m_continuity_impl;
            private: friend class  _ContinuityBuilder;
            protected: Continuity();
            public: ~Continuity();
            /**Returns  the continuity type. If continuity = G0, then constraint face selector is disabled.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::GeometricUtilities::Continuity::ContinuityTypes ContinuityType
            (
            );
            /**Sets  the continuity type. If continuity = G0, then constraint face selector is disabled.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: void SetContinuityType
            (
                NXOpen::GeometricUtilities::Continuity::ContinuityTypes continuityType /** continuitytype */ 
            );
            /**Returns  the constraint face collector.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::ScCollector * ConstraintFaces
            (
            );
            /**Returns  the value indicating if a continuity constraint is of fixed type.
                        This flag is valid for 
                        @link GeometricUtilities::Continuity::ContinuityTypesG1 GeometricUtilities::Continuity::ContinuityTypesG1@endlink ,
                        @link GeometricUtilities::Continuity::ContinuityTypesG2 GeometricUtilities::Continuity::ContinuityTypesG2@endlink ,
                        @link GeometricUtilities::Continuity::ContinuityTypesG3 GeometricUtilities::Continuity::ContinuityTypesG3@endlink 
                        types only. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsFixed
            (
            );
            /**Sets  the value indicating if a continuity constraint is of fixed type.
                        This flag is valid for 
                        @link GeometricUtilities::Continuity::ContinuityTypesG1 GeometricUtilities::Continuity::ContinuityTypesG1@endlink ,
                        @link GeometricUtilities::Continuity::ContinuityTypesG2 GeometricUtilities::Continuity::ContinuityTypesG2@endlink ,
                        @link GeometricUtilities::Continuity::ContinuityTypesG3 GeometricUtilities::Continuity::ContinuityTypesG3@endlink 
                        types only. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: void SetFixed
            (
                bool isFixed /** isfixed */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
