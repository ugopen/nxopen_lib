#ifndef NXOpen_MECHATRONICS_SYSTEMOBJECT_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SYSTEMOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SystemObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_SystemObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class SystemObject;
    }
    namespace Assemblies
    {
        class Component;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _SystemObjectBuilder;
        class SystemObjectImpl;
        /** Represents the System Object. System Object is the entity displaying in
                System Navigator.  <br> This is an abstract class and cannot be created.  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  SystemObject : public NXObject
        {
            private: SystemObjectImpl * m_systemobject_impl;
            private: friend class  _SystemObjectBuilder;
            protected: SystemObject();
            public: ~SystemObject();
            /** Adds @link Assemblies::Component Assemblies::Component@endlink . 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AddComponent
            (
                const std::vector<NXOpen::Assemblies::Component *> & comps /** comps */ 
            );
            /** Removes @link Assemblies::Component Assemblies::Component@endlink . 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void RemoveComponent
            (
                const std::vector<NXOpen::Assemblies::Component *> & comps /** comps */ 
            );
            /** Adds operation object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AddOperation
            (
                const std::vector<NXOpen::NXObject *> & opers /** opers */ 
            );
            /** Removes operation object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void RemoveOperation
            (
                const std::vector<NXOpen::NXObject *> & opers /** opers */ 
            );
            /** Adds signal adapter objects. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AddSignalAdapters
            (
                const std::vector<NXOpen::NXObject *> & adapters /** adapters */ 
            );
            /** Removes signal adapter objects. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void RemoveSignalAdapters
            (
                const std::vector<NXOpen::NXObject *> & adapters /** adapters */ 
            );
            /** Restructure system object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void RestructureObject
            (
                NXOpen::Mechatronics::SystemObject * pDestination /** pdestination */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
