#ifndef NXOpen_CAM_IPWCONTAINMENTCURVESBUILDER_HXX_INCLUDED
#define NXOpen_CAM_IPWCONTAINMENTCURVESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_IpwContainmentCurvesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAM_IpwContainmentCurvesBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class IpwContainmentCurvesBuilder;
    }
    class Builder;
    class Point;
    namespace CAM
    {
        class _IpwContainmentCurvesBuilderBuilder;
        class IpwContainmentCurvesBuilderImpl;
        /**
            Represents a @link CAM::IpwContainmentCurvesBuilder CAM::IpwContainmentCurvesBuilder@endlink 
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  IpwContainmentCurvesBuilder : public Builder
        {
            /** the thickness method options */
            public: enum ThicknessModeValue
            {
                ThicknessModeValuePoint/** use thickness mode point*/,
                ThicknessModeValueDistance/** use thickness mode distance*/
            };

            private: IpwContainmentCurvesBuilderImpl * m_ipwcontainmentcurvesbuilder_impl;
            private: friend class  _IpwContainmentCurvesBuilderBuilder;
            protected: IpwContainmentCurvesBuilder();
            public: ~IpwContainmentCurvesBuilder();
            /**Returns  the thickness mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::IpwContainmentCurvesBuilder::ThicknessModeValue ThicknessMode
            (
            );
            /**Sets  the thickness mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetThicknessMode
            (
                NXOpen::CAM::IpwContainmentCurvesBuilder::ThicknessModeValue method /** method */ 
            );
            /**Returns  the specify point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SpecifyPoint
            (
            );
            /**Sets  the specify point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSpecifyPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the specify distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double SpecifyDistance
            (
            );
            /**Sets  the specify distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSpecifyDistance
            (
                double distanceValue /** distancevalue */ 
            );
            /**Returns  the feature name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FeatureName
            (
            );
            /**Sets  the feature name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeatureName
            (
                const NXString & featureName /** featurename */ 
            );
            /**Sets  the feature name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetFeatureName
            (
                const char * featureName /** featurename */ 
            );
            /**Returns  the smoothing tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double SmoothingTolerance
            (
            );
            /**Sets  the smoothing tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSmoothingTolerance
            (
                double smoothingTolerance /** smoothingtolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
