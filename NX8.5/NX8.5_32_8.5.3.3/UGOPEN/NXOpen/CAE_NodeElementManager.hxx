#ifndef NXOpen_CAE_NODEELEMENTMANAGER_HXX_INCLUDED
#define NXOpen_CAE_NODEELEMENTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodeElementManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NodeElementManager;
    }
    namespace CAE
    {
        class BaseFEModel;
    }
    namespace CAE
    {
        class BeamEADBuilder;
    }
    namespace CAE
    {
        class BushingEADBuilder;
    }
    namespace CAE
    {
        class CombineTrisBuilder;
    }
    namespace CAE
    {
        class DestinationCollectorBuilder;
    }
    namespace CAE
    {
        class ElementConnectivityBuilder;
    }
    namespace CAE
    {
        class ElementCreateBuilder;
    }
    namespace CAE
    {
        class ElementDeleteBuilder;
    }
    namespace CAE
    {
        class ElementExtractBuilder;
    }
    namespace CAE
    {
        class ElementExtrudeBuilder;
    }
    namespace CAE
    {
        class ElementModifyLabelBuilder;
    }
    namespace CAE
    {
        class ElementModifyOrderBuilder;
    }
    namespace CAE
    {
        class ElementModifyTypeBuilder;
    }
    namespace CAE
    {
        class ElementProjectBuilder;
    }
    namespace CAE
    {
        class ElementReflectBuilder;
    }
    namespace CAE
    {
        class ElementRevolveBuilder;
    }
    namespace CAE
    {
        class ElementSplitBuilder;
    }
    namespace CAE
    {
        class ElementTranslateBuilder;
    }
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class GapEADBuilder;
    }
    namespace CAE
    {
        class LumpedMassEADBuilder;
    }
    namespace CAE
    {
        class MultipleElementCreateBuilder;
    }
    namespace CAE
    {
        class MultipleNodeCreateBuilder;
    }
    namespace CAE
    {
        class NodeAlignBuilder;
    }
    namespace CAE
    {
        class NodeCreateBuilder;
    }
    namespace CAE
    {
        class NodeDeleteBuilder;
    }
    namespace CAE
    {
        class NodeModifyLabelBuilder;
    }
    namespace CAE
    {
        class NodeModifyLocationBuilder;
    }
    namespace CAE
    {
        class NodeProjectBuilder;
    }
    namespace CAE
    {
        class NodeReflectBuilder;
    }
    namespace CAE
    {
        class NodeRotateBuilder;
    }
    namespace CAE
    {
        class NodeTranslateBuilder;
    }
    namespace CAE
    {
        class NodesBetweenNodesBuilder;
    }
    namespace CAE
    {
        class NodesOnCurveBuilder;
    }
    namespace CAE
    {
        class NodesRepositionBuilder;
    }
    namespace CAE
    {
        class OneDimensionalElementSplitBuilder;
    }
    namespace CAE
    {
        class ShellEADBuilder;
    }
    namespace CAE
    {
        class SpiderElementBuilder;
    }
    namespace CAE
    {
        class SpringEADBuilder;
    }
    namespace CAE
    {
        class SurfaceCoatBuilder;
    }
    namespace CAE
    {
        class SweepBetweenMeshBuilder;
    }
    namespace CAE
    {
        class NodeElementManagerImpl;
        /**  @brief  Provides method for creating  builder for
            node element operation commands in a fem part  

           <br> To obtain an instance of this class, refer to @link CAE::BaseFEModel  CAE::BaseFEModel @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NodeElementManager
        {
            private: NodeElementManagerImpl * m_nodeelementmanager_impl;
            private: NXOpen::CAE::BaseFEModel* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit NodeElementManager(NXOpen::CAE::BaseFEModel *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~NodeElementManager();
            /** Creates a builder for nodes on curve command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodesOnCurveBuilder * CreateNodesOnCurveBuilder
            (
            );
            /** Creates a builder for node rotate command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeRotateBuilder * CreateNodeRotateBuilder
            (
            );
            /** Creates a builder for node translate command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeTranslateBuilder * CreateNodeTranslateBuilder
            (
            );
            /** Creates a builder for node align command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeAlignBuilder * CreateNodeAlignBuilder
            (
            );
            /** Creates a builder for node modify label command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeModifyLabelBuilder * CreateNodeModifyLabelBuilder
            (
            );
            /** Creates a builder for element modify label command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementModifyLabelBuilder * CreateElementModifyLabelBuilder
            (
            );
            /** Creates a builder for node between nodes command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodesBetweenNodesBuilder * CreateNodesBetweenNodesBuilder
            (
            );
            /** Creates a builder for node delete command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeDeleteBuilder * CreateNodeDeleteBuilder
            (
            );
            /** Creates a builder for element create command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementCreateBuilder * CreateElementCreateBuilder
            (
            );
            /** Creates a builder for the creation of multiple elements.    @return  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MultipleElementCreateBuilder * CreateMultipleElementCreateBuilder
            (
                int estimatedNumberOfElements /** the estimated number of elements that will be created. It need not be exact. */
            );
            /** Creates a builder for element extrude command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementExtrudeBuilder * CreateElementExtrudeBuilder
            (
            );
            /** Creates a builder for element revolve command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementRevolveBuilder * CreateElementRevolveBuilder
            (
            );
            /** Creates a builder for element split command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementSplitBuilder * CreateElementSplitBuilder
            (
            );
            /** Creates a builder for one dimensional element split command @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::OneDimensionalElementSplitBuilder * CreateOneDimensionalElementSplitBuilder
            (
            );
            /** Creates a builder for node create command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeCreateBuilder * CreateNodeCreateBuilder
            (
            );
            /** Creates a builder for the creation of multiple nodes.    @return  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MultipleNodeCreateBuilder * CreateMultipleNodeCreateBuilder
            (
                int estimatedNumberOfNodes /** the Estimated number of nodes that will be created. It need not be exact. */
            );
            /** Creates a builder for node modify location command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeModifyLocationBuilder * CreateNodeModifyLocationBuilder
            (
            );
            /** Creates a builder for repositioning nodes, Use this command when you need
                        to modify many  nodes at one time. @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodesRepositionBuilder * CreateNodesRepositionBuilder
            (
            );
            /** Creates a builder for element project command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementProjectBuilder * CreateElementProjectBuilder
            (
            );
            /** Creates a builder for element delete command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementDeleteBuilder * CreateDeleteElementBuilder
            (
            );
            /** Creates a builder for element translate command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTranslateBuilder * CreateElementTranslateBuilder
            (
            );
            /** Creates a builder for Node reflect command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeReflectBuilder * CreateNodeReflectBuilder
            (
            );
            /** Creates a builder for element reflect command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementReflectBuilder * CreateElementReflectBuilder
            (
            );
            /** Creates a builder for element connectivity command @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementConnectivityBuilder * CreateElementConnectivityBuilder
            (
            );
            /** Creates a builder for spider element command @return  
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SpiderElementBuilder * CreateSpiderElementBuilder
            (
            );
            /** Creates a builder for the Element Type Specification block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTypeBuilder * CreateElementTypeBuilder
            (
            );
            /** Creates a builder for the Destination Collector Specification block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DestinationCollectorBuilder * CreateDestinationCollectorBuilder
            (
                bool isInEdit /** the parent builder is editng an existing mesh/element collection. */,
                NXOpen::CAE::ElementTypeBuilder * elementTypeBuilder /** the element type specification block */
            );
            /** Creates a builder for the Lumped Mass EAD block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::LumpedMassEADBuilder * CreateLumpedMassEadBuilder
            (
            );
            /** Creates a builder for the Spring EAD block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SpringEADBuilder * CreateSpringEadBuilder
            (
            );
            /** Creates a builder for the Beam EAD block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder * CreateBeamEadBuilder
            (
            );
            /** Creates a builder for the Shell EAD block.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ShellEADBuilder * CreateShellEadBuilder
            (
            );
            /** Creates a builder for the Bushing EAD block.  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BushingEADBuilder * CreateBushingEadBuilder
            (
            );
            /** Creates a builder for the Gap EAD block.  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::GapEADBuilder * CreateGapEadBuilder
            (
            );
            /** Creates a builder for element modify order command @return  
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementModifyOrderBuilder * CreateElementModifyOrderBuilder
            (
            );
            /** Creates a builder for the Surface Coat.  @return  
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SurfaceCoatBuilder * CreateSurfaceCoatBuilder
            (
            );
            /** Creates a builder for Combine Tris.  @return  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::CombineTrisBuilder * CreateCombineTrisBuilder
            (
            );
            /** Creates a builder for Element Extract.  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementExtractBuilder * CreateElementExtractBuilder
            (
            );
            /** Creates a builder for Manual Hex Mesh.  @return  
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SweepBetweenMeshBuilder * CreateSweepBetweenMeshBuilder
            (
            );
            /** Creates a builder for element modify type command @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementModifyTypeBuilder * CreateElementModifyTypeBuilder
            (
            );
            /** Creates a builder for node project command @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::NodeProjectBuilder * CreateNodeProjectBuilder
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
