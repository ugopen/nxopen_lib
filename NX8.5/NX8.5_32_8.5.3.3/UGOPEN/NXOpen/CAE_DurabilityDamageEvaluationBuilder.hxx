#ifndef NXOpen_CAE_DURABILITYDAMAGEEVALUATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYDAMAGEEVALUATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityDamageEvaluationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_DurabilityDamageEvaluationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilityDamageEvaluationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurabilityFatigue;
    }
    class PhysicalMaterial;
    class TaggedObject;
    namespace CAE
    {
        class _DurabilityDamageEvaluationBuilderBuilder;
        class DurabilityDamageEvaluationBuilderImpl;
        /** Represents the builder for evaluating durability damage. 
                This mechanism takes a stress/strain history and computes a damage histogram based
                on the history. This could either be on a spreadsheet or in a comma separated file.
             <br> To create a new instance of this class, use @link CAE::DurabilityManager::CreateDamageEvaluationBuilder  CAE::DurabilityManager::CreateDamageEvaluationBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        BwiWeldClass (deprecated) </td> <td> 
         
        B </td> </tr> 

        <tr><td> 
         
        CyclicStressStrainModel (deprecated) </td> <td> 
         
        RambergOsgood </td> </tr> 

        <tr><td> 
         
        EnableDetailedOutput </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        EquivalentStressMethod (deprecated) </td> <td> 
         
        None </td> </tr> 

        <tr><td> 
         
        FatigueLifeCriterion (deprecated) </td> <td> 
         
        SmithWatsonTopper </td> </tr> 

        <tr><td> 
         
        HighlightDamageValues </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        HysterisisNumber (deprecated) </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        IncludeMeanStress (deprecated) </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        MaxMeanRange </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        MaxNominalRange </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        MinMeanRange </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        NotchFactor (deprecated) </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        NumberOfMaxBins </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        NumberOfMeanBins </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        NumberOfStandardDeviations (deprecated) </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        PeakValleyTolerance </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PlateThicknessExponent (deprecated) </td> <td> 
         
        0.25 </td> </tr> 

        <tr><td> 
         
        PlateThicknessRatio (deprecated) </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        UsePlateThicknessCorrection (deprecated) </td> <td> 
         
        false </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilityDamageEvaluationBuilder : public Builder
        {
            /** the fatigue life criterion. */
            public: enum FatigueLifeCriterionEnum
            {
                FatigueLifeCriterionEnumSmithWatsonTopper/** smith watson topper */ ,
                FatigueLifeCriterionEnumStrainLifeMaximumPrincipal/** strain life maximum principal */ ,
                FatigueLifeCriterionEnumStrainLifeMaximumShear/** strain life maximum shear */ ,
                FatigueLifeCriterionEnumStressLife/** stress life */ ,
                FatigueLifeCriterionEnumBwi/** bwi */ ,
                FatigueLifeCriterionEnumTwi/** twi */ 
            };

            /** the equivalent stress method. */
            public: enum EquivalentStressMethodEnum
            {
                EquivalentStressMethodEnumNone/** none */ ,
                EquivalentStressMethodEnumGoodman/** goodman */ ,
                EquivalentStressMethodEnumSoderberg/** soderberg */ ,
                EquivalentStressMethodEnumGerberg/** gerberg */ ,
                EquivalentStressMethodEnumMorrow/** morrow */ 
            };

            /** the BWi Weld Class Enum. */
            public: enum BwiWeldClassEnum
            {
                BwiWeldClassEnumB/** B */,
                BwiWeldClassEnumC/** C*/,
                BwiWeldClassEnumD/** D*/,
                BwiWeldClassEnumE/** E*/,
                BwiWeldClassEnumF/** F*/,
                BwiWeldClassEnumF2/** F2*/,
                BwiWeldClassEnumG/** G*/,
                BwiWeldClassEnumW/** W*/
            };

            /** the Probability Option. */
            public: enum ProbabilityOptionEnum
            {
                ProbabilityOptionEnumNumberOfStandardDeviations/** Number of Std. Dev. */,
                ProbabilityOptionEnumProbabilityOfFailure/** Prob. Of Failure*/
            };

            /** the cyclic stress strain model. */
            public: enum CyclicStressStrainModelEnum
            {
                CyclicStressStrainModelEnumLinear/** linear */ ,
                CyclicStressStrainModelEnumPowerHardening/** power hardening */ ,
                CyclicStressStrainModelEnumRambergOsgood/** ramberg osgood */ 
            };

            private: DurabilityDamageEvaluationBuilderImpl * m_durabilitydamageevaluationbuilder_impl;
            private: friend class  _DurabilityDamageEvaluationBuilderBuilder;
            protected: DurabilityDamageEvaluationBuilder();
            public: ~DurabilityDamageEvaluationBuilder();
            /**Returns  the peak valley tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double PeakValleyTolerance
            (
            );
            /**Sets  the peak valley tolerance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetPeakValleyTolerance
            (
                double peakValleyTolerance /** peakvalleytolerance */ 
            );
            /**Returns  the max nominal range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxNominalRange
            (
            );
            /**Sets  the max nominal range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetMaxNominalRange
            (
                double maxNominalRange /** maxnominalrange */ 
            );
            /**Returns  the number of max bins 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfMaxBins
            (
            );
            /**Sets  the number of max bins 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetNumberOfMaxBins
            (
                int numberOfMaxBins /** numberofmaxbins */ 
            );
            /** Gets the nth nominal range bin. @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetNthNominalRangeBin
            (
                int index /** index */ 
            );
            /** Sets the nth nominal range bin.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetNthNominalRangeBin
            (
                int index /** index */ ,
                double nthNominalRangeBin /** nthnominalrangebin */ 
            );
            /**Returns  the min mean range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double MinMeanRange
            (
            );
            /**Sets  the min mean range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetMinMeanRange
            (
                double minMeanRange /** minmeanrange */ 
            );
            /**Returns  the max mean range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxMeanRange
            (
            );
            /**Sets  the max mean range
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetMaxMeanRange
            (
                double maxMeanRange /** maxmeanrange */ 
            );
            /**Returns  the number of mean bins 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfMeanBins
            (
            );
            /**Sets  the number of mean bins 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetNumberOfMeanBins
            (
                int numberOfMeanBins /** numberofmeanbins */ 
            );
            /** Gets the nth mean bin. @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetNthMeanBin
            (
                int index /** index */ 
            );
            /** Sets the nth mean bin.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetNthMeanBin
            (
                int index /** index */ ,
                double nthMeanBin /** nthmeanbin */ 
            );
            /**Returns  the fatigue life criterion 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") NXOpen::CAE::DurabilityDamageEvaluationBuilder::FatigueLifeCriterionEnum FatigueLifeCriterion
            (
            );
            /**Sets  the fatigue life criterion 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::FatigueLifeCriterion @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion CAE::DurabilityEventFatigueSettingsBuilder::SetFatigueLifeCriterion @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetFatigueLifeCriterion
            (
                NXOpen::CAE::DurabilityDamageEvaluationBuilder::FatigueLifeCriterionEnum fatigueLifeCriterion /** fatiguelifecriterion */ 
            );
            /**Returns  the include mean stress 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") bool IncludeMeanStress
            (
            );
            /**Sets  the include mean stress 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::IncludeMeanStressEffects @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects CAE::DurabilityEventFatigueSettingsBuilder::SetIncludeMeanStressEffects @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetIncludeMeanStress
            (
                bool includeMeanStress /** includemeanstress */ 
            );
            /**Returns  the equivalent stress method 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") NXOpen::CAE::DurabilityDamageEvaluationBuilder::EquivalentStressMethodEnum EquivalentStressMethod
            (
            );
            /**Sets  the equivalent stress method 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::EquivalentStressMethod @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod CAE::DurabilityEventFatigueSettingsBuilder::SetEquivalentStressMethod @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetEquivalentStressMethod
            (
                NXOpen::CAE::DurabilityDamageEvaluationBuilder::EquivalentStressMethodEnum equivalentStressMethod /** equivalentstressmethod */ 
            );
            /**Returns  the bwi weld class. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") NXOpen::CAE::DurabilityDamageEvaluationBuilder::BwiWeldClassEnum BwiWeldClass
            (
            );
            /**Sets  the bwi weld class. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::BwiWeldClass @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass CAE::DurabilityEventFatigueSettingsBuilder::SetBwiWeldClass @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetBwiWeldClass
            (
                NXOpen::CAE::DurabilityDamageEvaluationBuilder::BwiWeldClassEnum bwiWeldClass /** bwiweldclass */ 
            );
            /**Returns  the probability option. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") NXOpen::CAE::DurabilityDamageEvaluationBuilder::ProbabilityOptionEnum ProbabilityOption
            (
            );
            /**Sets  the probability option. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOption @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOption @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetProbabilityOption
            (
                NXOpen::CAE::DurabilityDamageEvaluationBuilder::ProbabilityOptionEnum probabilityOption /** probabilityoption */ 
            );
            /**Returns  the number of standard deviations. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double NumberOfStandardDeviations
            (
            );
            /**Sets  the number of standard deviations. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::NumberOfStandardDeviations @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfStandardDeviations @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetNumberOfStandardDeviations
            (
                double numberOfStandardDeviations /** numberofstandarddeviations */ 
            );
            /**Returns  the probability of failure. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double ProbabilityOfFailure
            (
            );
            /**Sets  the probability of failure. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::ProbabilityOfFailure @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure CAE::DurabilityEventFatigueSettingsBuilder::SetProbabilityOfFailure @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetProbabilityOfFailure
            (
                double probabilityOfFailure /** probabilityoffailure */ 
            );
            /**Returns  the twi high cycle cutoff. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double TwiHighCycleCutoff
            (
            );
            /**Sets  the twi high cycle cutoff. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleCutoff @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetTwiHighCycleCutoff
            (
                double twiHighCycleCutoff /** twihighcyclecutoff */ 
            );
            /**Returns  the twi high cycle slope change. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double TwiHighCycleSlopeChange
            (
            );
            /**Sets  the twi high cycle slope change. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::TwiHighCycleSlopeChange @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange CAE::DurabilityEventFatigueSettingsBuilder::SetTwiHighCycleSlopeChange @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetTwiHighCycleSlopeChange
            (
                double twiHighCycleSlopeChange /** twihighcycleslopechange */ 
            );
            /**Returns  the twi low cycle stress cutoff. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double TwiLowCycleStressCutoff
            (
            );
            /**Sets  the twi low cycle stress cutoff. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressCutoff @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressCutoff @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetTwiLowCycleStressCutoff
            (
                double twiLowCycleStressCutoff /** twilowcyclestresscutoff */ 
            );
            /**Returns  the twi low cycle stress extension. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double TwiLowCycleStressExtension
            (
            );
            /**Sets  the twi low cycle stress extension. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::TwiLowCycleStressExtension @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension CAE::DurabilityEventFatigueSettingsBuilder::SetTwiLowCycleStressExtension @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetTwiLowCycleStressExtension
            (
                double twiLowCycleStressExtension /** twilowcyclestressextension */ 
            );
            /**Returns  the plate thickness correction usage. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") bool UsePlateThicknessCorrection
            (
            );
            /**Sets  the plate thickness correction usage. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::UsePlateThicknessCorrection @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection CAE::DurabilityEventFatigueSettingsBuilder::SetUsePlateThicknessCorrection @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetUsePlateThicknessCorrection
            (
                bool usePlateThicknessCorrection /** useplatethicknesscorrection */ 
            );
            /**Returns  the plate thickness ratio. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double PlateThicknessRatio
            (
            );
            /**Sets  the plate thickness ratio. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessRatio @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessRatio @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetPlateThicknessRatio
            (
                double plateThicknessRatio /** platethicknessratio */ 
            );
            /**Returns  the plate thickness exponent. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double PlateThicknessExponent
            (
            );
            /**Sets  the plate thickness exponent. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::PlateThicknessExponent @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent CAE::DurabilityEventFatigueSettingsBuilder::SetPlateThicknessExponent @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetPlateThicknessExponent
            (
                double plateThicknessExponent /** platethicknessexponent */ 
            );
            /**Returns  the use notch factor. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") bool UseNotchFactor
            (
            );
            /**Sets  the use notch factor. 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::UseNotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetUseNotchFactor @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetUseNotchFactor
            (
                bool useNotchFactor /** usenotchfactor */ 
            );
            /**Returns  the notch factor 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") double NotchFactor
            (
            );
            /**Sets  the notch factor 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor CAE::DurabilityEventFatigueSettingsBuilder::NotchFactor @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor CAE::DurabilityEventFatigueSettingsBuilder::SetNotchFactor @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetNotchFactor
            (
                double notchFactor /** notchfactor */ 
            );
            /**Returns  the cyclic stress strain model 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") NXOpen::CAE::DurabilityDamageEvaluationBuilder::CyclicStressStrainModelEnum CyclicStressStrainModel
            (
            );
            /**Sets  the cyclic stress strain model 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::CyclicStressStrainModel @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel CAE::DurabilityEventFatigueSettingsBuilder::SetCyclicStressStrainModel @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetCyclicStressStrainModel
            (
                NXOpen::CAE::DurabilityDamageEvaluationBuilder::CyclicStressStrainModelEnum cyclicStressStrainModel /** cyclicstressstrainmodel */ 
            );
            /**Returns  the hysterisis number 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") int HysterisisNumber
            (
            );
            /**Sets  the hysterisis number 
             <br>  @deprecated Deprecated in NX8.5.0.  Please use the alternative @link CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop @endlink  followed by @link CAE::DurabilityDamageEvaluationBuilder::SetFatigue CAE::DurabilityDamageEvaluationBuilder::SetFatigue@endlink . <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Please use the alternative CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::NumberOfElementsInHysterisisLoop @endlink and @link CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop CAE::DurabilityEventFatigueSettingsBuilder::SetNumberOfElementsInHysterisisLoop @endlink  followed by CAE::DurabilityDamageEvaluationBuilder::SetFatigue.") void SetHysterisisNumber
            (
                int hysterisisNumber /** hysterisisnumber */ 
            );
            /** Export damage results to a csv file. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void ExportResultsToCsv
            (
                const NXString & csvFilename /** damage report will be written-out to this file.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Export damage results to a csv file. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            void ExportResultsToCsv
            (
                const char * csvFilename /** damage report will be written-out to this file.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the material.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::PhysicalMaterial * MaterialTag
            (
            );
            /**Sets  the material.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetMaterialTag
            (
                NXOpen::PhysicalMaterial * materialTag /** materialtag */ 
            );
            /** Sets the function data.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetFunctionData
            (
                NXOpen::TaggedObject * functionTag /** functiontag */ ,
                int numberOfOccurrences /** numberofoccurrences */ ,
                double lateralLoadingFactor /** lateralloadingfactor */ ,
                double scaleFactor /** scalefactor */ 
            );
            /** Removes the function.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void RemoveFunction
            (
                int rowIndex /** row index */ 
            );
            /** Sets the lateral loading ratio.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetLlr
            (
                int rowIndex /** row index */ ,
                double lateralLoadingFactor /** lateralloadingfactor */ 
            );
            /** Sets the scale.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetScale
            (
                int rowIndex /** row index */ ,
                double scale /** scale */ 
            );
            /** Sets the number of Occurrences.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetOccurrence
            (
                int rowIndex /** row index */ ,
                int occurrence /** occurrence */ 
            );
            /** The fatigue settings. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetFatigue
            (
                NXOpen::CAE::DurabilityFatigue * fatigue /** fatigue */ 
            );
            /**Returns  the detailed output. 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool EnableDetailedOutput
            (
            );
            /**Sets  the detailed output. 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetEnableDetailedOutput
            (
                bool enableDetailedOutput /** enabledetailedoutput */ 
            );
            /**Returns  the highlighting of non-zero damage values. 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool HighlightDamageValues
            (
            );
            /**Sets  the highlighting of non-zero damage values. 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetHighlightDamageValues
            (
                bool highlightDamageValues /** highlightdamagevalues */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
