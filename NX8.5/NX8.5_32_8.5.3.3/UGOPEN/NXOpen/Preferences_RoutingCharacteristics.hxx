#ifndef NXOpen_PREFERENCES_ROUTINGCHARACTERISTICS_HXX_INCLUDED
#define NXOpen_PREFERENCES_ROUTINGCHARACTERISTICS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_RoutingCharacteristics.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Routing_CharacteristicList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class RoutingCharacteristics;
    }
    namespace Preferences
    {
        class RoutingApplicationView;
    }
    namespace Routing
    {
        class CharacteristicList;
    }
    namespace Preferences
    {
        class RoutingCharacteristicsImpl;
        /** Contains all of the various preferences for option and required characteristics. Optional and
               Required characteristics are specified in the Discipline section of the application view file.
               Changing the current discipline modifies the set of optional and required characteristics.
                <br> To obtain an instance of this class, refer to @link Preferences::RoutingApplicationView  Preferences::RoutingApplicationView @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  RoutingCharacteristics
        {
            private: RoutingCharacteristicsImpl * m_routingcharacteristics_impl;
            private: NXOpen::Preferences::RoutingApplicationView* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit RoutingCharacteristics(NXOpen::Preferences::RoutingApplicationView *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~RoutingCharacteristics();
            /** Get the set of required characteristics to apply to @link Routing::Stock Routing::Stock@endlink  objects
                       when assinging stock.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::CharacteristicList::CharacteristicInformation> GetStockRequiredCharacteristics
            (
            );
            /** Get the set of required characteristics to apply to @link Assemblies::Component Assemblies::Component@endlink  objects
                       when placing parts.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::CharacteristicList::CharacteristicInformation> GetComponentRequiredCharacteristics
            (
            );
            /** Get the set of optional characteristics to apply to @link Routing::Stock Routing::Stock@endlink  objects
                       when assinging stock.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::CharacteristicList::CharacteristicInformation> GetStockOptionalCharacteristics
            (
            );
            /** Get the set of optional characteristics to apply to @link Assemblies::Component Assemblies::Component@endlink  objects
                       when placing parts.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::CharacteristicList::CharacteristicInformation> GetComponentOptionalCharacteristics
            (
            );
            /** Get the set of characteristics read from objects during placement object selection in the 
                        Specify Item dialog.  Destination characteristics are discipline specific.  @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::CharacteristicList::CharacteristicInformation> GetDestintationCharacteristics
            (
            );
            /** Get the latest stored stock characterstics values specified in the Specify Item dialog or
                      in Edit Characteristics.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::CharacteristicList * GetStockCharacteristicValues
            (
            );
            /** Replaces any stored stock characteristics with the input values, adds any new
                     values in the input list.  Doesn't delete any stored stock characteristics. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void UpdateStockCharacteristicValues
            (
                NXOpen::Routing::CharacteristicList * values /** values */ 
            );
            /** Get the latest stored component characterstics values specified in the Specify Item dialog or
                      in Edit Characteristics.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::CharacteristicList * GetComponentCharacteristicValues
            (
            );
            /** Replaces any stored component characteristics with the input values, adds any new
                     values in the input list.  Doesn't delete any stored component characteristics. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void UpdateComponentCharacteristicValues
            (
                NXOpen::Routing::CharacteristicList * values /** values */ 
            );
            /** Get the latest stored characterstics values specified for default elbows in the 
                     Specify Item dialog.   @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::CharacteristicList * GetDefaultElbowCharacteristicValues
            (
            );
            /** Replaces any stored default elbow characteristics with the input values, adds any new
                     values in the input list.  Doesn't delete any stored default elbow characteristics. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void UpdateDefaultElbowCharacteristicValues
            (
                NXOpen::Routing::CharacteristicList * values /** values */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
