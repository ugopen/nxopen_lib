#ifndef NXOpen_CAM_TRIMPLANE_HXX_INCLUDED
#define NXOpen_CAM_TRIMPLANE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TrimPlane.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TrimPlane.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TrimPlane;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    class Point;
    namespace CAM
    {
        class _TrimPlaneBuilder;
        class TrimPlaneImpl;
        /** Represents Trim Plane 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TrimPlane : public TaggedObject
        {
            /** The limit options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum LimitOptions
            {
                LimitOptionsNone/** Plane is inactive. */,
                LimitOptionsPoint/** Plane is defined by a point. */,
                LimitOptionsDistance/** Plane is defined by a distance value. */
            };

            /** The content options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum Content
            {
                ContentRadial/** radial */,
                ContentAxial/** axial. */
            };

            private: TrimPlaneImpl * m_trimplane_impl;
            private: friend class  _TrimPlaneBuilder;
            protected: TrimPlane();
            public: ~TrimPlane();
            /**Returns  the limit option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TrimPlane::LimitOptions LimitOption
            (
            );
            /**Sets  the limit option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLimitOption
            (
                NXOpen::CAM::TrimPlane::LimitOptions trimPlaneMode /** the limit option */
            );
            /**Returns  the trim plane point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the trim plane point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * point /** the trim plane point */
            );
            /**Returns  the radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * Radius
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
