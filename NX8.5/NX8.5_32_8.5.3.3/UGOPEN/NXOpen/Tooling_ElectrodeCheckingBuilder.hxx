#ifndef NXOpen_TOOLING_ELECTRODECHECKINGBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_ELECTRODECHECKINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ElectrodeCheckingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_ElectrodeCheckingBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ElectrodeCheckingBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace Tooling
    {
        class _ElectrodeCheckingBuilderBuilder;
        class ElectrodeCheckingBuilderImpl;
        /** Electrode Checking builder to check the touch status of all electrode.  <br> To create a new instance of this class, use @link Tooling::ElectrodeDesignCollection::CreateCheckingBuilder  Tooling::ElectrodeDesignCollection::CreateCheckingBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        InterSolid </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        MapFaceColor </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SameParent </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        TouchArea </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        TouchBody </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ElectrodeCheckingBuilder : public Builder
        {
            private: ElectrodeCheckingBuilderImpl * m_electrodecheckingbuilder_impl;
            private: friend class  _ElectrodeCheckingBuilderBuilder;
            protected: ElectrodeCheckingBuilder();
            public: ~ElectrodeCheckingBuilder();
            /**Returns  the workpiece part to be checked with the electrode part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * Workpiece
            (
            );
            /**Returns  the wildcard string to filter out the workpiece part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WorkpieceNameFilter
            (
            );
            /**Sets  the wildcard string to filter out the workpiece part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetWorkpieceNameFilter
            (
                const NXString & workpieceNameFilter /** workpiecenamefilter */ 
            );
            /**Sets  the wildcard string to filter out the workpiece part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetWorkpieceNameFilter
            (
                const char * workpieceNameFilter /** workpiecenamefilter */ 
            );
            /**Returns  the electrode part to be checked with the workpiece part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * Electrode
            (
            );
            /**Returns  the wildcard string to filter out the electrode part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ElectrodeNameFilter
            (
            );
            /**Sets  the wildcard string to filter out the electrode part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetElectrodeNameFilter
            (
                const NXString & electrodeNameFilter /** electrodenamefilter */ 
            );
            /**Sets  the wildcard string to filter out the electrode part name. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            void SetElectrodeNameFilter
            (
                const char * electrodeNameFilter /** electrodenamefilter */ 
            );
            /**Returns  the option for checking the workpiece and electrode part under the same part or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SameParent
            (
            );
            /**Sets  the option for checking the workpiece and electrode part under the same part or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetSameParent
            (
                bool sameParent /** sameparent */ 
            );
            /**Returns  the option for generating the touch sheet body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool TouchBody
            (
            );
            /**Sets  the option for generating the touch sheet body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetTouchBody
            (
                bool touchBody /** touchbody */ 
            );
            /**Returns  the option for generating the interference solid body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool InterSolid
            (
            );
            /**Sets  the option for generating the interference solid body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInterSolid
            (
                bool interSolid /** intersolid */ 
            );
            /**Returns  the option for mapping color of the touched face pair from workpiece to electrode. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool MapFaceColor
            (
            );
            /**Sets  the option for mapping color of the touched face pair from workpiece to electrode. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetMapFaceColor
            (
                bool mapFaceColor /** mapfacecolor */ 
            );
            /**Returns  the option for calculating the area of the touch sheet body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool TouchArea
            (
            );
            /**Sets  the option for calculating the area of the touch sheet body. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetTouchArea
            (
                bool touchArea /** toucharea */ 
            );
            /**Returns  the option for saving checking results in part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SaveResultsInPart
            (
            );
            /**Sets  the option for saving checking results in part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetSaveResultsInPart
            (
                bool saveResultsInPart /** saveresultsinpart */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
