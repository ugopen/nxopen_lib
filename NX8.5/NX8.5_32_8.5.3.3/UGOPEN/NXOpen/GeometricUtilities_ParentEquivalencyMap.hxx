#ifndef NXOpen_GEOMETRICUTILITIES_PARENTEQUIVALENCYMAP_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PARENTEQUIVALENCYMAP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ParentEquivalencyMap.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_ParentEquivalencyMap.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ParentEquivalencyMap;
    }
    class DisplayableObject;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _ParentEquivalencyMapBuilder;
        class ParentEquivalencyMapImpl;
        /**
            Represents a @link GeometricUtilities::ParentEquivalencyMap GeometricUtilities::ParentEquivalencyMap@endlink . An object of this class represents
            a correspondence between entities of the current object (Linked / Extract feature being edited) and entities
            of the replacement object (faces / body).
             <br> To create a new instance of this class, use @link GeometricUtilities::ReplAsstBuilder::CreateEmptyMatch  GeometricUtilities::ReplAsstBuilder::CreateEmptyMatch @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ParentEquivalencyMap : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** enum for map status */
            public: enum Status
            {
                StatusIncomplete/** incomplete */,
                StatusTentative/** tentative */,
                StatusAccepted/** accepted */
            };

            /** enum for map type */
            public: enum Type
            {
                TypeUndefined/** undefined */,
                TypeUserDefined/** user defined or manual */,
                TypeNameBased/** mapped by name */,
                TypeGeometric/** mapped by geometric comparison */,
                TypeInferred/** inferred from accepted */,
                TypeInternal/** internal ID reuse */,
                TypeInherited/** inherited from other part or operation */,
                TypeMixed/** combination of multiple methods */
            };

            private: ParentEquivalencyMapImpl * m_parentequivalencymap_impl;
            private: friend class  _ParentEquivalencyMapBuilder;
            protected: ParentEquivalencyMap();
            public: ~ParentEquivalencyMap();
            /** Get the mapped entities from the current object. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEntitiesFromCurrentObject
            (
                std::vector<NXOpen::DisplayableObject *> & entitiesFromCurrentObject /** entities from the current object */
            );
            /** Get the mapped entities from the replacement object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEntitiesFromReplacementObject
            (
                std::vector<NXOpen::DisplayableObject *> & entitiesFromReplacementObject /** entities from the replacement object */
            );
            /** Set externally mapped entities 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMappedEntities
            (
                const std::vector<NXOpen::DisplayableObject *> & oldEntities /** entities from the current object */,
                const std::vector<NXOpen::DisplayableObject *> & newEntities /** entities from the replacement object */
            );
            /**Returns  the map status 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ParentEquivalencyMap::Status MapStatus
            (
            );
            /**Sets  the map status 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMapStatus
            (
                NXOpen::GeometricUtilities::ParentEquivalencyMap::Status mapStatus /** mapstatus */ 
            );
            /**Returns  the map type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ParentEquivalencyMap::Type MapType
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
