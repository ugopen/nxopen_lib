#ifndef NXOpen_GEOMETRICUTILITIES_PATTERNORIENTATION_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PATTERNORIENTATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PatternOrientation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_PatternOrientation.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PatternOrientation;
    }
    class CoordinateSystem;
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class ScCollector;
    namespace GeometricUtilities
    {
        class _PatternOrientationBuilder;
        class PatternOrientationImpl;
        /** the pattern orientation definition.  Allows to specify an orientation option and corresponding entities. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PatternOrientation : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** pattern orientation options for all pattern types. */
            public: enum Enum
            {
                EnumFixed/** same orientation as the seed. */,
                EnumNormalToPath/** normal to path orientation for Along Type first direction. */,
                EnumNormalToVector/** normal to vector orientation for Along Type first direction.  */,
                EnumParallelToVector/** parallel to vector orientation for Along Type first direction.  */,
                EnumThroughAxis/** through axis orientation for Along Type first direction.  */,
                EnumFollowPattern/** follow pattern orientation, for example, circular pattern type.  */,
                EnumFollowCSYS/** follow CSYS orientation, for general pattern type, when from/to is CSYS.  */,
                EnumCSYStoCSYS/** a relative orientation defined by two CSYSs to transform the seed to an instance location.  */
            };

            /** pattern follow face project direction options available.  */
            public: enum ProjDirEnum
            {
                ProjDirEnumPatternPlaneNormal/** use pattern plane normal as project direction. */,
                ProjDirEnumNormalToFace/** project along face normal. */,
                ProjDirEnumRadialDir/** project along radial direction. This is specific for Circular pattern type.  */,
                ProjDirEnumUserDefinedVector/** project along user defined vector.  */
            };

            private: PatternOrientationImpl * m_patternorientation_impl;
            private: friend class  _PatternOrientationBuilder;
            protected: PatternOrientation();
            public: ~PatternOrientation();
            /**Returns  the orientationOption for rectangular pattern type
                     Note: this one does not have a straight forward replacement;
                        Replacement based on pattern type:       
                        @link GeometricUtilities::PatternOrientation::LinearOrientationOption GeometricUtilities::PatternOrientation::LinearOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetLinearOrientationOption GeometricUtilities::PatternOrientation::SetLinearOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::CircularOrientationOption GeometricUtilities::PatternOrientation::CircularOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetCircularOrientationOption GeometricUtilities::PatternOrientation::SetCircularOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::AlongOrientationOption GeometricUtilities::PatternOrientation::AlongOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetAlongOrientationOption GeometricUtilities::PatternOrientation::SetAlongOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::PolygonOrientationOption GeometricUtilities::PatternOrientation::PolygonOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetPolygonOrientationOption GeometricUtilities::PatternOrientation::SetPolygonOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::SpiralOrientationOption GeometricUtilities::PatternOrientation::SpiralOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetSpiralOrientationOption GeometricUtilities::PatternOrientation::SetSpiralOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::GeneralOrientationOption GeometricUtilities::PatternOrientation::GeneralOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetGeneralOrientationOption GeometricUtilities::PatternOrientation::SetGeneralOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::MirrorOrientationOption GeometricUtilities::PatternOrientation::MirrorOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetMirrorOrientationOption GeometricUtilities::PatternOrientation::SetMirrorOrientationOption @endlink  
             <br>  @deprecated Deprecated in NX8.0.0.  The replacement function depends on the pattern type. See this method's documentation for more detailed information. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  The replacement function depends on the pattern type. See this method's documentation for more detailed information.") NXOpen::GeometricUtilities::PatternOrientation::Enum OrientationOption
            (
            );
            /**Sets  the orientationOption for rectangular pattern type
                     Note: this one does not have a straight forward replacement;
                        Replacement based on pattern type:       
                        @link GeometricUtilities::PatternOrientation::LinearOrientationOption GeometricUtilities::PatternOrientation::LinearOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetLinearOrientationOption GeometricUtilities::PatternOrientation::SetLinearOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::CircularOrientationOption GeometricUtilities::PatternOrientation::CircularOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetCircularOrientationOption GeometricUtilities::PatternOrientation::SetCircularOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::AlongOrientationOption GeometricUtilities::PatternOrientation::AlongOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetAlongOrientationOption GeometricUtilities::PatternOrientation::SetAlongOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::PolygonOrientationOption GeometricUtilities::PatternOrientation::PolygonOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetPolygonOrientationOption GeometricUtilities::PatternOrientation::SetPolygonOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::SpiralOrientationOption GeometricUtilities::PatternOrientation::SpiralOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetSpiralOrientationOption GeometricUtilities::PatternOrientation::SetSpiralOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::GeneralOrientationOption GeometricUtilities::PatternOrientation::GeneralOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetGeneralOrientationOption GeometricUtilities::PatternOrientation::SetGeneralOrientationOption @endlink 
                        @link GeometricUtilities::PatternOrientation::MirrorOrientationOption GeometricUtilities::PatternOrientation::MirrorOrientationOption @endlink and @link GeometricUtilities::PatternOrientation::SetMirrorOrientationOption GeometricUtilities::PatternOrientation::SetMirrorOrientationOption @endlink  
             <br>  @deprecated Deprecated in NX8.0.0.  The replacement function depends on the pattern type. See this method's documentation for more detailed information. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  The replacement function depends on the pattern type. See this method's documentation for more detailed information.") void SetOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum orientationOption /** orientationoption */ 
            );
            /**Returns  the orientationOption for Linear pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum LinearOrientationOption
            (
            );
            /**Sets  the orientationOption for Linear pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetLinearOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum linearOrientationOption /** linearorientationoption */ 
            );
            /**Returns  the orientationOption for Circular pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum CircularOrientationOption
            (
            );
            /**Sets  the orientationOption for Circular pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCircularOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum circularOrientationOption /** circularorientationoption */ 
            );
            /**Returns  the orientationOption for Along pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum AlongOrientationOption
            (
            );
            /**Sets  the orientationOption for Along pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAlongOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum alongOrientationOption /** alongorientationoption */ 
            );
            /**Returns  the orientationOption for Polygon pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum PolygonOrientationOption
            (
            );
            /**Sets  the orientationOption for Polygon pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPolygonOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum polygonOrientationOption /** polygonorientationoption */ 
            );
            /**Returns  the orientationOption for Spiral pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum SpiralOrientationOption
            (
            );
            /**Sets  the orientationOption for Spiral pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSpiralOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum spiralOrientationOption /** spiralorientationoption */ 
            );
            /**Returns  the orientationOption for General pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum GeneralOrientationOption
            (
            );
            /**Sets  the orientationOption for General pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetGeneralOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum generalOrientationOption /** generalorientationoption */ 
            );
            /**Returns  the orientationOption for Mirror pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::Enum MirrorOrientationOption
            (
            );
            /**Sets  the orientationOption for Mirror pattern type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMirrorOrientationOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::Enum mirrorOrientationOption /** mirrororientationoption */ 
            );
            /**Returns  the fromCSYS, a CSYS for certain pattern type orientation need. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * FromCSYS
            (
            );
            /**Sets  the fromCSYS, a CSYS for certain pattern type orientation need. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFromCSYS
            (
                NXOpen::CoordinateSystem * fromCSYS /** fromcsys */ 
            );
            /**Returns  the toCSYS, a CSYS for certain pattern type orientation need. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ToCSYS
            (
            );
            /**Sets  the toCSYS, a CSYS for certain pattern type orientation need. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToCSYS
            (
                NXOpen::CoordinateSystem * toCSYS /** tocsys */ 
            );
            /**Returns  the vectorForAlong, a vector for Along type orientation need. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * VectorForAlong
            (
            );
            /**Sets  the vectorForAlong, a vector for Along type orientation need. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetVectorForAlong
            (
                NXOpen::Direction * vectorForAlong /** vectorforalong */ 
            );
            /**Returns  the followFaceToggle, a logical flag to indicate if the we need to modify the orientation to follow selected faces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool FollowFaceToggle
            (
            );
            /**Sets  the followFaceToggle, a logical flag to indicate if the we need to modify the orientation to follow selected faces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFollowFaceToggle
            (
                bool followFaceToggle /** followfacetoggle */ 
            );
            /**Returns  the followFaceSelection, a sc collector to store selected faces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FollowFaceSelection
            (
            );
            /**Returns  the followFaceProjDirOption, an enum for follow face project direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternOrientation::ProjDirEnum FollowFaceProjDirOption
            (
            );
            /**Sets  the followFaceProjDirOption, an enum for follow face project direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFollowFaceProjDirOption
            (
                NXOpen::GeometricUtilities::PatternOrientation::ProjDirEnum followFaceProjDirOption /** followfaceprojdiroption */ 
            );
            /**Returns  the userDefinedProjDir, a vector for user defined follow face project direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * UserDefinedProjDir
            (
            );
            /**Sets  the userDefinedProjDir, a vector for user defined follow face project direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetUserDefinedProjDir
            (
                NXOpen::Direction * userDefinedProjDir /** userdefinedprojdir */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
