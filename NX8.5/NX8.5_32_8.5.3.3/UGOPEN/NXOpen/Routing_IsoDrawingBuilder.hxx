#ifndef NXOpen_ROUTING_ISODRAWINGBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ISODRAWINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_IsoDrawingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_IsoDrawingBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class IsoDrawingBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Routing
    {
        class _IsoDrawingBuilderBuilder;
        class IsoDrawingBuilderImpl;
        /** Represents a @link IsoDrawingBuilder IsoDrawingBuilder@endlink , used to run the ISOGEN engine
                to create isometric drawings of piping networks.
             <br> To create a new instance of this class, use @link Routing::RouteManager::CreateIsoDrawingBuilder  Routing::RouteManager::CreateIsoDrawingBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DrawingTypesEnum </td> <td> 
         
        System </td> </tr> 

        <tr><td> 
         
        RunsToDrawTypesEnum </td> <td> 
         
        All </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  IsoDrawingBuilder : public Builder
        {
            /** The drawing style selection enumeration. */
            public: enum DrawingTypes
            {
                DrawingTypesSystem/** system */ ,
                DrawingTypesFinal/** final */ 
            };

            /** The Runs to Draw selection enumeration. */
            public: enum RunsToDrawTypes
            {
                RunsToDrawTypesAll/** all */ ,
                RunsToDrawTypesSelection/** selection */ 
            };

            private: IsoDrawingBuilderImpl * m_isodrawingbuilder_impl;
            private: friend class  _IsoDrawingBuilderBuilder;
            protected: IsoDrawingBuilder();
            public: ~IsoDrawingBuilder();
            /**Returns  the selected drawing style 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Routing::IsoDrawingBuilder::DrawingTypes DrawingTypesEnum
            (
            );
            /**Sets  the selected drawing style 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDrawingTypesEnum
            (
                NXOpen::Routing::IsoDrawingBuilder::DrawingTypes drawingTypesEnum /** drawingtypesenum */ 
            );
            /**Returns  the selected Runs to Draw type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Routing::IsoDrawingBuilder::RunsToDrawTypes RunsToDrawTypesEnum
            (
            );
            /**Sets  the selected Runs to Draw type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRunsToDrawTypesEnum
            (
                NXOpen::Routing::IsoDrawingBuilder::RunsToDrawTypes runsToDrawTypesEnum /** runstodrawtypesenum */ 
            );
            /**Returns  the routing runs selected to be included in the isometric drawing. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * RunsSelection
            (
            );
            /**Returns  the name of the file which will contain the isometric drawing 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString OutputFile
            (
            );
            /**Sets  the name of the file which will contain the isometric drawing 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOutputFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the name of the file which will contain the isometric drawing 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetOutputFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the isometric drawing should be opened in NX after creation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool OpenAfterCreation
            (
            );
            /**Sets  the isometric drawing should be opened in NX after creation 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOpenAfterCreation
            (
                bool openAfterCreation /** openaftercreation */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
