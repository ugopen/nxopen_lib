#ifndef NXOpen_CAM_NCMAVOIDANCEPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_NCMAVOIDANCEPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_NcmAvoidancePointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class NcmAvoidancePointBuilder;
    }
    class NXObject;
    class Point;
    namespace CAM
    {
        class _NcmAvoidancePointBuilderBuilder;
        class NcmAvoidancePointBuilderImpl;
        /**
            Represents a @link CAM::NcmAvoidancePointBuilder CAM::NcmAvoidancePointBuilder@endlink 
            
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  NcmAvoidancePointBuilder : public TaggedObject
        {
            /** the types available for avoidance point definition */
            public: enum PointStates
            {
                PointStatesNone/** Avoidance point inactive */,
                PointStatesUseOther/** use from point (only for GoHome point) */,
                PointStatesNoPoint/** use no point (only for GoHome point) */,
                PointStatesUsePoint/** use specified point */
            };

            /** the types available for tool axis status */
            public: enum ToolAxisUsages
            {
                ToolAxisUsagesNone/** tool axis inactive */,
                ToolAxisUsagesSpecify/** tool axis active */
            };

            private: NcmAvoidancePointBuilderImpl * m_ncmavoidancepointbuilder_impl;
            private: friend class  _NcmAvoidancePointBuilderBuilder;
            protected: NcmAvoidancePointBuilder();
            public: ~NcmAvoidancePointBuilder();
            /**Returns  the avoidance point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the avoidance point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * newValue /** newvalue */ 
            );
            /**Returns  the point status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmAvoidancePointBuilder::PointStates PointStatus
            (
            );
            /**Sets  the point status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPointStatus
            (
                NXOpen::CAM::NcmAvoidancePointBuilder::PointStates newValue /** newvalue */ 
            );
            /**Returns  the avoidance tool axis 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * ToolAxis
            (
            );
            /**Sets  the avoidance tool axis 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxis
            (
                NXOpen::NXObject * newValue /** newvalue */ 
            );
            /**Returns  the tool axis status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int ToolAxisStatus
            (
            );
            /**Sets  the tool axis status 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxisStatus
            (
                int newValue /** newvalue */ 
            );
            /**Returns  the tool axis usage 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmAvoidancePointBuilder::ToolAxisUsages ToolAxisUsage
            (
            );
            /**Sets  the tool axis usage 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxisUsage
            (
                NXOpen::CAM::NcmAvoidancePointBuilder::ToolAxisUsages newValue /** newvalue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
