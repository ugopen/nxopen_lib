#ifndef NXOpen_SIM_KINEMATICJUNCTIONBUILDER_HXX_INCLUDED
#define NXOpen_SIM_KINEMATICJUNCTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_KinematicJunctionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class KinematicJunctionBuilder;
    }
    class Builder;
    class CartesianCoordinateSystem;
    namespace SIM
    {
        class _KinematicJunctionBuilderBuilder;
        class KinematicJunctionBuilderImpl;
        /**  @brief  Represents the SimKimJunctionBuilder class object  

            <br> Use the @link KinematicConfigurator KinematicConfigurator@endlink  class to create a KinematicJunctionBuilder object.  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  KinematicJunctionBuilder : public Builder
        {
            /** The junction system classes */
            public: enum SystemClass
            {
                SystemClassNone/** no specal class */,
                SystemClassMount/** a mounting junction */,
                SystemClassMachineZero/** the machine zero junction */,
                SystemClassToolZero/** the tool mounting point */,
                SystemClassToolTip/** The tool tip junction */,
                SystemClassLatheWpZx/** Lathe Work Plane Z/X */,
                SystemClassLatheWpXy/** Lathe Work Plane X/Y */
            };

            private: KinematicJunctionBuilderImpl * m_kinematicjunctionbuilder_impl;
            private: friend class  _KinematicJunctionBuilderBuilder;
            protected: KinematicJunctionBuilder();
            public: ~KinematicJunctionBuilder();
            /**Returns  the kim junction's name 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NXString Name
            (
            );
            /**Sets  the kim junction's name 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: void SetName
            (
                const NXString & name /** the junction's new name */
            );
            /**Sets  the kim junction's name 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            void SetName
            (
                const char * name /** the junction's new name */
            );
            /** Create the default CSYS based on WCS  @return  the default csys 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: NXOpen::CartesianCoordinateSystem * CreateDefaultCsys
            (
            );
            /** Create the tooltip CSYS  @return  the tooltip csys 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NXOpen::CartesianCoordinateSystem * CreateTooltipCsys
            (
            );
            /**Returns  the CSYS associated with the junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: NXOpen::CartesianCoordinateSystem * Csys
            (
            );
            /**Sets  the CSYS associated with the junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: void SetCsys
            (
                NXOpen::CartesianCoordinateSystem * csys /** the csys */
            );
            /**Returns  the classification of the junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: NXOpen::SIM::KinematicJunctionBuilder::SystemClass Classification
            (
            );
            /**Sets  the classification of the junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: void SetClassification
            (
                NXOpen::SIM::KinematicJunctionBuilder::SystemClass jctClass /** the classification of the junction */
            );
            /** Test if this is a machine zero junction  @return  true if it is the machine zero junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: bool IsMachineZero
            (
            );
            /** Test if the junction is a tool mount junctions  @return  true if it is a tool mount junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: bool IsToolMount
            (
            );
            /** Test if the junction is a tool tip junctions  @return  true if it is a tool tip junction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR resource_manager_nx ("Teamcenter Resource Manager") */
            public: bool IsToolTip
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
