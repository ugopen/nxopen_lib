#ifndef NXOpen_FEATURES_DELETEBODYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DELETEBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DeleteBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_DeleteBodyBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class DeleteBodyBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _DeleteBodyBuilderBuilder;
        class DeleteBodyBuilderImpl;
        /** Represents a @link Features::DeleteBody Features::DeleteBody@endlink  builder for Delete Body feature.  <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDeleteBodyBuilder  Features::FeatureCollection::CreateDeleteBodyBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  DeleteBodyBuilder : public Features::FeatureBuilder
        {
            private: DeleteBodyBuilderImpl * m_deletebodybuilder_impl;
            private: friend class  _DeleteBodyBuilderBuilder;
            protected: DeleteBodyBuilder();
            public: ~DeleteBodyBuilder();
            /**Returns  the collector of body to delete. It can be a single solid/sheet body, or multiple solid/sheet bodies 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BodyToDelete
            (
            );
            /**Sets  the collector of body to delete. It can be a single solid/sheet body, or multiple solid/sheet bodies 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBodyToDelete
            (
                NXOpen::ScCollector * bodyToDelete /** bodytodelete */ 
            );
            /**Returns  the collector of body to keep. It can be a single solid/sheet body, or multiple solid/sheet bodies 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BodyToKeep
            (
            );
            /**Sets  the collector of body to keep. It can be a single solid/sheet body, or multiple solid/sheet bodies 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBodyToKeep
            (
                NXOpen::ScCollector * bodyToKeep /** bodytokeep */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
