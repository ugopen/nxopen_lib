#ifndef NXOpen_CAE_GRMSEARCH_HXX_INCLUDED
#define NXOpen_CAE_GRMSEARCH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_GRMSearch.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class GRMSearch;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class GRMSearchImpl;
        /**  @brief  Contains methods for searching Teamcenter for CAE objects, as well
            as a cache of already found items.  

          
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  GRMSearch : public TransientObject
        {
            private: GRMSearchImpl * m_grmsearch_impl;
            /// \cond NX_NO_DOC 
            public: explicit GRMSearch(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~GRMSearch();
            /**  Find CAE Objects.  Given a CAD object, this method will find
                    FEMs and Ideals.  Given a FEM, it will find Sims, etc.  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void FindReferencers
            (
                const NXString & fileSpec /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                bool useCache /** usecache */ ,
                std::vector<NXString> & referencerNames /** referencernames */ 
            );
            /**  Find CAE Objects.  Given a CAD object, this method will find
                    FEMs and Ideals.  Given a FEM, it will find Sims, etc.  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FindReferencers
            (
                const char * fileSpec /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                bool useCache /** usecache */ ,
                std::vector<NXString> & referencerNames /** referencernames */ 
            );
            /** Find CAE Objects as above, only from the cache of already 
                    searched items.  This method will not access the TC server for data. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void FindCachedReferencers
            (
                const NXString & fileSpec /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & referencerNames /** referencernames */ 
            );
            /** Find CAE Objects as above, only from the cache of already 
                    searched items.  This method will not access the TC server for data. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FindCachedReferencers
            (
                const char * fileSpec /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & referencerNames /** referencernames */ 
            );
            /** Clear the cache of searched CAE objects such that a subsequent call
                    to "FindCachedReferencers" will return nothing. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ClearCache
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
