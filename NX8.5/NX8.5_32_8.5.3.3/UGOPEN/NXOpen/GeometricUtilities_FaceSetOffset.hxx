#ifndef NXOpen_GEOMETRICUTILITIES_FACESETOFFSET_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_FACESETOFFSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_FaceSetOffset.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ExpressionCollectorSet.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class FaceSetOffset;
    }
    class Expression;
    class ExpressionCollectorSet;
    class ScCollector;
    namespace GeometricUtilities
    {
        class _FaceSetOffsetBuilder;
        class FaceSetOffsetImpl;
        /** This class represents a face set (collector) offset data. As the name indicates, it is a
             *  combination of a face collector and an offset distance.
              <br> To create a new instance of this class, use @link GeometricUtilities::FaceSetOffsetCollection::CreateEmptyFaceSet  GeometricUtilities::FaceSetOffsetCollection::CreateEmptyFaceSet @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  FaceSetOffset : public ExpressionCollectorSet
        {
            private: FaceSetOffsetImpl * m_facesetoffset_impl;
            private: friend class  _FaceSetOffsetBuilder;
            protected: FaceSetOffset();
            public: ~FaceSetOffset();
            /**Sets  the face collector
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFaceCollector
            (
                NXOpen::ScCollector * faceCollector /** Smart collector for the face set */
            );
            /**Returns  the face collector
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FaceCollector
            (
            );
            /** Sets the offset distance
                     
             <br>  @deprecated Deprecated in NX8.5.0.  To set the value of the expression modify the expression directly using @link GeometricUtilities::FaceSetOffset::Offset GeometricUtilities::FaceSetOffset::Offset@endlink  and @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink . <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  To set the value of the expression modify the expression directly using GeometricUtilities::FaceSetOffset::Offset and Expression::SetRightHandSide.") void SetOffset
            (
                const NXString & offsetValue /** Input offset distance for the face set   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the offset distance
                     
             <br>  @deprecated Deprecated in NX8.5.0.  To set the value of the expression modify the expression directly using @link GeometricUtilities::FaceSetOffset::Offset GeometricUtilities::FaceSetOffset::Offset@endlink  and @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink . <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetOffset
            (
                const char * offsetValue /** Input offset distance for the face set   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the offset distance
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /** Flip offset direction. This API flips the direction of offset keeping the offset distance same.
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void FlipDirection
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
