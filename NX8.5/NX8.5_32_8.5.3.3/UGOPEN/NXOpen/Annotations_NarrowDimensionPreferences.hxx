#ifndef NXOpen_ANNOTATIONS_NARROWDIMENSIONPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_NARROWDIMENSIONPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_NarrowDimensionPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Dimensions.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class NarrowDimensionPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class NarrowDimensionPreferencesImpl;
        /** Represents narrow dimension preferences 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  NarrowDimensionPreferences : public TransientObject
        {
            private: NarrowDimensionPreferencesImpl * m_narrowdimensionpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit NarrowDimensionPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~NarrowDimensionPreferences();
            /**Returns  the dimension display option 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::NarrowDisplayOption DimensionDisplayOption
            (
            );
            /**Sets  the dimension display option 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionDisplayOption
            (
                NXOpen::Annotations::NarrowDisplayOption option /** New display option */
            );
            /**Returns  the dimension text orientation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::NarrowTextOrientation DimensionTextOrientation
            (
            );
            /**Sets  the dimension text orientation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionTextOrientation
            (
                NXOpen::Annotations::NarrowTextOrientation textOrientation /** New text orientation */
            );
            /**Returns  the dimension leader angle 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double DimensionLeaderAngle
            (
            );
            /**Sets  the dimension leader angle 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionLeaderAngle
            (
                double leaderAngle /** New leader angle */
            );
            /**Returns  the dimension text offset 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double DimensionTextOffset
            (
            );
            /**Sets  the dimension text offset 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionTextOffset
            (
                double textOffset /** New text offset */
            );
            /**Returns  the dimension arrowhead type when no space for normal arrowheads  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ArrowheadType DimensionArrowheadType
            (
            );
            /**Sets  the dimension arrowhead type when no space for normal arrowheads  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionArrowheadType
            (
                NXOpen::Annotations::ArrowheadType type /** New arrowhead type */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
