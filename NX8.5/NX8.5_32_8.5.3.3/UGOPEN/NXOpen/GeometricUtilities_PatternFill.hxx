#ifndef NXOpen_GEOMETRICUTILITIES_PATTERNFILL_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PATTERNFILL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PatternFill.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_PatternFill.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PatternFill;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _PatternFillBuilder;
        class PatternFillImpl;
        /** the pattern fill definition.  Allows to speicify a section boundary with an offset margin. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PatternFill : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This defines Fill Types */
            public: enum PatternFillOptions
            {
                PatternFillOptionsNone/** no section is defined */,
                PatternFillOptionsFillbyFace/** section is face-based, and for fill area. */,
                PatternFillOptionsFillbyBoundary/** section is for fill area.  */,
                PatternFillOptionsExcludeAreaOnly/** section is for exclude area only */
            };

            private: PatternFillImpl * m_patternfill_impl;
            private: friend class  _PatternFillBuilder;
            protected: PatternFill();
            public: ~PatternFill();
            /**Returns  the fill options 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternFill::PatternFillOptions FillOptions
            (
            );
            /**Sets  the fill options 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFillOptions
            (
                NXOpen::GeometricUtilities::PatternFill::PatternFillOptions fillOptions /** filloptions */ 
            );
            /**Returns  the fill boundary 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * FillBoundary
            (
            );
            /**Returns  the fill boundary 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * InternalBoundary
            (
            );
            /**Returns  the face boundary 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * FaceBoundary
            (
            );
            /**Returns  the fill margin 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FillMargin
            (
            );
            /**Returns  the applyMarginToInnerBoundToggle, a logical flag to indicate if we need to apply the margin value to internal bounday. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ApplyMarginToInnerBoundToggle
            (
            );
            /**Sets  the applyMarginToInnerBoundToggle, a logical flag to indicate if we need to apply the margin value to internal bounday. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetApplyMarginToInnerBoundToggle
            (
                bool applyMarginToInnerBoundToggle /** applymargintoinnerboundtoggle */ 
            );
            /**Returns  the simplifiedBoundaryToggle, a logical flag to indicate a special case for Linear, Circular, Spiral, or Polygon. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SimplifiedBoundaryToggle
            (
            );
            /**Sets  the simplifiedBoundaryToggle, a logical flag to indicate a special case for Linear, Circular, Spiral, or Polygon. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSimplifiedBoundaryToggle
            (
                bool simplifiedBoundaryToggle /** simplifiedboundarytoggle */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
