#ifndef NXOpen_DIE_WEARPLATELOCCHILDBUILDER_HXX_INCLUDED
#define NXOpen_DIE_WEARPLATELOCCHILDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_WearPlateLocChildBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class WearPlateLocChildBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ISurface;
    namespace Die
    {
        class _WearPlateLocChildBuilderBuilder;
        class WearPlateLocChildBuilderImpl;
        /** Represents a Die Wear Plate Locator sub feature.  <br> This sub feature is created via the main feature builder.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  WearPlateLocChildBuilder : public Features::FeatureBuilder
        {
            /** Settings for the positioning of the locator relative to the wear plate. */
            public: enum PositionType
            {
                PositionTypeLeft/** Position locator to the left of the wear plate. */,
                PositionTypeRight/** Position locator to the right of the wear plate. */,
                PositionTypeBoth/** Position locator on both sides of the wear plate. */,
                PositionTypeNeither/** No locators. */
            };

            private: WearPlateLocChildBuilderImpl * m_wearplatelocchildbuilder_impl;
            private: friend class  _WearPlateLocChildBuilderBuilder;
            protected: WearPlateLocChildBuilder();
            public: ~WearPlateLocChildBuilder();
            /**Sets  the orientation plane of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOrientation
            (
                NXOpen::ISurface * orientation /** orientation */ 
            );
            /**Returns  the orientation plane of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::ISurface * Orientation
            (
            );
            /**Sets  the reverse normal setting of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReverseNormal
            (
                int reverseNormal /** reverse normal */ 
            );
            /**Returns  the reverse normal setting of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: int ReverseNormal
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPoint
            (
                const NXString & pointLocation /** Length along centerline expression value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetPoint
            (
                const char * pointLocation /** Length along centerline expression value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the point location along the centerline of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * Point
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetWearPlateWidth
            (
                const NXString & width /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetWearPlateWidth
            (
                const char * width /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the wear plate width of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * WearPlateWidth
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetWearPlateLength
            (
                const NXString & length /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetWearPlateLength
            (
                const char * length /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the wear plate length of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * WearPlateLength
            (
            );
            /**Sets  the locator position of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLocatorPosition
            (
                NXOpen::Die::WearPlateLocChildBuilder::PositionType position /** position */ 
            );
            /**Returns  the locator position of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::WearPlateLocChildBuilder::PositionType LocatorPosition
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLocatorWidth
            (
                const NXString & width /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetLocatorWidth
            (
                const char * width /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the locator width of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * LocatorWidth
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLocatorDepth
            (
                const NXString & depth /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetLocatorDepth
            (
                const char * depth /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the locator depth of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * LocatorDepth
            (
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRibSupportWidth
            (
                const NXString & ribSupportWidth /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetRibSupportWidth
            (
                const char * ribSupportWidth /** Expression Value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the wear plate rib support width of die wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * RibSupportWidth
            (
            );
            /** Gets the pad attributes, note existance of attributes depends on usage in
                    main feature 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetPadAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of pad faces */
            );
            /** Sets the pad attributes, note existance of attributes depends on usage in
                    main feature 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPadAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of pad faces */
            );
            /** Sets the pad attributes, note existance of attributes depends on usage in
                    main feature 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetPadAttributes
            (
                const char * title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of pad faces */
            );
            /** Gets the relief attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetReliefAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of relief faces */
            );
            /** Sets the relief attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReliefAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of relief faces */
            );
            /** Sets the relief attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetReliefAttributes
            (
                const char * title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of relief faces */
            );
            /** Gets the recess attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void GetRecessAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of recess faces */
            );
            /** Sets the recess attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetRecessAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of recess faces */
            );
            /** Sets the recess attributes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetRecessAttributes
            (
                const char * title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of recess faces */
            );
            /**Sets  the design status of wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool designStatus /** design status */ 
            );
            /**Returns  the design status of wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool displayStatus /** display status */ 
            );
            /**Returns  the display status of wear plate and locators 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
