#ifndef NXOpen_CAE_RESULTPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_RESULTPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Result.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultParameters;
    }
    namespace CAE
    {
        class BaseResultType;
    }
    class Unit;
    namespace CAE
    {
        class _ResultParametersBuilder;
        class ResultParametersImpl;
        /** This class is worked as a packet of information that can be either be used to change result state or pass around for information exchange between two  @link CAE::ResultAccess CAE::ResultAccess@endlink  objects.
                <br/>Use @link CAE::ResultManager CAE::ResultManager@endlink  to create an @link CAE::ResultParameters CAE::ResultParameters@endlink 
                
                <br/>You can modifiy these values but validation of correctness will only be perfomed 
                when this object is set to a @link CAE::ResultAccess CAE::ResultAccess@endlink  object
             <br> To obtain an instance of this class use @link Session::ResultManager Session::ResultManager@endlink .  <br> 
         <br>  Created in NX6.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultParameters : public TaggedObject
        {
            private: ResultParametersImpl * m_resultparameters_impl;
            private: friend class  _ResultParametersBuilder;
            protected: ResultParameters();
            public: ~ResultParameters();
            /** Ask Current loadcase number 
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , 
                    which can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return  
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") int GetLoadcase
            (
            );
            /** Ask Current iteration number 
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return   
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") int GetIteration
            (
            );
            /** Set Current loadcase and iteration.
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") void SetLoadcaseIteration
            (
                int loadcase /** loadcase number varies from 0 to N-1 */,
                int iteration /** iteration number varies from 0 to N-1 */
            );
            /** Ask FE entity where the result is defined  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return   
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") NXOpen::CAE::Result::Location GetResultDataLocation
            (
            );
            /** Set FE entity where the result is defined  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                    
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") void SetResultDataLocation
            (
                NXOpen::CAE::Result::Location location /** location */ 
            );
            /** Ask section of a FE entity where the result is defined  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return   
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") NXOpen::CAE::Result::Section GetResultDataSection
            (
            );
            /** Set section of a FE entity where the result is defined  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                    
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") void SetResultDataSection
            (
                NXOpen::CAE::Result::Section section /** section */ 
            );
            /** Ask section where beam results are defined  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Section GetResultBeamSection
            (
            );
            /** Set section where beam results are defined  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultBeamSection
            (
                NXOpen::CAE::Result::Section section /** section */ 
            );
            /** Ask section where shell results are defined  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Section GetResultShellSection
            (
            );
            /** Set section where shell results are defined  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultShellSection
            (
                NXOpen::CAE::Result::Section section /** section */ 
            );
            /** Ask result type  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return   
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") NXOpen::CAE::Result::Quantity GetResultDataQuantity
            (
            );
            /** Set result quantity  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                    
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") void SetResultDataQuantity
            (
                NXOpen::CAE::Result::Quantity quantity /** quantity */ 
            );
            /** Ask Result type  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                     @return   
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") NXOpen::CAE::Result::Type GetResultType
            (
            );
            /** Set Result type  
                    This method has been deprecated. This functionality was moved to this class @link CAE::BaseResultType CAE::BaseResultType@endlink , which         can be obtained by using  @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink . 
                    
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAE::ResultParameters::GetGenericResultType CAE::ResultParameters::GetGenericResultType@endlink  instead. <br>  

             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAE::ResultParameters::GetGenericResultType instead.") void SetResultType
            (
                const NXOpen::CAE::Result::Type & type /** type */ 
            );
            /** Ask Result type   @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::BaseResultType * GetGenericResultType
            (
            );
            /** Set Result type  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGenericResultType
            (
                NXOpen::CAE::BaseResultType * type /** type */ 
            );
            /** Ask result component   @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Component GetResultComponent
            (
            );
            /** Set result component  
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultComponent
            (
                NXOpen::CAE::Result::Component component /** component */ 
            );
            /** Ask result coordinate system   @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::CoordinateSystem GetCoordinateSystem
            (
            );
            /** Set result coordinate system  
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCoordinateSystem
            (
                NXOpen::CAE::Result::CoordinateSystem coordinate /** coordinate */ 
            );
            /** Ask selected coordinate system in which results are to be presented 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetSelectedCoordinateSystem
            (
                NXOpen::CAE::Result::CoordinateSystemSource* source /** source */ ,
                int* id /** id */ 
            );
            /** Set selected coordinate system in which results are to be presented 
                        Coordinate systems labels defined in a result file can be retrieved using @link CAE::Result::GetResultCoordinateSystems CAE::Result::GetResultCoordinateSystems@endlink 
                    
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSelectedCoordinateSystem
            (
                NXOpen::CAE::Result::CoordinateSystemSource source /** source */ ,
                int id /** id */ 
            );
            /** Presents beam results in local coordinate system (if flag is true)
                         or in the same coordinate system as the rest of the model 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamResultsInLocalCoordinateSystem
            (
                bool local /** local */ 
            );
            /** Identifies whether beam results are presented in local coordinate system 
                         (if true) or in the same coordinate system as the rest of the model  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetBeamResultsInLocalCoordinateSystem
            (
            );
            /** Make Nodal and Element-Nodal result to Element Result. Does not do anything if the result is element result already.
                         To define what value should be used to represent an element, use @link CAE::ResultParameters::SetElementValueCriterion CAE::ResultParameters::SetElementValueCriterion@endlink 
                     
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void MakeElementResult
            (
                bool elementResult /** elementresult */ 
            );
            /** Ask whether the result is converted as element result @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool IsForcedElementResult
            (
            );
            /** Ask how element the result is defined. 
                        This option is only valid for nodal and elemen-nodal result.  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::ElementValueCriterion GetElementValueCriterion
            (
            );
            /** Set how element the result is defined 
                       This option is only valid for nodal and elemen-nodal result; dose not do anything for element result.
                    
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetElementValueCriterion
            (
                NXOpen::CAE::Result::ElementValueCriterion criteria /** criteria */ 
            );
            /** Ask default averaging criteria  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Averaging InitAveragingCriteria
            (
            );
            /** Ask averaging criteria.  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Averaging GetAveragingCriteria
            (
            );
            /** Set averaging criteria 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAveragingCriteria
            (
                const NXOpen::CAE::Result::Averaging & average /** average */ 
            );
            /** Set computing type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetComputationType
            (
                NXOpen::CAE::Result::ComputationType computeType /** compute type */ 
            );
            /** Get computing type.  @return   
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::ComputationType GetComputationType
            (
            );
            /** Exclude or include elements which are not visible for computing with sum option.
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetExcludeElementsNotVisible
            (
                bool excludeElements /** exclude elements */ 
            );
            /** Ask whether elements which are not visible are consider for summation  @return   
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetExcludeElementsNotVisible
            (
            );
            /** If result is complex it returns which component is set(like real or imaginary)  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Complex GetComplexCriterion
            (
            );
            /** Set complex criteria 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetComplexCriterion
            (
                NXOpen::CAE::Result::Complex complex /** complex */ 
            );
            /** Ask phase angle. If complex result is set to Phaseangle type then user can specify an angle at which result will be evaluated  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetPhaseAngle
            (
            );
            /** Sets the phase angle at which result will be evaluated. This is only value if complex result is set to the PhaseAngle type 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPhaseAngle
            (
                double angle /** angle */ 
            );
            /** Ask section, ply and layer  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int AskSectionPlyLayer
            (
                int* section /** section */ ,
                int* ply /** ply */ 
            );
            /** Set section, ply and layer 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSectionPlyLayer
            (
                int section /** section */ ,
                int ply /** ply */ ,
                int layer /** layer */ 
            );
            /** Ask scale @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetScale
            (
            );
            /** Set scale. This will affect all subsequent result query. 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetScale
            (
                double scale /** scale */ 
            );
            /** Ask result unit  @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Unit * GetUnit
            (
            );
            /** Set result unit 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetUnit
            (
                NXOpen::Unit * unit /** unit */ 
            );
            /** Set all values to absolute values. 
                        Warning: Once converted to absolute value it is not possible to revert to original values.
                     
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAbsoluteValue
            (
                bool absolute /** absolute */ 
            );
            /** Ask whether all values are absolute values      @return   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetAbsoluteValue
            (
            );
            /** Sets a flag to calculate beam stresses and strains 
                         from element forces and section geometry (if available). 
                         Does not affect other result types and element types 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCalculateBeamStrResults
            (
                bool calcBeamStrResults /** calc beam str results */ 
            );
            /**  Ask if beam stresses and strains are calculated
                         from element forces and section geometry  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetCalculateBeamStrResults
            (
            );
            /** Sets the fillets flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamFillets
            (
                bool beamFillets /** beam fillets */ 
            );
            /** Return the fillets flag  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetBeamFillets
            (
            );
            /** Sets the fillet radius as a fraction of the adjacent dimensions 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamFilletRadius
            (
                double beamFilletRadius /** beam fillet radius */ 
            );
            /** Return the fillet radius  @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetBeamFilletRadius
            (
            );
            /** This is display only command. Setting this value will not change modify ResultAccess queries.
                         But Post view will ignore midnode values during display
                     
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DisplayMidnodeValue
            (
                bool display /** display */ 
            );
            /** Ask whether the result at mid nodes are ignored @return   
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool IsMidnodeValueDisplayed
            (
            );
            /** Set the method used when calculating the absolute values for the derived components of @link CAE::Result::DataTypeTensor CAE::Result::DataTypeTensor@endlink  
                         like  @link CAE::Result::ComponentMaximumPrincipal CAE::Result::ComponentMaximumPrincipal@endlink  
                     
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTensorComponentAbsoluteValue
            (
                NXOpen::CAE::Result::TensorDerivedAbsolute absolute /** absolute */ 
            );
            /** Get the method used when calculating the absolute values for the derived components of
                        @link CAE::Result::DataTypeTensor CAE::Result::DataTypeTensor@endlink  like  @link CAE::Result::ComponentMaximumPrincipal CAE::Result::ComponentMaximumPrincipal@endlink   @return   
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::TensorDerivedAbsolute GetTensorComponentAbsoluteValue
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
