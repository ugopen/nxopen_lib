#ifndef NXOpen_CAE_FEMSYNCHRONIZEOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_FEMSYNCHRONIZEOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FemSynchronizeOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FemSynchronizeOptions;
    }
    namespace CAE
    {
        class FemSynchronizeOptionsImpl;
        /**  @brief  Represents the synchronize options to be used when a FEM part is created
                          These options will be used to synchronize the specified entities from the
                          master CAD part file to the FEM part file  

           <br> To create a new instance of this class, use @link CAE::FemPart::NewFemSynchronizeOptions  CAE::FemPart::NewFemSynchronizeOptions @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FemSynchronizeOptions : public TransientObject
        {
            private: FemSynchronizeOptionsImpl * m_femsynchronizeoptions_impl;
            /// \cond NX_NO_DOC 
            public: explicit FemSynchronizeOptions(void *ptr);
            /// \endcond 
            /**Sets all the synchronize options to the given boolean value
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAllSynchronizeFlags
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Sets  the synchronize points flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizePointsFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize points flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizePointsFlag
            (
            );
            /**Sets  the synchronize coordinate system flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeCoordinateSystemFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize coordinate system flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeCoordinateSystemFlag
            (
            );
            /**Sets  the synchronize lines flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeLinesFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize lines flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeLinesFlag
            (
            );
            /**Sets  the synchronize arcs flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeArcsFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize arcs flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeArcsFlag
            (
            );
            /**Sets  the synchronize splines flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeSplinesFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize splines flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeSplinesFlag
            (
            );
            /**Sets  the synchronize sketch curves flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeSketchCurvesFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize sketch curves flag 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeSketchCurvesFlag
            (
            );
            /**Sets  the synchronize conics flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSynchronizeConicsFlag
            (
                bool synchronizeOption /** synchronize option */ 
            );
            /**Returns  the synchronize conics flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool SynchronizeConicsFlag
            (
            );
            /** Destroys the object 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~FemSynchronizeOptions();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
