#ifndef NXOpen_CAM_INSPECTIONANALYZEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONANALYZEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionAnalyzeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAM_InspectionAnalyzeBuilder.hxx>
#include <NXOpen/CAM_InspectionMethodBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionAnalyzeBuilder;
    }
    class Builder;
    namespace CAM
    {
        class CAMObject;
    }
    namespace CAM
    {
        class _InspectionAnalyzeBuilderBuilder;
        class InspectionAnalyzeBuilderImpl;
        /** Inspection Analyze options dialog builder  <br> To create a new instance of this class, use @link CAM::InspectionOperationCollection::CreateInspectionAnalyzeBuilder  CAM::InspectionOperationCollection::CreateInspectionAnalyzeBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionAnalyzeBuilder : public Builder
        {
            /** Inspection Analysis Degrees of Freedom Types */
            public: enum DofTypes
            {
                DofTypesOn/** On  */,
                DofTypesOff/** Off */,
                DofTypesTolerance/** Defined by Tolerance */,
                DofTypesLimits/** Specify Limits */
            };

            private: InspectionAnalyzeBuilderImpl * m_inspectionanalyzebuilder_impl;
            private: friend class  _InspectionAnalyzeBuilderBuilder;
            protected: InspectionAnalyzeBuilder();
            public: ~InspectionAnalyzeBuilder();
            /**Returns  the DOF setting in the X Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Tx
            (
            );
            /**Sets  the DOF setting in the X Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTx
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes tx /** tx */ 
            );
            /**Returns  the translation in X DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TxLower
            (
            );
            /**Sets  the translation in X DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTxLower
            (
                double txLower /** txlower */ 
            );
            /**Returns  the translation in X DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TxUpper
            (
            );
            /**Sets  the translation in X DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTxUpper
            (
                double txUpper /** txupper */ 
            );
            /**Returns  the DOF setting in the Y Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Ty
            (
            );
            /**Sets  the DOF setting in the Y Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTy
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes ty /** ty */ 
            );
            /**Returns  the translation in Y DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TyLower
            (
            );
            /**Sets  the translation in Y DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTyLower
            (
                double tyLower /** tylower */ 
            );
            /**Returns  the translation in Y DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TyUpper
            (
            );
            /**Sets  the translation in Y DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTyUpper
            (
                double tyUpper /** tyupper */ 
            );
            /**Returns  the DOF setting in the Z Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Tz
            (
            );
            /**Sets  the DOF setting in the Z Translation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTz
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes tz /** tz */ 
            );
            /**Returns  the translation in Z DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TzLower
            (
            );
            /**Sets  the translation in Z DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTzLower
            (
                double tzLower /** tzlower */ 
            );
            /**Returns  the translation in Z DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double TzUpper
            (
            );
            /**Sets  the translation in Z DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetTzUpper
            (
                double tzUpper /** tzupper */ 
            );
            /**Returns  the DOF setting in the X Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Rx
            (
            );
            /**Sets  the DOF setting in the X Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRx
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes rx /** rx */ 
            );
            /**Returns  the rotation in X DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RxLower
            (
            );
            /**Sets  the rotation in X DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRxLower
            (
                double rxLower /** rxlower */ 
            );
            /**Returns  the rotation in X DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RxUpper
            (
            );
            /**Sets  the rotation in X DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRxUpper
            (
                double rxUpper /** rxupper */ 
            );
            /**Returns  the DOF setting in the Y Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Ry
            (
            );
            /**Sets  the DOF setting in the Y Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRy
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes ry /** ry */ 
            );
            /**Returns  the rotation in Y DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RyLower
            (
            );
            /**Sets  the rotation in Y DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRyLower
            (
                double ryLower /** rylower */ 
            );
            /**Returns  the rotation in Y DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RyUpper
            (
            );
            /**Sets  the rotation in Y DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRyUpper
            (
                double ryUpper /** ryupper */ 
            );
            /**Returns  the DOF setting in the Z Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes Rz
            (
            );
            /**Sets  the DOF setting in the Z Rotation direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRz
            (
                NXOpen::CAM::InspectionAnalyzeBuilder::DofTypes rz /** rz */ 
            );
            /**Returns  the rotation in Z DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RzLower
            (
            );
            /**Sets  the rotation in Z DOF lower limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRzLower
            (
                double rzLower /** rzlower */ 
            );
            /**Returns  the rotation in Z DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double RzUpper
            (
            );
            /**Sets  the rotation in Z DOF upper limit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetRzUpper
            (
                double rzUpper /** rzupper */ 
            );
            /** Reset to use Tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void UseDefault
            (
            );
            /**Returns  the tolerance defining the DOF limits 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ToleranceName
            (
            );
            /**Sets  the tolerance defining the DOF limits 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetToleranceName
            (
                const NXString & toleranceName /** tolerancename */ 
            );
            /**Sets  the tolerance defining the DOF limits 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            void SetToleranceName
            (
                const char * toleranceName /** tolerancename */ 
            );
            /**Returns  the analysis datum plane fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::DatumPlaneFittingTypes DatumPlaneFitting
            (
            );
            /**Sets  the analysis datum plane fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDatumPlaneFitting
            (
                NXOpen::CAM::InspectionMethodBuilder::DatumPlaneFittingTypes datumPlaneFitting /** datumplanefitting */ 
            );
            /**Returns  the analysis limits of size fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::LimitsOfSizeTypes LimitsOfSize
            (
            );
            /**Sets  the analysis limits of size fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetLimitsOfSize
            (
                NXOpen::CAM::InspectionMethodBuilder::LimitsOfSizeTypes limitsOfSize /** limitsofsize */ 
            );
            /**Returns  the analysis axis extrapolation type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::AxisExtrapolationTypes AxisExtrapolation
            (
            );
            /**Sets  the analysis axis extrapolation type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetAxisExtrapolation
            (
                NXOpen::CAM::InspectionMethodBuilder::AxisExtrapolationTypes axisExtrapolation /** axisextrapolation */ 
            );
            /**Returns  the analysis cylinder/circle fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::CylinderFittingTypes CylinderFitting
            (
            );
            /**Sets  the analysis cylinder/circle fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetCylinderFitting
            (
                NXOpen::CAM::InspectionMethodBuilder::CylinderFittingTypes cylinderFitting /** cylinderfitting */ 
            );
            /**Returns  the analysis surface profile fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::SurfaceProfileTypes SurfaceProfile
            (
            );
            /**Sets  the analysis surface profile fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetSurfaceProfile
            (
                NXOpen::CAM::InspectionMethodBuilder::SurfaceProfileTypes surfaceProfile /** surfaceprofile */ 
            );
            /**Returns  the analysis profile disposition fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::ProfileDispositionTypes ProfileDisposition
            (
            );
            /**Sets  the analysis profile disposition fitting type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetProfileDisposition
            (
                NXOpen::CAM::InspectionMethodBuilder::ProfileDispositionTypes profileDisposition /** profiledisposition */ 
            );
            /** Run Analysis for Selected Operations 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void AnalyzeSelected
            (
                const std::vector<NXOpen::CAM::CAMObject *> & objects /** array of operations */
            );
            /** Run Analysis for All Operations 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void AnalyzeAll
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
