#ifndef NXOpen_CAE_RESPONSESIMULATION_TRANSLATIONALNODALFUNCTIONEXCITATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_TRANSLATIONALNODALFUNCTIONEXCITATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_TranslationalNodalFunctionExcitationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_NodalFunctionExcitationBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class TranslationalNodalFunctionExcitationBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FunctionComponentData;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class NodalFunctionExcitationBuilder;
        }
    }
    class Direction;
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _TranslationalNodalFunctionExcitationBuilderBuilder;
            class TranslationalNodalFunctionExcitationBuilderImpl;
            /** Represents the manager to @link CAE::ResponseSimulation::TranslationalNodalFunctionExcitation CAE::ResponseSimulation::TranslationalNodalFunctionExcitation@endlink . 
                The objects of @link CAE::ResponseSimulation::TranslationalNodalFunctionExcitation CAE::ResponseSimulation::TranslationalNodalFunctionExcitation@endlink  
                can be created or edited on through this class  <br> To create a new instance of this class, use @link CAE::ResponseSimulation::ExcitationCollection::CreateTranslationalNodalFunctionExcitationBuilder  CAE::ResponseSimulation::ExcitationCollection::CreateTranslationalNodalFunctionExcitationBuilder @endlink  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TranslationalNodalFunctionExcitationBuilder : public CAE::ResponseSimulation::NodalFunctionExcitationBuilder
            {
                /**Represents the rotation axis type. */
                public: enum RotationAxisType
                {
                    RotationAxisTypeX/** x */ ,
                    RotationAxisTypeY/** y */ ,
                    RotationAxisTypeZ/** z */ 
                };

                private: TranslationalNodalFunctionExcitationBuilderImpl * m_translationalnodalfunctionexcitationbuilder_impl;
                private: friend class  _TranslationalNodalFunctionExcitationBuilderBuilder;
                protected: TranslationalNodalFunctionExcitationBuilder();
                public: ~TranslationalNodalFunctionExcitationBuilder();
                /**Returns  the excitation function definition method 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool EnableUserDefinedDirection
                (
                );
                /**Sets  the excitation function definition method 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetEnableUserDefinedDirection
                (
                    bool enableUserDefinedDirection /** enable user defined direction */ 
                );
                /**Returns  the excitation function definition method 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool EnableUserDefinedRotation
                (
                );
                /**Sets  the excitation function definition method 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetEnableUserDefinedRotation
                (
                    bool enableUserDefinedRotation /** enable user defined rotation */ 
                );
                /**Returns  the magnitude direction 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::Direction * UserDefinedDirection
                (
                );
                /**Sets  the magnitude direction 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetUserDefinedDirection
                (
                    NXOpen::Direction * magnitudeDirection /** magnitude direction */ 
                );
                /**Returns  the magnitude function 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FunctionComponentData * UserDefinedFunction
                (
                );
                /**Returns  the function component of X direction  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FunctionComponentData * FunctionComponentX
                (
                );
                /**Returns  the function component of Y direction 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FunctionComponentData * FunctionComponentY
                (
                );
                /**Returns  the function component of Z direction 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FunctionComponentData * FunctionComponentZ
                (
                );
                /**Returns  the rotation axis 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::TranslationalNodalFunctionExcitationBuilder::RotationAxisType RotationAxis
                (
                );
                /**Sets  the rotation axis 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetRotationAxis
                (
                    NXOpen::CAE::ResponseSimulation::TranslationalNodalFunctionExcitationBuilder::RotationAxisType rotationAxis /** rotation axis */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
