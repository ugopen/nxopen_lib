#ifndef NXOpen_DRAWINGS_INHERITPMIVIEWSTYLE_HXX_INCLUDED
#define NXOpen_DRAWINGS_INHERITPMIVIEWSTYLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_InheritPmiViewStyle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class InheritPmiViewStyle;
    }
    namespace Drawings
    {
        class ViewStyle;
    }
    namespace Drawings
    {
        class InheritPmiViewStyleImpl;
        /** Represents set of InheritPmiViewStyle applicable to drafting views.  <br> To obtain an instance of this class use @link Drawings::ViewStyle::InheritPmi Drawings::ViewStyle::InheritPmi@endlink   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  InheritPmiViewStyle
        {
            private: InheritPmiViewStyleImpl * m_inheritpmiviewstyle_impl;
            private: NXOpen::Drawings::ViewStyle* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit InheritPmiViewStyle(NXOpen::Drawings::ViewStyle *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~InheritPmiViewStyle();
            /**Returns  the Inherit pmi mode. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::PmiOption InheritPmiMode
            (
            );
            /**Sets  the Inherit pmi mode. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInheritPmiMode
            (
                NXOpen::Preferences::PmiOption pmiOption /** pmi option */ 
            );
            /**Returns  the status of pmi inherited to drawing. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool InheritPmiToDrawing
            (
            );
            /**Sets  the status of pmi inherited to drawing. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInheritPmiToDrawing
            (
                bool pmiToDrawing /** pmi to drawing */ 
            );
            /**Returns  the Inherit pmi type mask. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int InheritPmiTypeMask
            (
            );
            /**Sets  the Inherit pmi type mask. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInheritPmiTypeMask
            (
                int pmiTypeMask /** pmi type mask */ 
            );
            /** Inherit GD and T option,that let you inherit GD and T display 
                        instances onto the drawing plane or into a drawing member view.
                    
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInheritGdt
            (
                NXOpen::Preferences::GdtOption gdtOption /** Inherit GDT option */
            );
            /** Controls whether the cut faces of an inherited PMI Lightweight
                        section view are cross-hatched or not.
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCrosshatchPmiLwsv
            (
                bool crosshatch /** crosshatch */ 
            );
            /**Returns  the cross-hatch setting for the current inherited PMI Lightweight Section View 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool CrosshatchPmiLwsv
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
