#ifndef NXOpen_ROUTING_BENDCORNER_HXX_INCLUDED
#define NXOpen_ROUTING_BENDCORNER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_BendCorner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Corner.hxx>
#include <NXOpen/Routing_CornerTypeBuilder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class BendCorner;
    }
    class Curve;
    namespace Routing
    {
        class Corner;
    }
    namespace Routing
    {
        class ISegment;
    }
    namespace Routing
    {
        class _BendCornerBuilder;
        class BendCornerImpl;
        /** 
                Computes a fillet curve between two linear segments to form a smooth
                bend transition from one segment to another.
              <br> To create a new instance of this class, use @link Routing::BendCornerCollection::CreateCorner  Routing::BendCornerCollection::CreateCorner @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  BendCorner : public Routing::Corner
        {
            private: BendCornerImpl * m_bendcorner_impl;
            private: friend class  _BendCornerBuilder;
            protected: BendCorner();
            public: ~BendCorner();
            /** The bend segment following the fillet curve created for the bend.  @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::ISegment * GetSegment
            (
            );
            /**Returns the bend method 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::CornerTypeBuilder::BendMethods BendMethod
            (
            );
            /**Sets the bend method 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBendMethod
            (
                NXOpen::Routing::CornerTypeBuilder::BendMethods bendMethod /** bend method */ 
            );
            /**Returns  whether or not to compute the bend radius as a ratio of the stock diameter. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Routing::BendCorner::BendMethod Routing::BendCorner::BendMethod@endlink  instead. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Use Routing::BendCorner::BendMethod instead.") bool UseBendRatio
            (
            );
            /**Sets  whether or not to compute the bend radius as a ratio of the stock diameter. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Routing::BendCorner::SetBendMethod Routing::BendCorner::SetBendMethod@endlink  instead. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Use Routing::BendCorner::SetBendMethod instead.") void SetUseBendRatio
            (
                bool useBendRatio /** the use bend ratio. */
            );
            /**Returns  the bend ratio to apply when computing the bend radius 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double BendRatio
            (
            );
            /**Sets  the bend ratio to apply when computing the bend radius 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBendRatio
            (
                double bendRatio /** the bend ratio. */
            );
            /**Returns  the bend radius of the corner. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double BendRadius
            (
            );
            /**Sets  the bend radius of the corner. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBendRadius
            (
                double bendRadius /** the the bend radius. */
            );
            /** Returns the straight line segments attached to the fillet curve
                       of this bend corner.   @return  the side segments. There will be from 0 to 2 
                                                               total side segments. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Curve *> FindSideSegments
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
