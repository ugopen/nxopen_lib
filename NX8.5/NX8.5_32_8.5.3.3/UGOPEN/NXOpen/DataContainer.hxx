#ifndef NXOpen_DATACONTAINER_HXX_INCLUDED
#define NXOpen_DATACONTAINER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DataContainer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PropertyContainer.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DataContainer;
    class PropertyContainer;
    class TaggedObject;
    class DataContainerImpl;
    /**Represents a list of data. The data is associated with the unique string using which data can
            be accessed and modified. In addition, new data can be added to the existing container or list.
     <br>  Created in NX7.5.0.  <br>  
    */
    class NXOPENCPPEXPORT  DataContainer : public PropertyContainer
    {
        private: DataContainerImpl * m_datacontainer_impl;
        /// \cond NX_NO_DOC 
        public: explicit DataContainer(void *ptr);
        /// \endcond 
        /**Adds the integer value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddInteger
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int value /**Value to add for given property name*/
        );
        /**Adds the integer value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddInteger
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int value /**Value to add for given property name*/
        );
        /**Adds the logical value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddLogical
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool value /**Value to add for given property name.*/
        );
        /**Adds the logical value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddLogical
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool value /**Value to add for given property name.*/
        );
        /**Adds the double value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddDouble
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            double value /**Value to add for given property name.*/
        );
        /**Adds the double value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddDouble
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            double value /**Value to add for given property name.*/
        );
        /**Adds the string value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddString
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & value /**Value to add for given property name.*/
        );
        /**Adds the string value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddString
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * value /**Value to add for given property name.*/
        );
        /**Adds the enum members in the container. The enum is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddEnum
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            std::vector<NXString> & stringArray /**Value to add for given property name.*/
        );
        /**Adds the enum members in the container. The enum is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddEnum
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            std::vector<NXString> & stringArray /**Value to add for given property name.*/
        );
        /**Adds the strings value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddStrings
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            std::vector<NXString> & stringArray /**Value to add for given property name.*/
        );
        /**Adds the strings value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddStrings
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            std::vector<NXString> & stringArray /**Value to add for given property name.*/
        );
        /**Adds the point value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddPoint
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXOpen::Point3d & pointSc /**Value to add for given property name.*/
        );
        /**Adds the point value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddPoint
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXOpen::Point3d & pointSc /**Value to add for given property name.*/
        );
        /**Adds the vector value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddVector
        (
            const NXString & propertyName /**Name of the property  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXOpen::Vector3d & vector /**Value to add for given property name.*/
        );
        /**Adds the vector value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddVector
        (
            const char * propertyName /**Name of the property  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXOpen::Vector3d & vector /**Value to add for given property name.*/
        );
        /**Adds the bits value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddBits
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int bitsSc /**Value to add for given property name.*/
        );
        /**Adds the bits value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddBits
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int bitsSc /**Value to add for given property name.*/
        );
        /**Adds the tagged object in the container. The added object is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddTaggedObject
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::TaggedObject * taggedSc /**Value to add for given property name.*/
        );
        /**Adds the tagged object in the container. The added object is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddTaggedObject
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            NXOpen::TaggedObject * taggedSc /**Value to add for given property name.*/
        );
        /**Adds the integer vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddIntegerVector
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<int> & intVector /**Value to add for given property name.*/
        );
        /**Adds the integer vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddIntegerVector
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<int> & intVector /**Value to add for given property name.*/
        );
        /**Adds the double vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.3.  <br>  
         <br> License requirements : None */
        public: void AddDoubleVector
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<double> & doubleVector /**Value to add for given property name.*/
        );
        /**Adds the double vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.3.  <br>  
         <br> License requirements : None */
        void AddDoubleVector
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<double> & doubleVector /**Value to add for given property name.*/
        );
        /**Adds the tagged object vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddTaggedObjectVector
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<NXOpen::TaggedObject *> & tagVector /**Value to add for given property name.*/
        );
        /**Adds the tagged object vector in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddTaggedObjectVector
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const std::vector<NXOpen::TaggedObject *> & tagVector /**Value to add for given property name.*/
        );
        /**Adds the integer matrix in the container. The value is associated with the unique property name. 
                  This is a two dimensional array encoded into a single array.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddIntegerMatrix
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int nRows /**Number of Rows in the 2D matrix*/,
            int nColumns /**Number of Columns in the 2D matrix*/,
            const std::vector<int> & matrixValue /**Value to add for given property name.*/
        );
        /**Adds the integer matrix in the container. The value is associated with the unique property name. 
                  This is a two dimensional array encoded into a single array.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddIntegerMatrix
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int nRows /**Number of Rows in the 2D matrix*/,
            int nColumns /**Number of Columns in the 2D matrix*/,
            const std::vector<int> & matrixValue /**Value to add for given property name.*/
        );
        /**Adds the double matrix in the container. The value is associated with the unique property name. 
                  This is a two dimensional array encoded into a single array.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddDoubleMatrix
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int nRows /**Number of Rows in the 2D matrix*/,
            int nColumns /**Number of Columns in the 2D matrix*/,
            const std::vector<double> & matrixValue /**Value to add for given property name.*/
        );
        /**Adds the double matrix in the container. The value is associated with the unique property name. 
                  This is a two dimensional array encoded into a single array.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddDoubleMatrix
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int nRows /**Number of Rows in the 2D matrix*/,
            int nColumns /**Number of Columns in the 2D matrix*/,
            const std::vector<double> & matrixValue /**Value to add for given property name.*/
        );
        /**Adds the value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void AddFile
        (
            const NXString & propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & value /**Value to add for given property name.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Adds the value in the container. The value is associated with the unique property name.
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void AddFile
        (
            const char * propertyName /**Name of the property.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const char * value /**Value to add for given property name.  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
