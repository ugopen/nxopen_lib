#ifndef NXOpen_MOTION_CURVECONTACTRECURDYN_HXX_INCLUDED
#define NXOpen_MOTION_CURVECONTACTRECURDYN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_CurveContactRecurdyn.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_CurveContactRecurdyn.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class CurveContactRecurdyn;
    }
    class Expression;
    class NXObject;
    namespace Motion
    {
        class _CurveContactRecurdynBuilder;
        class CurveContactRecurdynImpl;
        /** Represents a @link Motion::CurveContactRecurdyn Motion::CurveContactRecurdyn@endlink  
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  CurveContactRecurdyn : public NXObject
        {
            private: CurveContactRecurdynImpl * m_curvecontactrecurdyn_impl;
            private: friend class  _CurveContactRecurdynBuilder;
            protected: CurveContactRecurdyn();
            public: ~CurveContactRecurdyn();
            /**Returns  the stiffness 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::StiffnessExpression Motion::CurveContactRecurdyn::StiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::StiffnessExpression to query or edit it.") double Stiffness
            (
            );
            /**Sets  the stiffness 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::StiffnessExpression Motion::CurveContactRecurdyn::StiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::StiffnessExpression to query or edit it.") void SetStiffness
            (
                double stiffness /** stiffness */ 
            );
            /**Returns  the force exponent 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::ForceExponentExpression Motion::CurveContactRecurdyn::ForceExponentExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::ForceExponentExpression to query or edit it.") double ForceExponent
            (
            );
            /**Sets  the force exponent 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::ForceExponentExpression Motion::CurveContactRecurdyn::ForceExponentExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::ForceExponentExpression to query or edit it.") void SetForceExponent
            (
                double forceExponent /** force exponent */ 
            );
            /**Returns  the material damping 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::MaterialDampingExpression Motion::CurveContactRecurdyn::MaterialDampingExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::MaterialDampingExpression to query or edit it.") double MaterialDamping
            (
            );
            /**Sets  the material damping 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::MaterialDampingExpression Motion::CurveContactRecurdyn::MaterialDampingExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::MaterialDampingExpression to query or edit it.") void SetMaterialDamping
            (
                double materialDamping /** material damping */ 
            );
            /**Returns  the penetration depth 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::PenetrationDepthExpression Motion::CurveContactRecurdyn::PenetrationDepthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::PenetrationDepthExpression to query or edit it.") double PenetrationDepth
            (
            );
            /**Sets  the penetration depth 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::PenetrationDepthExpression Motion::CurveContactRecurdyn::PenetrationDepthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::PenetrationDepthExpression to query or edit it.") void SetPenetrationDepth
            (
                double penetrationDepth /** penetration depth */ 
            );
            /**Returns  the Buffer Radius Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::BufferRadiusFactorExpression Motion::CurveContactRecurdyn::BufferRadiusFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::BufferRadiusFactorExpression to query or edit it.") double BufferRadiusFactor
            (
            );
            /**Sets  the Buffer Radius Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::BufferRadiusFactorExpression Motion::CurveContactRecurdyn::BufferRadiusFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::BufferRadiusFactorExpression to query or edit it.") void SetBufferRadiusFactor
            (
                double bufferRadiusFactor /** buffer radius factor */ 
            );
            /**Returns  the Maximun Step Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression to query or edit it.") double MaximumStepSizeFactor
            (
            );
            /**Sets  the Maximun Step Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::MaximumStepSizeFactorExpression to query or edit it.") void SetMaximumStepSizeFactor
            (
                double maximumStepSizeFactor /** maximum step size factor */ 
            );
            /**Returns  the Curve Tolerance Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::CurveToleranceFactorExpression Motion::CurveContactRecurdyn::CurveToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::CurveToleranceFactorExpression to query or edit it.") double CurveToleranceFactor
            (
            );
            /**Sets  the Curve Tolerance Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::CurveToleranceFactorExpression Motion::CurveContactRecurdyn::CurveToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::CurveToleranceFactorExpression to query or edit it.") void SetCurveToleranceFactor
            (
                double curveToleranceFactor /** curve tolerance factor */ 
            );
            /**Returns  the first curve maximum penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression to query or edit it.") double FirstCurveMaximumPenetration
            (
            );
            /**Sets  the first curve maximum penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::FirstCurveMaximumPenetrationExpression to query or edit it.") void SetFirstCurveMaximumPenetration
            (
                double firstCurveMaximumPenetration /** first curve maximum penetration */ 
            );
            /**Returns  the second curve maximum penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression to query or edit it.") double SecondCurveMaximumPenetration
            (
            );
            /**Sets  the second curve maximum penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::SecondCurveMaximumPenetrationExpression to query or edit it.") void SetSecondCurveMaximumPenetration
            (
                double secondCurveMaximumPenetration /** second curve maximum penetration */ 
            );
            /**Returns  the static coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::StaticCoefficientExpression Motion::CurveContactRecurdyn::StaticCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::StaticCoefficientExpression to query or edit it.") double StaticCoefficient
            (
            );
            /**Sets  the static coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::StaticCoefficientExpression Motion::CurveContactRecurdyn::StaticCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::StaticCoefficientExpression to query or edit it.") void SetStaticCoefficient
            (
                double staticCoefficient /** static coefficient */ 
            );
            /**Returns  the slip velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::SlipVelocityExpression Motion::CurveContactRecurdyn::SlipVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::SlipVelocityExpression to query or edit it.") double SlipVelocity
            (
            );
            /**Sets  the slip velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::SlipVelocityExpression Motion::CurveContactRecurdyn::SlipVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::SlipVelocityExpression to query or edit it.") void SetSlipVelocity
            (
                double slipVelocity /** slip velocity */ 
            );
            /**Returns  the dynamic coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::DynamicCoefficientExpression Motion::CurveContactRecurdyn::DynamicCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::DynamicCoefficientExpression to query or edit it.") double DynamicCoefficient
            (
            );
            /**Sets  the dynamic coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::DynamicCoefficientExpression Motion::CurveContactRecurdyn::DynamicCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::DynamicCoefficientExpression to query or edit it.") void SetDynamicCoefficient
            (
                double dynamicCoefficient /** dynamic coefficient */ 
            );
            /**Returns  the transition velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::TransitionVelocityExpression Motion::CurveContactRecurdyn::TransitionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::TransitionVelocityExpression to query or edit it.") double TransitionVelocity
            (
            );
            /**Sets  the transition velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::CurveContactRecurdyn::TransitionVelocityExpression Motion::CurveContactRecurdyn::TransitionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::CurveContactRecurdyn::TransitionVelocityExpression to query or edit it.") void SetTransitionVelocity
            (
                double transitionVelocity /** transition velocity */ 
            );
            /**Returns  the stiffness expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StiffnessExpression
            (
            );
            /**Returns  the force exponent expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForceExponentExpression
            (
            );
            /**Returns  the material damping expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaterialDampingExpression
            (
            );
            /**Returns  the penetration depth expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PenetrationDepthExpression
            (
            );
            /**Returns  the Buffer Radius Factor expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BufferRadiusFactorExpression
            (
            );
            /**Returns  the Maximun Step Size Factor expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaximumStepSizeFactorExpression
            (
            );
            /**Returns  the Curve Tolerance Factor expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * CurveToleranceFactorExpression
            (
            );
            /**Returns  the first curve maximum penetration expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstCurveMaximumPenetrationExpression
            (
            );
            /**Returns  the second curve maximum penetration expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondCurveMaximumPenetrationExpression
            (
            );
            /**Returns  the static coefficient expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StaticCoefficientExpression
            (
            );
            /**Returns  the slip velocity expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlipVelocityExpression
            (
            );
            /**Returns  the dynamic coefficient expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DynamicCoefficientExpression
            (
            );
            /**Returns  the transition velocity expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TransitionVelocityExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
