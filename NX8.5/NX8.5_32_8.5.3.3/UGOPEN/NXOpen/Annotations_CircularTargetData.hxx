#ifndef NXOpen_ANNOTATIONS_CIRCULARTARGETDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CIRCULARTARGETDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CircularTargetData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_DatumTargetData.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class CircularTargetData;
    }
    namespace Annotations
    {
        class DatumTargetData;
    }
    class Expression;
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class CircularTargetDataImpl;
        /** Represents circular datum target data 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  CircularTargetData : public Annotations::DatumTargetData
        {
            private: CircularTargetDataImpl * m_circulartargetdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit CircularTargetData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~CircularTargetData();
            /** Returns the diameter  @return  Diameter data  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Value GetDiameter
            (
            );
            /** Sets the diameter 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDiameter
            (
                const NXOpen::Annotations::Value & diameter /** New diameter data */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
