#ifndef NXOpen_ANNOTATIONS_TITLEBLOCKPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_TITLEBLOCKPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_TitleBlockPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class TitleBlockPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class TitleBlockPreferencesImpl;
        /** Represents title_block preferences.
             <br>  When setting the property, changes are not applied to object until
            the set method is called  <br>  
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  TitleBlockPreferences : public TransientObject
        {
            private: TitleBlockPreferencesImpl * m_titleblockpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit TitleBlockPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~TitleBlockPreferences();
            /**Returns  the alignment position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::AlignmentPosition AlignmentPosition
            (
            );
            /**Sets  the alignment position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAlignmentPosition
            (
                NXOpen::Annotations::AlignmentPosition alignPosition /** the alignment position */
            );
            /**Returns  the automatic update preference 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticUpdate
            (
            );
            /**Sets  the automatic update preference 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticUpdate
            (
                bool autoUpdate /** automatic update */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
