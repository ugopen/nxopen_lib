#ifndef NXOpen_CAM_CHIPCONTROL_HXX_INCLUDED
#define NXOpen_CAM_CHIPCONTROL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ChipControl.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ChipControl.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class ChipControl;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class TurnRoughVariableIncrementBuilder;
    }
    namespace CAM
    {
        class _ChipControlBuilder;
        class ChipControlImpl;
        /**
            Represents a @link CAM::ChipControl CAM::ChipControl@endlink 
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  ChipControl : public TaggedObject
        {
            /** the control mode options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum Types
            {
                TypesNone/** Chip control mode: None */,
                TypesConstBreak/** Chip control mode: Constant Break */,
                TypesVarBreak/** Chip control mode: Variable Break */,
                TypesConstClear/** Chip control mode: Constant Clear */,
                TypesVarClear/** Chip control mode: Variable Clear */
            };

            private: ChipControlImpl * m_chipcontrol_impl;
            private: friend class  _ChipControlBuilder;
            protected: ChipControl();
            public: ~ChipControl();
            /**Returns  the chip control type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ChipControl::Types Type
            (
            );
            /**Sets  the chip control type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::ChipControl::Types chipControlMode /** the chip control type */
            );
            /**Returns  the Constant Increment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ConstantIncrement
            (
            );
            /**Returns  the Variable Increment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughVariableIncrementBuilder * VariableIncrement
            (
            );
            /**Returns  the Departure Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * DepartureDistance
            (
            );
            /**Returns  the First Plunge Only 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool FirstPlungeOnly
            (
            );
            /**Sets  the First Plunge Only 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstPlungeOnly
            (
                bool firstPlungeOnly /** the First Plunge Only */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
