#ifndef NXOpen_ANNOTATIONS_APPENDEDTEXT_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_APPENDEDTEXT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_AppendedText.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class AppendedText;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class AppendedTextImpl;
        /** Represents Appended text 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  AppendedText : public TransientObject
        {
            private: AppendedTextImpl * m_appendedtext_impl;
            /// \cond NX_NO_DOC 
            public: explicit AppendedText(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~AppendedText();
            /** Returns the appended text before the annotation  @return  List of lines 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetBeforeText
            (
            );
            /** Sets the appended text before the annotation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBeforeText
            (
                std::vector<NXString> & lines /** List of new lines */
            );
            /** Returns the appended text after the annotation  @return  List of lines 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetAfterText
            (
            );
            /** Sets the appended text after the annotation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAfterText
            (
                std::vector<NXString> & lines /** List of new lines */
            );
            /** Returns the appended text above the annotation  @return  List of lines 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetAboveText
            (
            );
            /** Sets the appended text above the annotation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAboveText
            (
                std::vector<NXString> & lines /** List of new lines */
            );
            /** Returns the appended text below the annotaton  @return  List of lines 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetBelowText
            (
            );
            /** Sets the appended text below the annotation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBelowText
            (
                std::vector<NXString> & lines /** List of new lines */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
