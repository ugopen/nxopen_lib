#ifndef NXOpen_CAM_GROOVETOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_GROOVETOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_GrooveToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TurningToolBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class GrooveToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class TurningToolBuilder;
    }
    namespace CAM
    {
        class _GrooveToolBuilderBuilder;
        class GrooveToolBuilderImpl;
        /** Represents a Groove tool builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateGrooveToolBuilder  CAM::NCGroupCollection::CreateGrooveToolBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  GrooveToolBuilder : public CAM::TurningToolBuilder
        {
            /** The available insert shapes for groove tools */
            public: enum InsertShapes
            {
                InsertShapesStd/** Standard groove tool */,
                InsertShapesFnr/** Full nose radius groove tool */,
                InsertShapesRtj/** Ring type joint groove tool */,
                InsertShapesUser/** user defined groove tool */
            };

            /** The available holder style options for groove tools */
            public: enum HolderStyles
            {
                HolderStylesDeg0/** 0 degrees */,
                HolderStylesDeg45/** 45 degrees */,
                HolderStylesDeg90/** 90 degrees */,
                HolderStylesUserDefined/** user defined */
            };

            /** The available holder hand options for groove tools */
            public: enum HolderHands
            {
                HolderHandsLeft0/** Left hand, 0 degrees */,
                HolderHandsLeft90/** Left hand, 90 degrees */,
                HolderHandsRight0/** Right hand, 0 degrees */,
                HolderHandsRight90/** Right hand, 90 degrees */
            };

            /** The available holder groove hand options for groove tools */
            public: enum HolderGrooveHands
            {
                HolderGrooveHandsLeft/** Left hand */,
                HolderGrooveHandsRight/** Right hand */
            };

            private: GrooveToolBuilderImpl * m_groovetoolbuilder_impl;
            private: friend class  _GrooveToolBuilderBuilder;
            protected: GrooveToolBuilder();
            public: ~GrooveToolBuilder();
            /**Returns  the insert shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::GrooveToolBuilder::InsertShapes InsertShape
            (
            );
            /**Sets  the insert shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInsertShape
            (
                NXOpen::CAM::GrooveToolBuilder::InsertShapes insertShape /** insertshape */ 
            );
            /**Returns  the radius builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * RadiusBuilder
            (
            );
            /**Returns  the left radius builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeftRadiusBuilder
            (
            );
            /**Returns  the right radius builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * RightRadiusBuilder
            (
            );
            /**Returns  the side angle builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * SideAngleBuilder
            (
            );
            /**Returns  the tip angle builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TipAngleBuilder
            (
            );
            /**Returns  the holder style 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::GrooveToolBuilder::HolderStyles HolderStyle
            (
            );
            /**Sets  the holder style 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHolderStyle
            (
                NXOpen::CAM::GrooveToolBuilder::HolderStyles holderStyle /** holderstyle */ 
            );
            /**Returns  the holder hand 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::GrooveToolBuilder::HolderHands HolderHand
            (
            );
            /**Sets  the holder hand 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHolderHand
            (
                NXOpen::CAM::GrooveToolBuilder::HolderHands holderHand /** holderhand */ 
            );
            /**Returns  the holder groove hand 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::GrooveToolBuilder::HolderGrooveHands HolderGrooveHand
            (
            );
            /**Sets  the holder groove hand 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetHolderGrooveHand
            (
                NXOpen::CAM::GrooveToolBuilder::HolderGrooveHands holderHand /** holderhand */ 
            );
            /**Returns  the holder insert extension builder (inheritable double) for groove tools 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * HolderInsertExtensionBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
