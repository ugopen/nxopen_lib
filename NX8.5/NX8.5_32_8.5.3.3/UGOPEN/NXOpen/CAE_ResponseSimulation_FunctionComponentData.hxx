#ifndef NXOpen_CAE_RESPONSESIMULATION_FUNCTIONCOMPONENTDATA_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_FUNCTIONCOMPONENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_FunctionComponentData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_Excitation.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FunctionComponentData;
        }
    }
    namespace CAE
    {
        class Function;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _FunctionComponentDataBuilder;
            class FunctionComponentDataImpl;
            /** Represents a function component setting of 
                @link CAE::ResponseSimulation::NodalFunctionExcitation CAE::ResponseSimulation::NodalFunctionExcitation@endlink  on one direction 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  FunctionComponentData : public TaggedObject
            {
                private: FunctionComponentDataImpl * m_functioncomponentdata_impl;
                private: friend class  _FunctionComponentDataBuilder;
                protected: FunctionComponentData();
                public: ~FunctionComponentData();
                /** Returns the component type  @return  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::Excitation::Component GetComponentType
                (
                );
                /**Returns  the option to enable the function component to be used while evaluating 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool Enable
                (
                );
                /**Sets  the option to enable the function component to be used while evaluating 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetEnable
                (
                    bool enableOption /** enable option */ 
                );
                /**Returns  the function to be applied 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::Function * Function
                (
                );
                /**Sets  the function to be applied 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetFunction
                (
                    NXOpen::CAE::Function * excitationFunction /** excitation function */ 
                );
                /**Returns  the scalar factor 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: double ScalarFactor
                (
                );
                /**Sets  the scalar factor 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetScalarFactor
                (
                    double scalarFactor /** scalar factor */ 
                );
                /**Returns  the phase angle. Only available when the onwer event is 
                        @link CAE::ResponseSimulation::RSEvent::TypeTransient CAE::ResponseSimulation::RSEvent::TypeTransient@endlink  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: double PhaseAngle
                (
                );
                /**Sets  the phase angle. Only available when the onwer event is 
                        @link CAE::ResponseSimulation::RSEvent::TypeTransient CAE::ResponseSimulation::RSEvent::TypeTransient@endlink  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetPhaseAngle
                (
                    double phaseAngle /** phase angle */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
