#ifndef NXOpen_ROUTING_ELECTRICAL_CABLESTOCKDEFINITION_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_CABLESTOCKDEFINITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_CableStockDefinition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Electrical_ElectricalStockDefinition.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class CableStockDefinition;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class ElectricalStockDefinition;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _CableStockDefinitionBuilder;
            class CableStockDefinitionImpl;
            /** Describes a cable's stock.
                         <br> 
                        Contains characteristics of the material that makes up the cable.
                         <br> 
                        See the NX Routing help for detailed information on the Connection data model.
                     <br> Creator not available in KF.  <br> 
             <br>  Created in NX4.0.2.  <br>  
            */
            class NXOPENCPP_ROUTINGEXPORT  CableStockDefinition : public Routing::Electrical::ElectricalStockDefinition
            {
                private: CableStockDefinitionImpl * m_cablestockdefinition_impl;
                private: friend class  _CableStockDefinitionBuilder;
                protected: CableStockDefinition();
                public: ~CableStockDefinition();
                /**Returns the separation between wires in a cable. 
                 <br>  Created in NX4.0.2.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: double WireSpacing
                (
                );
                /**Sets the separation between wires in a cable. 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetWireSpacing
                (
                    double spacingValue /** spacingvalue */ 
                );
                /**Returns the thickness of the cable's covering. 
                 <br>  Created in NX4.0.2.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: double CoverThickness
                (
                );
                /**Sets the thickness of the cable's covering. 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetCoverThickness
                (
                    double thicknessValue /** thicknessvalue */ 
                );
                /**Returns the cable stock's location 
                 <br>  Created in NX4.0.2.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: int CableLocation
                (
                );
                /**Sets the cable stock's location 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetCableLocation
                (
                    int locationValue /** locationvalue */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
