#ifndef NXOpen_CAE_OPTIMIZATION_DAOOPTIMIZATIONDATATYPES_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_DAOOPTIMIZATIONDATATYPES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_DAOOptimizationDataTypes.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            /** Represents the optimization solution solver type */
            enum Solver
            {
                SolverOptimization/** Optimization */,
                SolverGlobalSensitivity/** Global sensitivity */
            };

            /** Represents the category type */
            enum Category
            {
                CategoryOneDimension/** 1D constraints */,
                CategoryTwoDimension/** 2D constraints */,
                CategoryThreeDimension/** 3D constraints */,
                CategoryAll/** Model constraints */
            };

            /** Represents the geometry type */
            enum Geometry
            {
                GeometryBody/** Body */,
                GeometryFace/** Face */,
                GeometryEdge/** Edge */,
                GeometryPoint/** Point */,
                GeometryCurve/** Curve */
            };

            /** Represents the Hooke's location */
            enum Hookes
            {
                HookesTop/** Top */,
                HookesBottom/** Bottom */,
                HookesMiddle/** Middle */,
                HookesMinimum/** Minimum */,
                HookesMaximum/** Maximum */
            };

            /** Represents the specific variable */
            enum Response
            {
                ResponseNone/** none */ ,
                ResponseWeight/** weight */ ,
                ResponseVolume/** volume */ ,
                ResponseFrequency/** frequency */ ,
                ResponseTemperature/** temperature */ ,
                ResponseStressVonMises/** stress von mises */ ,
                ResponseStrainVonMises/** strain von mises */ ,
                ResponseTranslationX/** translation x */ ,
                ResponseTranslationY/** translation y */ ,
                ResponseTranslationZ/** translation z */ ,
                ResponseRotationX/** rotation x */ ,
                ResponseRotationY/** rotation y */ ,
                ResponseRotationZ/** rotation z */ ,
                ResponseStress2DMaximumShear/** stress2dmaximum shear */ ,
                ResponseStress2DMajorPrincipal/** stress2dmajor principal */ ,
                ResponseStress2DMinorPrincipal/** stress2dminor principal */ ,
                ResponseStress2DVonMises/** stress2dvon mises */ ,
                ResponseStress2DMaximumShearBottom/** stress2dmaximum shear bottom */ ,
                ResponseStress2DMajorPrincipalBottom/** stress2dmajor principal bottom */ ,
                ResponseStress2DMinorPrincipalBottom/** stress2dminor principal bottom */ ,
                ResponseStress2DVonMisesBottom/** stress2dvon mises bottom */ ,
                ResponseStrain2DMaximumShear/** strain2dmaximum shear */ ,
                ResponseStrain2DMajorPrincipal/** strain2dmajor principal */ ,
                ResponseStrain2DMinorPrincipal/** strain2dminor principal */ ,
                ResponseStrain2DVonMises/** strain2dvon mises */ ,
                ResponseStrain2DMaximumShearBottom/** strain2dmaximum shear bottom */ ,
                ResponseStrain2DMajorPrincipalBottom/** strain2dmajor principal bottom */ ,
                ResponseStrain2DMinorPrincipalBottom/** strain2dminor principal bottom */ ,
                ResponseStrain2DVonMisesBottom/** strain2dvon mises bottom */ ,
                ResponseStress1DVonMisesStressRecoveryPointC/** stress1dvon mises stress recovery point c */ ,
                ResponseStress1DVonMisesStressRecoveryPointD/** stress1dvon mises stress recovery point d */ ,
                ResponseStress1DVonMisesStressRecoveryPointE/** stress1dvon mises stress recovery point e */ ,
                ResponseStress1DVonMisesStressRecoveryPointF/** stress1dvon mises stress recovery point f */ ,
                ResponseStress1DVonMisesMaximum/** stress1dvon mises maximum */ ,
                ResponseStress1DVonMisesMinimum/** stress1dvon mises minimum */ ,
                ResponseStrain1DVonMisesStressRecoveryPointC/** strain1dvon mises stress recovery point c */ ,
                ResponseStrain1DVonMisesStressRecoveryPointD/** strain1dvon mises stress recovery point d */ ,
                ResponseStrain1DVonMisesStressRecoveryPointE/** strain1dvon mises stress recovery point e */ ,
                ResponseStrain1DVonMisesStressRecoveryPointF/** strain1dvon mises stress recovery point f */ ,
                ResponseStrain1DVonMisesMaximum/** strain1dvon mises maximum */ ,
                ResponseStrain1DVonMisesMinimum/** strain1dvon mises minimum */ ,
                ResponseStress3DFirstPrincipal/** stress3dfirst principal */ ,
                ResponseStress3DSecondPrincipal/** stress3dsecond principal */ ,
                ResponseStress3DThirdPrincipal/** stress3dthird principal */ ,
                ResponseStress3DVonMises/** stress3dvon mises */ ,
                ResponseStrain3DFirstPrincipal/** strain3dfirst principal */ ,
                ResponseStrain3DSecondPrincipal/** strain3dsecond principal */ ,
                ResponseStrain3DThirdPrincipal/** strain3dthird principal */ ,
                ResponseStrain3DVonMises/** strain3dvon mises */ ,
                ResponseResultMeasure/** Response type is a result measure */
            };

            /** Represents the goal type */
            enum Goal
            {
                GoalMinimum/** Minimum value */,
                GoalMaximum/** Maximum value */,
                GoalTarget/** Target value */
            };

            /** Represents the limit type */
            enum Limit
            {
                LimitUpper/** Upper */,
                LimitLower/** Lower */
            };

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
