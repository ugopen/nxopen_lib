#ifndef NXOpen_CAE_MODELUPDATESENSITIVITYVIEWERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELUPDATESENSITIVITYVIEWERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelUpdateSensitivityViewerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ModelUpdateSensitivityViewerBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelUpdateSensitivityViewerBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _ModelUpdateSensitivityViewerBuilderBuilder;
        class ModelUpdateSensitivityViewerBuilderImpl;
        /** Represents @link CAE::ModelUpdateSensitivityViewerBuilder CAE::ModelUpdateSensitivityViewerBuilder@endlink   <br> To create a new instance of this class, use @link CAE::ModelUpdateSolutionCollection::CreateSensitivityViewerBuilder  CAE::ModelUpdateSolutionCollection::CreateSensitivityViewerBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelUpdateSensitivityViewerBuilder : public Builder
        {
            private: ModelUpdateSensitivityViewerBuilderImpl * m_modelupdatesensitivityviewerbuilder_impl;
            private: friend class  _ModelUpdateSensitivityViewerBuilderBuilder;
            protected: ModelUpdateSensitivityViewerBuilder();
            public: ~ModelUpdateSensitivityViewerBuilder();
            /** Gets the target IDs 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void GetTargetIds
            (
                std::vector<int> & targetIds /** SM allocated array containing the targets ID */
            );
            /** Sets the terget IDs 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetTargetIds
            (
                const std::vector<int> & targetIds /** The target IDs */
            );
            /** Gets the design variable labels  @return  SM allocated array containing the design variable labels 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: std::vector<NXString> GetDesignVariableLabels
            (
            );
            /** Sets the design variable labels 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetDesignVariableLabels
            (
                std::vector<NXString> & designVaraibleLabels /** The design variable labels   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets the sensitivity values  @return  SM allocated array containing the sensitivity values 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: std::vector<double> GetSensitivityValues
            (
            );
            /** Sets the sensitivity values 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetSensitivityValues
            (
                const std::vector<double> & sensitivityValues /** The sensitivity values */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
