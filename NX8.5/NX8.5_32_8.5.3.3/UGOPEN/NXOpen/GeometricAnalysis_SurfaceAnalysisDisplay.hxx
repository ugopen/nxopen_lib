#ifndef NXOpen_GEOMETRICANALYSIS_SURFACEANALYSISDISPLAY_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SURFACEANALYSISDISPLAY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SurfaceAnalysisDisplay.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricanalysis_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class SurfaceAnalysisDisplay;
    }
    namespace GeometricAnalysis
    {
        class AnalysisObjectCollection;
    }
    class DisplayableObject;
    namespace GeometricAnalysis
    {
        class SurfaceAnalysisDisplayImpl;
        /** Represents a tool control whether to show a surface's poles and knots  <br> To obtain an instance of this class, refer to @link GeometricAnalysis::AnalysisObjectCollection  GeometricAnalysis::AnalysisObjectCollection @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICANALYSISEXPORT  SurfaceAnalysisDisplay
        {
            /** Show flag types */
            public: enum ShowFlagType
            {
                ShowFlagTypePole/** show pole   */,
                ShowFlagTypeKnot/** show knot   */
            };

            private: SurfaceAnalysisDisplayImpl * m_surfaceanalysisdisplay_impl;
            private: NXOpen::GeometricAnalysis::AnalysisObjectCollection* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SurfaceAnalysisDisplay(NXOpen::GeometricAnalysis::AnalysisObjectCollection *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SurfaceAnalysisDisplay();
            /** Sets show flags 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetShowFlag
            (
                NXOpen::DisplayableObject * surface /** surface */,
                NXOpen::GeometricAnalysis::SurfaceAnalysisDisplay::ShowFlagType choice /** pole/knot */,
                bool on /** true/false to show flags */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
