#ifndef NXOpen_CAE_CAEEDGE_HXX_INCLUDED
#define NXOpen_CAE_CAEEDGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CAEEdge.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/IBaseCurve.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CAEEdge;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class DisplayableObject;
    class IBaseCurve;
    class INXObject;
    namespace CAE
    {
        class _CAEEdgeBuilder;
        class CAEEdgeImpl;
        /**  @brief  Represents a CAE edge geometry  

          
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CAEEdge : public DisplayableObject, public virtual IBaseCurve
        {
            private: CAEEdgeImpl * m_caeedge_impl;
            private: friend class  _CAEEdgeBuilder;
            protected: CAEEdge();
            public: ~CAEEdge();
            /** Returns the length of the object  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual double GetLength
            (
            );
            /**Returns  the reference state of a curve 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: virtual bool IsReference
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
