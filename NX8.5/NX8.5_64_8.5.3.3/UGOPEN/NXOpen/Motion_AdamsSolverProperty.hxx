#ifndef NXOpen_MOTION_ADAMSSOLVERPROPERTY_HXX_INCLUDED
#define NXOpen_MOTION_ADAMSSOLVERPROPERTY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_AdamsSolverProperty.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_AdamsSolverProperty.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class AdamsSolverProperty;
    }
    class Expression;
    namespace Motion
    {
        class _AdamsSolverPropertyBuilder;
        class AdamsSolverPropertyImpl;
        /** Represents a @link Motion::AdamsSolverProperty Motion::AdamsSolverProperty@endlink  
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  AdamsSolverProperty : public TaggedObject
        {
            private: AdamsSolverPropertyImpl * m_adamssolverproperty_impl;
            private: friend class  _AdamsSolverPropertyBuilder;
            protected: AdamsSolverProperty();
            public: ~AdamsSolverProperty();
            /**Returns  the max step size 
             <br>  @deprecated Deprecated in NX8.5.0.  Obtion the exression using @link Motion::AdamsSolverProperty::MaxStepSizeExpression Motion::AdamsSolverProperty::MaxStepSizeExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Obtion the exression using Motion::AdamsSolverProperty::MaxStepSizeExpression to query or edit it.") double MaxStepSize
            (
            );
            /**Sets  the max step size 
             <br>  @deprecated Deprecated in NX8.5.0.  Obtion the exression using @link Motion::AdamsSolverProperty::MaxStepSizeExpression Motion::AdamsSolverProperty::MaxStepSizeExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Obtion the exression using Motion::AdamsSolverProperty::MaxStepSizeExpression to query or edit it.") void SetMaxStepSize
            (
                double maxStepSize /** maxstepsize */ 
            );
            /**Returns  the max solver error 
             <br>  @deprecated Deprecated in NX8.5.0.  Obtion the exression using @link Motion::AdamsSolverProperty::MaxSolverErrorExpression Motion::AdamsSolverProperty::MaxSolverErrorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Obtion the exression using Motion::AdamsSolverProperty::MaxSolverErrorExpression to query or edit it.") double MaxSolverError
            (
            );
            /**Sets  the max solver error 
             <br>  @deprecated Deprecated in NX8.5.0.  Obtion the exression using @link Motion::AdamsSolverProperty::MaxSolverErrorExpression Motion::AdamsSolverProperty::MaxSolverErrorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.5.0.  Obtion the exression using Motion::AdamsSolverProperty::MaxSolverErrorExpression to query or edit it.") void SetMaxSolverError
            (
                double maxSolverError /** maxsolvererror */ 
            );
            /**Returns  the max iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxIteration
            (
            );
            /**Sets  the max iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMaxIteration
            (
                int maxIteration /** maxiteration */ 
            );
            /**Returns  the max kinematic iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxKinematicIteration
            (
            );
            /**Sets  the max kinematic iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMaxKinematicIteration
            (
                int maxKinematicIteration /** maxkinematiciteration */ 
            );
            /**Returns  the max static iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxStaticIteration
            (
            );
            /**Sets  the max static iteration 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMaxStaticIteration
            (
                int maxStaticIteration /** maxstaticiteration */ 
            );
            /**Returns  the max step size expression
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxStepSizeExpression
            (
            );
            /**Returns  the max solver error expression
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxSolverErrorExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
