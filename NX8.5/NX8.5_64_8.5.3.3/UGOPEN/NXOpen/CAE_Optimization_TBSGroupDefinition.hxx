#ifndef NXOpen_CAE_OPTIMIZATION_TBSGROUPDEFINITION_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSGROUPDEFINITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSGroupDefinition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSGroupDefinition.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSGroupDefinition;
        }
    }
    namespace CAE
    {
        class SetManager;
    }
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSGroupDefinitionBuilder;
            class TBSGroupDefinitionImpl;
            /** Represents a group of nodes or elements 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSGroupDefinition : public TaggedObject
            {
                /** Represents the definition method of a group */
                public: enum DefinitionType
                {
                    DefinitionTypeAll/** Defines a group with all nodes or elements*/,
                    DefinitionTypeSelected/** Defines a group by selection */,
                    DefinitionTypeDesignArea/** Defines a group refer to design area */,
                    DefinitionTypeMeshSmoothingArea/** Defines a group refer to mesh smoothing area */
                };

                /** Represents the type of group elements */
                public: enum GroupElementType
                {
                    GroupElementTypeElement/** The group contains element */,
                    GroupElementTypeNode/** The group contains node */
                };

                private: TBSGroupDefinitionImpl * m_tbsgroupdefinition_impl;
                private: friend class  _TBSGroupDefinitionBuilder;
                protected: TBSGroupDefinition();
                public: ~TBSGroupDefinition();
                /**Returns  the definition type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSGroupDefinition::DefinitionType Definition
                (
                );
                /**Sets  the definition type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetDefinition
                (
                    NXOpen::CAE::Optimization::TBSGroupDefinition::DefinitionType definition /** definition */ 
                );
                /**Returns  the target set 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::SetManager * TargetSet
                (
                );
                /** Returns the group element type  @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSGroupDefinition::GroupElementType GetElementType
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
