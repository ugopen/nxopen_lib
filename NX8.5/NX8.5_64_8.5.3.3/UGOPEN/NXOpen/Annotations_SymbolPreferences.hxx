#ifndef NXOpen_ANNOTATIONS_SYMBOLPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_SYMBOLPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_SymbolPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/LineWelds.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class SymbolPreferences;
    }
    namespace Annotations
    {
        class SymbolPreferencesImpl;
        /** Represents symbol preferences 
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  SymbolPreferences : public TransientObject
        {
            private: SymbolPreferencesImpl * m_symbolpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit SymbolPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~SymbolPreferences();
            /**Returns  the id symbol size 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double IdSymbolSize
            (
            );
            /**Sets  the id symbol size 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIdSymbolSize
            (
                double idSymbolSize /** id symbol size */ 
            );
            /** Returns the id symbol color, font, and width  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetIdSymbolCfw
            (
            );
            /** Sets the id symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIdSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & idSymbolCfw /** id symbol cfw */ 
            );
            /** Returns the user defined symbol color, font, and width   @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetUserDefinedSymbolCfw
            (
            );
            /** Sets the user defined symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUserDefinedSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & userDefinedSymbolCfw /** user defined symbol cfw */ 
            );
            /** Returns the centerline symbol color, font, and width   @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetCenterlineSymbolCfw
            (
            );
            /** Sets the centerline symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCenterlineSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & centerlineSymbolCfw /** centerline symbol cfw */ 
            );
            /** Returns the intersection symbol color, font, and width   @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetIntersectionSymbolCfw
            (
            );
            /** Sets the intersection symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIntersectionSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & intersectionSymbolCfw /** intersection symbol cfw */ 
            );
            /** Returns the target symbol color, font, and width   @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetTargetSymbolCfw
            (
            );
            /** Sets the target symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & targetSymbolCfw /** target symbol cfw */ 
            );
            /** Returns the gdt symbol color, font, and width   @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetGdtSymbolCfw
            (
            );
            /** Sets the gdt symbol color, font, and width  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGdtSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & gdtSymbolCfw /** gdt symbol cfw */ 
            );
            /** Returns the weld symbol color, font, and width   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetWeldSymbolCfw
            (
            );
            /** Sets the weld symbol color, font, and width  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetWeldSymbolCfw
            (
                const NXOpen::Annotations::LineCfw & weldSymbolCfw /** weld symbol cfw */ 
            );
            /** Returns the weld line gap   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double GetWeldLineGap
            (
            );
            /** Sets the weld symbol line gap 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetWeldLineGap
            (
                double lineGap /** linegap */ 
            );
            /** Returns the surface finish symbol color, font, and width   @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::LineCfw GetSurfaceFinishCfw
            (
            );
            /** Sets the surface finish symbol color, font, and width  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSurfaceFinishCfw
            (
                const NXOpen::Annotations::LineCfw & surfaceFinishCfw /** surface finish cfw */ 
            );
            /**Returns  the drafting surface finish standard 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::SurfaceFinishStandard DraftingSurfaceFinishStandard
            (
            );
            /**Sets  the drafting surface finish standard 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDraftingSurfaceFinishStandard
            (
                NXOpen::Annotations::SurfaceFinishStandard standard /** standard */ 
            );
            /** Returns the weld space factor  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double GetWeldSpaceFactor
            (
            );
            /** Sets the weld symbol space factor 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetWeldSpaceFactor
            (
                double spaceFactor /** spacefactor */ 
            );
            /** The character size factor that controls the weld symbol size. The value is greater than zero.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double GetWeldSymbolSizeFactor
            (
            );
            /** 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetWeldSymbolSizeFactor
            (
                double symbolSizeFactor /** symbolsizefactor */ 
            );
            /**Returns  the weld symbol standard 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::WeldStandard WeldSymbolStandard
            (
            );
            /**Sets  the weld symbol standard 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetWeldSymbolStandard
            (
                NXOpen::Annotations::WeldStandard standard /** standard */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
