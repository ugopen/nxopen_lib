#ifndef NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_QUADRILATERALGRIDBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_QUADRILATERALGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SectionAnalysis_QuadrilateralGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_GridSpacingBuilder.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_QuadrilateralGridBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_QuadrilateralFrameBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricanalysis_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class QuadrilateralGridBuilder;
        }
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class GridSpacingBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class QuadrilateralFrameBuilder;
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class _QuadrilateralGridBuilderBuilder;
            class QuadrilateralGridBuilderImpl;
            /** Represents the quadrilateral grid section specifications for a @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder@endlink .
                        Only used when type is @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder::TypesQuadrilateral GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder::TypesQuadrilateral@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
            */
            class NXOPENCPP_GEOMETRICANALYSISEXPORT  QuadrilateralGridBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                private: QuadrilateralGridBuilderImpl * m_quadrilateralgridbuilder_impl;
                private: friend class  _QuadrilateralGridBuilderBuilder;
                protected: QuadrilateralGridBuilder();
                public: ~QuadrilateralGridBuilder();
                /**Returns  the spacing specification for the quadrilateral grid 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::GridSpacingBuilder * Spacing
                (
                );
                /**Returns  the quadrilateral frame 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricUtilities::QuadrilateralFrameBuilder * QuadrilateralFrame
                (
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
