#ifndef NXOpen_CAE_BEAMSECTIONOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_BEAMSECTIONOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BeamSectionOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class BeamSectionOptions;
    }
    namespace CAE
    {
        class BeamSection;
    }
    namespace CAE
    {
        class BeamSectionOptionsImpl;
        /**  @brief  Represents the synchronize options to be used when a FEM part is created
                          These options will be used to synchronize the specified entities from the
                          master CAD part file to the FEM part file  

           <br> To create a new instance of this class, use @link CAE::CaePart::NewBeamSectionOptions  CAE::CaePart::NewBeamSectionOptions @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  BeamSectionOptions : public TransientObject
        {
            private: BeamSectionOptionsImpl * m_beamsectionoptions_impl;
            /// \cond NX_NO_DOC 
            public: explicit BeamSectionOptions(void *ptr);
            /// \endcond 
            /**Sets  the flag indicating whether the beam section is tapered 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamSectionTapered
            (
                bool bTapered /** btapered */ 
            );
            /**Returns  the flag indicating whether the beam section is tapered 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool BeamSectionTapered
            (
            );
            /**Sets  the flag indicating whether the beam section is in tapered chaining 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamSectionTaperedChaining
            (
                bool bTaperedChaining /** btaperedchaining */ 
            );
            /**Returns  the flag indicating whether the beam section is in tapered chaining 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool BeamSectionTaperedChaining
            (
            );
            /**Sets  the section of fore beam end 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamForeSection
            (
                NXOpen::CAE::BeamSection * beamSection /** beam section */ 
            );
            /**Returns  the section of fore beam end 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BeamSection * BeamForeSection
            (
            );
            /**Sets  the section of aft beam end 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBeamAftSection
            (
                NXOpen::CAE::BeamSection * beamSection /** beam section */ 
            );
            /**Returns  the section of aft beam end 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BeamSection * BeamAftSection
            (
            );
            /** Destroys the object 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~BeamSectionOptions();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
