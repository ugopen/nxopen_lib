#ifndef NXOpen_ANNOTATIONS_PMIFILTERBYTYPE_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIFILTERBYTYPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiFilterByType.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_PmiFilter.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class PmiFilterByType;
    }
    namespace Annotations
    {
        class PmiFilter;
    }
    namespace Annotations
    {
        class _PmiFilterByTypeBuilder;
        class PmiFilterByTypeImpl;
        /** Represents a PMI filter defined by a set of types. 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  PmiFilterByType : public Annotations::PmiFilter
        {
            /** Represents a PMI type that is assigned to the PMI filter. */
            public: enum Type
            {
                TypeDimension/** Indicates a PMI dimension type */,
                TypeFeatureControlFrame/** Indicates a PMI feature control frame type */,
                TypeDatum/** Indicates a PMI datum feature type */,
                TypeDatumTarget/** Indicates a PMI datum target type */,
                TypeNote/** Indicates a PMI note type */,
                TypeGeneralNote/** Indicates a PMI general note type */,
                TypeSpecificNote/** Indicates a PMI specific note type */,
                TypeCoordinateNote/** Indicates a PMI coordinate note type */,
                TypeBalloonNote/** Indicates a PMI balloon type */,
                TypeCustomSymbol/** Indicates a PMI custom symbol type */,
                TypeCenterline/** Indicates a PMI centerline type */,
                TypeLineWeld/** Indicates a PMI weld type */,
                TypeCrosshatch/** Indicates a PMI crosshatch type */,
                TypeMaterial/** Indicates a PMI material type */,
                TypeSurfaceFinish/** Indicates a PMI surface finish type */,
                TypeLocator/** Indicates a PMI locator type */,
                TypeEnterpriseIdentifier/** Indicates a PMI enterprise identifier type */,
                TypeProcess/** Indicates a PMI process type */,
                TypePartIdentifier/** Indicates a PMI part identifier type */,
                TypeEmarking/** Indicates a PMI e-Marking type */,
                TypeUrl/** Indicates a PMI URL type */,
                TypeUserDefined/** Indicates a PMI user defined type */,
                TypeGeometry/** Indicates a PMI Geometry type */
            };

            private: PmiFilterByTypeImpl * m_pmifilterbytype_impl;
            private: friend class  _PmiFilterByTypeBuilder;
            protected: PmiFilterByType();
            public: ~PmiFilterByType();
            /** Gets the array of PMI types defined by the PMI filter.  @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::PmiFilterByType::Type> GetPmiTypes
            (
            );
            /** Sets the PMI types on the PMI filter 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: void SetPmiTypes
            (
                const std::vector<NXOpen::Annotations::PmiFilterByType::Type> & types /** types */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
