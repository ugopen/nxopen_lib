#ifndef NXOpen_ANNOTATIONS_LETTERINGPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_LETTERINGPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_LetteringPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class LetteringPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class LetteringPreferencesImpl;
        /** Represents lettering preferences.
             <br>  When setting the property, changes are not applied to object until
            the set method is called  <br>  
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  LetteringPreferences : public TransientObject
        {
            private: LetteringPreferencesImpl * m_letteringpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit LetteringPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~LetteringPreferences();
            /**Returns  the align position 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::AlignmentPosition AlignmentPosition
            (
            );
            /**Sets  the align position 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAlignmentPosition
            (
                NXOpen::Annotations::AlignmentPosition alignPosition /** align position */ 
            );
            /**Returns  the horizontal text justification 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::TextJustification HorizTextJust
            (
            );
            /**Sets  the horizontal text justification 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHorizTextJust
            (
                NXOpen::Annotations::TextJustification horizTextJust /** horiz text just */ 
            );
            /**Returns  the gdt frame height factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double GdtFrameHeightFactor
            (
            );
            /**Sets  the gdt frame height factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGdtFrameHeightFactor
            (
                double gdtFrameHeightFactor /** gdt frame height factor */ 
            );
            /**Returns  the angle 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double Angle
            (
            );
            /**Sets  the angle 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the dimension/dimension line space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double DimDimLineSpaceFactor
            (
            );
            /**Sets  the dimension/dimension line space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimDimLineSpaceFactor
            (
                double dimDimLineSpaceFactor /** dim dim line space factor */ 
            );
            /**Returns  the dimension/appended text space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double DimAppendedTextSpaceFactor
            (
            );
            /**Sets  the dimension/appended text space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimAppendedTextSpaceFactor
            (
                double dimAppTextSpaceFactor /** dim app text space factor */ 
            );
            /**Returns  the dimension/tolerance text space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: double DimToleranceTextSpaceFactor
            (
            );
            /**Sets  the dimension/tolerance text space factor 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimToleranceTextSpaceFactor
            (
                double dimTolTextSpaceFactor /** dim tol text space factor */ 
            );
            /** Returns the dimension text  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Lettering GetDimensionText
            (
            );
            /** Sets the dimension text 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionText
            (
                const NXOpen::Annotations::Lettering & dimensionText /** dimension text */ 
            );
            /** Returns the appended text  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Lettering GetAppendedText
            (
            );
            /** Sets the appended text 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAppendedText
            (
                const NXOpen::Annotations::Lettering & appendedText /** appended text */ 
            );
            /** Returns the tolerance text  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Lettering GetToleranceText
            (
            );
            /** Sets the tolerance text 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToleranceText
            (
                const NXOpen::Annotations::Lettering & toleranceText /** tolerance text */ 
            );
            /** Returns the general text  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Lettering GetGeneralText
            (
            );
            /** Sets the general text 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGeneralText
            (
                const NXOpen::Annotations::Lettering & generalText /** general text */ 
            );
            /**Returns  the stack vertical(above/below) alignment option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StackVerticalAlignment StackVerticalAlignment
            (
            );
            /**Sets  the stack vertical(above/below) alignment option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackVerticalAlignment
            (
                NXOpen::Annotations::StackVerticalAlignment verticalAlignment /** vertical alignment */ 
            );
            /**Returns  the stack horizontal(left/right) alignment option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StackHorizontalAlignment StackHorizontalAlignment
            (
            );
            /**Sets  the stack horizontal(left/right) alignment option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackHorizontalAlignment
            (
                NXOpen::Annotations::StackHorizontalAlignment horizontalAlignment /** horizontal alignment */ 
            );
            /**Returns  the stack above spacing factor for space buffer above annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double StackAboveSpaceFactor
            (
            );
            /**Sets  the stack above spacing factor for space buffer above annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackAboveSpaceFactor
            (
                double stackAboveSpaceFactor /** stack above space factor */ 
            );
            /**Returns  the stack below spacing factor for space buffer below annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double StackBelowSpaceFactor
            (
            );
            /**Sets  the stack below spacing factor for space buffer below annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackBelowSpaceFactor
            (
                double stackBelowSpaceFactor /** stack below space factor */ 
            );
            /**Returns  the stack left spacing factor for space buffer left annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double StackLeftSpaceFactor
            (
            );
            /**Sets  the stack left spacing factor for space buffer left annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackLeftSpaceFactor
            (
                double stackLeftSpaceFactor /** stack left space factor */ 
            );
            /**Returns  the stack right spacing factor for space buffer right annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double StackRightSpaceFactor
            (
            );
            /**Sets  the stack right spacing factor for space buffer right annotation in stack.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackRightSpaceFactor
            (
                double stackRightSpaceFactor /** stack right space factor */ 
            );
            /**Returns  the flag indicating whether to inherit the associated objects of a stack when 
                        an annotation is inserted into a stack. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool StackInheritAssociatedObjects
            (
            );
            /**Sets  the flag indicating whether to inherit the associated objects of a stack when 
                        an annotation is inserted into a stack. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackInheritAssociatedObjects
            (
                bool stackInheritAssociatedObjects /** Flag to whether inherit associated objects of stack*/
            );
            /**Returns  the flag indicating whether to automatically set the stack spacing to system derived values 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool StackAutospace
            (
            );
            /**Sets  the flag indicating whether to automatically set the stack spacing to system derived values 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStackAutospace
            (
                bool stackAutospace /** stack autospace */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
