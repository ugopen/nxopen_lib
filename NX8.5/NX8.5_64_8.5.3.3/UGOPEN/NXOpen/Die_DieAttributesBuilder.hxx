#ifndef NXOpen_DIE_DIEATTRIBUTESBUILDER_HXX_INCLUDED
#define NXOpen_DIE_DIEATTRIBUTESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieAttributesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieAttributesBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class DieAttributesBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXColor;
    namespace Die
    {
        class _DieAttributesBuilderBuilder;
        class DieAttributesBuilderImpl;
        /**
            Represents a @link Die::DieAttributesBuilder Die::DieAttributesBuilder@endlink . The Die Attributes class is a helper to
            the main Die Design feature to gather the attribute title and value and face color to be applied.
            The attribute will be applied to a face or faces in the application of varying types, such as a
            base face.
             <br> To create a new instance of this class, use @link Die::DieCollection::CreateDieAttribute  Die::DieCollection::CreateDieAttribute @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  DieAttributesBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: DieAttributesBuilderImpl * m_dieattributesbuilder_impl;
            private: friend class  _DieAttributesBuilderBuilder;
            protected: DieAttributesBuilder();
            public: ~DieAttributesBuilder();
            /**Returns  the title of the attribute to be applied 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString AttributeTitle
            (
            );
            /**Sets  the title of the attribute to be applied 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAttributeTitle
            (
                const NXString & attributeTitle /** attributetitle */ 
            );
            /**Sets  the title of the attribute to be applied 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetAttributeTitle
            (
                const char * attributeTitle /** attributetitle */ 
            );
            /**Returns  the value given to the attribute 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString AttributeValue
            (
            );
            /**Sets  the value given to the attribute 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAttributeValue
            (
                const NXString & attributeValue /** attributevalue */ 
            );
            /**Sets  the value given to the attribute 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            void SetAttributeValue
            (
                const char * attributeValue /** attributevalue */ 
            );
            /**Returns  the color to be applied to the face, or faces, in the application 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * AttributeColor
            (
            );
            /**Sets  the color to be applied to the face, or faces, in the application 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAttributeColor
            (
                NXOpen::NXColor * attributeColor /** attributecolor */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
