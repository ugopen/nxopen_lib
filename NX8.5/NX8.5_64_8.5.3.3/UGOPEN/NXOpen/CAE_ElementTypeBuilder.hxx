#ifndef NXOpen_CAE_ELEMENTTYPEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTTYPEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementTypeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DestinationCollectorBuilder.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class DestinationCollectorBuilder;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class _ElementTypeBuilderBuilder;
        class ElementTypeBuilderImpl;
        /** Represents the specification of the FEA Element Type for a meshing dialog. 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ElementTypeBuilder : public TaggedObject
        {
            /**  Dimension of the element types to be specified. */
            public: enum ElementType
            {
                ElementTypePoint/**  0D element        */,
                ElementTypeBeam/**  beam              */,
                ElementTypeShell/**  shell             */,
                ElementTypeFreeSolid/**  Free mesh solid   */,
                ElementTypeSweepSolid/**  Sweep mesh solid  */,
                ElementTypeSweepSolidWedge/**  Sweep mesh solid with wedges*/,
                ElementTypeSpider/**  Spider Connection */,
                ElementTypeConnection/**  Connection        */,
                ElementTypeAnySolid/**  Any solid         */,
                ElementTypeTriaShell/**  Tria shell        */,
                ElementTypeQuadShell/**  Quad shell        */,
                ElementTypeWeld/**  Weld element      */
            };

            /**  Order of the element types to be specified. */
            public: enum ElementOrderType
            {
                ElementOrderTypeAny/**  any element    */,
                ElementOrderTypeLinear/**  linear element */,
                ElementOrderTypeParabolic/**  parabolic element */
            };

            private: ElementTypeBuilderImpl * m_elementtypebuilder_impl;
            private: friend class  _ElementTypeBuilderBuilder;
            protected: ElementTypeBuilder();
            public: ~ElementTypeBuilder();
            /**Returns  the element dimension used to limit the valid @link CAE::ElementTypeBuilder::ElementTypeName CAE::ElementTypeBuilder::ElementTypeName @endlink and @link CAE::ElementTypeBuilder::SetElementTypeName CAE::ElementTypeBuilder::SetElementTypeName @endlink 
                        values.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder::ElementType ElementDimension
            (
            );
            /**Sets  the element dimension used to limit the valid @link CAE::ElementTypeBuilder::ElementTypeName CAE::ElementTypeBuilder::ElementTypeName @endlink and @link CAE::ElementTypeBuilder::SetElementTypeName CAE::ElementTypeBuilder::SetElementTypeName @endlink 
                        values.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementDimension
            (
                NXOpen::CAE::ElementTypeBuilder::ElementType elementDimension /** elementdimension */ 
            );
            /**Returns  the element order used to limit the valid @link CAE::ElementTypeBuilder::ElementTypeName CAE::ElementTypeBuilder::ElementTypeName @endlink and @link CAE::ElementTypeBuilder::SetElementTypeName CAE::ElementTypeBuilder::SetElementTypeName @endlink 
                        values.   
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder::ElementOrderType ElementOrder
            (
            );
            /**Sets  the element order used to limit the valid @link CAE::ElementTypeBuilder::ElementTypeName CAE::ElementTypeBuilder::ElementTypeName @endlink and @link CAE::ElementTypeBuilder::SetElementTypeName CAE::ElementTypeBuilder::SetElementTypeName @endlink 
                        values.   
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementOrder
            (
                NXOpen::CAE::ElementTypeBuilder::ElementOrderType elementOrder /** elementorder */ 
            );
            /**  Returns the element type names that are currently valid for this builder based on the 
                        current setting of @link CAE::ElementTypeBuilder::ElementOrder CAE::ElementTypeBuilder::ElementOrder @endlink and @link CAE::ElementTypeBuilder::SetElementOrder CAE::ElementTypeBuilder::SetElementOrder @endlink  
                        and  @link CAE::ElementTypeBuilder::ElementDimension CAE::ElementTypeBuilder::ElementDimension @endlink and @link CAE::ElementTypeBuilder::SetElementDimension CAE::ElementTypeBuilder::SetElementDimension @endlink           
                     @return element type names 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetElementTypeNames
            (
            );
            /**Returns  the element type name which defines the type to be used.  This name is solver environment dependent. These are
                        the same names that show up in the meshing dialogues. Refer to 
                        @link CAE::ElementTypeBuilder::GetElementTypeNames CAE::ElementTypeBuilder::GetElementTypeNames@endlink  for the list of 
                        the current valid element type names.     
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ElementTypeName
            (
            );
            /**Sets  the element type name which defines the type to be used.  This name is solver environment dependent. These are
                        the same names that show up in the meshing dialogues. Refer to 
                        @link CAE::ElementTypeBuilder::GetElementTypeNames CAE::ElementTypeBuilder::GetElementTypeNames@endlink  for the list of 
                        the current valid element type names.     
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementTypeName
            (
                const NXString & elementType /** elementtype */ 
            );
            /**Sets  the element type name which defines the type to be used.  This name is solver environment dependent. These are
                        the same names that show up in the meshing dialogues. Refer to 
                        @link CAE::ElementTypeBuilder::GetElementTypeNames CAE::ElementTypeBuilder::GetElementTypeNames@endlink  for the list of 
                        the current valid element type names.     
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetElementTypeName
            (
                const char * elementType /** elementtype */ 
            );
            /**Returns  the property table associated with the element type name @link CAE::ElementTypeBuilder::ElementTypeName CAE::ElementTypeBuilder::ElementTypeName @endlink and @link CAE::ElementTypeBuilder::SetElementTypeName CAE::ElementTypeBuilder::SetElementTypeName @endlink . 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns  the destination element collector 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DestinationCollectorBuilder * DestinationCollector
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
