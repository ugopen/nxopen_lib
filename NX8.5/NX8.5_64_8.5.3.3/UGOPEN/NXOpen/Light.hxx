#ifndef NXOpen_LIGHT_HXX_INCLUDED
#define NXOpen_LIGHT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Light.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_LightTypes.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Light;
    class NXObject;
    class View;
    class _LightBuilder;
    class LightImpl;
    /**
     Represents a light source.
     <br> Creation of lights is not supported yet.  <br> 
     <br>  Created in NX4.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Light : public NXObject
    {
        /**
             The predefined scene lights used in Basic Lights.  These are subtypes of
             @link LightTypeScene LightTypeScene@endlink .  Except for ambient light, all of the other lights
             are on the same side of the model as the observer.
            */
        public: enum SceneType
        {
            SceneTypeNotASceneLight = -1/** The light is not a scene light */,
            SceneTypeAmbient/** Light from all around the model */,
            SceneTypeLeftTop/** Light from the top left of the view */,
            SceneTypeTop/** Light from the top center of the view */,
            SceneTypeRightTop/** Light from the top right of the view */,
            SceneTypeFront/** Light from the front of the view (at
                                                          the observer's location */,
            SceneTypeLeftBottom/** Light from the bottom left of the view */,
            SceneTypeBottom/** Light from the bottom center of the view */,
            SceneTypeRightBottom/** Light from the bottom right of the view */
        };

        private: LightImpl * m_light_impl;
        private: friend class  _LightBuilder;
        protected: Light();
        public: ~Light();
        /** Whether a light is enabled in a given view.  true means the light is on, 
                false means the light is off.  @return  true: the light is on, false: off 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: bool GetEnabledInView
        (
            NXOpen::View * view /** The view to check */
        );
        /** Whether a light is to be enabled in a given view.  true means
                to turn the light on, false is to turn it off.  For now, the light must be
                of type @link LightTypeScene LightTypeScene@endlink . 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void SetEnabledInView
        (
            NXOpen::View * view /** The view to turn the light on or off in */,
            bool onOrOff /** true for on, false for off */
        );
        /**Returns  the intensity of a light.  Intensity is normally in the range of
                0.0 (fully off) to 1.0 (fully on), except that for lights other than
                scene lights, the intensity may be greater than 1.0.
                 <br>  Note that even if the light is not displayed in any view, the
                intensity may still be greater than 0.0, as this intensity will be used
                the next time the light is turned on.  <br>  
                 <br>  For now, setting @link Light::SetIntensity Light::SetIntensity@endlink  may only be used for
                a scene light.  <br> 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: double Intensity
        (
        );
        /**Sets  the intensity of a light.  Intensity is normally in the range of
                0.0 (fully off) to 1.0 (fully on), except that for lights other than
                scene lights, the intensity may be greater than 1.0.
                 <br>  Note that even if the light is not displayed in any view, the
                intensity may still be greater than 0.0, as this intensity will be used
                the next time the light is turned on.  <br>  
                 <br>  For now, setting @link Light::SetIntensity Light::SetIntensity@endlink  may only be used for
                a scene light.  <br> 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void SetIntensity
        (
            double intensity /** intensity */ 
        );
        /** Get the type of a light.  If the light is a scene light, the specific type
                of scene light is also returned.  It the light is not a scene light, the
                scene_light_type output is undefined. 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void GetLightType
        (
            NXOpen::LightType* lightType /** the type of light */,
            NXOpen::Light::SceneType* sceneLightType /** is light_type is ...scene,
                                                                    this is the specific type of
                                                                    scene light */
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
