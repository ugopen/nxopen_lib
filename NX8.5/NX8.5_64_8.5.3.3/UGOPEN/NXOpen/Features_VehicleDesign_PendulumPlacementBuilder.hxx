#ifndef NXOpen_FEATURES_VEHICLEDESIGN_PENDULUMPLACEMENTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_PENDULUMPLACEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_PendulumPlacementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_VehicleDesign_PendulumPlacementBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class PendulumPlacementBuilder;
        }
    }
    class Builder;
    class Expression;
    class NXColor;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _PendulumPlacementBuilderBuilder;
            class PendulumPlacementBuilderImpl;
            /** This builder allows you to define the pendulum placement information for bumper pendulum features in vehicle design. 
                    It represents @link Features::VehicleDesign::PendulumPlacementBuilder Features::VehicleDesign::PendulumPlacementBuilder@endlink   <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PendulumPlacementBuilder : public Builder
            {
                /** This enum represents the pendulum placement method options. */
                public: enum PositionMethodType
                {
                    PositionMethodTypeMiddleBaseData/** middle base data */ ,
                    PositionMethodTypeMiddleVehicle/** middle vehicle */ ,
                    PositionMethodTypeRotatedBaseData/** rotated base data */ ,
                    PositionMethodTypeRotatedPlane/** rotated plane */ ,
                    PositionMethodTypeRotatedPlaneX/** rotated plane x */ ,
                    PositionMethodTypeRotatedPlaneNormal/** rotated plane normal */ ,
                    PositionMethodTypeRotatedContact/** rotated contact */ ,
                    PositionMethodTypeShiftedBaseData/** shifted base data */ ,
                    PositionMethodTypeShiftedVehicle/** shifted vehicle */ ,
                    PositionMethodTypeShiftedFromRotated/** shifted from rotated */ 
                };

                /** This enum represents the pendulum placement profile options. */
                public: enum PendulumProfileType
                {
                    PendulumProfileTypeEu/** eu */ ,
                    PendulumProfileTypeUs/** us */ 
                };

                /** This enum represents the pendulum placement location options. */
                public: enum LocationType
                {
                    LocationTypeFront/** front */ ,
                    LocationTypeRear/** rear */ 
                };

                /** This enum represents the pendulum placement side options. */
                public: enum SideType
                {
                    SideTypeLeft/** left */ ,
                    SideTypeRight/** right */ 
                };

                private: PendulumPlacementBuilderImpl * m_pendulumplacementbuilder_impl;
                private: friend class  _PendulumPlacementBuilderBuilder;
                protected: PendulumPlacementBuilder();
                public: ~PendulumPlacementBuilder();
                /**Returns  the value indicating if this pendulum is displayed. A value of false will hide this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowPendulum
                (
                );
                /**Sets  the value indicating if this pendulum is displayed. A value of false will hide this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetShowPendulum
                (
                    bool showPendulum /** showpendulum */ 
                );
                /**Returns  the name of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the name of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /**Returns  the loading used with this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString Loading
                (
                );
                /**Sets  the loading used with this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLoading
                (
                    const NXString & loading /** loading */ 
                );
                /**Sets  the loading used with this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLoading
                (
                    const char * loading /** loading */ 
                );
                /**Returns  the method to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::PositionMethodType PositionMethod
                (
                );
                /**Sets  the method to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPositionMethod
                (
                    NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::PositionMethodType positionMethod /** positionmethod */ 
                );
                /**Returns  the pendulum profile of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::PendulumProfileType PendulumProfile
                (
                );
                /**Sets  the pendulum profile of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPendulumProfile
                (
                    NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::PendulumProfileType pendulumProfile /** pendulumprofile */ 
                );
                /**Returns  the location to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::LocationType Location
                (
                );
                /**Sets  the location to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLocation
                (
                    NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::LocationType location /** location */ 
                );
                /**Returns  the side to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::SideType Side
                (
                );
                /**Sets  the side to use for positioning this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSide
                (
                    NXOpen::Features::VehicleDesign::PendulumPlacementBuilder::SideType side /** side */ 
                );
                /**Returns  the expression containing the amount to shift the pendulum from the contact point on the car. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Shift
                (
                );
                /**Returns  the reference level of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Level
                (
                );
                /**Returns  the rotation angle of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Angle
                (
                );
                /**Returns  the side offset of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Offset
                (
                );
                /**Returns  the display color of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * Color
                (
                );
                /**Sets  the display color of this pendulum. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /**Returns  the value indicating if the contact point (if any) between this pendulum and the bumper is displayed. A value of false will hide the contact point. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ShowPoint
                (
                );
                /**Sets  the value indicating if the contact point (if any) between this pendulum and the bumper is displayed. A value of false will hide the contact point. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetShowPoint
                (
                    bool showPoint /** showpoint */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
