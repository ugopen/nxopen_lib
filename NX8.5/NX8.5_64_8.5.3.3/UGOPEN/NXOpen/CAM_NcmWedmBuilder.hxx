#ifndef NXOpen_CAM_NCMWEDMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_NCMWEDMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_NcmWedmBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NcmSubopBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class NcmWedmBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableIntBuilder;
    }
    namespace CAM
    {
        class NcmSubopBuilder;
    }
    namespace CAM
    {
        class WedmPointDefinitionBuilder;
    }
    namespace CAM
    {
        class _NcmWedmBuilderBuilder;
        class NcmWedmBuilderImpl;
        /** Represents a CAM.NcmWedmBuilder 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  NcmWedmBuilder : public CAM::NcmSubopBuilder
        {
            /** the types available for non-tilt lead in 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum NonTiltLeadInTypes
            {
                NonTiltLeadInTypesZm/** non-tilt lead in type zm */,
                NonTiltLeadInTypesFourAxis/** non-tilt lead in type 4-axis */
            };

            /** the types available for lead in method 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum LeadInMethodTypes
            {
                LeadInMethodTypesDirect/** direct lead in */,
                LeadInMethodTypesAngular/** angular lead in */,
                LeadInMethodTypesCircular/** circular lead in */
            };

            /** the types available for lead out method 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum LeadOutMethodTypes
            {
                LeadOutMethodTypesSameAsLeadIn/** same as lead in */,
                LeadOutMethodTypesDirect/** direct lead out */,
                LeadOutMethodTypesAngular/** angular lead out */,
                LeadOutMethodTypesCircular/** circular lead out */
            };

            /** the types available for cutcom on 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum CutcomOnTypes
            {
                CutcomOnTypesNone/** no cutcom on */,
                CutcomOnTypesBeforeLeadIn/** cutcom on before lead in */,
                CutcomOnTypesAfterLeadIn/** cutcom on after lead in */,
                CutcomOnTypesAtThreadPoint/** cutcom on at thread point */
            };

            /** the types available for cutcom off 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum CutcomOffTypes
            {
                CutcomOffTypesNone/** no cutcom off */,
                CutcomOffTypesBeforeLeadOut/** cutcom off before lead out */,
                CutcomOffTypesAfterLeadOut/** cutcom off after lead out */,
                CutcomOffTypesBeforeThreadPoint/** cutcom off before thread point */
            };

            /** the types available for stop points method 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum GlobalStopPointMethodTypes
            {
                GlobalStopPointMethodTypesNone/** no stop points */,
                GlobalStopPointMethodTypesSpecify/** stop points specified */
            };

            /** the types available for wedm stop points 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum GlobalStopPointTypes
            {
                GlobalStopPointTypesOpstop/** stop points option opstop */,
                GlobalStopPointTypesStop/** stop points option stop */
            };

            /** the types available for lead out same as lead in 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum LeadOutSameAsLeadInTypes
            {
                LeadOutSameAsLeadInTypesNo/** not the same */,
                LeadOutSameAsLeadInTypesYes/** the same as lead in */
            };

            private: NcmWedmBuilderImpl * m_ncmwedmbuilder_impl;
            private: friend class  _NcmWedmBuilderBuilder;
            protected: NcmWedmBuilder();
            public: ~NcmWedmBuilder();
            /**Returns  the non_tilt_lead_in 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::NonTiltLeadInTypes NonTiltLeadIn
            (
            );
            /**Sets  the non_tilt_lead_in 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNonTiltLeadIn
            (
                NXOpen::CAM::NcmWedmBuilder::NonTiltLeadInTypes nonTiltLeadIn /** the non_tilt_lead_in  */
            );
            /**Returns  the lead_in_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::LeadInMethodTypes LeadInMethod
            (
            );
            /**Sets  the lead_in_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLeadInMethod
            (
                NXOpen::CAM::NcmWedmBuilder::LeadInMethodTypes leadInMethod /** the lead_in_method  */
            );
            /**Returns  the lead_in_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInDistanceBuilder
            (
            );
            /**Returns  the lead_in_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInAngleBuilder
            (
            );
            /**Returns  the lead_in_cutcom_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInCutcomAngleBuilder
            (
            );
            /**Returns  the lead_in_cutcom_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadInCutcomDistanceBuilder
            (
            );
            /**Returns  the lead_out_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::LeadOutMethodTypes LeadOutMethod
            (
            );
            /**Sets  the lead_out_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLeadOutMethod
            (
                NXOpen::CAM::NcmWedmBuilder::LeadOutMethodTypes leadOutMethod /** the lead_out_method  */
            );
            /**Returns  the lead_out_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutDistanceBuilder
            (
            );
            /**Returns  the lead_out_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutAngleBuilder
            (
            );
            /**Returns  the lead_out_cutcom_angle builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutCutcomAngleBuilder
            (
            );
            /**Returns  the lead_out_cutcom_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * LeadOutCutcomDistanceBuilder
            (
            );
            /**Returns  the cutcom_reg builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * CutcomRegBuilder
            (
            );
            /**Returns  the cutcom_on 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::CutcomOnTypes CutcomOn
            (
            );
            /**Sets  the cutcom_on 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutcomOn
            (
                NXOpen::CAM::NcmWedmBuilder::CutcomOnTypes cutcomOn /** the cutcom_on  */
            );
            /**Returns  the cutcom output register flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool CutcomRegisterFlag
            (
            );
            /**Sets  the cutcom output register flag 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutcomRegisterFlag
            (
                bool cutcomRegFlag /** the cutcom output register flag */
            );
            /**Returns  the cutcom_off 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::CutcomOffTypes CutcomOff
            (
            );
            /**Sets  the cutcom_off 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutcomOff
            (
                NXOpen::CAM::NcmWedmBuilder::CutcomOffTypes cutcomOff /** the cutcom_off  */
            );
            /**Returns  the cutcom_reg 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int CutcomReg
            (
            );
            /**Sets  the cutcom_reg 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutcomReg
            (
                int cutcomReg /** the cutcom_reg  */
            );
            /**Returns  the global_stop_point_distance builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * GlobalStopPointDistanceBuilder
            (
            );
            /**Returns  the global_stop_point_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::GlobalStopPointMethodTypes GlobalStopPointMethod
            (
            );
            /**Sets  the global_stop_point_method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGlobalStopPointMethod
            (
                NXOpen::CAM::NcmWedmBuilder::GlobalStopPointMethodTypes globalStopPointMethod /** the global_stop_point_method  */
            );
            /**Returns  the global_stop_point_type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::GlobalStopPointTypes GlobalStopPointType
            (
            );
            /**Sets  the global_stop_point_type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGlobalStopPointType
            (
                NXOpen::CAM::NcmWedmBuilder::GlobalStopPointTypes globalStopPointType /** the global_stop_point_type  */
            );
            /**Returns  the lead out same as lead in 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmWedmBuilder::LeadOutSameAsLeadInTypes LeadOutSameAsLeadIn
            (
            );
            /**Sets  the lead out same as lead in 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLeadOutSameAsLeadIn
            (
                NXOpen::CAM::NcmWedmBuilder::LeadOutSameAsLeadInTypes sameAsLeadIn /** the the lead out same as lead in Flag  */
            );
            /**Returns  the from point builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * FromPointBuilder
            (
            );
            /**Returns  the go home point builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::WedmPointDefinitionBuilder * GoHomePointBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
