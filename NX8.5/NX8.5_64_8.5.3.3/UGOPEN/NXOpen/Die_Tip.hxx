#ifndef NXOpen_DIE_TIP_HXX_INCLUDED
#define NXOpen_DIE_TIP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_Tip.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class Tip;
    }
    class Curve;
    class Direction;
    class Edge;
    namespace Features
    {
        class Feature;
    }
    class IProfile;
    class Point;
    class ScCollector;
    namespace Die
    {
        class _TipBuilder;
        class TipImpl;
        /** Represents a Tip feature.  <br> This class supports operations on a Tip feature, see TipBuilder for creation.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  Tip : public Features::Feature
        {
            private: TipImpl * m_tip_impl;
            private: friend class  _TipBuilder;
            protected: Tip();
            public: ~Tip();
            /** Creates a copy of the product data in die position. The product data is not visible upon creation. 
                    This method must be called before using the methods @link Die::Tip::DeleteDieData Die::Tip::DeleteDieData@endlink , 
                    @link Die::Tip::DisplayDieData Die::Tip::DisplayDieData@endlink , @link Die::Tip::UndisplayDieData Die::Tip::UndisplayDieData@endlink , 
                    @link Die::Tip::TransformDiePoint Die::Tip::TransformDiePoint@endlink , or @link Die::Tip::TransformDieDirection Die::Tip::TransformDieDirection@endlink . 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void CreateDieData
            (
                bool allTips /** Create the die position product data of all tips in the operation? */
            );
            /** Deletes the copy of the product data. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void DeleteDieData
            (
            );
            /** Makes the product data in die position visible. The display of the Tip feature is made invisible. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void DisplayDieData
            (
            );
            /** Makes the product data in die position invisible. The display of the Tip feature is made visible. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void UndisplayDieData
            (
            );
            /** Transforms the point from die position to product position. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void TransformDiePoint
            (
                NXOpen::Point * point /** Point to be transformed. */
            );
            /** Transforms the direction from die position to product position. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void TransformDieDirection
            (
                NXOpen::Direction * vector /** Direction to be transformed. */
            );
            /** Sets reference curves in the die tip feature. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetReferenceCurves
            (
                const std::vector<NXOpen::Curve *> & objects /** Curves to be added to the tip */
            );
            /** Maps the edges in the collector from die position to part position. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void MapCollectorToPart
            (
                NXOpen::ScCollector * collector /** collector */ 
            );
            /** Maps the edges in the collector from part position to die position. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void MapCollectorToDie
            (
                NXOpen::ScCollector * collector /** collector */ 
            );
            /** Maps the edge to find the part and die position entity, either can be a NULL. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void MapEdge
            (
                NXOpen::IProfile * inEdge /** in edge */ ,
                NXOpen::IProfile ** partEdge /** part edge */ ,
                NXOpen::IProfile ** dieEdge /** die edge */ 
            );
            /** Finds the hole edges that have not been processed yet.  @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: std::vector<NXOpen::Edge *> GetUnprocessedHoles
            (
            );
            /** Adds the input curves to the die data. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void AddToDieData
            (
                const std::vector<NXOpen::Curve *> & objects /** Curves to be added to the die data */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
