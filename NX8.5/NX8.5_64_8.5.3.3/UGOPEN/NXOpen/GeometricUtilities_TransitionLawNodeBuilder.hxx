#ifndef NXOpen_GEOMETRICUTILITIES_TRANSITIONLAWNODEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_TRANSITIONLAWNODEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_TransitionLawNodeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimWithValueBuilder.hxx>
#include <NXOpen/GeometricUtilities_TransitionLawNodeBuilder.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class TransitionLawNodeBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimWithValueBuilder;
    }
    namespace GeometricUtilities
    {
        class _TransitionLawNodeBuilderBuilder;
        class TransitionLawNodeBuilderImpl;
        /**
                Represents a law node with transition type.
                
                This class extends @link GeometricUtilities::OnPathDimWithValueBuilder GeometricUtilities::OnPathDimWithValueBuilder@endlink  such
                that apart from specifying a value at a location on spine, it allows specification of transition type.
                This class represents a law node in @link GeometricUtilities::MultiTransitionLawBuilder GeometricUtilities::MultiTransitionLawBuilder@endlink 
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  TransitionLawNodeBuilder : public GeometricUtilities::OnPathDimWithValueBuilder
        {
            /** Represents a transition type at a law node.
                        Transition type is a type of interpolation used to evaluate intermediate values from
                        one law node to the next law node. 
                        The transition is applied in the direction of the spine on which the law nodes reside.
                        Not all nodes support all types of transitions. Consult the referencing law class
                        documentation to see which transition types are supported by which law nodes.
                    */
            public: enum TransitionType
            {
                TransitionTypeUnknown/** No interpolation type */,
                TransitionTypeConstant/** Constant transition */,
                TransitionTypeLinear/** Linear transition */,
                TransitionTypeBlend/** Smooth blended transition */,
                TransitionTypeMinmax/** Minimum-Maximum type transition */
            };

            private: TransitionLawNodeBuilderImpl * m_transitionlawnodebuilder_impl;
            private: friend class  _TransitionLawNodeBuilderBuilder;
            protected: TransitionLawNodeBuilder();
            public: ~TransitionLawNodeBuilder();
            /**Returns  the transition type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::TransitionLawNodeBuilder::TransitionType Transition
            (
            );
            /**Sets  the transition type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetTransition
            (
                NXOpen::GeometricUtilities::TransitionLawNodeBuilder::TransitionType transition /** transition */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
