#ifndef NXOpen_DIE_DRAWBEADTAPERBUILDER_HXX_INCLUDED
#define NXOpen_DIE_DRAWBEADTAPERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DrawBeadTaperBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DrawBeadTaperBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class DrawBeadTaperBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace Die
    {
        class _DrawBeadTaperBuilderBuilder;
        class DrawBeadTaperBuilderImpl;
        /** Taper definition for the end of the Die Engineering Draw Bead. The taper
            can be defined at the start, end, or both ends of the draw bead and smoothly
            transition the bead back into the sheet body. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  DrawBeadTaperBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Taper types to define how the slope is created for the bead end. */
            public: enum TaperTypes
            {
                TaperTypesSpherical/** Create a spherical end based on a radius. */,
                TaperTypesWashout/** Create a slope based on the height and length desired. */,
                TaperTypesPoint/** Use the spherical method, but the radius is defined by a point location and distance to the end of the centerline. */
            };

            private: DrawBeadTaperBuilderImpl * m_drawbeadtaperbuilder_impl;
            private: friend class  _DrawBeadTaperBuilderBuilder;
            protected: DrawBeadTaperBuilder();
            public: ~DrawBeadTaperBuilder();
            /**Returns  the method to apply for defining the taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DrawBeadTaperBuilder::TaperTypes TaperType
            (
            );
            /**Sets  the method to apply for defining the taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTaperType
            (
                NXOpen::Die::DrawBeadTaperBuilder::TaperTypes taperType /** tapertype */ 
            );
            /**Returns  the expression containing the radius value for a spherical taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TaperRadius
            (
            );
            /**Returns  the expression containing the height value for a washout taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TaperWashoutHeight
            (
            );
            /**Returns  the expression containing the length value for a washout taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TaperWashoutLength
            (
            );
            /**Returns  the point used for defining the radius value of the spherical taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TaperPoint
            (
            );
            /**Sets  the point used for defining the radius value of the spherical taper. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTaperPoint
            (
                NXOpen::Point * taperPoint /** taperpoint */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
