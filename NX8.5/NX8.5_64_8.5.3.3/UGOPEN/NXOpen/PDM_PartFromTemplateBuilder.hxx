#ifndef NXOpen_PDM_PARTFROMTEMPLATEBUILDER_HXX_INCLUDED
#define NXOpen_PDM_PARTFROMTEMPLATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PartFromTemplateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_PartBuilder.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class PartFromTemplateBuilder;
    }
    class BasePart;
    namespace PDM
    {
        class PartBuilder;
    }
    namespace PDM
    {
        class PartFromTemplateBuilderImpl;
        /** This class provides the methods necessary to create a new part in NX Manager
            from a template part.
            
             <br> 
            The operation that this builder supports is equivalent to the file new operation which
            creates a new part from a template (or seed) part.
             <br> 

             <br> If the operation is successful, then the newly created part will be the display part. <br> 
            
             <br> This class is a singleton meaning only one instance of it can be exist at a time. <br> 
            
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  PartFromTemplateBuilder : public PDM::PartBuilder
        {
            private: PartFromTemplateBuilderImpl * m_partfromtemplatebuilder_impl;
            /// \cond NX_NO_DOC 
            public: explicit PartFromTemplateBuilder(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PartFromTemplateBuilder();
            /** Sets the seed part on which the new part will be based. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSeedPart
            (
                const NXString & seedName /** display name of the seed part. E.g. "Metric"   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the seed part on which the new part will be based. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetSeedPart
            (
                const char * seedName /** display name of the seed part. E.g. "Metric"   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates the new part that has been fully-specified by calling methods on this
                    builder. The new part will be set to display part after it is created.  @return  newly created part 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::BasePart * Commit
            (
            );
            /** Creates the new part that has been fully-specified by calling methods on this
                    builder. The caller specifies whether
                    the new part should be set as the display after it is created.  @return  newly created part 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::BasePart * Commit
            (
                bool setAsDisplayPart /** True means the new part will
                                set as the display part. False means that it will not. */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
