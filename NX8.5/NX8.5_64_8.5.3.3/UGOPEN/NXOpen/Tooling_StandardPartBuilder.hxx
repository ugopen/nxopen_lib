#ifndef NXOpen_TOOLING_STANDARDPARTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_STANDARDPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_StandardPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Tooling_StandardPartBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class StandardPartBuilder;
    }
    class Builder;
    class SelectNXObject;
    namespace Tooling
    {
        class _StandardPartBuilderBuilder;
        class StandardPartBuilderImpl;
        /** Represents a builder to be used to create Mold Wizard Standard Part.  <br> To create a new instance of this class, use @link Tooling::StandardPartCollection::CreateStandardPartBuilder  Tooling::StandardPartCollection::CreateStandardPartBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AssociativePosition </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ConceptDesign </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ReferenceSet </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        RenameComponents </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ShowInfoWindow </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        StandardPartEditType </td> <td> 
         
        AddInstance </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  StandardPartBuilder : public Builder
        {
            /** Represents the type to edit a standard part.  */
            public: enum EditType
            {
                EditTypeAddInstance/** add instance */ ,
                EditTypeNewComponent/** new component */ ,
                EditTypeModify/** modify */ 
            };

            /** Represents the reference set of the standard part when it is added to the assembly. */
            public: enum RefsetName
            {
                RefsetNameTrue/** true */ ,
                RefsetNameFalse/** false */ ,
                RefsetNameEntirePart/** entire part */ 
            };

            private: StandardPartBuilderImpl * m_standardpartbuilder_impl;
            private: friend class  _StandardPartBuilderBuilder;
            protected: StandardPartBuilder();
            public: ~StandardPartBuilder();
            /**Returns  the standard part component which is selected to be edited. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * StandardPartComponent
            (
            );
            /**Returns  the standard part edit type of processing the selected component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StandardPartBuilder::EditType StandardPartEditType
            (
            );
            /**Sets  the standard part edit type of processing the selected component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetStandardPartEditType
            (
                NXOpen::Tooling::StandardPartBuilder::EditType standardPartEditType /** standardpartedittype */ 
            );
            /**Returns  the flag to indicate whether to add concept symbols instead of real standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ConceptDesign
            (
            );
            /**Sets  the flag to indicate whether to add concept symbols instead of real standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetConceptDesign
            (
                bool conceptDesign /** conceptdesign */ 
            );
            /**Returns  the flag to indicate whether to bring up the Part Name Management dialog. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameComponents
            (
            );
            /**Sets  the flag to indicate whether to bring up the Part Name Management dialog. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetRenameComponents
            (
                bool renameComponents /** renamecomponents */ 
            );
            /**Returns  the flag to indicate whether to show the Information Window. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowInfoWindow
            (
            );
            /**Sets  the flag to indicate whether to show the Information Window. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetShowInfoWindow
            (
                bool showInfoWindow /** showinfowindow */ 
            );
            /** Ask help of the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Help
            (
            );
            /** Repositions the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Reposition
            (
            );
            /** Flips the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void Flip
            (
            );
            /** Removes the selected standard part component. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveComponent
            (
            );
            /**Returns  the postioning plane used to position a standard part. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * PostioningPlane
            (
            );
            /**Returns  the point pattern used to control how to standard parts. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * PointPattern
            (
            );
            /**Returns  the reference set currently used to add a new component to an assembly. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StandardPartBuilder::RefsetName ReferenceSet
            (
            );
            /**Sets  the reference set currently used to add a new component to an assembly. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetReferenceSet
            (
                NXOpen::Tooling::StandardPartBuilder::RefsetName referenceSet /** referenceset */ 
            );
            /**Returns  the flag to indicate whether to use the associative position method. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool AssociativePosition
            (
            );
            /**Sets  the flag to indicate whether to use the associative position method. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociativePosition
            (
                bool associativePosition /** associativeposition */ 
            );
            /** Edits the registering spread sheet file of the standard item selected in Reuse Member View. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void EditRegister
            (
            );
            /** Edits the data file of the standard item selected in Reuse Member View 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void EditDataBase
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
