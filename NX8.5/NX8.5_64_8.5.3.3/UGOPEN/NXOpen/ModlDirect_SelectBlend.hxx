#ifndef NXOpen_MODLDIRECT_SELECTBLEND_HXX_INCLUDED
#define NXOpen_MODLDIRECT_SELECTBLEND_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ModlDirect_SelectBlend.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/ModlDirect_SelectBlend.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_modldirect_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ModlDirect
    {
        class SelectBlend;
    }
    class Face;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class ScCollector;
    namespace ModlDirect
    {
        class _SelectBlendBuilder;
        class SelectBlendImpl;
        /**
            Represents a @link ModlDirect::SelectBlend ModlDirect::SelectBlend@endlink 
            Allows user to specify blend faces.
            
         <br>  Created in NX5.0.2.  <br>  
        */
        class NXOPENCPP_MODLDIRECTEXPORT  SelectBlend : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: SelectBlendImpl * m_selectblend_impl;
            private: friend class  _SelectBlendBuilder;
            protected: SelectBlend();
            public: ~SelectBlend();
            /**Returns  the blend faces collector. 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FaceCollector
            (
            );
            /** Auto regonize the adjacent blends of input base faces 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void RecognizeBlends
            (
                const std::vector<NXOpen::Face *> & baseFaces /** the base faces */,
                std::vector<NXOpen::Face *> & blends /** the adjacent blend faces */
            );
            /** Include the use selected blend face 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void IncludeBlend
            (
                NXOpen::Face * blendFace /** the blend face to include */
            );
            /** Exclude the user de-selected blend face 
             <br>  Created in NX5.0.2.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ExcludeBlend
            (
                NXOpen::Face * blendFace /** the blend face to exclude */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
