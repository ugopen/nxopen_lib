#ifndef NXOpen_PDM_SESSIONSETTINGS_HXX_INCLUDED
#define NXOpen_PDM_SESSIONSETTINGS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_SessionSettings.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class SessionSettings;
    }
    namespace PDM
    {
        class SessionSettingsImpl;
        /** Values for the settings that affect the current Teamcenter session. Any changes will only
                take effect when @link PDM::SessionSettings::Apply PDM::SessionSettings::Apply@endlink  is callsed. 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  SessionSettings : public TransientObject
        {
            private: SessionSettingsImpl * m_sessionsettings_impl;
            /// \cond NX_NO_DOC 
            public: explicit SessionSettings(void *ptr);
            /// \endcond 
            /**Returns  a flag indicating if the user has Teamcenter administator privileges. Some
                        settings can are only available to administrators, and will raise errors
                        if non-administrators try to access them.
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsAdministrator
            (
            );
            /** Gets the names of the Teamcenter groups to which the
                        user belongs. 
                     @return  the names of the groups 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetGroups
            (
            );
            /** Gets the names of the Teamcenter roles in which the
                        user may act, given the current group returned by @link PDM::SessionSettings::Group PDM::SessionSettings::Group@endlink .
                     @return  the names of the roles 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetRoles
            (
            );
            /** Gets the names of the Teamcenter volumes which the
                        user may use, given the current group returned by @link PDM::SessionSettings::Group PDM::SessionSettings::Group@endlink .
                     @return  the names of the volumes 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetVolumes
            (
            );
            /** Gets the names of the Teamcenter projects to which the user belongs also
                        the first entry of the returned projects list is always empty.
                     @return  the names of the projects 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetProjects
            (
            );
            /**Sets  the Teamcenter group in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetGroups PDM::SessionSettings::GetGroups@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGroup
            (
                const NXString & group /** group */ 
            );
            /**Sets  the Teamcenter group in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetGroups PDM::SessionSettings::GetGroups@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetGroup
            (
                const char * group /** group */ 
            );
            /**Returns  the Teamcenter group in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetGroups PDM::SessionSettings::GetGroups@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Group
            (
            );
            /**Sets  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetRoles PDM::SessionSettings::GetRoles@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRole
            (
                const NXString & role /** role */ 
            );
            /**Sets  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetRoles PDM::SessionSettings::GetRoles@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetRole
            (
                const char * role /** role */ 
            );
            /**Returns  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetRoles PDM::SessionSettings::GetRoles@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Role
            (
            );
            /**Sets  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetVolumes PDM::SessionSettings::GetVolumes@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVolume
            (
                const NXString & volume /** volume */ 
            );
            /**Sets  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetVolumes PDM::SessionSettings::GetVolumes@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetVolume
            (
                const char * volume /** volume */ 
            );
            /**Returns  the Teamcenter role in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetVolumes PDM::SessionSettings::GetVolumes@endlink 
                     
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Volume
            (
            );
            /**Sets  the Teamcenter project in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetProjects PDM::SessionSettings::GetProjects@endlink 
                     
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetProject
            (
                const NXString & project /** project */ 
            );
            /**Sets  the Teamcenter project in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetProjects PDM::SessionSettings::GetProjects@endlink 
                     
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetProject
            (
                const char * project /** project */ 
            );
            /**Returns  the Teamcenter project in which the user acts. Should be
                        one of those given by @link PDM::SessionSettings::GetProjects PDM::SessionSettings::GetProjects@endlink 
                     
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Project
            (
            );
            /**Sets  a flag controlling Teamcenter application logging 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetApplicationLogging
            (
                bool appLoggingOn /** app logging on */ 
            );
            /**Returns  a flag controlling Teamcenter application logging 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool ApplicationLogging
            (
            );
            /**Sets  a flag controlling Teamcenter journaling 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetJournaling
            (
                bool journalingOn /** journaling on */ 
            );
            /**Returns  a flag controlling Teamcenter journaling 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool Journaling
            (
            );
            /**Sets  a flag controlling Teamcenter administration logging. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAdministrationLogging
            (
                bool adminLoggingOn /** admin logging on */ 
            );
            /**Returns  a flag controlling Teamcenter administration logging. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool AdministrationLogging
            (
            );
            /**Sets  a flag controlling Teamcenter security logging. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSecurityLogging
            (
                bool securityLoggingOn /** security logging on */ 
            );
            /**Returns  a flag controlling Teamcenter security logging. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool SecurityLogging
            (
            );
            /**Sets  a flag controlling the Teamcenter administrator's bypass option. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAdministrationBypass
            (
                bool adminBypassOn /** admin bypass on */ 
            );
            /**Returns  a flag controlling the Teamcenter administrator's bypass option. Only available to administrators. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool AdministrationBypass
            (
            );
            /** Applies any changes to the settings 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void Apply
            (
            );
            /** Free resources associated with the instance. After this method
                        is called, it is illegal to use the object.  In .NET, this method
                        is automatically called when the object is deleted by the garbage
                        collector. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~SessionSettings();
            /** Dump the validation info .This API can be used to expose the current state from the 
                        UGMGR session, typically the information about the session,assembly,components,their states
                        etc. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void DumpValidationInfo
            (
                const NXString & logFileName /** log file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Dump the validation info .This API can be used to expose the current state from the 
                        UGMGR session, typically the information about the session,assembly,components,their states
                        etc. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void DumpValidationInfo
            (
                const char * logFileName /** log file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
