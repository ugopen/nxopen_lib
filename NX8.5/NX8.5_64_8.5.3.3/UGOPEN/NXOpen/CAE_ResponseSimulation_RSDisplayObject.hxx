#ifndef NXOpen_CAE_RESPONSESIMULATION_RSDISPLAYOBJECT_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_RSDISPLAYOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_RSDisplayObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_RSDisplayObject.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RSDisplayObject;
        }
    }
    class Expression;
    class NXObject;
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _RSDisplayObjectBuilder;
            class RSDisplayObjectImpl;
            /**  @brief  Represents a BC display attributes 

              
             <br>  Created in NX6.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  RSDisplayObject : public NXObject
            {
                private: RSDisplayObjectImpl * m_rsdisplayobject_impl;
                private: friend class  _RSDisplayObjectBuilder;
                protected: RSDisplayObject();
                public: ~RSDisplayObject();
                /**Returns  the true/false flag based on whether the name of the BC is
                            displayed in the graphics window 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool DisplayName
                (
                );
                /**Sets  the true/false flag based on whether the name of the BC is
                            displayed in the graphics window 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDisplayName
                (
                    bool nameFlag /** true when the name should be displayed, false otherwise */
                );
                /**Returns  the RS display scaling factor
                            this option specifies the scale of the graphic symbol relative to the size of the bounding box of the RS OBject.
                            scale -\> 0 
                         
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::Expression * Scale
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
