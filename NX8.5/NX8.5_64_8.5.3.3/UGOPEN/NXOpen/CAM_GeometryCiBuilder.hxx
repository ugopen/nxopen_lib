#ifndef NXOpen_CAM_GEOMETRYCIBUILDER_HXX_INCLUDED
#define NXOpen_CAM_GEOMETRYCIBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_GeometryCiBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_SpunOutlineGeom.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class GeometryCiBuilder;
    }
    namespace CAM
    {
        class CutVolumeGeom;
    }
    namespace CAM
    {
        class HoleBossGeom;
    }
    namespace CAM
    {
        class MultiBladeBaseGeometry;
    }
    namespace CAM
    {
        class MultiBladeSplittersGeometry;
    }
    namespace CAM
    {
        class SpunOutlineGeom;
    }
    class Plane;
    namespace CAM
    {
        class _GeometryCiBuilderBuilder;
        class GeometryCiBuilderImpl;
        /** Represents a geometry ci Builder 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  GeometryCiBuilder : public TaggedObject
        {
            private: GeometryCiBuilderImpl * m_geometrycibuilder_impl;
            private: friend class  _GeometryCiBuilderBuilder;
            protected: GeometryCiBuilder();
            public: ~GeometryCiBuilder();
            /**Returns  the auto wall selection 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutoWallSelection
            (
            );
            /**Sets  the auto wall selection 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAutoWallSelection
            (
                bool flag /** the auto wall selection */
            );
            /**Returns  the hub geometry 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::MultiBladeBaseGeometry * HubGeometry
            (
            );
            /**Returns  the shroud geometry 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::MultiBladeBaseGeometry * ShroudGeometry
            (
            );
            /**Returns  the blade geometry 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::MultiBladeBaseGeometry * BladeGeometry
            (
            );
            /**Returns  the blade blend geometry 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::MultiBladeBaseGeometry * BladeBlendGeometry
            (
            );
            /**Returns  the splitters geometry 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::MultiBladeSplittersGeometry * SplittersGeometry
            (
            );
            /**Returns  the floor plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * FloorPlane
            (
            );
            /**Sets  the floor plane 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFloorPlane
            (
                NXOpen::Plane * floorPlane /** the floor plane */
            );
            /**Returns  the hole or boss geometry 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::HoleBossGeom * HoleBossGeom
            (
            );
            /**Returns  the cut volume geometry 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CutVolumeGeom * CutVolumeGeom
            (
            );
            /**Returns  the spun outline for part
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::SpunOutlineGeom * PartSpunOutline
            (
            );
            /**Returns  the spun outline for blank
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::SpunOutlineGeom * BlankSpunOutline
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
