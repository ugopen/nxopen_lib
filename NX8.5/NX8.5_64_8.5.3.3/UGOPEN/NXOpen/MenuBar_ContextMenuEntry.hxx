#ifndef NXOpen_MENUBAR_CONTEXTMENUENTRY_HXX_INCLUDED
#define NXOpen_MENUBAR_CONTEXTMENUENTRY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MenuBar_ContextMenuEntry.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MenuBar
    {
        class ContextMenuEntry;
    }
    namespace MenuBar
    {
    }
    namespace MenuBar
    {
        class ContextMenuEntryImpl;
        /** Represents an entry on a context menu. 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  ContextMenuEntry : public TransientObject
        {
            /** Specifies the type of the menu entry. */
            public: enum Type
            {
                TypeSubmenu/** Has an attached menu structure containing more entries. */,
                TypePushButton/** Has a command that is run when this entry is activated. */,
                TypeToggleButton/** Displays an On/Off state. */,
                TypeSeparator/** A visual divider between sections of the menu. */
            };

            private: ContextMenuEntryImpl * m_contextmenuentry_impl;
            /// \cond NX_NO_DOC 
            public: explicit ContextMenuEntry(void *ptr);
            /// \endcond 
            /**Returns  the type of this menu entry. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MenuBar::ContextMenuEntry::Type EntryType
            (
            );
            /**Returns  the name of this menu entry. 
                    
                        Some entries on the context menu may correspond to buttons on the menu bar.
                        For these entries, the name that is returned is the name of that 
                        @link MenuBar::MenuButton MenuBar::MenuButton@endlink  object.
                        
                        For all other entries which do not correspond to a menu bar button, the
                        name that is returned has no specific meaning. However, for any individual 
                        action within any specific context menu, the name that is assigned to
                        that action will not change.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Returns  the label of this menu entry. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );
            /**Returns  true if this entry is hidden on the menu. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsHidden
            (
            );
            /**Returns  true if the command corresponding to this entry can be run. 
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsSensitive
            (
            );
            /**Returns  true if this entry is the default action for the menu. A menu entry is marked as
                        the default for the menu when it corresponds to the double-click 
                        action.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsDefault
            (
            );
            /** Frees the object from memory.  After this method is called,
                        it is illegal to use the object.  In .NET, this method is automatically
                        called when the object is deleted by the garbage collector. 
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ContextMenuEntry();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
