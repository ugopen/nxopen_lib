#ifndef NXOpen_CAM_SPRINGPASSES_HXX_INCLUDED
#define NXOpen_CAM_SPRINGPASSES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SpringPasses.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_SpringPasses.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class SpringPasses;
    }
    namespace CAM
    {
        class _SpringPassesBuilder;
        class SpringPassesImpl;
        /** Represents a spring passes 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  SpringPasses : public TaggedObject
        {
            /** the alternate spring passes options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum Types
            {
                TypesNone/** Alternate Spring Passes: None */,
                TypesMaintain/** Alternate Spring Passes: Maintain */,
                TypesAlternate/** Alternate Spring Passes: Alternate */
            };

            private: SpringPassesImpl * m_springpasses_impl;
            private: friend class  _SpringPassesBuilder;
            protected: SpringPasses();
            public: ~SpringPasses();
            /**Returns  the number of spring passes 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int Number
            (
            );
            /**Sets  the number of spring passes 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumber
            (
                int springPasses /** the number of spring passes */
            );
            /**Returns  the type of spring passes 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SpringPasses::Types Type
            (
            );
            /**Sets  the type of spring passes 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::SpringPasses::Types alternateSpringPassesMode /** the type of spring passes */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
