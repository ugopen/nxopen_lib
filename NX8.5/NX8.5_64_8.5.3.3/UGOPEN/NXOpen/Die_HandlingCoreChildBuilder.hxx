#ifndef NXOpen_DIE_HANDLINGCORECHILDBUILDER_HXX_INCLUDED
#define NXOpen_DIE_HANDLINGCORECHILDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_HandlingCoreChildBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class HandlingCoreChildBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ILocation;
    class ISurface;
    namespace Die
    {
        class _HandlingCoreChildBuilderBuilder;
        class HandlingCoreChildBuilderImpl;
        /** Represents a Die Handling Core Child sub feature.  <br> This sub feature is created via the main feature builder.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  HandlingCoreChildBuilder : public Features::FeatureBuilder
        {
            private: HandlingCoreChildBuilderImpl * m_handlingcorechildbuilder_impl;
            private: friend class  _HandlingCoreChildBuilderBuilder;
            protected: HandlingCoreChildBuilder();
            public: ~HandlingCoreChildBuilder();
            /**Sets  the center of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCenter
            (
                NXOpen::ILocation * center /** center */ 
            );
            /**Returns  the center of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::ILocation * Center
            (
            );
            /**Sets  the core orientation of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCoreOrientation
            (
                NXOpen::ISurface * coreOrientation /** core orientation */ 
            );
            /**Returns  the core orientation of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::ISurface * CoreOrientation
            (
            );
            /**Sets  the height of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetHeight
            (
                double height /** height */ 
            );
            /**Returns  the height of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Height
            (
            );
            /**Sets  the width of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetWidth
            (
                double width /** width */ 
            );
            /**Returns  the width of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Width
            (
            );
            /**Sets  the clearance of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetClearance
            (
                double clearance /** clearance */ 
            );
            /**Returns  the clearance of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Clearance
            (
            );
            /**Sets  the depth of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDepth
            (
                double depth /** depth */ 
            );
            /**Returns  the depth of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: double Depth
            (
            );
            /**Sets  the value to reverse the orientation of the core plane,
                 if true the handling core orientation normal will be reversed,
                 if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReverseOrientation
            (
                bool reverseOrientation /** reverse orientation */ 
            );
            /**Returns  the value to reverse the orientation of the core plane,
                 if true the handling core orientation normal will be reversed,
                 if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool ReverseOrientation
            (
            );
            /**Sets  the design status of the handling core, if true the handling core will be built into the model, if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool designStatus /** design status */ 
            );
            /**Returns  the design status of the handling core, if true the handling core will be built into the model, if false it will not. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of the handling core. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of the handling core, if true input data to the handling core will be displayed, 
                    if false the input data will not be displayed. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool displayStatus /** display status */ 
            );
            /**Returns  the display status of the handling core, if true input data to the handling core will be displayed, 
                    if false the input data will not be displayed. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
            /** Translates the center of the die handling core by the specified amount. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void TranslateCenter
            (
                const NXOpen::Vector3d & translateDist /** A scaled vector indicating the distance to translate */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
