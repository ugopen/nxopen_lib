#ifndef NXOpen_DRAWINGS_MULTIPLEVIEWPLACEMENTBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_MULTIPLEVIEWPLACEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_MultipleViewPlacementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_MultipleViewPlacementBuilder.hxx>
#include <NXOpen/Drawings_ViewPlacementBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class MultipleViewPlacementBuilder;
    }
    namespace Drawings
    {
        class ViewPlacementBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drawings
    {
        class _MultipleViewPlacementBuilderBuilder;
        class MultipleViewPlacementBuilderImpl;
        /** This builder allows the user to create a Multiple View Placement 
         <br>  Created in NX6.0.2.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  MultipleViewPlacementBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** The placement option type */
            public: enum Option
            {
                OptionCenter/** By Center */,
                OptionCorners/** By Corners */
            };

            private: MultipleViewPlacementBuilderImpl * m_multipleviewplacementbuilder_impl;
            private: friend class  _MultipleViewPlacementBuilderBuilder;
            protected: MultipleViewPlacementBuilder();
            public: ~MultipleViewPlacementBuilder();
            /**Returns  the placement option 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::MultipleViewPlacementBuilder::Option OptionType
            (
            );
            /**Sets  the placement option 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: void SetOptionType
            (
                NXOpen::Drawings::MultipleViewPlacementBuilder::Option option /** option */ 
            );
            /**Returns  the view placement block for the center option 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewPlacementBuilder * ViewPlacementCenter
            (
            );
            /**Returns  the view placement block for the first corner 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_drafting_plus ("DraftingPlus") */
            public: NXOpen::Drawings::ViewPlacementBuilder * ViewPlacementFirstCorner
            (
            );
            /**Returns  the view placement block for the second corner 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_drafting_plus ("DraftingPlus") */
            public: NXOpen::Drawings::ViewPlacementBuilder * ViewPlacementSecondCorner
            (
            );
            /**Returns  the associative alignment toggle 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: bool AssociativeAlignment
            (
            );
            /**Sets  the associative alignment toggle 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAssociativeAlignment
            (
                bool associative /** associative */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
