#ifndef NXOpen_FEATURES_SHIPDESIGN_MANUFACTURINGSTOCKBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_MANUFACTURINGSTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ManufacturingStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_ShipDesign_ManufacturingStockBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ManufacturingStockBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ManufacturingStockBuilderBuilder;
            class ManufacturingStockBuilderImpl;
            /**
                    Represents a @link Features::ShipDesign::ManufacturingStockBuilder Features::ShipDesign::ManufacturingStockBuilder@endlink  builder. 
                    It is used to manage the data contained in the ship manufacturing stock.
                     <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ManufacturingStockBuilder : public Builder
            {
                /** the data source from which the intial manufacturing data will be read. */
                public: enum StockDataSourceType
                {
                    StockDataSourceTypeNone/** Set to None if we edit this feature */,
                    StockDataSourceTypeCustomerDefault/** Initial data will be read from the customer default */
                };

                /** the check box status. */
                public: enum CheckBoxStatus
                {
                    CheckBoxStatusUnchecked/** Unchecked */,
                    CheckBoxStatusChecked/** Checked */,
                    CheckBoxStatusRequired/** Checked and Cannot be modified */
                };

                /** the object to which the manufacturing attributes will be written. */
                public: enum ObjectType
                {
                    ObjectTypeNone/** None */,
                    ObjectTypeEdge/** Edge */,
                    ObjectTypeFace/** Face */,
                    ObjectTypeBody/** Body */,
                    ObjectTypeFeature/** Feature */,
                    ObjectTypePart/** Part */,
                    ObjectTypeNum/** Total Object Num */
                };

                /** the NX attribute locked status. */
                public: enum LockedStatus
                {
                    LockedStatusUnlocked/** The NX attribute is set with unlocked status. */,
                    LockedStatusLocked/** The NX attribute is set with locked status. */
                };

                private: ManufacturingStockBuilderImpl * m_manufacturingstockbuilder_impl;
                private: friend class  _ManufacturingStockBuilderBuilder;
                protected: ManufacturingStockBuilder();
                public: ~ManufacturingStockBuilder();
                /**Returns  the data source from which the initial data is read. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ManufacturingStockBuilder::StockDataSourceType DataSourceType
                (
                );
                /**Sets  the data source from which the initial data is read. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetDataSourceType
                (
                    NXOpen::Features::ShipDesign::ManufacturingStockBuilder::StockDataSourceType dataSourceType /** datasourcetype */ 
                );
                /**Returns  the data source from which the intial data is read. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString DataSource
                (
                );
                /**Sets  the data source from which the intial data is read. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetDataSource
                (
                    const NXString & dataSource /** datasource */ 
                );
                /**Sets  the data source from which the intial data is read. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetDataSource
                (
                    const char * dataSource /** datasource */ 
                );
                /** Edits data item. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void EditDataItem
                (
                    const NXString & name /** Item name */,
                    NXOpen::Features::ShipDesign::ManufacturingStockBuilder::CheckBoxStatus eCheckBoxStatus /** New check box status. */,
                    const NXString & valueNew /** New Value */
                );
                /** Edits data item. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void EditDataItem
                (
                    const char * name /** Item name */,
                    NXOpen::Features::ShipDesign::ManufacturingStockBuilder::CheckBoxStatus eCheckBoxStatus /** New check box status. */,
                    const char * valueNew /** New Value */
                );
                /** Resets the builder data from the data source. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void InitializeDataFromDataSource
                (
                    NXOpen::Features::ShipDesign::ManufacturingStockBuilder::StockDataSourceType eDataSourceType /** Data source type. */,
                    const NXString & dataSource /** Data source. */
                );
                /** Resets the builder data from the data source. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void InitializeDataFromDataSource
                (
                    NXOpen::Features::ShipDesign::ManufacturingStockBuilder::StockDataSourceType eDataSourceType /** Data source type. */,
                    const char * dataSource /** Data source. */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
