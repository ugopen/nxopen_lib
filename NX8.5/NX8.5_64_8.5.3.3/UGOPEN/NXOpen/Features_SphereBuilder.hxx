#ifndef NXOpen_FEATURES_SPHEREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SPHEREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SphereBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SphereBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class SphereBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class Point;
    class SelectICurve;
    namespace Features
    {
        class _SphereBuilderBuilder;
        class SphereBuilderImpl;
        /**
            Represents a @link Features::Sphere Features::Sphere@endlink  builder.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateSphereBuilder  Features::FeatureCollection::CreateSphereBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Diameter.Value </td> <td> 
         
        100 (millimeters part), 4 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  SphereBuilder : public Features::FeatureBuilder
        {
            /** Represents the sphere types. */
            public: enum Types
            {
                TypesCenterPointAndDiameter/** Represents the type of sphere created by providing center point and diameter. */,
                TypesArc/** Represents the type of sphere created by providing arc. */
            };

            private: SphereBuilderImpl * m_spherebuilder_impl;
            private: friend class  _SphereBuilderBuilder;
            protected: SphereBuilder();
            public: ~SphereBuilder();
            /**Returns  the center point of the Sphere. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * CenterPoint
            (
            );
            /**Sets  the center point of the Sphere. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCenterPoint
            (
                NXOpen::Point * centerPoint /** centerpoint */ 
            );
            /**Returns  the diameter of the Sphere. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Diameter
            (
            );
            /**Returns  the selected arc associated with the Sphere. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectICurve * Arc
            (
            );
            /**Returns  the boolean operation associated with the Sphere. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanOption
            (
            );
            /**Returns  the sphere type represented by @link Features::SphereBuilder::Types Features::SphereBuilder::Types@endlink  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SphereBuilder::Types Type
            (
            );
            /**Sets  the sphere type represented by @link Features::SphereBuilder::Types Features::SphereBuilder::Types@endlink  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::SphereBuilder::Types type /** type */ 
            );
            /**Returns  the option to keep associativity of the sphere center point
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ParentAssociativity
            (
            );
            /**Sets  the option to keep associativity of the sphere center point
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), solid_modeling ("SOLIDS MODELING") */
            public: void SetParentAssociativity
            (
                bool parentAssociativity /** parentassociativity */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
