#ifndef NXOpen_WELD_WELDBEADPATHBUILDER_HXX_INCLUDED
#define NXOpen_WELD_WELDBEADPATHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_WeldBeadPathBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Weld_WeldBeadPathBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class WeldBeadPathBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class Section;
    namespace Weld
    {
        class _WeldBeadPathBuilderBuilder;
        class WeldBeadPathBuilderImpl;
        /** Represents the path the bead shape will be swept along.  <br> To create a new instance of this class, use @link Weld::WeldBeadBuilder::NewPath  Weld::WeldBeadBuilder::NewPath @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  WeldBeadPathBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Settings to indicate the desired offset method. */
            public: enum OffsetMethodType
            {
                OffsetMethodTypeInFace/** offset in selected primary faces */,
                OffsetMethodTypeCenterline/** centerline of overlapping sheets */
            };

            private: WeldBeadPathBuilderImpl * m_weldbeadpathbuilder_impl;
            private: friend class  _WeldBeadPathBuilderBuilder;
            protected: WeldBeadPathBuilder();
            public: ~WeldBeadPathBuilder();
            /**Returns  the section defining the path. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * PathSection
            (
            );
            /**Returns  the location at which to start the sweep of the bead shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * StartPath
            (
            );
            /**Returns  the location at which to end the sweep of the bead shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * EndPath
            (
            );
            /**Returns  the indication if the sweep should be created from the edge location to the start location. True
                        indicates the sweep will be created from the end to the start location of the path, false
                        indicates the sweep will be from the start to the end location of the path. This option is
                        only used if the path section is closed.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool CreateEndToStart
            (
            );
            /**Sets  the indication if the sweep should be created from the edge location to the start location. True
                        indicates the sweep will be created from the end to the start location of the path, false
                        indicates the sweep will be from the start to the end location of the path. This option is
                        only used if the path section is closed.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetCreateEndToStart
            (
                bool createEndToStart /** createendtostart */ 
            );
            /**Returns  the desired path offset method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldBeadPathBuilder::OffsetMethodType OffsetMethod
            (
            );
            /**Sets  the desired path offset method. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetOffsetMethod
            (
                NXOpen::Weld::WeldBeadPathBuilder::OffsetMethodType offsetMethod /** offsetmethod */ 
            );
            /**Returns  the expression containing the distance to offset the path normal to the face. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetInFace
            (
            );
            /**Returns  the reverse the direction to offset the path section. The update path method 
                        provides the information for the default directions. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseOffsetDirection
            (
            );
            /**Sets  the reverse the direction to offset the path section. The update path method 
                        provides the information for the default directions. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetReverseOffsetDirection
            (
                bool reverseOffsetDirection /** reverseoffsetdirection */ 
            );
            /**Returns  the offset along normal 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OffsetAlongNormal
            (
            );
            /** Computes the preview path, and evaluation information for indicating desired face side of the preview path. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void UpdatePath
            (
                bool* pointFound /** Point and evaluation results are valid */,
                NXOpen::Point3d* evaluationPoint /** Point that reference vectors are computed at*/,
                NXOpen::Vector3d* pathTangent /** Tangent to path at evaluationPoint */,
                NXOpen::Vector3d* faceNormalWithFin /** Normal if path is in direction of parasolid fin */,
                NXOpen::Vector3d* faceNormalOppositeFin /** Normal if path is opposite direction of parasolid fin.*/
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
