#ifndef NXOpen_ROUTING_ROUTINGSYSTEM_HXX_INCLUDED
#define NXOpen_ROUTING_ROUTINGSYSTEM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_RoutingSystem.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class RoutingSystem;
    }
    class NXObject;
    namespace Routing
    {
        class Run;
    }
    namespace Routing
    {
        class _RoutingSystemBuilder;
        class RoutingSystemImpl;
        /** Routing object is a collection of @link Run Run@endlink  objects.  <br> To obtain an instance of this class use @link Routing::RoutingSystem Routing::RoutingSystem@endlink   <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  RoutingSystem : public NXObject
        {
            private: RoutingSystemImpl * m_routingsystem_impl;
            private: friend class  _RoutingSystemBuilder;
            protected: RoutingSystem();
            public: ~RoutingSystem();
            /** Returns name of routing.  @return  Name of given routing 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXString GetId
            (
            );
            /** Sets name of routing. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetId
            (
                const NXString & name /** Name given to routing */
            );
            /** Sets name of routing. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            void SetId
            (
                const char * name /** Name given to routing */
            );
            /** Retrieves all @link Run Run@endlink  objects in RoutingSystem  @return  Runs belonging to the RoutingSytem 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Routing::Run *> GetRuns
            (
            );
            /** Adds @link Run Run@endlink  objects to a RoutingSystem 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void AddRuns
            (
                const std::vector<NXOpen::Routing::Run *> & runs /** Runs to add to the RoutingSytem */
            );
            /** Removes @link Run Run@endlink  objects from a RoutingSystem. Only removes
                        Run from the RoutingSystem, does not remove the Run definition 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void RemoveRuns
            (
                const std::vector<NXOpen::Routing::Run *> & runs /** Runs to remove from the RoutingSytem */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
