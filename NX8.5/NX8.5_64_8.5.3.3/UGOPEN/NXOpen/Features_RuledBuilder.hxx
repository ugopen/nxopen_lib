#ifndef NXOpen_FEATURES_RULEDBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_RULEDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RuledBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_RuledBuilder.hxx>
#include <NXOpen/GeometricUtilities_AlignmentMethodBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RuledBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class AlignmentMethodBuilder;
    }
    namespace GeometricUtilities
    {
        class FeatureOptions;
    }
    class Section;
    namespace Features
    {
        class _RuledBuilderBuilder;
        class RuledBuilderImpl;
        /**
            Represents a @link Features::Ruled Features::Ruled@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateRuledBuilder  Features::FeatureCollection::CreateRuledBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AlignmentMethod.AlignType </td> <td> 
         
        Parameter </td> </tr> 

        <tr><td> 
         
        IsShapePreserved </td> <td> 
         
        True </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RuledBuilder : public Features::FeatureBuilder
        {
            private: RuledBuilderImpl * m_ruledbuilder_impl;
            private: friend class  _RuledBuilderBuilder;
            protected: RuledBuilder();
            public: ~RuledBuilder();
            /**Returns  the first section 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::Section * FirstSection
            (
            );
            /**Sets  the first section 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: void SetFirstSection
            (
                NXOpen::Section * section /** section */ 
            );
            /**Returns  the second section 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::Section * SecondSection
            (
            );
            /**Sets  the second section 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: void SetSecondSection
            (
                NXOpen::Section * section /** section */ 
            );
            /**Returns  the alignment method 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::GeometricUtilities::AlignmentMethodBuilder * AlignmentMethod
            (
            );
            /**Returns  the preserve shape flag. When preserve shape is used, the input
                    curves will not be approximated in constructing the ruled
                    surface. Only Parameter and By Points alignment options are
                    allowed if preserve shape is used. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: bool IsShapePreserved
            (
            );
            /**Sets  the preserve shape flag. When preserve shape is used, the input
                    curves will not be approximated in constructing the ruled
                    surface. Only Parameter and By Points alignment options are
                    allowed if preserve shape is used. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: void SetShapePreserved
            (
                bool isShapePreserved /** isshapepreserved */ 
            );
            /**Returns  the position tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: double PositionTolerance
            (
            );
            /**Sets  the position tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING"), nx_freeform_1 ("basic freeform modeling") */
            public: void SetPositionTolerance
            (
                double positionTolerance /** positiontolerance */ 
            );
            /**Returns  the body type options 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: NXOpen::GeometricUtilities::FeatureOptions * BodyPreference
            (
            );
            /**Sets  the body type options 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR nx_freeform_1 ("basic freeform modeling") */
            public: void SetBodyPreference
            (
                NXOpen::GeometricUtilities::FeatureOptions * featureOptions /** featureoptions */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
