#ifndef NXOpen_CAM_DMSURFBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DMSURFBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DmSurfBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class DmSurfBuilder;
    }
    namespace CAM
    {
        class CutPatternBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class StepoverBuilder;
    }
    namespace CAM
    {
        class SurfaceDriveGeometry;
    }
    namespace CAM
    {
        class _DmSurfBuilderBuilder;
        class DmSurfBuilderImpl;
        /** Represents a DmSurfBuilder 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  DmSurfBuilder : public TaggedObject
        {
            /** Available types for SDM: Tool Position Type */
            public: enum ToolPositionType
            {
                ToolPositionTypeOn/**On*/,
                ToolPositionTypeTanto/**Tanto*/
            };

            /** SDM: Cut Method in scop, cut pattern  */
            public: enum DmSurfCutPatternType
            {
                DmSurfCutPatternTypeFollowPeriphery/**None*/,
                DmSurfCutPatternTypeSep1/**Warning*/,
                DmSurfCutPatternTypeParallelLines/**Skip*/,
                DmSurfCutPatternTypeSep2/**Retract*/,
                DmSurfCutPatternTypeHelical/**Retract*/
            };

            /** SDM: Cut Method in scop, cut traversal */
            public: enum DmSurfCutTraversalType
            {
                DmSurfCutTraversalTypeZigZag/**Zig-Zag*/,
                DmSurfCutTraversalTypeZigZagLift/**Zig-Zag with Lift*/,
                DmSurfCutTraversalTypeZig/**Zig*/
            };

            /** Surface Drive method/Gouge Check in scop  */
            public: enum GougeActionType
            {
                GougeActionTypeNone/**None*/,
                GougeActionTypeWarning/**Warning*/,
                GougeActionTypeSkip/**Skip*/,
                GougeActionTypeRetract/**Retract*/
            };

            /** Available types for SDM: Cut Step*/
            public: enum DmSurfCutStepType
            {
                DmSurfCutStepTypeTolerance/**Tolerances*/,
                DmSurfCutStepTypePoints/**Number*/
            };

            /** Available types for SDM: Cut Area*/
            public: enum DmSurfCutAreaType
            {
                DmSurfCutAreaTypeSurfacePercent/**Surface %*/,
                DmSurfCutAreaTypeDiagonalPoints/**Diagonal Points*/
            };

            /** Available types for Flip Material, SDM: Select Cut Direction */
            public: enum MatSideType
            {
                MatSideTypeSame/**same*/,
                MatSideTypeOpp/**opp*/
            };

            /** Available types for Cut Direction */
            public: enum CutDirection
            {
                CutDirectionCorner1U = 1/**Corner 1 U direction*/,
                CutDirectionCorner1V/**Corner 1 V direction*/,
                CutDirectionCorner2U/**Corner 2 U direction*/,
                CutDirectionCorner2V/**Corner 2 V direction*/,
                CutDirectionCorner3U/**Corner 3 U direction*/,
                CutDirectionCorner3V/**Corner 3 V direction*/,
                CutDirectionCorner4U/**Corner 4 U direction*/,
                CutDirectionCorner4V/**Corner 4 V direction*/
            };

            private: DmSurfBuilderImpl * m_dmsurfbuilder_impl;
            private: friend class  _DmSurfBuilderBuilder;
            protected: DmSurfBuilder();
            public: ~DmSurfBuilder();
            /**Returns the builder of Surface Stock (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StockDriveBuilder
            (
            );
            /**Returns  the SDM: Tool Position
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::ToolPositionType DmSurfToolPos
            (
            );
            /**Sets  the SDM: Tool Position
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfToolPos
            (
                NXOpen::CAM::DmSurfBuilder::ToolPositionType dmSurfToolPos /** the value of Tool Position */
            );
            /**Returns  the SDM: Cut Arear
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutAreaType DmSurfCutArea
            (
            );
            /**Sets  the SDM: Cut Arear
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutArea
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutAreaType dmSurfCutArea /** the value of Stepover */
            );
            /**Returns  the Pattern  SDM: Cut Method
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutPatternType DmSurfCutPattern
            (
            );
            /**Sets  the Pattern  SDM: Cut Method
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutPattern
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutPatternType dmSurfCutPattern /** the value of Pattern */
            );
            /**Returns  the Cut Type  SDM: Cut Method
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutTraversalType DmSurfCutTraversal
            (
            );
            /**Sets  the Cut Type  SDM: Cut Method
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutTraversal
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutTraversalType dmSurfCutTraversal /** the value of Cut Type */
            );
            /**Returns  the SDM: Cut Step
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutStepType DmSurfCutStep
            (
            );
            /**Sets  the SDM: Cut Step
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutStep
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutStepType dmSurfCutStep /** the value of Cut Step */
            );
            /**Returns  the  builder of SDM: Cut Step Intol 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepIntolBuilder
            (
            );
            /**Returns  the  builder of SDM: Cut Step Outol 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepOuttolBuilder
            (
            );
            /**Returns  the  First Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int DmSurfCutStepFirstCut
            (
            );
            /**Sets  the  First Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutStepFirstCut
            (
                int dmSurfCutStepFirstCut /** the first cut value */
            );
            /**Returns  the  Second Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int DmSurfCutStepSecondCut
            (
            );
            /**Sets  the  Second Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutStepSecondCut
            (
                int dmSurfCutStepSecondCut /** the second cut value */
            );
            /**Returns  the Third Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int DmSurfCutStepThirdCut
            (
            );
            /**Sets  the Third Cut, SDM: Cut Step 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfCutStepThirdCut
            (
                int dmSurfCutStepThirdCut /** the third cut value */
            );
            /**Returns  the builder of stepover 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::StepoverBuilder * StepoverBuilder
            (
            );
            /**Returns  the Surface Drive method/Gouge Check
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::GougeActionType DmSurfGouge
            (
            );
            /**Sets  the Surface Drive method/Gouge Check
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDmSurfGouge
            (
                NXOpen::CAM::DmSurfBuilder::GougeActionType dmSurfGouge /** the value of Gouge Check */
            );
            /**Returns  the cut pattern builder 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutPatternBuilder * CutPatternBuilder
            (
            );
            /**Returns  the drive geometry 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::SurfaceDriveGeometry * DriveGeometry
            (
            );
            /** Set the cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutDirection
            (
                NXOpen::CAM::DmSurfBuilder::CutDirection cutDirection /** the value of cut direction */
            );
            /** Get the cut direction  @return  the value of cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::CutDirection GetCutDirection
            (
            );
            /** Set the start first 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageStartFirst
            (
                double dValue /** the value of start first */
            );
            /** Get the start first  @return  the value of start first 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageStartFirst
            (
            );
            /** Set the end first 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageEndFirst
            (
                double dValue /** the value of end first */
            );
            /** Get the end first  @return  the value of end first 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageEndFirst
            (
            );
            /** Set the start step 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageStartStep
            (
                double dValue /** the value of start step */
            );
            /** Get the start step  @return  the value of start step 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageStartStep
            (
            );
            /** Set the end step 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageEndStep
            (
                double dValue /** the value of end step */
            );
            /** Get the end step  @return  the value of end step 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageEndStep
            (
            );
            /** Set the start last 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageStartLast
            (
                double dValue /** the value of start last */
            );
            /** Get the start last  @return  the value of start last 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageStartLast
            (
            );
            /** Set the end last 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfacePercentageEndLast
            (
                double dValue /** the value of end last */
            );
            /** Get the end last  @return  the value of end last 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double GetSurfacePercentageEndLast
            (
            );
            /** The method to flip material side 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void FlipMaterial
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
