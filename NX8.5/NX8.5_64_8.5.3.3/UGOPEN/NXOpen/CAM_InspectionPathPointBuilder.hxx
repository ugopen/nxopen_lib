#ifndef NXOpen_CAM_INSPECTIONPATHPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONPATHPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionPathPointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InspectionPathPointBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionPathPointBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _InspectionPathPointBuilderBuilder;
        class InspectionPathPointBuilderImpl;
        /** Represents an inspection path point builder 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionPathPointBuilder : public TaggedObject
        {
            private: InspectionPathPointBuilderImpl * m_inspectionpathpointbuilder_impl;
            private: friend class  _InspectionPathPointBuilderBuilder;
            protected: InspectionPathPointBuilder();
            public: ~InspectionPathPointBuilder();
            /** Get the values of an existing path point 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void GetPointData
            (
                int index /** the index of the path point */,
                NXOpen::NXObject ** point /** the selected point */,
                double* angleA /** the A angle */,
                double* angleB /** the B angle */
            );
            /** Create a new path point, name changed if not unique 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointData
            (
                int index /** the index after which the new path point will be added */,
                NXOpen::NXObject * point /** the new path point */,
                double angleA /** the A angle */,
                double angleB /** the B angle */
            );
            /** Modify an existing path point, name changed if not unique 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void ModifyData
            (
                int index /** the index of the path point to modify */,
                NXOpen::NXObject * point /** the selected point */,
                double angleA /** the A angle */,
                double angleB /** the B angle */
            );
            /** Delete an existing path point 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void Delete
            (
                int index /** the index of the path point to delete */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
