#ifndef NXOpen_TOOLING_TOOLINGSESSION_HXX_INCLUDED
#define NXOpen_TOOLING_TOOLINGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ToolingSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Tooling_CloneObject.hxx>
#include <NXOpen/Tooling_SpreadsheetData.hxx>
#include <NXOpen/Tooling_ToolingManager.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ToolingSession;
    }
    class Session;
    namespace Tooling
    {
        class CloneObject;
    }
    namespace Tooling
    {
        class SpreadsheetData;
    }
    namespace Tooling
    {
        class ToolingSessionImpl;
        /** Represents Tooling session  <br> To obtain an instance of this class, refer to @link Session  Session @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ToolingSession
        {
            private: ToolingSessionImpl * m_toolingsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ToolingSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ToolingSession();
            /** Create Tooling.SpreadsheetData object.  @return  the new @link Tooling::SpreadsheetData Tooling::SpreadsheetData@endlink  instance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SpreadsheetData * CreateSpreadsheetData
            (
            );
            /** Creates the clone operation object  @return  the new @link Tooling::CloneObject Tooling::CloneObject@endlink  instance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::CloneObject * CreateCloneObject
            (
                NXOpen::Tooling::ToolingApplication applicationType /** Application type to determine the clone settings */,
                NXOpen::Tooling::ToolingCloneaction cloneActionType /** Clone action type */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
