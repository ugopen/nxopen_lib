#ifndef NXOpen_UISTYLER_REALITEM_HXX_INCLUDED
#define NXOpen_UISTYLER_REALITEM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UIStyler_RealItem.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/UIStyler_StylerItem.hxx>
#include <NXOpen/UIStyler_StylerItem.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace UIStyler
    {
        class RealItem;
    }
    namespace UIStyler
    {
        class StylerEvent;
    }
    namespace UIStyler
    {
        class StylerItem;
    }
    namespace UIStyler
    {
        class RealItemImpl;
        /** Represents a Real for UI Styler 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  RealItem : public UIStyler::StylerItem
        {
            public: /** Called when a dialog user enters a valid real value and presses Return.  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback1<NXOpen::UIStyler::DialogState, NXOpen::UIStyler::StylerEvent *> Activate;
            private: RealItemImpl * m_realitem_impl;
            /// \cond NX_NO_DOC 
            public: explicit RealItem(void *ptr);
            /// \endcond 
            /**Registers activate callback. This method should be called before calling @link  UIStyler::Dialog::Show   UIStyler::Dialog::Show @endlink  or @link  UIStyler::Dialog::RegisterWithUiMenu   UIStyler::Dialog::RegisterWithUiMenu @endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void AddActivateHandler
            (
                const NXOpen::UIStyler::RealItem::Activate&  activateevent /** Callback for activate event */,
                bool isDialogLaunchingEvent /** TRUE if dialog is going to launch, FALSE if not */
            );
            /** 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBitmap
            (
                const NXString & strBitmap /** Filename with .ubm, .xpm, or .bmp extension that contains a bitmap definition   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetBitmap
            (
                const char * strBitmap /** Filename with .ubm, .xpm, or .bmp extension that contains a bitmap definition   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Set the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLabel
            (
                const NXString & strLabel /** Text label to display on the left side of the text field.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Set the label 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetLabel
            (
                const char * strLabel /** Text label to display on the left side of the text field.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Sets  the item value 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetItemValue
            (
                double itemVal /** Real value to display in the text field */
            );
            /**Returns  the item value 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double ItemValue
            (
            );
            /**Sets  the sensitivity 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSensitivity
            (
                bool type /** TRUE if sensitive, FALSE if insensitive */
            );
            /**Returns  the sensitivity 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool Sensitivity
            (
            );
            /**Sets  the visibility 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVisibility
            (
                bool type /** TRUE if visible, FALSE if invisible */
            );
            /**Returns  the visibility 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool Visibility
            (
            );
            /** Sets focus 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFocus
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
