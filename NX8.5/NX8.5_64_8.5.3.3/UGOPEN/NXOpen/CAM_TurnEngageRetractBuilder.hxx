#ifndef NXOpen_CAM_TURNENGAGERETRACTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNENGAGERETRACTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnEngageRetractBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TurnEngageRetractBuilder;
    }
    class Point;
    namespace CAM
    {
        class _TurnEngageRetractBuilderBuilder;
        class TurnEngageRetractBuilderImpl;
        /** Represents a first plunge Builder 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TurnEngageRetractBuilder : public TaggedObject
        {
            /** The engage retract type 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum Types
            {
                TypesAutoCircular/** Auto Circular */,
                TypesAutoLinear/** Auto Linear */,
                TypesDelta/** Delta */,
                TypesAngleAndDistance/** Angle and Distance */,
                TypesRelativeLinear/** Relative Linear */,
                TypesFromAPoint/** From a Point */,
                TypesTwoCircles/** Two Circles */,
                TypesTwoPointTangent/** Two Point Tangent */
            };

            /** The auto engage retract options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum AutoOptions
            {
                AutoOptionsUserDefinedValues/** User Defined Values */,
                AutoOptionsAutomaticValues/** Automatic Values */,
                AutoOptionsClearWallsByAngleAndDistance/** Clear Walls by Angle and Distance */,
                AutoOptionsWithdraw/** Withdraw */,
                AutoOptionsWithdrawByDistance/** Withdraw by Distance */,
                AutoOptionsClearWalls/** Clear Walls*/,
                AutoOptionsClearWallsByDistance/** Clear Walls by Distance*/,
                AutoOptionsSameAsPlungeRetract/** Same as Plunge Retract*/
            };

            /** the extend method options 
             <br>  Created in NX7.5.0.  <br>  
            */
            public: enum ExtendMethods
            {
                ExtendMethodsDistance/** Extend by distance */,
                ExtendMethodsToBlank/** Extend to blank */
            };

            private: TurnEngageRetractBuilderImpl * m_turnengageretractbuilder_impl;
            private: friend class  _TurnEngageRetractBuilderBuilder;
            protected: TurnEngageRetractBuilder();
            public: ~TurnEngageRetractBuilder();
            /**Returns  the Engage(Retract) Type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnEngageRetractBuilder::Types EngageRetractType
            (
            );
            /**Sets  the Engage(Retract) Type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEngageRetractType
            (
                NXOpen::CAM::TurnEngageRetractBuilder::Types engageRetractType /** the Engage(Retract) Type value */
            );
            /**Returns  the Auto Engage(Retract) Option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnEngageRetractBuilder::AutoOptions AutomaticOption
            (
            );
            /**Sets  the Auto Engage(Retract) Option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAutomaticOption
            (
                NXOpen::CAM::TurnEngageRetractBuilder::AutoOptions engageRetractOption /** the Auto Engage(Retract) Option value */
            );
            /**Returns  the Delta XC 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double DeltaXc
            (
            );
            /**Sets  the Delta XC 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDeltaXc
            (
                double xc /** the Delta XC value */
            );
            /**Returns  the Delta YC 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double DeltaYc
            (
            );
            /**Sets  the Delta YC 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDeltaYc
            (
                double yc /** the Delta YC value */
            );
            /**Returns  the Angle 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double Angle
            (
            );
            /**Sets  the Angle 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAngle
            (
                double angle /** the Angle value */
            );
            /**Returns  the Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double Radius
            (
            );
            /**Sets  the Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRadius
            (
                double radius /** the Radius value */
            );
            /**Returns  the Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double Distance
            (
            );
            /**Sets  the Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistance
            (
                double distance /** the Distance value */
            );
            /**Returns  the point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * turnPoint /** the point value */
            );
            /**Returns  the Extend Method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnEngageRetractBuilder::ExtendMethods ExtendMethod
            (
            );
            /**Sets  the Extend Method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetExtendMethod
            (
                NXOpen::CAM::TurnEngageRetractBuilder::ExtendMethods newValue /** the Extend Method value */
            );
            /**Returns  the Extend Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double ExtendDistance
            (
            );
            /**Sets  the Extend Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetExtendDistance
            (
                double extendDistance /** the Extend Distance value */
            );
            /**Returns  the Direct engage to(retract from) trim point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool DirectTrimPoint
            (
            );
            /**Sets  the Direct engage to(retract from) trim point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDirectTrimPoint
            (
                bool directTrimPoint /** the Direct engage to(retract from) trim point */
            );
            /**Returns  the First Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double FirstRadius
            (
            );
            /**Sets  the First Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstRadius
            (
                double firstRadius /** the First Radius value */
            );
            /**Returns  the Second Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double SecondRadius
            (
            );
            /**Sets  the Second Radius 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSecondRadius
            (
                double secondRadius /** the Second Radius value */
            );
            /**Returns  the Safe Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double SafeDistance
            (
            );
            /**Sets  the Safe Distance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSafeDistance
            (
                double safeDistance /** the Safe Distance value */
            );
            /**Returns  the Tangential Extension 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool TangentialExtension
            (
            );
            /**Sets  the Tangential Extension 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTangentialExtension
            (
                bool tangentialExtension /** the Tangential Extension */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
