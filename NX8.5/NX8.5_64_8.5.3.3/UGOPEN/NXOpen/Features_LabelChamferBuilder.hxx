#ifndef NXOpen_FEATURES_LABELCHAMFERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_LABELCHAMFERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_LabelChamferBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_LabelChamferBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class LabelChamferBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _LabelChamferBuilderBuilder;
        class LabelChamferBuilderImpl;
        /**
            Represents a @link Features::LabelChamfer Features::LabelChamfer@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateLabelChamferBuilder  Features::FeatureCollection::CreateLabelChamferBuilder @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  LabelChamferBuilder : public Features::FeatureBuilder
        {
            /** the option for chamfer types */
            public: enum ChamferType
            {
                ChamferTypeEdgeOffset/** edge offset */ ,
                ChamferTypeFaceOffset/** face offset */ ,
                ChamferTypeEdgeAngleOffset/** edge angle offset */ ,
                ChamferTypeVertex/** vertex */ 
            };

            /** the option for chamfer orientation types */
            public: enum ChamferOrientType
            {
                ChamferOrientTypeConvex/** convex */ ,
                ChamferOrientTypeConcave/** concave */ 
            };

            private: LabelChamferBuilderImpl * m_labelchamferbuilder_impl;
            private: friend class  _LabelChamferBuilderBuilder;
            protected: LabelChamferBuilder();
            public: ~LabelChamferBuilder();
            /**Returns  the chamfer face 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ChamferFace
            (
            );
            /**Returns  the construction face1 of chamfer face 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ConstructionFace1
            (
            );
            /**Returns  the construction face2 of chamfer face 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ConstructionFace2
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
