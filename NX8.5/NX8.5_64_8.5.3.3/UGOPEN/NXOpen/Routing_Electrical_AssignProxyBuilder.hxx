#ifndef NXOpen_ROUTING_ELECTRICAL_ASSIGNPROXYBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_ASSIGNPROXYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_AssignProxyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_Electrical_AssignProxyBuilder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class AssignProxyBuilder;
        }
    }
    class Builder;
    class Direction;
    class Point;
    namespace Routing
    {
        namespace Electrical
        {
            class _AssignProxyBuilderBuilder;
            class AssignProxyBuilderImpl;
            /**     
                Represents a @link Routing::Electrical::AssignProxyBuilder Routing::Electrical::AssignProxyBuilder@endlink . This is used 
                to create a proxy port and assign it to a connector.
                 <br> To create a new instance of this class, use @link Routing::RouteManager::CreateAssignProxyBuilder  Routing::RouteManager::CreateAssignProxyBuilder @endlink  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_ROUTINGEXPORT  AssignProxyBuilder : public Builder
            {
                private: AssignProxyBuilderImpl * m_assignproxybuilder_impl;
                private: friend class  _AssignProxyBuilderBuilder;
                protected: AssignProxyBuilder();
                public: ~AssignProxyBuilder();
                /**Returns  the position of the proxy port to be created.
                        
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: NXOpen::Point * Point
                (
                );
                /**Sets  the position of the proxy port to be created.
                        
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetPoint
                (
                    NXOpen::Point * point /** point */ 
                );
                /**Returns  the direction of the proxy port to be created.
                        
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: NXOpen::Direction * Vector
                (
                );
                /**Sets  the direction of the proxy port to be created.
                        
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetVector
                (
                    NXOpen::Direction * vector /** vector */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
