#ifndef NXOpen_GEOMETRICUTILITIES_SHAPEFRAMEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_SHAPEFRAMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ShapeFrameBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_AnchorLocatorBuilder.hxx>
#include <NXOpen/GeometricUtilities_ShapeFrameBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ShapeFrameBuilder;
    }
    namespace GeometricUtilities
    {
        class AnchorLocatorBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _ShapeFrameBuilderBuilder;
        class ShapeFrameBuilderImpl;
        /** Represents a @link GeometricUtilities::ShapeFrameBuilder GeometricUtilities::ShapeFrameBuilder@endlink  
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ShapeFrameBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents the anchor attachment type */
            public: enum AnchorAttachmentType
            {
                AnchorAttachmentTypeNone/** Anchor is not attached to the frame */,
                AnchorAttachmentTypeCenter/** Anchor is attached to the center of the frame */,
                AnchorAttachmentTypeVertex1/** Anchor is attached to the first vertex of the frame */,
                AnchorAttachmentTypeVertex2/** Anchor is attached to the second vertex of the frame */,
                AnchorAttachmentTypeVertex3/** Anchor is attached to the third vertex of the frame */,
                AnchorAttachmentTypeVertex4/** Anchor is attached to the fourth vertex of the frame */
            };

            private: ShapeFrameBuilderImpl * m_shapeframebuilder_impl;
            private: friend class  _ShapeFrameBuilderBuilder;
            protected: ShapeFrameBuilder();
            public: ~ShapeFrameBuilder();
            /**Returns  the anchor of the frame 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::AnchorLocatorBuilder * Anchor
            (
            );
            /**Returns  the anchor attachment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ShapeFrameBuilder::AnchorAttachmentType AnchorAttachment
            (
            );
            /**Sets  the anchor attachment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAnchorAttachment
            (
                NXOpen::GeometricUtilities::ShapeFrameBuilder::AnchorAttachmentType anchorAttachment /** anchorattachment */ 
            );
            /**Returns  the number of vertices of the frame 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberVertices
            (
            );
            /** Gets the coordinates of the i-th vertex of the frame with respect to the plane  @return  coordinates of vertex relative with respect to plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point2d GetVertexCoords
            (
                int index /** index of vertex */
            );
            /** Sets the coordinates of the i-th vertex of the frame with respect to the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVertexCoords
            (
                int index /** index of vertex */,
                const NXOpen::Point2d & coords /** coordinates of vertex relative with respect to plane */
            );
            /** Gets the coordinates of the i-th midpoint of the frame with respect to the plane  @return  coordinates of midpoint relative with respect to plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point2d GetMidpointCoords
            (
                int index /** index of midpoint */
            );
            /** Sets the coordinates of the i-th midpoint of the frame with respect to the plane 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMidpointCoords
            (
                int index /** index of midpoint */,
                const NXOpen::Point2d & coords /** coordinates of midpoint relative with respect to plane */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
