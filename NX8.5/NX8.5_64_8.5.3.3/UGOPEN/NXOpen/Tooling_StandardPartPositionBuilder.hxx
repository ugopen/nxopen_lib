#ifndef NXOpen_TOOLING_STANDARDPARTPOSITIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_STANDARDPARTPOSITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_StandardPartPositionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Tooling_StandardPartPositionBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class StandardPartPositionBuilder;
    }
    class Builder;
    class Expression;
    class Point;
    namespace Tooling
    {
        class _StandardPartPositionBuilderBuilder;
        class StandardPartPositionBuilderImpl;
        /** Represents a StandardPartPositionBuilder to add or edit a standard part in the selected plane with specified position.  <br> To create a new instance of this class, use @link Tooling::StandardPartPositionCollection::CreateStandardPartPositionBuilder  Tooling::StandardPartPositionCollection::CreateStandardPartPositionBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AssociativePosition </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        DxIncrement </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        DyIncrement </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        OffsetPositionDx.Value </td> <td> 
         
        0.0 (millimeters part), 0.0 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetPositionDy.Value </td> <td> 
         
        0.0 (millimeters part), 0.0 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  StandardPartPositionBuilder : public Builder
        {
            private: StandardPartPositionBuilderImpl * m_standardpartpositionbuilder_impl;
            private: friend class  _StandardPartPositionBuilderBuilder;
            protected: StandardPartPositionBuilder();
            public: ~StandardPartPositionBuilder();
            /**Returns  the reference point position. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Point * ReferencePosition
            (
            );
            /**Sets  the reference point position. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetReferencePosition
            (
                NXOpen::Point * refPos /** refpos */ 
            );
            /** The offset point position. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetOffsetPosition
            (
                const NXOpen::Point3d & position /** position */ 
            );
            /** Sets the reference point to the selected face center. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetFaceCenter
            (
            );
            /**Returns  the dimension in X direction from reference point to offset point. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Expression * OffsetPositionDx
            (
            );
            /**Returns  the dimension in Y direction from reference point to offset point. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Expression * OffsetPositionDy
            (
            );
            /**Returns  the associative status between standardpart and the offset point. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: bool AssociativePosition
            (
            );
            /**Sets  the associative status between standardpart and the offset point. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetAssociativePosition
            (
                bool associativePosition /** associativeposition */ 
            );
            /**Returns  the increment in X direction when a standard part is dragged. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: double DxIncrement
            (
            );
            /**Sets  the increment in X direction when a standard part is dragged. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDxIncrement
            (
                double dxIncrement /** dxincrement */ 
            );
            /**Returns  the increment in Y direction when a standard part is dragged. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: double DyIncrement
            (
            );
            /**Sets  the increment in Y direction when a standard part is dragged. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDyIncrement
            (
                double dyIncrement /** dyincrement */ 
            );
            /** Sets the view to the selected face plane or X-Y plane of WCS. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void PlaneView
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
