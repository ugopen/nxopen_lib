#ifndef NXOpen_BLOCKSTYLER_UIBLOCK_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_UIBLOCK_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_UIBlock.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class UIBlock;
    }
    namespace BlockStyler
    {
        class PropertyList;
    }
    namespace BlockStyler
    {
        class _UIBlockBuilder;
        class UIBlockImpl;
        /** Represents a UI Block
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  UIBlock : public TaggedObject
        {
            private: UIBlockImpl * m_uiblock_impl;
            private: friend class  _UIBlockBuilder;
            protected: UIBlock();
            public: ~UIBlock();
            /**Returns  the type of block 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Type
            (
            );
            /**Returns  the name of the block or BlockID
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /** Returns the properties of the block  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::BlockStyler::PropertyList * GetProperties
            (
            );
            /**Focuses on the block. Use this method for both focus and keyboard focus.
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: void Focus
            (
            );
            /**Returns  the Enable. If true, the block is sensitive.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Enable
            (
            );
            /**Sets  the Enable. If true, the block is sensitive.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEnable
            (
                bool enable /** enable */ 
            );
            /**Returns  the Expanded
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Expanded
            (
            );
            /**Sets  the Expanded
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetExpanded
            (
                bool expanded /** expanded */ 
            );
            /**Returns  the Group
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Group
            (
            );
            /**Sets  the Group
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetGroup
            (
                bool group /** group */ 
            );
            /**Returns  the Label
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );
            /**Sets  the Label
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetLabel
            (
                const NXString & label /** label */ 
            );
            /**Sets  the Label
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetLabel
            (
                const char * label /** label */ 
            );
            /**Returns  the Visibility of block. If true, the block is visible. Otherwise invisible.
                This is readonly property for dialog and will be always true for dialog.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Show
            (
            );
            /**Sets  the Visibility of block. If true, the block is visible. Otherwise invisible.
                This is readonly property for dialog and will be always true for dialog.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetShow
            (
                bool show /** show */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
