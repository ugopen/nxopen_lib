#ifndef NXOpen_BLOCKSTYLER_SPECIFYORIENTATION_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_SPECIFYORIENTATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_SpecifyOrientation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_SpecifyOrientation.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class SpecifyOrientation;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    namespace BlockStyler
    {
        class _SpecifyOrientationBuilder;
        class SpecifyOrientationImpl;
        /** Represents Specify Orientation block
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  SpecifyOrientation : public BlockStyler::UIBlock
        {
            private: SpecifyOrientationImpl * m_specifyorientation_impl;
            private: friend class  _SpecifyOrientationBuilder;
            protected: SpecifyOrientation();
            public: ~SpecifyOrientation();
            /**Returns  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipImage
            (
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipImage
            (
                const NXString & imageString /** image string */ 
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipImage
            (
                const char * imageString /** image string */ 
            );
            /**Returns  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipLayoutAsString
            (
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipLayoutAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipLayoutAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the BalloonTooltipLayout members  @return Value to get from the property. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetBalloonTooltipLayoutMembers
            (
            );
            /**Returns  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipText
            (
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipText
            (
                const NXString & balloonTooltipText /** balloon tooltip text */ 
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipText
            (
                const char * balloonTooltipText /** balloon tooltip text */ 
            );
            /**Returns  the EnableDoubleClickFlip. If true, flipping is allowed when direction handle is double clicked.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool EnableDoubleClickFlip
            (
            );
            /**Sets  the EnableDoubleClickFlip. If true, flipping is allowed when direction handle is double clicked.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableDoubleClickFlip
            (
                bool enableFlip /** enableflip */ 
            );
            /**Returns  the EnableFacetSelection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool EnableFacetSelection
            (
            );
            /**Sets  the EnableFacetSelection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableFacetSelection
            (
                bool enableSelection /** enableselection */ 
            );
            /**Returns  the HasOriginGwif
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool HasOriginGwif
            (
            );
            /**Sets  the HasOriginGwif
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetHasOriginGwif
            (
                bool originGwif /** origingwif */ 
            );
            /**Returns  the IsOriginSpecified
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsOriginSpecified
            (
            );
            /**Sets  the IsOriginSpecified
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOriginSpecified
            (
                bool originSpecified /** originspecified */ 
            );
            /**Returns  the IsWCSCoordinates
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IsWCSCoordinates
            (
            );
            /**Sets  the IsWCSCoordinates
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetWCSCoordinates
            (
                bool wcsCoordinates /** wcscoordinates */ 
            );
            /**Returns  the Origin
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d Origin
            (
            );
            /**Sets  the Origin
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                const NXOpen::Point3d & origin /** origin */ 
            );
            /**Returns  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int SnapPointTypesOnByDefault
            (
            );
            /**Sets  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSnapPointTypesOnByDefault
            (
                int snapPointTypes /** snappointtypes */ 
            );
            /**Returns  the VisibleManipulatorHandles. It specifies the options to display the handles available on triad. The translation, rotation and origin handles are available.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int VisibleManipulatorHandles
            (
            );
            /**Sets  the VisibleManipulatorHandles. It specifies the options to display the handles available on triad. The translation, rotation and origin handles are available.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetVisibleManipulatorHandles
            (
                int handles /** handles */ 
            );
            /**Returns  the XAxis
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d XAxis
            (
            );
            /**Sets  the XAxis
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetXAxis
            (
                const NXOpen::Vector3d & xAxis /** xaxis */ 
            );
            /**Returns  the YAxis
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d YAxis
            (
            );
            /**Sets  the YAxis
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetYAxis
            (
                const NXOpen::Vector3d & yAxis /** yaxis */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
