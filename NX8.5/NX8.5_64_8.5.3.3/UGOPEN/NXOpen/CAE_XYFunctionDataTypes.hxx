#ifndef NXOpen_CAE_XYFUNCTIONDATATYPES_HXX_INCLUDED
#define NXOpen_CAE_XYFUNCTIONDATATYPES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_XYFunctionDataTypes.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        /** Defines the data type of a function in AFU file */
        enum XyFunctionDataType
        {
            XyFunctionDataTypeGeneral/** Function is General Function. */,
            XyFunctionDataTypeTime/** Function is Time History */,
            XyFunctionDataTypeCrossSpectrum = 3/** Function is Cross Spectrum */,
            XyFunctionDataTypeFrequencyResponseFunction/** Function is Frequency Response Function */,
            XyFunctionDataTypeTransmissibility/** Function is Transmissibility */,
            XyFunctionDataTypePowerSpectralDensity = 9/** Function is Power Spectral Density */,
            XyFunctionDataTypeSpectrum = 12/** Function is Spectrum */,
            XyFunctionDataTypeShockResponseSpectrum = 24/** Function is Shock Response Spectrum */,
            XyFunctionDataTypeTemperature = 31/** Function is Temperature */,
            XyFunctionDataTypeStressStrain/** Function is Stress/Strain Function */,
            XyFunctionDataTypeLife/** Function is Fatigue Life */,
            XyFunctionDataTypeCampbellDiagram/** Function is Campbell Diagram */,
            XyFunctionDataTypeTimingChart/** Function is Timing Chart */,
            XyFunctionDataTypeStiffnessAndDamping/** Function is Stiffness and Damping */
        };

        /** Defines the application type of a function */
        enum XyFunctionMacroType
        {
            XyFunctionMacroTypeGeneral/** Function could be used in any application */,
            XyFunctionMacroTypeMotion/** Function is only used in a motion application */,
            XyFunctionMacroTypeResponse/** Function is only used to define a response */,
            XyFunctionMacroTypeLoad/** Function is only used to define a load */,
            XyFunctionMacroTypeMaterial/** Function is only used to define a material */
        };

        /** Defines general purpose type of a function */
        enum XyFunctionGeneralType
        {
            XyFunctionGeneralTypeGeneral/** Function is General Function. */,
            XyFunctionGeneralTypeTime/** Function is Time History */,
            XyFunctionGeneralTypeSpectrum/** Function is Spectrum */,
            XyFunctionGeneralTypePowerSpectralDensity/** Function is Power Spectral Density */,
            XyFunctionGeneralTypeShockResponseSpectrum/** Function is Shock Response Spectrum */,
            XyFunctionGeneralTypeFrequencyResponseFunction/** Function is Frequency Response Function */,
            XyFunctionGeneralTypeTemperature/** Function is Temperature */,
            XyFunctionGeneralTypeStressStrain/** Function is Stress/Strain Function */,
            XyFunctionGeneralTypeLife/** Function is Fatigue Life */,
            XyFunctionGeneralTypeCrossSpectrum/** Function is Cross Spectrum */,
            XyFunctionGeneralTypeTransmissibility/** Function is Transmissibility */,
            XyFunctionGeneralTypeCampbellDiagram/** Function is Campbell Diagram */,
            XyFunctionGeneralTypeTimingChart/** Function is Timing Chart */,
            XyFunctionGeneralTypeStiffnessAndDamping/** Function is Stiffness and Damping */
        };

        /** Defines motion purpose type of a function */
        enum XyFunctionMotionType
        {
            XyFunctionMotionTypeTime/** Function is Time History */,
            XyFunctionMotionTypeTimingChart/** Function is Timing Chart */,
            XyFunctionMotionTypeStiffnessAndDamping/** Function is Stiffness and Damping */
        };

        /** Defines load purpose type of a function */
        enum XyFunctionLoadType
        {
            XyFunctionLoadTypeGeneral/** Function is General Function. */,
            XyFunctionLoadTypeTime/** Function is Time History */,
            XyFunctionLoadTypeSpectrum/** Function is Spectrum */,
            XyFunctionLoadTypePowerSpectralDensity/** Function is Power Spectral Density */,
            XyFunctionLoadTypeShockResponseSpectrum/** Function is Shock Response Spectrum */
        };

        /** Defines material purpose type of a function */
        enum XyFunctionMaterialType
        {
            XyFunctionMaterialTypeGeneral/** Function is General Function. */,
            XyFunctionMaterialTypeTime/** Function is Time History */,
            XyFunctionMaterialTypeTemperature/** Function is Temperature */,
            XyFunctionMaterialTypeStressStrain/** Function is Stress/Strain Function */,
            XyFunctionMaterialTypeLife/** Function is Fatigue Life */
        };

        /** Defines response purpose type of a function */
        enum XyFunctionResponseType
        {
            XyFunctionResponseTypeGeneral/** Function is General Function. */,
            XyFunctionResponseTypeTime/** Function is Time History */,
            XyFunctionResponseTypeSpectrum/** Function is Spectrum */,
            XyFunctionResponseTypePowerSpectralDensity/** Function is Power Spectral Density */,
            XyFunctionResponseTypeShockResponseSpectrum/** Function is Shock Response Spectrum */,
            XyFunctionResponseTypeFrequencyResponseFunction/** Function is Frequency Response Function */,
            XyFunctionResponseTypeCrossSpectrum/** Function is Cross Spectrum */,
            XyFunctionResponseTypeTransmissibility/** Function is Transmissibility */
        };

        /** Defines all units used by xy function */
        enum XyFunctionUnit
        {
            XyFunctionUnitUnknown/** Unknown unit */,
            XyFunctionUnitDisplacementM/** Displacement unit: m */,
            XyFunctionUnitDisplacementMm/** Displacement unit: mm */,
            XyFunctionUnitDisplacementIn/** Displacement unit: in */,
            XyFunctionUnitDisplacementFt/** Displacement unit: ft */,
            XyFunctionUnitForceN/** Force unit: N */,
            XyFunctionUnitForceMn/** Force unit: mN */,
            XyFunctionUnitForceBf/** Force unit: lbf */,
            XyFunctionUnitTemperatureC/** Temperature unit: C */,
            XyFunctionUnitTemperatureF/** Temperature unit: F */,
            XyFunctionUnitTemperatureK/** Temperature unit: K */,
            XyFunctionUnitTimeSec/** Time unit: seconds */,
            XyFunctionUnitTimeMin/** Time unit: minutes */,
            XyFunctionUnitTimeHour/** Time unit: hours */,
            XyFunctionUnitFrequencyHz/** Frequency unit: Hz */,
            XyFunctionUnitMassKg/** Mass unit: Kg */,
            XyFunctionUnitMassG/** Mass unit: g */,
            XyFunctionUnitMassBm/** Mass unit: lbm */,
            XyFunctionUnitMassTon/** Mass unit: ton */,
            XyFunctionUnitMassLbfIn/** Mass unit: lbf-sec^2/in */,
            XyFunctionUnitVelocityM/** Velocity unit: m/sec */,
            XyFunctionUnitVelocityMm/** Velocity unit: mm/sec */,
            XyFunctionUnitVelocityIn/** Velocity unit: in/sec */,
            XyFunctionUnitVelocityFt/** Velocity unit: ft/sec */,
            XyFunctionUnitAccelerationM/** Acceleration unit: m/sec^2 */,
            XyFunctionUnitAccelerationMm/** Acceleration unit: mm/sec^2 */,
            XyFunctionUnitAccelerationIn/** Acceleration unit: in/sec ^2 */,
            XyFunctionUnitAccelerationFt/** Acceleration unit: ft/sec^2 */,
            XyFunctionUnitAccelerationGs/** Acceleration unit: gs */,
            XyFunctionUnitAngularDisplacementRadian/** Angular displacement unit: radian */,
            XyFunctionUnitAngularDisplacementDegree/** Angular displacement unit: degree */,
            XyFunctionUnitAngularVelocityRadian/** Angular velocity unit: radian/sec */,
            XyFunctionUnitAngularVelocityDegree/** Angular velocity unit: degree/sec */,
            XyFunctionUnitAngularAccelerationRadian/** Angular acceleration unit: radian/sec ^2 */,
            XyFunctionUnitAngularAccelerationDegree/** Angular acceleration unit: degree/sec ^2 */,
            XyFunctionUnitMomentMnMm/** Moment unit: mN-mm */,
            XyFunctionUnitMomentNMm/** Moment unit: N-mm */,
            XyFunctionUnitMomentNM/** Moment unit: N-m*/,
            XyFunctionUnitMomentBfIn/** Moment unit: lbf-in */,
            XyFunctionUnitMomentBfFt/** Moment unit: lbf-ft */,
            XyFunctionUnitPressureKpa/** Pressure unit: KPa */,
            XyFunctionUnitPressureMpa/** Pressure unit: MPa */,
            XyFunctionUnitPressurePa/** Pressure unit: Pa */,
            XyFunctionUnitPressurePsi/** Pressure unit: Psi */,
            XyFunctionUnitPressureLbfFt/** Pressure unit: lbf/ft^2 */,
            XyFunctionUnitPressureBar/** Pressure unit: bar */,
            XyFunctionUnitPressureAt/** Pressure unit: atm */,
            XyFunctionUnitStressKpa/** Stress unit: KPa */,
            XyFunctionUnitStressMpa/** Stress unit: MPa */,
            XyFunctionUnitStressPa/** Stress unit: Pa */,
            XyFunctionUnitStressPsi/** Stress unit: Psi */,
            XyFunctionUnitStrainMm/** Strain unit: mm/mm */,
            XyFunctionUnitStrainIn/** Strain unit: in/in */,
            XyFunctionUnitRpmRpm/** RPM unit: rpm */,
            XyFunctionUnitOrderOrder/** Order unit: order */,
            XyFunctionUnitCyclesDuty/** Cycles unit: duty cycles */,
            XyFunctionUnitTorqueMnMm/** Torque unit: mN-mm */,
            XyFunctionUnitTorqueNMm/** Torque unit: N-mm */,
            XyFunctionUnitTorqueNM/** Torque unit: N-m*/,
            XyFunctionUnitTorqueBfIn/** Torque unit: lbf-in */,
            XyFunctionUnitTorqueBfFt/** Torque unit: lbf-ft */,
            XyFunctionUnitGravitationalAccelerationM/** Gravitational Acceleration unit: m/sec^2 */,
            XyFunctionUnitGravitationalAccelerationMm/** Gravitational Acceleration unit: mm/sec^2 */,
            XyFunctionUnitGravitationalAccelerationIn/** Gravitational Acceleration unit: in/sec ^2 */,
            XyFunctionUnitGravitationalAccelerationFt/** Gravitational Acceleration unit: ft/sec^2 */,
            XyFunctionUnitGravitationalAccelerationGs/** Gravitational Acceleration unit: gs */,
            XyFunctionUnitCurv1M/** Curvature unit: 1/m */,
            XyFunctionUnitCurv1Mm/** Curvature unit: 1/mm */,
            XyFunctionUnitCurv1In/** Curvature unit: 1/in */,
            XyFunctionUnitCurv1Ft/** Curvature unit: 1/ft */,
            XyFunctionUnitElementForceMnMm/** Element Force unit: mN/mm */,
            XyFunctionUnitElementForceNMm/** Element Force unit: N/mm */,
            XyFunctionUnitElementForceNM/** Element Force unit: N/m*/,
            XyFunctionUnitElementForceBfIn/** Element Force unit: lbf/in */,
            XyFunctionUnitElementForceBfFt/** Element Force unit: lbf/ft */,
            XyFunctionUnitElementMomentMnMm/** Element Moment unit: mN-mm/mm */,
            XyFunctionUnitElementMomentNMm/** Element Moment unit: N-mm/mm */,
            XyFunctionUnitElementMomentNM/** Element Moment unit: N-m/m*/,
            XyFunctionUnitElementMomentBfIn/** Element Moment unit: lbf-in/in */,
            XyFunctionUnitElementMomentBfFt/** Element Moment unit: lbf-ft/ft */,
            XyFunctionUnitVoltageV/** Voltage unit: V */,
            XyFunctionUnitVoltageMv/** Voltage unit: mV */,
            XyFunctionUnitElectricCurrentA/** Electric Current unit: A */,
            XyFunctionUnitElectricCurrentMa/** Electric Current unit: mA */,
            XyFunctionUnitLoadfactorNone/** Load Factor unit: none */,
            XyFunctionUnitMotorSignalNone/** Motor Signal unit: none */,
            XyFunctionUnitUnitlessScalarNone/** Unitless Scalar unit: none */,
            XyFunctionUnitUnitlessRealNone/** Unitless Real unit: none */,
            XyFunctionUnitUnitlessIntegerNone/** Unitless Integer unit: none */,
            XyFunctionUnitMassSlug/** Mass unit: lbf-sec^2/ft */,
            XyFunctionUnitStressLbfFt/** Stress unit: lbf/ft^2 */,
            XyFunctionUnitForcePoundal/** Force unit: Poundal */,
            XyFunctionUnitNumber/** Unit number */
        };

        /** Defines measurement unit types */
        enum XyFunctionMeasure
        {
            XyFunctionMeasureGeneral/** General unit */,
            XyFunctionMeasureDisplacement/** Displacement unit */,
            XyFunctionMeasureForce/** Force unit */,
            XyFunctionMeasureTemperature/** Temperature unit */,
            XyFunctionMeasureTime/** Time unit */,
            XyFunctionMeasureFrequency/** Frequency unit */,
            XyFunctionMeasureMass/** Mass unit */,
            XyFunctionMeasureVelocity/** Velocity unit */,
            XyFunctionMeasureAcceleration/** Acceleration unit */,
            XyFunctionMeasureAngularDisplacement/** Angular displacement unit */,
            XyFunctionMeasureAngularVelocity/** Angular velocity unit */,
            XyFunctionMeasureAngularAcceleration/** Angular acceleration unit */,
            XyFunctionMeasureMoment/** Moment unit */,
            XyFunctionMeasurePressure/** Pressure unit */,
            XyFunctionMeasureStress/** Stress unit */,
            XyFunctionMeasureStrain/** Strain unit */,
            XyFunctionMeasureRpm/** RPM unit */,
            XyFunctionMeasureOrder/** Order unit */,
            XyFunctionMeasureCycles/** Cycles unit */,
            XyFunctionMeasureLoadfactor/** Load Factor unit */,
            XyFunctionMeasureTorque/** Torque unit */,
            XyFunctionMeasureGravity/** Gravity unit */,
            XyFunctionMeasureCurvature/** Curvature unit */,
            XyFunctionMeasureElementForce/** Element force unit */,
            XyFunctionMeasureElementMoment/** Element moment unit */,
            XyFunctionMeasureMotorSignal/** Motor signal unit */,
            XyFunctionMeasureUnitlessScalar/** Unitless scalar unit */,
            XyFunctionMeasureUnitlessReal/** Unitless real unit */,
            XyFunctionMeasureUnitlessInteger/** Unitless integer unit */,
            XyFunctionMeasureVoltage/** Voltage unit */,
            XyFunctionMeasureElectricCurrent/** Electric current unit */,
            XyFunctionMeasureNumber/** Measure number */
        };

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
