#ifndef NXOpen_GEOMETRICUTILITIES_NONINFLECTINGLAWBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_NONINFLECTINGLAWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_NonInflectingLawBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_NonInflectingLawBuilder.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimWithValueBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class NonInflectingLawBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimWithValueBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _NonInflectingLawBuilderBuilder;
        class NonInflectingLawBuilderImpl;
        /**
                Represents a non-inflecting law.
                
                This class represents @link GeometricUtilities::LawBuilder::TypeNonInflecting GeometricUtilities::LawBuilder::TypeNonInflecting@endlink  type
                of law in @link GeometricUtilities::LawBuilder GeometricUtilities::LawBuilder@endlink .
                Objects of class @link GeometricUtilities::OnPathDimWithValueBuilder GeometricUtilities::OnPathDimWithValueBuilder@endlink  are used
                as law nodes in @link GeometricUtilities::NonInflectingLawBuilder GeometricUtilities::NonInflectingLawBuilder@endlink . Spine
                definition in this class is mandatory. The law nodes at start and end of the spine are fixed.
                Middle node can be located any where between start and end nodes.
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  NonInflectingLawBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: NonInflectingLawBuilderImpl * m_noninflectinglawbuilder_impl;
            private: friend class  _NonInflectingLawBuilderBuilder;
            protected: NonInflectingLawBuilder();
            public: ~NonInflectingLawBuilder();
            /**Returns  the Spine 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Section * Spine
            (
            );
            /** Update the builder based on current spine 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void UpdateSpine
            (
            );
            /**Returns  the start node 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::OnPathDimWithValueBuilder * StartNode
            (
            );
            /**Returns  the middle node 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::OnPathDimWithValueBuilder * MiddleNode
            (
            );
            /**Returns  the end node 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::OnPathDimWithValueBuilder * EndNode
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
