#ifndef NXOpen_CAE_OPTIMIZATION_TBSEIGENVALUEOPTIMIZATIONPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSEIGENVALUEOPTIMIZATIONPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSEigenvalueOptimizationParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSEigenvalueOptimizationParameters.hxx>
#include <NXOpen/CAE_Optimization_TBSGroupDefinition.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSEigenvalueOptimizationParameters;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSGroupDefinition;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSEigenvalueOptimizationParametersBuilder;
            class TBSEigenvalueOptimizationParametersImpl;
            /** Represents the parameters to control an eigenvalue optimization 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSEigenvalueOptimizationParameters : public TaggedObject
            {
                private: TBSEigenvalueOptimizationParametersImpl * m_tbseigenvalueoptimizationparameters_impl;
                private: friend class  _TBSEigenvalueOptimizationParametersBuilder;
                protected: TBSEigenvalueOptimizationParameters();
                public: ~TBSEigenvalueOptimizationParameters();
                /**Returns  the switch for mode tracking 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool TrackingMode
                (
                );
                /**Sets  the switch for mode tracking 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetTrackingMode
                (
                    bool trackingMode /** trackingmode */ 
                );
                /**Returns  the tracking nodes, only available when @link CAE::Optimization::TBSEigenvalueOptimizationParameters::TrackingMode CAE::Optimization::TBSEigenvalueOptimizationParameters::TrackingMode @endlink and @link CAE::Optimization::TBSEigenvalueOptimizationParameters::SetTrackingMode CAE::Optimization::TBSEigenvalueOptimizationParameters::SetTrackingMode @endlink  is True 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSGroupDefinition * TrackingNodes
                (
                );
                /**Returns  the number of modes included in the mode tracking 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ModeNumber
                (
                );
                /**Sets  the number of modes included in the mode tracking 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetModeNumber
                (
                    int modeNumber /** modenumber */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
