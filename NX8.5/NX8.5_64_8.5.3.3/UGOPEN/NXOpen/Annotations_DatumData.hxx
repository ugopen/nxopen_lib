#ifndef NXOpen_ANNOTATIONS_DATUMDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DATUMDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DatumData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_SimpleDraftingAidPreferences.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class DatumData;
    }
    namespace Annotations
    {
        class SimpleDraftingAidPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class DatumDataImpl;
        /** Represents datum data 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  DatumData : public TransientObject
        {
            private: DatumDataImpl * m_datumdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit DatumData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~DatumData();
            /**Returns  the label 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Label
            (
            );
            /**Sets  the label 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLabel
            (
                const NXString & label /** Datum label */
            );
            /**Sets  the label 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetLabel
            (
                const char * label /** Datum label */
            );
            /**Returns  the flag indicating whether to draw X, where the leader terminates 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool DrawX
            (
            );
            /**Sets  the flag indicating whether to draw X, where the leader terminates 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDrawX
            (
                bool drawX /** Flag indicating whether to draw X where leader termiantes */
            );
            /**Returns  the flag indicating whether the datum is always vertical (without the stub)  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool AlwaysVertical
            (
            );
            /**Sets  the flag indicating whether the datum is always vertical (without the stub)  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAlwaysVertical
            (
                bool alwaysVertical /** Flag indicating whether the datum is always vertical */
            );
            /** Returns the SimpleDraftingAidPreferences object  @return  Datum preferences 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::SimpleDraftingAidPreferences * GetSimpleDraftingAidPreferences
            (
            );
            /** Sets the SimpleDraftingAidPreferences object 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSimpleDraftingAidPreferences
            (
                NXOpen::Annotations::SimpleDraftingAidPreferences * preferences /** New datum preferences */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
