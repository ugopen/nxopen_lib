#ifndef NXOpen_WELD_CHARACTERISTICSVALUEBUILDER_HXX_INCLUDED
#define NXOpen_WELD_CHARACTERISTICSVALUEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_CharacteristicsValueBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Weld_CharacteristicsValueBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class CharacteristicsValueBuilder;
    }
    class NXObject;
    namespace Weld
    {
        class _CharacteristicsValueBuilderBuilder;
        class CharacteristicsValueBuilderImpl;
        /** The object containing the information about the attribute to be 
            placed on the output of the weld feature. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  CharacteristicsValueBuilder : public NXObject
        {
            /** Settings to indicate the type of value contained in the attribute. */
            public: enum Type
            {
                TypeString/** Indicates the attribute value contains a string. */,
                TypeInteger/** Indicates the attribute value contains a integer. */,
                TypeDouble/** Indicates the attribute value contains a double. */,
                TypeOption/** Indicates the attribute value contains a pre set list of strings. */,
                TypeNone/** Indicates there is no attribute value. */
            };

            private: CharacteristicsValueBuilderImpl * m_characteristicsvaluebuilder_impl;
            private: friend class  _CharacteristicsValueBuilderBuilder;
            protected: CharacteristicsValueBuilder();
            public: ~CharacteristicsValueBuilder();
            /**Returns  the indication if the attribute is required to be placed on the output. true indicates
                    the attribute will always be placed on the output, false indicates the attribute does not 
                    have to be placed on the output. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Required
            (
            );
            /**Returns  the indication if the attribute is to be placed on the output. true indicates
                    the attribute will be placed on the output, false indicates the attribute will not
                    be placed on the output. Note that if Required is true, then this property cannot be 
                    set. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool Active
            (
            );
            /**Sets  the indication if the attribute is to be placed on the output. true indicates
                    the attribute will be placed on the output, false indicates the attribute will not
                    be placed on the output. Note that if Required is true, then this property cannot be 
                    set. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetActive
            (
                bool active /** active */ 
            );
            /**Returns  the indication if the attribute value has been changed. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: bool ValueChanged
            (
            );
            /**Sets  the indication if the attribute value has been changed. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetValueChanged
            (
                bool status /** status */ 
            );
            /**Returns  the title of this attribute. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Returns  the type of this attribute. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::CharacteristicsValueBuilder::Type AttributeType
            (
            );
            /**Returns  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeString Weld::CharacteristicsValueBuilder::TypeString@endlink  or
                        @link Weld::CharacteristicsValueBuilder::TypeOption Weld::CharacteristicsValueBuilder::TypeOption@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString ValueString
            (
            );
            /**Sets  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeString Weld::CharacteristicsValueBuilder::TypeString@endlink  or
                        @link Weld::CharacteristicsValueBuilder::TypeOption Weld::CharacteristicsValueBuilder::TypeOption@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetValueString
            (
                const NXString & valueString /** valuestring */ 
            );
            /**Sets  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeString Weld::CharacteristicsValueBuilder::TypeString@endlink  or
                        @link Weld::CharacteristicsValueBuilder::TypeOption Weld::CharacteristicsValueBuilder::TypeOption@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetValueString
            (
                const char * valueString /** valuestring */ 
            );
            /**Returns  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeInteger Weld::CharacteristicsValueBuilder::TypeInteger@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int ValueInteger
            (
            );
            /**Sets  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeInteger Weld::CharacteristicsValueBuilder::TypeInteger@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetValueInteger
            (
                int valueInteger /** valueinteger */ 
            );
            /**Returns  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeDouble Weld::CharacteristicsValueBuilder::TypeDouble@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double ValueDouble
            (
            );
            /**Sets  the value of this attribute when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeDouble Weld::CharacteristicsValueBuilder::TypeDouble@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetValueDouble
            (
                double valueDouble /** valuedouble */ 
            );
            /** The list of strings that are available to be set when AttributeType is @link Weld::CharacteristicsValueBuilder::TypeOption Weld::CharacteristicsValueBuilder::TypeOption@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void GetOptionStrings
            (
                std::vector<NXString> & strings /** Strings that are allowed for values. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
