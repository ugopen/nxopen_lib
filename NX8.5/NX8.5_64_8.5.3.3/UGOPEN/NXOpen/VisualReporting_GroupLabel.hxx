#ifndef NXOpen_VISUALREPORTING_GROUPLABEL_HXX_INCLUDED
#define NXOpen_VISUALREPORTING_GROUPLABEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     VisualReporting_GroupLabel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXColor.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/VisualReporting_GroupLabel.hxx>
#include <NXOpen/libnxopencpp_visualreporting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace VisualReporting
    {
        class GroupLabel;
    }
    class NXObject;
    namespace VisualReporting
    {
        class _GroupLabelBuilder;
        class GroupLabelImpl;
        /**
                A group label corresponds to a group of objects in the results of an applied 
                @link VisualReporting::VisualReport VisualReporting::VisualReport@endlink .
            
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_VISUALREPORTINGEXPORT  GroupLabel : public NXObject
        {
            /** Represents the possible display style options
                        for a @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    */
            public: enum DisplayStyleOption
            {
                DisplayStyleOptionDeEmphasis/** Matching objects will be de-emphasized */,
                DisplayStyleOptionSpecifiedColor/** Matching objects will be shown using @link VisualReporting::GroupLabel::Color VisualReporting::GroupLabel::Color@endlink  */,
                DisplayStyleOptionOriginalColor/** Matching objects will be shown using their original color */,
                DisplayStyleOptionAutomaticColor/** Matching objects will be shown using @link VisualReporting::GroupLabel::Color VisualReporting::GroupLabel::Color@endlink  which is system determined */
            };

            /** Represents the possible priority options
                        for a @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    */
            public: enum TagPriorityOption
            {
                TagPriorityOptionLow/** Low priority */,
                TagPriorityOptionMedium/** Medium priority */,
                TagPriorityOptionHigh/** Hign priority */
            };

            private: GroupLabelImpl * m_grouplabel_impl;
            private: friend class  _GroupLabelBuilder;
            protected: GroupLabel();
            public: ~GroupLabel();
            /**Returns  whether the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  is manual. It is manual if it either has a user-specified
                        @link NXObject::Name NXObject::Name@endlink  or if its @link VisualReporting::GroupLabel::DisplayStyle VisualReporting::GroupLabel::DisplayStyle@endlink  is
                        not @link VisualReporting::GroupLabel::DisplayStyleOptionAutomaticColor VisualReporting::GroupLabel::DisplayStyleOptionAutomaticColor@endlink .
                        You can change a @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  from automatic to manual, but you cannot 
                        change @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  from manual to automatic.
                    
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: bool IsManual
            (
            );
            /**Sets  whether the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  is manual. It is manual if it either has a user-specified
                        @link NXObject::Name NXObject::Name@endlink  or if its @link VisualReporting::GroupLabel::DisplayStyle VisualReporting::GroupLabel::DisplayStyle@endlink  is
                        not @link VisualReporting::GroupLabel::DisplayStyleOptionAutomaticColor VisualReporting::GroupLabel::DisplayStyleOptionAutomaticColor@endlink .
                        You can change a @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  from automatic to manual, but you cannot 
                        change @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  from manual to automatic.
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetManual
            (
                bool isManual /** ismanual */ 
            );
            /**Returns  whether the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  has a user-specified @link NXObject::Name NXObject::Name@endlink . If it isn't
                        user-specified, then the system will generate its name automatically.
                    
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: bool IsNameUserSpecified
            (
            );
            /**Sets  whether the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  has a user-specified @link NXObject::Name NXObject::Name@endlink . If it isn't
                        user-specified, then the system will generate its name automatically.
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetNameUserSpecified
            (
                bool isNameUserSpecified /** isnameuserspecified */ 
            );
            /**Returns  the lower bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXString LowerBound
            (
            );
            /**Sets  the lower bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetLowerBound
            (
                const NXString & fromValue /** fromvalue */ 
            );
            /**Sets  the lower bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            void SetLowerBound
            (
                const char * fromValue /** fromvalue */ 
            );
            /**Returns  the upper bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXString UpperBound
            (
            );
            /**Sets  the upper bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetUpperBound
            (
                const NXString & upperBound /** upperbound */ 
            );
            /**Sets  the upper bound value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by range) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            void SetUpperBound
            (
                const char * upperBound /** upperbound */ 
            );
            /**Returns  the value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by value) 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXString Value
            (
            );
            /**Sets  the value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by value) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetValue
            (
                const NXString & groupLabelValue /** grouplabelvalue */ 
            );
            /**Sets  the value of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  (if it is being grouped by value) 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            void SetValue
            (
                const char * groupLabelValue /** grouplabelvalue */ 
            );
            /**Returns  the @link VisualReporting::GroupLabel::DisplayStyleOption VisualReporting::GroupLabel::DisplayStyleOption@endlink  of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXOpen::VisualReporting::GroupLabel::DisplayStyleOption DisplayStyle
            (
            );
            /**Sets  the @link VisualReporting::GroupLabel::DisplayStyleOption VisualReporting::GroupLabel::DisplayStyleOption@endlink  of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetDisplayStyle
            (
                NXOpen::VisualReporting::GroupLabel::DisplayStyleOption displayStyle /** displaystyle */ 
            );
            /**Returns  the color of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXOpen::NXColor::Rgb Color
            (
            );
            /**Sets  the color of the @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetColor
            (
                const NXOpen::NXColor::Rgb & color /** color */ 
            );
            /**Returns  the bitmap name of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXString BitmapName
            (
            );
            /**Sets  the bitmap name of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetBitmapName
            (
                const NXString & bitmapName /** bitmapname */ 
            );
            /**Sets  the bitmap name of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            void SetBitmapName
            (
                const char * bitmapName /** bitmapname */ 
            );
            /**Returns  the custom message of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXString CustomMessage
            (
            );
            /**Sets  the custom message of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetCustomMessage
            (
                const NXString & customMessage /** custommessage */ 
            );
            /**Sets  the custom message of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink .
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            void SetCustomMessage
            (
                const char * customMessage /** custommessage */ 
            );
            /**Returns  the Tag Priority of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: NXOpen::VisualReporting::GroupLabel::TagPriorityOption TagPriority
            (
            );
            /**Sets  the Tag Priority of this @link VisualReporting::GroupLabel VisualReporting::GroupLabel@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetTagPriority
            (
                NXOpen::VisualReporting::GroupLabel::TagPriorityOption tagPriority /** tagpriority */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
