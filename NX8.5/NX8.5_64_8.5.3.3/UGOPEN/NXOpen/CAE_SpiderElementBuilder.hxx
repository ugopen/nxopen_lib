#ifndef NXOpen_CAE_SPIDERELEMENTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SPIDERELEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SpiderElementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_SpiderElementBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SpiderElementBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectFENode;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class _SpiderElementBuilderBuilder;
        class SpiderElementBuilderImpl;
        /**
            Represents a @link CAE::SpiderElementBuilder CAE::SpiderElementBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateSpiderElementBuilder  CAE::NodeElementManager::CreateSpiderElementBuilder @endlink  <br> 
         <br>  Created in NX5.0.1.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SpiderElementBuilder : public Builder
        {
            /**  Option to create new mesh or add to existing mesh */
            public: enum NewMeshType
            {
                NewMeshTypeCreate/** create new mesh*/,
                NewMeshTypeExisting/** add to existing mesh*/
            };

            private: SpiderElementBuilderImpl * m_spiderelementbuilder_impl;
            private: friend class  _SpiderElementBuilderBuilder;
            protected: SpiderElementBuilder();
            public: ~SpiderElementBuilder();
            /**Returns  the element neutral name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXString NeutralName
            (
            );
            /**Sets  the element neutral name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNeutralName
            (
                const NXString & neutralName /** neutralname */ 
            );
            /**Sets  the element neutral name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetNeutralName
            (
                const char * neutralName /** neutralname */ 
            );
            /**Returns  the mesh collector name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXString CollectorName
            (
            );
            /**Sets  the mesh collector name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCollectorName
            (
                const NXString & collectorName /** collectorname */ 
            );
            /**Sets  the mesh collector name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetCollectorName
            (
                const char * collectorName /** collectorname */ 
            );
            /**Returns  the new mesh option 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SpiderElementBuilder::NewMeshType NewMeshOption
            (
            );
            /**Sets  the new mesh option 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNewMeshOption
            (
                NXOpen::CAE::SpiderElementBuilder::NewMeshType newMeshOption /** newmeshoption */ 
            );
            /**Returns  the mesh name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXString MeshName
            (
            );
            /**Sets  the mesh name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshName
            (
                const NXString & meshName /** meshname */ 
            );
            /**Sets  the mesh name 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetMeshName
            (
                const char * meshName /** meshname */ 
            );
            /**Returns  a core node 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENode * CoreNode
            (
            );
            /**Returns  the leg nodes 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * LegNodes
            (
            );
            /**Returns  the label 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : None */
            public: int Label
            (
            );
            /**Sets  the label 
             <br>  Created in NX5.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int label /** label */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
