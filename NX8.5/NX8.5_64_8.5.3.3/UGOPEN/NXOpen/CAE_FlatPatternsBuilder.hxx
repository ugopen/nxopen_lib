#ifndef NXOpen_CAE_FLATPATTERNSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_FLATPATTERNSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FlatPatternsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_FlatPatternsBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FlatPatternsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _FlatPatternsBuilderBuilder;
        class FlatPatternsBuilderImpl;
        /** Represents a Flat Patterns Builder.  <br> To create a new instance of this class, use @link CAE::LaminateGlobalLayupMgr::CreateFlatPatternsBuilder  CAE::LaminateGlobalLayupMgr::CreateFlatPatternsBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FlatPatternsBuilder : public Builder
        {
            private: FlatPatternsBuilderImpl * m_flatpatternsbuilder_impl;
            private: friend class  _FlatPatternsBuilderBuilder;
            protected: FlatPatternsBuilder();
            public: ~FlatPatternsBuilder();
            /**Returns  the ply select 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int PlySelect
            (
            );
            /**Sets  the ply select 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlySelect
            (
                int plySelect /** plyselect */ 
            );
            /**Returns  the string0 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Filename
            (
            );
            /**Sets  the string0 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetFilename
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the string0 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            void SetFilename
            (
                const char * filename /** filename */ 
            );
            /**Returns  the individual export 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool IndividualExport
            (
            );
            /**Sets  the individual export 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetIndividualExport
            (
                bool individualExport /** individualexport */ 
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void ExportButton
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
