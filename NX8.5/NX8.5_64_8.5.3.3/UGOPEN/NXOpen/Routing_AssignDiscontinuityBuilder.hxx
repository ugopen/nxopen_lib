#ifndef NXOpen_ROUTING_ASSIGNDISCONTINUITYBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ASSIGNDISCONTINUITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_AssignDiscontinuityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/Routing_AssignDiscontinuityBuilder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class AssignDiscontinuityBuilder;
    }
    class Builder;
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        class SegmentPairBuilder;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    class TaggedObjectList;
    namespace Routing
    {
        class _AssignDiscontinuityBuilderBuilder;
        class AssignDiscontinuityBuilderImpl;
        /** the Builder to Assign Discontinuity for the stocks  <br> To create a new instance of this class, use @link Routing::RouteManager::CreateAssignDiscontinuityBuilder  Routing::RouteManager::CreateAssignDiscontinuityBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  AssignDiscontinuityBuilder : public Builder
        {
            /** the Enum for the types Block */
            public: enum Types
            {
                TypesSimple/** simple */ ,
                TypesComplex/** complex */ 
            };

            private: AssignDiscontinuityBuilderImpl * m_assigndiscontinuitybuilder_impl;
            private: friend class  _AssignDiscontinuityBuilderBuilder;
            protected: AssignDiscontinuityBuilder();
            public: ~AssignDiscontinuityBuilder();
            /**Returns  the Rcp type of the selected object  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::RouteObjectCollector * SimplePoint
            (
            );
            /**Returns  the Rcp type of the selected object  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObject * ComplexPoint
            (
            );
            /**Returns  the segment pairs selected for the assigning Discontinuity 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObjectList * SegmentPair
            (
            );
            /**Returns  the list of selected segments pairs
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::TaggedObjectList * SegPairList
            (
            );
            /**Returns  the type of Block
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::AssignDiscontinuityBuilder::Types Type
            (
            );
            /**Sets  the type of Block
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetType
            (
                NXOpen::Routing::AssignDiscontinuityBuilder::Types type /** type */ 
            );
            /** Creates a SegmentPairBuilder  used to create list item for AssignDiscontinuity  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Routing::SegmentPairBuilder * SegmentPairBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
