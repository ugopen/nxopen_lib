#ifndef NXOpen_GEOMETRICUTILITIES_DRAFTVARIABLEANGLEDATA_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_DRAFTVARIABLEANGLEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_DraftVariableAngleData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class DraftVariableAngleData;
    }
    namespace GeometricUtilities
    {
        class DraftPointData;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _DraftVariableAngleDataBuilder;
        class DraftVariableAngleDataImpl;
        /** Represents data containing variable angle draft point data objects
             <br> This class will not be created by the user.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  DraftVariableAngleData : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: DraftVariableAngleDataImpl * m_draftvariableangledata_impl;
            private: friend class  _DraftVariableAngleDataBuilder;
            protected: DraftVariableAngleData();
            public: ~DraftVariableAngleData();
            /** Adds @link GeometricUtilities::DraftPointData GeometricUtilities::DraftPointData@endlink  objects	
            		 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void AddDraftPoints
            (
                const std::vector<NXOpen::GeometricUtilities::DraftPointData *> & points /** Array of DraftPointData Objects */
            );
            /** Removes @link GeometricUtilities::DraftPointData GeometricUtilities::DraftPointData@endlink  objects
            		 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void RemoveDraftPoints
            (
                const std::vector<NXOpen::GeometricUtilities::DraftPointData *> & points /** Array of DraftPointData Objects */
            );
            /** Returns @link GeometricUtilities::DraftPointData GeometricUtilities::DraftPointData@endlink  objects
            		  @return  Array of DraftPointData Objects 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::GeometricUtilities::DraftPointData *> GetDraftPoints
            (
            );
            /** Returns number of @link GeometricUtilities::DraftPointData GeometricUtilities::DraftPointData@endlink  objects
            		  @return  Number of DraftPointData Objects 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: int GetNumberOfDraftPoints
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
