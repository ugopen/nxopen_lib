#ifndef NXOpen_CAE_CAESET_HXX_INCLUDED
#define NXOpen_CAE_CAESET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CAESet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SetObject.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CAESet;
    }
    class TaggedObject;
    namespace CAE
    {
        class CAESetImpl;
        /**  @brief  Represents a group of CAE object sets. The objects in each set
                can be used to create loads, constraints ..etc 

          
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CAESet : public TransientObject
        {
            private: CAESetImpl * m_caeset_impl;
            /// \cond NX_NO_DOC 
            public: explicit CAESet(void *ptr);
            /// \endcond 
            /** Sets the objects in the set. 
             <br>  Created in NX4.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMembers
            (
                const std::vector<NXOpen::CAE::SetObject> & members /** objects to add to set */
            );
            /** Gets the objects in the set. 
             <br>  Created in NX4.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetMembers
            (
                std::vector<NXOpen::CAE::SetObject> & members /** objects in set */
            );
            /** Destroys the set 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~CAESet();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
