#ifndef NXOpen_ASSEMBLIES_ASSEMBLYMANAGER_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_ASSEMBLYMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_AssemblyManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Assemblies_ConstraintDisplayBuilder.hxx>
#include <NXOpen/Assemblies_CreateNewComponentBuilder.hxx>
#include <NXOpen/Assemblies_HideComponentBuilder.hxx>
#include <NXOpen/Assemblies_LoadInterpartDataBuilder.hxx>
#include <NXOpen/Assemblies_MakeUniquePartBuilder.hxx>
#include <NXOpen/Assemblies_ReplaceComponentBuilder.hxx>
#include <NXOpen/Assemblies_ShowComponentBuilder.hxx>
#include <NXOpen/Assemblies_UpdateStructureBuilder.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_assemblies_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Assemblies
    {
        class AssemblyManager;
    }
    class BasePart;
    namespace Assemblies
    {
        class ConstraintDisplayBuilder;
    }
    namespace Assemblies
    {
        class CreateNewComponentBuilder;
    }
    namespace Assemblies
    {
        class HideComponentBuilder;
    }
    namespace Assemblies
    {
        class LoadInterpartDataBuilder;
    }
    namespace Assemblies
    {
        class MakeUniquePartBuilder;
    }
    namespace Assemblies
    {
        class ReplaceComponentBuilder;
    }
    namespace Assemblies
    {
        class ShowComponentBuilder;
    }
    namespace Assemblies
    {
        class UpdateStructureBuilder;
    }
    namespace Assemblies
    {
        class AssemblyManagerImpl;
        /**  Represents the Assembly Manager  <br> To obtain an instance of this class, refer to @link BasePart  BasePart @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ASSEMBLIESEXPORT  AssemblyManager
        {
            private: AssemblyManagerImpl * m_assemblymanager_impl;
            private: NXOpen::BasePart* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AssemblyManager(NXOpen::BasePart *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~AssemblyManager();
            /** Creates a @link Assemblies::HideComponentBuilder Assemblies::HideComponentBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::HideComponentBuilder * CreateHideComponentBuilder
            (
            );
            /** Creates a @link Assemblies::ShowComponentBuilder Assemblies::ShowComponentBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::ShowComponentBuilder * CreateShowComponentBuilder
            (
            );
            /** Creates a @link Assemblies::UpdateStructureBuilder Assemblies::UpdateStructureBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::UpdateStructureBuilder * CreateUpdateStructureBuilder
            (
            );
            /** Creates a @link Assemblies::ReplaceComponentBuilder Assemblies::ReplaceComponentBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::ReplaceComponentBuilder * CreateReplaceComponentBuilder
            (
            );
            /** Creates a @link Assemblies::LoadInterpartDataBuilder Assemblies::LoadInterpartDataBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : wave ("WAVE FUNCTIONALITY") */
            public: NXOpen::Assemblies::LoadInterpartDataBuilder * CreateLoadInterpartDataBuilder
            (
            );
            /** Creates a @link Assemblies::CreateNewComponentBuilder Assemblies::CreateNewComponentBuilder@endlink   @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::CreateNewComponentBuilder * CreateNewComponentBuilder
            (
            );
            /** Creates a @link Assemblies::ConstraintDisplayBuilder Assemblies::ConstraintDisplayBuilder@endlink  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::ConstraintDisplayBuilder * CreateConstraintDisplayBuilder
            (
            );
            /** Creates a @link Assemblies::MakeUniquePartBuilder Assemblies::MakeUniquePartBuilder@endlink  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::MakeUniquePartBuilder * CreateMakeUniquePartBuilder
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
