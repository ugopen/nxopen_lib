#ifndef NXOpen_FEATURES_REORDERBLENDSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_REORDERBLENDSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ReorderBlendsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ReorderBlendsBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ReorderBlendsBuilder;
    }
    class Face;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _ReorderBlendsBuilderBuilder;
        class ReorderBlendsBuilderImpl;
        /**
            Represents a @link Features::ReorderBlends Features::ReorderBlends@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateReorderBlendsBuilder  Features::FeatureCollection::CreateReorderBlendsBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ReorderBlendsBuilder : public Features::FeatureBuilder
        {
            private: ReorderBlendsBuilderImpl * m_reorderblendsbuilder_impl;
            private: friend class  _ReorderBlendsBuilderBuilder;
            protected: ReorderBlendsBuilder();
            public: ~ReorderBlendsBuilder();
            /**Returns  the blend face1 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BlendFace1
            (
            );
            /**Returns  the blend face2 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BlendFace2
            (
            );
            /** Auto find blend face2 which has overflow to a given blend face(as blend face1). 
                         <br>  
                        Return cases: Output/return vary based on number of candidate found: 
                         <br> 
                         <br> 
                        when 0 candidate found -\> blendFace2 = NULL error = DMX_REORDER_BLEND_NO_INTERACTION 
                         <br> 
                         <br> 
                        when 1 candidate found -\> blendFace2 = candidate, error = CM_NO_ERRORS 
                         <br> 
                         <br> 
                        when \>1 candidates found -\> blendFace2 = NULL, error = CM_NO_ERRORS; 
                         <br> 

                     @return A blend face which has overflow with blendFace1
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Face * GetBlendface2Candidate
            (
                NXOpen::Face * blendFace1 /** A blend face for finding its overflow blend face*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
