#ifndef NXOpen_BLOCKSTYLER_ONPATHDIMENSION_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_ONPATHDIMENSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_OnPathDimension.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_OnPathDimension.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class OnPathDimension;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    class TaggedObject;
    namespace BlockStyler
    {
        class _OnPathDimensionBuilder;
        class OnPathDimensionImpl;
        /** Represents a On Path Dimension block
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  OnPathDimension : public BlockStyler::UIBlock
        {
            private: OnPathDimensionImpl * m_onpathdimension_impl;
            private: friend class  _OnPathDimensionBuilder;
            protected: OnPathDimension();
            public: ~OnPathDimension();
            /**Returns  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipImage
            (
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipImage
            (
                const NXString & imageString /** image string */ 
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipImage
            (
                const char * imageString /** image string */ 
            );
            /**Returns  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipLayoutAsString
            (
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipLayoutAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipLayoutAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the BalloonTooltipLayout members  @return Values to get from the property. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetBalloonTooltipLayoutMembers
            (
            );
            /**Returns  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipText
            (
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipText
            (
                const NXString & balloonTooltipText /** balloon tooltip text */ 
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipText
            (
                const char * balloonTooltipText /** balloon tooltip text */ 
            );
            /**Returns  the ExpressionObject
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * ExpressionObject
            (
            );
            /**Sets  the ExpressionObject
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetExpressionObject
            (
                NXOpen::TaggedObject * expressionObj /** expression obj */ 
            );
            /**Returns  the Formula
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Formula
            (
            );
            /**Sets  the Formula
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetFormula
            (
                const NXString & formula /** formula */ 
            );
            /**Sets  the Formula
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetFormula
            (
                const char * formula /** formula */ 
            );
            /**Returns  the MaximumValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double MaximumValue
            (
            );
            /**Sets  the MaximumValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMaximumValue
            (
                double maxValue /** max value */ 
            );
            /**Returns  the MaxInclusive
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool MaxInclusive
            (
            );
            /**Sets  the MaxInclusive
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMaxInclusive
            (
                bool maxInclusive /** max inclusive */ 
            );
            /**Returns  the MinimumValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double MinimumValue
            (
            );
            /**Sets  the MinimumValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMinimumValue
            (
                double minValue /** min value */ 
            );
            /**Returns  the MinInclusive
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool MinInclusive
            (
            );
            /**Sets  the MinInclusive
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMinInclusive
            (
                bool minInclusive /** min inclusive */ 
            );
            /**Returns  the ShowFocusHandle
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ShowFocusHandle
            (
            );
            /**Sets  the ShowFocusHandle
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetShowFocusHandle
            (
                bool showFocus /** show focus */ 
            );
            /**Returns  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int SnapPointTypesOnByDefault
            (
            );
            /**Sets  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSnapPointTypesOnByDefault
            (
                int pointType /** point type */ 
            );
            /**Returns  the Units
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * Units
            (
            );
            /**Sets  the Units
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetUnits
            (
                NXOpen::TaggedObject * units /** units */ 
            );
            /**Returns  the Value.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double Value
            (
            );
            /**Sets  the Value.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetValue
            (
                double dimensionValue /** dimension value */ 
            );
            /**Returns  the WithScale. If true,the slider bar is shown.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool WithScale
            (
            );
            /**Sets  the WithScale. If true,the slider bar is shown.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetWithScale
            (
                bool withScale /** with scale */ 
            );
            /**Returns  the LocationOption as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString LocationOptionAsString
            (
            );
            /**Sets  the LocationOption as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetLocationOptionAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the LocationOption as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetLocationOptionAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the LocationOption members @return  Values to get from the property
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetLocationOptionMembers
            (
            );
            /**Returns  the OptionMask
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int OptionMask
            (
            );
            /**Sets  the OptionMask
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOptionMask
            (
                int maskVal /** maskval */ 
            );
            /**Returns  the OptionMenuTitle
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString OptionMenuTitle
            (
            );
            /**Sets  the OptionMenuTitle
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetOptionMenuTitle
            (
                const NXString & menuTitleText /** menutitletext */ 
            );
            /**Sets  the OptionMenuTitle
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetOptionMenuTitle
            (
                const char * menuTitleText /** menutitletext */ 
            );
            /**Returns  the Path
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * Path
            (
            );
            /**Sets  the Path
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPath
            (
                NXOpen::TaggedObject * path /** path */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
