#ifndef NXOpen_CAM_CENTERLINEDRILLVARIABLEINCREMENTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CENTERLINEDRILLVARIABLEINCREMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CenterlineDrillVariableIncrementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class CenterlineDrillVariableIncrementBuilder;
    }
    namespace CAM
    {
        class _CenterlineDrillVariableIncrementBuilderBuilder;
        class CenterlineDrillVariableIncrementBuilderImpl;
        /** Represents a Turn Avoidance Path Points Builder 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  CenterlineDrillVariableIncrementBuilder : public TaggedObject
        {
            private: CenterlineDrillVariableIncrementBuilderImpl * m_centerlinedrillvariableincrementbuilder_impl;
            private: friend class  _CenterlineDrillVariableIncrementBuilderBuilder;
            protected: CenterlineDrillVariableIncrementBuilder();
            public: ~CenterlineDrillVariableIncrementBuilder();
            /** Get the values of variable increment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void GetVariableIncrementListData
            (
                int index /** the index which will be get */,
                int* numberOfCuts /** the number of cuts */,
                double* increment /** the increment value */
            );
            /** Create a new variable increment at last of list, name maybe changed if not unique 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVariableIncrementListData
            (
                int numberOfCuts /** the number of cuts */,
                double increment /** the increment value */
            );
            /** Modify an existing variable increment value, name maybe changed if not unique 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void ModifyVariableIncrementListData
            (
                int index /** the index of modified variable increment */,
                int numberOfCuts /** the number of cuts */,
                double increment /** the increment value */
            );
            /** Delete an existing variable increment 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void DeleteVariableIncrementListData
            (
                int index /** the index of deleted variable increment list */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
