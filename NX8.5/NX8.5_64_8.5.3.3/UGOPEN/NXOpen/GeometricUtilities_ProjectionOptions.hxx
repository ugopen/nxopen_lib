#ifndef NXOpen_GEOMETRICUTILITIES_PROJECTIONOPTIONS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PROJECTIONOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ProjectionOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _ProjectionOptionsBuilder;
        class ProjectionOptionsImpl;
        /** Represents a ProjectionOptions 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ProjectionOptions : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the projection direction types */
            public: enum DirectionType
            {
                DirectionTypeFaceNormal/** Face Normal */,
                DirectionTypeCrvPlaneNormal/** Curve plane Normal */,
                DirectionTypeVector/** Vector Constructor */
            };

            private: ProjectionOptionsImpl * m_projectionoptions_impl;
            private: friend class  _ProjectionOptionsBuilder;
            protected: ProjectionOptions();
            public: ~ProjectionOptions();
            /**Sets  the Projection vector 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProjectVector
            (
                NXOpen::Direction * projectDirection /** Direction */
            );
            /**Returns  the Projection vector 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ProjectVector
            (
            );
            /**Sets   the Projection direction method 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProjectDirectionMethod
            (
                NXOpen::GeometricUtilities::ProjectionOptions::DirectionType projectDirectionMethod /** 0: Face normal; 1: Vector constructor */
            );
            /**Returns   the Projection direction method 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions::DirectionType ProjectDirectionMethod
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
