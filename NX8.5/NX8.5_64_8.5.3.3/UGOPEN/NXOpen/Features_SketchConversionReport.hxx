#ifndef NXOpen_FEATURES_SKETCHCONVERSIONREPORT_HXX_INCLUDED
#define NXOpen_FEATURES_SKETCHCONVERSIONREPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SketchConversionReport.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SketchConversionStatus.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class SketchConversionReport;
    }
    namespace Features
    {
        class SketchConversionStatus;
    }
    namespace Features
    {
        class SketchConversionReportImpl;
        /** Represents a collection of status of conversion of features to independent sketch. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  SketchConversionReport : public TransientObject
        {
            private: SketchConversionReportImpl * m_sketchconversionreport_impl;
            /// \cond NX_NO_DOC 
            public: explicit SketchConversionReport(void *ptr);
            /// \endcond 
            /** The number and array of convert to sketch statuses. Each status indicates conversion status for each feature  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::SketchConversionStatus *> GetStatuses
            (
            );
            /** Free resources associated with the instance of this report. This also free the resource associated with
                    the status objects. Hence the user does not have to call @link TransientObject::Dispose TransientObject::Dispose@endlink 
                    to free the resource associated with each status object.
                    After this method is called, it is illegal to use the object.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual ~SketchConversionReport();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
