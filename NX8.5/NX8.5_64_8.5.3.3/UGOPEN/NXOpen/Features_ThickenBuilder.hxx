#ifndef NXOpen_FEATURES_THICKENBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_THICKENBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ThickenBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ThickenBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ThickenBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class ScCollector;
    namespace Features
    {
        class _ThickenBuilderBuilder;
        class ThickenBuilderImpl;
        /**
            Represents a builder for a @link Features::Thicken Features::Thicken@endlink  feature. This allows creation and editing of a Thicken feature which takes a set of faces 
            and offsets them along their normals to create a solid body which has constant thickness. Since this can not be done precisely for the supported geometry 
            types there is a tolerance to specify the accuracy of the result.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateThickenBuilder  Features::FeatureCollection::CreateThickenBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ApproximateOffset </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        BooleanOperation.Type </td> <td> 
         
        Create </td> </tr> 

        <tr><td> 
         
        FirstOffset.Value </td> <td> 
         
        2.5 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        RemoveGashes </td> <td> 
         
        False </td> </tr> 

        <tr><td> 
         
        ReverseDirection </td> <td> 
         
        False </td> </tr> 

        <tr><td> 
         
        SecondOffset.Value </td> <td> 
         
        0.0 (millimeters part), 0.0 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ThickenBuilder : public Features::FeatureBuilder
        {
            private: ThickenBuilderImpl * m_thickenbuilder_impl;
            private: friend class  _ThickenBuilderBuilder;
            protected: ThickenBuilder();
            public: ~ThickenBuilder();
            /**Returns  the faces to thicken.
                    A list of one or more faces to thicken. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FaceCollector
            (
            );
            /**Returns  the first offset.
                    The first offset for the Thicken feature.
                    A positive value is applied along the normal of the face to be thickened.
                    Negative values are applied in the opposite direction.
                    The difference between the first and second offset must be non-zero. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstOffset
            (
            );
            /**Returns  the reverse direction.
                    A flag to indicate whether the offset direction is reversed with respect to the normal of the face to be thickened. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction.
                    A flag to indicate whether the offset direction is reversed with respect to the normal of the face to be thickened. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns  the second offset.
                    the second offset for the Thicken feature. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondOffset
            (
            );
            /**Returns  the boolean operation.
                    The boolean operation associated with the Thicken feature 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanOperation
            (
            );
            /**Returns  the "approximate offset surface" or "resolve self-intersections using patches" option.
                    The option to approximate offset surfaces for thickening operation is renamed to
                    "resolve self-intersections using patches". This option is available for editing pre-NX8
                    thicken features only. The value set by the user for this option is ignored for thicken features
                    created from NX8 onwards and its value will always be set to true internally for thicken features
                    created in NX8 and later. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ApproximateOffset
            (
            );
            /**Sets  the "approximate offset surface" or "resolve self-intersections using patches" option.
                    The option to approximate offset surfaces for thickening operation is renamed to
                    "resolve self-intersections using patches". This option is available for editing pre-NX8
                    thicken features only. The value set by the user for this option is ignored for thicken features
                    created from NX8 onwards and its value will always be set to true internally for thicken features
                    created in NX8 and later. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetApproximateOffset
            (
                bool approximateOffset /** approximateoffset */ 
            );
            /**Returns  the remove gashes option.
                    If the option is selected, Thicken will heal the input and attempt the operation
                    on the healed input. If after healing the input, the Thicken operation succeeds,
                    the Part Navigator will indicate as such with an information symbol and an entry
                    in the Alert column. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool RemoveGashes
            (
            );
            /**Sets  the remove gashes option.
                    If the option is selected, Thicken will heal the input and attempt the operation
                    on the healed input. If after healing the input, the Thicken operation succeeds,
                    the Part Navigator will indicate as such with an information symbol and an entry
                    in the Alert column. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRemoveGashes
            (
                bool removeGashes /** removegashes */ 
            );
            /**Returns  the tolerance.
                    The maximum allowable distance between the true theoretical sheet and the body created to approximate it. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the tolerance.
                    The maximum allowable distance between the true theoretical sheet and the body created to approximate it. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
