#ifndef NXOpen_ANNOTATIONS_ARCCOMPONENT_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ARCCOMPONENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_ArcComponent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class ArcComponent;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class ArcComponentImpl;
        /** Represents a single arc in an annotation and can be queried
                for information about that arc.  This information
                includes the arc type, the start angle, the end angle, 
                the radius, and the center point in absolute coordinates. 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  ArcComponent : public TransientObject
        {
            /** the arc type*/
            public: enum ArcType
            {
                ArcTypeExtension/** extension arc */,
                ArcTypeDimension/** dimension arc */,
                ArcTypeAllAround/** all around */,
                ArcTypeAnnotation/** annotation arc */,
                ArcTypeInspection/** inspection arc */,
                ArcTypeAllOver/** all over */
            };

            private: ArcComponentImpl * m_arccomponent_impl;
            /// \cond NX_NO_DOC 
            public: explicit ArcComponent(void *ptr);
            /// \endcond 
            /** Free resources associated with the arc component. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ArcComponent();
            /**Returns  the arc type.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ArcComponent::ArcType Type
            (
            );
            /**Returns  the arc center point in absolute coordinates.
                    If the annotation is on a drawing, the center point is returned 
                    in drawing space. If the annotation is on the model,
                    the center point is returned in model space. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d CenterPoint
            (
            );
            /**Returns  the arc start angle in radians.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double StartAngle
            (
            );
            /**Returns  the arc end angle in radians.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double EndAngle
            (
            );
            /**Returns  the arc radius. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double Radius
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
