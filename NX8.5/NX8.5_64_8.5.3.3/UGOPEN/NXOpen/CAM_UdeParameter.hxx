#ifndef NXOpen_CAM_UDEPARAMETER_HXX_INCLUDED
#define NXOpen_CAM_UDEPARAMETER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_UdeParameter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_UdeParameter.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class UdeParameter;
    }
    class NXObject;
    class Point;
    namespace CAM
    {
        class _UdeParameterBuilder;
        class UdeParameterImpl;
        /** Represents a User Defined Event Parameter
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  UdeParameter : public TaggedObject
        {
            private: UdeParameterImpl * m_udeparameter_impl;
            private: friend class  _UdeParameterBuilder;
            protected: UdeParameter();
            public: ~UdeParameter();
            /**Returns  the name of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString NameOfParameter
            (
            );
            /**Returns  the check to see if the parameter is optional
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ParameterOptional
            (
            );
            /**Returns  the check to see if paramter is active
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ParameterActive
            (
            );
            /**Sets  the check to see if paramter is active
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetParameterActive
            (
                bool parameterActive /** parameter is active*/
            );
            /**Returns  the integer value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int IntegerValue
            (
            );
            /**Sets  the integer value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetIntegerValue
            (
                int integerValue /** integer value of the parameter*/
            );
            /**Returns  the double value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double DoubleValue
            (
            );
            /**Sets  the double value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDoubleValue
            (
                double doubleValue /** double value of the parameter*/
            );
            /**Returns  the string value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::StringText CAM::UdeParameter::StringText @endlink and @link CAM::UdeParameter::SetStringText CAM::UdeParameter::SetStringText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAM::UdeParameter::StringText CAM::UdeParameter::StringText @endlink and @link CAM::UdeParameter::SetStringText CAM::UdeParameter::SetStringText @endlink  instead.") NXString StringValue
            (
            );
            /**Sets  the string value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::StringText CAM::UdeParameter::StringText @endlink and @link CAM::UdeParameter::SetStringText CAM::UdeParameter::SetStringText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAM::UdeParameter::StringText CAM::UdeParameter::StringText @endlink and @link CAM::UdeParameter::SetStringText CAM::UdeParameter::SetStringText @endlink  instead.") void SetStringValue
            (
                const NXString & stringValue /** string value of the parameter*/
            );
            /**Sets  the string value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::StringText CAM::UdeParameter::StringText @endlink and @link CAM::UdeParameter::SetStringText CAM::UdeParameter::SetStringText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetStringValue
            (
                const char * stringValue /** string value of the parameter*/
            );
            /**Returns  the boolean value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool BooleanValue
            (
            );
            /**Sets  the boolean value of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetBooleanValue
            (
                bool booleanValue /** boolean value of the parameter*/
            );
            /**Returns  the option value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::OptionText CAM::UdeParameter::OptionText @endlink and @link CAM::UdeParameter::SetOptionText CAM::UdeParameter::SetOptionText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAM::UdeParameter::OptionText CAM::UdeParameter::OptionText @endlink and @link CAM::UdeParameter::SetOptionText CAM::UdeParameter::SetOptionText @endlink  instead.") NXString OptionValue
            (
            );
            /**Sets  the option value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::OptionText CAM::UdeParameter::OptionText @endlink and @link CAM::UdeParameter::SetOptionText CAM::UdeParameter::SetOptionText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAM::UdeParameter::OptionText CAM::UdeParameter::OptionText @endlink and @link CAM::UdeParameter::SetOptionText CAM::UdeParameter::SetOptionText @endlink  instead.") void SetOptionValue
            (
                const NXString & optionValue /** option value of the parameter*/
            );
            /**Sets  the option value of the parameter
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::UdeParameter::OptionText CAM::UdeParameter::OptionText @endlink and @link CAM::UdeParameter::SetOptionText CAM::UdeParameter::SetOptionText @endlink  instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetOptionValue
            (
                const char * optionValue /** option value of the parameter*/
            );
            /**Returns  the point of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * tagValue /** tagvalue */ 
            );
            /**Returns  the vector of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::NXObject * Vector
            (
            );
            /**Sets  the vector of the parameter
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVector
            (
                NXOpen::NXObject * tagValue /** tagvalue */ 
            );
            /**Returns  the string utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringText
            (
            );
            /**Sets  the string utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStringText
            (
                const NXString & stringValue /** string value of the parameter*/
            );
            /**Sets  the string utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetStringText
            (
                const char * stringValue /** string value of the parameter*/
            );
            /**Returns  the option utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString OptionText
            (
            );
            /**Sets  the option utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOptionText
            (
                const NXString & optionValue /** option value of the parameter*/
            );
            /**Sets  the option utf8 value of the parameter
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            void SetOptionText
            (
                const char * optionValue /** option value of the parameter*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
