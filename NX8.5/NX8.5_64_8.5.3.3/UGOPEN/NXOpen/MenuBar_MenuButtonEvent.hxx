#ifndef NXOpen_MENUBAR_MENUBUTTONEVENT_HXX_INCLUDED
#define NXOpen_MENUBAR_MENUBUTTONEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MenuBar_MenuButtonEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MenuBar_MenuButton.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MenuBar
    {
        class MenuButtonEvent;
    }
    namespace MenuBar
    {
        class MenuButton;
    }
    namespace MenuBar
    {
    }
    namespace MenuBar
    {
        class MenuButtonEventImpl;
        /** Implements the Event Object for Menu Buttons 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  MenuButtonEvent : public TransientObject
        {
            private: MenuButtonEventImpl * m_menubuttonevent_impl;
            /// \cond NX_NO_DOC 
            public: explicit MenuButtonEvent(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is
                        called, it is illegal to use the object.  In .NET and Java,
                        his method is automatically called when the object is
                        deleted by the garbage collector.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~MenuButtonEvent();
            /**Returns  the activated MenuButton. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MenuBar::MenuButton * ActiveButton
            (
            );
            /**Returns  the name of the menu bar. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MenuBarName
            (
            );
            /** Get the ancestors of the active button.  @return  The ancestors that caused the event to fire 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetMenuAncestors
            (
            );
            /**Returns  the activated MenuButton's owning application identifier. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int ApplicationId
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
