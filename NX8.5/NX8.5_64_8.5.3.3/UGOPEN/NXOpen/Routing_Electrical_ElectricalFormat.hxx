#ifndef NXOpen_ROUTING_ELECTRICAL_ELECTRICALFORMAT_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_ELECTRICALFORMAT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_ElectricalFormat.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class ElectricalFormat;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _ElectricalFormatBuilder;
            class ElectricalFormatImpl;
            /** Represents a Routing Electrical ElectricalFormat.
                      <br> To create an  instance of this class use @link Routing::Electrical::ElectricalFormatCollection Routing::Electrical::ElectricalFormatCollection@endlink   <br> 
             <br>  Created in NX5.0.1.  <br>  
            */
            class NXOPENCPP_ROUTINGEXPORT  ElectricalFormat : public TaggedObject
            {
                /** Describes how system reports the lengths of the stock. */
                public: enum Type
                {
                    TypeConnections/** connections */ ,
                    TypeComponents/** components */ 
                };

                private: ElectricalFormatImpl * m_electricalformat_impl;
                private: friend class  _ElectricalFormatBuilder;
                protected: ElectricalFormat();
                public: ~ElectricalFormat();
                /**Returns  the name of @link ElectricalFormat ElectricalFormat@endlink  
                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: NXString Name
                (
                );
                /**Sets  the name of @link ElectricalFormat ElectricalFormat@endlink  
                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name of @link ElectricalFormat ElectricalFormat@endlink  
                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /**Returns  the type of @link ElectricalFormat ElectricalFormat@endlink  
                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: NXOpen::Routing::Electrical::ElectricalFormat::Type FormatType
                (
                );
                /**Sets  the type of @link ElectricalFormat ElectricalFormat@endlink  
                 <br>  Created in NX5.0.1.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
                public: void SetFormatType
                (
                    NXOpen::Routing::Electrical::ElectricalFormat::Type type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
