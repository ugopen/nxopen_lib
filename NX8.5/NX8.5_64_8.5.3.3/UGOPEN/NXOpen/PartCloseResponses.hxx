#ifndef NXOpen_PARTCLOSERESPONSES_HXX_INCLUDED
#define NXOpen_PARTCLOSERESPONSES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartCloseResponses.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PartCloseResponses;
    class PartCloseResponsesImpl;
    /** Manages a list of part name/response pairs which are
    used to determine whether a part should be closed if modified during
    part close.

    These responses are used as input into the following methods:
    @link BasePart::Close BasePart::Close@endlink 
    @link BasePart::Reopen BasePart::Reopen@endlink 
    @link BasePart::ReopenAs BasePart::ReopenAs@endlink 

    They are ignored in these methods unless @link BasePart::CloseModified BasePart::CloseModified@endlink 
    is set to @link BasePart::CloseModifiedUseResponses BasePart::CloseModifiedUseResponses@endlink .

     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  PartCloseResponses : public TransientObject
    {
        private: PartCloseResponsesImpl * m_partcloseresponses_impl;
        /// \cond NX_NO_DOC 
        public: explicit PartCloseResponses(void *ptr);
        /// \endcond 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~PartCloseResponses();
        /** Add a response to the list. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void AddResponse
        (
            const NXString & partName /** Part with which to associate response   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool response /** Whether or not to close the part if modified.
                        A value of true means yes; a value of false means no. */
        );
        /** Add a response to the list. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        void AddResponse
        (
            const char * partName /** Part with which to associate response   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool response /** Whether or not to close the part if modified.
                        A value of true means yes; a value of false means no. */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
