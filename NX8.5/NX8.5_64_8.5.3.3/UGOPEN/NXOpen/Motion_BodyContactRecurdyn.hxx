#ifndef NXOpen_MOTION_BODYCONTACTRECURDYN_HXX_INCLUDED
#define NXOpen_MOTION_BODYCONTACTRECURDYN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_BodyContactRecurdyn.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_BodyContactRecurdyn.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class BodyContactRecurdyn;
    }
    class Expression;
    class NXObject;
    namespace Motion
    {
        class _BodyContactRecurdynBuilder;
        class BodyContactRecurdynImpl;
        /** Represents a @link Motion::BodyContactRecurdyn Motion::BodyContactRecurdyn@endlink  
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  BodyContactRecurdyn : public NXObject
        {
            /** the enum for forec model of 3D contact */
            public: enum ForceModel
            {
                ForceModelImpact/** impact */ ,
                ForceModelPoisson/** poisson */ 
            };

            /** the enum for friction option of 3D contact */
            public: enum CoulombFriction
            {
                CoulombFrictionOff/** off */ ,
                CoulombFrictionOn/** on */ 
            };

            /** the enum for contact type option of 3D contact */
            public: enum ContactType
            {
                ContactTypePatch/** patch */ ,
                ContactTypeSurface/** surface */ ,
                ContactTypeSolid/** solid */ 
            };

            /** the enum for surface type option of 3D contact */
            public: enum SurfaceType
            {
                SurfaceTypeFaceted/** faceted */ ,
                SurfaceTypeFitted/** fitted */ 
            };

            private: BodyContactRecurdynImpl * m_bodycontactrecurdyn_impl;
            private: friend class  _BodyContactRecurdynBuilder;
            protected: BodyContactRecurdyn();
            public: ~BodyContactRecurdyn();
            /**Returns  the stiffness 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StiffnessExpression Motion::BodyContactRecurdyn::StiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StiffnessExpression to query or edit it.") double Stiffness
            (
            );
            /**Sets  the stiffness 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StiffnessExpression Motion::BodyContactRecurdyn::StiffnessExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StiffnessExpression to query or edit it.") void SetStiffness
            (
                double stiffness /** stiffness */ 
            );
            /**Returns  the force model type
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactRecurdyn::ForceModel ForceModelType
            (
            );
            /**Sets  the force model type
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetForceModelType
            (
                NXOpen::Motion::BodyContactRecurdyn::ForceModel forceModel /** force model */ 
            );
            /**Returns  the force exponent 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::ForceExponentExpression Motion::BodyContactRecurdyn::ForceExponentExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::ForceExponentExpression to query or edit it.") double ForceExponent
            (
            );
            /**Sets  the force exponent 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::ForceExponentExpression Motion::BodyContactRecurdyn::ForceExponentExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::ForceExponentExpression to query or edit it.") void SetForceExponent
            (
                double forceExponent /** force exponent */ 
            );
            /**Returns  the material damping 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::MaterialDampingExpression Motion::BodyContactRecurdyn::MaterialDampingExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::MaterialDampingExpression to query or edit it.") double MaterialDamping
            (
            );
            /**Sets  the material damping 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::MaterialDampingExpression Motion::BodyContactRecurdyn::MaterialDampingExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::MaterialDampingExpression to query or edit it.") void SetMaterialDamping
            (
                double materialDamping /** material damping */ 
            );
            /**Returns  the penetration depth 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::PenetrationDepthExpression Motion::BodyContactRecurdyn::PenetrationDepthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::PenetrationDepthExpression to query or edit it.") double PenetrationDepth
            (
            );
            /**Sets  the penetration depth 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::PenetrationDepthExpression Motion::BodyContactRecurdyn::PenetrationDepthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::PenetrationDepthExpression to query or edit it.") void SetPenetrationDepth
            (
                double penetrationDepth /** penetration depth */ 
            );
            /**Returns  the Buffer Radius Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::BufferRadiusFactorExpression Motion::BodyContactRecurdyn::BufferRadiusFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::BufferRadiusFactorExpression to query or edit it.") double BufferRadiusFactor
            (
            );
            /**Sets  the Buffer Radius Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::BufferRadiusFactorExpression Motion::BodyContactRecurdyn::BufferRadiusFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::BufferRadiusFactorExpression to query or edit it.") void SetBufferRadiusFactor
            (
                double bufferRadiusFactor /** buffer radius factor */ 
            );
            /**Returns  the Maximun Step Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression to query or edit it.") double MaximumStepSizeFactor
            (
            );
            /**Sets  the Maximun Step Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::MaximumStepSizeFactorExpression to query or edit it.") void SetMaximumStepSizeFactor
            (
                double maximumStepSizeFactor /** maximum step size factor */ 
            );
            /**Returns  the Plane Maximum Penetration of the first geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression to query or edit it.") double FirstGeometryMaximumPenetration
            (
            );
            /**Sets  the Plane Maximum Penetration of the first geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryMaximumPenetrationExpression to query or edit it.") void SetFirstGeometryMaximumPenetration
            (
                double firstGeometryMaximumPenetration /** first geometry maximum penetration */ 
            );
            /**Returns  the Plane Tolerance Factor of the first geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression to query or edit it.") double FirstGeometryPlaneToleranceFactor
            (
            );
            /**Sets  the Plane Tolerance Factor of the first geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorExpression to query or edit it.") void SetFirstGeometryPlaneToleranceFactor
            (
                double firstGeometryPlaneToleranceFactor /** first geometry plane tolerance factor */ 
            );
            /**Returns  the Plane Maximum Penetration of the second geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration to query or edit it.") double SecondGeometryMaximumPenetration
            (
            );
            /**Sets  the Plane Maximum Penetration of the second geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryMaximumPenetration to query or edit it.") void SetSecondGeometryMaximumPenetration
            (
                double secondGeometryMaximumPenetration /** second geometry maximum penetration */ 
            );
            /**Returns  the Plane Tolerance Factor of the second geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression to query or edit it.") double SecondGeometryPlaneToleranceFactor
            (
            );
            /**Sets  the Plane Tolerance Factor of the second geometry
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorExpression to query or edit it.") void SetSecondGeometryPlaneToleranceFactor
            (
                double secondGeometryPlaneToleranceFactor /** second geometry plane tolerance factor */ 
            );
            /**Returns  the coulomb friction option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactRecurdyn::CoulombFriction CoulombFrictionOption
            (
            );
            /**Sets  the coulomb friction option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoulombFrictionOption
            (
                NXOpen::Motion::BodyContactRecurdyn::CoulombFriction coulombFriction /** coulomb friction */ 
            );
            /**Returns  the coulomb coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StaticCoefficientExpression Motion::BodyContactRecurdyn::StaticCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StaticCoefficientExpression to query or edit it.") double StaticCoefficient
            (
            );
            /**Sets  the coulomb coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StaticCoefficientExpression Motion::BodyContactRecurdyn::StaticCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StaticCoefficientExpression to query or edit it.") void SetStaticCoefficient
            (
                double staticCoefficient /** static coefficient */ 
            );
            /**Returns  the stiction velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StictionVelocityExpression Motion::BodyContactRecurdyn::StictionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StictionVelocityExpression to query or edit it.") double StictionVelocity
            (
            );
            /**Sets  the stiction velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::StictionVelocityExpression Motion::BodyContactRecurdyn::StictionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::StictionVelocityExpression to query or edit it.") void SetStictionVelocity
            (
                double stictionVelocity /** stiction velocity */ 
            );
            /**Returns  the dynamic coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::DynamicCoefficientExpression Motion::BodyContactRecurdyn::DynamicCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::DynamicCoefficientExpression to query or edit it.") double DynamicCoefficient
            (
            );
            /**Sets  the dynamic coefficient 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::DynamicCoefficientExpression Motion::BodyContactRecurdyn::DynamicCoefficientExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::DynamicCoefficientExpression to query or edit it.") void SetDynamicCoefficient
            (
                double dynamicCoefficient /** dynamic coefficient */ 
            );
            /**Returns  the friction velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FrictionVelocityExpression Motion::BodyContactRecurdyn::FrictionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FrictionVelocityExpression to query or edit it.") double FrictionVelocity
            (
            );
            /**Sets  the friction velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FrictionVelocityExpression Motion::BodyContactRecurdyn::FrictionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FrictionVelocityExpression to query or edit it.") void SetFrictionVelocity
            (
                double frictionVelocity /** friction velocity */ 
            );
            /**Returns  the contact type option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactRecurdyn::ContactType ContactTypeOption
            (
            );
            /**Sets  the contact type option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetContactTypeOption
            (
                NXOpen::Motion::BodyContactRecurdyn::ContactType contactType /** contact type */ 
            );
            /**Returns  the surface type option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactRecurdyn::SurfaceType SurfaceTypeOption
            (
            );
            /**Sets  the surface type option
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSurfaceTypeOption
            (
                NXOpen::Motion::BodyContactRecurdyn::SurfaceType surfaceType /** surface type */ 
            );
            /**Returns  the rebound Damping Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReboundDampingFactorFlag
            (
            );
            /**Sets  the rebound Damping Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReboundDampingFactorFlag
            (
                bool reboundDampingFactorFlag /** rebound damping factor flag */ 
            );
            /**Returns  the rebound Damping Factor
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::ReboundDampingFactorExpression Motion::BodyContactRecurdyn::ReboundDampingFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::ReboundDampingFactorExpression to query or edit it.") double ReboundDampingFactor
            (
            );
            /**Sets  the rebound Damping Factor
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::ReboundDampingFactorExpression Motion::BodyContactRecurdyn::ReboundDampingFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::ReboundDampingFactorExpression to query or edit it.") void SetReboundDampingFactor
            (
                double reboundDampingFactor /** rebound damping factor */ 
            );
            /**Returns  the global Max. Penetration
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression to query or edit it.") double GlobalMaxPenetration
            (
            );
            /**Sets  the global Max. Penetration
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::GlobalMaxPenetrationExpression to query or edit it.") void SetGlobalMaxPenetration
            (
                double globalMaxPenetration /** global max penetration */ 
            );
            /**Returns  the auto global maximum penetration flag
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int AutoGlobalMaxPenetrationFlag
            (
            );
            /**Sets  the auto global maximum penetration flag
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAutoGlobalMaxPenetrationFlag
            (
                int autoGlobalMaxPenetrationFlag /** auto global max penetration flag */ 
            );
            /**Returns  the local Max. Penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression to query or edit it.") double LocalMaxPenetration
            (
            );
            /**Sets  the local Max. Penetration 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::LocalMaxPenetrationExpression to query or edit it.") void SetLocalMaxPenetration
            (
                double localMaxPenetration /** local max penetration */ 
            );
            /**Returns  the auto local maximum penetration flag
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int AutoLocalMaxPenetrationFlag
            (
            );
            /**Sets  the auto local maximum penetration flag
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAutoLocalMaxPenetrationFlag
            (
                int autoLocalMaxPenetrationFlag /** auto local max penetration flag */ 
            );
            /**Returns  the max Facet Size Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool FirstGeometryMaxFacetSizeFactorFlag
            (
            );
            /**Sets  the max Facet Size Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFirstGeometryMaxFacetSizeFactorFlag
            (
                bool maxFacetSizeFactorFlag /** max facet size factor flag */ 
            );
            /**Returns  the max Facet Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression to query or edit it.") double FirstGeometryMaxFacetSizeFactor
            (
            );
            /**Sets  the max Facet Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryMaxFacetSizeFactorExpression to query or edit it.") void SetFirstGeometryMaxFacetSizeFactor
            (
                double maxFacetSizeFactor /** max facet size factor */ 
            );
            /**Returns  the bounding Buffer Length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression to query or edit it.") double FirstGeometryBoundingBufferLength
            (
            );
            /**Sets  the bounding Buffer Length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryBoundingBufferLengthExpression to query or edit it.") void SetFirstGeometryBoundingBufferLength
            (
                double boundingBufferLength /** bounding buffer length */ 
            );
            /**Returns  the max Facet Size Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool SecondGeometryMaxFacetSizeFactorFlag
            (
            );
            /**Sets  the max Facet Size Factor Flag
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSecondGeometryMaxFacetSizeFactorFlag
            (
                bool maxFacetSizeFactorFlag /** max facet size factor flag */ 
            );
            /**Returns  the max Facet Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression to query or edit it.") double SecondGeometryMaxFacetSizeFactor
            (
            );
            /**Sets  the max Facet Size Factor 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryMaxFacetSizeFactorExpression to query or edit it.") void SetSecondGeometryMaxFacetSizeFactor
            (
                double maxFacetSizeFactor /** max facet size factor */ 
            );
            /**Returns  the bounding Buffer Length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression to query or edit it.") double SecondGeometryBoundingBufferLength
            (
            );
            /**Sets  the bounding Buffer Length 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryBoundingBufferLengthExpression to query or edit it.") void SetSecondGeometryBoundingBufferLength
            (
                double boundingBufferLength /** bounding buffer length */ 
            );
            /**Returns  the Plane Tolerance Factor of the first geometry for solid contact
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression to query or edit it.") double FirstGeometryPlaneToleranceFactorSolidContact
            (
            );
            /**Sets  the Plane Tolerance Factor of the first geometry for solid contact
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::FirstGeometryPlaneToleranceFactorSolidContactExpression to query or edit it.") void SetFirstGeometryPlaneToleranceFactorSolidContact
            (
                double firstGeometryPlaneToleranceFactorSolidContact /** first geometry plane tolerance factor solid contact */ 
            );
            /**Returns  the Plane Tolerance Factor of the second geometry for solid contact
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression to query or edit it.") double SecondGeometryPlaneToleranceFactorSolidContact
            (
            );
            /**Sets  the Plane Tolerance Factor of the second geometry for solid contact
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::BodyContactRecurdyn::SecondGeometryPlaneToleranceFactorSolidContactExpression to query or edit it.") void SetSecondGeometryPlaneToleranceFactorSolidContact
            (
                double secondGeometryPlaneToleranceFactorSolidContact /** second geometry plane tolerance factor solid contact */ 
            );
            /**Returns  the stiffness expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StiffnessExpression
            (
            );
            /**Returns  the force exponent expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForceExponentExpression
            (
            );
            /**Returns  the material damping expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaterialDampingExpression
            (
            );
            /**Returns  the penetration depth expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PenetrationDepthExpression
            (
            );
            /**Returns  the Buffer Radius Factor expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BufferRadiusFactorExpression
            (
            );
            /**Returns  the Maximun Step Size Factor expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaximumStepSizeFactorExpression
            (
            );
            /**Returns  the Plane Maximum Penetration of the first geometry expresion 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstGeometryMaximumPenetrationExpression
            (
            );
            /**Returns  the Plane Tolerance Factor of the first geometry expresion 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstGeometryPlaneToleranceFactorExpression
            (
            );
            /**Returns  the Plane Maximum Penetration of the second geometry expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondGeometryMaximumPenetrationExpression
            (
            );
            /**Returns  the Plane Tolerance Factor of the second geometry expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondGeometryPlaneToleranceFactorExpression
            (
            );
            /**Returns  the coulomb coefficient expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StaticCoefficientExpression
            (
            );
            /**Returns  the stiction velocity expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StictionVelocityExpression
            (
            );
            /**Returns  the dynamic coefficient expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DynamicCoefficientExpression
            (
            );
            /**Returns  the friction velocity expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrictionVelocityExpression
            (
            );
            /**Returns  the rebound Damping Factor expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReboundDampingFactorExpression
            (
            );
            /**Returns  the global Max. Penetration expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * GlobalMaxPenetrationExpression
            (
            );
            /**Returns  the local Max. Penetration expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * LocalMaxPenetrationExpression
            (
            );
            /**Returns  the max Facet Size Factor expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstGeometryMaxFacetSizeFactorExpression
            (
            );
            /**Returns  the bounding Buffer Length expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstGeometryBoundingBufferLengthExpression
            (
            );
            /**Returns  the max Facet Size Factor expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondGeometryMaxFacetSizeFactorExpression
            (
            );
            /**Returns  the bounding Buffer Length expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondGeometryBoundingBufferLengthExpression
            (
            );
            /**Returns  the Plane Tolerance Factor of the first geometry for solid contact expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FirstGeometryPlaneToleranceFactorSolidContactExpression
            (
            );
            /**Returns  the Plane Tolerance Factor of the second geometry for solid contact expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SecondGeometryPlaneToleranceFactorSolidContactExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
