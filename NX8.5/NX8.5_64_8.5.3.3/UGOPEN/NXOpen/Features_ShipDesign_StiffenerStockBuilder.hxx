#ifndef NXOpen_FEATURES_SHIPDESIGN_STIFFENERSTOCKBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_STIFFENERSTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_StiffenerStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_PlateStockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/Features_ShipDesign_StiffenerStockBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class StiffenerStockBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        namespace ShipDesign
        {
            class PlateStockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _StiffenerStockBuilderBuilder;
            class StiffenerStockBuilderImpl;
            /** This class defines the Profile or Plate stock for a Stiffener or Edge Reinforcement feature. 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  StiffenerStockBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** Type of Stiffener/Edge Reinforcement stock:  Profile or Plate */
                public: enum StockSectionType
                {
                    StockSectionTypeProfile/** Profile Stock */,
                    StockSectionTypePlate/** Plate Stock */
                };

                private: StiffenerStockBuilderImpl * m_stiffenerstockbuilder_impl;
                private: friend class  _StiffenerStockBuilderBuilder;
                protected: StiffenerStockBuilder();
                public: ~StiffenerStockBuilder();
                /**Returns  the section type (profile or plate) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerStockBuilder::StockSectionType SectionType
                (
                );
                /**Sets  the section type (profile or plate) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetSectionType
                (
                    NXOpen::Features::ShipDesign::StiffenerStockBuilder::StockSectionType sectionType /** sectiontype */ 
                );
                /**Returns  the profile stock data 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * ProfileStockData
                (
                );
                /**Returns  the plate stock data 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PlateStockBuilder * PlateStockData
                (
                );
                /**Returns  the plate height 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * PlateHeight
                (
                );
                /**Returns  the anchor point for profiles only. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int AnchorPoint
                (
                );
                /**Sets  the anchor point for profiles only. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAnchorPoint
                (
                    int anchorPoint /** anchorpoint */ 
                );
                /** The list of available anchor points  @return  Array of available anchor point names.
                                                                        These names are read from the current reuse sketch  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetAvailableAnchorPointNames
                (
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
