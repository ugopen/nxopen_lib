#ifndef NXOpen_ANNOTATIONS_DRAFTINGDATUMTARGET_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DRAFTINGDATUMTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DraftingDatumTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_BaseDatumTarget.hxx>
#include <NXOpen/Annotations_IDatumTarget.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class DraftingDatumTarget;
    }
    namespace Annotations
    {
        class ArbitraryTarget;
    }
    namespace Annotations
    {
        class BaseDatumTarget;
    }
    namespace Annotations
    {
        class DraftingArbitraryTarget;
    }
    namespace Annotations
    {
        class DraftingLineTarget;
    }
    namespace Annotations
    {
        class DraftingPointTarget;
    }
    namespace Annotations
    {
        class IDatumTarget;
    }
    namespace Annotations
    {
        class LineTarget;
    }
    namespace Annotations
    {
        class PointTarget;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class INXObject;
    namespace Annotations
    {
        class _DraftingDatumTargetBuilder;
        class DraftingDatumTargetImpl;
        /** Represents a datum target  <br> To create or edit an instance of this class, use @link Annotations::DraftingDatumTargetBuilder  Annotations::DraftingDatumTargetBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  DraftingDatumTarget : public Annotations::BaseDatumTarget, public virtual Annotations::IDatumTarget
        {
            private: DraftingDatumTargetImpl * m_draftingdatumtarget_impl;
            private: friend class  _DraftingDatumTargetBuilder;
            protected: DraftingDatumTarget();
            public: ~DraftingDatumTarget();
            /** Converts a datum target line or area to a datum target point.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New point target 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: NXOpen::Annotations::PointTarget * ConvertToPointTarget
            (
            );
            /** Converts a datum target point or area to a datum target line.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New line target 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: NXOpen::Annotations::LineTarget * ConvertToLineTarget
            (
            );
            /** Converts a datum target point, line, or non-rectangular area to a rectangular area.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New rectangulartarget 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") */
            public: NXOpen::Annotations::ArbitraryTarget * ConvertToAreaTarget
            (
            );
            /** Converts a drafting datum target line or area to a drafting datum target point.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New point target 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Annotations::DraftingPointTarget * ConvertToDraftingPointTarget
            (
            );
            /** Converts a drafting datum target point or area to a drafting datum target line. 
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New line target 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Annotations::DraftingLineTarget * ConvertToDraftingLineTarget
            (
            );
            /** Converts a drafting datum target point, line, or non-rectangular area to a drafting rectangular area.
                        NOTE: This method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated.  @return  New rectangulartarget 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Annotations::DraftingArbitraryTarget * ConvertToDraftingAreaTarget
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
