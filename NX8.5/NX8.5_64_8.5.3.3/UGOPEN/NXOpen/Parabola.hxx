#ifndef NXOpen_PARABOLA_HXX_INCLUDED
#define NXOpen_PARABOLA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Parabola.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Conic.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Parabola;
    class Conic;
    class _ParabolaBuilder;
    class ParabolaImpl;
    /** Represents a parabola curve.  <br> To create a new instance of this class, use @link CurveCollection::CreateParabola  CurveCollection::CreateParabola @endlink  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Parabola : public Conic
    {
        private: ParabolaImpl * m_parabola_impl;
        private: friend class  _ParabolaBuilder;
        protected: Parabola();
        public: ~Parabola();
        /**Returns  the focal length. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double FocalLength
        (
        );
        /**Returns  the minimum DY width. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double MinimumDY
        (
        );
        /**Returns  the maximum DY width. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: double MaximumDY
        (
        );
        /**Sets  the focal length. 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
        public: void SetFocalLength
        (
            double focalLength /** focal length */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
