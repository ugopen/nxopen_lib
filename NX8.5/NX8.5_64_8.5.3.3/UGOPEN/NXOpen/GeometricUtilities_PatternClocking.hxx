#ifndef NXOpen_GEOMETRICUTILITIES_PATTERNCLOCKING_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PATTERNCLOCKING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PatternClocking.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_PatternClocking.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PatternClocking;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _PatternClockingBuilder;
        class PatternClockingImpl;
        /**  enables the ability to apply delta transforms on individual instances of a pattern 
         <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.")  PatternClocking : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** type of pattern clocking to transform individual instances */
            public: enum ClockingType
            {
                ClockingTypeWithinPatternDefinitionLinear/** within pattern definition linear */ ,
                ClockingTypeWithinPatternDefinitionCircular/** within pattern definition circular */ 
            };

            private: PatternClockingImpl * m_patternclocking_impl;
            private: friend class  _PatternClockingBuilder;
            protected: PatternClocking();
            public: ~PatternClocking();
            /**Returns  the clocking enum to determine if linear or angular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") NXOpen::GeometricUtilities::PatternClocking::ClockingType ClockType
            (
            );
            /**Returns  the x direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") NXOpen::Expression * Direction1Delta
            (
            );
            /** Sets an x direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") void SetXDirectionDelta
            (
                const NXString & direction1Exp /** distance delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets an x direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetXDirectionDelta
            (
                const char * direction1Exp /** distance delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the y direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") NXOpen::Expression * Direction2Delta
            (
            );
            /** Sets a y direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") void SetYDirectionDelta
            (
                const NXString & direction2Exp /** distance delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets a y direction delta for linear clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetYDirectionDelta
            (
                const char * direction2Exp /** distance delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the angular delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") NXOpen::Expression * AngularDelta
            (
            );
            /** Sets a angular delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") void SetAngularDelta
            (
                const NXString & angularDeltaExp /** angular delta in degrees   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets a angular delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetAngularDelta
            (
                const char * angularDeltaExp /** angular delta in degrees   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the radial delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") NXOpen::Expression * RadialDelta
            (
            );
            /** Sets a radial delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  This functionality is no longer supported.") void SetRadialDelta
            (
                const NXString & radialDelta /** distance radial delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets a radial delta for circular clocking 
             <br>  @deprecated Deprecated in NX8.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetRadialDelta
            (
                const char * radialDelta /** distance radial delta   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
