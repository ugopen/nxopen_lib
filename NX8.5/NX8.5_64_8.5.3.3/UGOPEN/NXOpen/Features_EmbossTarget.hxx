#ifndef NXOpen_FEATURES_EMBOSSTARGET_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_EmbossTarget.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class EmbossTarget;
    }
    class Expression;
    class ISurface;
    class ScCollector;
    namespace Features
    {
        class _EmbossTargetBuilder;
        class EmbossTargetImpl;
        /** Represents a target object. 
                 <br> 
                This class provides methods to set and get the target faces, the End-Cap source entity and offset/translation distance value.
                 <br>         
                 <br> 
                Following are default values and options:
                 <br>   
                        
                 <br> 
                <b>Target Faces</b>    User must set it
                 <br> 
                 <br> 
                <b>End-Cap Faces</b>    User must set it when End-Cap source option is face.  
                 <br> 
                 <br> 
                <b>End-Cap Plane</b>    User must set it when End-Cap source option is plane.   
                 <br> 
                 <br> 
                <b>End-Cap Translate Direction Flip</b>    false
                 <br> 
                 <br> 
                <b>Target Offset/Translate Distance</b>    2.0/5.0[in/mm]
                 <br> 
                
            
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  EmbossTarget : public TaggedObject
        {
            private: EmbossTargetImpl * m_embosstarget_impl;
            private: friend class  _EmbossTargetBuilder;
            protected: EmbossTarget();
            public: ~EmbossTarget();
            /**Sets  the target faces on which the emboss places.
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTargetFace
            (
                NXOpen::ScCollector * targetFaceCollector /**Target faces on which the emboss places.*/
            );
            /**Returns  the target faces on which the emboss places.
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetFace
            (
            );
            /**Sets  the face to produce End-Cap 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapFace
            (
                NXOpen::ScCollector * endcapFaceCollector /**Faces to create endcap if End-Cap source option is @link  Features::EmbossLimit::EndcapSourceOptionFace   Features::EmbossLimit::EndcapSourceOptionFace @endlink */
            );
            /**Returns  the face to produce End-Cap 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * EndcapFace
            (
            );
            /**Sets  the plane to produce End-Cap 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndcapPlane
            (
                NXOpen::ISurface * endcapPlane /**Plane to create End-Cap if End-Cap source option is @link  Features::EmbossLimit::EndcapSourceOptionPlane   Features::EmbossLimit::EndcapSourceOptionPlane @endlink */
            );
            /**Returns  the plane to produce End-Cap 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ISurface * EndcapPlane
            (
            );
            /** The distance expression formula string for offset or translation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistance
            (
                const NXString & distance /**The distance expression formula string for offset or translation  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** The distance expression formula string for offset or translation 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetDistance
            (
                const char * distance /**The distance expression formula string for offset or translation  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the offset/translate distance
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Sets  the flip flag for translation direction 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFlipDirection
            (
                bool dirFlip /**If true, the emboss direction is reversed to the defined translation direction */
            );
            /**Returns  the flip flag for translation direction 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: bool FlipDirection
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
