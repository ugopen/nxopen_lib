#ifndef NXOpen_DRAWINGS_HINGELINEBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_HINGELINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_HingeLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_HingeLineBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class HingeLineBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drawings
    {
        class _HingeLineBuilderBuilder;
        class HingeLineBuilderImpl;
        /**
            Represents a Drawings.HingeLineBuilder. A hinge line is a line displayed on the parent 
            view and used as a reference to rotate a child view in proper orthographic space.
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  HingeLineBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Specifies the hinge line vector option */
            public: enum Hingeline
            {
                HingelineInferred/** The option to infer a hinge line based on parent, child view position */,
                HingelineDefined/** The option for selecting hinge line using vector construction tools */
            };

            private: HingeLineBuilderImpl * m_hingelinebuilder_impl;
            private: friend class  _HingeLineBuilderBuilder;
            protected: HingeLineBuilder();
            public: ~HingeLineBuilder();
            /**Returns  the vector option: Inferred or Defined 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::HingeLineBuilder::Hingeline VectorOption
            (
            );
            /**Sets  the vector option: Inferred or Defined 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVectorOption
            (
                NXOpen::Drawings::HingeLineBuilder::Hingeline vectorOption /** vectoroption */ 
            );
            /**Returns  the direction for the hinge line 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * SpecifyVector
            (
            );
            /**Sets  the direction for the hinge line 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSpecifyVector
            (
                NXOpen::Direction * specifyVector /** specifyvector */ 
            );
            /**Returns  the reverse direction setting 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction setting 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /**Returns  the infer associative setting 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the infer associative setting 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
