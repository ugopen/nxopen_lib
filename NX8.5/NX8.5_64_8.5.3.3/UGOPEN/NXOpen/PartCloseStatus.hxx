#ifndef NXOpen_PARTCLOSESTATUS_HXX_INCLUDED
#define NXOpen_PARTCLOSESTATUS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartCloseStatus.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PartCloseStatus;
    class BasePart;
    class PartCloseStatusImpl;
    /** This class represents a list of part names with associated status codes that serve
        to communicate why these parts were not able to be closed.

     <br>  Created in NX6.0.1.  <br>  
    */
    class NXOPENCPPEXPORT  PartCloseStatus : public TransientObject
    {
        private: PartCloseStatusImpl * m_partclosestatus_impl;
        /// \cond NX_NO_DOC 
        public: explicit PartCloseStatus(void *ptr);
        /// \endcond 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        public: virtual ~PartCloseStatus();
        /**Returns  the number of parts that could not be closed 
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        public: int NumberUnclosedParts
        (
        );
        /** Returns the name of a particular part that could not be closed  @return  
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::BasePart * GetPart
        (
            int i /** Index into list of unclosed parts */
        );
        /** Returns the error code indicating the reason the part could not
                 be closed.
             @return  Reason that part could not be closed 
         <br>  Created in NX6.0.1.  <br>  
         <br> License requirements : None */
        public: int GetStatus
        (
            int i /** Index into list of unclosed parts */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
