#ifndef NXOpen_DISPLAYMODIFICATION_HXX_INCLUDED
#define NXOpen_DISPLAYMODIFICATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DisplayModification.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DisplayModification;
    class DisplayableObject;
    class DisplayModificationImpl;
    /** Represents changes to the display characteristics of an object 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  DisplayModification : public TransientObject
    {
        private: DisplayModificationImpl * m_displaymodification_impl;
        /// \cond NX_NO_DOC 
        public: explicit DisplayModification(void *ptr);
        /// \endcond 
        /**Sets  the apply to all faces flag. Specifies whether the modification should apply to 
            all faces of any bodies to which this is applied. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetApplyToAllFaces
        (
            bool apply /** true to apply the modification to all faces */
        );
        /**Returns  the apply to all faces flag. Specifies whether the modification should apply to 
            all faces of any bodies to which this is applied. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: bool ApplyToAllFaces
        (
        );
        /**Sets  a new color for objects which will be modified. This is in the range from 1 to 216.
                 <br> 
                To convert an RGB value to an NX color index,
                    use UF_DISP_ask_closest_color.
                To convert a color name to an NX color index,
                    use UF_DISP_ask_closest_color_in_displayed_part or
                    UF_DISP_ask_closest_color_in_part.
                For unmanaged C++, use these functions directly.
                Otherwise, use the corresponding wrapper methods of class
                NXOpen.UF.UFDisp.
                 <br> 
             
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewColor
        (
            int newColor /** new color value */
        );
        /**Returns  a new color for objects which will be modified. This is in the range from 1 to 216.
                 <br> 
                To convert an RGB value to an NX color index,
                    use UF_DISP_ask_closest_color.
                To convert a color name to an NX color index,
                    use UF_DISP_ask_closest_color_in_displayed_part or
                    UF_DISP_ask_closest_color_in_part.
                For unmanaged C++, use these functions directly.
                Otherwise, use the corresponding wrapper methods of class
                NXOpen.UF.UFDisp.
                 <br> 
             
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: int NewColor
        (
        );
        /**Sets  a new line width for objects which will be modified  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewWidth
        (
            NXOpen::DisplayableObject::ObjectWidth newWidth /** new line width */
        );
        /**Returns  a new line width for objects which will be modified  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DisplayableObject::ObjectWidth NewWidth
        (
        );
        /**Sets  a new font (line style) for objects which will be modified 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewFont
        (
            NXOpen::DisplayableObject::ObjectFont newFont /** new font */
        );
        /**Returns  a new font (line style) for objects which will be modified 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DisplayableObject::ObjectFont NewFont
        (
        );
        /** Set a new grid count for objects which will be modified.  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewGrid
        (
            int uGrid /** number of grid lines in the u direction */,
            int vGrid /** number of grid lines in the v direction */
        );
        /** Get grid count for objects which will be modified. Only applies to faces. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void GetNewGrid
        (
            int* uGrid /** number of grid lines in the u direction */,
            int* vGrid /** number of grid lines in the v direction */
        );
        /**Sets  a new layer for objects which will be modified. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewLayer
        (
            int layer /** new layer, must be a valid layer number */
        );
        /**Returns  a new layer for objects which will be modified. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: int NewLayer
        (
        );
        /**Sets  a new translucency value for objects which will be modified. Only applies to faces.
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNewTranslucency
        (
            int translucency /** new translucency value in the range 0 to 100 */
        );
        /**Returns  a new translucency value for objects which will be modified. Only applies to faces.
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: int NewTranslucency
        (
        );
        /**Sets  the partial shading flag. Only applies to faces. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPartiallyShaded
        (
            bool on /** true for partial shading on */
        );
        /**Returns  the partial shading flag. Only applies to faces. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: bool PartiallyShaded
        (
        );
        /**Sets  the face analysis mode flag. Only applies to faces. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFaceAnalysisMode
        (
            bool on /** true to enable face analysis mode */
        );
        /**Returns  the face analysis mode flag. Only applies to faces. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: bool FaceAnalysisMode
        (
        );
        /** Apply this display modification to a set of objects 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void Apply
        (
            const std::vector<NXOpen::DisplayableObject *> & objects /** objects to be modified */
        );
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector. 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~DisplayModification();
        /**Sets  the flag for knot display. Only applies to b-spline. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetKnotDisplayState
        (
            bool on /** true to enable knot display */
        );
        /**Returns  the flag for knot display. Only applies to b-spline. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool KnotDisplayState
        (
        );
        /**Sets  the flag for pole display. Only applies to b-spline. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPoleDisplayState
        (
            bool on /** true to enable pole display */
        );
        /**Returns  the flag for pole display. Only applies to b-spline. 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: bool PoleDisplayState
        (
        );
        /**Sets  the flag to apply display changes to Owning Parts. Specifies whether the 
                display modifications should apply to the owning parts of the selected objects. 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void SetApplyToOwningParts
        (
            bool apply /** true to apply the display property changes to the owning parts */
        );
        /**Returns  the flag to apply display changes to Owning Parts. Specifies whether the 
                display modifications should apply to the owning parts of the selected objects. 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: bool ApplyToOwningParts
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
