#ifndef NXOpen_PRINTBUILDER_HXX_INCLUDED
#define NXOpen_PRINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PrintBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PlotSourceBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class PrintBuilder;
    class Builder;
    class PlotSourceBuilder;
    class _PrintBuilderBuilder;
    class PrintBuilderImpl;
    /**
        Represents a @link NXOpen::PrintBuilder NXOpen::PrintBuilder@endlink .  This class is for use on Windows only and 
        contains all information relating to printing.  It is created using @link NXOpen::PlotManager NXOpen::PlotManager@endlink .
        
        All sheets provided must be in the displayed part.
        
        The user must specify the sheets to be printed by setting the appropriate fields 
        through the @link NXOpen::PlotSourceBuilder NXOpen::PlotSourceBuilder@endlink .  The printer text and copies fields must be
        set in order to successfully print the provided sheets.  The printer text is the path of the 
        desired printer and the copies field represents the number of copies to be printed.  This class
        also allows for the line widths to be scaled by setting the appropriate thin, normal, or thick
        scale factors.
         <br> To create a new instance of this class, use @link NXOpen::PlotManager::CreatePrintBuilder  NXOpen::PlotManager::CreatePrintBuilder @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    Orientation </td> <td> 
     
    Landscape </td> </tr> 

    <tr><td> 
     
    Width1ScaleFactor </td> <td> 
     
    1.0 </td> </tr> 

    <tr><td> 
     
    Width2ScaleFactor </td> <td> 
     
    2.0 </td> </tr> 

    <tr><td> 
     
    Width3ScaleFactor </td> <td> 
     
    3.0 </td> </tr> 

    <tr><td> 
     
    Width4ScaleFactor </td> <td> 
     
    4.0 </td> </tr> 

    <tr><td> 
     
    Width5ScaleFactor </td> <td> 
     
    5.0 </td> </tr> 

    <tr><td> 
     
    Width6ScaleFactor </td> <td> 
     
    6.0 </td> </tr> 

    <tr><td> 
     
    Width7ScaleFactor </td> <td> 
     
    7.0 </td> </tr> 

    <tr><td> 
     
    Width8ScaleFactor </td> <td> 
     
    8.0 </td> </tr> 

    <tr><td> 
     
    Width9ScaleFactor </td> <td> 
     
    9.0 </td> </tr> 

    </table>  

     <br>  Created in NX5.0.1.  <br>  
    */
    class NXOPENCPPEXPORT  PrintBuilder : public NXOpen::Builder
    {
        /** Specifies the output option when printing Current Display */
        public: enum OutputOption
        {
            OutputOptionWireframe/** Wireframe in Original Color */,
            OutputOptionWireframeBlackWhite/** Wireframe in Black and White */,
            OutputOptionShaded/** Shaded with Original Background */
        };

        /** Specifies the print image resolution */
        public: enum ImageResolutionOption
        {
            ImageResolutionOptionDraft/** Draft Resolution */,
            ImageResolutionOptionLow/** Low Resolution */,
            ImageResolutionOptionMedium/** Medium Resolution */,
            ImageResolutionOptionHigh/** High Resolution */
        };

        /** Specifies the orientation of the printed sheet */
        public: enum OrientationOption
        {
            OrientationOptionLandscape/** Landscape Orientation */,
            OrientationOptionPortrait/** Portrait Orientation */
        };

        /** Specifies the paper size of the printed sheet */
        public: enum PaperSize
        {
            PaperSizeLetter/** 8 1/2- by 11-inches */,
            PaperSizeLegal/** 8 1/2- by 14-inches */,
            PaperSizeInch9x11/** 9- by 11-inch sheet */,
            PaperSizeInch10x11/** 10- by 11-inch sheet */,
            PaperSizeInch10x14/** 10- by 14-inch sheet */,
            PaperSizeInch15x11/** 15- by 11-inch sheet */,
            PaperSizeInch11x17/** 11- by 17-inch sheet */,
            PaperSizeInch12x11/** 12- by 11-inch sheet: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeA2/** A2 sheet, 420 x 594-millimeters */,
            PaperSizeA3/** A3 sheet, 297- by 420-millimeters */,
            PaperSizeA3Extra/** A3 Extra 322 x 445-millimeters */,
            PaperSizeA3ExtraTransverse/** A3 Extra Transverse 322 x 445-millimeters */,
            PaperSizeA3Rotated/** A3 rotated sheet, 420- by 297-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeA3Transverse/** A3 Transverse 297 x 420-millimeters */,
            PaperSizeA4/** A4 sheet, 210- by 297-millimeters */,
            PaperSizeA4Extra/** A4 sheet, 9.27 x 12.69 inches */,
            PaperSizeA4Plus/** A4 Plus 210 x 330-millimeters */,
            PaperSizeA4Rotated/** A4 rotated sheet, 297- by 210-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeA4Small/** A4 small sheet, 210- by 297-millimeters */,
            PaperSizeA4Transverse/** A4 Transverse 210 x 297 millimeters */,
            PaperSizeA5/** A5 sheet, 148- by 210-millimeters */,
            PaperSizeA5Extra/** A5 Extra 174 x 235-millimeters */,
            PaperSizeA5Rotated/** A5 rotated sheet, 210- by 148-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeA5Transverse/** A5 Transverse 148 x 210-millimeters */,
            PaperSizeA6/** A6 sheet, 105- by 148-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeA6Rotated/** A6 rotated sheet, 148- by 105-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeAPlus/** SuperA/A4 227 x 356 -millimeters */,
            PaperSizeB4/** B4 sheet, 250- by 354-millimeters */,
            PaperSizeB4JisRotated/** B4 (JIS) rotated sheet, 364- by 257-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeB5/** B5 sheet, 182- by 257-millimeter paper */,
            PaperSizeB5Extra/** B5 (ISO) Extra 201 x 276-millimeters */,
            PaperSizeB5JisRotated/** B5 (JIS) rotated sheet, 257- by 182-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeB6Jis/** B6 (JIS) sheet, 128- by 182-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeB6JisRotated/** B6 (JIS) rotated sheet, 182- by 128-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeBPlus/** SuperB/A3 305 x 487-millimeters */,
            PaperSizeCSheet/** C Sheet, 17- by 22-inches */,
            PaperSizeDoubleJapanesePostcard/** Double Japanese Postcard, 200- by 148-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeDoubleJapanesePostcardRotated/** Double Japanese Postcard Rotated, 148- by 200-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeDSheet/** D Sheet, 22- by 34-inches */,
            PaperSizeEnvelope9/** #9 Envelope, 3 7/8- by 8 7/8-inches */,
            PaperSizeEnvelope10/** #10 Envelope, 4 1/8- by 9 1/2-inches */,
            PaperSizeEnvelope11/** #11 Envelope, 4 1/2- by 10 3/8-inches */,
            PaperSizeEnvelope12/** #12 Envelope, 4 3/4- by 11-inches */,
            PaperSizeEnvelope14/** #14 Envelope, 5- by 11 1/2-inches */,
            PaperSizeEnvelopeC5/** C5 Envelope, 162- by 229-millimeters */,
            PaperSizeEnvelopeC3/** C3 Envelope, 324- by 458-millimeters */,
            PaperSizeEnvelopeC4/** C4 Envelope, 229- by 324-millimeters */,
            PaperSizeEnvelopeC6/** C6 Envelope, 114- by 162-millimeters */,
            PaperSizeEnvelopeC65/** C65 Envelope, 114- by 229-millimeters */,
            PaperSizeEnvelopeB4/**  B4 Envelope, 250- by 353-millimeters*/,
            PaperSizeEnvelopeB5/** B5 Envelope, 176- by 250-millimeters */,
            PaperSizeEnvelopeB6/** B6 Envelope, 176- by 125-millimeters */,
            PaperSizeEnvelopeDl/** DL Envelope, 110- by 220-millimeters */,
            PaperSizeEnvelopeInvite/** Envelope Invite 220 x 220 mm */,
            PaperSizeEnvelopeItaly/** Italy Envelope, 110- by 230-millimeters */,
            PaperSizeEnvelopeMonarch/** Monarch Envelope, 3 7/8- by 7 1/2-inches */,
            PaperSizeEnvelopePersonal/** 6 3/4 Envelope, 3 5/8- by 6 1/2-inches */,
            PaperSizeESheet/** E Sheet, 34- by 44-inches */,
            PaperSizeExecutive/** Executive, 7 1/4- by 10 1/2-inches */,
            PaperSizeFanfoldUs/** US Std Fanfold, 14 7/8- by 11-inches */,
            PaperSizeFanfoldStandardGerman/** German Std Fanfold, 8 1/2- by 12-inches */,
            PaperSizeFanfoldLegalGerman/** German Legal Fanfold, 8 - by 13-inches */,
            PaperSizeFolio/** Folio, 8 1/2- by 13-inch paper */,
            PaperSizeIsoB4/** B4 (ISO) 250- by 353-millimeters paper */,
            PaperSizeJapanesePostcard/** Japanese Postcard, 100- by 148-millimeters */,
            PaperSizeJapanesePostcardRotated/** Japanese Postcard Rotated, 148- by 100-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeChou3/** Japanese Envelope Chou #3: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeChou3Rotated/** Japanese Envelope Chou #3 Rotated: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeChou4/** Japanese Envelope Chou #4: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeChou4Rotated/** Japanese Envelope Chou #4 Rotated: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeKaku2/** Japanese Envelope Kaku #2: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeKaku2Rotated/** Japanese Envelope Kaku #2 Rotated: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeKaku3/** Japanese Envelope Kaku #3: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeKaku3Rotated/** Japanese Envelope Kaku #3 Rotated: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeYou4/** Japanese Envelope You #4: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeJapaneseEnvelopeYou4Rotated/** Japanese Envelope You #4 Rotated: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeLedger/** Ledger, 17- by 11-inches */,
            PaperSizeLegalExtra/** Legal Extra 9 1/2 x 15 inches */,
            PaperSizeLetterExtra/** Letter Extra 9 1/2 x 12 inches */,
            PaperSizeLetterExtraTransverse/** Letter Extra Transverse 9 1/2 x 12 inches */,
            PaperSizeLetterRotated/** Letter Rotated 11 by 8 1/2 inches */,
            PaperSizeLetterSmall/** Letter Small, 8 1/2- by 11-inches */,
            PaperSizeLetterTransverse/** Letter Transverse 8 1/2 x 11-inches */,
            PaperSizeNote/** Note, 8 1/2- by 11-inches */,
            PaperSizePrc16k/** PRC 16K, 146- by 215-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrc16kRotated/** PRC 16K Rotated, 215- by 146-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrc32k/** PRC 32K, 97- by 151-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrc32kRotated/** PRC 32K Rotated, 151- by 97-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrc32kBig/** PRC 32K(Big) 97- by 151-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrc32kBigRotated/** PRC 32K(Big) Rotated, 151- by 97-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope1/** PRC Envelope #1, 102- by 165-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope1Rotated/** PRC Envelope #1 Rotated, 165- by 102-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope2/** PRC Envelope #2, 102- by 176-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope2Rotated/** PRC Envelope #2 Rotated, 176- by 102-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope3/** PRC Envelope #3, 125- by 176-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope3Rotated/** PRC Envelope #3 Rotated, 176- by 125-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope4/** PRC Envelope #4, 110- by 208-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope4Rotated/** PRC Envelope #4 Rotated, 208- by 110-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope5/** PRC Envelope #5, 110- by 220-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope5Rotated/** PRC Envelope #5 Rotated, 220- by 110-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope6/** PRC Envelope #6, 120- by 230-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope6Rotated/** PRC Envelope #6 Rotated, 230- by 120-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope7/** PRC Envelope #7, 160- by 230-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope7Rotated/** PRC Envelope #7 Rotated, 230- by 160-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope8/** PRC Envelope #8, 120- by 309-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope8Rotated/** PRC Envelope #8 Rotated, 309- by 120-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope9/** PRC Envelope #9, 229- by 324-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope9Rotated/** PRC Envelope #9 Rotated, 324- by 229-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope10/** PRC Envelope #10, 324- by 458-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizePrcEnvelope10Rotated/** PRC Envelope #10 Rotated, 458- by 324-millimeters: Windows 98/Me, Windows NT 4.0 and later */,
            PaperSizeQuarto/** Quarto, 215- by 275-millimeter paper */,
            PaperSizeStatement/** Statement, 5 1/2- by 8 1/2-inches */,
            PaperSizeTabloid/** Tabloid, 11- by 17-inches */,
            PaperSizeTabloidExtra/** Tabloid, 11.69 x 18-inches */,
            PaperSizeCustom/** Custom paper size, this requires the Custom Paper field to be set with the actual paper size ID */
        };

        private: PrintBuilderImpl * m_printbuilder_impl;
        private: friend class  _PrintBuilderBuilder;
        protected: PrintBuilder();
        public: ~PrintBuilder();
        /**Returns  the number of copies.  This option specifies the number of copies to 
                    be printed. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: int Copies
        (
        );
        /**Sets  the number of copies.  This option specifies the number of copies to 
                    be printed. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetCopies
        (
            int copies /** copies */ 
        );
        /**Returns  the thin width scale factor.  This number is used as a scale factor
                    for thin width lines.  It cannot be less than 0.0.  
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: double ThinWidth
        (
        );
        /**Sets  the thin width scale factor.  This number is used as a scale factor
                    for thin width lines.  It cannot be less than 0.0.  
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetThinWidth
        (
            double thinWidth /** thinwidth */ 
        );
        /**Returns  the normal width scale factor.  This number is used as a scale factor
                    for normal width lines.  It cannot be less than 0.0. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: double NormalWidth
        (
        );
        /**Sets  the normal width scale factor.  This number is used as a scale factor
                    for normal width lines.  It cannot be less than 0.0. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetNormalWidth
        (
            double normalWidth /** normalwidth */ 
        );
        /**Returns  the thick width scale factor.  This number is used as a scale factor
                    for thick width lines.  It cannot be less than 0.0. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: double ThickWidth
        (
        );
        /**Sets  the thick width scale factor.  This number is used as a scale factor
                    for thick width lines.  It cannot be less than 0.0. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetThickWidth
        (
            double thickWidth /** thickwidth */ 
        );
        /**Returns  the width1 scale factor.  This number is used as a scale factor
                    for width1 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width1ScaleFactor
        (
        );
        /**Sets  the width1 scale factor.  This number is used as a scale factor
                    for width1 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth1ScaleFactor
        (
            double width1ScaleFactor /** width1scalefactor */ 
        );
        /**Returns  the width2 scale factor.  This number is used as a scale factor
                    for width2 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width2ScaleFactor
        (
        );
        /**Sets  the width2 scale factor.  This number is used as a scale factor
                    for width2 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth2ScaleFactor
        (
            double width2ScaleFactor /** width2scalefactor */ 
        );
        /**Returns  the width3 scale factor.  This number is used as a scale factor
                    for width3 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width3ScaleFactor
        (
        );
        /**Sets  the width3 scale factor.  This number is used as a scale factor
                    for width3 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth3ScaleFactor
        (
            double width3ScaleFactor /** width3scalefactor */ 
        );
        /**Returns  the width4 scale factor.  This number is used as a scale factor
                    for width4 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width4ScaleFactor
        (
        );
        /**Sets  the width4 scale factor.  This number is used as a scale factor
                    for width4 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth4ScaleFactor
        (
            double width4ScaleFactor /** width4scalefactor */ 
        );
        /**Returns  the width5 scale factor.  This number is used as a scale factor
                    for width5 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width5ScaleFactor
        (
        );
        /**Sets  the width5 scale factor.  This number is used as a scale factor
                    for width5 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth5ScaleFactor
        (
            double width5ScaleFactor /** width5scalefactor */ 
        );
        /**Returns  the width6 scale factor.  This number is used as a scale factor
                    for width6 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width6ScaleFactor
        (
        );
        /**Sets  the width6 scale factor.  This number is used as a scale factor
                    for width6 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth6ScaleFactor
        (
            double width6ScaleFactor /** width6scalefactor */ 
        );
        /**Returns  the width7 scale factor.  This number is used as a scale factor
                    for width7 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width7ScaleFactor
        (
        );
        /**Sets  the width7 scale factor.  This number is used as a scale factor
                    for width7 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth7ScaleFactor
        (
            double width7ScaleFactor /** width7scalefactor */ 
        );
        /**Returns  the width8 scale factor.  This number is used as a scale factor
                    for width8 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width8ScaleFactor
        (
        );
        /**Sets  the width8 scale factor.  This number is used as a scale factor
                    for width8 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth8ScaleFactor
        (
            double width8ScaleFactor /** width8scalefactor */ 
        );
        /**Returns  the width9 scale factor.  This number is used as a scale factor
                    for width9 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: double Width9ScaleFactor
        (
        );
        /**Sets  the width9 scale factor.  This number is used as a scale factor
                    for width9 lines.  It cannot be less than 0.0. 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetWidth9ScaleFactor
        (
            double width9ScaleFactor /** width9scalefactor */ 
        );
        /**Returns  the shaded image option.  The Current Display will be printed using 
                    the correct current shading if this option is set. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintBuilder::OutputOption Output
        (
        );
        /**Sets  the shaded image option.  The Current Display will be printed using 
                    the correct current shading if this option is set. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetOutput
        (
            NXOpen::PrintBuilder::OutputOption outputOption /** outputoption */ 
        );
        /**Returns  the white background option.  When printing a shaded view, this option allows
                    for the background to be white.  Only set to true if printing Current Display
                    and "Shaded Image" is also set to true. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: bool WhiteBackground
        (
        );
        /**Sets  the white background option.  When printing a shaded view, this option allows
                    for the background to be white.  Only set to true if printing Current Display
                    and "Shaded Image" is also set to true. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetWhiteBackground
        (
            bool whiteBackground /** whitebackground */ 
        );
        /**Returns  the Source builder.  The Source builder contains all data involving the sheets to
                    to be printed. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::PlotSourceBuilder * SourceBuilder
        (
        );
        /**Returns  the printer text.  The printer field represents the full path name of the 
                    printer the user wishes to print to. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: NXString PrinterText
        (
        );
        /**Sets  the printer text.  The printer field represents the full path name of the 
                    printer the user wishes to print to. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetPrinterText
        (
            const NXString & printer /** printer */ 
        );
        /**Sets  the printer text.  The printer field represents the full path name of the 
                    printer the user wishes to print to. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        void SetPrinterText
        (
            const char * printer /** printer */ 
        );
        /**Returns  the raster images option.  This option determines whether or not raster images will
                    be used when printing. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: bool RasterImages
        (
        );
        /**Sets  the raster images option.  This option determines whether or not raster images will
                    be used when printing. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetRasterImages
        (
            bool rasterImages /** rasterimages */ 
        );
        /**Returns  the shaded geometry as wireframe option.  If set to true, this option will show 
                    shaded objects as wireframes.  The shaded objects will be represented as shaded 
                    if this option is set to false. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: bool ShadedGeometry
        (
        );
        /**Sets  the shaded geometry as wireframe option.  If set to true, this option will show 
                    shaded objects as wireframes.  The shaded objects will be represented as shaded 
                    if this option is set to false. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetShadedGeometry
        (
            bool shadedGeometry /** shadedgeometry */ 
        );
        /**Returns  the plotting custom symbols in the foreground option.
                    Setting this option on will cause custom symbols to be plotted in the foreground.
                    When this option is off, geometry may overlap custom symbols when plotted. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool CustomSymbolsInForeground
        (
        );
        /**Sets  the plotting custom symbols in the foreground option.
                    Setting this option on will cause custom symbols to be plotted in the foreground.
                    When this option is off, geometry may overlap custom symbols when plotted. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCustomSymbolsInForeground
        (
            bool customSymbolsInForeground /** customsymbolsinforeground */ 
        );
        /**Returns  the resolution of images created for printing shaded views. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintBuilder::ImageResolutionOption ImageResolution
        (
        );
        /**Sets  the resolution of images created for printing shaded views. 
         <br>  Created in NX5.0.1.  <br>  
         <br> License requirements : None */
        public: void SetImageResolution
        (
            NXOpen::PrintBuilder::ImageResolutionOption imageResolution /** imageresolution */ 
        );
        /**Returns  the orientation.  This options determines the orientation of the
                    printed page. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintBuilder::OrientationOption Orientation
        (
        );
        /**Sets  the orientation.  This options determines the orientation of the
                    printed page. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOrientation
        (
            NXOpen::PrintBuilder::OrientationOption orientationOption /** orientationoption */ 
        );
        /**Returns  the paper.  This options determines the paper size used for printing.  Note
                    that all options may not available on all printers. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::PrintBuilder::PaperSize Paper
        (
        );
        /**Sets  the paper.  This options determines the paper size used for printing.  Note
                    that all options may not available on all printers. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetPaper
        (
            NXOpen::PrintBuilder::PaperSize paper /** paper */ 
        );
        /**Returns  the custom paper.  This will be used if the paper size is set to Custom. 
         <br>  Created in NX6.0.2.  <br>  
         <br> License requirements : None */
        public: int CustomPaper
        (
        );
        /**Sets  the custom paper.  This will be used if the paper size is set to Custom. 
         <br>  Created in NX6.0.2.  <br>  
         <br> License requirements : None */
        public: void SetCustomPaper
        (
            int customPaper /** custompaper */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
