#ifndef NXOpen_VSA_HOLEPATTERNFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_VSA_HOLEPATTERNFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_HolePatternFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class HolePatternFeatureBuilder;
    }
    class Builder;
    namespace Vsa
    {
        class _HolePatternFeatureBuilderBuilder;
        class HolePatternFeatureBuilderImpl;
        /**
            
             <br> To create a new instance of this class, use @link NXOpen::Vsa::VsaManager::CreateHolePatternFeatureBuilder  NXOpen::Vsa::VsaManager::CreateHolePatternFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DoubleKurtosisForm </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DoubleKurtosisLoc </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DoubleKurtosisSize </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DoubleSkewnessForm </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DoubleSkewnessLoc </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DoubleSkewnessSize </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        EnumForm </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        EnumLoc </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        EnumSize </td> <td> 
         
        Normal </td> </tr> 

        </table>  

         <br>  Usable only on Windows <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  HolePatternFeatureBuilder : public NXOpen::Builder
        {
            /**
                    
                    */
            public: enum APIEnumSize
            {
                APIEnumSizeNormal/** normal */ ,
                APIEnumSizeUniform/** uniform */ ,
                APIEnumSizeExtreme/** extreme */ ,
                APIEnumSizePearson/** pearson */ ,
                APIEnumSizeTrapeziodal/** trapeziodal */ 
            };

            /**
                    
                    */
            public: enum APIEnumLoc
            {
                APIEnumLocNormal/** normal */ ,
                APIEnumLocUniform/** uniform */ ,
                APIEnumLocExtreme/** extreme */ ,
                APIEnumLocPearson/** pearson */ ,
                APIEnumLocTrapeziodal/** trapeziodal */ 
            };

            /**
                    
                    */
            public: enum APIEnumForm
            {
                APIEnumFormNormal/** normal */ ,
                APIEnumFormUniform/** uniform */ ,
                APIEnumFormExtreme/** extreme */ ,
                APIEnumFormPearson/** pearson */ ,
                APIEnumFormTrapeziodal/** trapeziodal */ 
            };

            private: HolePatternFeatureBuilderImpl * m_holepatternfeaturebuilder_impl;
            private: friend class  _HolePatternFeatureBuilderBuilder;
            protected: HolePatternFeatureBuilder();
            public: ~HolePatternFeatureBuilder();
            /**Returns  the string name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringName
            (
            );
            /**Sets  the string name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStringName
            (
                const NXString & stringName /** stringname */ 
            );
            /**Sets  the string name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStringName
            (
                const char * stringName /** stringname */ 
            );
            /**Returns  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringDescription
            (
            );
            /**Sets  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStringDescription
            (
                const NXString & stringDescription /** stringdescription */ 
            );
            /**Sets  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStringDescription
            (
                const char * stringDescription /** stringdescription */ 
            );
            /**Returns  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int NumInstanceCount
            (
            );
            /**Sets  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetNumInstanceCount
            (
                int numInstanceCount /** numinstancecount */ 
            );
            /**Returns  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumSize EnumSize
            (
            );
            /**Sets  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumSize
            (
                NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumSize enumSize /** enumsize */ 
            );
            /**Returns  the double skewness size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessSize
            (
            );
            /**Sets  the double skewness size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessSize
            (
                double doubleSkewnessSize /** doubleskewnesssize */ 
            );
            /**Returns  the double kurtosis size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisSize
            (
            );
            /**Sets  the double kurtosis size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisSize
            (
                double doubleKurtosisSize /** doublekurtosissize */ 
            );
            /**Returns  the enum loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumLoc EnumLoc
            (
            );
            /**Sets  the enum loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumLoc
            (
                NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumLoc enumLoc /** enumloc */ 
            );
            /**Returns  the double skewness loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessLoc
            (
            );
            /**Sets  the double skewness loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessLoc
            (
                double doubleSkewnessLoc /** doubleskewnessloc */ 
            );
            /**Returns  the double kurtosis loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisLoc
            (
            );
            /**Sets  the double kurtosis loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisLoc
            (
                double doubleKurtosisLoc /** doublekurtosisloc */ 
            );
            /**Returns  the enum form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumForm EnumForm
            (
            );
            /**Sets  the enum form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumForm
            (
                NXOpen::Vsa::HolePatternFeatureBuilder::APIEnumForm enumForm /** enumform */ 
            );
            /**Returns  the double skewness form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessForm
            (
            );
            /**Sets  the double skewness form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessForm
            (
                double doubleSkewnessForm /** doubleskewnessform */ 
            );
            /**Returns  the double kurtosis form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisForm
            (
            );
            /**Sets  the double kurtosis form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisForm
            (
                double doubleKurtosisForm /** doublekurtosisform */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
