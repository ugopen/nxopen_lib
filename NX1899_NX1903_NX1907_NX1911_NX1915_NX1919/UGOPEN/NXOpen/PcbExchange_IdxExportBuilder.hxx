#ifndef NXOpen_PCBEXCHANGE_IDXEXPORTBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_IDXEXPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_IdxExportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class IdxExportBuilder;
    }
    class Builder;
    namespace PcbExchange
    {
        class _IdxExportBuilderBuilder;
        class IdxExportBuilderImpl;
        /** Represents a @link NXOpen::PcbExchange::IdxExportBuilder NXOpen::PcbExchange::IdxExportBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateIdxExportBuilder  NXOpen::PcbExchange::Manager::CreateIdxExportBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  IdxExportBuilder : public NXOpen::Builder
        {
            /** This enum defines the file format options. */
            public: enum FileFormatEnum
            {
                FileFormatEnumIdx2/** idx2 */ ,
                FileFormatEnumIdx3/** idx3 */ 
            };

            /** This enum defines the Idx location options. */
            public: enum IdxLocationEnum
            {
                IdxLocationEnumOs/** os */ ,
                IdxLocationEnumTc/** tc */ 
            };

            /** This enum defines the file units. */
            public: enum ExportUnitsEnum
            {
                ExportUnitsEnumMm/** mm */ ,
                ExportUnitsEnumThou/** thou */ 
            };

            private: IdxExportBuilderImpl * m_idxexportbuilder_impl;
            private: friend class  _IdxExportBuilderBuilder;
            protected: IdxExportBuilder();
            public: ~IdxExportBuilder();
            /**Returns  the file format 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::IdxExportBuilder::FileFormatEnum FileFormat
            (
            );
            /**Sets  the file format 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFileFormat
            (
                NXOpen::PcbExchange::IdxExportBuilder::FileFormatEnum fileFormat /** fileformat */ 
            );
            /**Returns  the baseline location 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::IdxExportBuilder::IdxLocationEnum BaselineLocation
            (
            );
            /**Sets  the baseline location 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBaselineLocation
            (
                NXOpen::PcbExchange::IdxExportBuilder::IdxLocationEnum baselineLocation /** baselinelocation */ 
            );
            /**Returns  the baseline file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BaselineFile
            (
            );
            /**Sets  the baseline file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBaselineFile
            (
                const NXString & baselineFile /** baselinefile */ 
            );
            /**Sets  the baseline file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBaselineFile
            (
                const char * baselineFile /** baselinefile */ 
            );
            /**Returns  the use current work part option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseCurrentWorkPart
            (
            );
            /**Sets  the use current work part option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetUseCurrentWorkPart
            (
                bool useCurrentWorkPart /** usecurrentworkpart */ 
            );
            /**Returns  the baseline number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BaselineNumber
            (
            );
            /**Sets  the baseline number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBaselineNumber
            (
                const NXString & baselineNumber /** baselinenumber */ 
            );
            /**Sets  the baseline number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBaselineNumber
            (
                const char * baselineNumber /** baselinenumber */ 
            );
            /**Returns  the baseline revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BaselineRevision
            (
            );
            /**Sets  the baseline revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBaselineRevision
            (
                const NXString & baselineRevision /** baselinerevision */ 
            );
            /**Sets  the baseline revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBaselineRevision
            (
                const char * baselineRevision /** baselinerevision */ 
            );
            /**Returns  the file units 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::IdxExportBuilder::ExportUnitsEnum FileUnits
            (
            );
            /**Sets  the file units 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFileUnits
            (
                NXOpen::PcbExchange::IdxExportBuilder::ExportUnitsEnum exportUnits /** exportunits */ 
            );
            /**Returns  the tag model option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool TagModel
            (
            );
            /**Sets  the tag model option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetTagModel
            (
                bool tagModel /** tagmodel */ 
            );
            /**Returns  the file note 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FileNote
            (
            );
            /**Sets  the file note 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFileNote
            (
                const NXString & fileNote /** filenote */ 
            );
            /**Sets  the file note 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetFileNote
            (
                const char * fileNote /** filenote */ 
            );
            /**Returns  the clone assembly option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool CloneAssembly
            (
            );
            /**Sets  the clone assembly option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetCloneAssembly
            (
                bool cloneAssembly /** cloneassembly */ 
            );
            /**Returns  the show log option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowLog
            (
            );
            /**Sets  the show log option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetShowLog
            (
                bool showLog /** showlog */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
