#ifndef NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONLOFTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONLOFTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SubdivisionLoftBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionLoftBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace Subdivision
        {
            class CageSectionDataList;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class _SubdivisionLoftBuilderBuilder;
            class SubdivisionLoftBuilderImpl;
            /** Represents a @link NXOpen::Features::Subdivision::SubdivisionLoftBuilder NXOpen::Features::Subdivision::SubdivisionLoftBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionLoftBuilder  NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionLoftBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            CanSew </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            NumberOfSegments </td> <td> 
             
            1 </td> </tr> 

            </table>  

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SubdivisionLoftBuilder : public NXOpen::Builder
            {
                /** Type of continuity. */
                public: enum ContinuityType
                {
                    ContinuityTypeSmooth/** Smooth continuity */,
                    ContinuityTypeSharp/** Sharp continuity */
                };

                private: SubdivisionLoftBuilderImpl * m_subdivisionloftbuilder_impl;
                private: friend class  _SubdivisionLoftBuilderBuilder;
                protected: SubdivisionLoftBuilder();
                public: ~SubdivisionLoftBuilder();
                /**Returns  the section objects for lofting 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::CageSectionDataList * Sections
                (
                );
                /**Returns  the number of segments 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: int NumberOfSegments
                (
                );
                /**Sets  the number of segments 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetNumberOfSegments
                (
                    int numberOfSegments /** numberofsegments */ 
                );
                /**Returns  the value indicating if the output mesh is closed.
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsClosed
                (
                );
                /**Sets  the value indicating if the output mesh is closed.
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetClosed
                (
                    bool isClosed /** isclosed */ 
                );
                /**Returns  the value indicating if open edges of the loft mesh can be sewn with selected input open edges.
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CanSew
                (
                );
                /**Sets  the value indicating if open edges of the loft mesh can be sewn with selected input open edges.
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCanSew
                (
                    bool canSew /** cansew */ 
                );
                /**Returns  the continuity. The continuity is used to specify creases in the limit surface corresponding to edges
                                of the lofted region that are sewn with the primary existing region. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionLoftBuilder::ContinuityType Continuity
                (
                );
                /**Sets  the continuity. The continuity is used to specify creases in the limit surface corresponding to edges
                                of the lofted region that are sewn with the primary existing region. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetContinuity
                (
                    NXOpen::Features::Subdivision::SubdivisionLoftBuilder::ContinuityType continuity /** continuity */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
