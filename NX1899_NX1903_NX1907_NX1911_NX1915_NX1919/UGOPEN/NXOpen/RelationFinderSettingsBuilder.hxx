#ifndef NXOpen_RELATIONFINDERSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_RELATIONFINDERSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     RelationFinderSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class RelationFinderSettingsBuilder;
    class Builder;
    class _RelationFinderSettingsBuilderBuilder;
    class RelationFinderSettingsBuilderImpl;
    /**
        Represents a @link NXOpen::RelationFinderSettingsBuilder NXOpen::RelationFinderSettingsBuilder@endlink 
         <br> To create a new instance of this class, use @link NXOpen::SketchCollection::CreateRelationFinderSettingsBuilder  NXOpen::SketchCollection::CreateRelationFinderSettingsBuilder @endlink  <br> 
     <br>  Created in NX1847.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  RelationFinderSettingsBuilder : public NXOpen::Builder
    {
        private: RelationFinderSettingsBuilderImpl * m_relationfindersettingsbuilder_impl;
        private: friend class  _RelationFinderSettingsBuilderBuilder;
        protected: RelationFinderSettingsBuilder();
        public: ~RelationFinderSettingsBuilder();
        /**Returns the setting specifies whether horizontal and vertical curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindOrthogonal
        (
        );
        /**Sets the setting specifies whether horizontal and vertical curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindOrthogonal
        (
            bool ortho /** ortho */ 
        );
        /**Returns the setting specifies whether collinear curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindCollinear
        (
        );
        /**Sets the setting specifies whether collinear curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindCollinear
        (
            bool collinear /** collinear */ 
        );
        /**Returns the setting specifies whether arcs and circles with equal radius are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindEqualRadius
        (
        );
        /**Sets the setting specifies whether arcs and circles with equal radius are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindEqualRadius
        (
            bool equalRadius /** equalradius */ 
        );
        /**Returns the setting specifies whether concentric arcs and circles are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindConcentric
        (
        );
        /**Sets the setting specifies whether concentric arcs and circles are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindConcentric
        (
            bool concentric /** concentric */ 
        );
        /**Returns the setting specifies whether tangent conditions other than filleted corners are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindTangent
        (
        );
        /**Sets the setting specifies whether tangent conditions other than filleted corners are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindTangent
        (
            bool tangent /** tangent */ 
        );
        /**Returns the setting specifies whether curves that are offset are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindOffset
        (
        );
        /**Sets the setting specifies whether curves that are offset are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindOffset
        (
            bool offset /** offset */ 
        );
        /**Returns the setting specifies whether symmetric curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindSymmetric
        (
        );
        /**Sets the setting specifies whether symmetric curves are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindSymmetric
        (
            bool symmetric /** symmetric */ 
        );
        /**Returns the setting specifies whether equal distant chamfers between lines are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindChamfer
        (
        );
        /**Sets the setting specifies whether equal distant chamfers between lines are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindChamfer
        (
            bool chamfer /** chamfer */ 
        );
        /**Returns the setting specifies whether perpendicular lines that are connected and non-orthogonal are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindPerpendicular
        (
        );
        /**Sets the setting specifies whether perpendicular lines that are connected and non-orthogonal are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindPerpendicular
        (
            bool perpendicular /** perpendicular */ 
        );
        /**Returns the setting specifies whether parallel lines are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: bool FindParallel
        (
        );
        /**Sets the setting specifies whether parallel lines are found by the relation finder
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFindParallel
        (
            bool parallel /** parallel */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
