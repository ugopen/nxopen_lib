#ifndef NXOpen_FIELDS_SKETCHPROFILEBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_SKETCHPROFILEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_SketchProfileBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Fields_FieldProfileTable.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class SketchProfileBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class PointList;
    class SelectSketch;
    class Unit;
    namespace Fields
    {
        class _SketchProfileBuilderBuilder;
        class SketchProfileBuilderImpl;
        /**  @brief 
                    Represents a builder class for creating and editing an @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink 
                    that is defined by a sketch.
                 

         
                
                    It is mandatory to select a valid @link NXOpen::Fields::SketchProfileBuilder::Sketch NXOpen::Fields::SketchProfileBuilder::Sketch @endlink and @link NXOpen::Fields::SketchProfileBuilder::SetSketch NXOpen::Fields::SketchProfileBuilder::SetSketch @endlink .
                
            
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  SketchProfileBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**  @brief interpolation method used for the profile. 

              */
            public: enum InterpolationType
            {
                InterpolationTypeLinear/** Linear */,
                InterpolationTypeAkima/** Akima */,
                InterpolationTypeAkima72/** Akima72 */,
                InterpolationTypeCubic/** Cubic */
            };

            private: SketchProfileBuilderImpl * m_sketchprofilebuilder_impl;
            private: friend class  _SketchProfileBuilderBuilder;
            protected: SketchProfileBuilder();
            public: ~SketchProfileBuilder();
            /**Returns   @brief the sketch. 

             
                        
                        For the sketch to be valid
                        <ul>
                          <li>its start point must be at x=0</li>
                          <li>it must be continuous</li>
                          <li>it cannot have two y values at the same x value</li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectSketch * Sketch
            (
            );
            /**Returns   @brief the discrete point type. 

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::FieldProfileTable::SamplingPointOptionChordalTolerance NXOpen::Fields::FieldProfileTable::SamplingPointOptionChordalTolerance@endlink </li>
                          <li>@link NXOpen::Fields::FieldProfileTable::SamplingPointOptionEqualArcLength NXOpen::Fields::FieldProfileTable::SamplingPointOptionEqualArcLength@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::FieldProfileTable::SamplingPointOption DiscretePointType
            (
            );
            /**Sets   @brief the discrete point type. 

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::FieldProfileTable::SamplingPointOptionChordalTolerance NXOpen::Fields::FieldProfileTable::SamplingPointOptionChordalTolerance@endlink </li>
                          <li>@link NXOpen::Fields::FieldProfileTable::SamplingPointOptionEqualArcLength NXOpen::Fields::FieldProfileTable::SamplingPointOptionEqualArcLength@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDiscretePointType
            (
                NXOpen::Fields::FieldProfileTable::SamplingPointOption type /** type */ 
            );
            /**Returns   @brief the chordal tolerance. 

             
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ChordalTolerance
            (
            );
            /**Returns   @brief the number of points. 

             
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberPoints
            (
            );
            /**Sets   @brief the number of points. 

             
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNumberPoints
            (
                int type /** type */ 
            );
            /**Returns   @brief the list of points. 

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PointList * Points
            (
            );
            /**Returns   @brief the interpolation type. 

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeLinear NXOpen::Fields::SketchProfileBuilder::InterpolationTypeLinear@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima72 NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima72@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeCubic NXOpen::Fields::SketchProfileBuilder::InterpolationTypeCubic@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::SketchProfileBuilder::InterpolationType Interpolation
            (
            );
            /**Sets   @brief the interpolation type. 

             
                        
                        <ul>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeLinear NXOpen::Fields::SketchProfileBuilder::InterpolationTypeLinear@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima72 NXOpen::Fields::SketchProfileBuilder::InterpolationTypeAkima72@endlink </li>
                          <li>@link NXOpen::Fields::SketchProfileBuilder::InterpolationTypeCubic NXOpen::Fields::SketchProfileBuilder::InterpolationTypeCubic@endlink </li>
                        </ul>
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInterpolation
            (
                NXOpen::Fields::SketchProfileBuilder::InterpolationType type /** type */ 
            );
            /**Returns   @brief the unit type. 

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * UnitType
            (
            );
            /**Sets   @brief the unit type. 

              
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUnitType
            (
                NXOpen::Unit * unitType /** unittype */ 
            );
            /**Returns   @brief the offset. 

             
                        
                        The unit of the offset has to match the
                        @link NXOpen::Fields::SketchProfileBuilder::UnitType NXOpen::Fields::SketchProfileBuilder::UnitType @endlink and @link NXOpen::Fields::SketchProfileBuilder::SetUnitType NXOpen::Fields::SketchProfileBuilder::SetUnitType @endlink .
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /**Returns   @brief the scale. 

             
                        
                        The scale is unitless.
                        
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Scale
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
