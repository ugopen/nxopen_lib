#ifndef NXOpen_AME_CREATEBOMBUILDER_HXX_INCLUDED
#define NXOpen_AME_CREATEBOMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_CreateBOMBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/PDM_PartOperationCreateBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class CreateBOMBuilder;
    }
    namespace AME
    {
        class AspectNode;
    }
    class Builder;
    class NXObject;
    namespace PDM
    {
        class PartOperationCreateBuilder;
    }
    namespace AME
    {
        class _CreateBOMBuilderBuilder;
        class CreateBOMBuilderImpl;
        /** Represents a BOM Creation class Builder   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateBomBuilder  NXOpen::AME::AMEManager::CreateBomBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Type </td> <td> 
         
        CreateNew </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  CreateBOMBuilder : public NXOpen::Builder
        {
            /** Represents the scope for BOM */
            public: enum BomScopes
            {
                BomScopesEntireProject/** entire project */ ,
                BomScopesPartial/** partial */ 
            };

            /** Represents the type of BOM */
            public: enum Types
            {
                TypesCreateNew/** create new */ ,
                TypesUpdate/** update */ 
            };

            private: CreateBOMBuilderImpl * m_createbombuilder_impl;
            private: friend class  _CreateBOMBuilderBuilder;
            protected: CreateBOMBuilder();
            public: ~CreateBOMBuilder();
            /**Returns  the BOM scope 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::CreateBOMBuilder::BomScopes BomScope
            (
            );
            /**Sets  the BOM scope 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetBomScope
            (
                NXOpen::AME::CreateBOMBuilder::BomScopes bomScope /** bomscope */ 
            );
            /**Returns  the bom type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::CreateBOMBuilder::Types Type
            (
            );
            /**Sets  the bom type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetType
            (
                NXOpen::AME::CreateBOMBuilder::Types type /** type */ 
            );
            /**Returns  the project name to get existing BOMs   
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString ProjectName
            (
            );
            /**Sets  the project name to get existing BOMs   
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetProjectName
            (
                const NXString & projectCD /** projectcd */ 
            );
            /**Sets  the project name to get existing BOMs   
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetProjectName
            (
                const char * projectCD /** projectcd */ 
            );
            /**Returns  the bom file location in TC  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString TcFolderBrowser
            (
            );
            /**Sets  the bom file location in TC  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetTcFolderBrowser
            (
                const NXString & bomLocationInTC /** bomlocationintc */ 
            );
            /**Sets  the bom file location in TC  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetTcFolderBrowser
            (
                const char * bomLocationInTC /** bomlocationintc */ 
            );
            /** Add the selected aspects for partial BOM. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetAspectsListForPartialBOM
            (
                const std::vector<NXOpen::AME::AspectNode *> & aspectNodes /** aspectnodes */ 
            );
            /** Collect all EOs for full BOM 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetAspectsListForFullBOM
            (
            );
            /** Sets @link NXOpen::PDM::PartOperationCreateBuilder NXOpen::PDM::PartOperationCreateBuilder@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetNewBOMProperties
            (
                NXOpen::PDM::PartOperationCreateBuilder * partOperationCreateBuilder /** partoperationcreatebuilder */ 
            );
            /** Gets @link NXOpen::PDM::PartOperationCreateBuilder NXOpen::PDM::PartOperationCreateBuilder@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::PDM::PartOperationCreateBuilder * GetNewBOMProperties
            (
            );
            /** Sets the BOM top line item to be updated 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetBomItemToUpdate
            (
                NXOpen::NXObject * bomItem /** bomitem */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
