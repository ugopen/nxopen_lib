#ifndef NXOpen_CAE_DELETEUNREFERENCEDENTITIESBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DELETEUNREFERENCEDENTITIESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DeleteUnreferencedEntitiesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DeleteUnreferencedEntitiesBuilder;
    }
    class Builder;
    class NXObject;
    namespace CAE
    {
        class _DeleteUnreferencedEntitiesBuilderBuilder;
        class DeleteUnreferencedEntitiesBuilderImpl;
        /** Represents a @link NXOpen::CAE::DeleteUnreferencedEntitiesBuilder NXOpen::CAE::DeleteUnreferencedEntitiesBuilder@endlink  builder 
            which can be used to delete entites (by category) that are not referenced by the active solution of the simulation <br> To create a new instance of this class, use @link NXOpen::CAE::SimSimulation::CreateDeleteUnreferencedEntitiesBuilder  NXOpen::CAE::SimSimulation::CreateDeleteUnreferencedEntitiesBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AllOptionsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ConditionSequenceParametersToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ConstraintFoldersToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ConstraintsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CsysToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        FieldsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        FileScopeEnum </td> <td> 
         
        SimOnly </td> </tr> 

        <tr><td> 
         
        GroupsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        LoadFoldersToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        LoadsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        MaterialsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ModelingObjectsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        PhysicalPropertiesToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        RegionsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SelectionRecipesToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SimulationObjectFoldersToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SimulationObjectsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SolutionSearchFilterEnum </td> <td> 
         
        UnusedbyAll </td> </tr> 

        <tr><td> 
         
        SolverSetsToggle </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        UserDefinedExpressionsToggle </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DeleteUnreferencedEntitiesBuilder : public NXOpen::Builder
        {
            /** The scope within which unreferenced entites are considered for deletion*/
            public: enum FileScopeType
            {
                FileScopeTypeSimOnly/** TO DO */,
                FileScopeTypeSimandRelatedFEMsandAFEMs/** simand related femsand afems */ 
            };

            /** The option based on which entities are considered unreferenced */
            public: enum SolutionSearchFilterType
            {
                SolutionSearchFilterTypeUnusedbyActive/** TO DO */,
                SolutionSearchFilterTypeUnusedbyAll/** TO DO */
            };

            private: DeleteUnreferencedEntitiesBuilderImpl * m_deleteunreferencedentitiesbuilder_impl;
            private: friend class  _DeleteUnreferencedEntitiesBuilderBuilder;
            protected: DeleteUnreferencedEntitiesBuilder();
            public: ~DeleteUnreferencedEntitiesBuilder();
            /**Returns  the toggle that turns ON/OFF all of the other toggles 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool AllOptionsToggle
            (
            );
            /**Sets  the toggle that turns ON/OFF all of the other toggles 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAllOptionsToggle
            (
                bool allOptionsToggle /** alloptionstoggle */ 
            );
            /**Returns  the loads toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool LoadsToggle
            (
            );
            /**Sets  the loads toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLoadsToggle
            (
                bool loadsToggle /** loadstoggle */ 
            );
            /**Returns  the load folders toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool LoadFoldersToggle
            (
            );
            /**Sets  the load folders toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLoadFoldersToggle
            (
                bool loadfoldersToggle /** loadfolderstoggle */ 
            );
            /**Returns  the constraints toggle
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ConstraintsToggle
            (
            );
            /**Sets  the constraints toggle
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConstraintsToggle
            (
                bool constraintsToggle /** constraintstoggle */ 
            );
            /**Returns  the constraint folders toggle
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ConstraintFoldersToggle
            (
            );
            /**Sets  the constraint folders toggle
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConstraintFoldersToggle
            (
                bool constraintfoldersToggle /** constraintfolderstoggle */ 
            );
            /**Returns  the Simulation Objects Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SimulationObjectsToggle
            (
            );
            /**Sets  the Simulation Objects Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSimulationObjectsToggle
            (
                bool simulationObjectsToggle /** simulationobjectstoggle */ 
            );
            /**Returns  the Simulation Object Folders Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SimulationObjectFoldersToggle
            (
            );
            /**Sets  the Simulation Object Folders Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSimulationObjectFoldersToggle
            (
                bool simulationObjectfoldersToggle /** simulationobjectfolderstoggle */ 
            );
            /**Returns  the Modeling Objects Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ModelingObjectsToggle
            (
            );
            /**Sets  the Modeling Objects Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetModelingObjectsToggle
            (
                bool modelingObjectsToggle /** modelingobjectstoggle */ 
            );
            /**Returns  the Regions Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool RegionsToggle
            (
            );
            /**Sets  the Regions Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRegionsToggle
            (
                bool regionsToggle /** regionstoggle */ 
            );
            /**Returns  the Fields Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool FieldsToggle
            (
            );
            /**Sets  the Fields Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFieldsToggle
            (
                bool fieldsToggle /** fieldstoggle */ 
            );
            /**Returns  the Groups Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool GroupsToggle
            (
            );
            /**Sets  the Groups Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGroupsToggle
            (
                bool groupsToggle /** groupstoggle */ 
            );
            /**Returns  the Selection Recipes Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SelectionRecipesToggle
            (
            );
            /**Sets  the Selection Recipes Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectionRecipesToggle
            (
                bool selectionRecipesToggle /** selectionrecipestoggle */ 
            );
            /**Returns  the CSYS Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool CsysToggle
            (
            );
            /**Sets  the CSYS Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCsysToggle
            (
                bool csysToggle /** csystoggle */ 
            );
            /**Returns  the Materials Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool MaterialsToggle
            (
            );
            /**Sets  the Materials Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMaterialsToggle
            (
                bool materialsToggle /** materialstoggle */ 
            );
            /**Returns  the Solver Sets Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SolverSetsToggle
            (
            );
            /**Sets  the Solver Sets Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSolverSetsToggle
            (
                bool solverSetsToggle /** solversetstoggle */ 
            );
            /**Returns  the Condition Sequence Parameters Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ConditionSequenceParametersToggle
            (
            );
            /**Sets  the Condition Sequence Parameters Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConditionSequenceParametersToggle
            (
                bool conditionSequenceParametersToggle /** conditionsequenceparameterstoggle */ 
            );
            /**Returns  the Physical Properties Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool PhysicalPropertiesToggle
            (
            );
            /**Sets  the Physical Properties Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPhysicalPropertiesToggle
            (
                bool physicalPropertiesToggle /** physicalpropertiestoggle */ 
            );
            /**Returns  the User Defined Expressions Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool UserDefinedExpressionsToggle
            (
            );
            /**Sets  the User Defined Expressions Toggle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUserDefinedExpressionsToggle
            (
                bool userDefinedExpressionsToggle /** userdefinedexpressionstoggle */ 
            );
            /**Returns  the File Scope Enum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DeleteUnreferencedEntitiesBuilder::FileScopeType FileScopeEnum
            (
            );
            /**Sets  the File Scope Enum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFileScopeEnum
            (
                NXOpen::CAE::DeleteUnreferencedEntitiesBuilder::FileScopeType fileScopeEnum /** filescopeenum */ 
            );
            /**Returns  the Solution Search Filter Enum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DeleteUnreferencedEntitiesBuilder::SolutionSearchFilterType SolutionSearchFilterEnum
            (
            );
            /**Sets  the Solution Search Filter Enum 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSolutionSearchFilterEnum
            (
                NXOpen::CAE::DeleteUnreferencedEntitiesBuilder::SolutionSearchFilterType solutionSearchFilterEnum /** solutionsearchfilterenum */ 
            );
            /** The number of deletion candidiates is generated and returned
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int GenerateAndQueryNumberOfDeletionCandidates
            (
            );
            /** Returns the deletion candidate with for the index passed in
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * QueryDeletionCandidateWithIndex
            (
                int index /** index */ 
            );
            /** The candidates passed in will not be deleted
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDeleteCandidateExceptions
            (
                const std::vector<NXOpen::NXObject *> & deletionExceptions /** deletionexceptions */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
