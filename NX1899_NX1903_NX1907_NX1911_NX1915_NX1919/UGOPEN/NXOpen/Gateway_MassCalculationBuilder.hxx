#ifndef NXOpen_GATEWAY_MASSCALCULATIONBUILDER_HXX_INCLUDED
#define NXOpen_GATEWAY_MASSCALCULATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Gateway_MassCalculationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_gateway_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Gateway
    {
        class MassCalculationBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Gateway
    {
        class _MassCalculationBuilderBuilder;
        class MassCalculationBuilderImpl;
        /** Represents a @link NXOpen::Gateway::MassCalculationBuilder NXOpen::Gateway::MassCalculationBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Gateway::MassCollection::CreateCalculationBuilder  NXOpen::Gateway::MassCollection::CreateCalculationBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_GATEWAYEXPORT  MassCalculationBuilder : public NXOpen::Builder
        {
            private: MassCalculationBuilderImpl * m_masscalculationbuilder_impl;
            private: friend class  _MassCalculationBuilderBuilder;
            protected: MassCalculationBuilder();
            public: ~MassCalculationBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Objects
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the name of component group 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ComponentGroupName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the name of component group 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void SetComponentGroupName
            (
                const NXString & componentGroupName /** componentgroupname */ 
            );
            /**Sets  the name of component group 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            void SetComponentGroupName
            (
                const char * componentGroupName /** componentgroupname */ 
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
