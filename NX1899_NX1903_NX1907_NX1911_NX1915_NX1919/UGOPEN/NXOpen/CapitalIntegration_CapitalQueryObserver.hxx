#ifndef NXOpen_CAPITALINTEGRATION_CAPITALQUERYOBSERVER_HXX_INCLUDED
#define NXOpen_CAPITALINTEGRATION_CAPITALQUERYOBSERVER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CapitalIntegration_CapitalQueryObserver.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_capitalintegration_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CapitalIntegration
    {
        class CapitalQueryObserver;
    }
    namespace CapitalIntegration
    {
        class CapitalManager;
    }
    namespace CapitalIntegration
    {
        class CapitalQueryObserverImpl;
        /** This class is responsible for invoking registered callback on selecting a part in NX  <br> To obtain an instance of this class, refer to @link NXOpen::CapitalIntegration::CapitalManager  NXOpen::CapitalIntegration::CapitalManager @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAPITALINTEGRATIONEXPORT  CapitalQueryObserver
        {
            public: /** User defined capital event Callback 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback1<void, NXString> ReceivecapitaleventCb;
            public: /** User defined Scope info Callback 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback1<void, NXString> ReceivescopeinfoCb;
            public: /** User defined Scope info Callback 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback0<void> ConnectBridgeCb;
            public: /** User defined Scope info Callback 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            typedef NXOpen::Callback0<void> HarnessBridgeCb;
            private: CapitalQueryObserverImpl * m_capitalqueryobserver_impl;
            private: NXOpen::CapitalIntegration::CapitalManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CapitalQueryObserver(NXOpen::CapitalIntegration::CapitalManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~CapitalQueryObserver();
            /** User defined capital event Callback 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int AddReceivecapitaleventCallback
            (
                const NXOpen::CapitalIntegration::CapitalQueryObserver::ReceivecapitaleventCb&  receivecapitaleventCb /** receivecapitalevent cb */ 
            );
            /** User defined Scope info Callback 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int AddReceivescopeinfoCallback
            (
                const NXOpen::CapitalIntegration::CapitalQueryObserver::ReceivescopeinfoCb&  receivescopeinfoCb /** receivescopeinfo cb */ 
            );
            /** User defined Scope info Callback 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int AddConnectBridgeCallback
            (
                const NXOpen::CapitalIntegration::CapitalQueryObserver::ConnectBridgeCb&  connectBridgeCb /** connect bridge cb */ 
            );
            /** User defined Scope info Callback 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: int AddHarnessBridgeCallback
            (
                const NXOpen::CapitalIntegration::CapitalQueryObserver::HarnessBridgeCb&  harnessBridgeCb /** harness bridge cb */ 
            );
            /** Send the information to Capital Enterprise Reporter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void Sendtocapitalenterprisereporter
            (
                const NXString & eventDataStr /** eventdatastr */ 
            );
            /** Send the information to Capital Enterprise Reporter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            void Sendtocapitalenterprisereporter
            (
                const char * eventDataStr /** eventdatastr */ 
            );
            /** Send the information to Capital Enterprise Reporter 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ReceiveEnvironmentInfo
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
