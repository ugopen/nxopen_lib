#ifndef NXOpen_DISPLAY_IRAYPLUSSIMPLEMATERIALEDITORBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_IRAYPLUSSIMPLEMATERIALEDITORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_IrayPlusSimpleMaterialEditorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class IrayPlusSimpleMaterialEditorBuilder;
    }
    class Builder;
    class Direction;
    namespace Display
    {
        class _IrayPlusSimpleMaterialEditorBuilderBuilder;
        class IrayPlusSimpleMaterialEditorBuilderImpl;
        /** Represents a @link NXOpen::Display::IrayPlusSimpleMaterialEditorBuilder NXOpen::Display::IrayPlusSimpleMaterialEditorBuilder@endlink  
                 <br> This class is restricted to being called from a program running during an 
                Interactive NX session.  If run from a non-interactive session it will 
                return NULL. <br> 
             <br>   <br> 
         <br>  Created in NX10.0.2.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  IrayPlusSimpleMaterialEditorBuilder : public NXOpen::Builder
        {
            /** texture spacee type */
            public: enum TextureSpace
            {
                TextureSpaceBox/** box */ ,
                TextureSpacePlanar/** planar */ ,
                TextureSpaceCylindrical/** cylindrical */ ,
                TextureSpaceSpherical/** spherical */ ,
                TextureSpaceUVMap/** uvmap */ 
            };

            private: IrayPlusSimpleMaterialEditorBuilderImpl * m_irayplussimplematerialeditorbuilder_impl;
            private: friend class  _IrayPlusSimpleMaterialEditorBuilderBuilder;
            protected: IrayPlusSimpleMaterialEditorBuilder();
            public: ~IrayPlusSimpleMaterialEditorBuilder();
            /**Returns  the name string 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXString NameString
            (
            );
            /**Sets  the name string 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetNameString
            (
                const NXString & nameString /** namestring */ 
            );
            /**Sets  the name string 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetNameString
            (
                const char * nameString /** namestring */ 
            );
            /** Returns the color picker  @return  Array of 3 RGB values, each between 0 and 1 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: std::vector<double> GetColorPicker
            (
            );
            /** Sets the color picker 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetColorPicker
            (
                const std::vector<double> & colorPicker /** Array of 3 RGB values, each between 0 and 1 */
            );
            /**Returns  the textured toggle 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: bool TexturedToggle
            (
            );
            /**Sets  the textured toggle 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetTexturedToggle
            (
                bool texturedToggle /** texturedtoggle */ 
            );
            /**Returns  the file browser 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXString FileBrowser
            (
            );
            /**Sets  the file browser 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetFileBrowser
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the file browser 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            void SetFileBrowser
            (
                const char * filename /** filename */ 
            );
            /**Returns  the texture space enum 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Display::IrayPlusSimpleMaterialEditorBuilder::TextureSpace TextureSpaceEnum
            (
            );
            /**Sets  the texture space enum 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetTextureSpaceEnum
            (
                NXOpen::Display::IrayPlusSimpleMaterialEditorBuilder::TextureSpace textureSpaceEnum /** texturespaceenum */ 
            );
            /**Returns  the normal vector 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Direction * NormalVector
            (
            );
            /**Sets  the normal vector 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetNormalVector
            (
                NXOpen::Direction * normalVector /** normalvector */ 
            );
            /**Returns  the up vector 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: NXOpen::Direction * UpVector
            (
            );
            /**Sets  the up vector 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetUpVector
            (
                NXOpen::Direction * upVector /** upvector */ 
            );
            /**Returns  the scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double Scale
            (
            );
            /**Sets  the scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetScale
            (
                double scale /** scale */ 
            );
            /**Returns  the latitude scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double LatitudeScale
            (
            );
            /**Sets  the latitude scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetLatitudeScale
            (
                double latitudeScale /** latitudescale */ 
            );
            /**Returns  the longitude scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double LongitudeScale
            (
            );
            /**Sets  the longitude scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetLongitudeScale
            (
                double longitudeScale /** longitudescale */ 
            );
            /**Returns  the u scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double UScale
            (
            );
            /**Sets  the u scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetUScale
            (
                double uScale /** uscale */ 
            );
            /**Returns  the v scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double VScale
            (
            );
            /**Sets  the v scale 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetVScale
            (
                double vScale /** vscale */ 
            );
            /**Returns  the aspect ratio 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: double AspectRatio
            (
            );
            /**Sets  the aspect ratio 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SetAspectRatio
            (
                double aspectRatio /** aspectratio */ 
            );
            /** To save to System Studio Materials 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void SaveMaterialsButton
            (
            );
            /** To export to a XML file 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : studio_render ("UG STUDIO RENDER") */
            public: void ExportXMLButton
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
