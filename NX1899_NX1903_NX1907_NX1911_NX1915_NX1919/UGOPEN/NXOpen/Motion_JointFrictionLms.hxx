#ifndef NXOpen_MOTION_JOINTFRICTIONLMS_HXX_INCLUDED
#define NXOpen_MOTION_JOINTFRICTIONLMS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_JointFrictionLms.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class JointFrictionLms;
    }
    class Expression;
    namespace Motion
    {
        class _JointFrictionLmsBuilder;
        class JointFrictionLmsImpl;
        /** Represents a lms joint friction object 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  JointFrictionLms : public NXOpen::TaggedObject
        {
            private: JointFrictionLmsImpl * m_jointfrictionlms_impl;
            private: friend class  _JointFrictionLmsBuilder;
            protected: JointFrictionLms();
            public: ~JointFrictionLms();
            /**Returns  the mu static 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MuStatic
            (
            );
            /**Returns  the mu dynamic 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MuDynamic
            (
            );
            /**Returns  the translational velocity tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TranslationalStictionTransitionVelocity
            (
            );
            /**Returns  the rotational velocity tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RotationalStictionTransitionVelocity
            (
            );
            /**Returns  the pin radius 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PinRadius
            (
            );
            /**Returns  the bending reaction arm 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BendingReactionArm
            (
            );
            /**Returns  the friction arm 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrictionArm
            (
            );
            /**Returns  the reaction arm 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReactionArm
            (
            );
            /**Returns  the initial overlap 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * InitialOverlap
            (
            );
            /**Returns  the ball radius 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BallRadius
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
