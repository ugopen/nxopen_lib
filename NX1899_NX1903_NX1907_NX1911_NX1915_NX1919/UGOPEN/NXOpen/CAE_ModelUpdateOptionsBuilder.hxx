#ifndef NXOpen_CAE_MODELUPDATEOPTIONSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELUPDATEOPTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelUpdateOptionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelUpdateOptionsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _ModelUpdateOptionsBuilderBuilder;
        class ModelUpdateOptionsBuilderImpl;
        /** Represents a @link NXOpen::CAE::ModelUpdateOptionsBuilder NXOpen::CAE::ModelUpdateOptionsBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::CAE::ModelUpdateSolution::CreateOptionsBuilder  NXOpen::CAE::ModelUpdateSolution::CreateOptionsBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelUpdateOptionsBuilder : public NXOpen::Builder
        {
            private: ModelUpdateOptionsBuilderImpl * m_modelupdateoptionsbuilder_impl;
            private: friend class  _ModelUpdateOptionsBuilderBuilder;
            protected: ModelUpdateOptionsBuilder();
            public: ~ModelUpdateOptionsBuilder();
            /**Returns  the upper bound multiplier 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double UpperBoundMultiplier
            (
            );
            /**Sets  the upper bound multiplier 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetUpperBoundMultiplier
            (
                double upperBoundMultiplier /** upperboundmultiplier */ 
            );
            /**Returns  the rigid body tolerance 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double RigidBodyTolerance
            (
            );
            /**Sets  the rigid body tolerance 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetRigidBodyTolerance
            (
                double rigidBodyTolerance /** rigidbodytolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
