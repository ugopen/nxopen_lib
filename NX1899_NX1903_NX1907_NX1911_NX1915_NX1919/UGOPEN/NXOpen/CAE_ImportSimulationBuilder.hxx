#ifndef NXOpen_CAE_IMPORTSIMULATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_IMPORTSIMULATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ImportSimulationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ImportSimulationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CaeDOFSet;
    }
    namespace CAE
    {
        class CaeGroup;
    }
    namespace CAE
    {
        class CaeRegion;
    }
    namespace CAE
    {
        class FEModelOccurrence;
    }
    namespace CAE
    {
        class LayoutState;
    }
    namespace CAE
    {
        class ModelingObjectPropertyTable;
    }
    namespace CAE
    {
        class PhysicalPropertyTable;
    }
    namespace CAE
    {
        class ResultProbe;
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    namespace CAE
    {
        class SimConditionSequence;
    }
    namespace CAE
    {
        class SimConstraint;
    }
    namespace CAE
    {
        class SimLoad;
    }
    namespace CAE
    {
        class SimPart;
    }
    namespace CAE
    {
        class SimSimulationObject;
    }
    namespace CAE
    {
        class SimSolution;
    }
    namespace Fields
    {
        class Field;
    }
    class PhysicalMaterial;
    namespace CAE
    {
        class _ImportSimulationBuilderBuilder;
        class ImportSimulationBuilderImpl;
        /**
            Represents @link NXOpen::CAE::ImportSimulationBuilder NXOpen::CAE::ImportSimulationBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::SimPart::CreateImportSimBuilder  NXOpen::CAE::SimPart::CreateImportSimBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ImportSimulationBuilder : public NXOpen::Builder
        {
            private: ImportSimulationBuilderImpl * m_importsimulationbuilder_impl;
            private: friend class  _ImportSimulationBuilderBuilder;
            protected: ImportSimulationBuilder();
            public: ~ImportSimulationBuilder();
            /** Set source simulation part
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSourceSimPart
            (
                NXOpen::CAE::SimPart * tPart /** sim part */
            );
            /** Set prepend string
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPrependString
            (
                const NXString & prependString /** Prepend string */
            );
            /** Set prepend string
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetPrependString
            (
                const char * prependString /** Prepend string */
            );
            /** Set id offset
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetIdOffset
            (
                int idOffset /** id offset */
            );
            /** Set import all entities
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetImportAll
            (
                bool importAll /** importall */ 
            );
            /** Set selected loads to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLoads
            (
                const std::vector<NXOpen::CAE::SimLoad *> & loads /** Loads to import @link NXOpen::CAE::SimLoad NXOpen::CAE::SimLoad@endlink */
            );
            /** Set selected constraints to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetConstraints
            (
                const std::vector<NXOpen::CAE::SimConstraint *> & constraints /** Constraints to import @link NXOpen::CAE::SimConstraint NXOpen::CAE::SimConstraint@endlink */
            );
            /** Set simulation objects to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSimulationObjects
            (
                const std::vector<NXOpen::CAE::SimSimulationObject *> & simobjects /** Simulation objects to import @link NXOpen::CAE::SimSimulationObject NXOpen::CAE::SimSimulationObject@endlink */
            );
            /** Set materials to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMaterials
            (
                const std::vector<NXOpen::PhysicalMaterial *> & materials /** Materials to import @link NXOpen::PhysicalMaterial NXOpen::PhysicalMaterial@endlink */
            );
            /** Set fields to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFields
            (
                const std::vector<NXOpen::Fields::Field *> & fields /** Fields to import @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink */
            );
            /** Set modeling objects to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetModelingObjects
            (
                const std::vector<NXOpen::CAE::ModelingObjectPropertyTable *> & modelingobjects /** Modeling objects to import @link NXOpen::CAE::ModelingObjectPropertyTable NXOpen::CAE::ModelingObjectPropertyTable@endlink */
            );
            /** Set physical property tables to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPhysicalPropertyTables
            (
                const std::vector<NXOpen::CAE::PhysicalPropertyTable *> & propertytables /** Physical property tables to import @link NXOpen::CAE::PhysicalPropertyTable NXOpen::CAE::PhysicalPropertyTable@endlink */
            );
            /** Set groups to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGroups
            (
                const std::vector<NXOpen::CAE::CaeGroup *> & groups /** Groups to import @link NXOpen::CAE::CaeGroup NXOpen::CAE::CaeGroup@endlink */
            );
            /** Set regions to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetRegions
            (
                const std::vector<NXOpen::CAE::CaeRegion *> & regions /** Regions to import @link NXOpen::CAE::CaeRegion NXOpen::CAE::CaeRegion@endlink */
            );
            /** Set solutions to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSolutions
            (
                const std::vector<NXOpen::CAE::SimSolution *> & solutions /** Solutions to import @link NXOpen::CAE::SimSolution NXOpen::CAE::SimSolution@endlink */
            );
            /** Set DOF sets to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDofSets
            (
                const std::vector<NXOpen::CAE::CaeDOFSet *> & dofsets /** DOF sets to import @link NXOpen::CAE::CaeDOFSet NXOpen::CAE::CaeDOFSet@endlink */
            );
            /** Set FeModel Occurrences to import onto
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTargetFemoccs
            (
                const std::vector<NXOpen::CAE::FEModelOccurrence *> & selectedFemoccs /** Array of FeModelOccurrences to import onto @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink */
            );
            /** Set Condition Sequences to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetConditionSequences
            (
                const std::vector<NXOpen::CAE::SimConditionSequence *> & sequences /** Condition Sequences to import @link NXOpen::CAE::SimConditionSequence NXOpen::CAE::SimConditionSequence@endlink */
            );
            /** Set Layout States to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLayoutStates
            (
                const std::vector<NXOpen::CAE::LayoutState *> & layoutStates /** Layout states to import @link NXOpen::CAE::LayoutState NXOpen::CAE::LayoutState@endlink */
            );
            /** Set Selection Recipes to import
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSelectionRecipes
            (
                const std::vector<NXOpen::CAE::SelectionRecipe *> & selectionRecipes /** Selection Recipes to import @link NXOpen::CAE::SelectionRecipe NXOpen::CAE::SelectionRecipe@endlink */
            );
            /** Set Result Probes to import
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetResultProbes
            (
                const std::vector<NXOpen::CAE::ResultProbe *> & resProbes /** Result Probes to import @link NXOpen::CAE::ResultProbe NXOpen::CAE::ResultProbe@endlink */
            );
            /** Set target Solution for Probe
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTargetSolution
            (
                NXOpen::CAE::SimSolution * targetSolTag /**Target Solution for probe @link NXOpen::CAE::SimSolution NXOpen::CAE::SimSolution@endlink  */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
