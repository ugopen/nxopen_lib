#ifndef NXOpen_FEATURES_STUDIOSURFACEBUILDEREX_HXX_INCLUDED
#define NXOpen_FEATURES_STUDIOSURFACEBUILDEREX_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StudioSurfaceBuilderEx.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_AlignmentMethodBuilder.hxx>
#include <NXOpen/GeometricUtilities_Continuity.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/GeometricUtilities_FlowDirection.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class StudioSurfaceBuilderEx;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class AlignmentMethodBuilder;
    }
    namespace GeometricUtilities
    {
        class Continuity;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    namespace GeometricUtilities
    {
        class FeatureOptions;
    }
    namespace GeometricUtilities
    {
        class FlowDirection;
    }
    class SectionList;
    namespace Features
    {
        class _StudioSurfaceBuilderExBuilder;
        class StudioSurfaceBuilderExImpl;
        /**
            Represents a @link Features::StudioSurfaceEx Features::StudioSurfaceEx@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FreeformSurfaceCollection::CreateStudioSurfaceBuilderEx  NXOpen::Features::FreeformSurfaceCollection::CreateStudioSurfaceBuilderEx @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        GuideCurveFitData.CurveJoinMethod </td> <td> 
         
        No </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.Degree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.FitMethod </td> <td> 
         
        DegreeAndSegments </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.IsAdvancedFit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.IsAlignShape </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.MaximumDegree </td> <td> 
         
        7 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.MaximumSegments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.MinimumDegree </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        GuideCurveFitData.Segments </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        LaydownCurve </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SplitSurfaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Transition </td> <td> 
         
        NormalToEndSections </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  StudioSurfaceBuilderEx : public NXOpen::Features::FeatureBuilder
        {
            /** the transition control options when using By Points alignment
                    method */
            public: enum TransitionOptions
            {
                TransitionOptionsNormalToEndSections/** Normal to End Sections */,
                TransitionOptionsNormalToAllSections/** Normal to All Sections */,
                TransitionOptionsCubic/** Cubic */,
                TransitionOptionsLinearAndBlend/** Linear and Blend */,
                TransitionOptionsNoEndConstraint/** No End Constraint */
            };

            private: StudioSurfaceBuilderExImpl * m_studiosurfacebuilderex_impl;
            private: friend class  _StudioSurfaceBuilderExBuilder;
            protected: StudioSurfaceBuilderEx();
            public: ~StudioSurfaceBuilderEx();
            /**Returns  the list of sections 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * SectionList
            (
            );
            /**Returns  the list of guides 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * GuideList
            (
            );
            /**Returns  the first section continuity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Continuity * FirstSectionContinuity
            (
            );
            /**Returns  the last section continuity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Continuity * LastSectionContinuity
            (
            );
            /**Returns  the first guide continuity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Continuity * FirstGuideContinuity
            (
            );
            /**Returns  the last guide continuity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Continuity * LastGuideContinuity
            (
            );
            /**Returns  the flow direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FlowDirection * FlowDirection
            (
            );
            /**Returns  the alignment method 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::AlignmentMethodBuilder * AlignmentMethod
            (
            );
            /**Returns  the transition control 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StudioSurfaceBuilderEx::TransitionOptions Transition
            (
            );
            /**Sets  the transition control 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: void SetTransition
            (
                NXOpen::Features::StudioSurfaceBuilderEx::TransitionOptions transition /** transition */ 
            );
            /**Returns  the section curve fit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * SectionCurveFitData
            (
            );
            /**Returns  the guide curve fit 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * GuideCurveFitData
            (
            );
            /**Returns  the position tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: double PositionTolerance
            (
            );
            /**Sets  the position tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: void SetPositionTolerance
            (
                double positionTolerance /** positiontolerance */ 
            );
            /**Returns  the tangent tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: double TangentTolerance
            (
            );
            /**Sets  the tangent tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: void SetTangentTolerance
            (
                double tangentTolerance /** tangenttolerance */ 
            );
            /**Returns  the curvature tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: double CurvatureTolerance
            (
            );
            /**Sets  the curvature tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: void SetCurvatureTolerance
            (
                double curvatureTolerance /** curvaturetolerance */ 
            );
            /**Returns  the intersection tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: double IntersectionTolerance
            (
            );
            /**Sets  the intersection tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling") OR features_modeling ("FEATURES MODELING") */
            public: void SetIntersectionTolerance
            (
                double intersectionTolerance /** intersectiontolerance */ 
            );
            /**Returns  a value indicating whether to laydown the base curve to base faces 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") */
            public: bool LaydownCurve
            (
            );
            /**Sets  a value indicating whether to laydown the base curve to base faces 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") */
            public: void SetLaydownCurve
            (
                bool laydownCurve /** laydowncurve */ 
            );
            /**Returns  a value indicating whether to split the surfaces along boundary curves 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") */
            public: bool SplitSurfaces
            (
            );
            /**Sets  a value indicating whether to split the surfaces along boundary curves 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR free_form_modeling ("FREE-FORM MODELING") */
            public: void SetSplitSurfaces
            (
                bool splitSurfaces /** splitsurfaces */ 
            );
            /**Returns  the body type options 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOptions * BodyPreference
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
