#ifndef NXOpen_AME_SYMBOLLOCATIONBUILDER_HXX_INCLUDED
#define NXOpen_AME_SYMBOLLOCATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_SymbolLocationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_DiagramNodeBuilder.hxx>
#include <NXOpen/AME_PageObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class SymbolLocationBuilder;
    }
    namespace AME
    {
        class DiagramNodeBuilder;
    }
    namespace AME
    {
        class PageObject;
    }
    namespace Diagramming
    {
        class Node;
    }
    namespace AME
    {
        class _SymbolLocationBuilderBuilder;
        class SymbolLocationBuilderImpl;
        /** JA class for the symbol location reusable component <br> This object does not need a creator.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  SymbolLocationBuilder : public NXOpen::TaggedObject
        {
            private: SymbolLocationBuilderImpl * m_symbollocationbuilder_impl;
            private: friend class  _SymbolLocationBuilderBuilder;
            protected: SymbolLocationBuilder();
            public: ~SymbolLocationBuilder();
            /**Returns  the Node Builder used for creating Symbol for EO
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::DiagramNodeBuilder * DiagramNodeBuilder
            (
            );
            /** Set the created Symbol
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCreatedSymbol
            (
                NXOpen::AME::PageObject * owningPage /** owningpage */ ,
                NXOpen::Diagramming::Node * symbolTag /** symboltag */ ,
                double locationX /** locationx */ ,
                double locationY /** locationy */ 
            );
            /** Clear the created Symbol
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ClearCreatedSymbol
            (
                bool isClearAllSymbols /** isclearallsymbols */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
