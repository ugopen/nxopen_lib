#ifndef NXOpen_JOIN_EXPORTJOINBUILDER_HXX_INCLUDED
#define NXOpen_JOIN_EXPORTJOINBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_ExportJoinBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class ExportJoinBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace Join
    {
        class _ExportJoinBuilderBuilder;
        class ExportJoinBuilderImpl;
        /** Represents a ExportJoinBuilder class  <br> To create a new instance of this class, use @link NXOpen::Join::JoinManager::CreateExportJoinBuilder  NXOpen::Join::JoinManager::CreateExportJoinBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  ExportJoinBuilder : public NXOpen::Builder
        {
            /** the Output Type enum */
            public: enum OutputType
            {
                OutputTypeIntermediateFile/** intermediate file */ 
            };

            private: ExportJoinBuilderImpl * m_exportjoinbuilder_impl;
            private: friend class  _ExportJoinBuilderBuilder;
            protected: ExportJoinBuilder();
            public: ~ExportJoinBuilder();
            /**Returns  the join points to be exported to CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::SelectNXObjectList * JoinPoints
            (
            );
            /**Returns  the connected part attribute toggle to control if read connected part attributes from join points 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool ConnectedPartAttrToggle
            (
            );
            /**Sets  the connected part attribute toggle to control if read connected part attributes from join points 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetConnectedPartAttrToggle
            (
                bool connectedPartAttrToggle /** Connected part attribute toggle value */
            );
            /** Get the attributes of join points to be exported to CSV file  @return  Exported attributes string 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXString> GetExportedAttributes
            (
            );
            /** Set the attributes of join points to be exported to CSV file 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetExportedAttributes
            (
                std::vector<NXString> & exportedAttributes /** Exported attributes string */
            );
            /** Get the connected part attributes of join points  @return  Connected part attributes string 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXString> GetConnectedPartAttributes
            (
            );
            /** Set the connected part attributes of join points 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetConnectedPartAttributes
            (
                std::vector<NXString> & connectedPartAttributes /** Connected part attributes string */
            );
            /**Returns  the option defining where to write the output data. Data will initally be written to a comma separated value file.  Later options will be added. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Join::ExportJoinBuilder::OutputType Output
            (
            );
            /**Sets  the option defining where to write the output data. Data will initally be written to a comma separated value file.  Later options will be added. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOutput
            (
                NXOpen::Join::ExportJoinBuilder::OutputType outputType /** outputtype */ 
            );
            /**Returns  the CSV file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString CsvFileName
            (
            );
            /**Sets  the CSV file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCsvFileName
            (
                const NXString & csvFileName /** CSV file name */
            );
            /**Sets  the CSV file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetCsvFileName
            (
                const char * csvFileName /** CSV file name */
            );
            /**Returns  the template file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString TemplateFileName
            (
            );
            /**Sets  the template file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTemplateFileName
            (
                const NXString & templateFileName /** Template file name */
            );
            /**Sets  the template file name 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetTemplateFileName
            (
                const char * templateFileName /** Template file name */
            );
            /** Read attributes from selected joins and save to exported attributes and connected part attributes 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ReadAttributesFromJoins
            (
            );
            /** Save exported attributes as default template. Before use it, you must set template file name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SaveAsDefault
            (
            );
            /** Restore default template to update exported attributes. Before use it, you must set template file name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void RestoreDefault
            (
            );
            /** Save exported attributes to a template file. Before use it, you must set template file name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SaveToFile
            (
            );
            /** Open a template file to update exported attributes. Before use it, you must set template file name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void OpenFromFile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
