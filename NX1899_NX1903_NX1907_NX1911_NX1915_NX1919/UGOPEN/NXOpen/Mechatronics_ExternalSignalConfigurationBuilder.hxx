#ifndef NXOpen_MECHATRONICS_EXTERNALSIGNALCONFIGURATIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_EXTERNALSIGNALCONFIGURATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ExternalSignalConfigurationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_FMUClientBuilder.hxx>
#include <NXOpen/Mechatronics_MATLABClientBuilder.hxx>
#include <NXOpen/Mechatronics_OPCClientBuilder.hxx>
#include <NXOpen/Mechatronics_OPCUAClientBuilder.hxx>
#include <NXOpen/Mechatronics_PlcSimAdvClientBuilder.hxx>
#include <NXOpen/Mechatronics_ProfinetClientBuilder.hxx>
#include <NXOpen/Mechatronics_SHMSignalClientBuilder.hxx>
#include <NXOpen/Mechatronics_TCPClientBuilder.hxx>
#include <NXOpen/Mechatronics_UDPSignalClientBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ExternalSignalConfigurationBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class FMUClientBuilder;
    }
    namespace Mechatronics
    {
        class MATLABClientBuilder;
    }
    namespace Mechatronics
    {
        class OPCClientBuilder;
    }
    namespace Mechatronics
    {
        class OPCUAClientBuilder;
    }
    namespace Mechatronics
    {
        class PlcSimAdvClientBuilder;
    }
    namespace Mechatronics
    {
        class ProfinetClientBuilder;
    }
    namespace Mechatronics
    {
        class SHMSignalClientBuilder;
    }
    namespace Mechatronics
    {
        class TCPClientBuilder;
    }
    namespace Mechatronics
    {
        class UDPSignalClientBuilder;
    }
    namespace Mechatronics
    {
        class _ExternalSignalConfigurationBuilderBuilder;
        class ExternalSignalConfigurationBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::ExternalSignalConfigurationBuilder NXOpen::Mechatronics::ExternalSignalConfigurationBuilder@endlink   

          
                 It is used to maintain all client builders for external signals. Such as OPC DA, OPC UA, SHM, TCP/UDP, PLCSIMAdv, etc.
                
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::ExternalSignalConfigurationCollection::CreateExternalSignalConfigurationBuilder  NXOpen::Mechatronics::ExternalSignalConfigurationCollection::CreateExternalSignalConfigurationBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ExternalSignalConfigurationBuilder : public NXOpen::Builder
        {
            private: ExternalSignalConfigurationBuilderImpl * m_externalsignalconfigurationbuilder_impl;
            private: friend class  _ExternalSignalConfigurationBuilderBuilder;
            protected: ExternalSignalConfigurationBuilder();
            public: ~ExternalSignalConfigurationBuilder();
            /**Returns   @brief  the OPC DA builder that holds the configuration for OPC DA clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::OPCClientBuilder * OPCDAClient
            (
            );
            /**Returns   @brief  the OPC UA builder that holds the configuration for OPC UA clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::OPCUAClientBuilder * OPCUAClient
            (
            );
            /**Returns   @brief  the SHM builder that holds the configuration for SHM clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SHMSignalClientBuilder * ShmClient
            (
            );
            /**Returns   @brief  the Matlab builder that holds the configuration for Matlab clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::MATLABClientBuilder * MatlabClient
            (
            );
            /**Returns   @brief  the PLCSIMAdv builder that holds the configuration for PLCSIMAdv clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::PlcSimAdvClientBuilder * PlcSimAdvClient
            (
            );
            /**Returns   @brief  the TCP builder that holds the configuration for TCP clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::TCPClientBuilder * TcpClient
            (
            );
            /**Returns   @brief  the UDP builder that holds the configuration for UDP clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::UDPSignalClientBuilder * UdpClient
            (
            );
            /**Returns   @brief  the Profinet builder that holds the configuration for Profinet clients.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::ProfinetClientBuilder * ProfinetClient
            (
            );
            /**Returns   @brief  the FMU builder that holds the configuration for FMU clients.  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::FMUClientBuilder * FMUClient
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
