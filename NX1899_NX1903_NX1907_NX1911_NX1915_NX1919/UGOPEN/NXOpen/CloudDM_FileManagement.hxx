#ifndef NXOpen_CLOUDDM_FILEMANAGEMENT_HXX_INCLUDED
#define NXOpen_CLOUDDM_FILEMANAGEMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CloudDM_FileManagement.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CloudDM_DocumentIdentifier.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_clouddm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CloudDM
    {
        class FileManagement;
    }
    namespace CloudDM
    {
        class DataManager;
    }
    namespace CloudDM
    {
        class DocumentIdentifier;
    }
    class Part;
    namespace CloudDM
    {
        class FileManagementImpl;

        /// \cond NX_NO_DOC 
        /** This class provides utilities for various document related operations of parts <br> To obtain an instance of this class, refer to @link NXOpen::CloudDM::DataManager  NXOpen::CloudDM::DataManager @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CLOUDDMEXPORT  FileManagement
        {
            private: FileManagementImpl * m_filemanagement_impl;
            private: NXOpen::CloudDM::DataManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit FileManagement(NXOpen::CloudDM::DataManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~FileManagement();

            /// \cond NX_NO_DOC 
            /** Gets the list of associated documents attached to the given part @return  Array of documents 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CloudDM::DocumentIdentifier *> GetAssociatedDocumentList
            (
                NXOpen::Part * inputPart /** inputpart */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Download the associated documents attached to the given part
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: void DownloadAssociatedDocuments
            (
                NXOpen::Part * inputPart /** inputpart */ ,
                const std::vector<NXOpen::CloudDM::DocumentIdentifier *> & documents /** Array of documents */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Gets the list of associated files to be attached for given part @return list of files. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetAssociatedFileListForUpload
            (
                NXOpen::Part * inputPart /** inputpart */ 
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
