#ifndef NXOpen_MOTION_MECHANISMEXPORT_HXX_INCLUDED
#define NXOpen_MOTION_MECHANISMEXPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_MechanismExport.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class MechanismExport;
    }
    namespace Motion
    {
        class MotionSession;
    }
    class NXObject;
    namespace Motion
    {
        class MechanismExportImpl;
        /** Represents a Mechanism Export object used to export one or more Motion objects to a text file.  <br> To obtain an instance of this class, refer to @link NXOpen::Motion::MotionSession  NXOpen::Motion::MotionSession @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  MechanismExport
        {
            /** Format to export the position and orientation data.  */
            public: enum PositionOrientationFormat
            {
                PositionOrientationFormatTransformationMatrix/** Origin and X, Y, Z vectors */,
                PositionOrientationFormatPqr/** P, Q, R points */,
                PositionOrientationFormatBryantAngles/** Origin and Bryant angles */,
                PositionOrientationFormatEulerAngles/** Origin and Euler angles */,
                PositionOrientationFormatEulerParameters/** Origin and Euler parameters */,
                PositionOrientationFormatNone/** The position and orientation will not be serialized */
            };

            private: MechanismExportImpl * m_mechanismexport_impl;
            private: NXOpen::Motion::MotionSession* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit MechanismExport(NXOpen::Motion::MotionSession *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~MechanismExport();
            /** Exports selected objects to .mdef file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ExportMdef
            (
                const NXString & fileName /** Full path to the .mdef file */,
                NXOpen::Motion::MechanismExport::PositionOrientationFormat posOrientFormat /** Format to export the position and orientation data */,
                bool exportEmptyInputFields /** When TRUE, exports data that do not have any values defined */,
                bool exportUnusedOptions /** When TRUE, exports data currently unused in the Motion objects */,
                bool exportSubmechAsMdef /** When TRUE, export the submechanisms as .mdef files. Otherwise references them as .sim files.*/,
                bool enablePublish /** When TRUE, the publish option is enabled. Note: enablePublish will not be used when in managed mode. */,
                const NXString & publishedFolder /** Full path to the published folder. Note: publishedFolder will not be used when in managed mode. */,
                const std::vector<NXOpen::NXObject *> & objects /** Motion objects to export */
            );
            /** Exports selected objects to .mdef file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ExportMdef
            (
                const char * fileName /** Full path to the .mdef file */,
                NXOpen::Motion::MechanismExport::PositionOrientationFormat posOrientFormat /** Format to export the position and orientation data */,
                bool exportEmptyInputFields /** When TRUE, exports data that do not have any values defined */,
                bool exportUnusedOptions /** When TRUE, exports data currently unused in the Motion objects */,
                bool exportSubmechAsMdef /** When TRUE, export the submechanisms as .mdef files. Otherwise references them as .sim files.*/,
                bool enablePublish /** When TRUE, the publish option is enabled. Note: enablePublish will not be used when in managed mode. */,
                const char * publishedFolder /** Full path to the published folder. Note: publishedFolder will not be used when in managed mode. */,
                const std::vector<NXOpen::NXObject *> & objects /** Motion objects to export */
            );
            /** Exports Mechanism to .xml file. If Motion part is included, exports all the Motion objects from it. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void ExportPlmxml
            (
                const NXString & fileName /** Full path of the .xml file */,
                const std::vector<NXOpen::NXObject *> & objects /** Motion objects or Motion part tag */
            );
            /** Exports Mechanism to .xml file. If Motion part is included, exports all the Motion objects from it. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void ExportPlmxml
            (
                const char * fileName /** Full path of the .xml file */,
                const std::vector<NXOpen::NXObject *> & objects /** Motion objects or Motion part tag */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
