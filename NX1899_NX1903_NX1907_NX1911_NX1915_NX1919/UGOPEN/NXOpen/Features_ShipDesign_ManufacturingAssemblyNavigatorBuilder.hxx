#ifndef NXOpen_FEATURES_SHIPDESIGN_MANUFACTURINGASSEMBLYNAVIGATORBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_MANUFACTURINGASSEMBLYNAVIGATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ManufacturingAssemblyNavigatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ManufacturingAssemblyNavigatorBuilder;
        }
    }
    class Builder;
    class NXObject;
    class TaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ManufacturingAssemblyNavigatorBuilderBuilder;
            class ManufacturingAssemblyNavigatorBuilderImpl;
            /**
                        This class is used to define Manufacturing Assembly Structure.  This is accomplished by creating
                        manufacturing containers.  These containers are part occurences except in 4GD where there are
                        Partitions.  Each container owns a set of manufacturing parts and containers which
                        define a manufacturing assembly.
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateManufacturingAssemblyNavigatorBuilder  NXOpen::Features::ShipCollection::CreateManufacturingAssemblyNavigatorBuilder @endlink  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ManufacturingAssemblyNavigatorBuilder : public NXOpen::Builder
            {
                /** Container Type Structure or Weld */
                public: enum ContainerType
                {
                    ContainerTypeStructure/** Structure Container */,
                    ContainerTypeWeld/** Weld Container */
                };

                /** Container Orientation Types*/
                public: enum OrientationType
                {
                    OrientationTypeAft/** Aft Orientation */,
                    OrientationTypeStarboard/** Starboard Orientation */,
                    OrientationTypeUp/** Up Orientation */,
                    OrientationTypeForward/** Forward Orientation */,
                    OrientationTypePort/** Port Orientation */,
                    OrientationTypeDown/** Down Orientation */,
                    OrientationTypeCustom/** Custom Orientation */
                };

                private: ManufacturingAssemblyNavigatorBuilderImpl * m_manufacturingassemblynavigatorbuilder_impl;
                private: friend class  _ManufacturingAssemblyNavigatorBuilderBuilder;
                protected: ManufacturingAssemblyNavigatorBuilder();
                public: ~ManufacturingAssemblyNavigatorBuilder();
                /** Move the weld components to the lowest common parent of the
                                2 welded parts 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void DistributeWelds
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ 
                );
                /** Remove a container part from the assembly
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void RemoveComponent
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ 
                );
                /** Create a child container 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: NXOpen::NXObject * CreateChild
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ ,
                    NXOpen::Features::ShipDesign::ManufacturingAssemblyNavigatorBuilder::ContainerType containerType /** containertype */ 
                );
                /** Create a master manufacturing container as a child of the current work part
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: NXOpen::NXObject * CreateMasterContainer
                (
                    const NXString & containerName /** containername */ 
                );
                /** Create a master manufacturing container as a child of the current work part
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                NXOpen::NXObject * CreateMasterContainer
                (
                    const char * containerName /** containername */ 
                );
                /** Create a master manufacturing container as a child of the parent part occurence 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: NXOpen::NXObject * CreateMasterContainer
                (
                    const NXString & containerName /** containername */ ,
                    NXOpen::NXObject * parentPartOccTag /** parentpartocctag */ 
                );
                /** Create a master manufacturing container as a child of the parent part occurence 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                NXOpen::NXObject * CreateMasterContainer
                (
                    const char * containerName /** containername */ ,
                    NXOpen::NXObject * parentPartOccTag /** parentpartocctag */ 
                );
                /** Move components to the container 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void MoveComponents
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ ,
                    const std::vector<NXOpen::NXObject *> & partOccsToMove /** partoccstomove */ 
                );
                /** Set the container orientation
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetOrientation
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ ,
                    NXOpen::Features::ShipDesign::ManufacturingAssemblyNavigatorBuilder::OrientationType orientationType /** orientationtype */ 
                );
                /** Set the container orientation up face
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetOrientationUpFace
                (
                    NXOpen::NXObject * containerOccTag /** containerocctag */ ,
                    NXOpen::TaggedObject * upFace /** the normal of this face will be used for orientation*/
                );
                /** Export the assembly structure to an XML file 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void ExportToXML
                (
                    NXOpen::NXObject * masterContainerPartOccTag /** mastercontainerpartocctag */ 
                );
                /** Set a string manufacturing attribute on a component
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetManufacturingAttribute
                (
                    NXOpen::NXObject * componentTag /** componenttag */ ,
                    const NXString & attrName /** attrname */ ,
                    const NXString & attrValue /** attrvalue */ 
                );
                /** Set a string manufacturing attribute on a component
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                void SetManufacturingAttribute
                (
                    NXOpen::NXObject * componentTag /** componenttag */ ,
                    const char * attrName /** attrname */ ,
                    const char * attrValue /** attrvalue */ 
                );
                /** Set the name of a container
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetContainerName
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Set a container mass value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetContainerMass
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Set a container center of gravity value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetContainerCenterOfGravity
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Set a container weld length value
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetContainerWeldLength
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Create a custom view in the target container
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void CreateCustomView
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Set the root component of the navigator
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetNavigatorRootComponent
                (
                    NXOpen::NXObject * componentTag /** componenttag */ 
                );
                /** Define the initial panel assemblies
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void DefinePanels
                (
                    const NXString & masterContainerName /** mastercontainername */ 
                );
                /** Define the initial panel assemblies
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_ship_mfg_prep ("Ship Manufacturing") */
                void DefinePanels
                (
                    const char * masterContainerName /** mastercontainername */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
