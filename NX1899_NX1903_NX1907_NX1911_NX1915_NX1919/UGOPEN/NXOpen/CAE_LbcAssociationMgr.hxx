#ifndef NXOpen_CAE_LBCASSOCIATIONMGR_HXX_INCLUDED
#define NXOpen_CAE_LBCASSOCIATIONMGR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LbcAssociationMgr.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LbcAssociationMgr;
    }
    class Builder;
    namespace CAE
    {
        class _LbcAssociationMgrBuilder;
        class LbcAssociationMgrImpl;
        /**
            Represents an abstract @link NXOpen::CAE::LbcAssociationMgr NXOpen::CAE::LbcAssociationMgr@endlink 
             <br> This is an abstract class  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LbcAssociationMgr : public NXOpen::Builder
        {
            /** Option to associate bc type, load, constraint or simulation objects */
            public: enum BcType
            {
                BcTypeLoad/** Associate loads*/,
                BcTypeConstraint/** Associate constraints*/,
                BcTypeSimulationObject/** Associate simulation objects*/,
                BcTypeNone/** no valid type*/
            };

            private: LbcAssociationMgrImpl * m_lbcassociationmgr_impl;
            private: friend class  _LbcAssociationMgrBuilder;
            protected: LbcAssociationMgr();
            public: ~LbcAssociationMgr();
            /**Returns  the bc type option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LbcAssociationMgr::BcType TypeOption
            (
            );
            /**Sets  the bc type option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTypeOption
            (
                NXOpen::CAE::LbcAssociationMgr::BcType entityOption /** entityoption */ 
            );
            /** Export to csv 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void ExportToCsv
            (
                const NXString & csvFileName /** CSV file name */
            );
            /** Export to csv 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void ExportToCsv
            (
                const char * csvFileName /** CSV file name */
            );
            /** Import from csv 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void ImportFromCsv
            (
                const NXString & csvFileName /** CSV file name */
            );
            /** Import from csv 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            void ImportFromCsv
            (
                const char * csvFileName /** CSV file name */
            );
            /**Returns  the export orientation option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool Orientation
            (
            );
            /**Sets  the export orientation option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientation
            (
                bool ori /** if true, steps are set in rows */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
