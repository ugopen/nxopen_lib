#ifndef NXOpen_FEATURES_SHIPDESIGN_PROFILECUTOUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PROFILECUTOUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ProfileCutoutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ManufacturingStockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ProfileCutoutBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ManufacturingStockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    class SelectDisplayableObjectList;
    class TaggedObject;
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _ProfileCutoutBuilderBuilder;
            class ProfileCutoutBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::ProfileCutout NXOpen::Features::ShipDesign::ProfileCutout@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateProfileCutoutBuilder  NXOpen::Features::ShipCollection::CreateProfileCutoutBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AngularTolerance </td> <td> 
             
            0.5 </td> </tr> 

            <tr><td> 
             
            DistanceTolerance </td> <td> 
             
            0.0254 (millimeters part), 0.001 (inches part) </td> </tr> 

            </table>  

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ProfileCutoutBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents the profile cutout orientation values. 
                            */
                public: enum Orientation
                {
                    OrientationNone/** no set */,
                    OrientationNormal/** normal */,
                    OrientationFlipped/** flipped */
                };

                /** Represents the collar plate creation approaches.
                            */
                public: enum CollarPlateCreationApproaches
                {
                    CollarPlateCreationApproachesTemplate/** Template approach - Use Standard Part Framework to create collar plate. */,
                    CollarPlateCreationApproachesSteelFeature/** Steel feature approach - User Collar Plate to create collar plate */
                };

                private: ProfileCutoutBuilderImpl * m_profilecutoutbuilder_impl;
                private: friend class  _ProfileCutoutBuilderBuilder;
                protected: ProfileCutoutBuilder();
                public: ~ProfileCutoutBuilder();
                /**Returns  the profiles that are to have a cutout created for them. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * ProfileBodies
                (
                );
                /**Returns  the sketch controlling the shape and parameters of the profile cutout. 
                                 <br> 
                                The cutout sketch type and its parameters are controlled by the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink .
                                 <br> 
                            
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * CutoutData
                (
                );
                /**Returns  the manufacturing stock builder that holds the manufacturing data. 
                 <br>  @deprecated Deprecated in NX8.5.1.  Use @link NXOpen::Features::ShipDesign::ProfileCutoutBuilder::ManufacturingInformation NXOpen::Features::ShipDesign::ProfileCutoutBuilder::ManufacturingInformation@endlink  instead. <br>  

                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX8.5.1.  Use NXOpen::Features::ShipDesign::ProfileCutoutBuilder::ManufacturingInformation instead.") NXOpen::Features::ShipDesign::ManufacturingStockBuilder * ManufacturingStock
                (
                );
                /**Returns  the manufacturing stock builder that holds the manufacturing data. 
                 <br>  Created in NX8.5.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ManufacturingStockBuilder * ManufacturingInformation
                (
                );
                /**Returns  the plates that are to have cutouts placed into them for each profile. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * TargetObjects
                (
                );
                /**Returns  the distance tolerance (part units). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance (part units). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the angular tolerance (degrees). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the angular tolerance (degrees). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAngularTolerance
                (
                    double angularTolerance /** angulartolerance */ 
                );
                /** This method will find out the profile cutout orientation.
                                This information will be used for drawing automation to draw the profile cutout symbol,
                                when the profile cutout was created by flip then the symbol should be drawn flip also.
                                So this method can be used to indicate whether the profile cuotut was created by flip or not.
                                The logic is: The target plate shuold have the start/end flag(by seeing the End cut face attributes)
                                              and the profile(profile cutout created based on)'s molding line face is more nearing to the 
                                              start of the plate, then this method will return Normal, or Flipped.                              
                                              if the targe plate doens't have any flag of start/end, then None will be returned.
                            
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: NXOpen::Features::ShipDesign::ProfileCutoutBuilder::Orientation FindOrientation
                (
                );
                /**Returns  the welding characteristics that will be attached to profile cuotut edges which have attribute MK_TYPE=WELD_EDGE. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Weld::CharacteristicsBuilder * WeldCharacteristics
                (
                );
                /**Returns  the flag to enable collar plate creation when creating profile cutout. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EnableCollarPlate
                (
                );
                /**Sets  the flag to enable collar plate creation when creating profile cutout. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetEnableCollarPlate
                (
                    bool enableCollarPlate /** enablecollarplate */ 
                );
                /**Returns  the flag to enable corner cut creation when creating profile cutout. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EnableCornerCut
                (
                );
                /**Sets  the flag to enable corner cut creation when creating profile cutout. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetEnableCornerCut
                (
                    bool bEnableCornerCut /** benablecornercut */ 
                );
                /**Returns  the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink , which holds the information of the molding side scallop. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * MoldingSideScallop
                (
                );
                /**Returns  the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink , which holds the information of the opposing molding side scallop. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * OpposingSideScallop
                (
                );
                /** Set the default scallop types for the profile cutout builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetDefaultScallopTypes
                (
                    const NXString & strProfileCutoutType /** strprofilecutouttype */ 
                );
                /** Set the default scallop types for the profile cutout builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                void SetDefaultScallopTypes
                (
                    const char * strProfileCutoutType /** strprofilecutouttype */ 
                );
                /** Temporarily removes profile cutout slave features when editing profile cutout in ship basic design to prevent the downstream features from updating. 
                                They will be restrored when committing the profile cutout builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void RemoveSlaves
                (
                );
                /**Sets  the flag to indicate if the section types have been modified by user. 
                                If it is true, it means the section type is chosen by user and the rule driven process will not update the type. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetSectionTypesInUserControl
                (
                    bool bIsSectionTypesInUserControl /** bissectiontypesinusercontrol */ 
                );
                /**Returns  the flag to indicate if the section types have been modified by user. 
                                If it is true, it means the section type is chosen by user and the rule driven process will not update the type. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: bool SectionTypesInUserControl
                (
                );
                /**Sets  the flag to indicate if the profile cutout detail parameters have been modified by user. 
                                If it is true, it means the parameter values are specified by user and the rule driven process will not update the parameter values. 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetParametersInUserControl
                (
                    bool bIsParametersInUserControl /** bisparametersinusercontrol */ 
                );
                /**Returns  the flag to indicate if the profile cutout detail parameters have been modified by user. 
                                If it is true, it means the parameter values are specified by user and the rule driven process will not update the parameter values. 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: bool ParametersInUserControl
                (
                );
                /** Resets the section types acoording to the tightness attribute on the target and the context attribute on the profile 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void ResetContextEntity
                (
                    NXOpen::TaggedObject * tgTargetBody /** tgtargetbody */ ,
                    NXOpen::TaggedObject * tgProfileBody /** tgprofilebody */ 
                );
                /** Updates the parameters in profile cutout builder using parameters rules. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void EvaluateProfileCutoutParameters
                (
                    NXOpen::TaggedObject * tgTargetBody /** tgtargetbody */ ,
                    NXOpen::TaggedObject * tgProfileBody /** tgprofilebody */ 
                );
                /** Updates the parameters in profile cutout builder using profile body. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SynchronizeParametersWithProfileBody
                (
                    NXOpen::TaggedObject * tgProfileBody /** tgprofilebody */ 
                );
                /**Sets   @brief  the approach to be used in creating collar plate.  

                  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetCollarPlateCreationApproach
                (
                    NXOpen::Features::ShipDesign::ProfileCutoutBuilder::CollarPlateCreationApproaches collarPlateCreationApproach /** collarplatecreationapproach */ 
                );
                /**Returns   @brief  the approach to be used in creating collar plate.  

                  
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: NXOpen::Features::ShipDesign::ProfileCutoutBuilder::CollarPlateCreationApproaches CollarPlateCreationApproach
                (
                );
                /**Returns  the flag to enable square cut creation when creating profile cutout. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: bool EnableSquareCut
                (
                );
                /**Sets  the flag to enable square cut creation when creating profile cutout. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetEnableSquareCut
                (
                    bool bEnableSquareCut /** benablesquarecut */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
