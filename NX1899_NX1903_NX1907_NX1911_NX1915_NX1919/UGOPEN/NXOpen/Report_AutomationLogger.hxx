#ifndef NXOpen_REPORT_AUTOMATIONLOGGER_HXX_INCLUDED
#define NXOpen_REPORT_AUTOMATIONLOGGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Report_AutomationLogger.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_report_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Report
    {
        class AutomationLogger;
    }
    namespace Report
    {
        class ReportManager;
    }
    namespace Report
    {
        class AutomationLoggerImpl;
        /** Represents the automation logger to log information for report automation program.  <br> No support KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_REPORTEXPORT  AutomationLogger
        {
            /** Represents the automation logger message type. */
            public: enum MessageType
            {
                MessageTypeEmpty/** None */,
                MessageTypeInformation/** Information message */,
                MessageTypeDebug/** Debug message  */,
                MessageTypeException/** Exception message */
            };

            private: AutomationLoggerImpl * m_automationlogger_impl;
            private: NXOpen::Report::ReportManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AutomationLogger(NXOpen::Report::ReportManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~AutomationLogger();
            /** Adds debug message to the logger.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void LogMessage
            (
                const NXString & message /** message */ 
            );
            /** Adds debug message to the logger.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void LogMessage
            (
                const char * message /** message */ 
            );
            /** Adds required type of message to the logger.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void LogMessage
            (
                const NXString & message /** message */ ,
                NXOpen::Report::AutomationLogger::MessageType messageType /** messagetype */ 
            );
            /** Adds required type of message to the logger.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void LogMessage
            (
                const char * message /** message */ ,
                NXOpen::Report::AutomationLogger::MessageType messageType /** messagetype */ 
            );
            /** Clears the messages in the logger. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void Clear
            (
            );
            /** Saves the messages in the logger to a file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SaveLog
            (
                const NXString & logFileName /** logfilename */ 
            );
            /** Saves the messages in the logger to a file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SaveLog
            (
                const char * logFileName /** logfilename */ 
            );
            /** Has messages in the logger.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsEmpty
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
