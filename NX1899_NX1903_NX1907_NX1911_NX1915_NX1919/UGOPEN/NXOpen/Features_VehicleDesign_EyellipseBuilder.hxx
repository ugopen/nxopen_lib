#ifndef NXOpen_FEATURES_VEHICLEDESIGN_EYELLIPSEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_EYELLIPSEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_EyellipseBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class EyellipseBuilder;
        }
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class NXColor;
    class Point;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _EyellipseBuilderBuilder;
            class EyellipseBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::VehicleDesign::Eyellipse NXOpen::Features::VehicleDesign::Eyellipse@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateEyellipseBuilder  NXOpen::Features::VehicleDesignCollection::CreateEyellipseBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            ABackAngle.Value </td> <td> 
             
            22 </td> </tr> 

            <tr><td> 
             
            AH17Value </td> <td> 
             
            640 </td> </tr> 

            <tr><td> 
             
            AH1Value </td> <td> 
             
            221 </td> </tr> 

            <tr><td> 
             
            AH30Value </td> <td> 
             
            305 </td> </tr> 

            <tr><td> 
             
            AH70Value </td> <td> 
             
            360 </td> </tr> 

            <tr><td> 
             
            AH8Value </td> <td> 
             
            55 </td> </tr> 

            <tr><td> 
             
            AL1Value </td> <td> 
             
            428 </td> </tr> 

            <tr><td> 
             
            AL31Value </td> <td> 
             
            1300 </td> </tr> 

            <tr><td> 
             
            AL6Value </td> <td> 
             
            547 </td> </tr> 

            <tr><td> 
             
            AL8Value </td> <td> 
             
            545 </td> </tr> 

            <tr><td> 
             
            ASeatPosition </td> <td> 
             
            DriverandFrontOutboardPassenger </td> </tr> 

            <tr><td> 
             
            ASeatTrackTravel </td> <td> 
             
            OPTL23158mm </td> </tr> 

            <tr><td> 
             
            AW20Value </td> <td> 
             
            -350 </td> </tr> 

            <tr><td> 
             
            BBackAngle </td> <td> 
             
            15 </td> </tr> 

            <tr><td> 
             
            BH70Value </td> <td> 
             
            360 </td> </tr> 

            <tr><td> 
             
            BH8Value </td> <td> 
             
            55 </td> </tr> 

            <tr><td> 
             
            BL31Value </td> <td> 
             
            1300 </td> </tr> 

            <tr><td> 
             
            BL8Value </td> <td> 
             
            545 </td> </tr> 

            <tr><td> 
             
            BMaleRatio </td> <td> 
             
            R5050 </td> </tr> 

            <tr><td> 
             
            BSeatTrackTravel </td> <td> 
             
            OPTL23158mm </td> </tr> 

            <tr><td> 
             
            BW20Value </td> <td> 
             
            -350 </td> </tr> 

            <tr><td> 
             
            Clearance2DLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            Clearance3DLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ClearanceRearAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ContourAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ContourCentroidLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ContourLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ContourRearLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            ContourSurfaceLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateAxis </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateClearance2D </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateClearance3D </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateClearanceRear </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateContour </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateContourAxis </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateContourCentroid </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateContourRear </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateContourSurface </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateEPoint </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateH35Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateH41Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateH61Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateL38Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateL39Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreatePPoint </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateVPoint </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            CreateW27Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            CreateW35Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DisplayLeftAxis </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayLeftCentroid </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayLeftContour </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayLeftSurface </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayMiddleAxis </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DisplayMiddleCentroid </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DisplayMiddleContour </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DisplayMiddleSurface </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DisplayRightAxis </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayRightCentroid </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayRightContour </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplayRightSurface </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplaySaeEyePoint </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            DisplaySaePivotPoint </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EPointAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EceLoadingSpecified </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EceLoadings </td> <td> 
             
            EmptyweightJapancodriver </td> </tr> 

            <tr><td> 
             
            EceStandard </td> <td> 
             
            R125 </td> </tr> 

            <tr><td> 
             
            EceVisionPoints </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EnumMethod </td> <td> 
             
            Copy </td> </tr> 

            <tr><td> 
             
            Eyellipse </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EyellipseLoadingSpecified </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            EyellipseLoadings </td> <td> 
             
            EmptyweightJapancodriver </td> </tr> 

            <tr><td> 
             
            EyellipsePercentile </td> <td> 
             
            TangentCutoffEyellipse95 </td> </tr> 

            <tr><td> 
             
            EyellipseStandard </td> <td> 
             
            Saej941mar2010 </td> </tr> 

            <tr><td> 
             
            H35Value </td> <td> 
             
            100 </td> </tr> 

            <tr><td> 
             
            H41Value </td> <td> 
             
            105 </td> </tr> 

            <tr><td> 
             
            H61Value </td> <td> 
             
            800 </td> </tr> 

            <tr><td> 
             
            HCrossAft </td> <td> 
             
            287.5 </td> </tr> 

            <tr><td> 
             
            HForeAft </td> <td> 
             
            422.5 </td> </tr> 

            <tr><td> 
             
            HVertical </td> <td> 
             
            267 </td> </tr> 

            <tr><td> 
             
            HalfAxis </td> <td> 
             
            379 </td> </tr> 

            <tr><td> 
             
            HeadContourPercentile </td> <td> 
             
            PO95headpositioncontour </td> </tr> 

            <tr><td> 
             
            HeadLoadingSpecified </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            HeadLoadings </td> <td> 
             
            EmptyweightJapancodriver </td> </tr> 

            <tr><td> 
             
            HeadMoveToggle </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            HeadPositionContour </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            HeadStandard </td> <td> 
             
            Saej1052sep2010 </td> </tr> 

            <tr><td> 
             
            L38Value </td> <td> 
             
            180 </td> </tr> 

            <tr><td> 
             
            L39Value </td> <td> 
             
            180 </td> </tr> 

            <tr><td> 
             
            LeanToggle </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            LeanW3 </td> <td> 
             
            1600 </td> </tr> 

            <tr><td> 
             
            LeanW7 </td> <td> 
             
            -400 </td> </tr> 

            <tr><td> 
             
            LeftAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            LeftCentroidLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            LeftContourLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            LeftSurfaceLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            MajorAxis </td> <td> 
             
            654 </td> </tr> 

            <tr><td> 
             
            MidAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            MidCentroidLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            MidContourLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            MidSurfaceLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            MinorAxis </td> <td> 
             
            612 </td> </tr> 

            <tr><td> 
             
            MoveAngle </td> <td> 
             
            30 </td> </tr> 

            <tr><td> 
             
            MoveDirection </td> <td> 
             
            Left </td> </tr> 

            <tr><td> 
             
            MoveDistance </td> <td> 
             
            50 </td> </tr> 

            <tr><td> 
             
            NonAsso </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            PPointLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            RightAxisLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            RightCentroidLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            RightContourLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            RightSurfaceLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SaeEyeLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SaePivotLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            SnapH41Point </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SnapL38Point </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SnapL39Point </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            SpecifyPoint </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            TransmissionType </td> <td> 
             
            WithClutchPedal </td> </tr> 

            <tr><td> 
             
            UCrossCab </td> <td> 
             
            60.3 </td> </tr> 

            <tr><td> 
             
            UForceArt </td> <td> 
             
            173.8 </td> </tr> 

            <tr><td> 
             
            UH17Value </td> <td> 
             
            640 </td> </tr> 

            <tr><td> 
             
            UH8Value </td> <td> 
             
            55 </td> </tr> 

            <tr><td> 
             
            UL11Value </td> <td> 
             
            430 </td> </tr> 

            <tr><td> 
             
            UL8Value </td> <td> 
             
            545 </td> </tr> 

            <tr><td> 
             
            UMaleRatio </td> <td> 
             
            U5050 </td> </tr> 

            <tr><td> 
             
            USpecifyPoint </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            UVertical </td> <td> 
             
            93.4 </td> </tr> 

            <tr><td> 
             
            UW20Value </td> <td> 
             
            -350 </td> </tr> 

            <tr><td> 
             
            VPointLayer </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            VehicleClass </td> <td> 
             
            ClassAVehicle </td> </tr> 

            <tr><td> 
             
            W27Value </td> <td> 
             
            150 </td> </tr> 

            <tr><td> 
             
            W35Value </td> <td> 
             
            150 </td> </tr> 

            <tr><td> 
             
            XHCentroid </td> <td> 
             
            1583.483 </td> </tr> 

            <tr><td> 
             
            XUCentroid </td> <td> 
             
            1583.483 </td> </tr> 

            <tr><td> 
             
            YHCentroid </td> <td> 
             
            -400 </td> </tr> 

            <tr><td> 
             
            YUCentroid </td> <td> 
             
            -400 </td> </tr> 

            <tr><td> 
             
            ZHCentroid </td> <td> 
             
            1288 </td> </tr> 

            <tr><td> 
             
            ZUCentroid </td> <td> 
             
            1288 </td> </tr> 

            </table>  

             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  EyellipseBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** The eyellipse standard type */
                public: enum EyellipseStandardOption
                {
                    EyellipseStandardOptionSaej941mar2010/** SAE J941 MAR2010 */,
                    EyellipseStandardOptionSaej941sep2002/** SAE J941 SEP2002 */,
                    EyellipseStandardOptionSaej941jun1997/** SAE J941 JUN1997 */,
                    EyellipseStandardOptionSaej941oct1985/** SAE J941 OCT1985 */,
                    EyellipseStandardOptionUmtri2005/** UMTRI 2005 */,
                    EyellipseStandardOptionUserDefined/** User Defined */
                };

                /** the eyellipse loading type */
                public: enum EyellipseLoadingsOption
                {
                    EyellipseLoadingsOptionEmptyweightJapancodriver/** Empty Weight Japan + Co-driver */,
                    EyellipseLoadingsOptionEmptyweightML1/** Empty Weight ML1 */,
                    EyellipseLoadingsOptionVehiclegridparallel/** Vehicle Grid Parallel */
                };

                /** the head contour standard type */
                public: enum HeadStandardOption
                {
                    HeadStandardOptionSaej1052sep2010/** SAE J1052 SEP2010 */,
                    HeadStandardOptionSaej1052aug2002/** SAE J1052 AUG2002 */,
                    HeadStandardOptionSaej1052apr1997/** SAE J1052 APR1997 */,
                    HeadStandardOptionUserDefinedheadgear/** User Defined(head gear) */
                };

                /** the head loading type */
                public: enum HeadLoadingsOption
                {
                    HeadLoadingsOptionEmptyweightJapancodriver/** Empty Weight Japan + Co-driver */,
                    HeadLoadingsOptionEmptyweightML1/** Empty Weight ML1 */,
                    HeadLoadingsOptionVehiclegridparallel/** Vehicle Grid Parallel */
                };

                /** the ECE standard type */
                public: enum EceStandardOption
                {
                    EceStandardOptionR125/** R125 */
                };

                /** the ECE loading type */
                public: enum EceLoadingsOption
                {
                    EceLoadingsOptionEmptyweightJapancodriver/** Empty Weight Japan + Co-driver */,
                    EceLoadingsOptionEmptyweightML1/** Empty Weight ML1 */,
                    EceLoadingsOptionVehiclegridparallel/** Vehicle Grid Parallel */
                };

                /** the eyellipse creation method type */
                public: enum EnumEyellipseMethod
                {
                    EnumEyellipseMethodCopy/** Copy */,
                    EnumEyellipseMethodInput/** Input */
                };

                /** the vehicle class type */
                public: enum ClassOption
                {
                    ClassOptionClassAVehicle/** Class A Vehicle */,
                    ClassOptionClassBVehicle/** Class B Vehicle */,
                    ClassOptionClassHEVehicle/** Class HE Vehicle */
                };

                /** the eyellipse percentile option type */
                public: enum EyellipsePercentileOption
                {
                    EyellipsePercentileOptionTangentCutoffEyellipse95/** Tangent Cutoff Eyellipse 95% */,
                    EyellipsePercentileOptionTangentCutoffEyellipse99/** Tangent Cutoff Eyellipse 99% */,
                    EyellipsePercentileOptionBothTangentCutoffEyellipse/** Both Tangent Cutoff Eyellipse */,
                    EyellipsePercentileOptionInclusiveEyellipse95/** Inclusive Eyellipse 95% */,
                    EyellipsePercentileOptionInclusiveEyellipse99/** Inclusive Eyellipse 99% */,
                    EyellipsePercentileOptionBothInclusiveEyellipse/** Both Inclusive Eyellipse */
                };

                /** the head contour person percentile option type */
                public: enum HeadContourPercentileOption
                {
                    HeadContourPercentileOptionPO95headpositioncontour/** 95% head position contour */,
                    HeadContourPercentileOptionPO99headpositioncontour/** 99% head position contour */,
                    HeadContourPercentileOptionPOBoth/** Both */
                };

                /** the seat Track travel option type */
                public: enum SeatTrackTravelOption
                {
                    SeatTrackTravelOptionOPTL23158mm/** 158mm */,
                    SeatTrackTravelOptionOP146mmTL23158mm/** 146mm-158mm */,
                    SeatTrackTravelOptionOP133mmTL23145mm/** 133mm-145mm */,
                    SeatTrackTravelOptionOP121mmTL23132mm/** 121mm-132mm  */,
                    SeatTrackTravelOptionOP108mmTL23120mm/** 108mm-120mm  */,
                    SeatTrackTravelOptionOP1mmTL23108mm/** 100mm-108mm  */,
                    SeatTrackTravelOptionFixed/** Fixed */
                };

                /** the seat position type */
                public: enum SeatPositionOption
                {
                    SeatPositionOptionDriver/** Driver */,
                    SeatPositionOptionDriverandFrontOutboardPassenger/** Driver and Front Outboard Passenger */,
                    SeatPositionOptionFrontOutboardPassenger/** Front Outboard Passenger */,
                    SeatPositionOptionFrontCenterPassenger/** Front Center Passenger */,
                    SeatPositionOptionAllOtherRows/** All Other Rows */
                };

                /** the eyellipse transmission type */
                public: enum TransmissionTypeOption
                {
                    TransmissionTypeOptionWithClutchPedal/** With Clutch Pedal */,
                    TransmissionTypeOptionWithoutClutchPedal/** Without Clutch Pedal */
                };

                /** the vehicle class B seat position type */
                public: enum EnumBSeatType
                {
                    EnumBSeatTypeOPTL23158mm/** 158mm */,
                    EnumBSeatTypeOP146mmTL23158mm/** 146mm-158mm */,
                    EnumBSeatTypeOP133mmTL23145mm/** 133mm-145mm */,
                    EnumBSeatTypeOP121mmTL23132mm/** 121mm-132mm  */,
                    EnumBSeatTypeOP108mmTL23120mm/** 108mm-120mm  */,
                    EnumBSeatTypeOP100mmTL23108mm/** 100mm-108mm  */
                };

                /** the eyellipse male/female ratio type */
                public: enum EnumMaleRatio
                {
                    EnumMaleRatioR5050/** 50/50 */,
                    EnumMaleRatioR7525/** 75/25 */,
                    EnumMaleRatioR9010or955/** 90/10 or 95/5 */
                };

                /** The head move direction type */
                public: enum EnumDirectionType
                {
                    EnumDirectionTypeLeft/** Left */,
                    EnumDirectionTypeRight/** Right */
                };

                /** the Umtri standard male/female ratio type */
                public: enum EnumRatioType
                {
                    EnumRatioTypeU5050/** 50/50 */,
                    EnumRatioTypeU9010/** 90/10 */
                };

                private: EyellipseBuilderImpl * m_eyellipsebuilder_impl;
                private: friend class  _EyellipseBuilderBuilder;
                protected: EyellipseBuilder();
                public: ~EyellipseBuilder();
                /**Returns  the non-associate eye/head geometry 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool NonAsso
                (
                );
                /**Sets  the non-associate eye/head geometry 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetNonAsso
                (
                    bool nonAsso /** nonasso */ 
                );
                /**Returns  the create eyellipse option 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: bool Eyellipse
                (
                );
                /**Sets  the create eyellipse option 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipse
                (
                    bool eyellipse /** eyellipse */ 
                );
                /**Returns  the eyellipse standard when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOptionSaej941sep2002   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOptionSaej941sep2002 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption EyellipseStandard
                (
                );
                /**Sets  the eyellipse standard when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOptionSaej941sep2002   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOptionSaej941sep2002 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipseStandard
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseStandardOption eyellipseStandard /** eyellipsestandard */ 
                );
                /**Returns  the eyellipse loading is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EyellipseLoadingSpecified
                (
                );
                /**Sets  the eyellipse loading is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipseLoadingSpecified
                (
                    bool eyellipseLoadingSpecified /** eyellipseloadingspecified */ 
                );
                /**Returns  the eyellipse loadings when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption EyellipseLoadings
                (
                );
                /**Sets  the eyellipse loadings when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipseLoadings
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipseLoadingsOption eyellipseLoadings /** eyellipseloadings */ 
                );
                /**Returns  the create head position contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HeadPositionContour
                (
                );
                /**Sets  the create head position contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadPositionContour
                (
                    bool headPositionContour /** headpositioncontour */ 
                );
                /**Returns  the head contour standard when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOptionSaej1052sep2010   NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOptionSaej1052sep2010 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption HeadStandard
                (
                );
                /**Sets  the head contour standard when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOptionSaej1052sep2010   NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOptionSaej1052sep2010 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadStandard
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadStandardOption headStandard /** headstandard */ 
                );
                /**Returns  the head contour loading option is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HeadLoadingSpecified
                (
                );
                /**Sets  the head contour loading option is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadLoadingSpecified
                (
                    bool headLoadingSpecified /** headloadingspecified */ 
                );
                /**Returns  the head contour loadings when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption HeadLoadings
                (
                );
                /**Sets  the head contour loadings when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadLoadings
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadLoadingsOption headLoadings /** headloadings */ 
                );
                /**Returns  the create ece vision points option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EceVisionPoints
                (
                );
                /**Sets  the create ece vision points option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEceVisionPoints
                (
                    bool eceVisionPoints /** ecevisionpoints */ 
                );
                /**Returns  the ece standard 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EceStandardOption EceStandard
                (
                );
                /**Sets  the ece standard 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEceStandard
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EceStandardOption eceStandard /** ecestandard */ 
                );
                /**Returns  the ece loading options is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EceLoadingSpecified
                (
                );
                /**Sets  the ece loading options is specified or not 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEceLoadingSpecified
                (
                    bool eceLoadingSpecified /** eceloadingspecified */ 
                );
                /**Returns  the ece loadings that when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption EceLoadings
                (
                );
                /**Sets  the ece loadings that when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOptionEmptyweightJapancodriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOptionEmptyweightJapancodriver @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEceLoadings
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EceLoadingsOption eceLoadings /** eceloadings */ 
                );
                /**Returns  the eyellipse creation method, copy or input 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumEyellipseMethod EnumMethod
                (
                );
                /**Sets  the eyellipse creation method, copy or input 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEnumMethod
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumEyellipseMethod enumMethod /** enummethod */ 
                );
                /**Returns  the select eyellipse 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectFeature * SelectEyellipse
                (
                );
                /**Returns  the vehicle class type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOptionClassAVehicle   NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOptionClassAVehicle @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption VehicleClass
                (
                );
                /**Sets  the vehicle class type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOptionClassAVehicle   NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOptionClassAVehicle @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVehicleClass
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::ClassOption vehicleClass /** vehicleclass */ 
                );
                /**Returns  the eyellipse percentile when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOptionTangentCutoffEyellipse95   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOptionTangentCutoffEyellipse95 @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption EyellipsePercentile
                (
                );
                /**Sets  the eyellipse percentile when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOptionTangentCutoffEyellipse95   NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOptionTangentCutoffEyellipse95 @endlink . 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipsePercentile
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EyellipsePercentileOption eyellipsePercentile /** eyellipsepercentile */ 
                );
                /**Returns  the head contour percentile, 95%, 99% or both 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadContourPercentileOption HeadContourPercentile
                (
                );
                /**Sets  the head contour percentile, 95%, 99% or both 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadContourPercentile
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::HeadContourPercentileOption headContourPercentile /** headcontourpercentile */ 
                );
                /**Returns  the vehicle class A seat track travel value when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOptionOPTL23158mm   NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOptionOPTL23158mm @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption ASeatTrackTravel
                (
                );
                /**Sets  the vehicle class A seat track travel value when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOptionOPTL23158mm   NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOptionOPTL23158mm @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetASeatTrackTravel
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatTrackTravelOption aSeatTrackTravel /** aseattracktravel */ 
                );
                /**Returns  the vehicle class A seat position when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOptionDriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOptionDriver @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption ASeatPosition
                (
                );
                /**Sets  the vehicle class A seat position when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOptionDriver   NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOptionDriver @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetASeatPosition
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::SeatPositionOption aSeatPosition /** aseatposition */ 
                );
                /**Returns  the vehicle class A back angle 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ABackAngle
                (
                );
                /**Returns  the transmission type 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::TransmissionTypeOption TransmissionType
                (
                );
                /**Sets  the transmission type 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTransmissionType
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::TransmissionTypeOption transmissionType /** transmissiontype */ 
                );
                /** Revert parameters to initial base data 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void VehicleARevertButton
                (
                );
                /**Returns  the specify point option of vehicle class A parameter 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SpecifyPoint
                (
                );
                /**Sets  the specify point option of vehicle class A parameter 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSpecifyPoint
                (
                    bool specifyPoint /** specifypoint */ 
                );
                /**Returns  the bofrp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * BofrpPoint
                (
                );
                /**Sets  the bofrp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBofrpPoint
                (
                    NXOpen::Point * bofrpPoint /** bofrppoint */ 
                );
                /**Returns  the SgRP point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SgrpPoint
                (
                );
                /**Sets  the SgRP point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSgrpPoint
                (
                    NXOpen::Point * sgrpPoint /** sgrppoint */ 
                );
                /**Returns  the accelerator heel point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * AhpPoint
                (
                );
                /**Sets  the accelerator heel point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAhpPoint
                (
                    NXOpen::Point * ahpPoint /** ahppoint */ 
                );
                /**Returns  the steering wheel center point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SwcPoint
                (
                );
                /**Sets  the steering wheel center point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSwcPoint
                (
                    NXOpen::Point * swcPoint /** swcpoint */ 
                );
                /**Returns  the seat index point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SipPoint
                (
                );
                /**Sets  the seat index point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSipPoint
                (
                    NXOpen::Point * sipPoint /** sippoint */ 
                );
                /**Returns  the scp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * ScpPoint
                (
                );
                /**Sets  the scp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetScpPoint
                (
                    NXOpen::Point * scpPoint /** scppoint */ 
                );
                /**Returns  the vehicle class A BOFRP length coordinate(L1) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AL1Value
                (
                );
                /**Sets  the vehicle class A BOFRP length coordinate(L1) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAL1Value
                (
                    double aL1Value /** al1value */ 
                );
                /**Returns  the vehicle class A BOFRP height coordinate(H1) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AH1Value
                (
                );
                /**Sets  the vehicle class A BOFRP height coordinate(H1) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAH1Value
                (
                    double aH1Value /** ah1value */ 
                );
                /**Returns  the vehicle class A SgRP length coordinate(L31) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AL31Value
                (
                );
                /**Sets  the vehicle class A SgRP length coordinate(L31) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAL31Value
                (
                    double aL31Value /** al31value */ 
                );
                /**Returns  the vehicle class A SgRP width coordinate(W20) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AW20Value
                (
                );
                /**Sets  the vehicle class A SgRP width coordinate(W20) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAW20Value
                (
                    double aW20Value /** aw20value */ 
                );
                /**Returns  the vehicle class A AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AL8Value
                (
                );
                /**Sets  the vehicle class A AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAL8Value
                (
                    double aL8Value /** al8value */ 
                );
                /**Returns  the vehicle class A AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AH8Value
                (
                );
                /**Sets  the vehicle class A AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAH8Value
                (
                    double aH8Value /** ah8value */ 
                );
                /**Returns  the vehicle class A seat height(H30) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AH30Value
                (
                );
                /**Sets  the vehicle class A seat height(H30) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAH30Value
                (
                    double aH30Value /** ah30value */ 
                );
                /**Returns  the vehicle class A BOFRP to SWC length(L16) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AL6Value
                (
                );
                /**Sets  the vehicle class A BOFRP to SWC length(L16) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAL6Value
                (
                    double aL6Value /** al6value */ 
                );
                /**Returns  the vehicle class A AHP to SWC height(H17) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AH17Value
                (
                );
                /**Sets  the vehicle class A AHP to SWC height(H17) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAH17Value
                (
                    double aH17Value /** ah17value */ 
                );
                /**Returns  the ah70 value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AH70Value
                (
                );
                /**Sets  the ah70 value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAH70Value
                (
                    double aH70Value /** ah70value */ 
                );
                /** Show image of vehicle class A parameters 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void VehicleA2ImageButton
                (
                );
                /** Revert vehicle class A parameters to base data 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void VehicleA2RevertButton
                (
                );
                /**Returns  the create head clearance diagonal(W27) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateW27Value
                (
                );
                /**Sets  the create head clearance diagonal(W27) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateW27Value
                (
                    bool createW27Value /** createw27value */ 
                );
                /**Returns  the head clearance diagonal(W27) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double W27Value
                (
                );
                /**Sets  the head clearance diagonal(W27) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetW27Value
                (
                    double w27Value /** w27value */ 
                );
                /**Returns  the create head clearance lateral(W35) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateW35Value
                (
                );
                /**Sets  the create head clearance lateral(W35) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateW35Value
                (
                    bool createW35Value /** createw35value */ 
                );
                /**Returns   the head clearance lateral(W35) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double W35Value
                (
                );
                /**Sets   the head clearance lateral(W35) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetW35Value
                (
                    double w35Value /** w35value */ 
                );
                /**Returns  the create head clearance vertical(H35) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateH35Value
                (
                );
                /**Sets  the create head clearance vertical(H35) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateH35Value
                (
                    bool createH35Value /** createh35value */ 
                );
                /**Returns   the head clearance vertical(H35) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double H35Value
                (
                );
                /**Sets   the head clearance vertical(H35) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetH35Value
                (
                    double h35Value /** h35value */ 
                );
                /**Returns   the effective head room(H61) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateH61Value
                (
                );
                /**Sets   the effective head room(H61) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateH61Value
                (
                    bool createH61Value /** createh61value */ 
                );
                /**Returns  the effective head room(H61) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double H61Value
                (
                );
                /**Sets  the effective head room(H61) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetH61Value
                (
                    double h61Value /** h61value */ 
                );
                /**Returns  the create fore-aft dimension(major axis) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateAxis
                (
                );
                /**Sets  the create fore-aft dimension(major axis) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateAxis
                (
                    bool createAxis /** createaxis */ 
                );
                /**Returns  the fore-aft dimension(major axis) axis value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double MajorAxis
                (
                );
                /**Sets  the fore-aft dimension(major axis) axis value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMajorAxis
                (
                    double majorAxis /** majoraxis */ 
                );
                /**Returns  the cross-cab dimension(minor axis) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double MinorAxis
                (
                );
                /**Sets  the cross-cab dimension(minor axis) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMinorAxis
                (
                    double minorAxis /** minoraxis */ 
                );
                /**Returns  the vertical dimension(half axis) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double HalfAxis
                (
                );
                /**Sets  the vertical dimension(half axis) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHalfAxis
                (
                    double halfAxis /** halfaxis */ 
                );
                /** Image display of head clearance 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ClearanceImageButton
                (
                );
                /**Returns  the create head clearance vertical(H41) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateH41Value
                (
                );
                /**Sets  the create head clearance vertical(H41) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateH41Value
                (
                    bool createH41Value /** createh41value */ 
                );
                /**Returns  the head clearance vertical(H41) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double H41Value
                (
                );
                /**Sets  the head clearance vertical(H41) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetH41Value
                (
                    double h41Value /** h41value */ 
                );
                /**Returns  the head clearance vertical(H41) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * H41Point
                (
                );
                /**Sets  the head clearance vertical(H41) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetH41Point
                (
                    NXOpen::Point * h41Point /** h41point */ 
                );
                /**Returns  the snap h41 point option
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SnapH41Point
                (
                );
                /**Sets  the snap h41 point option
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSnapH41Point
                (
                    bool snapH41Point /** snaph41point */ 
                );
                /**Returns the create head clearance to windshield garnish(L38) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateL38Value
                (
                );
                /**Sets the create head clearance to windshield garnish(L38) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateL38Value
                (
                    bool createL38Value /** createl38value */ 
                );
                /**Returns  the head clearance to windshield garnish(L38) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double L38Value
                (
                );
                /**Sets  the head clearance to windshield garnish(L38) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL38Value
                (
                    double l38Value /** l38value */ 
                );
                /**Returns  the head clearance to windshield garnish(L38) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * L38Point
                (
                );
                /**Sets  the head clearance to windshield garnish(L38) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL38Point
                (
                    NXOpen::Point * l38Point /** l38point */ 
                );
                /**Returns  the snap l38 point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SnapL38Point
                (
                );
                /**Sets  the snap l38 point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSnapL38Point
                (
                    bool snapL38Point /** snapl38point */ 
                );
                /**Returns  the create head clearance to backlight garnish(L39) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateL39Value
                (
                );
                /**Sets  the create head clearance to backlight garnish(L39) option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateL39Value
                (
                    bool createL39Value /** createl39value */ 
                );
                /**Returns  the head clearance to backlight garnish(L39) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double L39Value
                (
                );
                /**Sets  the head clearance to backlight garnish(L39) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL39Value
                (
                    double l39Value /** l39value */ 
                );
                /**Returns  the head clearance to backlight garnish(L39) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * L39Point
                (
                );
                /**Sets  the head clearance to backlight garnish(L39) point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetL39Point
                (
                    NXOpen::Point * l39Point /** l39point */ 
                );
                /**Returns  the snap l39 point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SnapL39Point
                (
                );
                /**Sets  the snap l39 point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSnapL39Point
                (
                    bool snapL39Point /** snapl39point */ 
                );
                /** Show image of clearance page two parameters 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Clearance2Image
                (
                );
                /**Returns  the display left surface option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayLeftSurface
                (
                );
                /**Sets  the display left surface option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayLeftSurface
                (
                    bool displayLeftSurface /** displayleftsurface */ 
                );
                /**Returns  the left surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int LeftSurfaceLayer
                (
                );
                /**Sets  the left surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftSurfaceLayer
                (
                    int leftSurfaceLayer /** leftsurfacelayer */ 
                );
                /**Returns  the display left contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayLeftContour
                (
                );
                /**Sets  the display left contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayLeftContour
                (
                    bool displayLeftContour /** displayleftcontour */ 
                );
                /**Returns  the display left axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayLeftAxis
                (
                );
                /**Sets  the display left axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayLeftAxis
                (
                    bool displayLeftAxis /** displayleftaxis */ 
                );
                /**Returns  the display left centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayLeftCentroid
                (
                );
                /**Sets  the display left centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayLeftCentroid
                (
                    bool displayLeftCentroid /** displayleftcentroid */ 
                );
                /**Returns  the left contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int LeftContourLayer
                (
                );
                /**Sets  the left contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftContourLayer
                (
                    int leftContourLayer /** leftcontourlayer */ 
                );
                /**Returns  the left axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int LeftAxisLayer
                (
                );
                /**Sets  the left axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftAxisLayer
                (
                    int leftAxisLayer /** leftaxislayer */ 
                );
                /**Returns  the left centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int LeftCentroidLayer
                (
                );
                /**Sets  the left centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftCentroidLayer
                (
                    int leftCentroidLayer /** leftcentroidlayer */ 
                );
                /**Returns  the left surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * LeftSurfaceColorPicker
                (
                );
                /**Sets  the left surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftSurfaceColorPicker
                (
                    NXOpen::NXColor * leftSurfaceColorPicker /** leftsurfacecolorpicker */ 
                );
                /**Returns  the left contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * LeftContourColorPicker
                (
                );
                /**Sets  the left contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftContourColorPicker
                (
                    NXOpen::NXColor * leftContourColorPicker /** leftcontourcolorpicker */ 
                );
                /**Returns  the left axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * LeftAxisColorPicker
                (
                );
                /**Sets  the left axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftAxisColorPicker
                (
                    NXOpen::NXColor * leftAxisColorPicker /** leftaxiscolorpicker */ 
                );
                /**Returns  the left centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * LeftCentroidColorPicker
                (
                );
                /**Sets  the left centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftCentroidColorPicker
                (
                    NXOpen::NXColor * leftCentroidColorPicker /** leftcentroidcolorpicker */ 
                );
                /**Returns  the display right surface 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayRightSurface
                (
                );
                /**Sets  the display right surface 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayRightSurface
                (
                    bool displayRightSurface /** displayrightsurface */ 
                );
                /**Returns  the display right contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayRightContour
                (
                );
                /**Sets  the display right contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayRightContour
                (
                    bool displayRightContour /** displayrightcontour */ 
                );
                /**Returns  the display right axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayRightAxis
                (
                );
                /**Sets  the display right axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayRightAxis
                (
                    bool displayRightAxis /** displayrightaxis */ 
                );
                /**Returns  the display right centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayRightCentroid
                (
                );
                /**Sets  the display right centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayRightCentroid
                (
                    bool displayRightCentroid /** displayrightcentroid */ 
                );
                /**Returns  the right surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int RightSurfaceLayer
                (
                );
                /**Sets  the right surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightSurfaceLayer
                (
                    int rightSurfaceLayer /** rightsurfacelayer */ 
                );
                /**Returns  the right contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int RightContourLayer
                (
                );
                /**Sets  the right contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightContourLayer
                (
                    int rightContourLayer /** rightcontourlayer */ 
                );
                /**Returns  the right axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int RightAxisLayer
                (
                );
                /**Sets  the right axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightAxisLayer
                (
                    int rightAxisLayer /** rightaxislayer */ 
                );
                /**Returns  the right centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int RightCentroidLayer
                (
                );
                /**Sets  the right centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightCentroidLayer
                (
                    int rightCentroidLayer /** rightcentroidlayer */ 
                );
                /**Returns  the right surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * RightSurfaceColorPicker
                (
                );
                /**Sets  the right surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightSurfaceColorPicker
                (
                    NXOpen::NXColor * rightSurfaceColorPicker /** rightsurfacecolorpicker */ 
                );
                /**Returns  the right contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * RightContourColorPicker
                (
                );
                /**Sets  the right contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightContourColorPicker
                (
                    NXOpen::NXColor * rightContourColorPicker /** rightcontourcolorpicker */ 
                );
                /**Returns  the right axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * RightAxisColorPicker
                (
                );
                /**Sets  the right axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightAxisColorPicker
                (
                    NXOpen::NXColor * rightAxisColorPicker /** rightaxiscolorpicker */ 
                );
                /**Returns  the right centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * RightCentroidColorPicker
                (
                );
                /**Sets  the right centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightCentroidColorPicker
                (
                    NXOpen::NXColor * rightCentroidColorPicker /** rightcentroidcolorpicker */ 
                );
                /**Returns  the display middle surface option
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayMiddleSurface
                (
                );
                /**Sets  the display middle surface option
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayMiddleSurface
                (
                    bool displayMiddleSurface /** displaymiddlesurface */ 
                );
                /**Returns  the display middle contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayMiddleContour
                (
                );
                /**Sets  the display middle contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayMiddleContour
                (
                    bool displayMiddleContour /** displaymiddlecontour */ 
                );
                /**Returns  the display middle axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayMiddleAxis
                (
                );
                /**Sets  the display middle axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayMiddleAxis
                (
                    bool displayMiddleAxis /** displaymiddleaxis */ 
                );
                /**Returns  the display middle centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplayMiddleCentroid
                (
                );
                /**Sets  the display middle centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplayMiddleCentroid
                (
                    bool displayMiddleCentroid /** displaymiddlecentroid */ 
                );
                /**Returns  the mid surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int MidSurfaceLayer
                (
                );
                /**Sets  the mid surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidSurfaceLayer
                (
                    int midSurfaceLayer /** midsurfacelayer */ 
                );
                /**Returns  the mid contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int MidContourLayer
                (
                );
                /**Sets  the mid contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidContourLayer
                (
                    int midContourLayer /** midcontourlayer */ 
                );
                /**Returns  the mid axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int MidAxisLayer
                (
                );
                /**Sets  the mid axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidAxisLayer
                (
                    int midAxisLayer /** midaxislayer */ 
                );
                /**Returns  the mid centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int MidCentroidLayer
                (
                );
                /**Sets  the mid centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidCentroidLayer
                (
                    int midCentroidLayer /** midcentroidlayer */ 
                );
                /**Returns  the mid surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * MidSurfaceColorPicker
                (
                );
                /**Sets  the mid surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidSurfaceColorPicker
                (
                    NXOpen::NXColor * midSurfaceColorPicker /** midsurfacecolorpicker */ 
                );
                /**Returns  the mid contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * MidContourColorPicker
                (
                );
                /**Sets  the mid contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidContourColorPicker
                (
                    NXOpen::NXColor * midContourColorPicker /** midcontourcolorpicker */ 
                );
                /**Returns  the mid axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * MidAxisColorPicker
                (
                );
                /**Sets  the mid axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidAxisColorPicker
                (
                    NXOpen::NXColor * midAxisColorPicker /** midaxiscolorpicker */ 
                );
                /**Returns  the mid centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * MidCentroidColorPicker
                (
                );
                /**Sets  the mid centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMidCentroidColorPicker
                (
                    NXOpen::NXColor * midCentroidColorPicker /** midcentroidcolorpicker */ 
                );
                /**Returns  the display sae eye point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplaySaeEyePoint
                (
                );
                /**Sets  the display sae eye point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplaySaeEyePoint
                (
                    bool displaySaeEyePoint /** displaysaeeyepoint */ 
                );
                /**Returns  the sae eye layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int SaeEyeLayer
                (
                );
                /**Sets  the sae eye layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaeEyeLayer
                (
                    int saeEyeLayer /** saeeyelayer */ 
                );
                /**Returns  the sae eyecolor picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * SaeEyecolorPicker
                (
                );
                /**Sets  the sae eyecolor picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaeEyecolorPicker
                (
                    NXOpen::NXColor * saeEyecolorPicker /** saeeyecolorpicker */ 
                );
                /**Returns  the display sae pivot point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool DisplaySaePivotPoint
                (
                );
                /**Sets  the display sae pivot point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDisplaySaePivotPoint
                (
                    bool displaySaePivotPoint /** displaysaepivotpoint */ 
                );
                /**Returns  the sae pivot layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int SaePivotLayer
                (
                );
                /**Sets  the sae pivot layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaePivotLayer
                (
                    int saePivotLayer /** saepivotlayer */ 
                );
                /**Returns  the sae pivotcolor picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * SaePivotcolorPicker
                (
                );
                /**Sets  the sae pivotcolor picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSaePivotcolorPicker
                (
                    NXOpen::NXColor * saePivotcolorPicker /** saepivotcolorpicker */ 
                );
                /**Returns  the create contour surface 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateContourSurface
                (
                );
                /**Sets  the create contour surface 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateContourSurface
                (
                    bool createContourSurface /** createcontoursurface */ 
                );
                /**Returns  the contour surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContourSurfaceLayer
                (
                );
                /**Sets  the contour surface layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourSurfaceLayer
                (
                    int contourSurfaceLayer /** contoursurfacelayer */ 
                );
                /**Returns  the contour surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ContourSurfaceColorPicker
                (
                );
                /**Sets  the contour surface color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourSurfaceColorPicker
                (
                    NXOpen::NXColor * contourSurfaceColorPicker /** contoursurfacecolorpicker */ 
                );
                /**Returns  the create contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateContour
                (
                );
                /**Sets  the create contour option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateContour
                (
                    bool createContour /** createcontour */ 
                );
                /**Returns  the contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContourLayer
                (
                );
                /**Sets  the contour layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourLayer
                (
                    int contourLayer /** contourlayer */ 
                );
                /**Returns  the contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ContourColorPicker
                (
                );
                /**Sets  the contour color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourColorPicker
                (
                    NXOpen::NXColor * contourColorPicker /** contourcolorpicker */ 
                );
                /**Returns  the create contour axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateContourAxis
                (
                );
                /**Sets  the create contour axis option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateContourAxis
                (
                    bool createContourAxis /** createcontouraxis */ 
                );
                /**Returns  the contour axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContourAxisLayer
                (
                );
                /**Sets  the contour axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourAxisLayer
                (
                    int contourAxisLayer /** contouraxislayer */ 
                );
                /**Returns  the contour axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ContourAxisColorPicker
                (
                );
                /**Sets  the contour axis color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourAxisColorPicker
                (
                    NXOpen::NXColor * contourAxisColorPicker /** contouraxiscolorpicker */ 
                );
                /**Returns  the create contour centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateContourCentroid
                (
                );
                /**Sets  the create contour centroid option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateContourCentroid
                (
                    bool createContourCentroid /** createcontourcentroid */ 
                );
                /**Returns  the contour centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContourCentroidLayer
                (
                );
                /**Sets  the contour centroid layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourCentroidLayer
                (
                    int contourCentroidLayer /** contourcentroidlayer */ 
                );
                /**Returns  the contour centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ContourCentroidColorPicker
                (
                );
                /**Sets  the contour centroid color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourCentroidColorPicker
                (
                    NXOpen::NXColor * contourCentroidColorPicker /** contourcentroidcolorpicker */ 
                );
                /**Returns  the create contour rear option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateContourRear
                (
                );
                /**Sets  the create contour rear option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateContourRear
                (
                    bool createContourRear /** createcontourrear */ 
                );
                /**Returns  the contour rear layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ContourRearLayer
                (
                );
                /**Sets  the contour rear layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourRearLayer
                (
                    int contourRearLayer /** contourrearlayer */ 
                );
                /**Returns  the contour rear color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ContourRearColorPicker
                (
                );
                /**Sets  the contour rear color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetContourRearColorPicker
                (
                    NXOpen::NXColor * contourRearColorPicker /** contourrearcolorpicker */ 
                );
                /**Returns  the create clearance 3D option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateClearance3D
                (
                );
                /**Sets  the create clearance 3D option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateClearance3D
                (
                    bool createClearance3D /** createclearance3d */ 
                );
                /**Returns  the clearance 3D layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int Clearance3DLayer
                (
                );
                /**Sets  the clearance 3D layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearance3DLayer
                (
                    int clearance3DLayer /** clearance3dlayer */ 
                );
                /**Returns  the clearance 3D color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * Clearance3DColorPicker
                (
                );
                /**Sets  the clearance 3D color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearance3DColorPicker
                (
                    NXOpen::NXColor * clearance3DColorPicker /** clearance3dcolorpicker */ 
                );
                /**Returns  the create clearance 2D option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateClearance2D
                (
                );
                /**Sets  the create clearance 2D option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateClearance2D
                (
                    bool createClearance2D /** createclearance2d */ 
                );
                /**Returns  the clearance 2D layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int Clearance2DLayer
                (
                );
                /**Sets  the clearance 2D layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearance2DLayer
                (
                    int clearance2DLayer /** clearance2dlayer */ 
                );
                /**Returns  the clearance 2D color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * Clearance2DColorPicker
                (
                );
                /**Sets  the clearance 2D color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearance2DColorPicker
                (
                    NXOpen::NXColor * clearance2DColorPicker /** clearance2dcolorpicker */ 
                );
                /**Returns  the create clearance rear option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateClearanceRear
                (
                );
                /**Sets  the create clearance rear option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateClearanceRear
                (
                    bool createClearanceRear /** createclearancerear */ 
                );
                /**Returns  the clearance rear axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int ClearanceRearAxisLayer
                (
                );
                /**Sets  the clearance rear axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearanceRearAxisLayer
                (
                    int clearanceRearAxisLayer /** clearancerearaxislayer */ 
                );
                /**Returns  the clearance rear color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * ClearanceRearColorPicker
                (
                );
                /**Sets  the clearance rear color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetClearanceRearColorPicker
                (
                    NXOpen::NXColor * clearanceRearColorPicker /** clearancerearcolorpicker */ 
                );
                /**Returns  the create vpoint option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateVPoint
                (
                );
                /**Sets  the create vpoint option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateVPoint
                (
                    bool createVPoint /** createvpoint */ 
                );
                /**Returns  the v point layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int VPointLayer
                (
                );
                /**Sets  the v point layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVPointLayer
                (
                    int vPointLayer /** vpointlayer */ 
                );
                /**Returns  the v point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * VPointColorPicker
                (
                );
                /**Sets  the v point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetVPointColorPicker
                (
                    NXOpen::NXColor * vPointColorPicker /** vpointcolorpicker */ 
                );
                /**Returns  the create P point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreatePPoint
                (
                );
                /**Sets  the create P point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreatePPoint
                (
                    bool createPPoint /** createppoint */ 
                );
                /**Returns  the P point layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int PPointLayer
                (
                );
                /**Sets  the P point layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPPointLayer
                (
                    int pPointLayer /** ppointlayer */ 
                );
                /**Returns  the P point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * PPointColorPicker
                (
                );
                /**Sets  the P point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPPointColorPicker
                (
                    NXOpen::NXColor * pPointColorPicker /** ppointcolorpicker */ 
                );
                /**Returns  the create E point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateEPoint
                (
                );
                /**Sets  the create E point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCreateEPoint
                (
                    bool createEPoint /** createepoint */ 
                );
                /**Returns  the E point axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: int EPointAxisLayer
                (
                );
                /**Sets  the E point axis layer 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEPointAxisLayer
                (
                    int ePointAxisLayer /** epointaxislayer */ 
                );
                /**Returns  the E point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * EPointColorPicker
                (
                );
                /**Sets  the E point color picker 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEPointColorPicker
                (
                    NXOpen::NXColor * ePointColorPicker /** epointcolorpicker */ 
                );
                /**Returns  the vehicle class B SgRP length coordinate(L31) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BL31Value
                (
                );
                /**Sets  the vehicle class B SgRP length coordinate(L31) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBL31Value
                (
                    double bL31Value /** bl31value */ 
                );
                /**Returns  the vehicle class B SgRP width coordinate(W20) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BW20Value
                (
                );
                /**Sets  the vehicle class B SgRP width coordinate(W20) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBW20Value
                (
                    double bW20Value /** bw20value */ 
                );
                /**Returns  the vehicle class B SgRP height coordinate(H70) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BH70Value
                (
                );
                /**Sets  the vehicle class B SgRP height coordinate(H70) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBH70Value
                (
                    double bH70Value /** bh70value */ 
                );
                /**Returns  the bsgrp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * BSgrpPoint
                (
                );
                /**Sets  the bsgrp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBSgrpPoint
                (
                    NXOpen::Point * bsgrpPoint /** bsgrppoint */ 
                );
                /**Returns  the vehicle class B AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BL8Value
                (
                );
                /**Sets  the vehicle class B AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBL8Value
                (
                    double bL8Value /** bl8value */ 
                );
                /**Returns  the vehicle class B AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BH8Value
                (
                );
                /**Sets  the vehicle class B AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBH8Value
                (
                    double bH8Value /** bh8value */ 
                );
                /**Returns  the sahp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * SAhpPoint
                (
                );
                /**Sets  the sahp point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetSAhpPoint
                (
                    NXOpen::Point * sAhpPoint /** sahppoint */ 
                );
                /**Returns  the vehicle class B back angle 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double BBackAngle
                (
                );
                /**Sets  the vehicle class B back angle 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBBackAngle
                (
                    double bBackAngle /** bbackangle */ 
                );
                /**Returns  the vehicle class B seat track travel type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatTypeOPTL23158mm   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatTypeOPTL23158mm @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType BSeatTrackTravel
                (
                );
                /**Sets  the vehicle class B seat track travel type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatTypeOPTL23158mm   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatTypeOPTL23158mm @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBSeatTrackTravel
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumBSeatType bSeatTrackTravel /** bseattracktravel */ 
                );
                /**Returns  the vehicle class B male ratio type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatioR5050   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatioR5050 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio BMaleRatio
                (
                );
                /**Sets  the vehicle class B male ratio type when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatioR5050   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatioR5050 @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBMaleRatio
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumMaleRatio bMaleRatio /** bmaleratio */ 
                );
                /** Shows an illustration picture for vehicle class B parameters 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void VehicleBImage
                (
                );
                /**Returns  the lean option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool LeanToggle
                (
                );
                /**Sets  the lean option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeanToggle
                (
                    bool leanToggle /** leantoggle */ 
                );
                /**Returns  the Y coordinage of steering wheel center(W7) value
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double LeanW7
                (
                );
                /**Sets  the Y coordinage of steering wheel center(W7) value
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeanW7
                (
                    double leanW7 /** leanw7 */ 
                );
                /**Returns  the shoulder room(W3) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double LeanW3
                (
                );
                /**Sets  the shoulder room(W3) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeanW3
                (
                    double leanW3 /** leanw3 */ 
                );
                /**Returns  the head move option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HeadMoveToggle
                (
                );
                /**Sets  the head move option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadMoveToggle
                (
                    bool headMoveToggle /** headmovetoggle */ 
                );
                /**Returns  the head move direction when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionTypeLeft   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionTypeLeft @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType MoveDirection
                (
                );
                /**Sets  the head move direction when the @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType@endlink 
                             is @link  NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionTypeLeft   NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionTypeLeft @endlink .
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMoveDirection
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumDirectionType moveDirection /** movedirection */ 
                );
                /**Returns  the head move angle 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double MoveAngle
                (
                );
                /**Sets  the head move angle 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMoveAngle
                (
                    double moveAngle /** moveangle */ 
                );
                /**Returns  the head move distance 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double MoveDistance
                (
                );
                /**Sets  the head move distance 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetMoveDistance
                (
                    double moveDistance /** movedistance */ 
                );
                /**Returns  the UMTRI 2005 standard parameter specify point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool USpecifyPoint
                (
                );
                /**Sets  the UMTRI 2005 standard parameter specify point option 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUSpecifyPoint
                (
                    bool uSpecifyPoint /** uspecifypoint */ 
                );
                /**Returns  the UMTRI 2005 standard AHP point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * UAhpPoint
                (
                );
                /**Sets  the UMTRI 2005 standard AHP point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUAhpPoint
                (
                    NXOpen::Point * uAhpPoint /** uahppoint */ 
                );
                /**Returns  the UMTRI 2005 standard SWC point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * USwcPoint
                (
                );
                /**Sets  the UMTRI 2005 standard SWC point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUSwcPoint
                (
                    NXOpen::Point * uSwcPoint /** uswcpoint */ 
                );
                /**Returns  the UMTRI 2005 standard AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UL8Value
                (
                );
                /**Sets  the UMTRI 2005 standard AHP length coordinate(L8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUL8Value
                (
                    double uL8Value /** ul8value */ 
                );
                /**Returns  the UMTRI 2005 standard AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UH8Value
                (
                );
                /**Sets  the UMTRI 2005 standard AHP height coordinate(H8) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUH8Value
                (
                    double uH8Value /** uh8value */ 
                );
                /**Returns  the UMTRI 2005 standard AHP to SWC length coordinate(L11) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UL11Value
                (
                );
                /**Sets  the UMTRI 2005 standard AHP to SWC length coordinate(L11) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUL11Value
                (
                    double uL11Value /** ul11value */ 
                );
                /**Returns  the UMTRI 2005 standard AHP to SWC height coordinate(H17) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UH17Value
                (
                );
                /**Sets  the UMTRI 2005 standard AHP to SWC height coordinate(H17) value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUH17Value
                (
                    double uH17Value /** uh17value */ 
                );
                /**Returns  the UMTRI 2005 standard SWC width coordinate(W20)   value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UW20Value
                (
                );
                /**Sets  the UMTRI 2005 standard SWC width coordinate(W20)   value 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUW20Value
                (
                    double uW20Value /** uw20value */ 
                );
                /**Returns  the  UMTRI 2005 standard male ratio 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumRatioType UMaleRatio
                (
                );
                /**Sets  the  UMTRI 2005 standard male ratio 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUMaleRatio
                (
                    NXOpen::Features::VehicleDesign::EyellipseBuilder::EnumRatioType uMaleRatio /** umaleratio */ 
                );
                /** Show image of UMTRI 2005 standard parameters 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void UIllustrationButton
                (
                );
                /** Revert values to initial base data 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void URevertButton
                (
                );
                /**Returns  the user defined eyellipse fore-aft dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UForceArt
                (
                );
                /**Sets  the user defined eyellipse fore-aft dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUForceArt
                (
                    double uForceArt /** uforceart */ 
                );
                /**Returns  the user defined eyellipse cross-cab dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UCrossCab
                (
                );
                /**Sets  the user defined eyellipse cross-cab dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUCrossCab
                (
                    double uCrossCab /** ucrosscab */ 
                );
                /**Returns  the user defined eyellipse vertical dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double UVertical
                (
                );
                /**Sets  the user defined eyellipse vertical dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUVertical
                (
                    double uVertical /** uvertical */ 
                );
                /**Returns  the user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * UCentroidPoint
                (
                );
                /**Sets  the user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUCentroidPoint
                (
                    NXOpen::Point * uCentroidPoint /** ucentroidpoint */ 
                );
                /**Returns  the x coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double XUCentroid
                (
                );
                /**Sets  the x coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetXUCentroid
                (
                    double xUCentroid /** xucentroid */ 
                );
                /**Returns  the y coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double YUCentroid
                (
                );
                /**Sets  the y coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetYUCentroid
                (
                    double yUCentroid /** yucentroid */ 
                );
                /**Returns  the z coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double ZUCentroid
                (
                );
                /**Sets  the z coordinate of user defined eyellipse centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetZUCentroid
                (
                    double zUCentroid /** zucentroid */ 
                );
                /**Returns  the x axis of user defined eyellipse 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * XUAxis
                (
                );
                /**Sets  the x axis of user defined eyellipse 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetXUAxis
                (
                    NXOpen::Direction * xUAxis /** xuaxis */ 
                );
                /**Returns  the y axis of user defined eyellipse  
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * YUAxis
                (
                );
                /**Sets  the y axis of user defined eyellipse  
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetYUAxis
                (
                    NXOpen::Direction * yUAxis /** yuaxis */ 
                );
                /**Returns  the user defined head contour fore-aft dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double HForeAft
                (
                );
                /**Sets  the user defined head contour fore-aft dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHForeAft
                (
                    double hForeAft /** hforeaft */ 
                );
                /**Returns  the user defined head contour cross-cab dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double HCrossAft
                (
                );
                /**Sets  the user defined head contour cross-cab dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHCrossAft
                (
                    double hCrossAft /** hcrossaft */ 
                );
                /**Returns  the user defined head contour vertical dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double HVertical
                (
                );
                /**Sets  the user defined head contour vertical dimension 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHVertical
                (
                    double hVertical /** hvertical */ 
                );
                /**Returns  the user defined head contour centroid 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * HHeadContourCentroid
                (
                );
                /**Sets  the user defined head contour centroid 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHHeadContourCentroid
                (
                    NXOpen::Point * hHeadContourCentroid /** hheadcontourcentroid */ 
                );
                /**Returns  the x coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double XHCentroid
                (
                );
                /**Sets  the x coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetXHCentroid
                (
                    double xHCentroid /** xhcentroid */ 
                );
                /**Returns  the y coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double YHCentroid
                (
                );
                /**Sets  the y coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetYHCentroid
                (
                    double yHCentroid /** yhcentroid */ 
                );
                /**Returns  the z coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double ZHCentroid
                (
                );
                /**Sets  the z coordinate of user defined head contour centroid point 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetZHCentroid
                (
                    double zHCentroid /** zhcentroid */ 
                );
                /**Returns  the x axis of user defined head contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * XHHeadAxis
                (
                );
                /**Sets  the x axis of user defined head contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetXHHeadAxis
                (
                    NXOpen::Direction * xHHeadAxis /** xhheadaxis */ 
                );
                /**Returns  the y axis of user defined head contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * YHHeadAxis
                (
                );
                /**Sets  the y axis of user defined head contour 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetYHHeadAxis
                (
                    NXOpen::Direction * yHHeadAxis /** yhheadaxis */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
