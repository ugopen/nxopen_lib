#ifndef NXOpen_MOTION_TIREBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_TIREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_TireBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class TireBuilder;
    }
    class CoordinateSystem;
    class Direction;
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectLink;
    }
    namespace Motion
    {
        class SelectRoad;
    }
    namespace Motion
    {
        class SelectTirePropertyBasic;
    }
    namespace Motion
    {
        class SelectTirePropertyCd;
    }
    namespace Motion
    {
        class SelectTirePropertyFt;
    }
    namespace Motion
    {
        class SelectTirePropertyMFTyreAndMFSwift;
    }
    namespace Motion
    {
        class SelectTirePropertyMotorcycle;
    }
    namespace Motion
    {
        class SelectTirePropertyNonInertial;
    }
    class Point;
    namespace Motion
    {
        class _TireBuilderBuilder;
        class TireBuilderImpl;
        /** Represents a @link Motion::Tire Motion::Tire@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Motion::TireCollection::CreateTireBuilder  NXOpen::Motion::TireCollection::CreateTireBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DisplayScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        TireType </td> <td> 
         
        Basic </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  TireBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** the Tire type.
                        Each tire type has a specific tire property associated. A tire is invalid without a tire property associated.
                        */
            public: enum Type
            {
                TypeBasic/** for Basic Tire Model                                 */,
                TypeMFTyreAndMFSwift/** for MF-Tyre and MF-Swift Model                       */,
                TypeCDTire/** for CDTire Tire Model                                */,
                TypeFTire/** for FTire Tire Model                                 */,
                TypeMotorcycle/** for Motorcycle Tire Model                            */,
                TypeNonInertial/** for Non-Inertial Tire Model                          */
            };

            private: TireBuilderImpl * m_tirebuilder_impl;
            private: friend class  _TireBuilderBuilder;
            protected: TireBuilder();
            public: ~TireBuilder();
            /**Returns  the tire type.
                        Defines the type of the tire used, different tire types use different parameters 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TireBuilder::Type TireType
            (
            );
            /**Sets  the tire type.
                        Defines the type of the tire used, different tire types use different parameters 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTireType
            (
                NXOpen::Motion::TireBuilder::Type typeSelection /** typeselection */ 
            );
            /**Returns  the motion body.
                        This is a motion body defining the Tire body. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * BodyLink
            (
            );
            /**Returns  the body point.
                        This represents the center of the wheel. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * BodyPoint
            (
            );
            /**Sets  the body point.
                        This represents the center of the wheel. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBodyPoint
            (
                NXOpen::Point * bodyPoint /** bodypoint */ 
            );
            /**Returns  the body vector.
                        This defines the spinning direction. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Direction * BodyVector
            (
            );
            /**Sets  the body vector.
                        This defines the spinning direction. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBodyVector
            (
                NXOpen::Direction * bodyVector /** bodyvector */ 
            );
            /**Returns  the chassis motion body.
                        This represents the motion body where the tire will be attached.
                        For external tires it is used for static data analysis.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * ChassisLink
            (
            );
            /**Returns  the chassis point.
                        This represents the attachment point of the tire body on the motion chassis.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * ChassisPoint
            (
            );
            /**Sets  the chassis point.
                        This represents the attachment point of the tire body on the motion chassis.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetChassisPoint
            (
                NXOpen::Point * chassisPoint /** chassispoint */ 
            );
            /**Returns  the chassis coordinate system.
                        This represents a coordinate systeme attached to the chassis for which
                        z axis defines the up direction and the 
                        x axis defines the forward direction of the chassis.
                        For external tires it is optional and it is used for the purposes of including additional stabilizing stiffness 
                        to the vehicle motion body during static analysis, provided that the Static Hold variable is TRUE.
                        Ideally all tire elements should refer to the same Chassis axis system. 
                        If this optional parameter is not defined, the stabilizing stiffness will be applied to the selected axis system on the carrier motion body.
                        This approach may introduce unwanted transients into a STATIC/DYNAMIC simulation.
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * ChassisCsys
            (
            );
            /**Sets  the chassis coordinate system.
                        This represents a coordinate systeme attached to the chassis for which
                        z axis defines the up direction and the 
                        x axis defines the forward direction of the chassis.
                        For external tires it is optional and it is used for the purposes of including additional stabilizing stiffness 
                        to the vehicle motion body during static analysis, provided that the Static Hold variable is TRUE.
                        Ideally all tire elements should refer to the same Chassis axis system. 
                        If this optional parameter is not defined, the stabilizing stiffness will be applied to the selected axis system on the carrier motion body.
                        This approach may introduce unwanted transients into a STATIC/DYNAMIC simulation.
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetChassisCsys
            (
                NXOpen::CoordinateSystem * chassisCsys /** chassiscsys */ 
            );
            /**Returns  the carrier motion body.
                        This represents the motion body where the tire will be attached.
                        It is only used by external tires.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * CarrierLink
            (
            );
            /**Returns  the carrier point.
                        This represents the attachment point of the tire motion body on the chassis motion body.
                        It is only used by external tires.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * CarrierPoint
            (
            );
            /**Sets  the carrier point.
                        This represents the attachment point of the tire motion body on the chassis motion body.
                        It is only used by external tires.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCarrierPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the carrier coordinate system.
                        This represents a coordinate systeme attached to the chassis for which: 
                        z axis defines the up direction and the
                        x axis defines the forward direction of the chassis.
                        It is only used by external tires.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * CarrierCsys
            (
            );
            /**Sets  the carrier coordinate system.
                        This represents a coordinate systeme attached to the chassis for which: 
                        z axis defines the up direction and the
                        x axis defines the forward direction of the chassis.
                        It is only used by external tires.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCarrierCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the road.
                        This parameter defines the road height Z and slope of the road surface 
                        depending on the X and Y location of the tire. If no road is selected,
                        the road profile will default to the global XY plane.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectRoad * Road
            (
            );
            /**Returns  the basic tire property.
                        This is an object used to hold parameters for Basic tire type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyBasic * PropertyBasic
            (
            );
            /**Returns  the motorcycle tire property.
                        This is an object used to hold parameters for Motorcycle tire type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyMotorcycle * PropertyMotorcycle
            (
            );
            /**Returns  the non-inertial tire property.
                        This is an object used to hold parameters for Non-Inertial tire type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyNonInertial * PropertyNonInertial
            (
            );
            /**Returns  the FT tire property.
                        This is an object used to hold parameters for FTire type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyFt * PropertyFTire
            (
            );
            /**Returns  the CD tire property.
                        This is an object used to hold parameters for CDTire type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyCd * PropertyCd
            (
            );
            /**Returns   @brief the MF-Tyre property. 

             
                        
                            This is an object used to hold parameters for MF-Tyre type.
                        
                    
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectTirePropertyMFTyreAndMFSwift * PropertyMFTyreAndMFSwift
            (
            );
            /**Returns  the unique name assigned to the tire component 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the unique name assigned to the tire component 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the unique name assigned to the tire component 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the override state of the body link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState BodyLinkOvrCtrl
            (
            );
            /**Sets  the override state of the body link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBodyLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the body point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState BodyPointOvrCtrl
            (
            );
            /**Sets  the override state of the body point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBodyPointOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the body vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState BodyVectorOvrCtrl
            (
            );
            /**Sets  the override state of the body vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBodyVectorOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Chassis Link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState ChassisLinkOvrCtrl
            (
            );
            /**Sets  the override state of the Chassis Link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetChassisLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Chassis Point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState ChassisPointOvrCtrl
            (
            );
            /**Sets  the override state of the Chassis Point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetChassisPointOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Chassis Csys 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState ChassisCsysOvrCtrl
            (
            );
            /**Sets  the override state of the Chassis Csys 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetChassisCsysOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Carrier Link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CarrierLinkOvrCtrl
            (
            );
            /**Sets  the override state of the Carrier Link 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCarrierLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Carrier Point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CarrierPointOvrCtrl
            (
            );
            /**Sets  the override state of the Carrier Point 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCarrierPointOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Carrier Csys 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CarrierCsysOvrCtrl
            (
            );
            /**Sets  the override state of the Carrier Csys 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCarrierCsysOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the Road 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState RoadOvrCtrl
            (
            );
            /**Sets  the override state of the Road 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRoadOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the basic tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyBasicOvrCtrl
            (
            );
            /**Sets  the override state of the basic tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyBasicOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the motorcycle tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyMotorcycleOvrCtrl
            (
            );
            /**Sets  the override state of the motorcycle tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyMotorcycleOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the non-inertial tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyNonInertialOvrCtrl
            (
            );
            /**Sets  the override state of the non-inertial tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyNonInertialOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the FT tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyFTireOvrCtrl
            (
            );
            /**Sets  the override state of the FT tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyFTireOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the CD tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyCdOvrCtrl
            (
            );
            /**Sets  the override state of the CD tire property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyCdOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the override state of the MF-Tyre property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState PropertyMFTyreAndMFSwiftOvrCtrl
            (
            );
            /**Sets  the override state of the MF-Tyre property 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPropertyMFTyreAndMFSwiftOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
