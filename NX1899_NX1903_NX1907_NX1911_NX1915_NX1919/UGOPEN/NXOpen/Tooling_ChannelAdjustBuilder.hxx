#ifndef NXOpen_TOOLING_CHANNELADJUSTBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CHANNELADJUSTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ChannelAdjustBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ChannelAdjustBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    class Direction;
    class Expression;
    class ScCollector;
    class SelectBodyList;
    namespace Tooling
    {
        class _ChannelAdjustBuilderBuilder;
        class ChannelAdjustBuilderImpl;
        /**The builder class for Channel Adjust which assists you
               to adjust the postion and the length of the channel. <br> To create a new instance of this class, use @link NXOpen::Tooling::ChannelAdjustCollection::CreateChannelAdjustBuilder  NXOpen::Tooling::ChannelAdjustCollection::CreateChannelAdjustBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CopyOriginal </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Distance.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        RepositionMethod </td> <td> 
         
        Along </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ChannelAdjustBuilder : public NXOpen::Builder
        {
            /** the adjust method. */
            public: enum AdjustType
            {
                AdjustTypeDistance/** Reposition the target channels. */,
                AdjustTypeBaffleLength/** Change the length of the baffles. */,
                AdjustTypeBaffleComponentLength/** Change the baffle length of the baffle component. */,
                AdjustTypeAdjustDiameter/** adjust diameter */ 
            };

            /** the copy method. */
            public: enum MoveType
            {
                MoveTypeMoveOriginal/** Move original channels. */,
                MoveTypeCopyOriginal/** Copy original channels. */
            };

            /** the vector adjust method. */
            public: enum VectorMethod
            {
                VectorMethodAlong/** Reposition the target channels along the vector specified. */,
                VectorMethodPerpendicular/** Reposition the target channels Perpendicular the vector specified. */
            };

            private: ChannelAdjustBuilderImpl * m_channeladjustbuilder_impl;
            private: friend class  _ChannelAdjustBuilderBuilder;
            protected: ChannelAdjustBuilder();
            public: ~ChannelAdjustBuilder();
            /**Returns  the method for adjusting the cooling channels. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ChannelAdjustBuilder::AdjustType AdjustMethod
            (
            );
            /**Sets  the method for adjusting the cooling channels. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAdjustMethod
            (
                NXOpen::Tooling::ChannelAdjustBuilder::AdjustType adjustMethod /** adjustmethod */ 
            );
            /**Returns  the cooling channel to be adjusted. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * TargetChannel
            (
            );
            /**Returns  the baffle component to be adjusted. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * BaffleComponent
            (
            );
            /**Returns  the reference faces for calculating the distance to the cooling channels. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ReferenceFace
            (
            );
            /**Returns  the boundary body. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * BoundaryBody
            (
            );
            /**Returns  the method for moving the cooling channels. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ChannelAdjustBuilder::VectorMethod RepositionMethod
            (
            );
            /**Sets  the method for moving the cooling channels. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRepositionMethod
            (
                NXOpen::Tooling::ChannelAdjustBuilder::VectorMethod repositionMethod /** repositionmethod */ 
            );
            /**Returns  the vector specified for the adjust direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * AdjustVector
            (
            );
            /**Sets  the vector specified for the adjust direction. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAdjustVector
            (
                NXOpen::Direction * adjustVector /** adjustvector */ 
            );
            /**Returns  the flag to indicate whether to copy the original channel or not 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool CopyOriginal
            (
            );
            /**Sets  the flag to indicate whether to copy the original channel or not 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetCopyOriginal
            (
                bool copyOriginal /** copyoriginal */ 
            );
            /**Returns  the distance between the channels and faces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /** Sets the manipulator origin. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetManipulatorOriginValue
            (
                const NXOpen::Point3d & moveOrigin /** moveorigin */ 
            );
            /** Sets the manipulator origin modified or not. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetModifyManipulatorOrigin
            (
                bool modified /** modified */ 
            );
            /**Returns  the channel diameter 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Diameter
            (
            );
            /**Returns  the diameter list value. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DiameterListValue
            (
            );
            /**Sets  the diameter list value. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDiameterListValue
            (
                const NXString & diameter /** diameter */ 
            );
            /**Sets  the diameter list value. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetDiameterListValue
            (
                const char * diameter /** diameter */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
