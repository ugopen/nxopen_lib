#ifndef NXOpen_CAE_AEROSTRUCTURES_MARGINCALCULATION_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MARGINCALCULATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_MarginCalculation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_CalculationLogLine.hxx>
#include <NXOpen/CAE_AeroStructures_ExtractionSourceSet.hxx>
#include <NXOpen/CAE_AeroStructures_Laminate.hxx>
#include <NXOpen/CAE_AeroStructures_LaminateQueryManager.hxx>
#include <NXOpen/CAE_AeroStructures_LoadCaseSet.hxx>
#include <NXOpen/CAE_AeroStructures_MarginCalculationBuilder.hxx>
#include <NXOpen/CAE_AeroStructures_MethodDescriptor.hxx>
#include <NXOpen/CAE_AeroStructures_ParameterDescriptor.hxx>
#include <NXOpen/CAE_AeroStructures_TableParameter.hxx>
#include <NXOpen/GeneralScalarTable.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginCalculation;
        }
    }
    namespace Annotations
    {
        class NoteBase;
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class CalculationLogLine;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class ExtractionSourceSet;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class Laminate;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LaminateQueryManager;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadCaseSet;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MethodDescriptor;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class PropTable;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class TableParameter;
        }
    }
    class Expression;
    class GeneralScalarTable;
    class NXObject;
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _MarginCalculationBuilder;
            class MarginCalculationImpl;
            /**  @brief  This is the MarginCalculation  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MarginCalculation : public NXOpen::NXObject
            {
                private: MarginCalculationImpl * m_margincalculation_impl;
                private: friend class  _MarginCalculationBuilder;
                protected: MarginCalculation();
                public: ~MarginCalculation();
                /**Returns  the calculation status 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::MarginCalculationBuilder::CalculationStatus Status
                (
                );
                /**Returns  the description 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString Description
                (
                );
                /** Return the list of log entries 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetLog
                (
                    std::vector<NXOpen::CAE::AeroStructures::CalculationLogLine *> & logsEntries /** logsentries */ 
                );
                /**Returns  the method descriptor 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::MethodDescriptor * MethodDescriptor
                (
                );
                /** Returns a list of all the current input names 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetInputNames
                (
                    std::vector<NXString> & inputNames /** inputnames */ 
                );
                /** Returns a list of all the current output names 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetOutputNames
                (
                    std::vector<NXString> & outputNames /** outputnames */ 
                );
                /** Returns the parameter type for a current input or output 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::ParameterDescriptor::ParameterType GetParameterType
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Returns the parameter type for a current input or output 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::ParameterDescriptor::ParameterType GetParameterType
                (
                    const char * parameterName /** parametername */ 
                );
                /** Returns the user comment for an input 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetInputComment
                (
                    const NXString & inputName /** inputname */ 
                );
                /** Returns the user comment for an input 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetInputComment
                (
                    const char * inputName /** inputname */ 
                );
                /** Get the value of an integer input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetInputIntegerValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of an integer input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetInputIntegerValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetInputScalarValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetInputScalarValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar input parameter 
                              * Returns null if the parameter is unitless
                              
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetInputScalarUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar input parameter 
                              * Returns null if the parameter is unitless
                              
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetInputScalarUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the aggregated or non-aggregated load values of an input parameter for this row.
                                If the load values were aggregated, the output will be an array with only one value.
                                If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: std::vector<double> GetInputLoadValues
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the aggregated or non-aggregated load values of an input parameter for this row.
                                If the load values were aggregated, the output will be an array with only one value.
                                If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                std::vector<double> GetInputLoadValues
                (
                    const char * parameterName /** parametername */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get the aggregated or non-aggregated all load values of an input parameter
                                The output will be a general scalar table, one load by row.
                                If the load values were aggregated, the row will contain one column.
                                If the values were not aggregated, the row will contain one value per element or node per column. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::GeneralScalarTable * GetInputLoadValuesAll
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the aggregated or non-aggregated all load values of an input parameter
                                The output will be a general scalar table, one load by row.
                                If the load values were aggregated, the row will contain one column.
                                If the values were not aggregated, the row will contain one value per element or node per column. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::GeneralScalarTable * GetInputLoadValuesAll
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the unit type of a load input parameter.
                              * Returns null if the parameter is unitless
                              
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetInputLoadUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit type of a load input parameter.
                              * Returns null if the parameter is unitless
                              
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetInputLoadUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetInputStringValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetInputStringValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetInputBooleanValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                bool GetInputBooleanValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a table input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::TableParameter * GetInputTableValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a table input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::TableParameter * GetInputTableValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a laminate input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::Laminate * GetInputLaminateValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a laminate input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::Laminate * GetInputLaminateValue
                (
                    const char * parameterName /** parametername */ 
                );
                /**Returns  the Property Table 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::PropTable * PropertyTable
                (
                );
                /**Returns  the LoadCaseSet used by the calculation
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::LoadCaseSet * LoadCaseSet
                (
                );
                /**Sets  the LoadCaseSet used by the calculation
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetLoadCaseSet
                (
                    NXOpen::CAE::AeroStructures::LoadCaseSet * loadCaseSet /** loadcaseset */ 
                );
                /**Returns  the Annotation 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Annotations::NoteBase * Annotation
                (
                );
                /** Returns a boolean value that indicates whether the calculation has computed results 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetHasResult
                (
                );
                /** Returns a list of all the input names used in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetResultInputNames
                (
                    std::vector<NXString> & inputNames /** inputnames */ 
                );
                /** Returns the user comment about an input in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetResultInputComment
                (
                    const NXString & inputName /** inputname */ 
                );
                /** Returns the user comment about an input in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetResultInputComment
                (
                    const char * inputName /** inputname */ 
                );
                /** Returns the parameter type for an input or output in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::ParameterDescriptor::ParameterType GetResultParameterType
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Returns the parameter type for an input or output in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::ParameterDescriptor::ParameterType GetResultParameterType
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of an integer input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetResultInputIntegerValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of an integer input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetResultInputIntegerValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetResultInputScalarValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetResultInputScalarValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetResultInputScalarUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetResultInputScalarUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the aggregated or non-aggregated load values of an input parameter for this row.
                                If the load values were aggregated, the output will be an array with only one value.
                                If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: std::vector<double> GetResultInputLoadValues
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the aggregated or non-aggregated load values of an input parameter for this row.
                                If the load values were aggregated, the output will be an array with only one value.
                                If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                std::vector<double> GetResultInputLoadValues
                (
                    const char * parameterName /** parametername */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get the unit type of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetResultInputLoadUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetResultInputLoadUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetResultInputStringValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetResultInputStringValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetResultInputBooleanValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                bool GetResultInputBooleanValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Returns a list of all the output names used in the last computed result
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetResultOutputNames
                (
                    std::vector<NXString> & outputNames /** outputnames */ 
                );
                /** Returns the unit type for an output in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetResultOutputUnit
                (
                    const NXString & outputName /** outputname */ 
                );
                /** Returns the unit type for an output in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetResultOutputUnit
                (
                    const char * outputName /** outputname */ 
                );
                /** Get the value of an integer output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetResultOutputIntegerValue
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & failureModeName /** failuremodename */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the value of an integer output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetResultOutputIntegerValue
                (
                    const char * parameterName /** parametername */ ,
                    const char * failureModeName /** failuremodename */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get the value of a scalar output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetResultOutputScalarValue
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & failureModeName /** failuremodename */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the value of a scalar output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetResultOutputScalarValue
                (
                    const char * parameterName /** parametername */ ,
                    const char * failureModeName /** failuremodename */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get the unit type of a scalar output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetResultOutputScalarUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit type of a scalar output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetResultOutputScalarUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a string output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetResultOutputStringValue
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & failureModeName /** failuremodename */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the value of a string output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetResultOutputStringValue
                (
                    const char * parameterName /** parametername */ ,
                    const char * failureModeName /** failuremodename */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get the value of a boolean output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetResultOutputBooleanValue
                (
                    const NXString & parameterName /** parametername */ ,
                    const NXString & failureModeName /** failuremodename */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get the value of a boolean output parameter for the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                bool GetResultOutputBooleanValue
                (
                    const char * parameterName /** parametername */ ,
                    const char * failureModeName /** failuremodename */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Get an MS value in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetResultMsValue
                (
                    const NXString & failureModeName /** failuremodename */ ,
                    const NXString & loadCaseName /** loadcasename */ 
                );
                /** Get an MS value in the last computed result 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetResultMsValue
                (
                    const char * failureModeName /** failuremodename */ ,
                    const char * loadCaseName /** loadcasename */ 
                );
                /** Returns the loadCase names used in the last computed result
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetResultLoadCaseNames
                (
                    std::vector<NXString> & loadCaseNames /** loadcasenames */ 
                );
                /** Returns the failMode names from the last computed result
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void GetResultFailModeNames
                (
                    std::vector<NXString> & failModeIds /** failmodeids */ 
                );
                /** Returns the laminate query manager 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::LaminateQueryManager * GetLaminateQueryManager
                (
                );
                /** Get the value of a size input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetInputSizeValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a size input parameter 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetInputSizeValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Cause scalar expressions to be updated 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void UpdateScalarExpressions
                (
                );
                /** Get the value of a file input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetResultInputFileValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a file input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetResultInputFileValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a file output parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetResultOutputFileValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a file output parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetResultOutputFileValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of an expanded file input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetInputFileValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of an expanded file input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetInputFileValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the expression of a scalar field input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Expression * GetScalarFieldExpression
                (
                    const NXString & inputName /** inputname */ 
                );
                /** Get the expression of a scalar field input parameter 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Expression * GetScalarFieldExpression
                (
                    const char * inputName /** inputname */ 
                );
                /** Replace the expression of a scalar field input parameter
                                and removes old expression from the expression manager. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void ReplaceScalarFieldExpression
                (
                    const NXString & inputName /** inputname */ ,
                    NXOpen::Expression * exp /** exp */ 
                );
                /** Replace the expression of a scalar field input parameter
                                and removes old expression from the expression manager. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void ReplaceScalarFieldExpression
                (
                    const char * inputName /** inputname */ ,
                    NXOpen::Expression * exp /** exp */ 
                );
                /**Returns  the ExtractionSourceSet for the calculation 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::ExtractionSourceSet * ExtractionSourceSet
                (
                );
                /**Sets  the ExtractionSourceSet for the calculation 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetExtractionSourceSet
                (
                    NXOpen::CAE::AeroStructures::ExtractionSourceSet * extractionSourceSet /** extractionsourceset */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
