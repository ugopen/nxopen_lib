#ifndef NXOpen_ROUTING_CHOOSEPARTPLUGINDATA_HXX_INCLUDED
#define NXOpen_ROUTING_CHOOSEPARTPLUGINDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ChoosePartPluginData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Routing_CharacteristicList.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class ChoosePartPluginData;
    }
    namespace Routing
    {
        class CharacteristicList;
    }
    namespace Routing
    {
        class _ChoosePartPluginDataBuilder;
        class ChoosePartPluginDataImpl;
        /** Data object created by Routing for use by the Choose Part plugin called by the Place Part command.
                Routing sends this object to any registered Choose Part plugin.

                It is the Choose Part plugin's responsibility to prompt the user to choose a part and then
                fill in the information about the part by calling the methods on this object.

                For more information, see @link Routing::CustomManager Routing::CustomManager@endlink  and the
                @link Routing::CustomManager::SetChoosePartPlugin Routing::CustomManager::SetChoosePartPlugin@endlink 
             <br> An instance of this object will be sent to the Choose Part plugin used by Place Part.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  ChoosePartPluginData : public NXOpen::TaggedObject
        {
            private: ChoosePartPluginDataImpl * m_choosepartplugindata_impl;
            private: friend class  _ChoosePartPluginDataBuilder;
            protected: ChoosePartPluginData();
            public: ~ChoosePartPluginData();
            /** Sets the Part Name of the part choosen by the user.

                        The Part Name is the key Routing uses to find the .prt file in native mode on disk or
                        to find the proper item ID in Teamcenter. The Part Name must exactly match the .prt
                        file name or the Item ID in order for Routing to place the part.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPartName
            (
                const NXString & partName /** partname */ 
            );
            /** Sets the Part Name of the part choosen by the user.

                        The Part Name is the key Routing uses to find the .prt file in native mode on disk or
                        to find the proper item ID in Teamcenter. The Part Name must exactly match the .prt
                        file name or the Item ID in order for Routing to place the part.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetPartName
            (
                const char * partName /** partname */ 
            );
            /** Sets the Part Number of the part choosen by the user.

                        The Part Number is an attribute that Routing displays in the Reuse Library.
                        Part Number does not have to match the .prt file name or the Item ID in Teamcenter,
                        but it often does. Part Name and Part Number are often the same.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPartNumber
            (
                const NXString & partNumber /** partnumber */ 
            );
            /** Sets the Part Number of the part choosen by the user.

                        The Part Number is an attribute that Routing displays in the Reuse Library.
                        Part Number does not have to match the .prt file name or the Item ID in Teamcenter,
                        but it often does. Part Name and Part Number are often the same.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetPartNumber
            (
                const char * partNumber /** partnumber */ 
            );
            /** Sets the Member Name of the part choosen by the user.

                        The unique name of each member in a part family. Routing uses Part Name and Member Name
                        together to find the correct .prt file or Teamcenter Item ID in a part family.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetMemberName
            (
                const NXString & memberName /** membername */ 
            );
            /** Sets the Member Name of the part choosen by the user.

                        The unique name of each member in a part family. Routing uses Part Name and Member Name
                        together to find the correct .prt file or Teamcenter Item ID in a part family.
                    
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetMemberName
            (
                const char * memberName /** membername */ 
            );
            /** Sets the characteristics of the part choosen by the user. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetCharacteristics
            (
                NXOpen::Routing::CharacteristicList * characteristics /** characteristics */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
