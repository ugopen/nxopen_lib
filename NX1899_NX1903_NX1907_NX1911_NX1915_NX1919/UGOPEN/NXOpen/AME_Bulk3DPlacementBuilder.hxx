#ifndef NXOpen_AME_BULK3DPLACEMENTBUILDER_HXX_INCLUDED
#define NXOpen_AME_BULK3DPLACEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_Bulk3DPlacementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_SelectMountingInterfaceLocationBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class Bulk3DPlacementBuilder;
    }
    namespace AME
    {
        class SelectMountingInterfaceLocationBuilder;
    }
    class Builder;
    class NXObject;
    namespace AME
    {
        class _Bulk3DPlacementBuilderBuilder;
        class Bulk3DPlacementBuilderImpl;
        /** Represents a Bulk3DPlacementBuilder class Builder  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateBulk3dplacementBuilder  NXOpen::AME::AMEManager::CreateBulk3dplacementBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        PlacementAngle </td> <td> 
         
        ZeroDegree </td> </tr> 

        <tr><td> 
         
        PlacementType </td> <td> 
         
        LefttoRight </td> </tr> 

        </table>  

         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  Bulk3DPlacementBuilder : public NXOpen::Builder
        {
            /** Represents placement type */
            public: enum PlacementTypePolicy
            {
                PlacementTypePolicyLefttoRight/** leftto right */ ,
                PlacementTypePolicyRighttoLeft/** rightto left */ ,
                PlacementTypePolicyToptoBottom/** topto bottom */ ,
                PlacementTypePolicyBottomtoTop/** bottomto top */ 
            };

            /** Represents placement angle */
            public: enum PlacementAnglePolicy
            {
                PlacementAnglePolicyZeroDegree/** zero degree */ ,
                PlacementAnglePolicyNinetyDegree/** ninety degree */ ,
                PlacementAnglePolicyOneEightyDegree/** one eighty degree */ ,
                PlacementAnglePolicyTwoSeventyDegree/** two seventy degree */ 
            };

            private: Bulk3DPlacementBuilderImpl * m_bulk3dplacementbuilder_impl;
            private: friend class  _Bulk3DPlacementBuilderBuilder;
            protected: Bulk3DPlacementBuilder();
            public: ~Bulk3DPlacementBuilder();
            /**Returns  the co-ordinate of target location
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectMountingInterfaceLocationBuilder * SelectMountingInterfaceLocation
            (
            );
            /**Sets  the co-ordinate of target location
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectMountingInterfaceLocation
            (
                NXOpen::AME::SelectMountingInterfaceLocationBuilder * miLocationBuilder /** milocationbuilder */ 
            );
            /**Returns  the @link AME::Bulk3DPlacementBuilder::Distance AME::Bulk3DPlacementBuilder::Distance@endlink 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: double Distance
            (
            );
            /**Sets  the @link AME::Bulk3DPlacementBuilder::Distance AME::Bulk3DPlacementBuilder::Distance@endlink 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the @link AME::Bulk3DPlacementBuilder::PlacementType AME::Bulk3DPlacementBuilder::PlacementType@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::Bulk3DPlacementBuilder::PlacementTypePolicy PlacementType
            (
            );
            /**Sets  the @link AME::Bulk3DPlacementBuilder::PlacementType AME::Bulk3DPlacementBuilder::PlacementType@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPlacementType
            (
                NXOpen::AME::Bulk3DPlacementBuilder::PlacementTypePolicy type /** type */ 
            );
            /**Returns  the @link AME::Bulk3DPlacementBuilder::PlacementAngle AME::Bulk3DPlacementBuilder::PlacementAngle@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::Bulk3DPlacementBuilder::PlacementAnglePolicy PlacementAngle
            (
            );
            /**Sets  the @link AME::Bulk3DPlacementBuilder::PlacementAngle AME::Bulk3DPlacementBuilder::PlacementAngle@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPlacementAngle
            (
                NXOpen::AME::Bulk3DPlacementBuilder::PlacementAnglePolicy placementAngle /** placementangle */ 
            );
            /** Get the dragged engobjects 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void GetEngobjectsToBePlaced
            (
                std::vector<NXOpen::NXObject *> & eos /** eos */ 
            );
            /** Set the dragged engobjects 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetEngobjectsToBePlaced
            (
                const std::vector<NXOpen::NXObject *> & eos /** eos */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
