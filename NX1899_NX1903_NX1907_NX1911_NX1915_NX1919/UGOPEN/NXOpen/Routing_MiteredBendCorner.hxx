#ifndef NXOpen_ROUTING_MITEREDBENDCORNER_HXX_INCLUDED
#define NXOpen_ROUTING_MITEREDBENDCORNER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_MiteredBendCorner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Corner.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class MiteredBendCorner;
    }
    class Curve;
    namespace Routing
    {
        class Corner;
    }
    namespace Routing
    {
        class ISegment;
    }
    namespace Routing
    {
        class _MiteredBendCornerBuilder;
        class MiteredBendCornerImpl;
        /** 
                Computes a fillet curve between two linear segments to form a smooth
                bend transition from one segment to another that represents a mitered bend.
                A mitered bend is also known as "shrimp bend" or "corrugated bend".
              <br> To create a new instance of this class, use @link NXOpen::Routing::MiteredBendCornerCollection::CreateCorner  NXOpen::Routing::MiteredBendCornerCollection::CreateCorner @endlink  <br> 
         <br>  Created in NX9.0.2.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  MiteredBendCorner : public NXOpen::Routing::Corner
        {
            private: MiteredBendCornerImpl * m_miteredbendcorner_impl;
            private: friend class  _MiteredBendCornerBuilder;
            protected: MiteredBendCorner();
            public: ~MiteredBendCorner();
            /** The bend segment following the fillet curve created for mitered bend.  @return  
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::ISegment * GetSegment
            (
            );
            /**Returns  the bend radius of the corner. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: double BendRadius
            (
            );
            /**Sets  the bend radius of the corner. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetBendRadius
            (
                double bendRadius /** bend radius */ 
            );
            /**Returns  the number of miters in the corner. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: int NumberOfMiters
            (
            );
            /**Sets  the number of miters in the corner. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetNumberOfMiters
            (
                int numberOfMiters /** number of miters */ 
            );
            /** Returns the straight line segments attached to the fillet curve
                        of this bend corner.   @return  the side segments. There will be from 0 to 2 
                                                           total side segments. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXOpen::Curve *> FindSideSegments
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
