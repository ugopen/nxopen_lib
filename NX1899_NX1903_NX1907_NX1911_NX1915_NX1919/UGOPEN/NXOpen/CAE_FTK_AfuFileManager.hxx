#ifndef NXOpen_CAE_FTK_AFUFILEMANAGER_HXX_INCLUDED
#define NXOpen_CAE_FTK_AFUFILEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_AfuFileManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_FTK_DataManager.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class AfuFileManager;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class DataManager;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class AfuFileManagerImpl;
            /**  @brief  Provides methods to query the loaded AFU files  

               <br> To obtain an instance of this class use @link NXOpen::CAE::FTK::DataManager::AfuFileManager NXOpen::CAE::FTK::DataManager::AfuFileManager@endlink .  <br> 
             <br>  Created in NX12.0.1.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  AfuFileManager
            {
                private: AfuFileManagerImpl * m_afufilemanager_impl;
                private: NXOpen::CAE::FTK::DataManager* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit AfuFileManager(NXOpen::CAE::FTK::DataManager *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~AfuFileManager();
                /** Loads an AFU file to the specified container.
                                
                                An AFU file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is loaded.
                                
                             
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: void LoadFile
                (
                    const NXString & afuFileName /** afufilename */ ,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Loads an AFU file to the specified container.
                                
                                An AFU file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is loaded.
                                
                             
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                void LoadFile
                (
                    const char * afuFileName /** afufilename */ ,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Unloads an AFU file from the specified container.
                                
                                An AFU file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is unloaded.
                                
                             
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: void UnloadFile
                (
                    const NXString & afuFileName /** afufilename */ ,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Unloads an AFU file from the specified container.
                                
                                An AFU file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is unloaded.
                                
                             
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                void UnloadFile
                (
                    const char * afuFileName /** afufilename */ ,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Deletes an AFU file 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: void DeleteFile
                (
                    const NXString & afuFileName /** afufilename */ 
                );
                /** Deletes an AFU file 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                void DeleteFile
                (
                    const char * afuFileName /** afufilename */ 
                );
                /** Gets all loaded AFU files 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetLoadedFiles
                (
                );
                /** Gets all record names in an AFU file which must be loaded 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetAllRecordNamesInFile
                (
                    const NXString & afuFileName /** afufilename */ 
                );
                /** Gets all record names in an AFU file which must be loaded 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                std::vector<NXString> GetAllRecordNamesInFile
                (
                    const char * afuFileName /** afufilename */ 
                );
                /** Gets an AFU record in an AFU file which must be loaded 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseRecord * GetRecord
                (
                    const NXString & afuFileName /** afufilename */ ,
                    const NXString & recordName /** recordname */ 
                );
                /** Gets an AFU record in an AFU file which must be loaded 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseRecord * GetRecord
                (
                    const char * afuFileName /** afufilename */ ,
                    const char * recordName /** recordname */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
