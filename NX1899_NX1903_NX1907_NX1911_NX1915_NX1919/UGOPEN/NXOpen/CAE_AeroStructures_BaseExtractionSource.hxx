#ifndef NXOpen_CAE_AEROSTRUCTURES_BASEEXTRACTIONSOURCE_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_BASEEXTRACTIONSOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_BaseExtractionSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class BaseExtractionSource;
        }
    }
    class NXObject;
    class TaggedObject;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _BaseExtractionSourceBuilder;
            class BaseExtractionSourceImpl;
            /** Base abstract class for extraction source.  <br> No support for KF  <br> 
             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  BaseExtractionSource : public NXOpen::NXObject
            {
                /** the ExtractionSite type */
                public: enum TypeEnum
                {
                    TypeEnumUnknown/** unknown */ ,
                    TypeEnumPolygonFace/** polygon face */  = 2,
                    TypeEnumPolygonEdge/** polygon edge */ ,
                    TypeEnumPolygonBody/** polygon body */ ,
                    TypeEnumSelectionRecipe/** selection recipe */  = 6,
                    TypeEnumElement1D/** element1d */  = 8,
                    TypeEnumElement2D/** element2d */ ,
                    TypeEnumElement3D/** element3d */ ,
                    TypeEnumNode/** node */ ,
                    TypeEnumGroup/** group */ ,
                    TypeEnumPhysicalProperty/** physical property */  = 15,
                    TypeEnumCollector2D/** collector2d */ ,
                    TypeEnumMesh1D/** mesh1d */  = 20,
                    TypeEnumMesh2D/** mesh2d */ ,
                    TypeEnumLaminatePhysicalProperty/** laminate physical property */ 
                };

                private: BaseExtractionSourceImpl * m_baseextractionsource_impl;
                private: friend class  _BaseExtractionSourceBuilder;
                protected: BaseExtractionSource();
                public: ~BaseExtractionSource();
                /**Returns  the extraction source type 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum Type
                (
                );
                /**Returns  the number of entities in the group 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int NumberOfEntities
                (
                );
                /**Returns  the name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString Name
                (
                );
                /**Returns  the base default name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString BaseDefaultName
                (
                );
                /** Get the entities of this source  @return  
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: std::vector<NXOpen::TaggedObject *> GetEntities
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
