#ifndef NXOpen_VSA_VSAMANAGER_HXX_INCLUDED
#define NXOpen_VSA_VSAMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_VsaManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class VsaManager;
    }
    class Session;
    class Part;
    class TaggedObject;
    namespace Vsa
    {
        class AssemblyOperationBuilder;
    }
    namespace Vsa
    {
        class HoleFeatureBuilder;
    }
    namespace Vsa
    {
        class HolePatternFeatureBuilder;
    }
    namespace Vsa
    {
        class MeasurementOperationBuilder;
    }
    namespace Vsa
    {
        class PinFeatureBuilder;
    }
    namespace Vsa
    {
        class PinPatternFeatureBuilder;
    }
    namespace Vsa
    {
        class PlaneFeatureBuilder;
    }
    namespace Vsa
    {
        class PointFeatureBuilder;
    }
    namespace Vsa
    {
        class PointSubFeatureBuilder;
    }
    namespace Vsa
    {
        class SimulationPreferencesBuilder;
    }
    namespace Vsa
    {
        class SlotFeatureBuilder;
    }
    namespace Vsa
    {
        class TabFeatureBuilder;
    }
    namespace Vsa
    {
        class VsaManagerImpl;
        /** Represents a manager of vsa builders  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  VsaManager
        {
            private: VsaManagerImpl * m_vsamanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit VsaManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static VsaManager* theVsaManager;
            /** Returns the VsaManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static VsaManager* GetVsaManager(NXOpen::Session *owner);
            public: ~VsaManager();
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::PlaneFeatureBuilder * CreatePlaneFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::HoleFeatureBuilder * CreateHoleFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::PinFeatureBuilder * CreatePinFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::PointFeatureBuilder * CreatePointFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::HolePatternFeatureBuilder * CreateHolePatternFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::PinPatternFeatureBuilder * CreatePinPatternFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::AssemblyOperationBuilder * CreateAssemblyOperationBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::MeasurementOperationBuilder * CreateMeasurementOperationBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::PointSubFeatureBuilder * CreatePointSubFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::SimulationPreferencesBuilder * CreateSimulationPreferencesBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::TabFeatureBuilder * CreateTabFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
            /** To get the import factory cad geo builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Vsa::SlotFeatureBuilder * CreateSlotFeatureBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::TaggedObject * block /** block */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
