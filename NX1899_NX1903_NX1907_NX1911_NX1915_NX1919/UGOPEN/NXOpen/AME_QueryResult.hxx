#ifndef NXOpen_AME_QUERYRESULT_HXX_INCLUDED
#define NXOpen_AME_QUERYRESULT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_QueryResult.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class QueryResult;
    }
    namespace AME
    {
        class AMEEngObject;
    }
    class NXObject;
    namespace AME
    {
        class _QueryResultBuilder;
        class QueryResultImpl;
        /** The Query Result  <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  QueryResult : public NXOpen::NXObject
        {
            private: QueryResultImpl * m_queryresult_impl;
            private: friend class  _QueryResultBuilder;
            protected: QueryResult();
            public: ~QueryResult();
            /** Load all results. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void LoadAll
            (
            );
            /** Load results according to number of results in query preview setting. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void LoadPreview
            (
            );
            /** Populate sorted rows 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PopulateRows
            (
            );
            /** Get sorted rows data
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: std::vector<NXOpen::NXObject *> GetRows
            (
            );
            /** Load engineering objects of selected query result objects
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: std::vector<NXOpen::AME::AMEEngObject *> LoadAndRetrieveEngineeringObjects
            (
                const std::vector<NXOpen::NXObject *> & selectedResultObjects /** selectedresultobjects */ 
            );
            /** Load plc symbols of selected query result objects
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void LoadAndRetrievePlcSymbols
            (
                const std::vector<NXOpen::NXObject *> & selectedResultObjects /** selectedresultobjects */ ,
                std::vector<NXOpen::NXObject *> & plcSymbols /** plcsymbols */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
