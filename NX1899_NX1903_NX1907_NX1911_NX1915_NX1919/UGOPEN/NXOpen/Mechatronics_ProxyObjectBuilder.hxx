#ifndef NXOpen_MECHATRONICS_PROXYOBJECTBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_PROXYOBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ProxyObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class ProxyObjectBuilder;
    }
    class BasePart;
    class Builder;
    namespace Mechatronics
    {
        class ProxyObjectParameterBuilderList;
    }
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _ProxyObjectBuilderBuilder;
        class ProxyObjectBuilderImpl;
        /**
               Represents a @link NXOpen::Mechatronics::ProxyObjectBuilder NXOpen::Mechatronics::ProxyObjectBuilder@endlink .
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::ProxyObjectCollection::CreateProxyObjectBuilder  NXOpen::Mechatronics::ProxyObjectCollection::CreateProxyObjectBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  ProxyObjectBuilder : public NXOpen::Builder
        {
            /** the Builder types. */
            public: enum Type
            {
                TypeRuntimeParameters/** Runtime Parameters */,
                TypeProxyObject/** Proxy Object */
            };

            private: ProxyObjectBuilderImpl * m_proxyobjectbuilder_impl;
            private: friend class  _ProxyObjectBuilderBuilder;
            protected: ProxyObjectBuilder();
            public: ~ProxyObjectBuilder();
            /**Returns  the select physics objects that are encapsulated in the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * SelectPhysicsObject
            (
            );
            /**Returns  the select geometry object that describes the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * SelectGeomObject
            (
            );
            /**Returns  the name of the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString ProxyObjectName
            (
            );
            /**Sets  the name of the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetProxyObjectName
            (
                const NXString & proxyObjectName /** proxyobjectname */ 
            );
            /**Sets  the name of the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetProxyObjectName
            (
                const char * proxyObjectName /** proxyobjectname */ 
            );
            /**Returns  the parameter data 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::ProxyObjectParameterBuilderList * ParameterList
            (
            );
            /**Returns  the context part of the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::BasePart * Context
            (
            );
            /**Sets  the context part of the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetContext
            (
                NXOpen::BasePart * context /** context */ 
            );
            /**Returns  the maximum parameter id used in the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int MaxParamId
            (
            );
            /**Sets  the maximum parameter id used in the proxy object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMaxParamId
            (
                int paramId /** paramid */ 
            );
            /**Returns  the use type used in the proxy object. Use @link NXOpen::Mechatronics::ProxyObjectBuilder::BuilderType NXOpen::Mechatronics::ProxyObjectBuilder::BuilderType @endlink and @link NXOpen::Mechatronics::ProxyObjectBuilder::SetBuilderType NXOpen::Mechatronics::ProxyObjectBuilder::SetBuilderType @endlink  instead. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int UseType
            (
            );
            /**Sets  the use type used in the proxy object. Use @link NXOpen::Mechatronics::ProxyObjectBuilder::BuilderType NXOpen::Mechatronics::ProxyObjectBuilder::BuilderType @endlink and @link NXOpen::Mechatronics::ProxyObjectBuilder::SetBuilderType NXOpen::Mechatronics::ProxyObjectBuilder::SetBuilderType @endlink  instead. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetUseType
            (
                int useType /** usetype */ 
            );
            /**Returns  the use type of this builder. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::ProxyObjectBuilder::Type BuilderType
            (
            );
            /**Sets  the use type of this builder. 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetBuilderType
            (
                NXOpen::Mechatronics::ProxyObjectBuilder::Type useType /** usetype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
