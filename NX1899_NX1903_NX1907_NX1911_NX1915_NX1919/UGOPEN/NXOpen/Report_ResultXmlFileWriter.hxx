#ifndef NXOpen_REPORT_RESULTXMLFILEWRITER_HXX_INCLUDED
#define NXOpen_REPORT_RESULTXMLFILEWRITER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Report_ResultXmlFileWriter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/OpenXml_DocumentData.hxx>
#include <NXOpen/OpenXml_ImageGroupDocumentData.hxx>
#include <NXOpen/OpenXml_TableDocumentData.hxx>
#include <NXOpen/OpenXml_TextDocumentData.hxx>
#include <NXOpen/libnxopencpp_report_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Report
    {
        class ResultXmlFileWriter;
    }
    namespace OpenXml
    {
        class DocumentData;
    }
    namespace OpenXml
    {
        class ImageGroupDocumentData;
    }
    namespace OpenXml
    {
        class TableDocumentData;
    }
    namespace OpenXml
    {
        class TextDocumentData;
    }
    namespace Report
    {
    }
    namespace Report
    {
        class ResultXmlFileWriterImpl;
        /**  @brief  Contains methods for adding document data and generating result XML file 
            for CAE Report.  

          
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_REPORTEXPORT  ResultXmlFileWriter : public NXOpen::TransientObject
        {
            private: ResultXmlFileWriterImpl * m_resultxmlfilewriter_impl;
            /// \cond NX_NO_DOC 
            public: explicit ResultXmlFileWriter(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ResultXmlFileWriter();
            /** Creates a new @link NXOpen::OpenXml::TextDocumentData NXOpen::OpenXml::TextDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::Report::ResultXmlFileWriter NXOpen::Report::ResultXmlFileWriter@endlink  object @return  the text data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::TextDocumentData * AddText
            (
                const NXString & textContent /** the content of the text data*/
            );
            /** Creates a new @link NXOpen::OpenXml::TextDocumentData NXOpen::OpenXml::TextDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::Report::ResultXmlFileWriter NXOpen::Report::ResultXmlFileWriter@endlink  object @return  the text data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::OpenXml::TextDocumentData * AddText
            (
                const char * textContent /** the content of the text data*/
            );
            /** Creates a new @link NXOpen::OpenXml::ImageGroupDocumentData NXOpen::OpenXml::ImageGroupDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::Report::ResultXmlFileWriter NXOpen::Report::ResultXmlFileWriter@endlink  object @return  the image group data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::ImageGroupDocumentData * AddImageGroup
            (
            );
            /** Creates a new @link NXOpen::OpenXml::TableDocumentData NXOpen::OpenXml::TableDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::Report::ResultXmlFileWriter NXOpen::Report::ResultXmlFileWriter@endlink  object @return  the table data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::TableDocumentData * AddTable
            (
                int columnSize /** the column size of the table*/,
                int rowSize /** the row size of the table*/
            );
            /** Gets the number of data to be exported @return  the number of data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetDataCount
            (
            );
            /** Gets the nth document data object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::Report::ResultXmlFileWriter NXOpen::Report::ResultXmlFileWriter@endlink  object @return  the data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::DocumentData * GetNthData
            (
                int index /** the index of data*/
            );
            /** Removes the nth document data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteNthData
            (
                int index /** the index of data*/
            );
            /** Removes all document data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteAllData
            (
            );
            /** Exports all document data to result XML file
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SaveToFile
            (
                const NXString & fileName /** the file name to be exported*/
            );
            /** Exports all document data to result XML file
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SaveToFile
            (
                const char * fileName /** the file name to be exported*/
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
