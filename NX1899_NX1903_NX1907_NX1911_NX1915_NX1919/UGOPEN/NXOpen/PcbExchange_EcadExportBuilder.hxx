#ifndef NXOpen_PCBEXCHANGE_ECADEXPORTBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_ECADEXPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_EcadExportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class EcadExportBuilder;
    }
    class Builder;
    namespace PcbExchange
    {
        class _EcadExportBuilderBuilder;
        class EcadExportBuilderImpl;
        /** Represents a @link NXOpen::PcbExchange::EcadExportBuilder NXOpen::PcbExchange::EcadExportBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateEcadExportBuilder  NXOpen::PcbExchange::Manager::CreateEcadExportBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  EcadExportBuilder : public NXOpen::Builder
        {
            /** This enum defines the file format options. */
            public: enum FileFormatEnum
            {
                FileFormatEnumIdf2/** idf2 */ ,
                FileFormatEnumIdf3/** idf3 */ ,
                FileFormatEnumIdf4/** idf4 */ ,
                FileFormatEnumZbmb/** zbmb */ ,
                FileFormatEnumZpcb/** zpcb */ ,
                FileFormatEnumIdx2/** idx2 */ ,
                FileFormatEnumIdx3/** idx3 */ 
            };

            /** This enum defines the Ecad location options. */
            public: enum EcadLocationEnum
            {
                EcadLocationEnumOs/** os */ ,
                EcadLocationEnumTc/** tc */ 
            };

            /** This enum defines the file units. */
            public: enum ExportUnitsEnum
            {
                ExportUnitsEnumMm/** mm */ ,
                ExportUnitsEnumThou/** thou */ 
            };

            private: EcadExportBuilderImpl * m_ecadexportbuilder_impl;
            private: friend class  _EcadExportBuilderBuilder;
            protected: EcadExportBuilder();
            public: ~EcadExportBuilder();
            /**Returns  the file format 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::EcadExportBuilder::FileFormatEnum FileFormat
            (
            );
            /**Sets  the file format 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFileFormat
            (
                NXOpen::PcbExchange::EcadExportBuilder::FileFormatEnum fileFormat /** fileformat */ 
            );
            /**Returns  the ecad from 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::EcadExportBuilder::EcadLocationEnum EcadLocation
            (
            );
            /**Sets  the ecad from 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetEcadLocation
            (
                NXOpen::PcbExchange::EcadExportBuilder::EcadLocationEnum ecadLocation /** ecadlocation */ 
            );
            /**Returns  the board file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString BoardFile
            (
            );
            /**Sets  the board file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardFile
            (
                const NXString & boardFile /** boardfile */ 
            );
            /**Sets  the board file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetBoardFile
            (
                const char * boardFile /** boardfile */ 
            );
            /**Returns  the library file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LibraryFile
            (
            );
            /**Sets  the library file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetLibraryFile
            (
                const NXString & libraryFile /** libraryfile */ 
            );
            /**Sets  the library file 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetLibraryFile
            (
                const char * libraryFile /** libraryfile */ 
            );
            /**Returns  the use current work part option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseCurrentWorkPart
            (
            );
            /**Sets  the use current work part option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetUseCurrentWorkPart
            (
                bool useCurrentWorkPart /** usecurrentworkpart */ 
            );
            /**Returns  the ecad number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EcadNumber
            (
            );
            /**Sets  the ecad number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetEcadNumber
            (
                const NXString & ecadNumber /** ecadnumber */ 
            );
            /**Sets  the ecad number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetEcadNumber
            (
                const char * ecadNumber /** ecadnumber */ 
            );
            /**Returns  the ecad revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EcadRevision
            (
            );
            /**Sets  the ecad revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetEcadRevision
            (
                const NXString & ecadRevision /** ecadrevision */ 
            );
            /**Sets  the ecad revision 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetEcadRevision
            (
                const char * ecadRevision /** ecadrevision */ 
            );
            /**Returns  the file units 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::EcadExportBuilder::ExportUnitsEnum FileUnits
            (
            );
            /**Sets  the file units 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFileUnits
            (
                NXOpen::PcbExchange::EcadExportBuilder::ExportUnitsEnum exportUnits /** exportunits */ 
            );
            /**Returns  the board only option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool BoardOnly
            (
            );
            /**Sets  the board only option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardOnly
            (
                bool boardOnly /** boardonly */ 
            );
            /**Returns  the use entity filter option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseEntityFilter
            (
            );
            /**Sets  the use entity filter option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetUseEntityFilter
            (
                bool useEntityFilter /** useentityfilter */ 
            );
            /**Returns  the show log option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowLog
            (
            );
            /**Sets  the show log option 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetShowLog
            (
                bool showLog /** showlog */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
