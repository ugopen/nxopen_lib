#ifndef NXOpen_ANIMATIONDESIGNER_POSITIONMOTORBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_POSITIONMOTORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_PositionMotorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AnimationDesigner_MotorBuilder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class PositionMotorBuilder;
    }
    namespace AnimationDesigner
    {
        class MotorBuilder;
    }
    class NXColor;
    namespace AnimationDesigner
    {
        class _PositionMotorBuilderBuilder;
        class PositionMotorBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::PositionMotorBuilder NXOpen::AnimationDesigner::PositionMotorBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::PositionMotorCollection::CreatePositionMotorBuilder  NXOpen::AnimationDesigner::PositionMotorCollection::CreatePositionMotorBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  PositionMotorBuilder : public NXOpen::AnimationDesigner::MotorBuilder
        {
            /** the axis types. */
            public: enum Axis
            {
                AxisAngular/** Angular */,
                AxisLinear/** Linear */,
                AxisMixed/** Mix angular and linear */
            };

            /** the auto calculate types. */
            public: enum AutoCalculate
            {
                AutoCalculateEndTime/** Auto calculate end time */,
                AutoCalculateSpeed/** Auto calculate speed */,
                AutoCalculateDestination/** Auto calculate destination */
            };

            /** the color options. */
            public: enum ColorOptions
            {
                ColorOptionsSpecifyColor/** Assigns a color to the position motor */,
                ColorOptionsNoColor/** Assigns no color to the position motor */
            };

            private: PositionMotorBuilderImpl * m_positionmotorbuilder_impl;
            private: friend class  _PositionMotorBuilderBuilder;
            protected: PositionMotorBuilder();
            public: ~PositionMotorBuilder();
            /**Returns  the axis type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::PositionMotorBuilder::Axis AxisType
            (
            );
            /**Sets  the axis type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetAxisType
            (
                NXOpen::AnimationDesigner::PositionMotorBuilder::Axis axisType /** axistype */ 
            );
            /** Creates a new bar. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void CreateBar
            (
                int index /** index */ 
            );
            /** Deletes the bars. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void DeleteBars
            (
                const std::vector<int> & bars /** bars */ 
            );
            /** Pastes the bars. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void PasteBars
            (
                const std::vector<int> & bars /** bars */ ,
                double shiftTime /** shift time */ ,
                bool isCut /** iscut */ 
            );
            /** Mirrors the bars. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void MirrorBars
            (
                const std::vector<int> & bars /** bars */ ,
                double mirrorTime /** mirror time */ 
            );
            /** Splits the bars with the start time exp tag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SplitBar
            (
                int index /** index */ ,
                double splitTime /** split time */ 
            );
            /** Sets the bar name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarName
            (
                int index /** index */ ,
                const NXString & name /** name */ 
            );
            /** Sets the bar name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetBarName
            (
                int index /** index */ ,
                const char * name /** name */ 
            );
            /** Sets the bar start time. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarStartTime
            (
                int index /** index */ ,
                double startTime /** start time */ 
            );
            /** Sets the bar end time. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarEndTime
            (
                int index /** index */ ,
                double endTime /** end time */ 
            );
            /** Sets the bar calculation type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarCalcType
            (
                int index /** index */ ,
                int calcType /** calc type */ 
            );
            /** Sets the bar speed. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarSpeed
            (
                int index /** index */ ,
                double speed /** speed */ 
            );
            /** Sets the bar increment. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarIncrement
            (
                int index /** index */ ,
                double increment /** increment */ 
            );
            /** Sets the bar limit acceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarLimitAcceleration
            (
                int index /** index */ ,
                bool limitAcceleration /** limit acceleration */ 
            );
            /** Sets the bar acceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarAcceleration
            (
                int index /** index */ ,
                double acceleration /** acceleration */ 
            );
            /** Sets the bar deceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarDeceleration
            (
                int index /** index */ ,
                double deceleration /** deceleration */ 
            );
            /** Sets the bar time. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarTime
            (
                const std::vector<int> & bars /** bars */ ,
                double deltaStart /** deltastart */ ,
                double deltaDuration /** deltaduration */ 
            );
            /** Calculates the bar. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void BarCalculate
            (
                int index /** index */ 
            );
            /** Updates the motor destination. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void UpdateDestination
            (
            );
            /**Returns  the color option. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::PositionMotorBuilder::ColorOptions ColorOption
            (
            );
            /**Sets  the color option. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetColorOption
            (
                NXOpen::AnimationDesigner::PositionMotorBuilder::ColorOptions colorOption /** coloroption */ 
            );
            /**Returns  the color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
