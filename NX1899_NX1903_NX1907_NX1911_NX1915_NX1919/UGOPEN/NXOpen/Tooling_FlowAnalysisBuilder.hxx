#ifndef NXOpen_TOOLING_FLOWANALYSISBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_FLOWANALYSISBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_FlowAnalysisBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class FlowAnalysisBuilder;
    }
    class Builder;
    class Section;
    class SelectBody;
    namespace Tooling
    {
        class _FlowAnalysisBuilderBuilder;
        class FlowAnalysisBuilderImpl;
        /** Represents the builder which is used to create flow analysis.  <br> To create a new instance of this class, use @link NXOpen::Tooling::MoldDesignCollection::CreateFlowAnalysisBuilder  NXOpen::Tooling::MoldDesignCollection::CreateFlowAnalysisBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  FlowAnalysisBuilder : public NXOpen::Builder
        {
            private: FlowAnalysisBuilderImpl * m_flowanalysisbuilder_impl;
            private: friend class  _FlowAnalysisBuilderBuilder;
            protected: FlowAnalysisBuilder();
            public: ~FlowAnalysisBuilder();
            /**Returns  the product body 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * ProductBody
            (
            );
            /**Returns  the positions of injection gates 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * GatePoints
            (
            );
            /**Returns  the size information of injection gates 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the size information of injection gates 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the size information of injection gates 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetDescription
            (
                const char * description /** description */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
