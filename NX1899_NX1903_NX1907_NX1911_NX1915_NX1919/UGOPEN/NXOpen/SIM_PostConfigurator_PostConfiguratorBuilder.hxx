#ifndef NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORBUILDER_HXX_INCLUDED
#define NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_PostConfigurator_PostConfiguratorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorBuilder;
        }
    }
    class Builder;
    namespace CAM
    {
        class CAMObject;
    }
    class DateBuilder;
    namespace SIM
    {
        namespace PostConfigurator
        {
            class LayerManagerBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class UdeEditorBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class UpdatePostprocessorBuilder;
        }
    }
    namespace SIM
    {
        namespace PostConfigurator
        {
            class _PostConfiguratorBuilderBuilder;
            class PostConfiguratorBuilderImpl;
            /** This class is used to create a post configurator builder.
                        Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
                     <br> To create a new instance of this class, use @link NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorBuilder  NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorBuilder @endlink  <br> 
             <br>  Created in NX10.0.3.  <br>  
            */
            class NXOPENCPP_SIMEXPORT  PostConfiguratorBuilder : public NXOpen::Builder
            {
                /** The property data type */
                public: enum PropertyDataType
                {
                    PropertyDataTypeUnknown/** Unknown data type */,
                    PropertyDataTypeInteger/** Integer data type */,
                    PropertyDataTypeDouble/** Double data type */,
                    PropertyDataTypeString/** String data type */,
                    PropertyDataTypeOption/** Option data type */,
                    PropertyDataTypeVector/** Vector data type */,
                    PropertyDataTypeMultistring/** Multistring data type */,
                    PropertyDataTypePoint/** Point data type */
                };

                /** The property datafield type */
                public: enum PropertyDataFieldType
                {
                    PropertyDataFieldTypeUnknown/** Unknown datafield type */,
                    PropertyDataFieldTypeSingle/** Single datafield type */,
                    PropertyDataFieldTypeOption/** Option datafield type */
                };

                /** The property option type */
                public: enum PropertyOptionType
                {
                    PropertyOptionTypeUnknown/** Unknown option type */,
                    PropertyOptionTypeValue/** Value option type */,
                    PropertyOptionTypeEnum/** Enum option type */
                };

                /** The property access type */
                public: enum PropertyAccessType
                {
                    PropertyAccessTypeNo/** The property has no read or write access. */,
                    PropertyAccessTypeRead/** The property has read only access. */,
                    PropertyAccessTypeFull/** The property has read and write access. */
                };

                /** The property value changed status type */
                public: enum PropertyValueChangedStatusType
                {
                    PropertyValueChangedStatusTypeUnchanged/** If the value is equal to default value. */,
                    PropertyValueChangedStatusTypeChanged/** If the value is different to default value. */,
                    PropertyValueChangedStatusTypeUnremoveUnchanged/** If the value is equal to default value and the property cannot be removed. */,
                    PropertyValueChangedStatusTypeUnremoveChanged/** If the value is different to default value and the property cannot be removed. */,
                    PropertyValueChangedStatusTypeUnaddUnchanged/** If the value is equal to default value and the property cannot be added. */,
                    PropertyValueChangedStatusTypeUnaddChanged/** If the value is different to default value and the property cannot be added. */
                };

                /** The displayed unit system type in the post configurator properties */
                public: enum UnitsType
                {
                    UnitsTypeMillimeters/** The Units is in Millimeters. */,
                    UnitsTypeInches/** The Units is in Inches. */,
                    UnitsTypeMillimetersAndInches/** The Units is in Millimeters and Inches. */
                };

                private: PostConfiguratorBuilderImpl * m_postconfiguratorbuilder_impl;
                private: friend class  _PostConfiguratorBuilderBuilder;
                protected: PostConfiguratorBuilder();
                public: ~PostConfiguratorBuilder();
                /** Resets the post configurator data. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void Reset
                (
                );
                /** Shows the post configurator data changes in the listing window. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void ShowChanges
                (
                );
                /** Encrypts a post processor with Sold-To ID and expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void EncryptPostConfiguratorFiles
                (
                    const NXString & soldToID /** the sold to id */,
                    const NXString & expirationDate /** the expiration date */
                );
                /** Encrypts a post processor with Sold-To ID and expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void EncryptPostConfiguratorFiles
                (
                    const char * soldToID /** the sold to id */,
                    const char * expirationDate /** the expiration date */
                );
                /**Returns  the date value. The Date object will contain the value for expiration date. 
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : None */
                public: NXOpen::DateBuilder * DateValue
                (
                );
                /** Saves the post configurator data. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void Save
                (
                );
                /** Saves the post configurator data in different name. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SaveAs
                (
                    const NXString & postprocessorName /** the postprocessor name */,
                    const NXString & outputDirectory /** the output directory */
                );
                /** Saves the post configurator data in different name. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SaveAs
                (
                    const char * postprocessorName /** the postprocessor name */,
                    const char * outputDirectory /** the output directory */
                );
                /**Returns  the ude editor builder 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::UdeEditorBuilder * UdeEditorBuilder
                (
                );
                /** Creates the Customer Cdl File. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void CreateCustomCdlFile
                (
                );
                /**Returns  the layer editor builder 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::LayerManagerBuilder * LayerManagerBuilder
                (
                );
                /** Postprocess the selected operation. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void PostProcess
                (
                    const std::vector<NXOpen::CAM::CAMObject *> & objects /** array of objects */,
                    const NXString & outputFilename /** the output filename */,
                    bool showOutputToListingWindow /** the flag for show output to listing window  */
                );
                /** Postprocess the selected operation. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void PostProcess
                (
                    const std::vector<NXOpen::CAM::CAMObject *> & objects /** array of objects */,
                    const char * outputFilename /** the output filename */,
                    bool showOutputToListingWindow /** the flag for show output to listing window  */
                );
                /** Sets the property with string value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */,
                    const NXString & value /** the value */
                );
                /** Sets the property with string value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */,
                    const char * value /** the value */
                );
                /** Sets the property with multistring value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */,
                    std::vector<NXString> & value /** the string array value */
                );
                /** Sets the property with multistring value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */,
                    std::vector<NXString> & value /** the string array value */
                );
                /** Sets the property with integer value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */,
                    int value /** the value */
                );
                /** Sets the property with integer value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */,
                    int value /** the value */
                );
                /** Sets the property with double value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */,
                    double value /** the value */
                );
                /** Sets the property with double value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */,
                    double value /** the value */
                );
                /** Sets the property with double array value. Used for vector or point property
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */,
                    double firstValue /** the first value */,
                    double secondValue /** the second value */,
                    double thirdValue /** the third value */
                );
                /** Sets the property with double array value. Used for vector or point property
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */,
                    double firstValue /** the first value */,
                    double secondValue /** the second value */,
                    double thirdValue /** the third value */
                );
                /** Sets the property to default value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetPropertyToDefaultValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Sets the property to default value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetPropertyToDefaultValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Adds the property to the selected chain
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void AddProperty
                (
                    const NXString & chainID /** the chain id where the property should be added. "Default" as chain ID is not allowed */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Adds the property to the selected chain
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void AddProperty
                (
                    const char * chainID /** the chain id where the property should be added. "Default" as chain ID is not allowed */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Removes the property from the selected chain
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void RemoveProperty
                (
                    const NXString & chainID /** the chain id where the property should be removed. "Default" as chain ID is not allowed */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Removes the property from the selected chain
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void RemoveProperty
                (
                    const char * chainID /** the chain id where the property should be removed. "Default" as chain ID is not allowed */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property value.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                                This function allocates the memory for values. The caller is responsible to deallocate the memory.  @return  the values 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetPropertyValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property value.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                                This function allocates the memory for values. The caller is responsible to deallocate the memory.  @return  the values 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                std::vector<NXString> GetPropertyValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property default value.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                                This function allocates the memory for defaultValues. The caller is responsible to deallocate the memory.  @return  the default values 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetPropertyDefaultValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property default value.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                                This function allocates the memory for defaultValues. The caller is responsible to deallocate the memory.  @return  the default values 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                std::vector<NXString> GetPropertyDefaultValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property options value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the options value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GetPropertyOptionsValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property options value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the options value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXString GetPropertyOptionsValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property options ID value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the options id value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GetPropertyOptionsIdValue
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property options ID value. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the options id value 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXString GetPropertyOptionsIdValue
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property description text.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the description text 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GetPropertyDescriptionText
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property description text.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the description text 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXString GetPropertyDescriptionText
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property description image.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the description image 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GetPropertyDescriptionImage
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property description image.
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the description image 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                NXString GetPropertyDescriptionImage
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property data type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the data type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyDataType GetPropertyDataType
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property data type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the data type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyDataType GetPropertyDataType
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property data field type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the data field type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyDataFieldType GetPropertyDataFieldType
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property data field type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the data field type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyDataFieldType GetPropertyDataFieldType
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property option type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the option type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyOptionType GetPropertyOptionType
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property option type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the option type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyOptionType GetPropertyOptionType
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property access type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the access type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyAccessType GetPropertyAccessType
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property access type. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the access type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyAccessType GetPropertyAccessType
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property value changed status. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the value changed status 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyValueChangedStatusType GetPropertyValueChangedStatus
                (
                    const NXString & chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Gets the property value changed status. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.  @return  the value changed status 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::PropertyValueChangedStatusType GetPropertyValueChangedStatus
                (
                    const char * chainID /** the chain id, for the single chain use empty string ("") or null pointer or "Default" as chain id. */,
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Gets the property chain ids. 
                                This function allocates the memory for chainIds. The caller is responsible to deallocate the memory.  @return  the chain ids 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetPropertyChainIds
                (
                );
                /** Gets the property configuration object ids. 
                                This function allocates the memory for chainIds. The caller is responsible to deallocate the memory.  @return  the configuraton object ids 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetPropertyConfigurationObjectIds
                (
                );
                /** Gets the property ids. 
                                This function allocates the memory for chainIds. The caller is responsible to deallocate the memory.  @return  the property ids 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetPropertyIds
                (
                );
                /**Returns  the displayed units in post configurator properties
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::UnitsType Units
                (
                );
                /**Sets  the displayed units in post configurator properties
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: void SetUnits
                (
                    NXOpen::SIM::PostConfigurator::PostConfiguratorBuilder::UnitsType type /** The units type*/
                );
                /**Returns  the update postprocessor builder 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: NXOpen::SIM::PostConfigurator::UpdatePostprocessorBuilder * UpdatePostprocessorBuilder
                (
                );
                /** Execute the tcl script to open the external documentation. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void OpenDocumentation
                (
                );
                /** Lists the property data in the information window. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void ListPropertyDataInInformationWindow
                (
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Lists the property data in the information window. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void ListPropertyDataInInformationWindow
                (
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
                /** Copy the property data to the clipboard. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void CopyPropertyDataToClipboard
                (
                    const NXString & configurationObjectID /** the configuration object id */,
                    const NXString & propertyID /** the property id */
                );
                /** Copy the property data to the clipboard. 
                                The configurationObjectID and propertyID are documented under NX Help->Manufacturing(CAM)->Post Configurator->Post Configurator configuration objets.
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void CopyPropertyDataToClipboard
                (
                    const char * configurationObjectID /** the configuration object id */,
                    const char * propertyID /** the property id */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
