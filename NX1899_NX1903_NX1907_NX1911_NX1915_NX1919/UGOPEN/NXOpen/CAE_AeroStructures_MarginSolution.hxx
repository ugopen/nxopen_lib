#ifndef NXOpen_CAE_AEROSTRUCTURES_MARGINSOLUTION_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MARGINSOLUTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_MarginSolution.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_ExpressionResult.hxx>
#include <NXOpen/CAE_AeroStructures_MarginCalculation.hxx>
#include <NXOpen/CAE_AeroStructures_MarginResultQuery.hxx>
#include <NXOpen/CAE_AeroStructures_MarginResultTableDataProvider.hxx>
#include <NXOpen/CAE_AeroStructures_MarginResultTableRowFilter.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Report_IReportCollection.hxx>
#include <NXOpen/Report_Report.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginSolution;
        }
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace CAE
    {
        namespace AeroStructures
        {
            class ExpressionCollection;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class ExpressionResult;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadCaseSetCollection;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginCalculation;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginCalculationCollection;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultQuery;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableDataProvider;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableRowFilter;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginSolutionLoadCaseCollection;
        }
    }
    namespace CAE
    {
        class SimSolution;
    }
    class INXObject;
    class NXObject;
    namespace Report
    {
        class IReportCollection;
    }
    namespace Report
    {
        class Report;
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class _MarginSolutionBuilder;
            class MarginSolutionImpl;
            /** Represents a @link NXOpen::CAE::AeroStructures::MarginSolution NXOpen::CAE::AeroStructures::MarginSolution@endlink .  <br> To create or edit an instance of this class, use @link NXOpen::CAE::AeroStructures::MarginSolutionBuilder  NXOpen::CAE::AeroStructures::MarginSolutionBuilder @endlink  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MarginSolution : public NXOpen::NXObject, public virtual NXOpen::Report::IReportCollection
            {
                private: MarginSolutionImpl * m_marginsolution_impl;
                private: friend class  _MarginSolutionBuilder;
                protected: MarginSolution();
                public: ~MarginSolution();
                /** Renames the meta solution
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void Rename
                (
                    const NXString & name /** name */ 
                );
                /** Renames the meta solution
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void Rename
                (
                    const char * name /** name */ 
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultTableDataProvider NXOpen::CAE::AeroStructures::MarginResultTableDataProvider@endlink  
                            which will be based on every calculation of this solution that has results
                        
                            Note: no column is registered by default. 
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns@endlink  or
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn@endlink 
                                  should be called after calling this creator
                         @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableDataProvider * CreateMarginResultTableDataProvider
                (
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultTableDataProvider NXOpen::CAE::AeroStructures::MarginResultTableDataProvider@endlink  
                            Only the subset of calculations given in the argument which have results are taken into account
                        
                            Note: no column is registered by default. 
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns@endlink  or
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn@endlink 
                                  should be called after calling this creator
                          @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableDataProvider * CreateMarginResultTableDataProvider
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider, only the ones with results are taken into account */
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultTableDataProvider NXOpen::CAE::AeroStructures::MarginResultTableDataProvider@endlink  
                            which will be based on every calculation of this solution that has results 
                            and satisfies the following conditions:
                            - the margin of safety is less than or equal to the maxMS specified in argument
                            - the global rank is less than or equal to the maxRank specified in argument
                            Results that do not satisfy these conditions are ignored and do not participate in the
                            computation of the other ranks.
                            
                            Note: no column is registered by default. 
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns@endlink  or
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn@endlink 
                                  should be called after calling this creator
                           @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableDataProvider * CreateMarginResultTableDataProvider
                (
                    int maxRank /** the global maximum rank permitted, effectively restricting the number of possible rows in the table */,
                    double maxMS /** the maximum margin of safety value permitted  */
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultTableDataProvider NXOpen::CAE::AeroStructures::MarginResultTableDataProvider@endlink  
                            Only the subset of calculations given in the argument which have results are taken into account
                            Additionally only results that satisfy the following conditions are taken into account:
                            - the margin of safety is less than or equal to the maxMS specified in argument
                            - the global rank is less than or equal to the maxRank specified in argument
                            Results that do not satisfy these conditions are ignored and do not participate in the
                            computation of the other ranks.
                            
                            Note: no column is registered by default. 
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns  CAE::AeroStructures::MarginResultTableDataProvider::RegisterAllColumns@endlink  or
                                  Methods @link  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn  CAE::AeroStructures::MarginResultTableDataProvider::RegisterColumn@endlink 
                                  should be called after calling this creator
                         @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableDataProvider * CreateMarginResultTableDataProvider
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider, only the ones with results are taken into account */,
                    int maxRank /** the global maximum rank permitted, effectively restricting the number of possible rows in the table */,
                    double maxMS /** the maximum margin of safety value permitted  */
                );
                /** Creates an empty @link NXOpen::CAE::AeroStructures::MarginResultTableRowFilter NXOpen::CAE::AeroStructures::MarginResultTableRowFilter@endlink  
                            By default it is a conjunction, meaning that successive conditions added to this filter
                            using AddCondition will be the terms of a conjunction (cond1 AND cond2 AND ...) @return   margin result table row filter object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * CreateMarginResultTableRowFilter
                (
                );
                /** Creates an empty @link NXOpen::CAE::AeroStructures::MarginResultTableRowFilter NXOpen::CAE::AeroStructures::MarginResultTableRowFilter@endlink  
                            Specifying if it is a conjunction or a disjunction and if it is negated or not.
                            This means that successive conditions added to this filter using AddCondition will be the terms of either 
                            a conjunction (cond1 AND cond2 AND ...) or
                            a disjunction (cond1 OR cond2 OR ...)
                            Additionally if isNegated is true the whole conjunction or disjunction is negated:
                            NOT(cond1 AND cond2 AND ...) or
                            NOT(cond1 OR cond2 OR ...)
                             @return   margin result table row filter object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * CreateMarginResultTableRowFilter
                (
                    bool isDisjunction /** If true the filter is a disjunction otherwise it is a conjunction */,
                    bool isNegated /** If true a NOT is applied to the whole conjunction or disjunction */
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultQuery NXOpen::CAE::AeroStructures::MarginResultQuery@endlink  
                             containing all the results of every calculation that has been solved and belongs to this solution
                             If a non-null @link CAE::AeroStructures::MarginResultTableRowFilter CAE::AeroStructures::MarginResultTableRowFilter@endlink  is passed as argument
                             the results are further post-filtered (after the rank calculation has taken place) according to that filter
                             @return  output query 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultQuery * CreateMarginResultQuery
                (
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * filter /** additional post filter (may be null)*/
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultQuery NXOpen::CAE::AeroStructures::MarginResultQuery@endlink  
                             containing all the results of every calculation passed in the argument 
                             that has been solved and belongs to this solution
                             If a non-null @link CAE::AeroStructures::MarginResultTableRowFilter CAE::AeroStructures::MarginResultTableRowFilter@endlink  is passed as argument
                             the results are further post-filtered (after the rank calculation has taken place) according to that filter
                             @return   output query 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultQuery * CreateMarginResultQuery
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider, only the ones with results are taken into account */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * filter /** additional post filter (may be null)*/
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultQuery NXOpen::CAE::AeroStructures::MarginResultQuery@endlink  
                            containing all the results of every calculation belonging to this solution that has been solved and 
                            that satisfies the following pre-conditions:
                            - the margin of safety is less than or equal to the maxMS specified in the argument
                            - the global rank is less than or equal to the maxRank specified in the argument
                            Results that do not satisfy these conditions are ignored and do not participate in the
                            computation of the other ranks.
                            If a non-null @link CAE::AeroStructures::MarginResultTableRowFilter CAE::AeroStructures::MarginResultTableRowFilter@endlink  is passed as argument
                            the results are further post-filtered (after the rank calculation has taken place) according to that filter
                             @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultQuery * CreateMarginResultQuery
                (
                    int maxRank /** the global maximum rank permitted, effectively restricting the number of possible rows in the table */,
                    double maxMS /** the maximum margin of safety value permitted  */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * filter /** additional post filter (may be null)*/
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::MarginResultQuery NXOpen::CAE::AeroStructures::MarginResultQuery@endlink  
                            containing the results of the calculations passed in the argument belonging to this solution that have been solved and 
                            that satisfy the following pre-conditions:
                            - the margin of safety is less than or equal to the maxMS specified in the argument
                            - the global rank is less than or equal to the maxRank specified in the argument
                            Results that do not satisfy these conditions are ignored and do not participate in the
                            computation of the other ranks.
                            If a non-null @link CAE::AeroStructures::MarginResultTableRowFilter CAE::AeroStructures::MarginResultTableRowFilter@endlink  is passed as argument
                            the results are further post-filtered (after the rank calculation has taken place) according to that filter
                             @return   margin result table data provider object
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::MarginResultQuery * CreateMarginResultQuery
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider, only the ones with results are taken into account */,
                    int maxRank /** the global maximum rank permitted, effectively restricting the number of possible rows in the table */,
                    double maxMS /** the maximum margin of safety value permitted  */,
                    NXOpen::CAE::AeroStructures::MarginResultTableRowFilter * filter /** additional post filter (may be null)*/
                );
                /**Returns  the referenced FE-Solution of the AeroStructure solution 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::SimSolution * ReferenceSolution
                (
                );
                /**Returns  the margin solution description 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString Description
                (
                );
                /** Solve the calculations passed in the argument belonging to this solution 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void Solve
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to solve */
                );
                /** Post processing of the calculations passed in the argument belonging to this solution 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void PostProcessing
                (
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to be post-processed */
                );
                /** Solve all the calculations in the solution 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SolveAll
                (
                );
                /** Create critical MS expression  @return  The critical MS expression 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::ExpressionResult * CreateCriticalMs
                (
                    const NXString & name /** name */ ,
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider */
                );
                /** Create critical MS expression  @return  The critical MS expression 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::ExpressionResult * CreateCriticalMs
                (
                    const char * name /** name */ ,
                    const std::vector<NXOpen::CAE::AeroStructures::MarginCalculation *> & marginCalculations /** The list of calculations from the solution to consider */
                );
                /** Creates a @link Report::Report Report::Report@endlink  in this report collection.
                            NX will not create a report if the report name is empty or existed.  @return   
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_design_sim ("NX Design Simulation") */
                public: virtual NXOpen::Report::Report * CreateReport
                (
                    const NXString & templateFile /**  Template file name with full path */,
                    const NXString & reportName /**  Report name */,
                    bool listError /** list error information in listing window */
                );
                /** Creates a @link Report::Report Report::Report@endlink  in this report collection.
                            NX will not create a report if the report name is empty or existed.  @return   
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_design_sim ("NX Design Simulation") */
                virtual NXOpen::Report::Report * CreateReport
                (
                    const char * templateFile /**  Template file name with full path */,
                    const char * reportName /**  Report name */,
                    bool listError /** list error information in listing window */
                );
                /** Gets all reports in the report collection. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_design_sim ("NX Design Simulation") */
                public: virtual void GetReports
                (
                    std::vector<NXOpen::Report::Report *> & pReports /** preports */ 
                );


                /** Returns the @link NXOpen::CAE::AeroStructures::LoadCaseSetCollection NXOpen::CAE::AeroStructures::LoadCaseSetCollection@endlink  belonging to this 
                 <br>  Created in NX12.0.0.  <br>  
                */
                public: NXOpen::CAE::AeroStructures::LoadCaseSetCollection *LoadCaseSetCollection();
                /** Returns the @link NXOpen::CAE::AeroStructures::MarginSolutionLoadCaseCollection NXOpen::CAE::AeroStructures::MarginSolutionLoadCaseCollection@endlink  belonging to this 
                 <br>  Created in NX12.0.0.  <br>  
                */
                public: NXOpen::CAE::AeroStructures::MarginSolutionLoadCaseCollection *LoadCaseCollection();
                /** Returns the @link NXOpen::CAE::AeroStructures::MarginCalculationCollection NXOpen::CAE::AeroStructures::MarginCalculationCollection@endlink  belonging to this 
                 <br>  Created in NX12.0.0.  <br>  
                */
                public: NXOpen::CAE::AeroStructures::MarginCalculationCollection *MarginCalculationCollection();
                /** Returns the @link NXOpen::CAE::AeroStructures::ExpressionCollection NXOpen::CAE::AeroStructures::ExpressionCollection@endlink  belonging to this 
                 <br>  Created in NX1899.0.0.  <br>  
                */
                public: NXOpen::CAE::AeroStructures::ExpressionCollection *ExpressionCollection();
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
