#ifndef NXOpen_CAE_POINTSELECTIONRECIPE_HXX_INCLUDED
#define NXOpen_CAE_POINTSELECTIONRECIPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PointSelectionRecipe.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AttributeSelectionRecipe.hxx>
#include <NXOpen/CAE_SelectionRecipe.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PointSelectionRecipe;
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    class Point;
    namespace CAE
    {
        class _PointSelectionRecipeBuilder;
        class PointSelectionRecipeImpl;
        /**  @brief  Represents a single node selection recipe based on coordinates of a point  

          <br> To obtain an instance of this object use one of the creators in @link NXOpen::CAE::SelectionRecipeCollection NXOpen::CAE::SelectionRecipeCollection@endlink .  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PointSelectionRecipe : public NXOpen::CAE::SelectionRecipe
        {
            private: PointSelectionRecipeImpl * m_pointselectionrecipe_impl;
            private: friend class  _PointSelectionRecipeBuilder;
            protected: PointSelectionRecipe();
            public: ~PointSelectionRecipe();
            /**Returns  the point. 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link CAE::SelRecipePointStrategy::Point CAE::SelRecipePointStrategy::Point @endlink and @link CAE::SelRecipePointStrategy::SetPoint CAE::SelRecipePointStrategy::SetPoint @endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use CAE::SelRecipePointStrategy::Point CAE::SelRecipePointStrategy::Point @endlink and @link CAE::SelRecipePointStrategy::SetPoint CAE::SelRecipePointStrategy::SetPoint @endlink  instead.") NXOpen::Point * Point
            (
            );
            /**Returns  the tolerance. 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link CAE::SelRecipePointStrategy::Tolerance CAE::SelRecipePointStrategy::Tolerance @endlink and @link CAE::SelRecipePointStrategy::SetTolerance CAE::SelRecipePointStrategy::SetTolerance @endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use CAE::SelRecipePointStrategy::Tolerance CAE::SelRecipePointStrategy::Tolerance @endlink and @link CAE::SelRecipePointStrategy::SetTolerance CAE::SelRecipePointStrategy::SetTolerance @endlink  instead.") double Tolerance
            (
            );
            /** Set the target coordinates. 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link CAE::SelRecipePointStrategy::SetPointAndTolerance CAE::SelRecipePointStrategy::SetPointAndTolerance@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use CAE::SelRecipePointStrategy::SetPointAndTolerance instead.") void SetPointAndTolerance
            (
                NXOpen::Point * point /** point */ ,
                double tolerance /** tolerance */ 
            );
            /**Returns  the high label preference. False by default.If set to true, the node with the higher label will be picked, in case the recipe finds multiple nodes within tolerance 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link CAE::SelRecipePointStrategy::ResolvePreference CAE::SelRecipePointStrategy::ResolvePreference @endlink and @link CAE::SelRecipePointStrategy::SetResolvePreference CAE::SelRecipePointStrategy::SetResolvePreference @endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use CAE::SelRecipePointStrategy::ResolvePreference CAE::SelRecipePointStrategy::ResolvePreference @endlink and @link CAE::SelRecipePointStrategy::SetResolvePreference CAE::SelRecipePointStrategy::SetResolvePreference @endlink  instead.") bool HighLabelPreference
            (
            );
            /** Set the high label preference. 
             <br>  @deprecated Deprecated in NX1847.0.0.  Use @link CAE::SelRecipePointStrategy::SetResolvePreference CAE::SelRecipePointStrategy::SetResolvePreference@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use CAE::SelRecipePointStrategy::SetResolvePreference instead.") void SetHighLabelPreference
            (
                bool useHighLabel /** usehighlabel */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
