#ifndef NXOpen_AME_ENGINEERINGOBJECTDEFINITIONLABELBUILDER_HXX_INCLUDED
#define NXOpen_AME_ENGINEERINGOBJECTDEFINITIONLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_EngineeringObjectDefinitionLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class EngineeringObjectDefinitionLabelBuilder;
    }
    class Builder;
    namespace AME
    {
        class _EngineeringObjectDefinitionLabelBuilderBuilder;
        class EngineeringObjectDefinitionLabelBuilderImpl;
        /** JA class for the insert Engineering object definition label dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateEngineeringObjectDefinitionLabelBuilder  NXOpen::AME::AMEManager::CreateEngineeringObjectDefinitionLabelBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  EngineeringObjectDefinitionLabelBuilder : public NXOpen::Builder
        {
            private: EngineeringObjectDefinitionLabelBuilderImpl * m_engineeringobjectdefinitionlabelbuilder_impl;
            private: friend class  _EngineeringObjectDefinitionLabelBuilderBuilder;
            protected: EngineeringObjectDefinitionLabelBuilder();
            public: ~EngineeringObjectDefinitionLabelBuilder();
            /**Returns  the toggle rds 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleRDS
            (
            );
            /**Sets  the toggle rds 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleRDS
            (
                bool toggleRDS /** togglerds */ 
            );
            /**Returns  the toggle function 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleFunction
            (
            );
            /**Sets  the toggle function 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleFunction
            (
                bool toggleFunction /** togglefunction */ 
            );
            /**Returns  the toggle location 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleLocation
            (
            );
            /**Sets  the toggle location 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleLocation
            (
                bool toggleLocation /** togglelocation */ 
            );
            /**Returns  the toggle product 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleProduct
            (
            );
            /**Sets  the toggle product 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleProduct
            (
                bool toggleProduct /** toggleproduct */ 
            );
            /**Returns  the toggle description 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool ToggleDescription
            (
            );
            /**Sets  the toggle description 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetToggleDescription
            (
                bool toggleDescription /** toggledescription */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
