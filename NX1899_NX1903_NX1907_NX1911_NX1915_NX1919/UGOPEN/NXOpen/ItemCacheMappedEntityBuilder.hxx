#ifndef NXOpen_ITEMCACHEMAPPEDENTITYBUILDER_HXX_INCLUDED
#define NXOpen_ITEMCACHEMAPPEDENTITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ItemCacheMappedEntityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class ItemCacheMappedEntityBuilder;
    class Builder;
    namespace CAE
    {
        class PropertyTable;
    }
    class _ItemCacheMappedEntityBuilderBuilder;
    class ItemCacheMappedEntityBuilderImpl;
    /** Generic journal methods for ItemCacheMappedEntityBuilder <br> Not support KF.  <br> 
     <br>  Created in NX12.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  ItemCacheMappedEntityBuilder : public NXOpen::Builder
    {
        private: ItemCacheMappedEntityBuilderImpl * m_itemcachemappedentitybuilder_impl;
        private: friend class  _ItemCacheMappedEntityBuilderBuilder;
        protected: ItemCacheMappedEntityBuilder();
        public: ~ItemCacheMappedEntityBuilder();
        /**Returns  the name value. 
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ItemName
        (
        );
        /**Sets  the name value. 
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetItemName
        (
            const NXString & name /** The name string value.  */
        );
        /**Sets  the name value. 
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        void SetItemName
        (
            const char * name /** The name string value.  */
        );
        /**Returns  the id value.  
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: int ItemId
        (
        );
        /**Sets  the id value.  
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetItemId
        (
            int id /** The ID value.  */
        );
        /**Returns  the description value.  
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: NXString ItemDescription
        (
        );
        /**Sets  the description value.  
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetItemDescription
        (
            const NXString & description /** Description value.  */
        );
        /**Sets  the description value.  
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        void SetItemDescription
        (
            const char * description /** Description value.  */
        );
        /**Returns  the property table associated with the object 
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::CAE::PropertyTable * ItemPropertyTable
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
