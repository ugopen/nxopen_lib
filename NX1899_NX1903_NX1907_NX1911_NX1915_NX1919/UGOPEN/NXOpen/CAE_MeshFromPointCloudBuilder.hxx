#ifndef NXOpen_CAE_MESHFROMPOINTCLOUDBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHFROMPOINTCLOUDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshFromPointCloudBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MeshFromPointCloudBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    class Expression;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _MeshFromPointCloudBuilderBuilder;
        class MeshFromPointCloudBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::MeshFromPointCloudBuilder NXOpen::CAE::MeshFromPointCloudBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateMeshFromPointCloudBuilder  NXOpen::CAE::NodeElementManager::CreateMeshFromPointCloudBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MeshFromPointCloudBuilder : public NXOpen::Builder
        {
            private: MeshFromPointCloudBuilderImpl * m_meshfrompointcloudbuilder_impl;
            private: friend class  _MeshFromPointCloudBuilderBuilder;
            protected: MeshFromPointCloudBuilder();
            public: ~MeshFromPointCloudBuilder();
            /**Returns  the selected point
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * Points
            (
            );
            /**Returns  the maximum distance 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxDistance
            (
            );
            /**Returns  the feature angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FeatureAngle
            (
            );
            /**Returns  the 1d wireframe option
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool BeamMeshToggle
            (
            );
            /**Sets  the 1d wireframe option
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetBeamMeshToggle
            (
                bool beamToggle /** beamtoggle */ 
            );
            /**Returns  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXString MeshName
            (
            );
            /**Sets  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshName
            (
                const NXString & meshName /** meshname */ 
            );
            /**Sets  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetMeshName
            (
                const char * meshName /** meshname */ 
            );
            /**Returns  the shell element type to be created
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * ShellElementType
            (
            );
            /**Returns  the wireframe element type to be created
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder * WireframeElementType
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
