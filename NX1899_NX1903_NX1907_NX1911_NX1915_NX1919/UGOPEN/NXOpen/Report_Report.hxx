#ifndef NXOpen_REPORT_REPORT_HXX_INCLUDED
#define NXOpen_REPORT_REPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Report_Report.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Report_TemplateItem.hxx>
#include <NXOpen/Report_UserInput.hxx>
#include <NXOpen/libnxopencpp_report_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Report
    {
        class Report;
    }
    class NXObject;
    namespace Report
    {
        class IReportCollection;
    }
    namespace Report
    {
        class IUserItem;
    }
    namespace Report
    {
        class TemplateItem;
    }
    namespace Report
    {
        class _ReportBuilder;
        class ReportImpl;
        /** Represents a report.  <br> Not support KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_REPORTEXPORT  Report : public NXOpen::NXObject
        {
            /** Represents the moving item location. */
            public: enum MoveItemLocation
            {
                MoveItemLocationBefore/** Move item to the location before reference item */,
                MoveItemLocationAfter/** Move item to the location after reference item */
            };

            private: ReportImpl * m_report_impl;
            private: friend class  _ReportBuilder;
            protected: Report();
            public: ~Report();
            /** Gets all template items. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void GetTemplateItems
            (
                std::vector<NXOpen::Report::TemplateItem *> & pTemplateItems /** ptemplateitems */ 
            );
            /** Creates a user item and adds it to the report.  @return   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Report::IUserItem * CreateUserItem
            (
                NXOpen::Report::UserInput::Type inputType /** inputtype */ 
            );
            /** Copy an user item to the @link Report::Report Report::Report@endlink .  @return  the copy of the input user item 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Report::IUserItem * CopyUserItem
            (
                NXOpen::Report::IUserItem * userItem /** input user item */
            );
            /** Gets all user items in the report. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void GetUserItems
            (
                std::vector<NXOpen::Report::IUserItem *> & userItems /** useritems */ 
            );
            /** Moves the user items to the new position. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void MoveUserItems
            (
                const std::vector<NXOpen::Report::IUserItem *> & userItems /** useritems */ ,
                NXOpen::Report::Report::MoveItemLocation newLocation /** newlocation */ ,
                NXOpen::Report::IUserItem * referencedItem /** the target reference user item */
            );
            /**Returns  the report collection object. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Report::IReportCollection * ReportCollection
            (
            );
            /** Exports the report contents to a document. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void Export
            (
                const NXString & reportDocument /** reportdocument */ ,
                bool listError /** list error information in listing window */
            );
            /** Exports the report contents to a document. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void Export
            (
                const char * reportDocument /** reportdocument */ ,
                bool listError /** list error information in listing window */
            );
            /**Returns  the template document file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString TemplateFile
            (
            );
            /**Sets  the template document file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTemplateFile
            (
                const NXString & templateFile /**  Template file name with full path */
            );
            /**Sets  the template document file. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetTemplateFile
            (
                const char * templateFile /**  Template file name with full path */
            );
            /** Clears all template items in @link Report::Report Report::Report@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ClearTemplateItems
            (
            );
            /** Deletes all user items in @link Report::Report Report::Report@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteUserItems
            (
            );
            /** Hide template items without user input in @link Report::Report Report::Report@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void HideTempalteItemsWithoutInput
            (
                bool hideTemplateItemsWithoutInput /** hidetemplateitemswithoutinput */ 
            );
            /** Synchronize the @link Report::Report Report::Report@endlink  with commands. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SynchronizeWithCommands
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
