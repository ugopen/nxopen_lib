#ifndef NXOpen_MFG_AM_PROFILEOBJECT_HXX_INCLUDED
#define NXOpen_MFG_AM_PROFILEOBJECT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_ProfileObject.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class ProfileObject;
        }
    }
    class NXObject;
    namespace Mfg
    {
        namespace AM
        {
            class _ProfileObjectBuilder;
            class ProfileObjectImpl;
            /** Interface for Services Profile objects  <br> To obtain an instance of this class use @link NXOpen::Mfg::AM::ProfileObject NXOpen::Mfg::AM::ProfileObject@endlink .  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class MFGAMOPENCPPEXPORT  ProfileObject : public NXOpen::NXObject
            {
                private: ProfileObjectImpl * m_profileobject_impl;
                private: friend class  _ProfileObjectBuilder;
                protected: ProfileObject();
                public: ~ProfileObject();
                /** Deletes the profile object
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void Destroy
                (
                );
                /** Renames the profile object
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void RenameProfileObject
                (
                    const NXString & newPropertyName /** newpropertyname */ 
                );
                /** Renames the profile object
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                void RenameProfileObject
                (
                    const char * newPropertyName /** newpropertyname */ 
                );
                /** Get child profile object of the given name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::ProfileObject * GetChild
                (
                    const NXString & childSupportName /** childsupportname */ 
                );
                /** Get child profile object of the given name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::Mfg::AM::ProfileObject * GetChild
                (
                    const char * childSupportName /** childsupportname */ 
                );
                /** Finds the @link NXOpen::Mfg::AM::ProfileObject NXOpen::Mfg::AM::ProfileObject@endlink  with the given (guid) identifier as recorded in a journal.
                            This method will search for the profile with given GUID from the given profile object. 
                            The GUID used for the searching is available in the am.xml file.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::ProfileObject * GetChildByGuid
                (
                    const NXString & pChildGuid /** pchildguid */ ,
                    bool recursive /** recursive */ 
                );
                /** Finds the @link NXOpen::Mfg::AM::ProfileObject NXOpen::Mfg::AM::ProfileObject@endlink  with the given (guid) identifier as recorded in a journal.
                            This method will search for the profile with given GUID from the given profile object. 
                            The GUID used for the searching is available in the am.xml file.
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::Mfg::AM::ProfileObject * GetChildByGuid
                (
                    const char * pChildGuid /** pchildguid */ ,
                    bool recursive /** recursive */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
