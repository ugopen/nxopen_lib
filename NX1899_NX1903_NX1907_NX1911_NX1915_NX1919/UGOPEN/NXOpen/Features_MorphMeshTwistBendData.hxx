#ifndef NXOpen_FEATURES_MORPHMESHTWISTBENDDATA_HXX_INCLUDED
#define NXOpen_FEATURES_MORPHMESHTWISTBENDDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_MorphMeshTwistBendData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_TransformerData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class MorphMeshTwistBendData;
    }
    class Builder;
    class Expression;
    namespace GeometricUtilities
    {
        class TransformerData;
    }
    class SelectNXObjectList;
    namespace Features
    {
        class _MorphMeshTwistBendDataBuilder;
        class MorphMeshTwistBendDataImpl;
        /** Twist and bend deformer data allowing user to morph mesh.  <br> To create a new instance of this class, use @link NXOpen::Features::MorphMeshCollection::CreateMorphMeshTwistBendData  NXOpen::Features::MorphMeshCollection::CreateMorphMeshTwistBendData @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CircularSegments </td> <td> 
         
        4 </td> </tr> 

        <tr><td> 
         
        FalloffPercentage </td> <td> 
         
        25 </td> </tr> 

        <tr><td> 
         
        LinearSegments </td> <td> 
         
        10 </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  MorphMeshTwistBendData : public NXOpen::Builder
        {
            /** Twist and bend type */
            public: enum Types
            {
                TypesCage/** Morph cage only */,
                TypesCageAndBody/** Morph cage and body */
            };

            private: MorphMeshTwistBendDataImpl * m_morphmeshtwistbenddata_impl;
            private: friend class  _MorphMeshTwistBendDataBuilder;
            protected: MorphMeshTwistBendData();
            public: ~MorphMeshTwistBendData();
            /**Returns  the size 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Size
            (
            );
            /**Returns  the height 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Height
            (
            );
            /**Returns  the linear segments 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int LinearSegments
            (
            );
            /**Sets  the linear segments 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetLinearSegments
            (
                int linearSegments /** linearsegments */ 
            );
            /**Returns  the circular segments 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int CircularSegments
            (
            );
            /**Sets  the circular segments 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetCircularSegments
            (
                int circularSegments /** circularsegments */ 
            );
            /**Returns  the twist angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TwistAngle
            (
            );
            /**Returns  the pivot point location 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PivotPointLocation
            (
            );
            /**Returns  the bend radius 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BendRadius
            (
            );
            /**Returns  the bend angle 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BendAngle
            (
            );
            /**Returns  the falloff distance 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int FalloffPercentage
            (
            );
            /**Sets  the falloff distance 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetFalloffPercentage
            (
                int fallOffPercentage /** falloffpercentage */ 
            );
            /**Returns  the type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTwistBendData::Types Type
            (
            );
            /**Sets  the type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetType
            (
                NXOpen::Features::MorphMeshTwistBendData::Types type /** type */ 
            );
            /**Returns  the transformation tool 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::TransformerData * Transformer
            (
            );
            /** Enables the twist and bend data for further deformations. 
                        User needs to enable the data before doing any parameter changes for the deformation purposes. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void Enable
            (
            );
            /** Resets the cage size and orientation based on selected body. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void ResetToCage
            (
            );
            /** Set necessary builder data. This API is used to record morphing related data after transforming cage. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void UpdateCageAndBody
            (
            );
            /**Returns  the mesh bodies. The cage of will enclose the selected mesh bodies 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * MeshBodies
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
