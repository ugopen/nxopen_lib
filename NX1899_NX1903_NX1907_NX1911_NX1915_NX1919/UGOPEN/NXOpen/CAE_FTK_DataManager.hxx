#ifndef NXOpen_CAE_FTK_DATAMANAGER_HXX_INCLUDED
#define NXOpen_CAE_FTK_DATAMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_DataManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord2D.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord2DEven.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord3D.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_FTK_BaseUnit.hxx>
#include <NXOpen/CAE_FTK_ComplexSectionBasedMatrixRecord.hxx>
#include <NXOpen/CAE_FTK_MatrixPlotRecord.hxx>
#include <NXOpen/CAE_FTK_RealSectionBasedMatrixRecord.hxx>
#include <NXOpen/CAE_XYFunctionDataTypes.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class DataManager;
        }
    }
    class Session;
    namespace CAE
    {
        namespace FTK
        {
            class AfuFileManager;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord2D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord2DEven;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord3D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseUnit;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class ComplexSectionBasedMatrixRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class MatrixPlotRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class Op2FileManager;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class RealSectionBasedMatrixRecord;
        }
    }
    class Unit;
    namespace CAE
    {
        namespace FTK
        {
            class DataManagerImpl;
            /** Ftk data manager  <br> To obtain an instance of this class use @link NXOpen::Session::DataManager NXOpen::Session::DataManager@endlink .  <br> 
             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  DataManager
            {
                /** Represents the method to get Z value for afu record in 3D plot */
                public: enum AfuRecordZValue
                {
                    AfuRecordZValueSelectionOrder/** The Z value is selection order */,
                    AfuRecordZValueGeneral/** The Z value is attribute of General field in an afu record  */,
                    AfuRecordZValueRpm/** The z value is attribute of RPM field in an afu record */,
                    AfuRecordZValueTime/** The z value is attribute of Time field in an afu record */,
                    AfuRecordZValueOrder/** The z value is attribute of Order field in an afu record */
                };

                /** Represents the file container type */
                public: enum FileContainerType
                {
                    FileContainerTypeNone/** Not any container */,
                    FileContainerTypeAssociatedContainer/** Part associated container which has the same simple name with the part */,
                    FileContainerTypeResultContainer/** Solution result container which has the same name with the solution */,
                    FileContainerTypeUserContainer/** User container */,
                    FileContainerTypeAll/** All containers */
                };

                private: DataManagerImpl * m_datamanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit DataManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~DataManager();
                /** Loads afu/op2 file to User container
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::LoadFile CAE::FTK::AfuFileManager::LoadFile@endlink  instead when loading an AFU file; Use @link CAE::FTK::Op2FileManager::LoadFile CAE::FTK::Op2FileManager::LoadFile@endlink  instead when loading an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::LoadFile instead when loading an AFU file; Use CAE::FTK::Op2FileManager::LoadFile instead when loading an OP2 file.") void LoadFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path */
                );
                /** Loads afu/op2 file to User container
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::LoadFile CAE::FTK::AfuFileManager::LoadFile@endlink  instead when loading an AFU file; Use @link CAE::FTK::Op2FileManager::LoadFile CAE::FTK::Op2FileManager::LoadFile@endlink  instead when loading an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                void LoadFile
                (
                    const char * fileName /** Afu/Op2 file name with full path */
                );
                /** Unloads afu/op2 file from User container
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::UnloadFile CAE::FTK::AfuFileManager::UnloadFile@endlink  instead when unloading an AFU file; Use @link CAE::FTK::Op2FileManager::UnloadFile CAE::FTK::Op2FileManager::UnloadFile@endlink  instead when unloading an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::UnloadFile instead when unloading an AFU file; Use CAE::FTK::Op2FileManager::UnloadFile instead when unloading an OP2 file.") void UnloadFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path */
                );
                /** Unloads afu/op2 file from User container
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::UnloadFile CAE::FTK::AfuFileManager::UnloadFile@endlink  instead when unloading an AFU file; Use @link CAE::FTK::Op2FileManager::UnloadFile CAE::FTK::Op2FileManager::UnloadFile@endlink  instead when unloading an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                void UnloadFile
                (
                    const char * fileName /** Afu/Op2 file name with full path */
                );
                /** Loads an AFU/OP2 file to the specified container.
                                
                                An AFU/OP2 file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is loaded.
                                
                             
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::LoadFile CAE::FTK::AfuFileManager::LoadFile@endlink  instead when loading an AFU file; Use @link CAE::FTK::Op2FileManager::LoadFile CAE::FTK::Op2FileManager::LoadFile@endlink  instead when loading an OP2 file. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::LoadFile instead when loading an AFU file; Use CAE::FTK::Op2FileManager::LoadFile instead when loading an OP2 file.") void LoadFile
                (
                    const NXString & fileName /** AFU/OP2 file name with full path */,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Loads an AFU/OP2 file to the specified container.
                                
                                An AFU/OP2 file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is loaded.
                                
                             
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::LoadFile CAE::FTK::AfuFileManager::LoadFile@endlink  instead when loading an AFU file; Use @link CAE::FTK::Op2FileManager::LoadFile CAE::FTK::Op2FileManager::LoadFile@endlink  instead when loading an OP2 file. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                void LoadFile
                (
                    const char * fileName /** AFU/OP2 file name with full path */,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Unloads an AFU/OP2 file from the specified container.
                                
                                An AFU/OP2 file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is unloaded.
                                
                             
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::UnloadFile CAE::FTK::AfuFileManager::UnloadFile@endlink  instead when unloading an AFU file; Use @link CAE::FTK::Op2FileManager::UnloadFile CAE::FTK::Op2FileManager::UnloadFile@endlink  instead when unloading an OP2 file. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::UnloadFile instead when unloading an AFU file; Use CAE::FTK::Op2FileManager::UnloadFile instead when unloading an OP2 file.") void UnloadFile
                (
                    const NXString & fileName /** AFU/OP2 file name with full path */,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Unloads an AFU/OP2 file from the specified container.
                                
                                An AFU/OP2 file can be loaded under associated container, solution result container or user container.
                                The container type indicates under which container the file is unloaded.
                                
                             
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::UnloadFile CAE::FTK::AfuFileManager::UnloadFile@endlink  instead when unloading an AFU file; Use @link CAE::FTK::Op2FileManager::UnloadFile CAE::FTK::Op2FileManager::UnloadFile@endlink  instead when unloading an OP2 file. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                void UnloadFile
                (
                    const char * fileName /** AFU/OP2 file name with full path */,
                    NXOpen::CAE::FTK::DataManager::FileContainerType containerType /** containertype */ 
                );
                /** Deletes afu/op2 file 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::DeleteFile CAE::FTK::AfuFileManager::DeleteFile@endlink  instead when deleting an AFU file; Use @link CAE::FTK::Op2FileManager::DeleteFile CAE::FTK::Op2FileManager::DeleteFile@endlink  instead when deleting an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::DeleteFile instead when deleting an AFU file; Use CAE::FTK::Op2FileManager::DeleteFile instead when deleting an OP2 file.") void DeleteFile
                (
                    const NXString & fileName /** Afu/Op2 file name with full path */
                );
                /** Deletes afu/op2 file 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::DeleteFile CAE::FTK::AfuFileManager::DeleteFile@endlink  instead when deleting an AFU file; Use @link CAE::FTK::Op2FileManager::DeleteFile CAE::FTK::Op2FileManager::DeleteFile@endlink  instead when deleting an OP2 file. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                void DeleteFile
                (
                    const char * fileName /** Afu/Op2 file name with full path */
                );
                /** Gets afu record  @return  Afu record data 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::GetRecord CAE::FTK::AfuFileManager::GetRecord@endlink  instead <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::AfuFileManager::GetRecord instead") NXOpen::CAE::FTK::BaseRecord * GetAfuRecord
                (
                    const NXString & afuFileName /** Afu file name with full path */,
                    const NXString & recordName /** Afu record name */
                );
                /** Gets afu record  @return  Afu record data 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::AfuFileManager::GetRecord CAE::FTK::AfuFileManager::GetRecord@endlink  instead <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseRecord * GetAfuRecord
                (
                    const char * afuFileName /** Afu file name with full path */,
                    const char * recordName /** Afu record name */
                );
                /** Gets op2 record  @return  Op2 record data 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::Op2FileManager::GetRecord CAE::FTK::Op2FileManager::GetRecord@endlink  instead <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAE::FTK::Op2FileManager::GetRecord instead") NXOpen::CAE::FTK::BaseRecord * GetOp2Record
                (
                    const NXString & op2FileName /** Op2 file name with full path */,
                    const NXString & dataSetName /** Op2 data set name */,
                    const NXString & recordName /** Op2 record name */
                );
                /** Gets op2 record  @return  Op2 record data 
                 <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAE::FTK::Op2FileManager::GetRecord CAE::FTK::Op2FileManager::GetRecord@endlink  instead <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseRecord * GetOp2Record
                (
                    const char * op2FileName /** Op2 file name with full path */,
                    const char * dataSetName /** Op2 data set name */,
                    const char * recordName /** Op2 record name */
                );
                /** Creates 2d array record  @return  2D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::ArrayRecord2D * CreateArrayRecord2d
                (
                    const NXString & titleName /** Title name */,
                    const NXString & legendName /** Legend name */,
                    int numPoints /** Point count */
                );
                /** Creates 2d array record  @return  2D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::ArrayRecord2D * CreateArrayRecord2d
                (
                    const char * titleName /** Title name */,
                    const char * legendName /** Legend name */,
                    int numPoints /** Point count */
                );
                /** Creates 2d array record with even spacing  @return  2D even array record 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::ArrayRecord2DEven * CreateArrayRecord2dEvenSpacing
                (
                    const NXString & titleName /** Title name */,
                    const NXString & legendName /** Legend name */
                );
                /** Creates 2d array record with even spacing  @return  2D even array record 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::ArrayRecord2DEven * CreateArrayRecord2dEvenSpacing
                (
                    const char * titleName /** Title name */,
                    const char * legendName /** Legend name */
                );
                /** Creates 3d array record  @return  3D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::ArrayRecord3D * CreateArrayRecord3d
                (
                    const NXString & titleName /** Title name */,
                    const NXString & legendName /** Legend name */,
                    int numPoints /** Point count */
                );
                /** Creates 3d array record  @return  3D array record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::ArrayRecord3D * CreateArrayRecord3d
                (
                    const char * titleName /** Title name */,
                    const char * legendName /** Legend name */,
                    int numPoints /** Point count */
                );
                /** Deletes record 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: void DeleteRecord
                (
                    NXOpen::CAE::FTK::BaseRecord * deletedRecord /** Deleted record */
                );
                /** Creates array unit by nx system unit  @return  Array unit 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** NX system unit */
                );
                /** Creates an array record unit by xy function unit  @return  Array unit 
                 <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  instead. <br>  

                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::CAE::FTK::DataManager::CreateArrayUnit instead.") NXOpen::CAE::FTK::BaseUnit * CreateArrayRecordUnit
                (
                    NXOpen::CAE::XyFunctionUnit unitType /** Unit type */
                );
                /**  @brief  Creates array unit by NX unit with new alias measure type name. 

                 
                                Please use the method @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has two parameters if the alias measure name is not needed
                            
                 <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has four argumetns instead. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::FTK::DataManager::CreateArrayUnit which has four argumetns instead.") NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** nxunit */ ,
                    const NXString & aliasMeasureName /** aliasmeasurename */ 
                );
                /**  @brief  Creates array unit by NX unit with new alias measure type name. 

                 
                                Please use the method @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has two parameters if the alias measure name is not needed
                            
                 <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has four argumetns instead. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** nxunit */ ,
                    const char * aliasMeasureName /** aliasmeasurename */ 
                );
                /**  @brief  Creates the object @link NXOpen::CAE::FTK::BaseUnit NXOpen::CAE::FTK::BaseUnit@endlink  by @link NXOpen::Unit NXOpen::Unit@endlink 
                            with alias measure name and localized alias measure name.  

                 
                            
                            Please use the method @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has two arguments
                            if alias measure name is not needed.
                            
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** nxunit */ ,
                    const NXString & aliasMeasureName /** aliasmeasurename */ ,
                    const NXString & localizedAliasMeasureName /** localizedaliasmeasurename */ 
                );
                /**  @brief  Creates the object @link NXOpen::CAE::FTK::BaseUnit NXOpen::CAE::FTK::BaseUnit@endlink  by @link NXOpen::Unit NXOpen::Unit@endlink 
                            with alias measure name and localized alias measure name.  

                 
                            
                            Please use the method @link NXOpen::CAE::FTK::DataManager::CreateArrayUnit NXOpen::CAE::FTK::DataManager::CreateArrayUnit@endlink  which has two arguments
                            if alias measure name is not needed.
                            
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::Unit * nxUnit /** nxunit */ ,
                    const char * aliasMeasureName /** aliasmeasurename */ ,
                    const char * localizedAliasMeasureName /** localizedaliasmeasurename */ 
                );
                /** Creates unitless unit
                 <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::FTK::DataManager::CreateUnitlessUnit NXOpen::CAE::FTK::DataManager::CreateUnitlessUnit@endlink  which has three argumetns instead. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1847.0.0.  Use NXOpen::CAE::FTK::DataManager::CreateUnitlessUnit which has three argumetns instead.") NXOpen::CAE::FTK::BaseUnit * CreateUnitlessUnit
                (
                    const NXString & measureName /** measurename */ 
                );
                /** Creates unitless unit
                 <br>  @deprecated Deprecated in NX1847.0.0.  Use @link NXOpen::CAE::FTK::DataManager::CreateUnitlessUnit NXOpen::CAE::FTK::DataManager::CreateUnitlessUnit@endlink  which has three argumetns instead. <br>  

                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseUnit * CreateUnitlessUnit
                (
                    const char * measureName /** measurename */ 
                );
                /** Creates unitless unit 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * CreateUnitlessUnit
                (
                    const NXString & measureName /** measurename */ ,
                    const NXString & localizedMeasureName /** localizedmeasurename */ 
                );
                /** Creates unitless unit 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::BaseUnit * CreateUnitlessUnit
                (
                    const char * measureName /** measurename */ ,
                    const char * localizedMeasureName /** localizedmeasurename */ 
                );
                /** Creates array unit by numerator and denominator unit  @return  Array unit 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * CreateArrayUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * numeratorUnit /** Numerator unit */,
                    NXOpen::CAE::FTK::BaseUnit * denominatorUnit /** Denominator unit */
                );
                /** Deletes array unit 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void DeleteArrayUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * deletedUnit /** Deleted unit */
                );
                /** Creates an empty real matrix record which section data is real data.  @return  Real matrix record 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::RealSectionBasedMatrixRecord * CreateRealMatrixRecord
                (
                    const NXString & titleName /** Title name */,
                    const NXString & legendName /** Legend name */
                );
                /** Creates an empty real matrix record which section data is real data.  @return  Real matrix record 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::RealSectionBasedMatrixRecord * CreateRealMatrixRecord
                (
                    const char * titleName /** Title name */,
                    const char * legendName /** Legend name */
                );
                /** Creates an empty complex matrix record which section data is complex data.  @return  Complex matrix record 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::ComplexSectionBasedMatrixRecord * CreateComplexMatrixRecord
                (
                    const NXString & titleName /** Title name */,
                    const NXString & legendName /** Legend name */
                );
                /** Creates an empty complex matrix record which section data is complex data.  @return  Complex matrix record 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::ComplexSectionBasedMatrixRecord * CreateComplexMatrixRecord
                (
                    const char * titleName /** Title name */,
                    const char * legendName /** Legend name */
                );
                /** Creates an empty record for matrix plot. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::MatrixPlotRecord * CreateMatrixPlotRecord
                (
                    const NXString & titleName /** titlename */ ,
                    const NXString & legendName /** legendname */ 
                );
                /** Creates an empty record for matrix plot. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::CAE::FTK::MatrixPlotRecord * CreateMatrixPlotRecord
                (
                    const char * titleName /** titlename */ ,
                    const char * legendName /** legendname */ 
                );


                /** Returns the @link NXOpen::CAE::FTK::AfuFileManager NXOpen::CAE::FTK::AfuFileManager@endlink  belonging to FTK data manager 
                 <br>  Created in NX12.0.1.  <br>  
                */
                public: NXOpen::CAE::FTK::AfuFileManager *AfuFileManager();
                /** Returns the @link NXOpen::CAE::FTK::Op2FileManager NXOpen::CAE::FTK::Op2FileManager@endlink  belonging to FTK data manager 
                 <br>  Created in NX12.0.1.  <br>  
                */
                public: NXOpen::CAE::FTK::Op2FileManager *Op2FileManager();
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
