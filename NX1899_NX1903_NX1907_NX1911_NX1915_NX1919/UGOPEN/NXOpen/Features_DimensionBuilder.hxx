#ifndef NXOpen_FEATURES_DIMENSIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DIMENSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DimensionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_Dimension.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FaceRecognitionBuilder.hxx>
#include <NXOpen/GeometricUtilities_FaceChangeOverflowBehavior.hxx>
#include <NXOpen/GeometricUtilities_SaveConstraintsBuilder.hxx>
#include <NXOpen/Features_AdmBaseBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class DimensionBuilder;
    }
    namespace Annotations
    {
        class Dimension;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    class Expression;
    namespace Features
    {
        class AdmBaseBuilder;
    }
    namespace Features
    {
        class FaceRecognitionBuilder;
    }
    namespace GeometricUtilities
    {
        class FaceChangeOverflowBehavior;
    }
    namespace GeometricUtilities
    {
        class SaveConstraintsBuilder;
    }
    namespace Features
    {
        class _DimensionBuilderBuilder;
        class DimensionBuilderImpl;
        /** Represents a @link NXOpen::Features::DimensionBuilder NXOpen::Features::DimensionBuilder@endlink   <br> The sub-class should create an instance of corresponding object  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FacesToMove.CoaxialEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.CoplanarAxesEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.CoplanarEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.EqualDiameterEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.OffsetEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.ParallelEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.PerpendicularEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.SameOrbitEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.SymmetricEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.TangentEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.ThicknessChainEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToMove.UseFaceBrowse </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  DimensionBuilder : public NXOpen::Features::AdmBaseBuilder
        {
            private: DimensionBuilderImpl * m_dimensionbuilder_impl;
            private: friend class  _DimensionBuilderBuilder;
            protected: DimensionBuilder();
            public: ~DimensionBuilder();
            /**Returns  the dimension location/placement controlled by the annotation origin block 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * DimensionLocation
            (
            );
            /**Returns  the faces being moved as part of the Linear Dimension command 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FaceRecognitionBuilder * FacesToMove
            (
            );
            /**Returns  the value of the dimension 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Value
            (
            );
            /** The drafting dimension which is used as UI tool for dimension display.
                        Since this is saved with the feature, we need to create it and edit even during
                        journalling. This command will hide all the creation and editing details of the
                        drafting dimension. This API should be included for successful journalling 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Dimension * GetDimension
            (
            );
            /**Returns  the face change overflow behavior. Please refer @link NXOpen::GeometricUtilities::FaceChangeOverflowBehavior NXOpen::GeometricUtilities::FaceChangeOverflowBehavior@endlink  for details. 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FaceChangeOverflowBehavior * FaceChangeOverflowBehavior
            (
            );
            /**Returns  the SaveConstraints builder which is used by ADM Dimension Features. 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::SaveConstraintsBuilder * SaveConstraints
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
