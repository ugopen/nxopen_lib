#ifndef NXOpen_CAE_RESULTSMANIPULATIONERRORHANDLING_HXX_INCLUDED
#define NXOpen_CAE_RESULTSMANIPULATIONERRORHANDLING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultsManipulationErrorHandling.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultsManipulationErrorHandling;
    }
    namespace CAE
    {
        class _ResultsManipulationErrorHandlingBuilder;
        class ResultsManipulationErrorHandlingImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::ResultsManipulationErrorHandling NXOpen::CAE::ResultsManipulationErrorHandling@endlink  to handle errors when manipulating results  <br> This is a sub object  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultsManipulationErrorHandling : public NXOpen::TaggedObject
        {
            /** Incompatible results options.
                        
                        The options for the case that the result is incompatiable for specified nodes or elements.
                        Examples:
                        <ol>
                        <li>
                        The result is a nodal result, the input entity is an element, vice versa.
                        </li>
                        <li>
                        The result is a shell elemental result, the input entity is a beam element or solid element.
                        </li>
                        </ol>
                        
                    */
            public: enum IncompatibleResults
            {
                IncompatibleResultsSkip/** Not output data for the incompatible result */,
                IncompatibleResultsAbort/** Terminate the manipulation, all results will not be outputted */
            };

            /** No data options.
                        
                        The options for the case that there is no data in the result for specified nodes or elements.
                        
                    */
            public: enum NoData
            {
                NoDataSkip/** Not output data for the no data result */,
                NoDataZeroFill/** Fill in zero value for the no data result */
            };

            private: ResultsManipulationErrorHandlingImpl * m_resultsmanipulationerrorhandling_impl;
            private: friend class  _ResultsManipulationErrorHandlingBuilder;
            protected: ResultsManipulationErrorHandling();
            public: ~ResultsManipulationErrorHandling();
            /**Returns  the option for incompatible results 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::ResultsManipulationErrorHandling::IncompatibleResults IncompatibleResultsOption
            (
            );
            /**Sets  the option for incompatible results 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetIncompatibleResultsOption
            (
                NXOpen::CAE::ResultsManipulationErrorHandling::IncompatibleResults incompatibleResultsOption /** incompatibleresultsoption */ 
            );
            /**Returns  the option for no data 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::ResultsManipulationErrorHandling::NoData NoDataOption
            (
            );
            /**Sets  the option for no data 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetNoDataOption
            (
                NXOpen::CAE::ResultsManipulationErrorHandling::NoData noDataOption /** nodataoption */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
