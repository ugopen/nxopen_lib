#ifndef NXOpen_CAE_AEROSTRUCTURES_EXTRACTIONSOURCESET_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_EXTRACTIONSOURCESET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_ExtractionSourceSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_BaseExtractionSource.hxx>
#include <NXOpen/CAE_AeroStructures_GeometricalExtractionSource.hxx>
#include <NXOpen/CAE_AeroStructures_PhysicalPropertySource.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class ExtractionSourceSet;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class BaseExtractionSource;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class GeometricalExtractionSource;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class PhysicalPropertySource;
        }
    }
    class NXObject;
    class TaggedObject;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _ExtractionSourceSetBuilder;
            class ExtractionSourceSetImpl;
            /** Class for set of named extraction sources.  <br> No support for KF  <br> 
             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ExtractionSourceSet : public NXOpen::NXObject
            {
                private: ExtractionSourceSetImpl * m_extractionsourceset_impl;
                private: friend class  _ExtractionSourceSetBuilder;
                protected: ExtractionSourceSet();
                public: ~ExtractionSourceSet();
                /** Creates a @link NXOpen::CAE::AeroStructures::GeometricalExtractionSource NXOpen::CAE::AeroStructures::GeometricalExtractionSource@endlink   @return  geometrical extraction source object
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::GeometricalExtractionSource * CreateGeometricalExtractionSource
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum type /** type */ ,
                    const NXString & sourceName /** source name */ ,
                    const std::vector<NXOpen::TaggedObject *> & entitiesArray /** entities array */ 
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::GeometricalExtractionSource NXOpen::CAE::AeroStructures::GeometricalExtractionSource@endlink   @return  geometrical extraction source object
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::GeometricalExtractionSource * CreateGeometricalExtractionSource
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum type /** type */ ,
                    const char * sourceName /** source name */ ,
                    const std::vector<NXOpen::TaggedObject *> & entitiesArray /** entities array */ 
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::PhysicalPropertySource NXOpen::CAE::AeroStructures::PhysicalPropertySource@endlink   @return  physical property source object
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::PhysicalPropertySource * CreatePhysicalPropertySource
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum type /** type */ ,
                    const NXString & sourceName /** source name */ ,
                    NXOpen::TaggedObject * entity /** entity */ 
                );
                /** Creates a @link NXOpen::CAE::AeroStructures::PhysicalPropertySource NXOpen::CAE::AeroStructures::PhysicalPropertySource@endlink   @return  physical property source object
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::PhysicalPropertySource * CreatePhysicalPropertySource
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum type /** type */ ,
                    const char * sourceName /** source name */ ,
                    NXOpen::TaggedObject * entity /** entity */ 
                );
                /** Get the array of  @link NXOpen::CAE::AeroStructures::BaseExtractionSource NXOpen::CAE::AeroStructures::BaseExtractionSource@endlink   @return  extraction source objects
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: std::vector<NXOpen::CAE::AeroStructures::BaseExtractionSource *> GetExtractionSources
                (
                );
                /** Set the array of  @link NXOpen::CAE::AeroStructures::BaseExtractionSource NXOpen::CAE::AeroStructures::BaseExtractionSource@endlink  
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetExtractionSources
                (
                    const std::vector<NXOpen::CAE::AeroStructures::BaseExtractionSource *> & source /** extraction source objects*/
                );
                /** Add a single @link NXOpen::CAE::AeroStructures::BaseExtractionSource NXOpen::CAE::AeroStructures::BaseExtractionSource@endlink  item to the extraction source set.   
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void AddExtractionSource
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource * source /** source to be added - will be renamed if necessary */
                );
                /** Return the next available default source name for a given type 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetNextAvailableDefaultSourceName
                (
                    NXOpen::CAE::AeroStructures::BaseExtractionSource::TypeEnum type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
