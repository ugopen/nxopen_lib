#ifndef NXOpen_TOOLING_INTERMEDIATESTAGEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_INTERMEDIATESTAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_IntermediateStageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class IntermediateStageBuilder;
    }
    namespace Assemblies
    {
        class SelectComponent;
    }
    class Builder;
    class NXObject;
    class Part;
    namespace Tooling
    {
        class _IntermediateStageBuilderBuilder;
        class IntermediateStageBuilderImpl;
        /**Represents a @link NXOpen::Tooling::IntermediateStageBuilder NXOpen::Tooling::IntermediateStageBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Tooling::IntermediateStageCollection::CreateIntermediateStageBuilder  NXOpen::Tooling::IntermediateStageCollection::CreateIntermediateStageBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DesignSequence </td> <td> 
         
        PartToBlank </td> </tr> 

        <tr><td> 
         
        EditOption </td> <td> 
         
        Insert </td> </tr> 

        <tr><td> 
         
        IntermediateRename </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        LinkSheetBody </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        NumberIntermediate </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        OrientPitch </td> <td> 
         
        X </td> </tr> 

        <tr><td> 
         
        Pitch </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        StartStation </td> <td> 
         
        2 </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  IntermediateStageBuilder : public NXOpen::Builder
        {
            /** The types of design sequences  */
            public: enum DesignSequences
            {
                DesignSequencesPartToBlank/** design sequence from part to blank */,
                DesignSequencesBlankToPart/** design sequence from blank to part */
            };

            /** The types of orientation of intermediate stages  */
            public: enum Orientations
            {
                OrientationsX/** orientation X */,
                OrientationsY/** orientation Y */,
                OrientationsZ/** orientation Z */
            };

            /** The types of changed intermediate stages  */
            public: enum EditOptions
            {
                EditOptionsInsert/** Insert new intermediate stage type */,
                EditOptionsDelete/** Delete current intermediate stage type */
            };

            private: IntermediateStageBuilderImpl * m_intermediatestagebuilder_impl;
            private: friend class  _IntermediateStageBuilderBuilder;
            protected: IntermediateStageBuilder();
            public: ~IntermediateStageBuilder();
            /**Returns  the design sequence. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::IntermediateStageBuilder::DesignSequences DesignSequence
            (
            );
            /**Sets  the design sequence. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDesignSequence
            (
                NXOpen::Tooling::IntermediateStageBuilder::DesignSequences designSequence /** designsequence */ 
            );
            /**Returns  the number of intermediate stages. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int NumberIntermediate
            (
            );
            /**Sets  the number of intermediate stages. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetNumberIntermediate
            (
                int numberIntermediate /** numberintermediate */ 
            );
            /**Returns  the start station. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int StartStation
            (
            );
            /**Sets  the start station. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetStartStation
            (
                int startStation /** startstation */ 
            );
            /**Returns  the pitch. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double Pitch
            (
            );
            /**Sets  the pitch. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetPitch
            (
                double pitch /** pitch */ 
            );
            /**Returns  the orientation of pitch. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::IntermediateStageBuilder::Orientations OrientPitch
            (
            );
            /**Sets  the orientation of pitch. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetOrientPitch
            (
                NXOpen::Tooling::IntermediateStageBuilder::Orientations orientPitch /** orientpitch */ 
            );
            /**Returns  the intermediate stages selected as the reference of insert. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponent * IntermediateStage
            (
            );
            /**Returns  the edit intermediate stage option. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::IntermediateStageBuilder::EditOptions EditOption
            (
            );
            /**Sets  the edit intermediate stage option. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetEditOption
            (
                NXOpen::Tooling::IntermediateStageBuilder::EditOptions editOption /** editoption */ 
            );
            /**Returns  the naming rule of intermediate stages. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString IntermediateNamingRule
            (
            );
            /**Sets  the naming rule of intermediate stages. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetIntermediateNamingRule
            (
                const NXString & intermediateNamingRule /** intermediatenamingrule */ 
            );
            /**Sets  the naming rule of intermediate stages. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetIntermediateNamingRule
            (
                const char * intermediateNamingRule /** intermediatenamingrule */ 
            );
            /**Returns  the top part name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString TopPartName
            (
            );
            /**Sets  the top part name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetTopPartName
            (
                const NXString & topPartName /** toppartname */ 
            );
            /**Sets  the top part name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetTopPartName
            (
                const char * topPartName /** toppartname */ 
            );
            /**Returns  the switch of whether to create a copy part. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateCopyPart
            (
            );
            /**Sets  the switch of whether to create a copy part. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetCreateCopyPart
            (
                bool createCopyPart /** createcopypart */ 
            );
            /**Returns  the switch of rename components. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool IntermediateRename
            (
            );
            /**Sets  the switch of rename components. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetIntermediateRename
            (
                bool intermediateRename /** intermediaterename */ 
            );
            /**Returns  the switch of link sheet body to intermediate stage. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool LinkSheetBody
            (
            );
            /**Sets  the switch of link sheet body to intermediate stage. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetLinkSheetBody
            (
                bool linkSheetBody /** linksheetbody */ 
            );
            /**Returns  the tag of direct unfold parent. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Part * DirectUnfoldParent
            (
            );
            /**Sets  the tag of direct unfold parent. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDirectUnfoldParent
            (
                NXOpen::Part * directUnfoldParent /** directunfoldparent */ 
            );
            /** Initialize for direct unfold project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::NXObject * DirectUnfoldProjectInitialize
            (
            );
            /** Update the start station 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdateStartStation
            (
                NXOpen::Part * parentPart /** parentpart */ 
            );
            /** Update the pitch orientation 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdatePitchOrientation
            (
                NXOpen::Part * parentPart /** parentpart */ ,
                NXOpen::NXObject * originalPart /** originalpart */ 
            );
            /** Increase intermediate stages 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void IncreaseIntermediateStages
            (
                NXOpen::Part * parentPart /** parentpart */ ,
                NXOpen::NXObject * originalPart /** originalpart */ ,
                int numOldStage /** numoldstage */ 
            );
            /** Decrease intermediate stages 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DecreaseIntermediateStages
            (
                NXOpen::Part * parentPart /** parentpart */ ,
                NXOpen::NXObject * originalPart /** originalpart */ ,
                int numOldStage /** numoldstage */ 
            );
            /** Insert intermediate stages 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void InsertIntermediateStages
            (
                NXOpen::Part * parentPart /** parentpart */ ,
                NXOpen::NXObject * originalPart /** originalpart */ ,
                NXOpen::NXObject * selectPart /** selectpart */ 
            );
            /** Delete intermediate stages 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DeleteIntermediateStages
            (
                NXOpen::Part * parentPart /** parentpart */ ,
                NXOpen::NXObject * originalPart /** originalpart */ ,
                NXOpen::NXObject * selectPart /** selectpart */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
