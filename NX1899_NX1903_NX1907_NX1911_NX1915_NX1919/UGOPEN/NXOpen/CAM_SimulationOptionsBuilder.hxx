#ifndef NXOpen_CAM_SIMULATIONOPTIONSBUILDER_HXX_INCLUDED
#define NXOpen_CAM_SIMULATIONOPTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SimulationOptionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class SimulationOptionsBuilder;
    }
    class Builder;
    namespace CAM
    {
        class CollisionConfigurationBuilder;
    }
    class NXColor;
    namespace CAM
    {
        class _SimulationOptionsBuilderBuilder;
        class SimulationOptionsBuilderImpl;
        /**
            Represents a @link NXOpen::CAM::SimulationOptionsBuilder NXOpen::CAM::SimulationOptionsBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::SIM::KinematicConfigurator::CreateSimulationOptionsBuilder  NXOpen::SIM::KinematicConfigurator::CreateSimulationOptionsBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  SimulationOptionsBuilder : public NXOpen::Builder
        {
            /** the dialog type */
            public: enum DialogType
            {
                DialogTypeSimulate/** simulate*/,
                DialogTypeMachineToolBuilder/** machine tool builder*/,
                DialogTypeSynchronize/** synchronize*/,
                DialogTypeInspection/** inspection*/
            };

            /**  @brief 
                        The modes of the simulation display.
                        - @link  NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeSuppressAll   NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeSuppressAll @endlink  will suppress display updates in graphics windows and NC program in Simulation Control Panel.
                        - @link  NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeSuppressGraphics   NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeSuppressGraphics @endlink  will suppress display updates in graphics windows.
                        - @link  NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeAll   NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayModeAll @endlink  will show all display updates in graphics windows and NC program in Simulation Control Panel.
                     

              */
            public: enum SimulationDisplayMode
            {
                SimulationDisplayModeSuppressAll/** suppress graphics and NC program updates */,
                SimulationDisplayModeSuppressGraphics/** suppress graphics updates */,
                SimulationDisplayModeAll/** show all */
            };

            /** Tool trace display mode */
            public: enum ToolTraceMode
            {
                ToolTraceModeMotionType/** Color the tool trace by motion type */,
                ToolTraceModeAcceleration/** Color the tool trace by velocity changes */,
                ToolTraceModeVelocity/** Color the tool trace by velocity ranges */
            };

            /** the enable value */
            public: enum Enable
            {
                EnableNo/** no */,
                EnableYes/** yes */
            };

            /** the ipw mode value 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::IpwUpdateMode CAM::SimulationOptionsBuilder::IpwUpdateMode@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::IpwUpdateMode instead.") IpwEnable
            {
                IpwEnableOff/** no*/,
                IpwEnableMotionBased/** motion based*/,
                IpwEnableLengthIncrement/** length increment*/
            };

            /** the ipw update value */
            public: enum IpwUpdateMode
            {
                IpwUpdateModeMotionBased/** motion based*/,
                IpwUpdateModeLengthIncrement/** length increment*/
            };

            /** The stationary options */
            public: enum Stationary
            {
                StationaryEath/** use earth stationary*/,
                StationaryPart/** use part stationary*/,
                StationaryTool/** use tool stationary*/
            };

            /** The ipw resolution options */
            public: enum Resolution
            {
                ResolutionFast/** use fast resolution*/,
                ResolutionNormal/** use normal resolution*/,
                ResolutionFine/** use fine resolution*/,
                ResolutionExtraFine/** use extra fine resolution*/
            };

            /** The ipw animation accuracy options */
            public: enum Accuracy
            {
                AccuracyFine/** use fine accuracy*/,
                AccuracyCoarse/** use coarse accuracy*/
            };

            /** The tool shape for checking options 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::ToolShapeType CAM::SimulationOptionsBuilder::ToolShapeType@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::ToolShapeType instead.") ToolShapeColl
            {
                ToolShapeCollUnknown/** unknown shape*/,
                ToolShapeCollParameter/** use parametric tool shape*/,
                ToolShapeCollAssembly/** use assembly tool shape*/
            };

            /** The tool shape for material removal options 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::ToolShapeType CAM::SimulationOptionsBuilder::ToolShapeType@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::ToolShapeType instead.") ToolShapeMR
            {
                ToolShapeMRParameter/** use parametric tool shape*/ = 1,
                ToolShapeMRAssembly/** use assembly tool shape*/
            };

            /** The tool shape for checking and material removal options */
            public: enum ToolShapeType
            {
                ToolShapeTypeParameter/** use parametric tool shape*/ = 1,
                ToolShapeTypeAssembly/** use assembly tool shape*/
            };

            /** Gouge Check Stock options */
            public: enum StockType
            {
                StockTypeAutomatic/** use automatic stock from OP*/,
                StockTypeUserDefined/** use user defined stock*/
            };

            private: SimulationOptionsBuilderImpl * m_simulationoptionsbuilder_impl;
            private: friend class  _SimulationOptionsBuilderBuilder;
            protected: SimulationOptionsBuilder();
            public: ~SimulationOptionsBuilder();
            /**Returns  the enable display 
             <br>  @deprecated Deprecated in NX10.0.2.  Use @link CAM::SimulationOptionsBuilder::SimulationDisplay CAM::SimulationOptionsBuilder::SimulationDisplay@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX10.0.2.  Use CAM::SimulationOptionsBuilder::SimulationDisplay instead.") NXOpen::CAM::SimulationOptionsBuilder::Enable EnableDisplay
            (
            );
            /**Sets  the enable display 
             <br>  @deprecated Deprecated in NX10.0.2.  Use @link CAM::SimulationOptionsBuilder::SetSimulationDisplay CAM::SimulationOptionsBuilder::SetSimulationDisplay@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NX_DEPRECATED("Deprecated in NX10.0.2.  Use CAM::SimulationOptionsBuilder::SetSimulationDisplay instead.") void SetEnableDisplay
            (
                NXOpen::CAM::SimulationOptionsBuilder::Enable enableValue /** enablevalue */ 
            );
            /**Returns  the option to control the display update. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayMode SimulationDisplay
            (
            );
            /**Sets  the option to control the display update. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetSimulationDisplay
            (
                NXOpen::CAM::SimulationOptionsBuilder::SimulationDisplayMode simulationDisplayValue /** simulationdisplayvalue */ 
            );
            /**Returns  the display stationary 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::Stationary DisplayStationary
            (
            );
            /**Sets  the display stationary 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetDisplayStationary
            (
                NXOpen::CAM::SimulationOptionsBuilder::Stationary displayStationary /** displaystationary */ 
            );
            /**Returns  the history buffer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int HistoryBuffer
            (
            );
            /**Sets  the history buffer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetHistoryBuffer
            (
                int historyBuffer /** historybuffer */ 
            );
            /**Returns  the stop on history buffer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool StopOnHistoryBuffer
            (
            );
            /**Sets  the stop on history buffer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetStopOnHistoryBuffer
            (
                bool stopOnHistoryBuffer /** -1 = unlimited */
            );
            /**Returns  the tool trace size 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int ToolTraceSize
            (
            );
            /**Sets  the tool trace size 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolTraceSize
            (
                int toolTraceSize /** -1 = unlimited */
            );
            /**Returns  the tool trace display mode 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::ToolTraceMode ToolTraceModeValue
            (
            );
            /**Sets  the tool trace display mode 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolTraceModeValue
            (
                NXOpen::CAM::SimulationOptionsBuilder::ToolTraceMode toolTraceMode /** tooltracemode */ 
            );
            /**Returns  the lower tool trace velocity threshold 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: double ToolTraceLowerVelocityThreshold
            (
            );
            /**Sets  the lower tool trace velocity threshold 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolTraceLowerVelocityThreshold
            (
                double velocity /** velocity */ 
            );
            /**Returns  the upper tool trace velocity threshold 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: double ToolTraceUpperVelocityThreshold
            (
            );
            /**Sets  the upper tool trace velocity threshold 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolTraceUpperVelocityThreshold
            (
                double velocity /** velocity */ 
            );
            /**Returns  the tool trace dragging state 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ToolTraceDragging
            (
            );
            /**Sets  the tool trace dragging state 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolTraceDragging
            (
                bool dragging /** dragging */ 
            );
            /**Returns  the enable collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::EnableMachineCollision CAM::SimulationOptionsBuilder::EnableMachineCollision@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::EnableMachineCollision instead.") NXOpen::CAM::SimulationOptionsBuilder::Enable EnableCollision
            (
            );
            /**Sets  the enable collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetEnableMachineCollision CAM::SimulationOptionsBuilder::SetEnableMachineCollision@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetEnableMachineCollision instead.") void SetEnableCollision
            (
                NXOpen::CAM::SimulationOptionsBuilder::Enable enableValue /** enablevalue */ 
            );
            /**Returns  the enable ipw 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::EnableMaterialRemoval CAM::SimulationOptionsBuilder::EnableMaterialRemoval@endlink  and @link CAM::SimulationOptionsBuilder::IpwUpdate CAM::SimulationOptionsBuilder::IpwUpdate@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::EnableMaterialRemoval and CAM::SimulationOptionsBuilder::IpwUpdate instead.") NXOpen::CAM::SimulationOptionsBuilder::IpwEnable EnableIpw
            (
            );
            /**Sets  the enable ipw 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval@endlink  and @link CAM::SimulationOptionsBuilder::SetIpwUpdate CAM::SimulationOptionsBuilder::SetIpwUpdate@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval and CAM::SimulationOptionsBuilder::SetIpwUpdate instead.") void SetEnableIpw
            (
                NXOpen::CAM::SimulationOptionsBuilder::IpwEnable enableValue /** enablevalue */ 
            );
            /**Returns  the ipw resolution 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::Resolution IpwResolution
            (
            );
            /**Sets  the ipw resolution 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetIpwResolution
            (
                NXOpen::CAM::SimulationOptionsBuilder::Resolution ipwResolution /** ipwresolution */ 
            );
            /**Returns  the animation accuracy 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::Accuracy AnimationAccuracy
            (
            );
            /**Sets  the animation accuracy 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetAnimationAccuracy
            (
                NXOpen::CAM::SimulationOptionsBuilder::Accuracy animationAccuracy /** animationaccuracy */ 
            );
            /**Returns  the ipw color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * IpwColor
            (
            );
            /**Sets  the ipw color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetIpwColor
            (
                NXOpen::NXColor * ipwColor /** ipwcolor */ 
            );
            /**Returns  the translucency value 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int TranslucencyValue
            (
            );
            /**Sets  the translucency value 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetTranslucencyValue
            (
                int translucencyValue /** translucencyvalue */ 
            );
            /**Returns  the save as partfile 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool SaveAsPartfile
            (
            );
            /**Sets  the save as partfile 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetSaveAsPartfile
            (
                bool saveAsComp /** saveascomp */ 
            );
            /**Returns  the stop on rapid through ipw 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::StopOnCollision CAM::SimulationOptionsBuilder::StopOnCollision@endlink  instead. <br>  

             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::StopOnCollision instead.") bool StopOnRapidThroughIpw
            (
            );
            /**Sets  the stop on rapid through ipw 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetStopOnCollision CAM::SimulationOptionsBuilder::SetStopOnCollision@endlink  instead. <br>  

             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetStopOnCollision instead.") void SetStopOnRapidThroughIpw
            (
                bool stopOnRapidThroughIpw /** stoponrapidthroughipw */ 
            );
            /**Returns  the hide blank geometry 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: bool HideBlankGeometry
            (
            );
            /**Sets  the hide blank geometry 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetHideBlankGeometry
            (
                bool hideBlankGeo /** hideblankgeo */ 
            );
            /**Returns  the hide part geometry 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: bool HidePartGeometry
            (
            );
            /**Sets  the hide part geometry 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetHidePartGeometry
            (
                bool hidePartGeo /** hidepartgeo */ 
            );
            /**Returns  the check for tool holder collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::CheckToolHolderIpw CAM::SimulationOptionsBuilder::CheckToolHolderIpw@endlink  or @link CAM::SimulationOptionsBuilder::CheckToolHolderGougeCheck CAM::SimulationOptionsBuilder::CheckToolHolderGougeCheck@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::CheckToolHolderIpw or CAM::SimulationOptionsBuilder::CheckToolHolderGougeCheck instead.") bool CheckToolHolder
            (
            );
            /**Sets  the check for tool holder collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetCheckToolHolderIpw CAM::SimulationOptionsBuilder::SetCheckToolHolderIpw@endlink  or @link CAM::SimulationOptionsBuilder::SetCheckToolHolderGougeCheck CAM::SimulationOptionsBuilder::SetCheckToolHolderGougeCheck@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetCheckToolHolderIpw or CAM::SimulationOptionsBuilder::SetCheckToolHolderGougeCheck instead.") void SetCheckToolHolder
            (
                bool checkToolHolder /** checktoolholder */ 
            );
            /**Returns  the option to enable tool holder collision checking for tool/ipw collisions 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool CheckToolHolderIpw
            (
            );
            /**Sets  the option to enable tool holder collision checking for tool/ipw collisions 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetCheckToolHolderIpw
            (
                bool checkToolHolder /** checktoolholder */ 
            );
            /**Returns  the option to enable tool holder collision checking for gouge check 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool CheckToolHolderGougeCheck
            (
            );
            /**Sets  the option to enable tool holder collision checking for gouge check 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetCheckToolHolderGougeCheck
            (
                bool checkToolHolder /** checktoolholder */ 
            );
            /**Returns  the max length incr 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxLengthIncr
            (
            );
            /**Sets  the max length incr 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetMaxLengthIncr
            (
                double maxLengthIncr /** maxlengthincr */ 
            );
            /**Returns  the max angular incr 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxAngularIncr
            (
            );
            /**Sets  the max angular incr 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetMaxAngularIncr
            (
                double maxAngularIncr /** maxangularincr */ 
            );
            /**Returns  the max time incr 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: double MaxTimeIncr
            (
            );
            /**Sets  the max time incr 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetMaxTimeIncr
            (
                double maxTimeIncr /** maxtimeincr */ 
            );
            /**Returns  the display by time 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool DisplayByTime
            (
            );
            /**Sets  the display by time 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetDisplayByTime
            (
                bool displayByTime /** displaybytime */ 
            );
            /**Returns  the minimum simulation time 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double MinSimulationTime
            (
            );
            /**Sets  the minimum simulation time 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetMinSimulationTime
            (
                double minSimTime /** minsimtime */ 
            );
            /**Returns  the chordal tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double ChordalTolerance
            (
            );
            /**Sets  the chordal tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetChordalTolerance
            (
                double chordalTolerance /** chordaltolerance */ 
            );
            /**Returns  the stop on collision 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool StopOnCollision
            (
            );
            /**Sets  the stop on collision 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetStopOnCollision
            (
                bool stopOnCollision /** stoponcollision */ 
            );
            /**Returns  the check limit violation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckLimitViolation
            (
            );
            /**Sets  the check limit violation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetCheckLimitViolation
            (
                bool checkLimitViolation /** checklimitviolation */ 
            );
            /**Returns  the stop on limit violation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool StopOnLimitViolation
            (
            );
            /**Sets  the stop on limit violation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetStopOnLimitViolation
            (
                bool stopOnLimitViolation /** stoponlimitviolation */ 
            );
            /**Returns  the cache nc program 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool CacheNcProgram
            (
            );
            /**Sets  the cache nc program 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetCacheNcProgram
            (
                bool cacheNcProgram /** cachencprogram */ 
            );
            /**Returns  the interpret G41/42 as contact contour 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool InterpretContactContour
            (
            );
            /**Sets  the interpret G41/42 as contact contour 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetInterpretContactContour
            (
                bool interpretContactContour /** interpretcontactcontour */ 
            );
            /**Returns  the option to activate the machining time analysis 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: bool AnalyzeMachiningTime
            (
            );
            /**Sets  the option to activate the machining time analysis 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetAnalyzeMachiningTime
            (
                bool analyzeMachiningTime /** analyzemachiningtime */ 
            );
            /**Returns  the option to detect the material/air cuts during the cutting time 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : None */
            public: bool DetectAirCuttingTime
            (
            );
            /**Sets  the option to detect the material/air cuts during the cutting time 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetDetectAirCuttingTime
            (
                bool detectAirCuttingTime /** detectaircuttingtime */ 
            );
            /**Returns  the collision configuration builder 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NXOpen::CAM::CollisionConfigurationBuilder * CollisionConfigurationBuilder
            (
            );
            /**Returns  the tool shape for collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::ToolShape CAM::SimulationOptionsBuilder::ToolShape@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::ToolShape instead.") NXOpen::CAM::SimulationOptionsBuilder::ToolShapeColl Collshape
            (
            );
            /**Sets  the tool shape for collision 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetToolShape CAM::SimulationOptionsBuilder::SetToolShape@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetToolShape instead.") void SetCollshape
            (
                NXOpen::CAM::SimulationOptionsBuilder::ToolShapeColl toolShape /** toolshape */ 
            );
            /**Returns  the tool shape for material removal 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::ToolShape CAM::SimulationOptionsBuilder::ToolShape@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::ToolShape instead.") NXOpen::CAM::SimulationOptionsBuilder::ToolShapeMR Mrshape
            (
            );
            /**Sets  the tool shape for material removal 
             <br>  @deprecated Deprecated in NX12.0.1.  Use @link CAM::SimulationOptionsBuilder::SetToolShape CAM::SimulationOptionsBuilder::SetToolShape@endlink  instead. <br>  

             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NX_DEPRECATED("Deprecated in NX12.0.1.  Use CAM::SimulationOptionsBuilder::SetToolShape instead.") void SetMrshape
            (
                NXOpen::CAM::SimulationOptionsBuilder::ToolShapeMR toolShape /** toolshape */ 
            );
            /**Returns  the tool shape for collision checking and material removal 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::ToolShapeType ToolShape
            (
            );
            /**Sets  the tool shape for collision checking and material removal 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolShape
            (
                NXOpen::CAM::SimulationOptionsBuilder::ToolShapeType toolShape /** toolshape */ 
            );
            /**Returns  the stock setting 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::StockType StockSetting
            (
            );
            /**Sets  the stock setting 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStockSetting
            (
                NXOpen::CAM::SimulationOptionsBuilder::StockType stockmode /** stockmode */ 
            );
            /**Returns  the stock value  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double StockValue
            (
            );
            /**Sets  the stock value  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStockValue
            (
                double stock /** stock */ 
            );
            /**Returns  the option for conditional stop 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool StopOnM1
            (
            );
            /**Sets  the option for conditional stop 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetStopOnM1
            (
                bool bConditionalStop /** bconditionalstop */ 
            );
            /**Returns  the skip all levels option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool SkipAllLevels
            (
            );
            /**Sets  the skip all levels option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetSkipAllLevels
            (
                bool bSkipAllLevels /** bskipalllevels */ 
            );
            /** The individual skip level 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool GetSkipLevel
            (
                int nLevel /** nlevel */ 
            );
            /** Sets the individual skip level 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetSkipLevel
            (
                int nLevel /** nlevel */ ,
                bool bValue /** bvalue */ 
            );
            /**Returns  the option to enable machine collision detection with the defined pairs 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool EnableMachineCollision
            (
            );
            /**Sets  the option to enable machine collision detection with the defined pairs 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetEnableMachineCollision
            (
                bool checkCollision /** checkcollision */ 
            );
            /**Returns  the option to enable collision detection between the active tool and the part 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool ToolPartCollision
            (
            );
            /**Sets  the option to enable collision detection between the active tool and the part 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolPartCollision
            (
                bool checkCollision /** checkcollision */ 
            );
            /**Returns  the option to enable collision detection between the active tool and the IPW 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool ToolIpwCollision
            (
            );
            /**Sets  the option to enable collision detection between the active tool and the IPW 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetToolIpwCollision
            (
                bool checkCollision /** checkcollision */ 
            );
            /**Returns  the option to display the IPW if @link CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval@endlink  is set to true
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool DisplayIpw
            (
            );
            /**Sets  the option to display the IPW if @link CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval CAM::SimulationOptionsBuilder::SetEnableMaterialRemoval@endlink  is set to true
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetDisplayIpw
            (
                bool displayIpw /** displayipw */ 
            );
            /**Returns  the option to enable material removal 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool EnableMaterialRemoval
            (
            );
            /**Sets  the option to enable material removal 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetEnableMaterialRemoval
            (
                bool enableValue /** enablevalue */ 
            );
            /**Returns  the update mode for the ipw 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SimulationOptionsBuilder::IpwUpdateMode IpwUpdate
            (
            );
            /**Sets  the update mode for the ipw 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: void SetIpwUpdate
            (
                NXOpen::CAM::SimulationOptionsBuilder::IpwUpdateMode updateMode /** updatemode */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
