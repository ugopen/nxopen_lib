#ifndef NXOpen_TOOLING_PROGRESSIVEDIEMANAGER_HXX_INCLUDED
#define NXOpen_TOOLING_PROGRESSIVEDIEMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ProgressiveDieManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ProgressiveDieManager;
    }
    namespace Tooling
    {
        class ToolingManager;
    }
    namespace Features
    {
        class FeatureGroup;
    }
    namespace Tooling
    {
        class AddCommentBuilder;
    }
    namespace Tooling
    {
        class BackingPadBuilder;
    }
    namespace Tooling
    {
        class ConceptDieBaseBuilder;
    }
    namespace Tooling
    {
        class DefineCamBuilder;
    }
    namespace Tooling
    {
        class DefineLifterBuilder;
    }
    namespace Tooling
    {
        class DieCavityAndSlugHoleBuilder;
    }
    namespace Tooling
    {
        class DieInsertBuilder;
    }
    namespace Tooling
    {
        class GeneralInsertBuilder;
    }
    namespace Tooling
    {
        class HemFixerBuilder;
    }
    namespace Tooling
    {
        class HoleDatumSymbolBuilder;
    }
    namespace Tooling
    {
        class InsertEditToolsBuilder;
    }
    namespace Tooling
    {
        class PiercingInsertMiniToolsBuilder;
    }
    namespace Tooling
    {
        class PunchInsertBuilder;
    }
    namespace Tooling
    {
        class RemoveHolesBuilder;
    }
    namespace Tooling
    {
        class RenameAndExportComponentBuilder;
    }
    namespace Tooling
    {
        class RunSimulationBuilder;
    }
    namespace Tooling
    {
        class ShimBuilder;
    }
    namespace Tooling
    {
        class ShimInnerProfileSetBuilder;
    }
    namespace Tooling
    {
        class SlugRetentionBuilder;
    }
    namespace Tooling
    {
        class SmartScrewUpdateBuilder;
    }
    namespace Tooling
    {
        class SpecialFormingBuilder;
    }
    namespace Tooling
    {
        class SpecialPiercingInsertBuilder;
    }
    namespace Tooling
    {
        class SplitInsertBuilder;
    }
    namespace Tooling
    {
        class StripperVentingBuilder;
    }
    namespace Tooling
    {
        class SwapPartBuilder;
    }
    namespace Tooling
    {
        class UnfoldingSimulationBuilder;
    }
    namespace Tooling
    {
        class UserDefinedMotionBuilder;
    }
    namespace Tooling
    {
        class ProgressiveDieManagerImpl;
        /** Provides create builder methods for Progressive Die.   <br> To obtain an instance of this class, refer to @link NXOpen::Tooling::ToolingManager  NXOpen::Tooling::ToolingManager @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ProgressiveDieManager
        {
            private: ProgressiveDieManagerImpl * m_progressivediemanager_impl;
            private: NXOpen::Tooling::ToolingManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ProgressiveDieManager(NXOpen::Tooling::ToolingManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ProgressiveDieManager();
            /** Creates Remove Holes builder. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::RemoveHolesBuilder * CreateRemoveHolesBuilder
            (
            );
            /** Creates Run Simulation builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") OR ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::RunSimulationBuilder * CreateRunSimulationBuilder
            (
            );
            /** Creates Define Cam builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") OR ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::DefineCamBuilder * CreateDefineCamBuilder
            (
            );
            /** Creates Define Lifter builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") OR ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::DefineLifterBuilder * CreateDefineLifterBuilder
            (
            );
            /** Creates backing pad builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::BackingPadBuilder * CreateBackingPadBuilder
            (
            );
            /** Creates slug retention builder. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::SlugRetentionBuilder * CreateSlugRetentionBuilder
            (
                NXOpen::Features::FeatureGroup * featureSet /** feature set */ 
            );
            /** Creates a @link NXOpen::Tooling::GeneralInsertBuilder NXOpen::Tooling::GeneralInsertBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::GeneralInsertBuilder * CreateGeneralInsertBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::HemFixerBuilder NXOpen::Tooling::HemFixerBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::HemFixerBuilder * CreateHemFixerBuilder
            (
                NXOpen::Features::FeatureGroup * featureSet /** feature set */ 
            );
            /** Creates a @link NXOpen::Tooling::ShimBuilder NXOpen::Tooling::ShimBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ShimBuilder * CreateShimBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::ShimInnerProfileSetBuilder NXOpen::Tooling::ShimInnerProfileSetBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ShimInnerProfileSetBuilder * CreateShimInnerProfileSetBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::StripperVentingBuilder NXOpen::Tooling::StripperVentingBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::StripperVentingBuilder * CreateStripperVentingBuilder
            (
                NXOpen::Features::FeatureGroup * featureSet /** feature set */ 
            );
            /** Creates a @link NXOpen::Tooling::UnfoldingSimulationBuilder NXOpen::Tooling::UnfoldingSimulationBuilder@endlink  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::UnfoldingSimulationBuilder * CreateUnfoldingSimulationBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::DieInsertBuilder NXOpen::Tooling::DieInsertBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::DieInsertBuilder * CreateDieInsertBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::DieCavityAndSlugHoleBuilder NXOpen::Tooling::DieCavityAndSlugHoleBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::DieCavityAndSlugHoleBuilder * CreateDieCavityAndSlugHoleBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::PunchInsertBuilder NXOpen::Tooling::PunchInsertBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::PunchInsertBuilder * CreatePunchInsertBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::PiercingInsertMiniToolsBuilder NXOpen::Tooling::PiercingInsertMiniToolsBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::PiercingInsertMiniToolsBuilder * CreatePiercingInsertMiniToolsBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::SmartScrewUpdateBuilder NXOpen::Tooling::SmartScrewUpdateBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::SmartScrewUpdateBuilder * CreateSmartScrewUpdateBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::SpecialPiercingInsertBuilder NXOpen::Tooling::SpecialPiercingInsertBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::SpecialPiercingInsertBuilder * CreateSpecialPiercingInsertBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::SpecialFormingBuilder NXOpen::Tooling::SpecialFormingBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::SpecialFormingBuilder * CreateSpecialFormingBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::HoleDatumSymbolBuilder NXOpen::Tooling::HoleDatumSymbolBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::HoleDatumSymbolBuilder * CreateHoleDatumSymbolBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::RenameAndExportComponentBuilder NXOpen::Tooling::RenameAndExportComponentBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::RenameAndExportComponentBuilder * CreateRenameAndExportComponentBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::InsertEditToolsBuilder NXOpen::Tooling::InsertEditToolsBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::InsertEditToolsBuilder * CreateInsertEditToolsBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::UserDefinedMotionBuilder NXOpen::Tooling::UserDefinedMotionBuilder@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") OR ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::UserDefinedMotionBuilder * CreateUserDefinedMotionBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::SplitInsertBuilder NXOpen::Tooling::SplitInsertBuilder@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::SplitInsertBuilder * CreateSplitInsertBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::ConceptDieBaseBuilder NXOpen::Tooling::ConceptDieBaseBuilder@endlink  
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::ConceptDieBaseBuilder * CreateConceptDieBaseBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::SwapPartBuilder NXOpen::Tooling::SwapPartBuilder@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::SwapPartBuilder * CreateSwapPartBuilder
            (
            );
            /** Creates a @link NXOpen::Tooling::AddCommentBuilder NXOpen::Tooling::AddCommentBuilder@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Tooling::AddCommentBuilder * CreateAddCommentBuilder
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
