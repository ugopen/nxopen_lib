#ifndef NXOpen_FACET_FILLMESHBUILDER_HXX_INCLUDED
#define NXOpen_FACET_FILLMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_FillMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class FillMeshBuilder;
    }
    class Builder;
    class NXObject;
    class Point;
    class SelectNXObjectList;
    namespace Facet
    {
        class _FillMeshBuilderBuilder;
        class FillMeshBuilderImpl;
        /** This function fills one or more holes in the selected facet bodies to make convergent bodies solid   <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateFillMeshBuilder  NXOpen::Facet::FacetModelingCollection::CreateFillMeshBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        EdgeSelectionMethod </td> <td> 
         
        UserSelected </td> </tr> 

        <tr><td> 
         
        EditCopy </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        MaxEdges </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SmoothnessOption </td> <td> 
         
        Linear </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  FillMeshBuilder : public NXOpen::Builder
        {
            /** Different types of hole filling are available */
            public: enum Types
            {
                TypesFillHole/** fill hole */ ,
                TypesCloseNotch/** close notch */ ,
                TypesFillIsland/** fill island */ ,
                TypesConnectHoles/** connect holes */ ,
                TypesBridgeGap/** bridge gap */ 
            };

            /** Different ways to select an edge */
            public: enum EdgeOptionMenu
            {
                EdgeOptionMenuAll/** all */ ,
                EdgeOptionMenuUserSelected/** user selected */ ,
                EdgeOptionMenuByNumberofEdges/** by numberof edges */ 
            };

            /** Smoothness options */
            public: enum SmoothnessOptionMenu
            {
                SmoothnessOptionMenuLinear/** linear */ ,
                SmoothnessOptionMenuRefined/** refined */ ,
                SmoothnessOptionMenuTangentBased/** tangent based */ ,
                SmoothnessOptionMenuCurvatureBased/** curvature based */ 
            };

             /** Contains facet vertex information. 
             <br>  Created in NX1872.0.0.  <br>  
            */
            public:
            struct FacetVertexData
            {
                public: /** The face that facet belongs to. */NXOpen::NXObject * Face;
                public: /** The facet index for NX facet body. */int NxFacetIndex;
                public: /** The 3d point location on the facet body. */NXOpen::Point3d PointCoord;
                public: FacetVertexData() :
                    Face(),
                    NxFacetIndex(),
                    PointCoord()
                {
                }
                /** Constructor for the FacetVertexData struct. */ 
                public: FacetVertexData(NXOpen::NXObject * faceInitial /** The face that facet belongs to. */, 
                        int nxFacetIndexInitial /** The facet index for NX facet body. */, 
                        const NXOpen::Point3d &pointCoordInitial /** The 3d point location on the facet body. */) :
                    Face(faceInitial),
                    NxFacetIndex(nxFacetIndexInitial),
                    PointCoord(pointCoordInitial)
                {
                }
            };

            private: FillMeshBuilderImpl * m_fillmeshbuilder_impl;
            private: friend class  _FillMeshBuilderBuilder;
            protected: FillMeshBuilder();
            public: ~FillMeshBuilder();
            /**Returns  the facet body 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FacetBodies
            (
            );
            /**Returns  the edge selection method 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FillMeshBuilder::EdgeOptionMenu EdgeSelectionMethod
            (
            );
            /**Sets  the edge selection method 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetEdgeSelectionMethod
            (
                NXOpen::Facet::FillMeshBuilder::EdgeOptionMenu edgeSelectionMethod /** edgeselectionmethod */ 
            );
            /**Returns  the edge hole 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * EdgeHole
            (
            );
            /**Returns  the max edges 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxEdges
            (
            );
            /**Sets  the max edges 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetMaxEdges
            (
                int maxEdges /** maxedges */ 
            );
            /**Returns  the vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Vertex1
            (
            );
            /**Sets  the vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetVertex1
            (
                NXOpen::Point * vertex1 /** vertex1 */ 
            );
            /**Returns  the vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Vertex2
            (
            );
            /**Sets  the vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetVertex2
            (
                NXOpen::Point * vertex2 /** vertex2 */ 
            );
            /**Returns  the outer hole 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * OuterHole
            (
            );
            /**Returns  the inner hole 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * InnerHole
            (
            );
            /**Returns  the start hole 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * StartHole
            (
            );
            /**Returns  the end hole 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * EndHole
            (
            );
            /**Returns  the start edge vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * StartEdgeVertex1
            (
            );
            /**Sets  the start edge vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetStartEdgeVertex1
            (
                NXOpen::Point * startEdgeVertex1 /** startedgevertex1 */ 
            );
            /**Returns  the start edge vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * StartEdgeVertex2
            (
            );
            /**Sets  the start edge vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetStartEdgeVertex2
            (
                NXOpen::Point * startEdgeVertex2 /** startedgevertex2 */ 
            );
            /** Flips the start edge range 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void FlipRangeStart
            (
            );
            /**Returns  the end edge vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * EndEdgeVertex1
            (
            );
            /**Sets  the end edge vertex1 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetEndEdgeVertex1
            (
                NXOpen::Point * endEdgeVertex1 /** endedgevertex1 */ 
            );
            /**Returns  the end edge vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * EndEdgeVertex2
            (
            );
            /**Sets  the end edge vertex2 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetEndEdgeVertex2
            (
                NXOpen::Point * endEdgeVertex2 /** endedgevertex2 */ 
            );
            /** Flips the end edge range 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void FlipRangeEnd
            (
            );
            /**Returns  the smoothness option 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FillMeshBuilder::SmoothnessOptionMenu SmoothnessOption
            (
            );
            /**Sets  the smoothness option 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSmoothnessOption
            (
                NXOpen::Facet::FillMeshBuilder::SmoothnessOptionMenu smoothnessOption /** smoothnessoption */ 
            );
            /**Returns  the edit copy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool EditCopy
            (
            );
            /**Sets  the edit copy 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetEditCopy
            (
                bool editCopy /** editcopy */ 
            );
            /**Returns  the type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FillMeshBuilder::Types Type
            (
            );
            /**Sets  the type 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetType
            (
                NXOpen::Facet::FillMeshBuilder::Types type /** type */ 
            );
            /** Sets first vertex to close the notch. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetCloseNotchVertex1
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
            /** Sets second vertex to close the notch. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetCloseNotchVertex2
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
            /** Sets first start edge vertex to bridge the gap. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetBridgeGapStartEdgeVertex1
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
            /** Sets second start edge vertex to bridge the gap. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetBridgeGapStartEdgeVertex2
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
            /** Sets first end edge vertex to bridge the gap. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetBridgeGapEndEdgeVertex1
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
            /** Sets second end edge vertex to bridge the gap. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetBridgeGapEndEdgeVertex2
            (
                const NXOpen::Facet::FillMeshBuilder::FacetVertexData & facetVertexData /**picked facet vertex info */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
