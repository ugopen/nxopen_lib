#ifndef NXOpen_TOOLING_ENLARGESURFACEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_ENLARGESURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_EnlargeSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_SurfaceRangeBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class EnlargeSurfaceBuilder;
    }
    class Builder;
    class Face;
    namespace GeometricUtilities
    {
        class SurfaceRangeBuilder;
    }
    class NXColor;
    class RegionPointList;
    class ScCollector;
    class SelectNXObjectList;
    namespace Tooling
    {
        class _EnlargeSurfaceBuilderBuilder;
        class EnlargeSurfaceBuilderImpl;
        /** Mold Wizard enlarge surface management builder, trims a enlarged surface to a boundary of edges,
                curves, datum planes or faces. Optionally creates output trimmed sheet body as a patch surface.  <br> To create a new instance of this class, use @link NXOpen::Tooling::EnlargeSurfaceCollection::CreateEnlargeSurfaceBuilder  NXOpen::Tooling::EnlargeSurfaceCollection::CreateEnlargeSurfaceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AsPatchSurface </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ChangeAllSizes </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ConvertType </td> <td> 
         
        WithCopies </td> </tr> 

        <tr><td> 
         
        CutToBoundary </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        RegionOption </td> <td> 
         
        Keep </td> </tr> 

        <tr><td> 
         
        SurfaceRange.AnchorPosition </td> <td> 
         
        Vertex1 </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  EnlargeSurfaceBuilder : public NXOpen::Builder
        {
            /** represents the keep discard options for selected region. */
            public: enum KeepDiscardOption
            {
                KeepDiscardOptionKeep/** selected region will be kept. */,
                KeepDiscardOptionDiscard/** selected region will be discarded. */
            };

            /** The option to convert to have copies or no copies for all selected sheets. */
            public: enum ConvertTypeOption
            {
                ConvertTypeOptionWithCopies/** with copies */ ,
                ConvertTypeOptionNoCopies/** no copies */ 
            };

            private: EnlargeSurfaceBuilderImpl * m_enlargesurfacebuilder_impl;
            private: friend class  _EnlargeSurfaceBuilderBuilder;
            protected: EnlargeSurfaceBuilder();
            public: ~EnlargeSurfaceBuilder();
            /**Returns  the selection of target to create enlarge surface, body face only. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetSelection
            (
            );
            /**Returns  the selection of boundary to trim the target surface, it could be face, datum plane, edge and curve. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * BoundarySelection
            (
            );
            /**Returns  the selection of region, which will be kept or discarded as the result of enlarged surface. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::RegionPointList * RegionSelection
            (
            );
            /**Returns  the value of the option, which specifies to keep or discard the selected region. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::EnlargeSurfaceBuilder::KeepDiscardOption RegionOption
            (
            );
            /**Sets  the value of the option, which specifies to keep or discard the selected region. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRegionOption
            (
                NXOpen::Tooling::EnlargeSurfaceBuilder::KeepDiscardOption regionOption /** regionoption */ 
            );
            /**Returns  the surface range data, which controls the enlarged parameters of surface. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::SurfaceRangeBuilder * SurfaceRange
            (
            );
            /**Returns  the value of option, which specifies when enlarging surface, whether to change all the sizes at the same time or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool ChangeAllSizes
            (
            );
            /**Sets  the value of option, which specifies when enlarging surface, whether to change all the sizes at the same time or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetChangeAllSizes
            (
                bool changeAllSizes /** changeallsizes */ 
            );
            /**Returns  the value of option, which specifies whether to cut the target to boundary objects or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool CutToBoundary
            (
            );
            /**Sets  the value of option, which specifies whether to cut the target to boundary objects or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCutToBoundary
            (
                bool cutToBoundary /** cuttoboundary */ 
            );
            /**Returns  the value of option, which specifies whether to set the result region as patch surface or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool AsPatchSurface
            (
            );
            /**Sets  the value of option, which specifies whether to set the result region as patch surface or not. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAsPatchSurface
            (
                bool asPatchSurface /** aspatchsurface */ 
            );
            /** Returns the value of patch surface color. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void GetColorValue
            (
                double* redValue /** red value between 0 and 1 */,
                double* greenValue /** green value between 0 and 1 */,
                double* blueValue /** blue value between 0 and 1 */
            );
            /** Sets the value of patch surface color. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetColorValue
            (
                double redValue /** red value between 0 and 1 */,
                double greenValue /** green value between 0 and 1 */,
                double blueValue /** blue value between 0 and 1 */
            );
            /**Returns  the color value of patch surface body. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * BodyColor
            (
            );
            /**Sets  the color value of patch surface body. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: void SetBodyColor
            (
                NXOpen::NXColor * patchColor /**the color index*/
            );
            /**Returns  the drag preview body data from builder according to face. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool DragData
            (
            );
            /**Sets  the drag preview body data from builder according to face. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDragData
            (
                bool setDragData /** setdragdata */ 
            );
            /**Returns  the reselect target face data from builder. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ReselTargetData
            (
            );
            /**Sets  the reselect target face data from builder. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetReselTargetData
            (
                bool setReselTargetData /** setreseltargetdata */ 
            );
            /** Sets the target face to target surface data. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetFace
            (
                NXOpen::Face * targetFace /** target face */
            );
            /** Sets the value of surface range to buider data according to range face. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRangeValue
            (
                NXOpen::Face * rangeFace /** range face */,
                const std::vector<double> & rangeValue /** array of u and v range value */
            );
            /** Initializes the surface data with face, and adds the data to builder. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddSurfaceData
            (
                NXOpen::Face * addFace /** face to add to surface data */
            );
            /** Erases the surface data from builder according to face. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void EraseSurfaceData
            (
                NXOpen::Face * eraseFace /** face to get surface data */
            );
            /** Initializes the planar face data with face, and adds the data to builder. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddPlanarFaceData
            (
                NXOpen::Face * planarFace /** face to add to planar face data */
            );
            /** Erases the planar face data from builder according to face. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void ErasePlanarFaceData
            (
                NXOpen::Face * planarFace /** face to get planar face data */
            );
            /** Create preview surface data from builder. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void CreatePreviewSurface
            (
            );
            /**Returns  the option to convert to have copies or no copies for all selected sheets. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::EnlargeSurfaceBuilder::ConvertTypeOption ConvertType
            (
            );
            /**Sets  the option to convert to have copies or no copies for all selected sheets. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetConvertType
            (
                NXOpen::Tooling::EnlargeSurfaceBuilder::ConvertTypeOption convertType /** converttype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
