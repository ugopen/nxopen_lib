#ifndef NXOpen_FEATURES_FILTERLATTICE2BUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_FILTERLATTICE2BUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FilterLattice2Builder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FilterLattice2Builder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _FilterLattice2BuilderBuilder;
        class FilterLattice2BuilderImpl;
        /** Removes rods of existing lattice bodies based on the specified filter cases. <br> To create a new instance of this class, use @link NXOpen::Features::LatticeFeatureCollection::CreateFilterLattice2Builder  NXOpen::Features::LatticeFeatureCollection::CreateFilterLattice2Builder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FilterByAngle </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FilterByLength </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FilterDanglingRods </td> <td> 
         
        None </td> </tr> 

        <tr><td> 
         
        MaximumRodLength.Value </td> <td> 
         
        20 (millimeters part), 0.8 (inches part) </td> </tr> 

        <tr><td> 
         
        MinimumAngle.Value </td> <td> 
         
        45 </td> </tr> 

        </table>  

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FilterLattice2Builder : public NXOpen::Features::FeatureBuilder
        {
            /** @brief  The type of dangling rods to be filtered.
                    <ul>
                        <li>Dangling rods will be kept.</li>
                        <li>All rods currently not being connected to lattice at both ends will be removed.</li>
                        <li>All rods not being connected to lattice at both ends will be removed iteratively until 
                        all rods are properly connected.</li>
                   </ul>
                     

              */
            public: enum FilterDanglingRodsType
            {
                FilterDanglingRodsTypeNone/** none */ ,
                FilterDanglingRodsTypeFirstLevel/** first level */ ,
                FilterDanglingRodsTypeIterative/** iterative */ 
            };

            private: FilterLattice2BuilderImpl * m_filterlattice2builder_impl;
            private: friend class  _FilterLattice2BuilderBuilder;
            protected: FilterLattice2Builder();
            public: ~FilterLattice2Builder();
            /**Returns  @brief  the lattice bodies to be filtered as per the criteria set.  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * LatticeBodies
            (
            );
            /**Returns  @brief  the filter by angle - whether to filter or not based on the angle of the rods to the print plane.  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilterByAngle
            (
            );
            /**Sets  @brief  the filter by angle - whether to filter or not based on the angle of the rods to the print plane.  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetFilterByAngle
            (
                bool filterByAngle /** filterbyangle */ 
            );
            /**Returns  @brief  the print plane normal - Removes all rods with an angle to print plane going below the 
                        specified threshold.  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * PrintPlaneNormal
            (
            );
            /**Sets  @brief  the print plane normal - Removes all rods with an angle to print plane going below the 
                        specified threshold.  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetPrintPlaneNormal
            (
                NXOpen::Direction * printPlaneNormal /** printplanenormal */ 
            );
            /**Returns   @brief  the minimum angle - the minimum acceptable angle between the rod and the print plane. 
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MinimumAngle
            (
            );
            /**Returns  @brief  the filter by length - whether to removes all rods with a length exceeding the specified 
                    threshold. This reduces the odds that they break.
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilterByLength
            (
            );
            /**Sets  @brief  the filter by length - whether to removes all rods with a length exceeding the specified 
                    threshold. This reduces the odds that they break.
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetFilterByLength
            (
                bool filterByLength /** filterbylength */ 
            );
            /**Returns  @brief  the maximum rod length - Removes all rods with a length exceeding the specified threshold.
                        This reduces the odds that they break.
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaximumRodLength
            (
            );
            /**Returns  @brief  the filter dangling rods - whether to remove the dangling rods by the specified criteria or not.
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FilterLattice2Builder::FilterDanglingRodsType FilterDanglingRods
            (
            );
            /**Sets  @brief  the filter dangling rods - whether to remove the dangling rods by the specified criteria or not.
                     

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetFilterDanglingRods
            (
                NXOpen::Features::FilterLattice2Builder::FilterDanglingRodsType filterDanglingRods /** filterdanglingrods */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
