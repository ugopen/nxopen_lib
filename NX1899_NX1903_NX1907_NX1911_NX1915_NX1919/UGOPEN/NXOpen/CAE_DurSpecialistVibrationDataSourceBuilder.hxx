#ifndef NXOpen_CAE_DURSPECIALISTVIBRATIONDATASOURCEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTVIBRATIONDATASOURCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistVibrationDataSourceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistCorrelationInputDefinition.hxx>
#include <NXOpen/CAE_DurSpecialistVibrationInputDefinition.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistVibrationDataSourceBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistCorrelationInputDefinition;
    }
    namespace CAE
    {
        class DurSpecialistVibrationInputDefinition;
    }
    namespace CAE
    {
        class ModeSet;
    }
    class Expression;
    namespace CAE
    {
        class _DurSpecialistVibrationDataSourceBuilderBuilder;
        class DurSpecialistVibrationDataSourceBuilderImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistVibrationDataSource NXOpen::CAE::DurSpecialistVibrationDataSource@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistVibrationDataSourceCollection::CreateVibrationDataSourceBuilder  NXOpen::CAE::DurSpecialistVibrationDataSourceCollection::CreateVibrationDataSourceBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistVibrationDataSourceBuilder : public NXOpen::Builder
        {
            /** the Mode Set modes */
            public: enum ModeType
            {
                ModeTypeFree/** use free-free mode */,
                ModeTypeFixed/** use fixed-fixed mode */
            };

            /** the Modal Participation Factors source */
            public: enum Source
            {
                SourceFile/** use selected file */,
                SourceModeSet/** use mode set */
            };

            private: DurSpecialistVibrationDataSourceBuilderImpl * m_durspecialistvibrationdatasourcebuilder_impl;
            private: friend class  _DurSpecialistVibrationDataSourceBuilderBuilder;
            protected: DurSpecialistVibrationDataSourceBuilder();
            public: ~DurSpecialistVibrationDataSourceBuilder();
            /**Returns  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the file type. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModeSet * ModeSet
            (
            );
            /**Sets  the file type. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetModeSet
            (
                NXOpen::CAE::ModeSet * theModeSet /** themodeset */ 
            );
            /**Returns  the mode of the mode set. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType Mode
            (
            );
            /**Sets  the mode of the mode set. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetMode
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType mode /** mode */ 
            );
            /**Returns  the modal participation factors read flag. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReadMpf
            (
            );
            /**Sets  the modal participation factors read flag. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetReadMpf
            (
                bool flag /** flag */ 
            );
            /**Returns  the modal participation factors source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::Source MpfSource
            (
            );
            /**Sets  the modal participation factors source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetMpfSource
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::Source source /** source */ 
            );
            /**Returns  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FilePath
            (
            );
            /**Sets  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFilePath
            (
                const NXString & filePath /** filepath */ 
            );
            /**Sets  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetFilePath
            (
                const char * filePath /** filepath */ 
            );
            /**Returns  the step for the forcing frequencies. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Step
            (
            );
            /**Sets  the step for the forcing frequencies. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetStep
            (
                NXOpen::Expression * stepTag /** steptag */ 
            );
            /** Add a vibration input definition. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void AddVibrationInputDefinition
            (
                NXOpen::CAE::DurSpecialistVibrationInputDefinition * vid /** The vibration input definition. */
            );
            /** Add a correlation input definition. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void AddCorrelationInputDefinition
            (
                NXOpen::CAE::DurSpecialistCorrelationInputDefinition * cid /** The correlation input definition. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
