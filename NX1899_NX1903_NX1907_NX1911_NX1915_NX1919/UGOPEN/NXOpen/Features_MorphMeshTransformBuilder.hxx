#ifndef NXOpen_FEATURES_MORPHMESHTRANSFORMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_MORPHMESHTRANSFORMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_MorphMeshTransformBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Subdivision_CageManipulatorData.hxx>
#include <NXOpen/Features_Subdivision_SelectCageObjectData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class MorphMeshTransformBuilder;
    }
    class Builder;
    class Direction;
    namespace Features
    {
        namespace Subdivision
        {
            class CageManipulatorData;
        }
    }
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    class Plane;
    namespace Features
    {
        class _MorphMeshTransformBuilderBuilder;
        class MorphMeshTransformBuilderImpl;
        /** Represents a @link NXOpen::Features::MorphMeshTransformBuilder NXOpen::Features::MorphMeshTransformBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Features::MorphMeshCollection::CreateMorphMeshTransformBuilder  NXOpen::Features::MorphMeshCollection::CreateMorphMeshTransformBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CanRelocateToolToSelection </td> <td> 
         
        true </td> </tr> 

        <tr><td> 
         
        CanReorientToolToSelection </td> <td> 
         
        true </td> </tr> 

        <tr><td> 
         
        FallOffPercentage </td> <td> 
         
        25 </td> </tr> 

        </table>  

         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  MorphMeshTransformBuilder : public NXOpen::Builder
        {
            /** Transformation object types */
            public: enum TransformationObjectType
            {
                TransformationObjectTypeCage/** Edit cage topology */,
                TransformationObjectTypeCageAndBody/** Edit cage and body topology */
            };

            /** Transformation method types */
            public: enum TransformationMethodType
            {
                TransformationMethodTypeDrag/** Edit cage topology by direct dragging */,
                TransformationMethodTypeTransform/** Edit cage topology by transformations */
            };

            /** Movement types */
            public: enum MovementMethodType
            {
                MovementMethodTypeWCS/** Movement along WCS principal axis or plane */,
                MovementMethodTypeView/** Movement in view plane */,
                MovementMethodTypeVector/** Movement along arbitrary direction */,
                MovementMethodTypePlane/** Movement in arbitrary plane */,
                MovementMethodTypeNormal/** Movement along a face normal */,
                MovementMethodTypeEdge/** Movement along an edge */
            };

            /** WCS principal axis or plane types */
            public: enum WCSOptionType
            {
                WCSOptionTypeInferredAxis/** Along axis inferred during movement */,
                WCSOptionTypeX/** Along X axis */,
                WCSOptionTypeY/** Along Y axis */,
                WCSOptionTypeZ/** Along Z axis */,
                WCSOptionTypeYZ/** In YZ plane */,
                WCSOptionTypeXZ/** In XZ plane */,
                WCSOptionTypeXY/** In XY plane */
            };

            /** Scaling method */
            public: enum ScalingMethodType
            {
                ScalingMethodTypeLinear/** Scale in the specified direction */,
                ScalingMethodTypePlanar/** Scale in the plane normal to specified direction */,
                ScalingMethodTypeUniform/** Scale uniformly all the directions */
            };

            /** Falloff method types */
            public: enum FallOffMethodType
            {
                FallOffMethodTypeNone/** No falloff */,
                FallOffMethodTypeSelected/** Selected vertices falloff */,
                FallOffMethodTypeAll/** All vertices falloff */
            };

            private: MorphMeshTransformBuilderImpl * m_morphmeshtransformbuilder_impl;
            private: friend class  _MorphMeshTransformBuilderBuilder;
            protected: MorphMeshTransformBuilder();
            public: ~MorphMeshTransformBuilder();
            /**Returns  the transformation type. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::TransformationObjectType Type
            (
            );
            /**Sets  the transformation type. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetType
            (
                NXOpen::Features::MorphMeshTransformBuilder::TransformationObjectType type /** type */ 
            );
            /**Returns  the cage manipulation data. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Subdivision::CageManipulatorData * CageManipulator
            (
            );
            /**Returns  the transformation method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::TransformationMethodType TransformationMethod
            (
            );
            /**Sets  the transformation method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetTransformationMethod
            (
                NXOpen::Features::MorphMeshTransformBuilder::TransformationMethodType method /** method */ 
            );
            /**Returns  the movement method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::MovementMethodType MovementMethod
            (
            );
            /**Sets  the movement method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetMovementMethod
            (
                NXOpen::Features::MorphMeshTransformBuilder::MovementMethodType movementMethod /** movementmethod */ 
            );
            /**Returns  the WCS option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::WCSOptionType WCSOption
            (
            );
            /**Sets  the WCS option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetWCSOption
            (
                NXOpen::Features::MorphMeshTransformBuilder::WCSOptionType wcsOption /** wcsoption */ 
            );
            /**Returns  the movement vector. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * MovementVector
            (
            );
            /**Sets  the movement vector. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetMovementVector
            (
                NXOpen::Direction * movementVector /** movementvector */ 
            );
            /**Returns  the movement plane. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * MovementPlane
            (
            );
            /**Sets  the movement plane. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetMovementPlane
            (
                NXOpen::Plane * movementPlane /** movementplane */ 
            );
            /**Returns  the flag indicating if transformer tool can be moved without transforming the selected cage topology. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanMoveToolOnly
            (
            );
            /**Sets  the flag indicating if transformer tool can be moved without transforming the selected cage topology. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetCanMoveToolOnly
            (
                bool canMove /** canmove */ 
            );
            /**Returns  the flag indicating if transformer tool can be relocated based on cage topology selection. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanRelocateToolToSelection
            (
            );
            /**Sets  the flag indicating if transformer tool can be relocated based on cage topology selection. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetCanRelocateToolToSelection
            (
                bool canRelocate /** canrelocate */ 
            );
            /**Returns  the flag indicating if transformer tool can be reoriented based on cage topology selection. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanReorientToolToSelection
            (
            );
            /**Sets  the flag indicating if transformer tool can be reoriented based on cage topology selection. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetCanReorientToolToSelection
            (
                bool canReorient /** canreorient */ 
            );
            /**Returns  the scaling method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::ScalingMethodType ScalingMethod
            (
            );
            /**Sets  the scaling method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetScalingMethod
            (
                NXOpen::Features::MorphMeshTransformBuilder::ScalingMethodType scalingMethod /** scalingmethod */ 
            );
            /**Returns  the falloff method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::MorphMeshTransformBuilder::FallOffMethodType FallOffMethod
            (
            );
            /**Sets  the falloff method. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetFallOffMethod
            (
                NXOpen::Features::MorphMeshTransformBuilder::FallOffMethodType fallOffMethod /** falloffmethod */ 
            );
            /**Returns  the falloff objects. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::Subdivision::SelectCageObjectData * FallOffObjects
            (
            );
            /**Returns  the falloff ratio of the body. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int FallOffPercentage
            (
            );
            /**Sets  the falloff ratio of the body. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetFallOffPercentage
            (
                int fallOffPercentage /** falloffpercentage */ 
            );
            /**Returns  the falloff factor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double FallOffFactor
            (
            );
            /**Sets  the falloff factor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetFallOffFactor
            (
                double factor /** factor */ 
            );
            /** Resets the falloff scale to linear. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void ResetFallOffToLinear
            (
            );
            /** Enables the transformation data for further deformations. 
                        User needs to enable the data before doing any parameter changes for the deformation purposes. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void Enable
            (
            );
            /** Set necessary builder data. This API is used to record morphing related data after transforming cage. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void UpdateCageAndBody
            (
            );
            /** Set necessary builder data. This API is used to record morphing related data after updating falloff percentage. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void UpdateFallOffPercentage
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
