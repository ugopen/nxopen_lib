#ifndef NXOpen_PCBEXCHANGE_COMPONENTATTRIBUTESBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_COMPONENTATTRIBUTESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_ComponentAttributesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class ComponentAttributesBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    namespace PcbExchange
    {
        class _ComponentAttributesBuilderBuilder;
        class ComponentAttributesBuilderImpl;
        /** Represents a @link NXOpen::PcbExchange::ComponentAttributesBuilder NXOpen::PcbExchange::ComponentAttributesBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateBoardAttributesBuilder  NXOpen::PcbExchange::Manager::CreateBoardAttributesBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        PlacementOwner </td> <td> 
         
        Placed </td> </tr> 

        </table>  

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  ComponentAttributesBuilder : public NXOpen::Builder
        {
            /** This enum defines the placement/owner options. */
            public: enum PlacementOwnerEnum
            {
                PlacementOwnerEnumMcad/** mcad */ ,
                PlacementOwnerEnumEcad/** ecad */ ,
                PlacementOwnerEnumPlaced/** placed */ ,
                PlacementOwnerEnumUnplaced/** unplaced */ 
            };

            private: ComponentAttributesBuilderImpl * m_componentattributesbuilder_impl;
            private: friend class  _ComponentAttributesBuilderBuilder;
            protected: ComponentAttributesBuilder();
            public: ~ComponentAttributesBuilder();
            /**Returns  the components 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Components
            (
            );
            /**Returns  the placement/owner 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PcbExchange::ComponentAttributesBuilder::PlacementOwnerEnum PlacementOwner
            (
            );
            /**Sets  the placement/owner 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPlacementOwner
            (
                NXOpen::PcbExchange::ComponentAttributesBuilder::PlacementOwnerEnum placementOwner /** placementowner */ 
            );
            /**Returns  the package name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PackageName
            (
            );
            /**Sets  the package name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPackageName
            (
                const NXString & packageName /** packagename */ 
            );
            /**Sets  the package name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetPackageName
            (
                const char * packageName /** packagename */ 
            );
            /**Returns  the part number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PartNumber
            (
            );
            /**Sets  the part number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPartNumber
            (
                const NXString & partNumber /** partnumber */ 
            );
            /**Sets  the part number 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetPartNumber
            (
                const char * partNumber /** partnumber */ 
            );
            /**Returns  the reference designator 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ReferenceDesignator
            (
            );
            /**Sets  the reference designator 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetReferenceDesignator
            (
                const NXString & referenceDesignator /** referencedesignator */ 
            );
            /**Sets  the reference designator 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetReferenceDesignator
            (
                const char * referenceDesignator /** referencedesignator */ 
            );
            /**Returns  the package name modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool PackageNameModification
            (
            );
            /**Sets  the package name modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPackageNameModification
            (
                bool canModification /** canmodification */ 
            );
            /**Returns  the part number modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool PartNumberModification
            (
            );
            /**Sets  the part number modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetPartNumberModification
            (
                bool canModification /** canmodification */ 
            );
            /**Sets  the reference designator modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetReferenceDesignatorModification
            (
                bool canModification /** canmodification */ 
            );
            /**Returns  the reference designator modification  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReferenceDesignatorModification
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
