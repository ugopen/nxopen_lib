#ifndef NXOpen_CAE_PRETESTDOFSET_HXX_INCLUDED
#define NXOpen_CAE_PRETESTDOFSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PreTestDofSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CorrelSolution.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class PreTestDofSet;
    }
    namespace CAE
    {
        class CaeDOFSet;
    }
    namespace CAE
    {
        class FENode;
    }
    class NXObject;
    namespace CAE
    {
        class _PreTestDofSetBuilder;
        class PreTestDofSetImpl;
        /** Represents Dof Set within a pre-test setup */
        class NXOPENCPPEXPORT  PreTestDofSet : public NXObject
        {
            private: PreTestDofSetImpl * m_pretestdofset_impl;
            private: friend class  _PreTestDofSetBuilder;
            protected: PreTestDofSet();
            public: ~PreTestDofSet();
            /** Setting the @link CAE::CaeDOFSet CAE::CaeDOFSet@endlink  reference  <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDofSet
            (
                NXOpen::CAE::CaeDOFSet * dofsetref /** The reference DOFSet */
            );
            /** Setting the dofs manually  <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDofs
            (
                const std::vector<NXOpen::CAE::FENode *> & nodes /** Nodes defining the dof set */,
                const std::vector<bool> & dofs /** Flags to indicate which Dofs are activated. */
            );
            /** Export dof set shape metrics to CSV file  <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void ExportShapeMetricsCsvFile
            (
                NXOpen::CAE::CorrelShapemetrictype metricCode /** shape metric code */,
                const NXString & filename /** CSV file name.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
