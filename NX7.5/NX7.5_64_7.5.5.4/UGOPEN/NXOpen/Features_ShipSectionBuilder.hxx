#ifndef NXOpen_FEATURES_SHIPSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipSectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ShipSectionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ShipSectionBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBody;
    namespace Features
    {
        class _ShipSectionBuilderBuilder;
        class ShipSectionBuilderImpl;
        /**
            Represents a @link Features::ShipSection Features::ShipSection@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateShipSectionBuilder Features::FeatureCollection::CreateShipSectionBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        XDatumFilter </td> <td> 
         
        All </td> </tr> 

        <tr><td> 
         
        XMaxOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        XMinOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        YMaxOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        YMinOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        ZDatumFilter </td> <td> 
         
        All </td> </tr> 

        <tr><td> 
         
        ZMaxOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        ZMinOffset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  ShipSectionBuilder : public Features::FeatureBuilder
        {
            /** Define the output option for each of the frame type */
            public: enum XFilter
            {
                XFilterAll/** all */ ,
                XFilterTransverseFrames/** transverse frames */ ,
                XFilterBulkheads/** bulkheads */ 
            };

            /** Define the output option for each of the frame type */
            public: enum ZFilter
            {
                ZFilterAll/** all */ ,
                ZFilterDeckFrames/** deck frames */ ,
                ZFilterLongitudinalFrames/** longitudinal frames */ 
            };

            private: ShipSectionBuilderImpl * m_shipsectionbuilder_impl;
            private: friend class  _ShipSectionBuilderBuilder;
            protected: ShipSectionBuilder();
            public: ~ShipSectionBuilder();
            /**Returns  the assembly part  <br> License requirements : None */
            public: NXString AssemblyPart
            (
            );
            /**Sets  the assembly part  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAssemblyPart
            (
                const NXString & filename /** filename */ 
            );
            /**Returns  the section part  <br> License requirements : None */
            public: NXString SectionPart
            (
            );
            /**Sets  the section part  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionPart
            (
                const NXString & filename /** filename */ 
            );
            /**Returns  the section name  <br> License requirements : None */
            public: NXString SectionName
            (
            );
            /**Sets  the section name  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionName
            (
                const NXString & sectionName /** sectionname */ 
            );
            /**Returns  the ship body  <br> License requirements : None */
            public: NXOpen::SelectBody * ShipBody
            (
            );
            /**Returns  the x datum filter  <br> License requirements : None */
            public: NXOpen::Features::ShipSectionBuilder::XFilter XDatumFilter
            (
            );
            /**Sets  the x datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetXDatumFilter
            (
                NXOpen::Features::ShipSectionBuilder::XFilter xDatumFilter /** xdatumfilter */ 
            );
            /**Returns  the x min datum filter  <br> License requirements : None */
            public: int XMinDatumFilter
            (
            );
            /**Sets  the x min datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetXMinDatumFilter
            (
                int xMinDatumFilter /** xmindatumfilter */ 
            );
            /**Returns  the x max datum filter  <br> License requirements : None */
            public: int XMaxDatumFilter
            (
            );
            /**Sets  the x max datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetXMaxDatumFilter
            (
                int xMaxDatumFilter /** xmaxdatumfilter */ 
            );
            /**Returns  the section xmin  <br> License requirements : None */
            public: int SectionXMin
            (
            );
            /**Sets  the section xmin  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionXMin
            (
                int sectionXMin /** sectionxmin */ 
            );
            /**Returns  the x min offset  <br> License requirements : None */
            public: NXOpen::Expression * XMinOffset
            (
            );
            /**Returns  the section xmax  <br> License requirements : None */
            public: int SectionXMax
            (
            );
            /**Sets  the section xmax  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionXMax
            (
                int sectionXMax /** sectionxmax */ 
            );
            /**Returns  the x max offset  <br> License requirements : None */
            public: NXOpen::Expression * XMaxOffset
            (
            );
            /**Returns  the y datum filter  <br> License requirements : None */
            public: int YDatumFilter
            (
            );
            /**Sets  the y datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetYDatumFilter
            (
                int yDatumFilter /** ydatumfilter */ 
            );
            /**Returns  the y min datum filter  <br> License requirements : None */
            public: int YMinDatumFilter
            (
            );
            /**Sets  the y min datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetYMinDatumFilter
            (
                int yMinDatumFilter /** ymindatumfilter */ 
            );
            /**Returns  the y max datum filter  <br> License requirements : None */
            public: int YMaxDatumFilter
            (
            );
            /**Sets  the y max datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetYMaxDatumFilter
            (
                int yMaxDatumFilter /** ymaxdatumfilter */ 
            );
            /**Returns  the section ymin  <br> License requirements : None */
            public: int SectionYMin
            (
            );
            /**Sets  the section ymin  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionYMin
            (
                int sectionYMin /** sectionymin */ 
            );
            /**Returns  the y min offset  <br> License requirements : None */
            public: NXOpen::Expression * YMinOffset
            (
            );
            /**Returns  the section ymax  <br> License requirements : None */
            public: int SectionYMax
            (
            );
            /**Sets  the section ymax  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionYMax
            (
                int sectionYMax /** sectionymax */ 
            );
            /**Returns  the y max offset  <br> License requirements : None */
            public: NXOpen::Expression * YMaxOffset
            (
            );
            /**Returns  the z datum filter  <br> License requirements : None */
            public: NXOpen::Features::ShipSectionBuilder::ZFilter ZDatumFilter
            (
            );
            /**Sets  the z datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetZDatumFilter
            (
                NXOpen::Features::ShipSectionBuilder::ZFilter zDatumFilter /** zdatumfilter */ 
            );
            /**Returns  the z min datum filter  <br> License requirements : None */
            public: int ZMinDatumFilter
            (
            );
            /**Sets  the z min datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetZMinDatumFilter
            (
                int zMinDatumFilter /** zmindatumfilter */ 
            );
            /**Returns  the z max datum filter  <br> License requirements : None */
            public: int ZMaxDatumFilter
            (
            );
            /**Sets  the z max datum filter  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetZMaxDatumFilter
            (
                int zMaxDatumFilter /** zmaxdatumfilter */ 
            );
            /**Returns  the section zmin  <br> License requirements : None */
            public: int SectionZMin
            (
            );
            /**Sets  the section zmin  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionZMin
            (
                int sectionZMin /** sectionzmin */ 
            );
            /**Returns  the z min offset  <br> License requirements : None */
            public: NXOpen::Expression * ZMinOffset
            (
            );
            /**Returns  the section zmax  <br> License requirements : None */
            public: int SectionZMax
            (
            );
            /**Sets  the section zmax  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionZMax
            (
                int sectionZMax /** sectionzmax */ 
            );
            /**Returns  the z max offset  <br> License requirements : None */
            public: NXOpen::Expression * ZMaxOffset
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
