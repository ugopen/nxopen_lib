#ifndef NXOpen_CAM_NCMTURNTHREADBUILDER_HXX_INCLUDED
#define NXOpen_CAM_NCMTURNTHREADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_NcmTurnThreadBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NcmTurningBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class NcmTurnThreadBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class NcmTurningBuilder;
    }
    namespace CAM
    {
        class TurnThreadEngageRetractBuilder;
    }
    class Point;
    namespace CAM
    {
        class _NcmTurnThreadBuilderBuilder;
        class NcmTurnThreadBuilderImpl;
        /** Represents a CAM.NcmTurnThreadBuilder */
        class NXOPENCPPEXPORT  NcmTurnThreadBuilder : public CAM::NcmTurningBuilder
        {
            /** The Cut regions type options */
            public: enum LocalReturnTypes
            {
                LocalReturnTypesNone/** None */,
                LocalReturnTypesDirect/** Direct */,
                LocalReturnTypesRadialAxial/** Radial-Axial */,
                LocalReturnTypesAxialRadial/** Axial-Radial */,
                LocalReturnTypesClearRadialDirect/** Clear Radial-Direct */,
                LocalReturnTypesClearAxialDirect/** Clear Axial-Direct */,
                LocalReturnTypesClearRadial/** Clear Radial */,
                LocalReturnTypesClearAxial/** Clear Axial */,
                LocalReturnTypesRadialClearAxialDirect/** Radial-Clear Axial-Direct */,
                LocalReturnTypesRadialAxialRadial/** Radial-Axial-Radial */,
                LocalReturnTypesRadialClearAxial/** Radial-Clear Axial */
            };

            private: NcmTurnThreadBuilderImpl * m_ncmturnthreadbuilder_impl;
            private: friend class  _NcmTurnThreadBuilderBuilder;
            protected: NcmTurnThreadBuilder();
            public: ~NcmTurnThreadBuilder();
            /**Returns  the Local Return Move  <br> License requirements : None */
            public: NXOpen::CAM::NcmTurnThreadBuilder::LocalReturnTypes LocalReturnMove
            (
            );
            /**Sets  the Local Return Move  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLocalReturnMove
            (
                NXOpen::CAM::NcmTurnThreadBuilder::LocalReturnTypes localMove /** the Local Return Move */
            );
            /**Returns  the Local Return Point  <br> License requirements : None */
            public: NXOpen::Point * LocalReturnPoint
            (
            );
            /**Sets  the Local Return Point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLocalReturnPoint
            (
                NXOpen::Point * localPoint /** the Local Return Point */
            );
            /**Returns  the Opstops <br> License requirements : None */
            public: int Opstops
            (
            );
            /**Sets  the Opstops <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOpstops
            (
                int opstops /** the Opstops*/
            );
            /**Returns  the Minimum Clearance  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinimumClearanceBuilder
            (
            );
            /**Returns  the Engage builder  <br> License requirements : None */
            public: NXOpen::CAM::TurnThreadEngageRetractBuilder * EngageBuilder
            (
            );
            /**Returns  the Retract builder  <br> License requirements : None */
            public: NXOpen::CAM::TurnThreadEngageRetractBuilder * RetractBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
