#ifndef NXOpen_JAMNXCOLOR_HXX_INCLUDED
#define NXOpen_JAMNXCOLOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     JamNXColor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/libnxopenjamtestcpp_exports.hxx>
namespace NXOpen
{
    class JamNXColor;
    class JamNXColorImpl;
    /** Simulates the NXColor class in order to test an id_class type */
    class NXOPENJAMTESTCPPEXPORT  JamNXColor
    {
         /** RGB values */
        public:
        struct  Rgb
        {
            public: /** r */ double R;
            public: /** g */ double G;
            public: /** b */ double B;
            public: Rgb() :
                R(),
                G(),
                B()
            {
            }
            /** Constructor for the Rgb struct. */ 
            public: Rgb(double rInitial /** r */ , 
                    double gInitial /** g */ , 
                    double bInitial /** b */ ) :
                R(rInitial),
                G(gInitial),
                B(bInitial)
            {
            }
        };

        private: JamNXColorImpl * m_jamnxcolor_impl;
        /** This class exists only to aid NX internally.
         This class should be considered "private" to the NX internal implementation.
         This class is subject to change at any time without notice */ 
        public: struct NXOPENJAMTESTCPPEXPORT  Factory { static JamNXColor* _Get(int handle); };
        friend struct Factory;
        private: explicit JamNXColor(int handle) : m_jamnxcolor_impl(NULL) , m_handle(handle) {}
        /** Returns an integer identifier for this object. This identifier can be used in methods that require an integer representation of this object, such as User Function methods. */
        public: int Handle() const {return m_handle;}
        private: int m_handle;
        public: ~JamNXColor();
        /**Returns  the int ID for color  <br> License requirements : None */
        public: int Id
        (
        );
        /** Gets RGB values  @return   <br> License requirements : None */
        public: NXOpen::JamNXColor::Rgb GetRgb
        (
        );
        /**Returns  the name for the color  <br> License requirements : None */
        public: NXString Name
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
