#ifndef NXOpen_FEATURES_SHEETMETAL_FLATSOLIDBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_FLATSOLIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_FlatSolidBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SheetMetal_CornerTreatmentBuilder.hxx>
#include <NXOpen/Features_SheetMetal_FlatSolidBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Features_SheetMetal_SheetmetalBaseBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class FlatSolidBuilder;
        }
    }
    class Edge;
    class Face;
    namespace Features
    {
        namespace SheetMetal
        {
            class CornerTreatmentBuilder;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalBaseBuilder;
        }
    }
    class Section;
    class SelectEdge;
    class SelectFace;
    namespace Features
    {
        namespace SheetMetal
        {
            class _FlatSolidBuilderBuilder;
            class FlatSolidBuilderImpl;
            /** Represents a Flat As Solid feature builder.  <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateFlatSolidFeatureBuilder Features::SheetMetal::SheetmetalManager::CreateFlatSolidFeatureBuilder@endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            InnerCornerTreatment.TreatmentType </td> <td> 
             
            None </td> </tr> 

            <tr><td> 
             
            InnerCornerTreatment.UseGlobal </td> <td> 
             
            1 </td> </tr> 

            <tr><td> 
             
            InnerCornerTreatment.Value.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            </table>  
            */
            class NXOPENCPPEXPORT  FlatSolidBuilder : public Features::SheetMetal::SheetmetalBaseBuilder
            {
                private: FlatSolidBuilderImpl * m_flatsolidbuilder_impl;
                private: friend class  _FlatSolidBuilderBuilder;
                protected: FlatSolidBuilder();
                public: ~FlatSolidBuilder();
                /**Returns  the face on which the flat as solid is created.
                                 <br> 
                                The face should be planar and should not be an unformed bend face.
                                 <br> 
                            
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::Face * ReferenceFace
                (
                );
                /**Sets  the face on which the flat as solid is created.
                                 <br> 
                                The face should be planar and should not be an unformed bend face.
                                 <br> 
                            
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetReferenceFace
                (
                    NXOpen::Face * face /** The flat as solid is created on this face. */
                );
                /**Returns  the edge which decides the X axis of the flat as solid.
                                 <br> 
                                The edge should not be a thickness edge.
                                 <br> 
                            
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::Edge * ReferenceEdge
                (
                );
                /**Sets  the edge which decides the X axis of the flat as solid.
                                 <br> 
                                The edge should not be a thickness edge.
                                 <br> 
                            
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetReferenceEdge
                (
                    NXOpen::Edge * edge /** The flange is created on this edge. */
                );
                /**Returns  the end of the edge where the tangent will define the x axis for flat as solid.
                             <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Point3d ReferenceVertex
                (
                );
                /**Sets  the end of the edge where the tangent will define the x axis for flat as solid.
                             <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetReferenceVertex
                (
                    const NXOpen::Point3d & vertex /** One of the end points of the reference edge. */
                );
                /**Returns  the flag which decides if the flattened solid will be transformed to Absolute CSYS.
                             <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: bool TransformToAbsoluteCsys
                (
                );
                /**Sets  the flag which decides if the flattened solid will be transformed to Absolute CSYS.
                             <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetTransformToAbsoluteCsys
                (
                    bool transformFlag /** True = Transform to ABS, False = Do not transform to ABS. */
                );
                /** Validate the builder data  @return  0 Means no errors.  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: int ValidateBuilderData
                (
                );
                /**Returns  the stationary face selection  <br> License requirements : None */
                public: NXOpen::SelectFace * StationaryFace
                (
                );
                /**Returns  the x axis edge selection  <br> License requirements : None */
                public: NXOpen::SelectEdge * XAxisEdge
                (
                );
                /**Returns  the added geometry selection  <br> License requirements : None */
                public: NXOpen::Section * AddedGeometry
                (
                );
                /**Returns  the outer corner treatment corner object  <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::CornerTreatmentBuilder * OuterCornerTreatment
                (
                );
                /**Returns  the inner corner treatment corner object  <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::CornerTreatmentBuilder * InnerCornerTreatment
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
