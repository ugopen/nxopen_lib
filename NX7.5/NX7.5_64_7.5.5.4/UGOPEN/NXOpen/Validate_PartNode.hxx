#ifndef NXOpen_VALIDATE_PARTNODE_HXX_INCLUDED
#define NXOpen_VALIDATE_PARTNODE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Validate_PartNode.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Validate
    {
        class PartNode;
    }
    class Part;
    namespace Validate
    {
        class PartNodeImpl;
        /**  @brief Represents a part file that validator will check against.  

         
              <br> Part node contains the information of part filename and part object. 
             You can create the part node by inputting part filename, or by inputting part object, or by inputting both.
             Validator will use the part object in the part node for checking. Only when the part object in the part node
             is NULL, then validator will use the part filename for checking. <br> 
            */
        class NXOPENCPPEXPORT  PartNode : public TransientObject
        {
            private: PartNodeImpl * m_partnode_impl;
            public: explicit PartNode(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~PartNode();
            /**Returns  the part file name  <br> License requirements : None */
            public: NXString FileName
            (
            );
            /**Returns  the part object  <br> License requirements : None */
            public: NXOpen::Part * PartObject
            (
            );
            /**Sets  the part file name  <br> License requirements : None */
            public: void SetFileName
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the part object  <br> License requirements : None */
            public: void SetPartObject
            (
                NXOpen::Part * partObject /** partobject */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
