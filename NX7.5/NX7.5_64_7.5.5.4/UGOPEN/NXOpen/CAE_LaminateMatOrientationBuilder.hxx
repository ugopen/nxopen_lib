#ifndef NXOpen_CAE_LAMINATEMATORIENTATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_LAMINATEMATORIENTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminateMatOrientationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_LaminateMatOrientationBuilder.hxx>
#include <NXOpen/CAE_LaminateSelectEntitiesBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class LaminateMatOrientationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class LaminateSelectEntitiesBuilder;
    }
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _LaminateMatOrientationBuilderBuilder;
        class LaminateMatOrientationBuilderImpl;
        /** Represents a @link CAE::LaminateMatOrientation CAE::LaminateMatOrientation@endlink  builder  <br> To create a new instance of this class, use @link CAE::LaminateGlobalLayupMgr::CreateLaminateMatOrientationBuilder CAE::LaminateGlobalLayupMgr::CreateLaminateMatOrientationBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  LaminateMatOrientationBuilder : public Builder
        {
            private: LaminateMatOrientationBuilderImpl * m_laminatematorientationbuilder_impl;
            private: friend class  _LaminateMatOrientationBuilderBuilder;
            protected: LaminateMatOrientationBuilder();
            public: ~LaminateMatOrientationBuilder();
            /** Find or remove a surface if it is duplicated  @return  string of the duplicated material orientation  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: NXString FindOrRemoveDuplicateSurfaces
            (
                bool remove /** if remove is false, just find the surface otherwise remove it */
            );
            /**Returns  a method to get the selected faces 
             @deprecated Deprecated in NX7.5.2 <br> 
             <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.2") NXOpen::SelectTaggedObjectList * Faces
            (
            );
            /**Returns  the geometric face(s) and element faces on which to assign the material orientation  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: NXOpen::CAE::LaminateSelectEntitiesBuilder * Selection
            (
            );
            /**Sets  a method to get reference ply id  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetRefPlyId
            (
                int refPlyId /** ref ply id */
            );
            /**Returns  a method to get reference ply id  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: int RefPlyId
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
