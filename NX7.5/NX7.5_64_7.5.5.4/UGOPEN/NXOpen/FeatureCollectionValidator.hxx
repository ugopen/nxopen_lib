#ifndef NXOpen_FEATURECOLLECTIONVALIDATOR_HXX_INCLUDED
#define NXOpen_FEATURECOLLECTIONVALIDATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     FeatureCollectionValidator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/IValidator.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    class FeatureCollectionValidator;
    class IValidator;
    class _FeatureCollectionValidatorBuilder;
    class FeatureCollectionValidatorImpl;
    /** validator for FeatureCollection in a part.  <br> This is a test class. <br> */
    class NXOPENDEBUGSESSIONCPPEXPORT  FeatureCollectionValidator : public TaggedObject, public virtual IValidator
    {
        private: FeatureCollectionValidatorImpl * m_featurecollectionvalidator_impl;
        private: friend class  _FeatureCollectionValidatorBuilder;
        protected: FeatureCollectionValidator();
        public: ~FeatureCollectionValidator();
        /**Returns  the algorithm to use for validation.  <br> License requirements : None */
        public: virtual NXOpen::ValidatorVersion ValidatorVersion
        (
        );
        /**Sets  the algorithm to use for validation.  <br> License requirements : None */
        public: virtual void SetValidatorVersion
        (
            NXOpen::ValidatorVersion version /** version */ 
        );
        /**Returns  the print level for validation.  <br> License requirements : None */
        public: virtual NXOpen::ValidatorPrintLevel ValidatorPrintLevel
        (
        );
        /**Sets  the print level for validation.  <br> License requirements : None */
        public: virtual void SetValidatorPrintLevel
        (
            NXOpen::ValidatorPrintLevel level /** level */ 
        );
        /** Deletes the validator.  <br> License requirements : None */
        public: virtual void Destroy
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
