#ifndef NXOpen_BLOCKSTYLER_WIZARD_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_WIZARD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_Wizard.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_TreeListMenu.hxx>
#include <NXOpen/BlockStyler_Wizard.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    namespace BlockStyler
    {
        class Wizard;
    }
    namespace BlockStyler
    {
        class TreeListMenu;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    namespace BlockStyler
    {
        class _WizardBuilder;
        class WizardImpl;
        /** Represents a Wizard block */
        class NXOPENUICPPEXPORT  Wizard : public BlockStyler::UIBlock
        {
            /** Specifies an item in the Task Navigator.  */
            public: enum TaskNavigatorItem
            {
                TaskNavigatorItemStep/** step */ ,
                TaskNavigatorItemSubNode/** sub node */ ,
                TaskNavigatorItemBackground/** background */ 
            };

            /** Specifies the type of action performed on a sub-node in the Wizard Task Navigator.
                    The action is passed into the callback BlockStyler.Wizard.OnSubNodeCallback. */
            public: enum SubNodeAction
            {
                SubNodeActionSelect/** Sub-node has been selected. */,
                SubNodeActionDeselect/** Sub-node has been deselected. */,
                SubNodeActionCheck/** Sub-node has been checked if a checkbox was specified. */,
                SubNodeActionUncheck/** Sub-node has been unchecked if a checkbox was specified. */
            };

            public: /** The StepNotifyPre callback notifies a client before navigating to the next step 
                    in the Wizard.  The nextStep parameter for the callback is zero based and represents
                    the steps in the Wizard.  <br> License requirements : None */
            typedef NXOpen::Callback2<int, NXOpen::BlockStyler::Wizard *, int> StepNotifyPreCallback;
            public: /** The StepNotifyPost callback notifies a client after navigating to the next step 
                    in the Wizard.  The nextStep parameter for the callback is zero based and represents
                    the steps in the Wizard.  <br> License requirements : None */
            typedef NXOpen::Callback2<void, NXOpen::BlockStyler::Wizard *, int> StepNotifyPostCallback;
            public: /** The IsStepOkay callback allows the client to notify the Wizard that the step is okay
                    or not.  Returns true if the step is okay and false otherwise. The step parameter for the
                    callback is zero based and represents the steps in the Wizard. <br> License requirements : None */
            typedef NXOpen::Callback2<bool, NXOpen::BlockStyler::Wizard *, int> IsStepOkayCallback;
            public: /** The OnSubNode callback notifies a client of an action performed
                    on a sub-node in the Wizard Task Navigator.  The step
                    parameter for the callback is zero based and represents the steps in the Wizard.
                    The subNodeId parameter is the unique id returned by @link BlockStyler::Wizard::CreateStepSubNode BlockStyler::Wizard::CreateStepSubNode@endlink .   <br> License requirements : None */
            typedef NXOpen::Callback4<void, NXOpen::BlockStyler::Wizard *, int, int, NXOpen::BlockStyler::Wizard::SubNodeAction> OnSubNodeCallback;
            public: /** The OnMenu callback notifies a client prior to creating the popup menu in the Task
                    Navigator.  The item parameter specifies the popup menu was activated on a step,
                    sub-node or the background. The step parameter for the callback is zero based and
                    represents the steps in the Wizard.  The subNodeId parameter is the unique id returned
                    by @link BlockStyler::Wizard::CreateStepSubNode BlockStyler::Wizard::CreateStepSubNode@endlink .
                    If the popup menu is invoked on the background of the Task Navigator the step and
                    subNodeId parameters will be -1.   <br> License requirements : None */
            typedef NXOpen::Callback4<void, NXOpen::BlockStyler::Wizard *, NXOpen::BlockStyler::Wizard::TaskNavigatorItem, int, int> OnMenuCallback;
            public: /** The OnMenuSelection callback notifies a client of the menu item selection on the popup menu
                    in the Task Navigator.  The item parameter specifies the popup menu was activated on a step,
                    sub-node or the background. The step parameter for the callback is zero based and
                    represents the steps in the Wizard.  The subNodeId parameter is the unique id returned
                    by @link BlockStyler::Wizard::CreateStepSubNode BlockStyler::Wizard::CreateStepSubNode@endlink .  The menuItemIndex parameter will
                    be the unique id specified when creating menu items for the BlockStyler.TreeListMenu.
                    If the popup menu is invoked on the background of the Task Navigator the step and
                    subNodeId parameters will be -1.   <br> License requirements : None */
            typedef NXOpen::Callback5<void, NXOpen::BlockStyler::Wizard *, NXOpen::BlockStyler::Wizard::TaskNavigatorItem, int, int, int> OnMenuSelectionCallback;
            private: WizardImpl * m_wizard_impl;
            private: friend class  _WizardBuilder;
            protected: Wizard();
            public: ~Wizard();
            /** Create a sub-node for a step in the Task Navigator.  @return  Unique id for the sub-node.  <br> License requirements : None */
            public: int CreateStepSubNode
            (
                int step /** The step to add a sub-node. */,
                const NXString & text /** Text for the sub-node. */,
                const NXString & bitmap /** Optional bitmap for the sub-node.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                bool showCheckBox /** Associate an optional check box with the sub-node */,
                bool checkBoxChecked /** The initial state of the check box. */
            );
            /** Remove a sub-node in the Task Navigator.  <br> License requirements : None */
            public: void RemoveStepSubNode
            (
                int subNodeId /** The sub-node id. */
            );
            /** Creates a popup menu. Use @link BlockStyler::Wizard::SetMenu BlockStyler::Wizard::SetMenu@endlink  to set
                     the created menu.  See the @link BlockStyler::TreeListMenu BlockStyler::TreeListMenu@endlink  for
                     information on creating a menu.   @return   <br> License requirements : None */
            public: NXOpen::BlockStyler::TreeListMenu * CreateMenu
            (
            );
            /** Set the menu items for the popup menu for a step, sub-node or the background
                    in the Task Navigator.  See the @link BlockStyler::TreeListMenu BlockStyler::TreeListMenu@endlink  for
                    information on creating a menu. <br> License requirements : None */
            public: void SetMenu
            (
                NXOpen::BlockStyler::TreeListMenu * menu /** menu */ 
            );
            /** Sets the StepNotifyPre handler.  <br> License requirements : None */
            public: void SetStepNotifyPreHandler
            (
                const NXOpen::BlockStyler::Wizard::StepNotifyPreCallback&  cb /** cb */ 
            );
            /** Sets the StepNotifyPost handler.  <br> License requirements : None */
            public: void SetStepNotifyPostHandler
            (
                const NXOpen::BlockStyler::Wizard::StepNotifyPostCallback&  cb /** cb */ 
            );
            /** Sets the IsStepOkay handler.  <br> License requirements : None */
            public: void SetIsStepOkayHandler
            (
                const NXOpen::BlockStyler::Wizard::IsStepOkayCallback&  cb /** cb */ 
            );
            /** Sets the OnSubNode handler.  <br> License requirements : None */
            public: void SetOnSubNodeHandler
            (
                const NXOpen::BlockStyler::Wizard::OnSubNodeCallback&  cb /** cb */ 
            );
            /** Sets the OnMenu handler.  <br> License requirements : None */
            public: void SetOnMenuHandler
            (
                const NXOpen::BlockStyler::Wizard::OnMenuCallback&  cb /** cb */ 
            );
            /** Sets the OnMenuSelection handler.  <br> License requirements : None */
            public: void SetOnMenuSelectionHandler
            (
                const NXOpen::BlockStyler::Wizard::OnMenuSelectionCallback&  cb /** cb */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
