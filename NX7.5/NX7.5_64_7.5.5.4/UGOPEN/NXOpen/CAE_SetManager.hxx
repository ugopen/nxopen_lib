#ifndef NXOpen_CAE_SETMANAGER_HXX_INCLUDED
#define NXOpen_CAE_SETMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SetManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CAESet.hxx>
#include <NXOpen/CAE_SetObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class SetManager;
    }
    namespace CAE
    {
        class CAESet;
    }
    namespace CAE
    {
        class CaeGroup;
    }
    class NXObject;
    class TaggedObject;
    namespace CAE
    {
        class _SetManagerBuilder;
        class SetManagerImpl;
        /**  @brief  Represents a group of CAE object sets. The objects in each set
                can be used to create loads, constraints ..etc 

           <br> This is a sub object <br> */
        class NXOPENCPPEXPORT  SetManager : public NXObject
        {
            private: SetManagerImpl * m_setmanager_impl;
            private: friend class  _SetManagerBuilder;
            protected: SetManager();
            public: ~SetManager();
            /**Returns  the count of objects in the set  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int TargetSetCount
            (
            );
            /** Creates a CAE.CAESet  @return  the cae set created  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::CAESet * CreateCaeSet
            (
            );
            /** Sets the CAE group in the specified set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTargetSetGroup
            (
                int setIndex /** index of the set */,
                NXOpen::CAE::CaeSetGroupFilterType filterType /** filter to extract type of objects from the group */,
                NXOpen::CAE::CaeGroup * group /** group to add to set */
            );
            /** Sets the CAE objects in the specified set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTargetSetMembers
            (
                int setIndex /** index of the set */,
                const std::vector<NXOpen::CAE::SetObject> & objects /** objects to add to set */
            );
            /** Sets the CAE objects in the specified target set exclude set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTargetSetExcludedMembers
            (
                int setIndex /** index of the set */,
                const std::vector<NXOpen::CAE::SetObject> & excludedObjects /** excluded objects to add to set */
            );
            /** Gets the objects for the specified target set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetTargetSetMembers
            (
                int setIndex /** index of the set */,
                NXOpen::NXObject ** displayCoordinateSystem /** display coordinate system */,
                std::vector<NXOpen::CAE::SetObject> & objects /** objects in set */
            );
            /** Gets the objects for the specified target set excluded set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetTargetSetExcludedMembers
            (
                int setIndex /** index of the set */,
                std::vector<NXOpen::CAE::SetObject> & objects /** objects in set */
            );
            /** Clears the objects stored in the set specified in
                        the set manager
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CleanTargetSet
            (
                int setIndex /** index of the set in the set manager*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
