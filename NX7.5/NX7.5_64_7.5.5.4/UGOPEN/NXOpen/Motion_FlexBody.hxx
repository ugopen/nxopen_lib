#ifndef NXOpen_MOTION_FLEXBODY_HXX_INCLUDED
#define NXOpen_MOTION_FLEXBODY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_FlexBody.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_FlexPhysicalDampingSettings.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class FlexBody;
    }
    namespace Motion
    {
        class FlexPhysicalDampingSettings;
    }
    namespace Motion
    {
        class NormalModeProperty;
    }
    class NXObject;
    namespace Motion
    {
        class _FlexBodyBuilder;
        class FlexBodyImpl;
        /** Represents the Motion FlexBody class.It must be associated
            with a Motion Link. */
        class NXOPENCPPEXPORT  FlexBody : public NXObject
        {
            private: FlexBodyImpl * m_flexbody_impl;
            private: friend class  _FlexBodyBuilder;
            protected: FlexBody();
            public: ~FlexBody();
            /**Returns  the count of normal modes  <br> License requirements : mechanisms ("MECHANISMS") */
            public: int NormalModeCount
            (
            );
            /** Gets normal mode for given mode ID  @return   <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::NormalModeProperty * GetNormalModeById
            (
                int modeId /** mode id */ 
            );
            /** Gets all normal modes  @return   <br> License requirements : mechanisms ("MECHANISMS") */
            public: std::vector<NXOpen::Motion::NormalModeProperty *> GetNormalModes
            (
            );
            /** Sets activate or deactivate status for all normal modes  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Activate
            (
                bool activate /** activate */ 
            );
            /** Sets damping factors for all normal modes  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDampingFactors
            (
                double viscousDamping /** viscous damping */ ,
                double hystereticDamping /** hysteretic damping */ 
            );
            /** Gets the physical damping setting object  @return   <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::FlexPhysicalDampingSettings * GetPhysicalDampingSettings
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
