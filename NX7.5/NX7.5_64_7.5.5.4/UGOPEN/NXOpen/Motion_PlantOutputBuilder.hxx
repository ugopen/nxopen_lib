#ifndef NXOpen_MOTION_PLANTOUTPUTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_PLANTOUTPUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_PlantOutputBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/Motion_PlantOutputBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class PlantOutputBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    class NXObject;
    namespace Motion
    {
        class _PlantOutputBuilderBuilder;
        class PlantOutputBuilderImpl;
        /** Represents a @link Motion::PlantOutput Motion::PlantOutput@endlink  builder  <br> To create a new instance of this class, use @link Motion::PlantOutputCollection::CreatePlantOutputBuilder Motion::PlantOutputCollection::CreatePlantOutputBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  PlantOutputBuilder : public Motion::MotionBuilder
        {
            /** the type enum*/
            public: enum Poutype
            {
                PoutypeFunc/** funtion type*/,
                PoutypeSensor/** sensor type*/
            };

            private: PlantOutputBuilderImpl * m_plantoutputbuilder_impl;
            private: friend class  _PlantOutputBuilderBuilder;
            protected: PlantOutputBuilder();
            public: ~PlantOutputBuilder();
            /**Returns  the type  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: NXOpen::Motion::PlantOutputBuilder::Poutype Type
            (
            );
            /**Sets  the type  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void SetType
            (
                NXOpen::Motion::PlantOutputBuilder::Poutype type /** type */ 
            );
            /**Returns  the sensor  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: NXOpen::NXObject * Sensor
            (
            );
            /**Sets  the sensor  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void SetSensor
            (
                NXOpen::NXObject * sensor /** sensor */ 
            );
            /**Returns  the function <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: NXOpen::CAE::Function * Function
            (
            );
            /**Sets  the function <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void SetFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the name  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : nx_motion_cosim ("NX Motion CoSimulation") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
