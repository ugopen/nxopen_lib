#ifndef NXOpen_TOOLING_CHANNELFITTINGBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CHANNELFITTINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ChannelFittingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_ChannelFittingBuilder.hxx>
#include <NXOpen/Tooling_CoolingFittingData.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Tooling
    {
        class ChannelFittingBuilder;
    }
    class Builder;
    class Point;
    class SelectBodyList;
    namespace Tooling
    {
        class CoolingFittingData;
    }
    namespace Tooling
    {
        class _ChannelFittingBuilderBuilder;
        class ChannelFittingBuilderImpl;
        /**The builder class for Channel Fitting which assists you
               to add cooling fitting. <br> To create a new instance of this class, use @link Tooling::ChannelFittingCollection::CreateChannelFittingBuilder Tooling::ChannelFittingCollection::CreateChannelFittingBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ChannelFittingBuilder : public Builder
        {
            private: ChannelFittingBuilderImpl * m_channelfittingbuilder_impl;
            private: friend class  _ChannelFittingBuilderBuilder;
            protected: ChannelFittingBuilder();
            public: ~ChannelFittingBuilder();
            /**Returns  the parent channel of the cooling fitting points.  <br> License requirements : None */
            public: NXOpen::SelectBodyList * ParentChannel
            (
            );
            /**Returns  the new point specified for the cooling fitting point.  <br> License requirements : None */
            public: NXOpen::Point * FittingPoint
            (
            );
            /**Sets  the new point specified for the cooling fitting point.  <br> License requirements : None */
            public: void SetFittingPoint
            (
                NXOpen::Point * fittingPoint /** fittingpoint */ 
            );
            /** Creates the Cooling Fitting Data object.  @return  the new @link Tooling::CoolingFittingData Tooling::CoolingFittingData@endlink  instance  <br> License requirements : None */
            public: NXOpen::Tooling::CoolingFittingData * CreateCoolingFittingData
            (
            );
            /** Get the Cooling Fitting Data object.  @return   <br> License requirements : None */
            public: NXOpen::Tooling::CoolingFittingData * GetCoolingFittingData
            (
            );
            /** Create Fitting Points.  <br> License requirements : None */
            public: void CreateFittingPoints
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
