#ifndef NXOpen_PREFERENCES_SESSIONDRAFTING_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONDRAFTING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionDrafting.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class SessionDrafting;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class SessionDraftingImpl;
        /** Represents the set of Drafting preferences applicable to entire session <br> To obtain an instance of this class, refer to @link Preferences::SessionPreferences Preferences::SessionPreferences@endlink  <br> */
        class NXOPENCPPEXPORT  SessionDrafting
        {
            /** Describes the available edge face display types */
            public: enum EdgeFaceDisplayType
            {
                EdgeFaceDisplayTypeDisplayAndEmphasize/** display and emphasize */ ,
                EdgeFaceDisplayTypeCurvesOnly/** curves only */ 
            };

            /** Describes the available types for annotation style preference */
            public: enum AnnotationStyleType
            {
                AnnotationStyleTypeTextboxAndLeaders/** textbox and leaders */ ,
                AnnotationStyleTypeDetailed/** detailed */ 
            };

            /** Describes the available grid objects */
            public: enum GridObjectType
            {
                GridObjectTypeDrafting/** Drafting Grid  */,
                GridObjectTypeSketch/** Sketch Grid */
            };

            private: SessionDraftingImpl * m_sessiondrafting_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /** Constructor */
            public: explicit SessionDrafting(NXOpen::Preferences::SessionPreferences *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SessionDrafting();
            /**Returns  the load on selection flag  <br> License requirements : None */
            public: bool LoadComponentOnFacetedViewSelection
            (
            );
            /**Sets  the load on selection flag  <br> License requirements : None */
            public: void SetLoadComponentOnFacetedViewSelection
            (
                bool loadComponentOnFacetedViewSelection /** load component on faceted view selection */ 
            );
            /**Returns  the load on update flag  <br> License requirements : None */
            public: bool LoadComponentOnFacetedViewUpdate
            (
            );
            /**Sets  the load on update flag  <br> License requirements : None */
            public: void SetLoadComponentOnFacetedViewUpdate
            (
                bool loadComponentOnFacetedViewUpdate /** load component on faceted view update */ 
            );
            /**Returns  the extracted edge face display  <br> License requirements : None */
            public: NXOpen::Preferences::SessionDrafting::EdgeFaceDisplayType ExtractedEdgeFaceDisplay
            (
            );
            /**Sets  the extracted edge face display  <br> License requirements : None */
            public: void SetExtractedEdgeFaceDisplay
            (
                NXOpen::Preferences::SessionDrafting::EdgeFaceDisplayType extractedEdgeFaceDisplay /** extracted edge face display */ 
            );
            /**Returns  the annotation style for preview
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::Preferences::SessionDrafting::AnnotationStyleType AnnotationStyle
            (
            );
            /**Sets  the annotation style for preview
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetAnnotationStyle
            (
                NXOpen::Preferences::SessionDrafting::AnnotationStyleType rubberbandingDisplay /** rubberbanding display */ 
            );
            /**Returns  the dynamic alignment flag.  <br> License requirements : None */
            public: bool DynamicAlignment
            (
            );
            /**Sets  the dynamic alignment flag.  <br> License requirements : None */
            public: void SetDynamicAlignment
            (
                bool dynamicAlignment /** dynamic alignment */ 
            );
            /**Returns  the drafting grid object.  <br> License requirements : None */
            public: NXOpen::Preferences::SessionDrafting::GridObjectType GridObject
            (
            );
            /**Sets  the drafting grid object.  <br> License requirements : None */
            public: void SetGridObject
            (
                NXOpen::Preferences::SessionDrafting::GridObjectType drawingGridObject /** drawing grid object */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
