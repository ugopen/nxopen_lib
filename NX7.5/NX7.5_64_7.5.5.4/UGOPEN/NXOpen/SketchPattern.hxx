#ifndef NXOpen_SKETCHPATTERN_HXX_INCLUDED
#define NXOpen_SKETCHPATTERN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchPattern.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SketchGeometricConstraint.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchPattern;
    class SketchGeometricConstraint;
    class _SketchPatternBuilder;
    class SketchPatternImpl;
    /** Represents a sketch pattern constraint  <br> Use JA_SKETCH_create_sketch_pattern_builder to create an instance of this class. <br> */
    class NXOPENCPPEXPORT  SketchPattern : public SketchGeometricConstraint
    {
        /** Represents the pattern type of the constraint */
        public: enum Type
        {
            TypeLinear/** The pattern type is linear pattern   */,
            TypeCircular/** The pattern type is circular pattern */,
            TypeMirror/** The pattern type is mirror pattern   */
        };

        /** Represents the type of instance control for circular patterns */
        public: enum InstanceControl
        {
            InstanceControlFullCircle/** The pattern instance control type is Full Circle     */,
            InstanceControlNumberOffset/** The pattern instance control type is number + offset */
        };

        private: SketchPatternImpl * m_sketchpattern_impl;
        private: friend class  _SketchPatternBuilder;
        protected: SketchPattern();
        public: ~SketchPattern();
    };
}
#undef EXPORTLIBRARY
#endif
