#ifndef NXOpen_CAE_DURABILITYEVENTSOLVERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYEVENTSOLVERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityEventSolverBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_DurabilityEventSolverBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class DurabilityEventSolverBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _DurabilityEventSolverBuilderBuilder;
        class DurabilityEventSolverBuilderImpl;
        /** Represents the builder for solving the durability event. 
                When solving an event, the files pertaining to this event will be overwritten.
             <br> To create a new instance of this class, use @link CAE::DurabilityManager::CreateEventSolverBuilder CAE::DurabilityManager::CreateEventSolverBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CreateDiagnosticGroups </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ModelCheck </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SubmitOptions </td> <td> 
         
        Solve </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  DurabilityEventSolverBuilder : public Builder
        {
            /** the submit options enum.*/
            public: enum SubmitOptionsEnum
            {
                SubmitOptionsEnumSolve/** Solve */
            };

            private: DurabilityEventSolverBuilderImpl * m_durabilityeventsolverbuilder_impl;
            private: friend class  _DurabilityEventSolverBuilderBuilder;
            protected: DurabilityEventSolverBuilder();
            public: ~DurabilityEventSolverBuilder();
            /**Returns  the submit options.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::CAE::DurabilityEventSolverBuilder::SubmitOptionsEnum SubmitOptions
            (
            );
            /**Sets  the submit options.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetSubmitOptions
            (
                NXOpen::CAE::DurabilityEventSolverBuilder::SubmitOptionsEnum submitOptions /** submitoptions */ 
            );
            /**Returns  the model check.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool ModelCheck
            (
            );
            /**Sets  the model check.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetModelCheck
            (
                bool modelCheck /** modelcheck */ 
            );
            /**Returns  the create diagnostic groups.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: bool CreateDiagnosticGroups
            (
            );
            /**Sets  the create diagnostic groups.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetCreateDiagnosticGroups
            (
                bool createDiagnosticGroups /** creatediagnosticgroups */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
