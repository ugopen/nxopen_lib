#ifndef NXOpen_CAE_MESHPOINTEXISTINGPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHPOINTEXISTINGPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshPointExistingPointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_MeshPointExistingPointBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MeshPointExistingPointBuilder;
    }
    class Builder;
    class SelectPointList;
    namespace CAE
    {
        class _MeshPointExistingPointBuilderBuilder;
        class MeshPointExistingPointBuilderImpl;
        /**
            Represents a @link CAE::MeshPointExistingPointBuilder CAE::MeshPointExistingPointBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshPointCollection::CreateMeshpointExistingPointBuilder CAE::MeshPointCollection::CreateMeshpointExistingPointBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  MeshPointExistingPointBuilder : public Builder
        {
            private: MeshPointExistingPointBuilderImpl * m_meshpointexistingpointbuilder_impl;
            private: friend class  _MeshPointExistingPointBuilderBuilder;
            protected: MeshPointExistingPointBuilder();
            public: ~MeshPointExistingPointBuilder();
            /**Returns  the node  <br> License requirements : None */
            public: NXOpen::SelectPointList * ExistingPoint
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
