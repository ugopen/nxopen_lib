#ifndef NXOpen_DIE_STEELINSERTSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_DIE_STEELINSERTSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_SteelInsertSectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class SteelInsertSectionBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Die
    {
        class _SteelInsertSectionBuilderBuilder;
        class SteelInsertSectionBuilderImpl;
        /** Represents a Steel Insert Section sub feature.  <br> This sub feature is created via the main feature builder. <br> */
        class NXOPENCPPEXPORT  SteelInsertSectionBuilder : public Features::FeatureBuilder
        {
            /** Settings for the extension type. */
            public: enum ExtensionTypeOption
            {
                ExtensionTypeOptionConstant/** constant */,
                ExtensionTypeOptionMaxdistPlusConst/** maximum distance + constant */,
                ExtensionTypeOptionLaw/** law */
            };

            private: SteelInsertSectionBuilderImpl * m_steelinsertsectionbuilder_impl;
            private: friend class  _SteelInsertSectionBuilderBuilder;
            protected: SteelInsertSectionBuilder();
            public: ~SteelInsertSectionBuilder();
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackSideReliefDistance
            (
                const NXString & backSideReliefDistance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the back/side relief distance of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * BackSideReliefDistance
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProductContactWidth
            (
                const NXString & productContactWidth /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the product contact width of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProductContactWidth
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProductContactRelief
            (
                const NXString & productContactRelief /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the product contact relief of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProductContactRelief
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPlanarOffsetHeight
            (
                const NXString & planarOffsetHeight /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the planar contact height of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * PlanarOffsetHeight
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOffsetProfileToTop
            (
                const NXString & offsetProfileToTop /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the offset of the profile to the top of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * OffsetProfileToTop
            (
            );
            /**Sets  the mass limit of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetMassLimit
            (
                double massLimit /** mass limit */ 
            );
            /**Returns  the mass limit of the steel insert casting  <br> License requirements : ug_die_design ("Die Design") */
            public: double MassLimit
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBeltThickness
            (
                const NXString & beltThickness /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the belt thickness  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * BeltThickness
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetReliefAngle
            (
                const NXString & reliefAngle /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the relief angle  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ReliefAngle
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetProfileRelief
            (
                const NXString & profileRelief /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the profile relief  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ProfileRelief
            (
            );
            /**  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetExtensionDistance
            (
                const NXString & extensionDistance /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the extension distance  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Expression * ExtensionDistance
            (
            );
            /**Sets  the extension type  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetExtensionType
            (
                NXOpen::Die::SteelInsertSectionBuilder::ExtensionTypeOption extensionType /** extension type */ 
            );
            /**Returns  the extension type  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::SteelInsertSectionBuilder::ExtensionTypeOption ExtensionType
            (
            );
            /** Gets the forming faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetFormingAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of forming faces */
            );
            /** Sets the forming faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetFormingAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of forming faces */
            );
            /** Gets the steelinsert trim wall faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetTrimWallAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of trim wall faces */
            );
            /** Sets the steelinsert trim wall faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetTrimWallAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of trim wall faces */
            );
            /** Gets the flange wall attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetFlangeWallAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of flange wall faces */
            );
            /** Sets the flange wall attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetFlangeWallAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of flange wall faces */
            );
            /** Gets the end faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetEndAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of end faces */
            );
            /** Sets the end faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetEndAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of end faces */
            );
            /** Gets the back faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetBackAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of back faces */
            );
            /** Sets the back faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of back faces */
            );
            /** Gets the base faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void GetBaseAttributes
            (
                NXString* title /** title for attribute */,
                NXString* value /** value of attribute */,
                int* color /** color of base faces */
            );
            /** Sets the base faces attributes  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBaseAttributes
            (
                const NXString & title /** title for attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & value /** value of attribute   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int color /** color of base faces */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
