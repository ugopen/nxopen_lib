#ifndef NXOpen_CAE_XYPLOT_XYPLOTMANAGER_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_XYPLOTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_XYPlotManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_Xyplot_BaseTemplateManager.hxx>
#include <NXOpen/CAE_Xyplot_Plot.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class XYPlotManager;
        }
    }
    class Session;
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseTemplateManager;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Plot;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class XYPlotManagerImpl;
            /** XYPlot function manager  <br> To obtain an instance of this class use @link Session::XYPlotManager Session::XYPlotManager@endlink . <br> */
            class NXOPENCPPEXPORT  XYPlotManager
            {
                private: XYPlotManagerImpl * m_xyplotmanager_impl;
                private: NXOpen::Session* m_owner;
                /** Constructor */
                public: explicit XYPlotManager(NXOpen::Session *owner);
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~XYPlotManager();
                /** Creates plot on a specified view for given records  @return  Created plot  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * PlotRecords
                (
                    const std::vector<NXOpen::CAE::FTK::BaseRecord *> & records /** Records */,
                    int viewIndex /** View index */
                );
                /** Overlay records on the specific view  @return  Overlayed plot  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * OverlayRecords
                (
                    const std::vector<NXOpen::CAE::FTK::BaseRecord *> & records /** Records */,
                    int viewIndex /** View index */
                );
                /** Gets the current plot on the specific view  @return  Current plot  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * GetCurrentPlot
                (
                    int viewIndex /** View index */
                );
                /** Gets the 2D template manager  @return  2D template manager  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BaseTemplateManager * GetTemplateManager2d
                (
                );
                /** Gets the 3D template manager  @return  3D template manager  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BaseTemplateManager * GetTemplateManager3d
                (
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}
#undef EXPORTLIBRARY
#endif
