#ifndef NXOpen_GEOMETRICUTILITIES_INSTANCEEDITEDEXPRESSIONITEM_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_INSTANCEEDITEDEXPRESSIONITEM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_InstanceEditedExpressionItem.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_InstanceEditedExpressionItem.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class InstanceEditedExpressionItem;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _InstanceEditedExpressionItemBuilder;
        class InstanceEditedExpressionItemImpl;
        /** edited value of one master expression of the input object(s) being patterned.  <br> To create a new instance of this class, use @link GeometricUtilities::InstanceEditedExpressionsList::EditInstanceExpression GeometricUtilities::InstanceEditedExpressionsList::EditInstanceExpression@endlink  <br> */
        class NXOPENCPPEXPORT  InstanceEditedExpressionItem : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: InstanceEditedExpressionItemImpl * m_instanceeditedexpressionitem_impl;
            private: friend class  _InstanceEditedExpressionItemBuilder;
            protected: InstanceEditedExpressionItem();
            public: ~InstanceEditedExpressionItem();
            /**Returns  the master expression  <br> License requirements : None */
            public: NXOpen::Expression * MasterExpression
            (
            );
            /**Returns  the edited value expression for the master expression  <br> License requirements : None */
            public: NXOpen::Expression * ValueExpression
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
