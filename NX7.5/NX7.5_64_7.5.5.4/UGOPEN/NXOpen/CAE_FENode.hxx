#ifndef NXOpen_CAE_FENODE_HXX_INCLUDED
#define NXOpen_CAE_FENODE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FENode.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FENode.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class FEElement;
    }
    class CoordinateSystem;
    namespace CAE
    {
        class _FENodeBuilder;
        class FENodeImpl;
        /** Represents a Finite Element. */
        class NXOPENCPPEXPORT  FENode : public TaggedObject
        {
            private: FENodeImpl * m_fenode_impl;
            private: friend class  _FENodeBuilder;
            protected: FENode();
            public: ~FENode();
            /**Returns  the node label             <br> License requirements : None */
            public: int Label
            (
            );
            /**Returns  the node cooridnates in absolute space  <br> License requirements : None */
            public: NXOpen::Point3d Coordinates
            (
            );
            /**Returns  the nodes reference coordinate system or NULL if it is the absolute coordinate system   <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ReferenceCsys
            (
            );
            /**Returns  the nodes displacement coordinate system or NULL if it is the absolute coordinate system   <br> License requirements : None */
            public: NXOpen::CoordinateSystem * DisplacementCsys
            (
            );
            /** Returns the elements which refer to this node   @return   <br> License requirements : None */
            public: std::vector<NXOpen::CAE::FEElement *> GetElements
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
