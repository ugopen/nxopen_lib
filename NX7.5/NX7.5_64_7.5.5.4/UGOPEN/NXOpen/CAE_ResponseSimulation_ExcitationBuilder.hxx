#ifndef NXOpen_CAE_RESPONSESIMULATION_EXCITATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_EXCITATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_ExcitationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_BaseBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ExcitationBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class BaseBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ExcitationLocationDefinition;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RSEvent;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _ExcitationBuilderBuilder;
            class ExcitationBuilderImpl;
            /** Represents the abstract excitation builder class. Any of real excitation builder
                    must inherit from this class.
                  <br> This is an abstract class, and cannot be created. <br> */
            class NXOPENCPPEXPORT  ExcitationBuilder : public CAE::ResponseSimulation::BaseBuilder
            {
                /** the type of excitation location */
                public: enum ExcitationLocationType
                {
                    ExcitationLocationTypeStaticLoad = -2/** static load */ ,
                    ExcitationLocationTypeDistributedLoad/** distributed load */ ,
                    ExcitationLocationTypeNodalForce/** nodal force */ ,
                    ExcitationLocationTypeEnforcedMotion/** enforced motion */ 
                };

                private: ExcitationBuilderImpl * m_excitationbuilder_impl;
                private: friend class  _ExcitationBuilderBuilder;
                protected: ExcitationBuilder();
                public: ~ExcitationBuilder();
                /**Returns  the parent dynamic event object  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RSEvent * DynamicEvent
                (
                );
                /**Returns  the excitation location definition  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::ExcitationLocationDefinition * ExcitationLocationDefinition
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
