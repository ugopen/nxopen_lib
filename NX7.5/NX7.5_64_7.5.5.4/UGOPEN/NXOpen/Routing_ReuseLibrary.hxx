#ifndef NXOpen_ROUTING_REUSELIBRARY_HXX_INCLUDED
#define NXOpen_ROUTING_REUSELIBRARY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ReuseLibrary.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class ReuseLibrary;
    }
    namespace Routing
    {
        class RouteManager;
    }
    namespace Routing
    {
        class ReuseLibraryImpl;
        /** Represents a @link Routing::ReuseLibrary Routing::ReuseLibrary@endlink   <br> No creator is available in KF. <br> */
        class NXOPENCPPEXPORT  ReuseLibrary
        {
            private: ReuseLibraryImpl * m_reuselibrary_impl;
            private: NXOpen::Routing::RouteManager* m_owner;
            /** Constructor */
            public: explicit ReuseLibrary(NXOpen::Routing::RouteManager *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ReuseLibrary();
            /** Reloads all of the nodes of the Routing Reuse Library based on the current discipline.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void Reload
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
