#ifndef NXOpen_MECHATRONICS_CHANGEMATERIALBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_CHANGEMATERIALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_ChangeMaterialBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_ChangeMaterialBuilder.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Mechatronics
    {
        class ChangeMaterialBuilder;
    }
    namespace Mechatronics
    {
        class CollisionMaterial;
    }
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    class SelectDisplayableObject;
    namespace Mechatronics
    {
        class _ChangeMaterialBuilderBuilder;
        class ChangeMaterialBuilderImpl;
        /** Represents a @link Mechatronics::ChangeMaterial Mechatronics::ChangeMaterial@endlink  builder.  <br> To create a new instance of this class, use @link Mechatronics::ChangeMaterialCollection::CreateChangeMaterialBuilder Mechatronics::ChangeMaterialCollection::CreateChangeMaterialBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ChangeMaterialBuilder : public Mechatronics::PhysicsConstraintBuilder
        {
            private: ChangeMaterialBuilderImpl * m_changematerialbuilder_impl;
            private: friend class  _ChangeMaterialBuilderBuilder;
            protected: ChangeMaterialBuilder();
            public: ~ChangeMaterialBuilder();
            /**Returns  the first body of collision pair. This can be @link RigidBody RigidBody@endlink ,
                    @link CollisionBody CollisionBody@endlink  or @link TransportSurface TransportSurface@endlink .  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::SelectDisplayableObject * FirstBody
            (
            );
            /**Returns  the second body of collision pair. This can be @link RigidBody RigidBody@endlink ,
                    @link CollisionBody CollisionBody@endlink  or @link TransportSurface TransportSurface@endlink .  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::SelectDisplayableObject * SecondBody
            (
            );
            /**Returns  the material. This can be @link CollisionMaterial CollisionMaterial@endlink .  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::CollisionMaterial * CollisionMaterial
            (
            );
            /**Sets  the material. This can be @link CollisionMaterial CollisionMaterial@endlink .  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetCollisionMaterial
            (
                NXOpen::Mechatronics::CollisionMaterial * collisionMaterial /** collisionmaterial */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
