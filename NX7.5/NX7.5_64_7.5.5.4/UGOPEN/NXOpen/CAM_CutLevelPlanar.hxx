#ifndef NXOpen_CAM_CUTLEVELPLANAR_HXX_INCLUDED
#define NXOpen_CAM_CUTLEVELPLANAR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutLevelPlanar.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_CutLevelPlanar.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class CutLevelPlanar;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class _CutLevelPlanarBuilder;
        class CutLevelPlanarImpl;
        /** Represents a cut level object for planar mill. */
        class NXOPENCPPEXPORT  CutLevelPlanar : public TaggedObject
        {
            /** cut level types */
            public: enum Types
            {
                TypesUserDefined/** User Defined */,
                TypesFloorOnly/** Floor Only */,
                TypesFloorAndCriticalDepth/** Floor, Then Critical Depths */,
                TypesCriticalDepth/** Critical Depths */,
                TypesConstant/** Constant */
            };

            private: CutLevelPlanarImpl * m_cutlevelplanar_impl;
            private: friend class  _CutLevelPlanarBuilder;
            protected: CutLevelPlanar();
            public: ~CutLevelPlanar();
            /**Returns  the cut level type  <br> License requirements : None */
            public: NXOpen::CAM::CutLevelPlanar::Types CutLevelType
            (
            );
            /**Sets  the cut level type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutLevelType
            (
                NXOpen::CAM::CutLevelPlanar::Types newValue /** the cut level type */
            );
            /**Returns  the common depth  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * CommonDepth
            (
            );
            /**Returns  the minimum depth  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * MinimumDepth
            (
            );
            /**Returns  the distance from top  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * DistanceFromTop
            (
            );
            /**Returns  the distance from floor  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * DistanceFromFloor
            (
            );
            /**Returns  the incremental side stock  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * IncrementalSideStock
            (
            );
            /**Returns  the top off critical depths  <br> License requirements : None */
            public: bool TopOffCriticalDepths
            (
            );
            /**Sets  the top off critical depths  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTopOffCriticalDepths
            (
                bool newValue /** the top off critical depths */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
