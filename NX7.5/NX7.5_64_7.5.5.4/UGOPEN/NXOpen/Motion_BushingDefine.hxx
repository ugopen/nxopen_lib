#ifndef NXOpen_MOTION_BUSHINGDEFINE_HXX_INCLUDED
#define NXOpen_MOTION_BUSHINGDEFINE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_BushingDefine.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/Motion_BushingDefine.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class BushingDefine;
    }
    class CoordinateSystem;
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class NXMatrix;
    class Point;
    namespace Motion
    {
        class _BushingDefineBuilder;
        class BushingDefineImpl;
        /**
            Represents a Motion BushingDefine
            */
        class NXOPENCPPEXPORT  BushingDefine : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: BushingDefineImpl * m_bushingdefine_impl;
            private: friend class  _BushingDefineBuilder;
            protected: BushingDefine();
            public: ~BushingDefine();
            /**Returns  the action link  <br> License requirements : None */
            public: NXOpen::Motion::SelectLink * ActionLink
            (
            );
            /**Returns  the action point  <br> License requirements : None */
            public: NXOpen::Point * ActionPoint
            (
            );
            /**Sets  the action point  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionPoint
            (
                NXOpen::Point * actionPoint /** actionpoint */ 
            );
            /**Returns  the direction  <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the direction  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the matrix of bushing  <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::NXMatrix * Orientation
            (
            );
            /**Sets  the matrix of bushing  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOrientation
            (
                NXOpen::NXMatrix * orientation /** orientation */ 
            );
            /**Returns  the csys of bushing, the coordinate system of action and reaction are same each other  <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys of bushing, the coordinate system of action and reaction are same each other  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the reaction link  <br> License requirements : None */
            public: NXOpen::Motion::SelectLink * ReactionLink
            (
            );
            /**Returns  the reaction point  <br> License requirements : None */
            public: NXOpen::Point * ReactionPoint
            (
            );
            /**Sets  the reaction point  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReactionPoint
            (
                NXOpen::Point * reactionPoint /** reactionpoint */ 
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
