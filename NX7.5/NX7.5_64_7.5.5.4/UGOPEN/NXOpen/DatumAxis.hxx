#ifndef NXOpen_DATUMAXIS_HXX_INCLUDED
#define NXOpen_DATUMAXIS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DatumAxis.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/ILocation.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/IOrientation.hxx>
#include <NXOpen/IReferenceAxis.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class DatumAxis;
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class DisplayableObject;
    namespace Features
    {
        class Feature;
    }
    class ILocation;
    class INXObject;
    class IOrientation;
    class IReferenceAxis;
    class _DatumAxisBuilder;
    class DatumAxisImpl;
    /** Represents a datum axis  <br> This object can not be created by KF it's the display objet of the datum axis <br> */
    class NXOPENCPPEXPORT  DatumAxis : public DisplayableObject, public virtual IReferenceAxis, public virtual ILocation, public virtual IOrientation
    {
        private: DatumAxisImpl * m_datumaxis_impl;
        private: friend class  _DatumAxisBuilder;
        protected: DatumAxis();
        public: ~DatumAxis();
        /** Sets the end points of the datum axis  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void SetEndPoints
        (
            const NXOpen::Point3d & start /** Start point of the datum axis */,
            const NXOpen::Point3d & end /** End point of the datum axis */
        );
        /**Returns  the origin of the datum axis  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Point3d Origin
        (
        );
        /**Returns  the direction of the datum axis  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Vector3d Direction
        (
        );
        /** Gets the end points of the datum axis  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void GetEndPoints
        (
            NXOpen::Point3d* start /** Start point of datum axis */,
            NXOpen::Point3d* end /** End point of datum axis */
        );
        /**Returns  the feature associated with the datum axis. Note that this is not valid for
                an occurrence. See @link INXObject::IsOccurrence INXObject::IsOccurrence@endlink .  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Features::Feature * Feature
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
