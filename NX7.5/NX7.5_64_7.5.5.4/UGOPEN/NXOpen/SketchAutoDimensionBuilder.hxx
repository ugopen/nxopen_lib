#ifndef NXOpen_SKETCHAUTODIMENSIONBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHAUTODIMENSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchAutoDimensionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Sketch.hxx>
#include <NXOpen/SketchAutoDimensionBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchAutoDimensionBuilder;
    class Builder;
    class SelectNXObjectList;
    class _SketchAutoDimensionBuilderBuilder;
    class SketchAutoDimensionBuilderImpl;
    /** 
    Represents a @link SketchAutoDimensionBuilder SketchAutoDimensionBuilder@endlink 
     <br> To create a new instance of this class, use @link SketchCollection::CreateAutoDimensionBuilder SketchCollection::CreateAutoDimensionBuilder@endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    DimensionType </td> <td> 
     
    Automatic </td> </tr> 

    </table>  
    */
    class NXOPENCPPEXPORT  SketchAutoDimensionBuilder : public Builder
    {
        /** dimension type to be created */
        public: enum DimType
        {
            DimTypeDriving/** Driving dimension*/,
            DimTypeAutomatic/** Automatic dimension*/
        };

        private: SketchAutoDimensionBuilderImpl * m_sketchautodimensionbuilder_impl;
        private: friend class  _SketchAutoDimensionBuilderBuilder;
        protected: SketchAutoDimensionBuilder();
        public: ~SketchAutoDimensionBuilder();
        /**Returns  the selected sketch curves to auto dimension  <br> License requirements : None */
        public: NXOpen::SelectNXObjectList * SelectionObject
        (
        );
        /**Returns  the enum dim type  <br> License requirements : None */
        public: NXOpen::SketchAutoDimensionBuilder::DimType DimensionType
        (
        );
        /**Sets  the enum dim type  <br> License requirements : None */
        public: void SetDimensionType
        (
            NXOpen::SketchAutoDimensionBuilder::DimType dimensionType /** dimensiontype */ 
        );
        /** Get the auto dimensioning rule list from builder  @return  Auto Dimension Rules <br> License requirements : None */
        public: std::vector<NXOpen::Sketch::AutoDimensioningRule> GetRules
        (
        );
        /** Set the auto dimensioning rule list to  builder. All the rules are expected to be in the list 
            exactly once. Variable count can not be zero or negative.  <br> License requirements : None */
        public: void SetRules
        (
            const std::vector<NXOpen::Sketch::AutoDimensioningRule> & rules /** Auto Dimension Rules*/
        );
    };
}
#undef EXPORTLIBRARY
#endif
