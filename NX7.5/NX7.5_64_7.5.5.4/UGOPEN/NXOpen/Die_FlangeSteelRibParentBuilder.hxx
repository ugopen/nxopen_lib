#ifndef NXOpen_DIE_FLANGESTEELRIBPARENTBUILDER_HXX_INCLUDED
#define NXOpen_DIE_FLANGESTEELRIBPARENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_FlangeSteelRibParentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class FlangeSteelRibParentBuilder;
    }
    namespace Die
    {
        class FlangeSteelRibChildBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Die
    {
        class _FlangeSteelRibParentBuilderBuilder;
        class FlangeSteelRibParentBuilderImpl;
        /** Represents a Die Flange Steel Rib Parent sub feature.  <br> This sub feature is created via the main feature builder. <br> */
        class NXOPENCPPEXPORT  FlangeSteelRibParentBuilder : public Features::FeatureBuilder
        {
            private: FlangeSteelRibParentBuilderImpl * m_flangesteelribparentbuilder_impl;
            private: friend class  _FlangeSteelRibParentBuilderBuilder;
            protected: FlangeSteelRibParentBuilder();
            public: ~FlangeSteelRibParentBuilder();
            /**Sets  the thickness of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetThickness
            (
                double thickness /** thickness */ 
            );
            /**Returns  the thickness of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double Thickness
            (
            );
            /**Sets  the offset of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOffset
            (
                double offset /** offset */ 
            );
            /**Returns  the offset of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double Offset
            (
            );
            /**Sets  the chamfer distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetChamferDistance
            (
                double chamferDistance /** chamfer distance */ 
            );
            /**Returns  the chamfer distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double ChamferDistance
            (
            );
            /**Sets  the sheet metal distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetSheetMetalDistance
            (
                double sheetMetalDistance /** sheet metal distance */ 
            );
            /**Returns  the sheet metal distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double SheetMetalDistance
            (
            );
            /**Sets  the back distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackDistance
            (
                double backDistance /** back distance */ 
            );
            /**Returns  the back distance of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double BackDistance
            (
            );
            /**Sets  the use angle toggle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetUseAngle
            (
                int useAngle /** use angle */ 
            );
            /**Returns  the use angle toggle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: int UseAngle
            (
            );
            /**Sets  the angle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the angle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: double Angle
            (
            );
            /**Sets  the design status of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool designStatus /** design status */ 
            );
            /**Returns  the design status of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool displayStatus /** display status */ 
            );
            /**Returns  the display status of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
            /** Creates a child Flange Steel Rib.  @return   <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::FlangeSteelRibChildBuilder * CreateChild
            (
            );
            /** Deletes a child Flange Steel Rib.  <br> License requirements : ug_die_design ("Die Design") */
            public: void DeleteChild
            (
                NXOpen::Die::FlangeSteelRibChildBuilder * diefsribchild /** diefsribchild */ 
            );
            /** Outputs the Flange Steel Rib children  @return  children  <br> License requirements : ug_die_design ("Die Design") */
            public: std::vector<NXOpen::Die::FlangeSteelRibChildBuilder *> GetChildren
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
