#ifndef NXOpen_POSITIONINGDIMENSION_HXX_INCLUDED
#define NXOpen_POSITIONINGDIMENSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PositioningDimension.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class PositioningDimension;
    class Expression;
    class NXObject;
    class _PositioningDimensionBuilder;
    class PositioningDimensionImpl;
    /** Represents a dimension object attached to the feature  <br> Intances of this object cannot be directly be created.  However, instances can be acquired from objects that contain them. <br> */
    class NXOPENCPPEXPORT  PositioningDimension : public NXObject
    {
        /** Represents the subtype of the positioning dimension */
        public: enum Subtype
        {
            SubtypeHorizontal/** Horizontal dimension */,
            SubtypeVertical/** Vertical dimension */,
            SubtypeParallel/** Parallel dimension */,
            SubtypePerpendicular/** Perpendicular dimension */,
            SubtypeParallelDistance/** Parallel at a distance dimension */,
            SubtypeAngular/** Angular dimension */,
            SubtypePointOntoPoint/** Point onto point dimension */,
            SubtypePointOntoLine/** Point onto line dimension */,
            SubtypeLineOntoLine/** Line onto line dimension */
        };

        private: PositioningDimensionImpl * m_positioningdimension_impl;
        private: friend class  _PositioningDimensionBuilder;
        protected: PositioningDimension();
        public: ~PositioningDimension();
        /**
            Returns the subtype of the dimension.
             @return  Subtype of the dimension  <br> License requirements : features_modeling ("FEATURES MODELING"), solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::PositioningDimension::Subtype GetSubtype
        (
        );
        /**Returns  
            the expression for the dimension.
             <br> License requirements : features_modeling ("FEATURES MODELING"), solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Expression * Expression
        (
        );
        /**Returns  
            the target entity.
             <br> License requirements : features_modeling ("FEATURES MODELING"), solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::NXObject * Target
        (
        );
        /**Returns  
            the tool entity.
             <br> License requirements : features_modeling ("FEATURES MODELING"), solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::NXObject * Tool
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
