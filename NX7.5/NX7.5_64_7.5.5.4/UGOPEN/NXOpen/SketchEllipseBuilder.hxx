#ifndef NXOpen_SKETCHELLIPSEBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHELLIPSEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchEllipseBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/SketchEllipseBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchEllipseBuilder;
    class Builder;
    class Expression;
    class Point;
    class _SketchEllipseBuilderBuilder;
    class SketchEllipseBuilderImpl;
    /**
    Represents a @link SketchEllipseBuilder SketchEllipseBuilder@endlink  builder
     <br> To create a new instance of this class, use @link SketchCollection::CreateSketchEllipseBuilder SketchCollection::CreateSketchEllipseBuilder@endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    Closed </td> <td> 
     
    true </td> </tr> 

    <tr><td> 
     
    EndAngle.Value </td> <td> 
     
    360 </td> </tr> 

    <tr><td> 
     
    MajorRadius.Value </td> <td> 
     
    50 (millimeters part), 2 (inches part) </td> </tr> 

    <tr><td> 
     
    MinorRadius.Value </td> <td> 
     
    25 (millimeters part), 1 (inches part) </td> </tr> 

    <tr><td> 
     
    RotationAngle.Value </td> <td> 
     
    0 </td> </tr> 

    <tr><td> 
     
    StartAngle.Value </td> <td> 
     
    0 </td> </tr> 

    </table>  
    */
    class NXOPENCPPEXPORT  SketchEllipseBuilder : public Builder
    {
        private: SketchEllipseBuilderImpl * m_sketchellipsebuilder_impl;
        private: friend class  _SketchEllipseBuilderBuilder;
        protected: SketchEllipseBuilder();
        public: ~SketchEllipseBuilder();
        /**Returns  the center point  <br> License requirements : None */
        public: NXOpen::Point * CenterPoint
        (
        );
        /**Sets  the center point  <br> License requirements : None */
        public: void SetCenterPoint
        (
            NXOpen::Point * centerPoint /** centerpoint */ 
        );
        /**Returns  the point in major axis to calculate the major radius  <br> License requirements : None */
        public: NXOpen::Point * MajorPoint
        (
        );
        /**Sets  the point in major axis to calculate the major radius  <br> License requirements : None */
        public: void SetMajorPoint
        (
            NXOpen::Point * majorPoint /** majorpoint */ 
        );
        /**Returns  the major radius  <br> License requirements : None */
        public: NXOpen::Expression * MajorRadius
        (
        );
        /**Returns  the point in minor axis to calculate the minor radius  <br> License requirements : None */
        public: NXOpen::Point * MinorPoint
        (
        );
        /**Sets  the point in minor axis to calculate the minor radius  <br> License requirements : None */
        public: void SetMinorPoint
        (
            NXOpen::Point * minorPoint /** minorpoint */ 
        );
        /**Returns  the minor radius  <br> License requirements : None */
        public: NXOpen::Expression * MinorRadius
        (
        );
        /**Returns  the closed flag  <br> License requirements : None */
        public: bool Closed
        (
        );
        /**Sets  the closed flag  <br> License requirements : None */
        public: void SetClosed
        (
            bool closed /** closed */ 
        );
        /**Returns  the start angle  <br> License requirements : None */
        public: NXOpen::Expression * StartAngle
        (
        );
        /**Returns  the end angle  <br> License requirements : None */
        public: NXOpen::Expression * EndAngle
        (
        );
        /**Returns  the rotation angle  <br> License requirements : None */
        public: NXOpen::Expression * RotationAngle
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
