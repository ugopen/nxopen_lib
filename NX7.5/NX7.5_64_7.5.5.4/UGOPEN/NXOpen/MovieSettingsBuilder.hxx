#ifndef NXOpen_MOVIESETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_MOVIESETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MovieSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/MovieSettingsBuilder.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    class MovieSettingsBuilder;
    class Builder;
    class _MovieSettingsBuilderBuilder;
    class MovieSettingsBuilderImpl;
    /** This class is the builder for the Movie Settings.  <br> To create a new instance of this class, use @link MovieManager::CreateMovieSettingsBuilder MovieManager::CreateMovieSettingsBuilder@endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    CaptureArea </td> <td> 
     
    Graphics </td> </tr> 

    <tr><td> 
     
    FramesPerSecond </td> <td> 
     
    10 </td> </tr> 

    <tr><td> 
     
    PlaybackSpeed </td> <td> 
     
    AsRecorded </td> </tr> 

    </table>  
    */
    class NXOPENUICPPEXPORT  MovieSettingsBuilder : public Builder
    {
        /** Indicates the are being recorded in the movie. */
        public: enum CaptureAreaChoices
        {
            CaptureAreaChoicesGraphics/** Specifies that the NX graphics contents are to be recorded */,
            CaptureAreaChoicesNxWindow/** Specifies that the NX window contents are to be recorded */,
            CaptureAreaChoicesDesktop/** Specifies that the Desktop contents are to be recorded */
        };

        /** Indicates the playback speed of the movie. */
        public: enum PlaybackSpeedChoices
        {
            PlaybackSpeedChoicesVerySlow/** Specifies very slow playback speed (quarter of record speed) */,
            PlaybackSpeedChoicesSlow/** Specifies slow playback speed (half of record speed) */,
            PlaybackSpeedChoicesAsRecorded/** Specifies playback speed same as record speed */,
            PlaybackSpeedChoicesFast/** Specifies fast playback speed (twice record speed) */,
            PlaybackSpeedChoicesVeryFast/** Specifies very fast playback speed (four times record speed) */
        };

        private: MovieSettingsBuilderImpl * m_moviesettingsbuilder_impl;
        private: friend class  _MovieSettingsBuilderBuilder;
        protected: MovieSettingsBuilder();
        public: ~MovieSettingsBuilder();
        /**Returns  the area captured for movie creation.  <br> License requirements : None */
        public: NXOpen::MovieSettingsBuilder::CaptureAreaChoices CaptureArea
        (
        );
        /**Sets  the area captured for movie creation.  <br> License requirements : None */
        public: void SetCaptureArea
        (
            NXOpen::MovieSettingsBuilder::CaptureAreaChoices captureArea /** capturearea */ 
        );
        /**Returns  the frames per second for the movie. This setting dictates the quality of the movie that is created.
                A smaller value would create a coarse movie with small file size, whereas, a bigger 
                value would create a smooth movie with a big file size
                 <br> License requirements : None */
        public: int FramesPerSecond
        (
        );
        /**Sets  the frames per second for the movie. This setting dictates the quality of the movie that is created.
                A smaller value would create a coarse movie with small file size, whereas, a bigger 
                value would create a smooth movie with a big file size
                 <br> License requirements : None */
        public: void SetFramesPerSecond
        (
            int framesPerSecond /** framespersecond */ 
        );
        /**Returns  the speed at which the recorded movie is played back.  <br> License requirements : None */
        public: NXOpen::MovieSettingsBuilder::PlaybackSpeedChoices PlaybackSpeed
        (
        );
        /**Sets  the speed at which the recorded movie is played back.  <br> License requirements : None */
        public: void SetPlaybackSpeed
        (
            NXOpen::MovieSettingsBuilder::PlaybackSpeedChoices playbackSpeed /** playbackspeed */ 
        );
        /**Returns  the Codec that is used to create the movie. 
             <br> License requirements : None */
        public: NXString CodecFourcc
        (
        );
        /**Sets  the Codec that is used to create the movie. 
             <br> License requirements : None */
        public: void SetCodecFourcc
        (
            const NXString & codecFourcc /** codecfourcc */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
