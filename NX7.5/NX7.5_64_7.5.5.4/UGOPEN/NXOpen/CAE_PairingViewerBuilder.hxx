#ifndef NXOpen_CAE_PAIRINGVIEWERBUILDER_HXX_INCLUDED
#define NXOpen_CAE_PAIRINGVIEWERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PairingViewerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_PairingViewerBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class PairingViewerBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _PairingViewerBuilderBuilder;
        class PairingViewerBuilderImpl;
        /** Represents the correlation pairing viewer builder  <br> To create a new instance of this class, use @link CAE::CorrelSolutionCollection::CreatePairingViewerBuilder CAE::CorrelSolutionCollection::CreatePairingViewerBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  PairingViewerBuilder : public Builder
        {
            private: PairingViewerBuilderImpl * m_pairingviewerbuilder_impl;
            private: friend class  _PairingViewerBuilderBuilder;
            protected: PairingViewerBuilder();
            public: ~PairingViewerBuilder();
            /**Returns  the number of modes to be displayed in the viewer 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") int NumDspModes
            (
            );
            /**Sets  the number of modes to be displayed in the viewer 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") void SetNumDspModes
            (
                int numDspModes /** num dsp modes */ 
            );
            /**Returns  the reference modes viewer position 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") int RefPos
            (
            );
            /**Sets  the reference modes viewer position 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") void SetRefPos
            (
                int refPos /** ref pos */ 
            );
            /**Returns  the working modes viewer position 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") int WrkPos
            (
            );
            /**Sets  the working modes viewer position 
             @deprecated Deprecated in NX6.0.2 <br> 
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.2") void SetWrkPos
            (
                int wrkPos /** wrk pos */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
