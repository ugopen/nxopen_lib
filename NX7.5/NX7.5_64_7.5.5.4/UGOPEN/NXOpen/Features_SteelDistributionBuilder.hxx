#ifndef NXOpen_FEATURES_STEELDISTRIBUTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STEELDISTRIBUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SteelDistributionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SteelDistributionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class SteelDistributionBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBodyList;
    namespace Features
    {
        class _SteelDistributionBuilderBuilder;
        class SteelDistributionBuilderImpl;
        /**
            Represents a @link Features::SteelDistribution Features::SteelDistribution@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateSteelDistributionBuilder Features::FeatureCollection::CreateSteelDistributionBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  SteelDistributionBuilder : public Features::FeatureBuilder
        {
            /** Sa Name */
            public: enum SaName
            {
                SaNameFirstValue/** first value */ 
            };

            /** Sa Type */
            public: enum SaType
            {
                SaTypeFirstValue/** first value */ 
            };

            /** Sa Size */
            public: enum SaSize
            {
                SaSizeFirstValue/** first value */ 
            };

            /** Sa Material */
            public: enum SaMaterial
            {
                SaMaterialFirstValue/** first value */ 
            };

            /** Sa Form */
            public: enum SaForm
            {
                SaFormFirstValue/** first value */ 
            };

            private: SteelDistributionBuilderImpl * m_steeldistributionbuilder_impl;
            private: friend class  _SteelDistributionBuilderBuilder;
            protected: SteelDistributionBuilder();
            public: ~SteelDistributionBuilder();
            /**Returns  the assembly part  <br> License requirements : None */
            public: NXString AssemblyPart
            (
            );
            /**Sets  the assembly part  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAssemblyPart
            (
                const NXString & assemblyPart /** assemblypart */ 
            );
            /**Returns  the Template Category Name. Only used in managed mode, ignored in native mode.  <br> License requirements : None */
            public: NXString TemplateCategoryName
            (
            );
            /**Sets  the Template Category Name. Only used in managed mode, ignored in native mode.  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetTemplateCategoryName
            (
                const NXString & templateCategoryName /** templatecategoryname */ 
            );
            /**Returns  the Template Name. Only used in managed mode, ignored in native mode.  <br> License requirements : None */
            public: NXString TemplateName
            (
            );
            /**Sets  the Template Name. Only used in managed mode, ignored in native mode.  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetTemplateName
            (
                const NXString & templateName /** templatename */ 
            );
            /**Returns  the Item Type. Only used in managed mode, ignored in native mode.  <br> License requirements : None */
            public: NXString ItemType
            (
            );
            /**Sets  the Item Type. Only used in managed mode, ignored in native mode.  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetItemType
            (
                const NXString & itemType /** itemtype */ 
            );
            /**Returns  the description  <br> License requirements : None */
            public: NXString FeatureName
            (
            );
            /**Sets  the description  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetFeatureName
            (
                const NXString & featureName /** featurename */ 
            );
            /**Returns  the get subcomponent  <br> License requirements : None */
            public: bool SubComponent
            (
            );
            /**Sets  the get subcomponent  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSubComponent
            (
                bool subComponent /** subcomponent */ 
            );
            /**Returns  the steel bodies  <br> License requirements : None */
            public: NXOpen::SelectBodyList * SteelBodies
            (
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXOpen::Features::SteelDistributionBuilder::SaName Name
            (
            );
            /**Sets  the name  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetName
            (
                NXOpen::Features::SteelDistributionBuilder::SaName name /** name */ 
            );
            /**Returns  the type  <br> License requirements : None */
            public: NXOpen::Features::SteelDistributionBuilder::SaType Type
            (
            );
            /**Sets  the type  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetType
            (
                NXOpen::Features::SteelDistributionBuilder::SaType type /** type */ 
            );
            /**Returns  the size  <br> License requirements : None */
            public: NXOpen::Features::SteelDistributionBuilder::SaSize Size
            (
            );
            /**Sets  the size  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSize
            (
                NXOpen::Features::SteelDistributionBuilder::SaSize size /** size */ 
            );
            /**Returns  the material  <br> License requirements : None */
            public: NXOpen::Features::SteelDistributionBuilder::SaMaterial Material
            (
            );
            /**Sets  the material  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetMaterial
            (
                NXOpen::Features::SteelDistributionBuilder::SaMaterial material /** material */ 
            );
            /**Returns  the form  <br> License requirements : None */
            public: NXOpen::Features::SteelDistributionBuilder::SaForm Form
            (
            );
            /**Sets  the form  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetForm
            (
                NXOpen::Features::SteelDistributionBuilder::SaForm form /** form */ 
            );
            /**Returns  the description  <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Returns  the section number  <br> License requirements : None */
            public: NXString SectionNumber
            (
            );
            /**Sets  the section number  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSectionNumber
            (
                const NXString & sectionNumber /** sectionnumber */ 
            );
            /**Returns  the sa project  <br> License requirements : None */
            public: NXString SaProject
            (
            );
            /**Sets  the sa project  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetSaProject
            (
                const NXString & saProject /** saproject */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
