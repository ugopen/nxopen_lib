#ifndef NXOpen_EXPRESSIONSECTIONSET_HXX_INCLUDED
#define NXOpen_EXPRESSIONSECTIONSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ExpressionSectionSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class ExpressionSectionSet;
    class Expression;
    class NXObject;
    class Section;
    class _ExpressionSectionSetBuilder;
    class ExpressionSectionSetImpl;
    /** An object that binds an expression with an entity section in the context of a list.
     <br> To create a new instance of this class, use @link Part::CreateEmptyExpressionSectionSet Part::CreateEmptyExpressionSectionSet@endlink  <br> */
    class NXOPENCPPEXPORT  ExpressionSectionSet : public NXObject
    {
        private: ExpressionSectionSetImpl * m_expressionsectionset_impl;
        private: friend class  _ExpressionSectionSetBuilder;
        protected: ExpressionSectionSet();
        public: ~ExpressionSectionSet();
        /**Returns  the section
             <br> License requirements : None */
        public: NXOpen::Section * Section
        (
        );
        /**Sets  the section
             <br> License requirements : None */
        public: void SetSection
        (
            NXOpen::Section * sectionTg /** section tg */ 
        );
        /**Returns  the expression
             <br> License requirements : None */
        public: NXOpen::Expression * ItemValue
        (
        );
        /** Sets the value for this item.
            This is deprecated.  Instead, use @link ItemValue ItemValue@endlink  to get the @link Expression Expression@endlink , and
            then set the value using @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink 
            
         @deprecated Deprecated in NX6.0.0 <br> 
         <br> License requirements : None */
        public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetItemValue
        (
            const NXString & value /** input value   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Returns  the flip flag
             <br> License requirements : None */
        public: bool ItemFlipFlag
        (
        );
        /**Sets  the flip flag
             <br> License requirements : None */
        public: void SetItemFlipFlag
        (
            bool flip /** flip */ 
        );
        /**Returns  the units type.
            This is deprecated.  Instead, use @link ItemValue ItemValue@endlink  to get the @link Expression Expression@endlink , and
            then use @link Expression::Units Expression::Units @endlink and @link Expression::SetUnits Expression::SetUnits @endlink .
            
         @deprecated Deprecated in NX6.0.0 <br> 
         <br> License requirements : None */
        public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXString ItemUnitsType
        (
        );
        /**Sets  the units type.
            This is deprecated.  Instead, use @link ItemValue ItemValue@endlink  to get the @link Expression Expression@endlink , and
            then use @link Expression::Units Expression::Units @endlink and @link Expression::SetUnits Expression::SetUnits @endlink .
            
         @deprecated Deprecated in NX6.0.0 <br> 
         <br> License requirements : None */
        public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetItemUnitsType
        (
            const NXString & unitsType /** input value */
        );
        /**Returns  the index in the list
             <br> License requirements : None */
        public: int ItemIndex
        (
        );
        /**Sets  the index in the list
             <br> License requirements : None */
        public: void SetItemIndex
        (
            int index /** index */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
