#ifndef NXOpen_DRAWINGS_VIEWORIENTATIONBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWORIENTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewOrientationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewOrientationBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class ViewOrientationBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectView;
    namespace Drawings
    {
        class _ViewOrientationBuilderBuilder;
        class ViewOrientationBuilderImpl;
        /**
            Represents a ViewOrientationBuilder.
            The View Orientation Block is used to specify orientation of the view, and 
            the view being inherited or sectioned, if needed.
            */
        class NXOPENCPPEXPORT  ViewOrientationBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /**  This enum represents view orientation type.  
                    @link Drawings::ViewOrientationBuilder::OrientationInheritOrientation Drawings::ViewOrientationBuilder::OrientationInheritOrientation@endlink  and @link Drawings::ViewOrientationBuilder::OrientationSectionExisting Drawings::ViewOrientationBuilder::OrientationSectionExisting@endlink  options require a view selection.
                    */
            public: enum Orientation
            {
                OrientationOrthographic/** Orthographic */,
                OrientationInheritOrientation/** Inherit Orientation from a View */,
                OrientationUseParentOrientation/** Use Parent View Orientation */,
                OrientationUseParentOrienation = 2/** DO NOT USE Deprecated as of NX75 */,
                OrientationSectionExisting/** Section an Existing View */
            };

            private: ViewOrientationBuilderImpl * m_vieworientationbuilder_impl;
            private: friend class  _ViewOrientationBuilderBuilder;
            protected: ViewOrientationBuilder();
            public: ~ViewOrientationBuilder();
            /**Returns  the orientation type  <br> License requirements : None */
            public: NXOpen::Drawings::ViewOrientationBuilder::Orientation OrientationType
            (
            );
            /**Sets  the orientation type  <br> License requirements : drafting ("DRAFTING") */
            public: void SetOrientationType
            (
                NXOpen::Drawings::ViewOrientationBuilder::Orientation orientationType /** orientationtype */ 
            );
            /**Returns  the select view  <br> License requirements : None */
            public: NXOpen::SelectView * SelectView
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
