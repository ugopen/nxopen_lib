#ifndef NXOpen_CAM_TOOLPATHTILTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TOOLPATHTILTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ToolPathTiltBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class ToolPathTiltBuilder;
    }
    class Builder;
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class _ToolPathTiltBuilderBuilder;
        class ToolPathTiltBuilderImpl;
        /** Represents a Tool Path Tilt Builder  <br> To create a new instance of this class, use @link CAM::CAMSetup::CreateToolPathTiltBuilder CAM::CAMSetup::CreateToolPathTiltBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ToolPathTiltBuilder : public Builder
        {
            private: ToolPathTiltBuilderImpl * m_toolpathtiltbuilder_impl;
            private: friend class  _ToolPathTiltBuilderBuilder;
            protected: ToolPathTiltBuilder();
            public: ~ToolPathTiltBuilder();
            /**Returns  the fan distance  <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * FanDistance
            (
            );
            /**Returns  the maximum tilt angle  <br> License requirements : None */
            public: double MaxTiltAngle
            (
            );
            /**Sets  the maximum tilt angle  <br> License requirements : None */
            public: void SetMaxTiltAngle
            (
                double maxTiltangle /** the value of maximal tilt angle */
            );
            /**Returns  the tool axis change  <br> License requirements : None */
            public: double ToolAxisChange
            (
            );
            /**Sets  the tool axis change  <br> License requirements : None */
            public: void SetToolAxisChange
            (
                double toolaxisChange /** the value of maximum tool axis change */
            );
            /**Returns  the minimum safeclearance  <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * MinSafeClearance
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
