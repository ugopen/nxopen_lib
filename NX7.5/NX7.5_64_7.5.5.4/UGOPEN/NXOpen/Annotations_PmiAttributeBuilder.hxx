#ifndef NXOpen_ANNOTATIONS_PMIATTRIBUTEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIATTRIBUTEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiAttributeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_AssociatedObjectsBuilder.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_PmiAttributeBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class PmiAttributeBuilder;
    }
    namespace Annotations
    {
        class AssociatedObjectsBuilder;
    }
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class Pmi;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class Builder;
    class NXObject;
    namespace Annotations
    {
        class _PmiAttributeBuilderBuilder;
        class PmiAttributeBuilderImpl;
        /** Represents a @link Annotations::PmiAttribute Annotations::PmiAttribute@endlink  builder  <br> To create a new instance of this class, use @link Annotations::PmiAttributeCollection::CreatePmiAttributeBuilder Annotations::PmiAttributeCollection::CreatePmiAttributeBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  PmiAttributeBuilder : public Builder
        {
            private: PmiAttributeBuilderImpl * m_pmiattributebuilder_impl;
            private: friend class  _PmiAttributeBuilderBuilder;
            protected: PmiAttributeBuilder();
            public: ~PmiAttributeBuilder();
            /**Returns  the @link Annotations::OriginBuilder Annotations::OriginBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /**Returns  the @link Annotations::LeaderBuilder Annotations::LeaderBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::LeaderBuilder * Leader
            (
            );
            /**Returns  the @link Annotations::AssociatedObjectsBuilder Annotations::AssociatedObjectsBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::AssociatedObjectsBuilder * AssociatedObjects
            (
            );
            /**Returns  the @link Annotations::StyleBuilder Annotations::StyleBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
            /**Returns  the business modifier  <br> License requirements : None */
            public: NXOpen::NXObject * BusinessModifier
            (
            );
            /**Sets  the business modifier  <br> License requirements : None */
            public: void SetBusinessModifier
            (
                NXOpen::NXObject * businessModifier /** businessmodifier */ 
            );
            /**Returns  the knowledge fusion class name file, the default class is UG provided pmi KF class  <br> License requirements : None */
            public: NXString KnowledgeFusionClassName
            (
            );
            /**Sets  the knowledge fusion class name file, the default class is UG provided pmi KF class  <br> License requirements : None */
            public: void SetKnowledgeFusionClassName
            (
                const NXString & knowledgeFusionClassName /** knowledgefusionclassname */ 
            );
            /**  Returns the attribute values @return   <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetAttributeValues
            (
            );
            /** Sets the attribute values <br> License requirements : None */
            public: void SetAttributeValues
            (
                const std::vector<NXOpen::NXObject *> & attributeValues /** attribute values */
            );
            /**Returns  the @link Annotations::Pmi Annotations::Pmi@endlink  for this annotation  <br> License requirements : None */
            public: NXOpen::Annotations::Pmi * Attribute
            (
            );
            /**Sets  the @link Annotations::Pmi Annotations::Pmi@endlink  for this annotation  <br> License requirements : None */
            public: void SetAttribute
            (
                NXOpen::Annotations::Pmi * attribute /** attribute */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
