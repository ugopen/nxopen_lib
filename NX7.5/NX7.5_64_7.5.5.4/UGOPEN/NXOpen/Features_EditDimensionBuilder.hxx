#ifndef NXOpen_FEATURES_EDITDIMENSIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EDITDIMENSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EditDimensionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_EditDimensionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class EditDimensionBuilder;
    }
    namespace Annotations
    {
        class SelectDimension;
    }
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    namespace Features
    {
        class _EditDimensionBuilderBuilder;
        class EditDimensionBuilderImpl;
        /** Represents a builder of edit feature dimensions  <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateEditDimensionBuilder Features::FeatureCollection::CreateEditDimensionBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DisplayAsPmi </td> <td> 
         
        0 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  EditDimensionBuilder : public Builder
        {
            private: EditDimensionBuilderImpl * m_editdimensionbuilder_impl;
            private: friend class  _EditDimensionBuilderBuilder;
            protected: EditDimensionBuilder();
            public: ~EditDimensionBuilder();
            /**Returns  the list of features  <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * FeatureSet
            (
            );
            /**Returns  the feature dimension  <br> License requirements : None */
            public: NXOpen::Annotations::SelectDimension * Dimension
            (
            );
            /**Returns  the display as pmi flag  <br> License requirements : None */
            public: bool DisplayAsPmi
            (
            );
            /**Sets  the display as pmi flag  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDisplayAsPmi
            (
                bool displayAsPmi /** displayaspmi */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
