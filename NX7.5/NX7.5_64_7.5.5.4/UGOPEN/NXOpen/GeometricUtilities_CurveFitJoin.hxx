#ifndef NXOpen_GEOMETRICUTILITIES_CURVEFITJOIN_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CURVEFITJOIN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_CurveFitJoin.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveFitJoin.hxx>
#include <NXOpen/GeometricUtilities_CurveFitOptions.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class CurveFitJoin;
    }
    namespace GeometricUtilities
    {
        class CurveFitOptions;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _CurveFitJoinBuilder;
        class CurveFitJoinImpl;
        /** Represents the curve fit join data 
            */
        class NXOPENCPPEXPORT  CurveFitJoin : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents the curve join method */
            public: enum JoinMethod
            {
                JoinMethodNo/** No */,
                JoinMethodCubic/** Cubic */,
                JoinMethodGenernal/** General */,
                JoinMethodQuintic/** Quintic */
            };

            private: CurveFitJoinImpl * m_curvefitjoin_impl;
            private: friend class  _CurveFitJoinBuilder;
            protected: CurveFitJoin();
            public: ~CurveFitJoin();
            /**Returns  the curve fit options  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitOptions * CurveFitOptions
            (
            );
            /**Sets  the curve join method 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurveJoinMethod
            (
                NXOpen::GeometricUtilities::CurveFitJoin::JoinMethod curveJoinMethod /** curve fit method */
            );
            /**Returns  the curve join method 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::CurveFitJoin::JoinMethod CurveJoinMethod
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
