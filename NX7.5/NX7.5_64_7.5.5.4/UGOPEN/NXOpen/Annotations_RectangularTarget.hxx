#ifndef NXOpen_ANNOTATIONS_RECTANGULARTARGET_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_RECTANGULARTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_RectangularTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_IRectangularTarget.hxx>
#include <NXOpen/Annotations_AreaTarget.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class RectangularTarget;
    }
    namespace Annotations
    {
        class AreaTarget;
    }
    namespace Annotations
    {
        class IRectangularTarget;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class Expression;
    class INXObject;
    namespace Annotations
    {
        class _RectangularTargetBuilder;
        class RectangularTargetImpl;
        /** Represents a rectangular datum target */
        class NXOPENCPPEXPORT  RectangularTarget : public Annotations::AreaTarget, public virtual Annotations::IRectangularTarget
        {
            private: RectangularTargetImpl * m_rectangulartarget_impl;
            private: friend class  _RectangularTargetBuilder;
            protected: RectangularTarget();
            public: ~RectangularTarget();
            /** Returns the target length  @return  Length data  <br> License requirements : None */
            public: virtual NXOpen::Annotations::Value GetLength
            (
            );
            /** Sets the target length  <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetLength
            (
                const NXOpen::Annotations::Value & length /** New length data */
            );
            /** Returns the target width  @return  Width data  <br> License requirements : None */
            public: virtual NXOpen::Annotations::Value GetWidth
            (
            );
            /** Sets the target width  <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetWidth
            (
                const NXOpen::Annotations::Value & width /** New width data */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
