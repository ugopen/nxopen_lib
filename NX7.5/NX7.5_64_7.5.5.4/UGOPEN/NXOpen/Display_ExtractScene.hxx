#ifndef NXOpen_DISPLAY_EXTRACTSCENE_HXX_INCLUDED
#define NXOpen_DISPLAY_EXTRACTSCENE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_ExtractScene.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Display_ExtractScene.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Display
    {
        class ExtractScene;
    }
    class Builder;
    namespace Display
    {
        class _ExtractSceneBuilder;
        class ExtractSceneImpl;
        /**
            Represents a @link Display::ExtractScene Display::ExtractScene@endlink 
             <br> To create a new instance of this class, use @link ViewCollection::CreateExtractScene ViewCollection::CreateExtractScene@endlink  <br> */
        class NXOPENCPPEXPORT  ExtractScene : public Builder
        {
            private: ExtractSceneImpl * m_extractscene_impl;
            private: friend class  _ExtractSceneBuilder;
            protected: ExtractScene();
            public: ~ExtractScene();
            /** TODO: fill in a description for this  <br> License requirements : None */
            public: void Information
            (
            );
            /**Returns  the scene name  <br> License requirements : None */
            public: NXString SceneName
            (
            );
            /**Sets  the scene name  <br> License requirements : None */
            public: void SetSceneName
            (
                const NXString & sceneName /** scenename */ 
            );
            /** Gets an image file using file selection.  <br> License requirements : None */
            public: void ImageFileSelect
            (
            );
            /** Returns the scene description  @return   <br> License requirements : None */
            public: std::vector<NXString> GetSceneDescription
            (
            );
            /** Sets the scene description  <br> License requirements : None */
            public: void SetSceneDescription
            (
                const std::vector<NXString> & sceneDescription /** scenedescription */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
