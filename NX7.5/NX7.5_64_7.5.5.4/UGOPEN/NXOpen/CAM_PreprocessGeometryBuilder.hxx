#ifndef NXOpen_CAM_PREPROCESSGEOMETRYBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PREPROCESSGEOMETRYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PreprocessGeometryBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class PreprocessGeometryBuilder;
    }
    class Builder;
    class NXObject;
    class SmartObject;
    namespace CAM
    {
        class _PreprocessGeometryBuilderBuilder;
        class PreprocessGeometryBuilderImpl;
        /** Represents a Preprocess Geometry Builder  <br> To create a new instance of this class, use @link CAM::CAMSetup::CreatePreprocessGeometryBuilder CAM::CAMSetup::CreatePreprocessGeometryBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  PreprocessGeometryBuilder : public Builder
        {
            private: PreprocessGeometryBuilderImpl * m_preprocessgeometrybuilder_impl;
            private: friend class  _PreprocessGeometryBuilderBuilder;
            protected: PreprocessGeometryBuilder();
            public: ~PreprocessGeometryBuilder();
            /**Returns  the default triangle tolerance  <br> License requirements : cam_base ("CAM BASE") */
            public: double TriangleTolerance
            (
            );
            /**Sets  the default triangle tolerance  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTriangleTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the default tool axis vector  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::SmartObject * FixedVector
            (
            );
            /**Sets  the default tool axis vector  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFixedVector
            (
                NXOpen::SmartObject * newVector /** new vector */ 
            );
            /** Create new facet body  <br> License requirements : None */
            public: void Create
            (
                NXOpen::NXObject * obj /** the new solid body, it will be converted to facet body in function */,
                double tolerance /** tolerance */,
                NXOpen::NXObject * vector /** vector */
            );
            /** Delete one facet body  <br> License requirements : None */
            public: void Delete
            (
                NXOpen::NXObject * obj /** the solid body,its relevant facet body will be deleted actually */
            );
            /** Get tolerance and vector of facet body which is gotten from relevant solid body  <br> License requirements : None */
            public: void GetParameter
            (
                NXOpen::NXObject * obj /** the solid body,will find relevant facet body dependent on it*/,
                double* tolerance /** tolerance */,
                NXOpen::NXObject ** vector /** vector */
            );
            /** Set tolerance and vector for facet body which is gotten from relevant solid body  <br> License requirements : None */
            public: void SetParameter
            (
                NXOpen::NXObject * obj /** the solid body,will find relevant facet body dependent on it*/,
                double tolerance /** tolerance */,
                NXOpen::NXObject * vector /** vector */
            );
            /** Get solid bodies and relevant facet bodies  <br> License requirements : None */
            public: void GetObjects
            (
                std::vector<NXOpen::NXObject *> & solidBodies /** the solid bodies */,
                std::vector<NXOpen::NXObject *> & facetBodies /** the facet bodies, corresponding to facet bodies */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
