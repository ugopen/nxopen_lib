#ifndef NXOpen_ROUTING_COPECORNERBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_COPECORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_CopeCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_CopeCornerBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class CopeCornerBuilder;
    }
    class Builder;
    namespace Routing
    {
        class Stock;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Routing
    {
        class _CopeCornerBuilderBuilder;
        class CopeCornerBuilderImpl;
        /** Builder class for Cope Corner object <br> To create a new instance of this class, use @link Routing::RouteManager::CreateCopeCornerBuilder Routing::RouteManager::CreateCopeCornerBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  CopeCornerBuilder : public Builder
        {
            private: CopeCornerBuilderImpl * m_copecornerbuilder_impl;
            private: friend class  _CopeCornerBuilderBuilder;
            protected: CopeCornerBuilder();
            public: ~CopeCornerBuilder();
            /**Returns  the user selected @link Routing::ControlPoint Routing::ControlPoint@endlink 
                        for cope corner creation.
                     <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::SelectNXObject * SelectControlPoint
            (
            );
            /**Returns  the user selected correct object where correct object is
                        @link Routing::Stock Routing::Stock@endlink  and @link Routing::ISegment Routing::ISegment@endlink .
                      <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::SelectNXObjectList * SelectCopeStock
            (
            );
            /** Set the @link Routing::Stock Routing::Stock@endlink  object list when list box
                        is updated.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: void SetStockList
            (
                const std::vector<NXOpen::Routing::Stock *> & objects /** Routing Stocks for cope creation*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
