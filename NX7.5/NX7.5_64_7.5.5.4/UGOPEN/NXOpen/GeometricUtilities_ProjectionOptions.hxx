#ifndef NXOpen_GEOMETRICUTILITIES_PROJECTIONOPTIONS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PROJECTIONOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ProjectionOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _ProjectionOptionsBuilder;
        class ProjectionOptionsImpl;
        /** Represents a ProjectionOptions */
        class NXOPENCPPEXPORT  ProjectionOptions : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the projection direction types */
            public: enum DirectionType
            {
                DirectionTypeFaceNormal/** Face Normal */,
                DirectionTypeCrvPlaneNormal/** Curve plane Normal */,
                DirectionTypeVector/** Vector Constructor */
            };

            private: ProjectionOptionsImpl * m_projectionoptions_impl;
            private: friend class  _ProjectionOptionsBuilder;
            protected: ProjectionOptions();
            public: ~ProjectionOptions();
            /**Sets  the Projection vector  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProjectVector
            (
                NXOpen::Direction * projectDirection /** Direction */
            );
            /**Returns  the Projection vector  <br> License requirements : None */
            public: NXOpen::Direction * ProjectVector
            (
            );
            /**Sets   the Projection direction method  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProjectDirectionMethod
            (
                NXOpen::GeometricUtilities::ProjectionOptions::DirectionType projectDirectionMethod /** 0: Face normal; 1: Vector constructor */
            );
            /**Returns   the Projection direction method  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions::DirectionType ProjectDirectionMethod
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
