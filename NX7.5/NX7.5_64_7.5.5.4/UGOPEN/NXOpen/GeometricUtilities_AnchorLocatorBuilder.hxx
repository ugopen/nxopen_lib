#ifndef NXOpen_GEOMETRICUTILITIES_ANCHORLOCATORBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_ANCHORLOCATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_AnchorLocatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_AnchorLocatorBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class AnchorLocatorBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _AnchorLocatorBuilderBuilder;
        class AnchorLocatorBuilderImpl;
        /** Represents a @link GeometricUtilities::AnchorLocatorBuilder GeometricUtilities::AnchorLocatorBuilder@endlink  */
        class NXOPENCPPEXPORT  AnchorLocatorBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: AnchorLocatorBuilderImpl * m_anchorlocatorbuilder_impl;
            private: friend class  _AnchorLocatorBuilderBuilder;
            protected: AnchorLocatorBuilder();
            public: ~AnchorLocatorBuilder();
            /**Returns  the origin of the plane  <br> License requirements : None */
            public: NXOpen::Point3d Origin
            (
            );
            /**Sets  the origin of the plane  <br> License requirements : None */
            public: void SetOrigin
            (
                const NXOpen::Point3d & origin /** origin */ 
            );
            /**Returns  the x-axis of the plane  <br> License requirements : None */
            public: NXOpen::Vector3d XAxis
            (
            );
            /**Sets  the x-axis of the plane  <br> License requirements : None */
            public: void SetXAxis
            (
                const NXOpen::Vector3d & xAxis /** xaxis */ 
            );
            /**Returns  the y-axis of the plane  <br> License requirements : None */
            public: NXOpen::Vector3d YAxis
            (
            );
            /**Sets  the y-axis of the plane  <br> License requirements : None */
            public: void SetYAxis
            (
                const NXOpen::Vector3d & yAxis /** yaxis */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
