#ifndef NXOpen_CAM_UDE_HXX_INCLUDED
#define NXOpen_CAM_UDE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_Ude.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Ude.hxx>
#include <NXOpen/CAM_UdeParameter.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class Ude;
    }
    namespace CAM
    {
        class UdeParameter;
    }
    namespace CAM
    {
        class _UdeBuilder;
        class UdeImpl;
        /** Represetns a User Defined Event  <br> To create a new instance of this class, use @link CAM::UdeSet::CreateUde CAM::UdeSet::CreateUde@endlink  <br> */
        class NXOPENCPPEXPORT  Ude : public TaggedObject
        {
            private: UdeImpl * m_ude_impl;
            private: friend class  _UdeBuilder;
            protected: Ude();
            public: ~Ude();
            /**Returns  the ude  name  <br> License requirements : None */
            public: NXString UdeName
            (
            );
            /**Sets  the ude  name  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetUdeName
            (
                const NXString & udeName /** the name of the Ude*/
            );
            /**Returns  the number of parameters <br> License requirements : None */
            public: int NumberOfParameters
            (
            );
            /** the parameter at the input index @return  the parameter  <br> License requirements : None */
            public: NXOpen::CAM::UdeParameter * GetParameter
            (
                const NXString & parameterName /**the parameter name  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  output load tool <br> License requirements : None */
            public: bool OutputLoadTool
            (
            );
            /**Sets  output load tool <br> License requirements : None */
            public: void SetOutputLoadTool
            (
                bool loadTool /** output load tool */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
