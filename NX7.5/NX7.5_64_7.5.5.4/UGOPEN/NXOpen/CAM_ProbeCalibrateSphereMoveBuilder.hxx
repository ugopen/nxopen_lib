#ifndef NXOpen_CAM_PROBECALIBRATESPHEREMOVEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PROBECALIBRATESPHEREMOVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ProbeCalibrateSphereMoveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ProbeCalibrateSphereMoveBuilder.hxx>
#include <NXOpen/CAM_ProbeProtectedParametersBuilder.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class ProbeCalibrateSphereMoveBuilder;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    namespace CAM
    {
        class ProbeProtectedParametersBuilder;
    }
    class NXObject;
    class Point;
    namespace CAM
    {
        class _ProbeCalibrateSphereMoveBuilderBuilder;
        class ProbeCalibrateSphereMoveBuilderImpl;
        /** Represents the Probe Calibrate Sphere Move Builder  <br> To create a new instance of this class, use @link CAM::MoveCollection::CreateProbeCalibrateSphereMoveBuilder CAM::MoveCollection::CreateProbeCalibrateSphereMoveBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ProbeCalibrateSphereMoveBuilder : public CAM::MoveBuilder
        {
            /** the geometry types */
            public: enum Geometry
            {
                GeometrySphere/** Sphere */,
                GeometryPoint/** Point */
            };

            private: ProbeCalibrateSphereMoveBuilderImpl * m_probecalibratespheremovebuilder_impl;
            private: friend class  _ProbeCalibrateSphereMoveBuilderBuilder;
            protected: ProbeCalibrateSphereMoveBuilder();
            public: ~ProbeCalibrateSphereMoveBuilder();
            /**Returns  the type of geometry  <br> License requirements : None */
            public: NXOpen::CAM::ProbeCalibrateSphereMoveBuilder::Geometry GeometryType
            (
            );
            /**Sets  the type of geometry  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGeometryType
            (
                NXOpen::CAM::ProbeCalibrateSphereMoveBuilder::Geometry geomType /** geomtype */ 
            );
            /**Returns  the sphere to probe  <br> License requirements : None */
            public: NXOpen::NXObject * Sphere
            (
            );
            /**Sets  the sphere to probe  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSphere
            (
                NXOpen::NXObject * sphere /** sphere */ 
            );
            /**Returns  the point defining the sphere to probe  <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point defining the sphere to probe  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the diameter defining the sphere to probe  <br> License requirements : None */
            public: double Diameter
            (
            );
            /**Sets  the diameter defining the sphere to probe  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDiameter
            (
                double diameter /** diameter */ 
            );
            /**Returns  the tool offset to update  <br> License requirements : None */
            public: int ToolOffset
            (
            );
            /**Sets  the tool offset to update  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolOffset
            (
                int toolOffset /** tool offset */ 
            );
            /**Returns  the probe protected parameters builder  <br> License requirements : None */
            public: NXOpen::CAM::ProbeProtectedParametersBuilder * ProbeProtectedParameters
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
