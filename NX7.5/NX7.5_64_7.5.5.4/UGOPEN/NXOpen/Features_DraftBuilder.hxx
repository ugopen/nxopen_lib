#ifndef NXOpen_FEATURES_DRAFTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DRAFTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DraftBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class DraftBuilder;
    }
    class Direction;
    class ExpressionCollectorSetList;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class DraftVariableAngleData;
    }
    class NXObject;
    class ObjectList;
    namespace Features
    {
        class _DraftBuilderBuilder;
        class DraftBuilderImpl;
        /** Represents a Draft Feature Builder that creates or edits a draft (Old name Taper) feature.
             <br> 
            This class provides methods to set and get various Draft feature parameters and input entities.
             <br> 

             <br> 
            Following are default values and options.
             <br> 
             <br> 
            <b> Direction </b> Z direction
             <br> 
             <br> 
            <b> Draft method </b> @link  Features::DraftBuilder::MethodIsocline   Features::DraftBuilder::MethodIsocline @endlink 
             <br> 
             <br> 
            <b> Draft All instances </b> true
             <br> 
             <br> 
            <b> Angle tolerance </b> 0.002/0.1 [rad/deg]
             <br> 
             <br> 
            <b> Distance tolerance </b> 0.004/0.1 [in/mm]
             <br> 
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateDraftBuilder Features::FeatureCollection::CreateDraftBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  DraftBuilder : public Features::FeatureBuilder
        {
            /** Describes the Draft type as true draft or isocline draft.
                   */
            public: enum Method
            {
                MethodIsocline/** Indicates use of isocline algorithm to create draft. Default value. */,
                MethodTrueDraft/** Indicates use of true draft algorithm to create draft.*/
            };

            /** Describes the different Draft types
                   */
            public: enum Type
            {
                TypeFace/** Face Draft type */,
                TypeEdge/** From Edges type */,
                TypeTangent/** Tangent Draft type */,
                TypePartingEdge/** Draft with Parting Edges type */
            };

            private: DraftBuilderImpl * m_draftbuilder_impl;
            private: friend class  _DraftBuilderBuilder;
            protected: DraftBuilder();
            public: ~DraftBuilder();
            /**Sets  the smart direction for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the smart direction for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the stationary entity for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStationaryEntity
            (
                NXOpen::NXObject * stationaryEntity /** stationary entity */ 
            );
            /**Returns  the stationary entity for draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::NXObject * StationaryEntity
            (
            );
            /**Returns  the Data object containing list of draft faces SC Collectors and corresponding draft angles.
                       <br> 
                      This API is now deprecated.
                      Please use @link Features::DraftBuilder::FaceSetAngleExpressionList Features::DraftBuilder::FaceSetAngleExpressionList@endlink  instead.
                      Note that this API cannot be used together with the new API.
                       <br> 
                   
             @deprecated Deprecated in NX5.0.0 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX5.0.0") NXOpen::ObjectList * FaceSetAngleList
            (
            );
            /**Returns  the Data object containing list of draft edges SC Collectors and corresponding draft angles.
                       <br> 
                      This API is now deprecated.
                      Please use @link Features::DraftBuilder::EdgeSetAngleExpressionList Features::DraftBuilder::EdgeSetAngleExpressionList@endlink  instead.
                      Note that this API cannot be used together with the new API.
                       <br> 
                   
             @deprecated Deprecated in NX5.0.0 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX5.0.0") NXOpen::ObjectList * EdgeSetAngleList
            (
            );
            /**Returns  the list of draft faces SC Collectors and corresponding draft angles.
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ExpressionCollectorSetList * FaceSetAngleExpressionList
            (
            );
            /**Returns  the list of draft edges SC Collectors and corresponding draft angles.
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ExpressionCollectorSetList * EdgeSetAngleExpressionList
            (
            );
            /**Returns  the Data object for Variable Angle Draft
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::DraftVariableAngleData * VariableAngleData
            (
            );
            /**Sets  the option "Draft all instances" [true/false]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftAllInstances
            (
                bool draftAllInstances /** draft all instances */ 
            );
            /**Returns  the option "Draft all instances" [true/false]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool DraftAllInstances
            (
            );
            /**Sets  the distance tolerance in [in/mm]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distance tolerance */ 
            );
            /**Returns  the distance tolerance in [in/mm]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double DistanceTolerance
            (
            );
            /**Sets  the angle tolerance in [rad/deg]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angle tolerance */ 
            );
            /**Returns  the angle tolerance in [rad/deg]
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: double AngleTolerance
            (
            );
            /**Sets  the Draft method
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftIsoclineOrTruedraft
            (
                NXOpen::Features::DraftBuilder::Method draftMethod /** draft method */ 
            );
            /**Returns  the Draft method
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::DraftBuilder::Method DraftIsoclineOrTruedraft
            (
            );
            /** Sets the Draft type.
                       <br> 
                      This API is now deprecated.
                      Please use @link Features::DraftBuilder::SetTypeOfDraft Features::DraftBuilder::SetTypeOfDraft@endlink  instead.
                       <br> 
                  
             @deprecated Deprecated in NX5.0.0 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX5.0.0") void SetDraftType
            (
                NXOpen::Features::DraftBuilder::Type draftType /** Draft type */
            );
            /**Sets  the Draft type
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTypeOfDraft
            (
                NXOpen::Features::DraftBuilder::Type type /** type */ 
            );
            /**Returns  the Draft type
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::DraftBuilder::Type TypeOfDraft
            (
            );
            /** Sets the Variable Angle option <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetVariableAngleOption
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
