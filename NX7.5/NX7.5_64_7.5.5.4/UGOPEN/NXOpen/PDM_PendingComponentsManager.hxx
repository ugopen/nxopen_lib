#ifndef NXOpen_PDM_PENDINGCOMPONENTSMANAGER_HXX_INCLUDED
#define NXOpen_PDM_PENDINGCOMPONENTSMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PendingComponentsManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PartLoadStatus.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace PDM
    {
        class PendingComponentsManager;
    }
    namespace Assemblies
    {
        class Component;
    }
    class PartLoadStatus;
    namespace PDM
    {
        class PendingComponentsManagerImpl;
        /** This class is used for managing a part's pending components, that
                is, those that have been added within Teamcenter but are not yet
                present in NX. An instance of this class for a particular part can
                be created by calling @link PDM::PartManager::NewPendingComponentsManager PDM::PartManager::NewPendingComponentsManager@endlink .
            */
        class NXOPENCPPEXPORT  PendingComponentsManager : public TransientObject
        {
            private: PendingComponentsManagerImpl * m_pendingcomponentsmanager_impl;
            public: explicit PendingComponentsManager(void *ptr);
            /** Gets "handles" for the pending components of the part associated
                        with this object.
                     @return   <br> License requirements : None */
            public: std::vector<NXString> GetComponents
            (
            );
            /** Gets the NX Manager file name for the part corresponding to
                        a pending component.
                     @return   <br> License requirements : None */
            public: NXString GetComponentPartFileName
            (
                const NXString & handle /** the handle for the pending component   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Determines whether a given pending component has been positioned
                        by Teamcenter. If @link PDM::PendingComponentsManager::AddComponent PDM::PendingComponentsManager::AddComponent@endlink 
                        is called regarding a component without a position, it will automatically
                        be positioned at the origin.
                     @return   <br> License requirements : None */
            public: bool ComponentHasPosition
            (
                const NXString & handle /** the handle for the pending component   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Deletes a pending component.  <br> License requirements : None */
            public: void DeleteComponent
            (
                const NXString & handle /** the handle for the pending component   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Adds a pending component.  @return   <br> License requirements : None */
            public: NXOpen::Assemblies::Component * AddComponent
            (
                const NXString & handle /** the handle for the pending component   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::PartLoadStatus ** loadStatus /** result of loading the component part */
            );
            /** Adds a pending NGC component.  @return   <br> License requirements : None */
            public: NXOpen::Assemblies::Component * AddNgcComponent
            (
                const NXString & handle /** the handle for the pending ngc component   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::PartLoadStatus ** loadStatus /** result of loading the ngc component part */
            );
            /** Free resources associated with the instance. After this method
                        is called, it is illegal to use the object.  In .NET, this method
                        is automatically called when the object is deleted by the garbage
                        collector.  <br> License requirements : None */
            public: virtual ~PendingComponentsManager();
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
