#ifndef NXOpen_DIE_TRIMFLANGEDIEASSISTANTBUILDER_HXX_INCLUDED
#define NXOpen_DIE_TRIMFLANGEDIEASSISTANTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_TrimFlangeDieAssistantBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieAssistantFlangeProfile.hxx>
#include <NXOpen/Die_DieAssistantTrimProfile.hxx>
#include <NXOpen/Die_TrimFlangeDieAssistantBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class TrimFlangeDieAssistantBuilder;
    }
    namespace Die
    {
        class DieAssistantFlangeProfile;
    }
    namespace Die
    {
        class DieAssistantFlangeProfileList;
    }
    namespace Die
    {
        class DieAssistantTrimProfile;
    }
    namespace Die
    {
        class DieAssistantTrimProfileList;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class Plane;
    class ScCollector;
    class SelectBody;
    class SelectPointList;
    namespace Die
    {
        class _TrimFlangeDieAssistantBuilderBuilder;
        class TrimFlangeDieAssistantBuilderImpl;
        /**
            Represents a @link Die::TrimFlangeDieAssistantBuilder Die::TrimFlangeDieAssistantBuilder@endlink 
             <br> To create a new instance of this class, use @link Die::DieCollection::TrimFlangeDieAssistant Die::DieCollection::TrimFlangeDieAssistant@endlink  <br> */
        class NXOPENCPPEXPORT  TrimFlangeDieAssistantBuilder : public Features::FeatureBuilder
        {
            private: TrimFlangeDieAssistantBuilderImpl * m_trimflangedieassistantbuilder_impl;
            private: friend class  _TrimFlangeDieAssistantBuilderBuilder;
            protected: TrimFlangeDieAssistantBuilder();
            public: ~TrimFlangeDieAssistantBuilder();
            /**Returns  the trim profile set  <br> License requirements : None */
            public: NXOpen::Die::DieAssistantTrimProfileList * TrimProfileSet
            (
            );
            /** Creates a new trim profile item in the set  @return   <br> License requirements : None */
            public: NXOpen::Die::DieAssistantTrimProfile * NewTrimProfile
            (
            );
            /**Returns  the pierce locations  <br> License requirements : None */
            public: NXOpen::SelectPointList * PierceLocations
            (
            );
            /**Returns  the flange profile set  <br> License requirements : None */
            public: NXOpen::Die::DieAssistantFlangeProfileList * FlangeProfileSet
            (
            );
            /** Creates a new flange profile item in the set  @return   <br> License requirements : None */
            public: NXOpen::Die::DieAssistantFlangeProfile * NewFlangeProfile
            (
            );
            /**Returns  the flange profile  <br> License requirements : None */
            public: NXOpen::ScCollector * FlangeProfile
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void AutoGen
            (
            );
            /**Returns  the sheet metal  <br> License requirements : None */
            public: NXOpen::SelectBody * SheetMetal
            (
            );
            /**Returns  the thickness  <br> License requirements : None */
            public: double Thickness
            (
            );
            /**Sets  the thickness  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetThickness
            (
                double thickness /** thickness */ 
            );
            /**Returns  the clearance used in the automatic generation of the lower post flange profile  <br> License requirements : None */
            public: double Clearance
            (
            );
            /**Sets  the clearance used in the automatic generation of the lower post flange profile  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetClearance
            (
                double clearance /** clearance */ 
            );
            /**Returns  the upper base  <br> License requirements : None */
            public: NXOpen::Plane * UpperBase
            (
            );
            /**Sets  the upper base  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetUpperBase
            (
                NXOpen::Plane * upperBase /** upperbase */ 
            );
            /**Returns  the lower base  <br> License requirements : None */
            public: NXOpen::Plane * LowerBase
            (
            );
            /**Sets  the lower base  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetLowerBase
            (
                NXOpen::Plane * lowerBase /** lowerbase */ 
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void TrimSteelParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void FlangeSteelWipeParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void FlangeSteelRestrikeParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void UpperPadParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void LowerPostParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void LowerScrapCutterParms
            (
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void LowerScrapCutterBaseParms
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
