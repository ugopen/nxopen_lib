#ifndef NXOpen_TOOLING_CAEREUSELIBRARY_HXX_INCLUDED
#define NXOpen_TOOLING_CAEREUSELIBRARY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_CaeReuseLibrary.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Tooling_ReusableObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Tooling
    {
        class CaeReuseLibrary;
    }
    namespace CAE
    {
        class BaseFEModel;
    }
    namespace CAE
    {
        class BeamSection;
    }
    namespace Tooling
    {
        class ReusableObject;
    }
    namespace Tooling
    {
        class CaeReuseLibraryImpl;
        /**
            Represents a @link Tooling::CaeReuseLibrary Tooling::CaeReuseLibrary@endlink 
             <br> To obtain an instance of this class, refer to @link CAE::BaseFEModel CAE::BaseFEModel@endlink  <br> */
        class NXOPENCPPEXPORT  CaeReuseLibrary
        {
            private: CaeReuseLibraryImpl * m_caereuselibrary_impl;
            private: NXOpen::CAE::BaseFEModel* m_owner;
            /** Constructor */
            public: explicit CaeReuseLibrary(NXOpen::CAE::BaseFEModel *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~CaeReuseLibrary();
            /** Creates a @link  Tooling::ReusableObject   Tooling::ReusableObject @endlink   @return @link  Tooling::ReusableObject   Tooling::ReusableObject @endlink   <br> License requirements : None */
            public: NXOpen::Tooling::ReusableObject * CreateReusableObject
            (
            );
            /** Exports a beam section to created reuse library  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ExportBeamSectionToLibrary
            (
                const NXString & reuseLibraryName /** Library to which beam-section is exported   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::Tooling::ReusableObject * reusableObject /** @link  Tooling::ReusableObject   Tooling::ReusableObject @endlink  */
            );
            /** Copies a beam section from library to current part  @return  Beam section created by the given library  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::BeamSection * ImportBeamSectionFromLibrary
            (
                const NXString & reuseLibraryName /** Library from where beam-section is imported   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Renames and updates preview image for reusable object   <br> License requirements : None */
            public: void UpdateDescription
            (
                const NXString & descriptiveName /** New descriptive name */,
                const NXString & reuseLibraryName /** Library to update   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & previewImageFile /** New preview image file name including the path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
