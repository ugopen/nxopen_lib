#ifndef NXOpen_FEATURES_WELDCUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_WELDCUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_WeldCutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_WeldCutBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SketchExpressionModifierBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class WeldCutBuilder;
    }
    class CoordinateSystem;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class SelectFace;
    class SelectTaggedObject;
    class SketchExpressionModifierBuilder;
    namespace Features
    {
        class _WeldCutBuilderBuilder;
        class WeldCutBuilderImpl;
        /**
            Represents a @link Features::WeldCut Features::WeldCut@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateWeldCutBuilder Features::FeatureCollection::CreateWeldCutBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        SketchBlock.Exp1.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp10.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp11.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp12.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp2.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp3.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp4.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp5.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp6.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp7.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp8.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Exp9.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        SketchBlock.Sketches </td> <td> 
         
        EndCut1 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  WeldCutBuilder : public Features::FeatureBuilder
        {
            /** Creation method used to define the placement of the weld cut */
            public: enum CreationMethod
            {
                CreationMethodCorner/** corner */ ,
                CreationMethodAlongGuide/** along guide */ ,
                CreationMethodSpecifyCSYS/** specify csys */ 
            };

            private: WeldCutBuilderImpl * m_weldcutbuilder_impl;
            private: friend class  _WeldCutBuilderBuilder;
            protected: WeldCutBuilder();
            public: ~WeldCutBuilder();
            /**Returns  the weld location.  
                    The weld location is only used for the Corner placement method.  <br> License requirements : None */
            public: NXOpen::Point * WeldLocation
            (
            );
            /**Sets  the weld location.  
                    The weld location is only used for the Corner placement method.  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetWeldLocation
            (
                NXOpen::Point * weldLocation /** weldlocation */ 
            );
            /**Returns  the sketch block  <br> License requirements : None */
            public: NXOpen::SketchExpressionModifierBuilder * SketchBlock
            (
            );
            /**Returns  the method used to define the placement of the weld cut  <br> License requirements : None */
            public: NXOpen::Features::WeldCutBuilder::CreationMethod PlacementType
            (
            );
            /**Sets  the method used to define the placement of the weld cut  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetPlacementType
            (
                NXOpen::Features::WeldCutBuilder::CreationMethod placementType /** placementtype */ 
            );
            /**Returns  the selection object for the guide curve. 
                    The select guide curve is only used for the AlongGuide placement method.  <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * SelectGuideCurve
            (
            );
            /**Returns  the keep select guide curve.
                    A toggle used to remember the selected guide curve on apply.
                    The keep select guide curve is only used for the AlongGuide placement method.  <br> License requirements : None */
            public: bool KeepSelectGuideCurve
            (
            );
            /**Sets  the keep select guide curve.
                    A toggle used to remember the selected guide curve on apply.
                    The keep select guide curve is only used for the AlongGuide placement method.  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetKeepSelectGuideCurve
            (
                bool keepSelectGuideCurve /** keepselectguidecurve */ 
            );
            /**Returns  the selection object for the target face. 
                    This target face is only used for the AlongGuide placement method.  <br> License requirements : None */
            public: NXOpen::SelectFace * SelectTargetFace
            (
            );
            /**Returns  the keep select target face.
                    A toggle used to remember the selected target face on apply.
                    This keep select target face is only used for the AlongGuide placement method.   <br> License requirements : None */
            public: bool KeepSelectTargetFace
            (
            );
            /**Sets  the keep select target face.
                    A toggle used to remember the selected target face on apply.
                    This keep select target face is only used for the AlongGuide placement method.   <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetKeepSelectTargetFace
            (
                bool keepSelectTargetFace /** keepselecttargetface */ 
            );
            /**Returns  the placement CSYS of the weld cut 
                    The coordinate system is only used for the SpecifyCSYS placement method.   <br> License requirements : None */
            public: NXOpen::CoordinateSystem * CoordSystem
            (
            );
            /**Sets  the placement CSYS of the weld cut 
                    The coordinate system is only used for the SpecifyCSYS placement method.   <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetCoordSystem
            (
                NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
            );
            /**Returns  the keep coordinate system.
                    A toggle used to remember the specified csys on apply.
                    The keep selected coordinate system is only used for the SpecifyCSYS placement method.    <br> License requirements : None */
            public: bool KeepCoordSystem
            (
            );
            /**Sets  the keep coordinate system.
                    A toggle used to remember the specified csys on apply.
                    The keep selected coordinate system is only used for the SpecifyCSYS placement method.    <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetKeepCoordSystem
            (
                bool keepCoordSystem /** keepcoordsystem */ 
            );
            /**Returns  the selection object for the target face. 
                    This target face is only used for the SpecifyCSYS placement method.  <br> License requirements : None */
            public: NXOpen::SelectFace * SelectCSYSFace
            (
            );
            /**Returns  the keep select target face.
                    A toggle used to remember the selected target face on apply.
                    This keep select target face is only used for the SpecifyCSYS placement method.  <br> License requirements : None */
            public: bool KeepSelectCSYSFace
            (
            );
            /**Sets  the keep select target face.
                    A toggle used to remember the selected target face on apply.
                    This keep select target face is only used for the SpecifyCSYS placement method.  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetKeepSelectCSYSFace
            (
                bool keepSelectCSYSFace /** keepselectcsysface */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
