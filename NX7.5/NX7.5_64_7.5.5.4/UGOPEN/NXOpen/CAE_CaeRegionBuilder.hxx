#ifndef NXOpen_CAE_CAEREGIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_CAEREGIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaeRegionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_CaeRegionBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class CaeRegionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class SetManager;
    }
    namespace CAE
    {
        class _CaeRegionBuilderBuilder;
        class CaeRegionBuilderImpl;
        /** Represents a @link CAE::CaeRegionBuilder CAE::CaeRegionBuilder@endlink  builder  <br> To create a new instance of this class, use @link CAE::SimSimulation::CreateCaeRegionBuilder CAE::SimSimulation::CreateCaeRegionBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  CaeRegionBuilder : public Builder
        {
            private: CaeRegionBuilderImpl * m_caeregionbuilder_impl;
            private: friend class  _CaeRegionBuilderBuilder;
            protected: CaeRegionBuilder();
            public: ~CaeRegionBuilder();
            /**Returns  the target set handler associated with the Region object  <br> License requirements : None */
            public: NXOpen::CAE::SetManager * TargetSetManager
            (
            );
            /**Returns  the Region's property table  <br> License requirements : None */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
