#ifndef NXOpen_FEATURES_OFFSETREGIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_OFFSETREGIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_OffsetRegionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_OffsetRegionBuilder.hxx>
#include <NXOpen/ModlDirect_SelectBlend.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class OffsetRegionBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace ModlDirect
    {
        class SelectBlend;
    }
    class ScCollector;
    namespace Features
    {
        class _OffsetRegionBuilderBuilder;
        class OffsetRegionBuilderImpl;
        /**
            Represents a builder for an offset region feature, don't use it until nx502.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateOffsetRegionBuilder Features::FeatureCollection::CreateOffsetRegionBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Distance.Value </td> <td> 
         
        5.0 (millimeters part), 0.2 (inches part) </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  OffsetRegionBuilder : public Features::FeatureBuilder
        {
            private: OffsetRegionBuilderImpl * m_offsetregionbuilder_impl;
            private: friend class  _OffsetRegionBuilderBuilder;
            protected: OffsetRegionBuilder();
            public: ~OffsetRegionBuilder();
            /**Returns  the faces to offset, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::ScCollector * Face
            (
            );
            /**Returns  the distance to offset, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  the flag of reverse direction of offset, don't use it until nx502  <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the flag of reverse direction of offset, don't use it until nx502  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** the flag of reverse direction */
            );
            /**Returns  the face collector holding the all the recognized blend faces adjacent to faces to offset. It is auto recognized blends +
                        user selected blends - user excluded blends, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::ModlDirect::SelectBlend * BlendFace
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
