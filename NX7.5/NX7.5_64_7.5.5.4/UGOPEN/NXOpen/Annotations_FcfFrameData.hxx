#ifndef NXOpen_ANNOTATIONS_FCFFRAMEDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_FCFFRAMEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_FcfFrameData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_FcfFrame.hxx>
#include <NXOpen/Gdts.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class FcfFrameData;
    }
    namespace Annotations
    {
        class FcfFrame;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class FcfFrameDataImpl;
        /** Represents FCF frames data */
        class NXOPENCPPEXPORT  FcfFrameData : public TransientObject
        {
            private: FcfFrameDataImpl * m_fcfframedata_impl;
            public: explicit FcfFrameData(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~FcfFrameData();
            /** Returns the frames  @return  List of frames  <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::FcfFrame *> GetFrames
            (
            );
            /** Sets the frames  <br> License requirements : None */
            public: void SetFrames
            (
                const std::vector<NXOpen::Annotations::FcfFrame *> & frames /** List of frames */
            );
            /**Returns  the geometric characteristic  <br> License requirements : None */
            public: NXOpen::Annotations::GeometricCharacteristic GeometricCharacteristic
            (
            );
            /**Sets  the geometric characteristic  <br> License requirements : None */
            public: void SetGeometricCharacteristic
            (
                NXOpen::Annotations::GeometricCharacteristic characteristic /** New geometric characteristics */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
