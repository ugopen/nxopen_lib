#ifndef NXOpen_PREFERENCES_PARTVISUALIZATIONNAMESBORDERS_HXX_INCLUDED
#define NXOpen_PREFERENCES_PARTVISUALIZATIONNAMESBORDERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_PartVisualizationNamesBorders.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class PartVisualizationNamesBorders;
    }
    namespace Preferences
    {
        class PartPreferences;
    }
    namespace Preferences
    {
        class PartVisualizationNamesBordersImpl;
        /** Represents the set of visualization preferences of entire Working Part coming under Names/borders Tab <br> To obtain an instance of this class, refer to @link Preferences::PartPreferences Preferences::PartPreferences@endlink  <br> */
        class NXOPENCPPEXPORT  PartVisualizationNamesBorders
        {
            /** Describes the available options for object name display selection */
            public: enum NameDisplay
            {
                NameDisplayOff/** Display is Off */,
                NameDisplayViewOfDefinition/** View of Definition places 
                                                                                              each name in the work view 
                                                                                              current at the time of name 
                                                                                              creation */,
                NameDisplayWorkView/** Work View places all names 
                                                                                              in the current work view, even 
                                                                                              if the existing names had been 
                                                                                              defined in different views */
            };

            private: PartVisualizationNamesBordersImpl * m_partvisualizationnamesborders_impl;
            private: NXOpen::Preferences::PartPreferences* m_owner;
            /** Constructor */
            public: explicit PartVisualizationNamesBorders(NXOpen::Preferences::PartPreferences *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartVisualizationNamesBorders();
            /**Returns   the show model view names flag. Allows to turn on and off the display of view names.   <br> License requirements : None */
            public: bool ShowModelViewNames
            (
            );
            /**Sets   the show model view names flag. Allows to turn on and off the display of view names.   <br> License requirements : None */
            public: void SetShowModelViewNames
            (
                bool showModelViewNames /** show model view names */ 
            );
            /**Returns  the show model view border flag. allows to turn on and off the display of view borders.  <br> License requirements : None */
            public: bool ShowModelViewBorders
            (
            );
            /**Sets  the show model view border flag. allows to turn on and off the display of view borders.  <br> License requirements : None */
            public: void SetShowModelViewBorders
            (
                bool showModelViewBorders /** show model view borders */ 
            );
            /**Returns  the object name display  <br> License requirements : None */
            public: NXOpen::Preferences::PartVisualizationNamesBorders::NameDisplay ObjectNameDisplay
            (
            );
            /**Sets  the object name display  <br> License requirements : None */
            public: void SetObjectNameDisplay
            (
                NXOpen::Preferences::PartVisualizationNamesBorders::NameDisplay objectNameDisplay /** object name display */ 
            );
            /**Returns  the character size. Allows to define the size of the text in the object names  <br> License requirements : None */
            public: double CharacterSize
            (
            );
            /**Sets  the character size. Allows to define the size of the text in the object names  <br> License requirements : None */
            public: void SetCharacterSize
            (
                double characterSize /** character size */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
