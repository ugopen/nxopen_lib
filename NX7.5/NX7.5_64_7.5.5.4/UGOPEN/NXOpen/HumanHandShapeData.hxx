#ifndef NXOpen_HUMANHANDSHAPEDATA_HXX_INCLUDED
#define NXOpen_HUMANHANDSHAPEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     HumanHandShapeData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class HumanHandShapeData;
    class HumanHandShapeDataImpl;
    /** Represent hand shape data */
    class NXOPENCPPEXPORT  HumanHandShapeData : public TransientObject
    {
        /** This enum represents the hand shape data type of human */
        public: enum HandOpt
        {
            HandOptLeft/** left */ ,
            HandOptRight/** right */ ,
            HandOptBoth/** both */ 
        };

        private: HumanHandShapeDataImpl * m_humanhandshapedata_impl;
        public: explicit HumanHandShapeData(void *ptr);
        /** Free resources associated with the instance. After this method
                is called, it is illegal to use the object.  In .NET, this method
                is automatically called when the object is deleted by the garbage
                collector.  <br> License requirements : None */
        public: virtual ~HumanHandShapeData();
        /**Returns  the hand type  <br> License requirements : solid_modeling ("SOLIDS MODELING"), ug_human ("Human Modelling") */
        public: NXOpen::HumanHandShapeData::HandOpt HandType
        (
        );
        /**Returns  the name of the hand shape in the list  <br> License requirements : solid_modeling ("SOLIDS MODELING"), ug_human ("Human Modelling") */
        public: NXString HandshapeName
        (
        );
        /**Returns  the value for applying the hand shape  <br> License requirements : solid_modeling ("SOLIDS MODELING"), ug_human ("Human Modelling") */
        public: double HandshapeValue
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
