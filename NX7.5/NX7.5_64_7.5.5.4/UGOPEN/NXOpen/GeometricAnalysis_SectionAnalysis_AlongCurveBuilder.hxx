#ifndef NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ALONGCURVEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ALONGCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SectionAnalysis_AlongCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_AlongCurveBuilder.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_GridSpacingBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveRangeBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class AlongCurveBuilder;
        }
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class GridSpacingBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class CurveRangeBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectDisplayableObjectList;
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class _AlongCurveBuilderBuilder;
            class AlongCurveBuilderImpl;
            /** Represents the along curve section specifications for a @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder@endlink .
                        Only used when type is @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder::TypesAlongCurve GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder::TypesAlongCurve@endlink .
                    
             @deprecated Deprecated in NX7.0.0 <br> 
            */
            class NXOPENCPPEXPORT  NX_DEPRECATED("Deprecated in NX7.0.0")  AlongCurveBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** Represents the along curve methods */
                public: enum Methods
                {
                    MethodsPerpendicular/** Perpendicular to curve */,
                    MethodsProjection/** Along Curve with projection */
                };

                private: AlongCurveBuilderImpl * m_alongcurvebuilder_impl;
                private: friend class  _AlongCurveBuilderBuilder;
                protected: AlongCurveBuilder();
                public: ~AlongCurveBuilder();
                /**Returns  the method 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") NXOpen::GeometricAnalysis::SectionAnalysis::AlongCurveBuilder::Methods Method
                (
                );
                /**Sets  the method 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") void SetMethod
                (
                    NXOpen::GeometricAnalysis::SectionAnalysis::AlongCurveBuilder::Methods method /** method */ 
                );
                /**Returns  the curves 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") NXOpen::SelectDisplayableObjectList * Curves
                (
                );
                /**Returns  the projection direction, i.e., normal of projection plane 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") NXOpen::Vector3d ProjectionDirection
                (
                );
                /**Sets  the projection direction, i.e., normal of projection plane 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") void SetProjectionDirection
                (
                    const NXOpen::Vector3d & projectionDirection /** projectiondirection */ 
                );
                /**Returns  the spacing specification for the curve grid 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") NXOpen::GeometricAnalysis::SectionAnalysis::GridSpacingBuilder * Spacing
                (
                );
                /**Returns  the curve range 
                 @deprecated Deprecated in NX7.0.0 <br> 
                 <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public:  NX_DEPRECATED("Deprecated in NX7.0.0") NXOpen::GeometricUtilities::CurveRangeBuilder * CurveRange
                (
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
