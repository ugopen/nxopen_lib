#ifndef NXOpen_MECHATRONICS_SPEEDCONTROLBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SPEEDCONTROLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SpeedControlBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_SpeedControlBuilder.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Mechatronics
    {
        class SpeedControlBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectPhysicsJoint;
    }
    namespace Mechatronics
    {
        class _SpeedControlBuilderBuilder;
        class SpeedControlBuilderImpl;
        /** Represents a @link Mechatronics::SpeedControl Mechatronics::SpeedControl@endlink  builder.  <br> To create a new instance of this class, use @link Mechatronics::SpeedControlCollection::CreateSpeedControlBuilder Mechatronics::SpeedControlCollection::CreateSpeedControlBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  SpeedControlBuilder : public Mechatronics::PhysicsConstraintBuilder
        {
            /** the Axis Joint types. */
            public: enum AxisJointType
            {
                AxisJointTypeAngular/** Angular */,
                AxisJointTypeLinear/** Linear  */
            };

            private: SpeedControlBuilderImpl * m_speedcontrolbuilder_impl;
            private: friend class  _SpeedControlBuilderBuilder;
            protected: SpeedControlBuilder();
            public: ~SpeedControlBuilder();
            /**Returns  the joint select. This can be a @link HingeJoint HingeJoint@endlink , @link SlidingJoint SlidingJoint@endlink  
                    and @link CylindricalJoint CylindricalJoint@endlink . <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SelectPhysicsJoint * AxisJoint
            (
            );
            /**Returns  the axis joint type.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SpeedControlBuilder::AxisJointType AxisType
            (
            );
            /**Sets  the axis joint type.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAxisType
            (
                NXOpen::Mechatronics::SpeedControlBuilder::AxisJointType axisType /** axistype */ 
            );
            /**Returns  the speed.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * Speed
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
