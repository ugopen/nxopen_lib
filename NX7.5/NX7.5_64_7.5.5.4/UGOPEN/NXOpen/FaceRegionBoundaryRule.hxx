#ifndef NXOpen_FACEREGIONBOUNDARYRULE_HXX_INCLUDED
#define NXOpen_FACEREGIONBOUNDARYRULE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     FaceRegionBoundaryRule.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SelectionIntentRule.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class FaceRegionBoundaryRule;
    class Curve;
    class Face;
    class SelectionIntentRule;
    class FaceRegionBoundaryRuleImpl;
    /** Represents a face regions rule */
    class NXOPENCPPEXPORT  FaceRegionBoundaryRule : public SelectionIntentRule
    {
        private: FaceRegionBoundaryRuleImpl * m_faceregionboundaryrule_impl;
        public: explicit FaceRegionBoundaryRule(void *ptr);
        /** Frees the object from memory. <br> License requirements : None */
        public: virtual ~FaceRegionBoundaryRule();
        /** Gets the data for the face region boundary rule: @link  FaceRegionBoundaryRule   FaceRegionBoundaryRule @endlink   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void GetData
        (
            NXOpen::Face ** seedObj /** Seed Face */,
            std::vector<NXOpen::Curve *> & curves /**  Curves input to create this rule */,
            NXOpen::Point3d* seedPoint /**  Seed point */,
            double* distanceTolerance /** Distance tolerance*/
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
