#ifndef NXOpen_BLOCKSTYLERDEBUGSESSION_HXX_INCLUDED
#define NXOpen_BLOCKSTYLERDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStylerDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_BlockDialog.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebuguicpp_exports.hxx>
namespace NXOpen
{
    class BlockStylerDebugSession;
    class DebugUI;
    namespace BlockStyler
    {
        class BlockDialog;
    }
    namespace BlockStyler
    {
        class PropertyList;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    class BlockStylerDebugSessionImpl;
    /** Represents a class that is used for testing Block Styler.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link DebugUI DebugUI@endlink  <br> */
    class NXOPENDEBUGUICPPEXPORT  BlockStylerDebugSession
    {
        private: BlockStylerDebugSessionImpl * m_blockstylerdebugsession_impl;
        private: NXOpen::DebugUI* m_owner;
        /** Constructor */
        public: explicit BlockStylerDebugSession(NXOpen::DebugUI *owner);
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~BlockStylerDebugSession();
        /**Gets the block. Provide the name of the block, e.g. "UICOMP_label" for the Label block  @return Block object <br> License requirements : None */
        public: NXOpen::BlockStyler::UIBlock * GetBlock
        (
            const NXString & blockName /** Class name of the block. E.g., UICOMP_toggle, UGS::UI::Comp::DoubleTable etc  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Gets the access flag.  @return Access flag specifing which part of the code property can be accessed and whether property is available during dialog design time.  <br> License requirements : None */
        public: NXString GetAccessFlag
        (
            NXOpen::BlockStyler::PropertyList * list /**Property List of any block */,
            const NXString & propertyName /**Property Name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /**Performs cancel on the dialog. Use this method at callbacks where dialog is fully launched, else, use threading and sleep in case 
               this method need to be called before dialog is fully launched. <br> License requirements : None */
        public: void PerformDialogCancel
        (
            NXOpen::BlockStyler::BlockDialog * dialog /** dialog */ 
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
