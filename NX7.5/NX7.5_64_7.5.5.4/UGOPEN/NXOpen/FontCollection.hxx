#ifndef NXOpen_FONTCOLLECTION_HXX_INCLUDED
#define NXOpen_FONTCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     FontCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class FontCollection;
    class BasePart;
    class FontCollectionImpl;
    /** Represents a collection of typographical fonts (for example, Arial, OldEnglish)  <br> To obtain an instance of this class, refer to @link BasePart BasePart@endlink  <br> */
    class NXOPENCPPEXPORT  FontCollection
    {
        /** Specifies the type of font */
        public: enum Type
        {
            TypeNx/** NX font */,
            TypeStandard/** Standard system font */,
            TypeEmpty = 10/** Font doesn't exist */
        };

        private: FontCollectionImpl * m_fontcollection_impl;
        private: NXOpen::BasePart* m_owner;
        /** Constructor */
        public: explicit FontCollection(NXOpen::BasePart *owner);
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~FontCollection();
        /** Adds a font to the part.  This will only add NX fonts.  To add Standard fonts,
                use the overloaded JA_FONT_add_font routine that accepts the font type.  @return  Integer ID that the method assigns to the font  <br> License requirements : None */
        public: int AddFont
        (
            const NXString & fontName /** Font name */
        );
        /** Returns the name for the font that has the specified integer ID  @return  The font's name  <br> License requirements : None */
        public: NXString GetFontName
        (
            int fontIndex /** The ID for the font */
        );
        /** Finds out whether the specified ID is associated with a font  @return  True iff the font exists  <br> License requirements : None */
        public: bool DoesFontExist
        (
            int fontIndex /** ID of the font */
        );
        /** Returns the number of fonts in the part  @return   <br> License requirements : None */
        public: int GetLength
        (
        );
        /** Adds a font to the part.  This can be used to create both NX and Standard fonts.  @return  Integer ID that the method assigns to the font  <br> License requirements : None */
        public: int AddFont
        (
            const NXString & fontName /** Font name */,
            NXOpen::FontCollection::Type type /** Type of the font */
        );
        /** Replaces a font name and type at the given font index  <br> License requirements : None */
        public: void ReplaceFont
        (
            int fontIndex /** ID of the font */,
            NXOpen::FontCollection::Type type /** New type of the font */,
            const NXString & fontName /** New name of the font */
        );
        /** Returns the font type of the font at the provided index  @return  Type of the font  <br> License requirements : None */
        public: NXOpen::FontCollection::Type GetFontType
        (
            int fontIndex /** ID of the font */
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
