#ifndef NXOpen_GEOMETRICUTILITIES_DEPTHSKEWBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_DEPTHSKEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_DepthSkewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_DepthSkewBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class DepthSkewBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _DepthSkewBuilderBuilder;
        class DepthSkewBuilderImpl;
        /**
                This class provides ability to specify a depth and a skew value.
            */
        class NXOPENCPPEXPORT  DepthSkewBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: DepthSkewBuilderImpl * m_depthskewbuilder_impl;
            private: friend class  _DepthSkewBuilderBuilder;
            protected: DepthSkewBuilder();
            public: ~DepthSkewBuilder();
            /**Returns  the depth  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Expression * Depth
            (
            );
            /**Returns  the skew  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Expression * Skew
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
