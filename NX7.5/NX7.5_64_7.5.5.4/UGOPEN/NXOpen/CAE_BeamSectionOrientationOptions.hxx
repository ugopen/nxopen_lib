#ifndef NXOpen_CAE_BEAMSECTIONORIENTATIONOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_BEAMSECTIONORIENTATIONOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BeamSectionOrientationOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BeamSection.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class BeamSectionOrientationOptions;
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class FENode;
    }
    class Direction;
    namespace CAE
    {
        class BeamSectionOrientationOptionsImpl;
        /**  @brief   

           <br> To create a new instance of this class, use @link CAE::CaePart::NewBeamSectionOrientationOptions CAE::CaePart::NewBeamSectionOrientationOptions@endlink  <br> */
        class NXOPENCPPEXPORT  BeamSectionOrientationOptions : public TransientObject
        {
            /** Represents the orientation definition method */
            public: enum Method
            {
                MethodByVector/** by vector */ ,
                MethodByNode/** by node */ 
            };

            private: BeamSectionOrientationOptionsImpl * m_beamsectionorientationoptions_impl;
            public: explicit BeamSectionOrientationOptions(void *ptr);
            /**Returns  the orientation definition method  <br> License requirements : None */
            public: NXOpen::CAE::BeamSectionOrientationOptions::Method MethodType
            (
            );
            /**Sets  the orientation definition method  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMethodType
            (
                NXOpen::CAE::BeamSectionOrientationOptions::Method methodType /** methodtype */ 
            );
            /**Returns  the direction type  <br> License requirements : None */
            public: NXOpen::CAE::BeamSection::DirectionOption DirectionType
            (
            );
            /**Sets  the direction type  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDirectionType
            (
                NXOpen::CAE::BeamSection::DirectionOption directionType /** directiontype */ 
            );
            /**Returns  the orientation vector. Only available when definition method is 
                    @link BeamSectionOrientationOptions::Method::ByVector BeamSectionOrientationOptions::Method::ByVector@endlink  <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the orientation vector. Only available when definition method is 
                    @link BeamSectionOrientationOptions::Method::ByVector BeamSectionOrientationOptions::Method::ByVector@endlink  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the element to be oriented. Only available when the orientation method is 
                    @link BeamSectionOrientationOptions::Method::ByVector BeamSectionOrientationOptions::Method::ByVector@endlink   <br> License requirements : None */
            public: NXOpen::CAE::FEElement * OrientedElement
            (
            );
            /**Sets  the element to be oriented. Only available when the orientation method is 
                    @link BeamSectionOrientationOptions::Method::ByVector BeamSectionOrientationOptions::Method::ByVector@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOrientedElement
            (
                NXOpen::CAE::FEElement * orientedElement /** orientedelement */ 
            );
            /**Returns  the node used to orient beam. Only available when the orientation method is 
                    @link BeamSectionOrientationOptions::Method::ByNode BeamSectionOrientationOptions::Method::ByNode@endlink  <br> License requirements : None */
            public: NXOpen::CAE::FENode * Node
            (
            );
            /**Sets  the node used to orient beam. Only available when the orientation method is 
                    @link BeamSectionOrientationOptions::Method::ByNode BeamSectionOrientationOptions::Method::ByNode@endlink  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNode
            (
                NXOpen::CAE::FENode * node /** node */ 
            );
            /** Destroys the object  <br> License requirements : None */
            public: virtual ~BeamSectionOrientationOptions();
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
