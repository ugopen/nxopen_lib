#ifndef NXOpen_CAE_FTK_ARRAYRECORD2D_HXX_INCLUDED
#define NXOpen_CAE_FTK_ARRAYRECORD2D_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_ArrayRecord2D.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_FTK_ArrayRecord2D.hxx>
#include <NXOpen/CAE_FTK_BaseUnit.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class ArrayRecord2D;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseUnit;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class _ArrayRecord2DBuilder;
            class ArrayRecord2DImpl;
            /** Manages the 2d array record  <br> Not support KF. <br> */
            class NXOPENCPPEXPORT  ArrayRecord2D : public CAE::FTK::BaseRecord
            {
                private: ArrayRecord2DImpl * m_arrayrecord2d_impl;
                private: friend class  _ArrayRecord2DBuilder;
                protected: ArrayRecord2D();
                public: ~ArrayRecord2D();
                /** Sets X-Coordinate unit  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetXCoordinateUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * xCoordinateUnit /** X-Coordinate unit */
                );
                /** Sets X-Coordinate points  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetXCoordinatePoints
                (
                    const std::vector<double> & xCoordinatePoints /** X-Coordinate data */
                );
                /** Sets Y-Coordinate unit  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetYCoordinateUnit
                (
                    NXOpen::CAE::FTK::BaseUnit * yCoordinateUnit /** Y-Coordinate unit */
                );
                /** Sets Y-Coordinate points, the supplied point data consists of real numbers  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetYCoordinatePoints
                (
                    const std::vector<double> & yCoordinatePoints /** Y-Coordinate data */
                );
                /** Sets Y-Coordinate points, the supplied point data consists of real and imaginary numbers  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetYCoordinatePoints
                (
                    const std::vector<double> & yCoordinateReal /** Real part of Y-Coordinate data */,
                    const std::vector<double> & yCoordinateImag /** Imaginary part of Y-Coordinate data */
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
