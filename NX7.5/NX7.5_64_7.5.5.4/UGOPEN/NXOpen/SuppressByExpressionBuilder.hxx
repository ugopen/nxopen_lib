#ifndef NXOpen_SUPPRESSBYEXPRESSIONBUILDER_HXX_INCLUDED
#define NXOpen_SUPPRESSBYEXPRESSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SuppressByExpressionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/SuppressByExpressionBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SuppressByExpressionBuilder;
    class Builder;
    namespace Features
    {
        class SelectFeatureList;
    }
    class _SuppressByExpressionBuilderBuilder;
    class SuppressByExpressionBuilderImpl;
    /**
        Represents a @link SuppressByExpressionBuilder SuppressByExpressionBuilder@endlink 
         <br> To create a new instance of this class, use @link ExpressionCollection::CreateSuppressByExpressionBuilder ExpressionCollection::CreateSuppressByExpressionBuilder@endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    SuppressAction </td> <td> 
     
    CreateEach </td> </tr> 

    </table>  
    */
    class NXOPENCPPEXPORT  SuppressByExpressionBuilder : public Builder
    {
        /** Represents the expression action type.*/
        public: enum ExpressionAction
        {
            ExpressionActionCreateEach/**Create one expression per feature*/,
            ExpressionActionCreateShared/**Create one common expression for all features*/,
            ExpressionActionDeleteEach/**Delete expression of one feature*/,
            ExpressionActionDeleteShared/**Delete the common expression being shared by group of features*/
        };

        private: SuppressByExpressionBuilderImpl * m_suppressbyexpressionbuilder_impl;
        private: friend class  _SuppressByExpressionBuilderBuilder;
        protected: SuppressByExpressionBuilder();
        public: ~SuppressByExpressionBuilder();
        /**Returns  the suppress expression action. This enumeration decides the action to be taken
                on the selected group of features. A suppress expression can created per feature or
                as shared expression for a group of features. The expressions can be deleted individually
                for all features that have suppress expressions associated. For a group of features sharing
                an expression, the expression can also be deleted from the whole group. <br> License requirements : None */
        public: NXOpen::SuppressByExpressionBuilder::ExpressionAction SuppressAction
        (
        );
        /**Sets  the suppress expression action. This enumeration decides the action to be taken
                on the selected group of features. A suppress expression can created per feature or
                as shared expression for a group of features. The expressions can be deleted individually
                for all features that have suppress expressions associated. For a group of features sharing
                an expression, the expression can also be deleted from the whole group. <br> License requirements : None */
        public: void SetSuppressAction
        (
            NXOpen::SuppressByExpressionBuilder::ExpressionAction suppressAction /** suppressaction */ 
        );
        /**Returns  the feautre list. For create each and create shared options, the selected features
                must not have pre existing suppress expressions. For delete each option, the selected
                features must have associated suppress expressions. If the expression is being shared
                by multiple features, the expression will be deleted only for the selected feature. For
                delete shared option, the complete group that shares a single expression must be selected. <br> License requirements : None */
        public: NXOpen::Features::SelectFeatureList * FeatureList
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
