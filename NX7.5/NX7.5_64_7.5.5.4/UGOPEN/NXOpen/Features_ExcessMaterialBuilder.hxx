#ifndef NXOpen_FEATURES_EXCESSMATERIALBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EXCESSMATERIALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ExcessMaterialBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ExcessMaterialBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ExcessMaterialBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectFace;
    namespace Features
    {
        class _ExcessMaterialBuilderBuilder;
        class ExcessMaterialBuilderImpl;
        /**
            Represents a @link Features::ExcessMaterial Features::ExcessMaterial@endlink  builder.
            The Excess Material feature adds excess manufacturing material to the end of plate.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateExcessMaterialBuilder Features::FeatureCollection::CreateExcessMaterialBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        OffsetDistance.Value </td> <td> 
         
        10 (millimeters part), 10 (inches part) </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  ExcessMaterialBuilder : public Features::FeatureBuilder
        {
            private: ExcessMaterialBuilderImpl * m_excessmaterialbuilder_impl;
            private: friend class  _ExcessMaterialBuilderBuilder;
            protected: ExcessMaterialBuilder();
            public: ~ExcessMaterialBuilder();
            /**Returns  the selection face.  The selected face will be offset by the specified distance.  <br> License requirements : None */
            public: NXOpen::SelectFace * SelectFace
            (
            );
            /**Returns  the offset distance  <br> License requirements : None */
            public: NXOpen::Expression * OffsetDistance
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
