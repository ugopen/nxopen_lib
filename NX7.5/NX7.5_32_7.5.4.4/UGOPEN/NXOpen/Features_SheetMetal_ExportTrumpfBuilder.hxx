#ifndef NXOpen_FEATURES_SHEETMETAL_EXPORTTRUMPFBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_EXPORTTRUMPFBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_ExportTrumpfBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_SheetMetal_ExportTrumpfBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class ExportTrumpfBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        class SelectFlatPattern;
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class _ExportTrumpfBuilderBuilder;
            class ExportTrumpfBuilderImpl;
            /** Create the builder object that is used to create a Trumpf geo output file
                    from a flat pattern.  <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateExportTrumpfBuilder Features::SheetMetal::SheetmetalManager::CreateExportTrumpfBuilder@endlink  <br> */
            class NXOPENCPPEXPORT  ExportTrumpfBuilder : public Builder
            {
                private: ExportTrumpfBuilderImpl * m_exporttrumpfbuilder_impl;
                private: friend class  _ExportTrumpfBuilderBuilder;
                protected: ExportTrumpfBuilder();
                public: ~ExportTrumpfBuilder();
                /**Returns  the output geo file  <br> License requirements : None */
                public: NXString OutputGeoFile
                (
                );
                /**Sets  the output geo file  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetOutputGeoFile
                (
                    const NXString & filename /** filename */ 
                );
                /**Returns  the selected flat pattern  <br> License requirements : None */
                public: NXOpen::Features::SelectFlatPattern * SelectFlatPattern
                (
                );
                /**Returns  the deviational tolerance  <br> License requirements : None */
                public: double DeviationalTolerance
                (
                );
                /**Sets  the deviational tolerance  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetDeviationalTolerance
                (
                    double deviationalTolerance /** deviationaltolerance */ 
                );
                /**Returns  the bend up center line output flag  <br> License requirements : None */
                public: bool BendUp
                (
                );
                /**Sets  the bend up center line output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetBendUp
                (
                    bool bendUp /** bendup */ 
                );
                /**Returns  the bend down center line output flag  <br> License requirements : None */
                public: bool BendDown
                (
                );
                /**Sets  the bend down center line output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetBendDown
                (
                    bool bendDown /** benddown */ 
                );
                /**Returns  the bend tangent line output flag  <br> License requirements : None */
                public: bool BendTangent
                (
                );
                /**Sets  the bend tangent line output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetBendTangent
                (
                    bool bendTangent /** bendtangent */ 
                );
                /**Returns  the interior cutout output flag  <br> License requirements : None */
                public: bool InteriorCutout
                (
                );
                /**Sets  the interior cutout output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetInteriorCutout
                (
                    bool interiorCutout /** interiorcutout */ 
                );
                /**Returns  the interior feature output flag  <br> License requirements : None */
                public: bool InteriorFeature
                (
                );
                /**Sets  the interior feature output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetInteriorFeature
                (
                    bool interiorFeature /** interiorfeature */ 
                );
                /**Returns  the added top geometry output flag  <br> License requirements : None */
                public: bool AddedTop
                (
                );
                /**Sets  the added top geometry output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetAddedTop
                (
                    bool addedTop /** addedtop */ 
                );
                /**Returns  the added bottom geometry output flag  <br> License requirements : None */
                public: bool AddedBottom
                (
                );
                /**Sets  the added bottom geometry output flag  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetAddedBottom
                (
                    bool addedBottom /** addedbottom */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
