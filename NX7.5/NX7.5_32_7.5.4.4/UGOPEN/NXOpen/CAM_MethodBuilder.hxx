#ifndef NXOpen_CAM_METHODBUILDER_HXX_INCLUDED
#define NXOpen_CAM_METHODBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MethodBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MethodBuilder;
    }
    namespace CAM
    {
        class CutParameters;
    }
    namespace CAM
    {
        class DisplayPaint;
    }
    namespace CAM
    {
        class DisplayPath;
    }
    namespace CAM
    {
        class DisplaySilhouette;
    }
    namespace CAM
    {
        class DisplayTool;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class PathDisplayColors;
    }
    namespace CAM
    {
        class _MethodBuilderBuilder;
        class MethodBuilderImpl;
        /** Represents a Method Builder  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT  MethodBuilder : public CAM::NCGroupBuilder
        {
            private: MethodBuilderImpl * m_methodbuilder_impl;
            private: friend class  _MethodBuilderBuilder;
            protected: MethodBuilder();
            public: ~MethodBuilder();
            /**Returns  the inner tolerance 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") double TolIn
            (
            );
            /**Sets  the inner tolerance 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetTolIn
            (
                double tolIn /** the inner tolerance value */
            );
            /**Returns  the outer tolerance 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") double TolOut
            (
            );
            /**Sets  the outer tolerance 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetTolOut
            (
                double tolOut /** the outer tolerance value */
            );
            /**Returns  the cut parameter object <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::CutParameters * CutParameters
            (
            );
            /**Returns  the sub builder for tool display  <br> License requirements : None */
            public: NXOpen::CAM::DisplayTool * ToolDisplay
            (
            );
            /**Returns  the sub builder for path display  <br> License requirements : None */
            public: NXOpen::CAM::DisplayPath * PathDisplay
            (
            );
            /**Returns  the sub builder for paint display  <br> License requirements : None */
            public: NXOpen::CAM::DisplayPaint * PaintDisplay
            (
            );
            /**Returns  the sub builder for silhou display  <br> License requirements : None */
            public: NXOpen::CAM::DisplaySilhouette * SilhouDisplay
            (
            );
            /**Returns  the sub builder for path display colors <br> License requirements : None */
            public: NXOpen::CAM::PathDisplayColors * PathDisplayColors
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
