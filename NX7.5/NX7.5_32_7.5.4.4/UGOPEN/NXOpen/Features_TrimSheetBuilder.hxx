#ifndef NXOpen_FEATURES_TRIMSHEETBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRIMSHEETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TrimSheetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_TrimSheetBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class TrimSheetBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class RegionPointList;
    class SelectBodyList;
    class SelectObjectList;
    namespace Features
    {
        class _TrimSheetBuilderBuilder;
        class TrimSheetBuilderImpl;
        /**
            Represents a @link Features::TrimSheet Features::TrimSheet@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateTrimsheetBuilder Features::FeatureCollection::CreateTrimsheetBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ImprintBothSide </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        KeepDiscardMethod </td> <td> 
         
        Keep </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  TrimSheetBuilder : public Features::FeatureBuilder
        {
            /** Represents the keep discard options for selected region*/
            public: enum KeepDiscardOption
            {
                KeepDiscardOptionKeep/** Selected region will be kept. Default set. */,
                KeepDiscardOptionDiscard/** Selected region will be discarded. */
            };

            private: TrimSheetBuilderImpl * m_trimsheetbuilder_impl;
            private: friend class  _TrimSheetBuilderBuilder;
            protected: TrimSheetBuilder();
            public: ~TrimSheetBuilder();
            /**Returns  the target bodies  <br> License requirements : None */
            public: NXOpen::SelectBodyList * TargetBodies
            (
            );
            /**Returns  the boundry objects  <br> License requirements : None */
            public: NXOpen::SelectObjectList * BoundaryObjects
            (
            );
            /**Returns  the allow target edges as tool objects  <br> License requirements : None */
            public: bool AllowTargetEdgesAsToolObjects
            (
            );
            /**Sets  the allow target edges as tool objects  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAllowTargetEdgesAsToolObjects
            (
                bool allowTargetEdgesAsToolObjects /** allowtargetedgesastoolobjects */ 
            );
            /**Returns  the projection direction  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectionDirection
            (
            );
            /**Returns  the imprint both side  <br> License requirements : None */
            public: bool ImprintBothSide
            (
            );
            /**Sets  the imprint both side  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetImprintBothSide
            (
                bool imprintBothSide /** imprintbothside */ 
            );
            /**Returns  the keep discard method  <br> License requirements : None */
            public: NXOpen::Features::TrimSheetBuilder::KeepDiscardOption KeepDiscardMethod
            (
            );
            /**Sets  the keep discard method  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetKeepDiscardMethod
            (
                NXOpen::Features::TrimSheetBuilder::KeepDiscardOption keepDiscardMethod /** keepdiscardmethod */ 
            );
            /**Returns  the regions  <br> License requirements : None */
            public: NXOpen::RegionPointList * Regions
            (
            );
            /**Returns  the apply to copy of sheets  <br> License requirements : None */
            public: bool ApplyToCopyOfSheets
            (
            );
            /**Sets  the apply to copy of sheets  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetApplyToCopyOfSheets
            (
                bool applyToCopyOfSheets /** applytocopyofsheets */ 
            );
            /**Returns  the output exact geometry  <br> License requirements : None */
            public: bool OutputExactGeometry
            (
            );
            /**Sets  the output exact geometry  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOutputExactGeometry
            (
                bool outputExactGeometry /** outputexactgeometry */ 
            );
            /**Returns  the tolerance  <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the tolerance  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
