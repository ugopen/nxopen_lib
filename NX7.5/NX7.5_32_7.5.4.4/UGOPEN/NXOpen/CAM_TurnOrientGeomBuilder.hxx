#ifndef NXOpen_CAM_TURNORIENTGEOMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNORIENTGEOMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnOrientGeomBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_OrientGeomBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TurnOrientGeomBuilder;
    }
    namespace CAM
    {
        class OrientGeomBuilder;
    }
    namespace CAM
    {
        class TurnOrientWcs;
    }
    namespace CAM
    {
        class _TurnOrientGeomBuilderBuilder;
        class TurnOrientGeomBuilderImpl;
        /** Represents a TurnOrientGeom Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateTurnOrientGeomBuilder CAM::NCGroupCollection::CreateTurnOrientGeomBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  TurnOrientGeomBuilder : public CAM::OrientGeomBuilder
        {
            /** the lathe work plane types*/
            public: enum LatheWorkPlaneTypes
            {
                LatheWorkPlaneTypesXmYm/** XM/YM plane of the MCS */,
                LatheWorkPlaneTypesZmXm/** ZM/XM plane of the MCS */
            };

            private: TurnOrientGeomBuilderImpl * m_turnorientgeombuilder_impl;
            private: friend class  _TurnOrientGeomBuilderBuilder;
            protected: TurnOrientGeomBuilder();
            public: ~TurnOrientGeomBuilder();
            /**Returns  the lathe work plane type  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TurnOrientGeomBuilder::LatheWorkPlaneTypes LatheWorkPlaneType
            (
            );
            /**Sets  the lathe work plane type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLatheWorkPlaneType
            (
                NXOpen::CAM::TurnOrientGeomBuilder::LatheWorkPlaneTypes workPlaneType /** the work plane type */
            );
            /**Returns  the turn orient WCS builder  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TurnOrientWcs * TurnOrientWcs
            (
            );
            /** the SCS type  @return  the integer value 
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") int GetScsType
            (
            );
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") void SetScsType
            (
                int valuee /** the integer value  */
            );
            /** Gets the WCS origin and orientation  @return  WCS origin and orientation 
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") std::vector<double> GetWcsOrient
            (
            );
            /** Sets the WCS origin and orientation 
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") void SetWcsOrient
            (
                const std::vector<double> & valuee /** WCS origin and orientation */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
