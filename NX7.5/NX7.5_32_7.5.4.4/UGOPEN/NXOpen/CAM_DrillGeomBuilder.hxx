#ifndef NXOpen_CAM_DRILLGEOMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DRILLGEOMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DrillGeomBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FeatureGeomBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class DrillGeomBuilder;
    }
    namespace CAM
    {
        class DrillSurfaceBuilder;
    }
    namespace CAM
    {
        class FeatureGeomBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _DrillGeomBuilderBuilder;
        class DrillGeomBuilderImpl;
        /** Represents a DrillGeom Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateDrillGeomBuilder CAM::NCGroupCollection::CreateDrillGeomBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  DrillGeomBuilder : public CAM::FeatureGeomBuilder
        {
            private: DrillGeomBuilderImpl * m_drillgeombuilder_impl;
            private: friend class  _DrillGeomBuilderBuilder;
            protected: DrillGeomBuilder();
            public: ~DrillGeomBuilder();
            /** Returns the Tool Axis type  @return  the integer value   <br> License requirements : cam_base ("CAM BASE") */
            public: int GetToolAxisType
            (
            );
            /** Sets the Tool Axis type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxisType
            (
                int value /** the integer value  */
            );
            /**Returns  the Tool Axis as Arc Axis  <br> License requirements : cam_base ("CAM BASE") */
            public: int ToolAxisAsArcAxis
            (
            );
            /**Sets  the Tool Axis as Arc Axis  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxisAsArcAxis
            (
                int toggleValue /** the new toggle value */
            );
            /**Returns  the Tool Axis vector  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::NXObject * ToolAxisVector
            (
            );
            /**Sets  the Tool Axis vector  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToolAxisVector
            (
                NXOpen::NXObject * vector /** the vector tag */
            );
            /**Returns  the top surface builder   <br> License requirements : None */
            public: NXOpen::CAM::DrillSurfaceBuilder * TopSurface
            (
            );
            /**Returns  the bottom surface builder   <br> License requirements : None */
            public: NXOpen::CAM::DrillSurfaceBuilder * BottomSurface
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
