#ifndef NXOpen_CAM_CUTANGLE_HXX_INCLUDED
#define NXOpen_CAM_CUTANGLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CutAngle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class CutAngle;
    }
    class Direction;
    namespace CAM
    {
        class _CutAngleBuilder;
        class CutAngleImpl;
        /** Represents a boundary cut angle ci Builder */
        class NXOPENCPPEXPORT  CutAngle : public TaggedObject
        {
            /** Available types for cut angle type in boundary cut angle customizable item */
            public: enum Types
            {
                TypesAuto/** Automatic */,
                TypesSpecify/** User Defined */,
                TypesLongestLine/** Longest Line */,
                TypesVector/** Vector */
            };

            private: CutAngleImpl * m_cutangle_impl;
            private: friend class  _CutAngleBuilder;
            protected: CutAngle();
            public: ~CutAngle();
            /**Returns  the cut angle type  <br> License requirements : None */
            public: NXOpen::CAM::CutAngle::Types Type
            (
            );
            /**Sets  the cut angle type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::CutAngle::Types cutAngType /** the Cut Angle Type */
            );
            /**Returns  the cut angle value  <br> License requirements : None */
            public: double Value
            (
            );
            /**Sets  the cut angle value  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetValue
            (
                double cutAng /** the Cut Angle Value */
            );
            /**Returns  the single cut vector and two way vector  <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the single cut vector and two way vector  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** the Cut Vector */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
