#ifndef NXOpen_SECTIONELEMENTDATA_HXX_INCLUDED
#define NXOpen_SECTIONELEMENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SectionElementData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SectionElementData;
    class DisplayableObject;
    class ICurve;
    class SectionElementDataImpl;
    /** Represents section element data */
    class NXOPENCPPEXPORT  SectionElementData : public TransientObject
    {
        private: SectionElementDataImpl * m_sectionelementdata_impl;
        public: explicit SectionElementData(void *ptr);
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  <br> License requirements : None */
        public: virtual ~SectionElementData();
        /** Gets the element that constructs the section 
         @deprecated Deprecated in NX7.5.4 <br> 
         <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public:  NX_DEPRECATED("Deprecated in NX7.5.4") void GetSectionElementData
        (
            NXOpen::ICurve ** sectionElement /** The element that constructs the section */,
            NXOpen::ICurve ** startConnector /** The element that is connected to the 
                                       section_element, at the start_point */,
            NXOpen::Point3d* startPoint /** Start point*/,
            NXOpen::ICurve ** endConnector /** The element that is connected to the 
                                                                       section_element, at the end_point*/,
            NXOpen::Point3d* endPoint /** End Point*/
        );
        /** Gets the element that constructs the section  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: void GetSectionElementData1
        (
            NXOpen::DisplayableObject ** sectionElement /** The element that constructs the section - this can be curve or point. */,
            NXOpen::DisplayableObject ** startConnector /** The element that is connected to the 
                                       section_element, at the start_point - this can be curve or point */,
            NXOpen::Point3d* startPoint /** Start point*/,
            NXOpen::DisplayableObject ** endConnector /** The element that is connected to the 
                                                                       section_element, at the end_point - this can be curve or point*/,
            NXOpen::Point3d* endPoint /** End Point*/
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
