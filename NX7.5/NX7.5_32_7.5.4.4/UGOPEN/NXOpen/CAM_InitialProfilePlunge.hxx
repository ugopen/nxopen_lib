#ifndef NXOpen_CAM_INITIALPROFILEPLUNGE_HXX_INCLUDED
#define NXOpen_CAM_INITIALPROFILEPLUNGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InitialProfilePlunge.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InitialProfilePlunge.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class InitialProfilePlunge;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    class Point;
    namespace CAM
    {
        class _InitialProfilePlungeBuilder;
        class InitialProfilePlungeImpl;
        /** Represents the initial profile plunge */
        class NXOPENCPPEXPORT  InitialProfilePlunge : public TaggedObject
        {
            /** the initial profile plunge mode */
            public: enum Modes
            {
                ModesNone/** None */,
                ModesAutomatic/** Automatic */,
                ModesAxialOrRadial/** Axial Radial */,
                ModesSpecify/** Specify */
            };

            private: InitialProfilePlungeImpl * m_initialprofileplunge_impl;
            private: friend class  _InitialProfilePlungeBuilder;
            protected: InitialProfilePlunge();
            public: ~InitialProfilePlunge();
            /**Returns  the initial profile plunge mode  <br> License requirements : None */
            public: NXOpen::CAM::InitialProfilePlunge::Modes Mode
            (
            );
            /**Sets  the initial profile plunge mode  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMode
            (
                NXOpen::CAM::InitialProfilePlunge::Modes mode /** the initial profile plunge mode */
            );
            /**Returns  the initial profile plunge point  <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the initial profile plunge point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * point /** the initial profile plunge point */
            );
            /**Returns  the axial coordinate <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * AxialCoordinate
            (
            );
            /**Returns  the radial coordinate <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * RadialCoordinate
            (
            );
            /**Returns  the extend distance  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ExtendDistance
            (
            );
            /**Returns  the stop distance  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StopDistance
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
