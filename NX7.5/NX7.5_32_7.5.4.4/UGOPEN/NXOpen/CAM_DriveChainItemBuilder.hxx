#ifndef NXOpen_CAM_DRIVECHAINITEMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DRIVECHAINITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DriveChainItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class DriveChainItemBuilder;
    }
    class Builder;
    namespace CAM
    {
        class InheritableFeedBuilder;
    }
    class Section;
    namespace CAM
    {
        class _DriveChainItemBuilderBuilder;
        class DriveChainItemBuilderImpl;
        /** Represents the Drive Chain Item Builder  <br> This cannot be instantiated <br> */
        class NXOPENCPPEXPORT  DriveChainItemBuilder : public Builder
        {
            private: DriveChainItemBuilderImpl * m_drivechainitembuilder_impl;
            private: friend class  _DriveChainItemBuilderBuilder;
            protected: DriveChainItemBuilder();
            public: ~DriveChainItemBuilder();
            /**Returns  the curve item  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Section * CurveItem
            (
            );
            /**Sets  the curve item  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCurveItem
            (
                NXOpen::Section * section /** the new value */
            );
            /**Returns  the feed rate flag  <br> License requirements : cam_base ("CAM BASE") */
            public: bool FeedrateFlag
            (
            );
            /**Sets  the feed rate flag  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedrateFlag
            (
                bool flag /** the toggle value of Custom Cut Feed Rate*/
            );
            /**Returns  the feed rate builder  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedCutBuilder
            (
            );
            /**Sets  the feed rate builder  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedCutBuilder
            (
                NXOpen::CAM::InheritableFeedBuilder * feedBuilder /** the current value */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
