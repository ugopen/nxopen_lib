#ifndef NXOpen_CAE_MESH3DHEXBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESH3DHEXBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Mesh3dHexBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/CAE_Mesh3dHexBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class Mesh3dHexBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class SelectDisplayableObject;
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _Mesh3dHexBuilderBuilder;
        class Mesh3dHexBuilderImpl;
        /** Represents 3D Hex Mesh
             *  Used to create a @link CAE::SweptMesh CAE::SweptMesh@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshManager::CreateMesh3dHexBuilder CAE::MeshManager::CreateMesh3dHexBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  Mesh3dHexBuilder : public Builder
        {
            /** the hex mesh creation type */
            public: enum Type
            {
                TypeAutomatic/** automatic */ ,
                TypeManual/** manual */ 
            };

            private: Mesh3dHexBuilderImpl * m_mesh3dhexbuilder_impl;
            private: friend class  _Mesh3dHexBuilderBuilder;
            protected: Mesh3dHexBuilder();
            public: ~Mesh3dHexBuilder();
            /**Returns  the source face  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObject * SourceFace
            (
            );
            /**Returns  the source face list  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * SourceFaceList
            (
            );
            /**Returns  the target face  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObject * TargetFace
            (
            );
            /**Returns  the type of hex mesh  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh3dHexBuilder::Type CreationType
            (
            );
            /**Sets  the type of hex mesh  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCreationType
            (
                NXOpen::CAE::Mesh3dHexBuilder::Type type /** type */ 
            );
            /**Returns  the selection objects  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * SelectionList
            (
            );
            /**Returns  the element type builder.   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the property table associated with the mesh. 
                        The property table contains the parameters needed for the generation
                        of the mesh.   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /** Commits the creation of the 
                                     @link CAE::Mesh0d CAE::Mesh0d@endlink ,
                                     @link CAE::Mesh1d CAE::Mesh1d@endlink ,
                                     @link CAE::Mesh2d CAE::Mesh2d@endlink ,
                                     @link CAE::Mesh3d CAE::Mesh3d@endlink  object
                        or Commits the changes made to the @link CAE::Mesh0d CAE::Mesh0d@endlink ,
                                     @link CAE::Mesh1d CAE::Mesh1d@endlink ,
                                     @link CAE::Mesh2d CAE::Mesh2d@endlink ,
                                     @link CAE::Mesh3d CAE::Mesh3d@endlink  object.
                      @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: std::vector<NXOpen::CAE::Mesh *> CommitMesh
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
