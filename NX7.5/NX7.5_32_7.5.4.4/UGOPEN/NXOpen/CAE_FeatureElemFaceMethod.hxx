#ifndef NXOpen_CAE_FEATUREELEMFACEMETHOD_HXX_INCLUDED
#define NXOpen_CAE_FEATUREELEMFACEMETHOD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FeatureElemFaceMethod.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SetObject.hxx>
#include <NXOpen/SelectionMethod.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class FeatureElemFaceMethod;
    }
    class SelectionMethod;
    class TaggedObject;
    namespace CAE
    {
    }
    namespace CAE
    {
        class FeatureElemFaceMethodImpl;
        /** Represents the output from the feature element face smart selector method
             <br> To obtain an instance of this class use CAE::SmartSelectionManager <br> */
        class NXOPENCPPEXPORT  FeatureElemFaceMethod : public SelectionMethod
        {
            private: FeatureElemFaceMethodImpl * m_featureelemfacemethod_impl;
            public: explicit FeatureElemFaceMethod(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~FeatureElemFaceMethod();
            /** Returns the resultant element faces  @return   <br> License requirements : None */
            public: std::vector<NXOpen::CAE::SetObject> GetElementFaces
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
