#ifndef NXOpen_WELD_CHARACTERISTICSBUILDER_HXX_INCLUDED
#define NXOpen_WELD_CHARACTERISTICSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_CharacteristicsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/Weld_CharacteristicsSelectionBuilder.hxx>
#include <NXOpen/Weld_CharacteristicsValueBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    class Builder;
    class NXObject;
    class NXObjectList;
    class SelectNXObject;
    namespace Weld
    {
        class CharacteristicsSelectionBuilder;
    }
    namespace Weld
    {
        class CharacteristicsValueBuilder;
    }
    namespace Weld
    {
        class _CharacteristicsBuilderBuilder;
        class CharacteristicsBuilderImpl;
        /** This builder allows you to define the attribute values to be set on the
            output of the weld feature.  <br> To create a new instance of this class, use @link Weld::WeldManager::CreateCharacteristicsBuilder Weld::WeldManager::CreateCharacteristicsBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  CharacteristicsBuilder : public Builder
        {
            private: CharacteristicsBuilderImpl * m_characteristicsbuilder_impl;
            private: friend class  _CharacteristicsBuilderBuilder;
            protected: CharacteristicsBuilder();
            public: ~CharacteristicsBuilder();
            /**Returns  the selection object containing data that is used to define the attribute values.  <br> License requirements : None */
            public: NXOpen::SelectNXObject * InheritObject
            (
            );
            /**Returns  the list of potential attributes and objects selected for this weld feature.  <br> License requirements : None */
            public: NXOpen::NXObjectList * SelectionList
            (
            );
            /** Create a new selection set and add it to the list.  @return   <br> License requirements : None */
            public: NXOpen::Weld::CharacteristicsSelectionBuilder * CreateSelectionSet
            (
                int weldType /** The type of welding feature being processed, see uf_weld_types.h. */,
                NXOpen::NXObject * data /** An object to retrieve the current attribute settings. */
            );
            /** Apply the selected attributes to the objects.  <br> License requirements : None */
            public: void ApplyAttributes
            (
                const std::vector<NXOpen::NXObject *> & objects /** The objects to apply the attributes to. */
            );
            /** Apply the selected attributes to the objects that were selected.  <br> License requirements : None */
            public: void ApplyAttributesToSelected
            (
            );
            /**Returns  the selected characteristic value.  <br> License requirements : None */
            public: NXOpen::Weld::CharacteristicsValueBuilder * Selected
            (
            );
            /**Sets  the selected characteristic value.  <br> License requirements : None */
            public: void SetSelected
            (
                NXOpen::Weld::CharacteristicsValueBuilder * valueBuilder /** valuebuilder */ 
            );
            /** Change the type of feature defining the attributes. 
                        Note after calling this method, the WeldJA::CharacteristicsValueBuilder objects 
                        previously retrieved will be invalid. You need to reaccess them if you want to
                        make any changes to them.  <br> License requirements : None */
            public: void ChangeFeatureType
            (
                int weldType /** The type of welding feature being processed, see uf_weld_types.h. */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
