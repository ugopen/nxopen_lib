#ifndef NXOpen_CAE_RESPONSESIMULATION_OBJECTLABEL_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_OBJECTLABEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_ObjectLabel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ObjectLabel;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _ObjectLabelBuilder;
            class ObjectLabelImpl;
            /** Represents the setting to label an object. Includes name and description */
            class NXOPENCPPEXPORT  ObjectLabel : public TaggedObject
            {
                private: ObjectLabelImpl * m_objectlabel_impl;
                private: friend class  _ObjectLabelBuilder;
                protected: ObjectLabel();
                public: ~ObjectLabel();
                /**Returns  the object name  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXString Name
                (
                );
                /**Sets  the object name  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Returns  the description for the object 
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXString Description
                (
                );
                /**Sets  the description for the object 
                 @deprecated Deprecated in NX6.0.0 <br> 
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetDescription
                (
                    const NXString & description /** description */ 
                );
                /** Returns the description for the object  @return   <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: std::vector<NXString> GetDescriptions
                (
                );
                /** Sets the description for the object  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDescriptions
                (
                    std::vector<NXString> & description /** description */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
