#ifndef NXOpen_MOTION_GENERALCOUPLERBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_GENERALCOUPLERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_GeneralCouplerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/Motion_GeneralCouplerBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class GeneralCouplerBuilder;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectJoint;
    }
    namespace Motion
    {
        class _GeneralCouplerBuilderBuilder;
        class GeneralCouplerBuilderImpl;
        /** Represents a @link Motion::GeneralCouplerBuilder Motion::GeneralCouplerBuilder@endlink   <br> To create a new instance of this class, use @link Motion::GeneralCouplerCollection::CreateGeneralCouplerBuilder Motion::GeneralCouplerCollection::CreateGeneralCouplerBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DisplayScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        FirstScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        SecondScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        ThirdScale </td> <td> 
         
        1.0 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  GeneralCouplerBuilder : public Motion::MotionBuilder
        {
            /** Definitions of joint coupler attachment type  */
            public: enum AttachmentType
            {
                AttachmentTypeTwo/**two-joint coupler type*/,
                AttachmentTypeThree/**three-joint coupler type*/
            };

            private: GeneralCouplerBuilderImpl * m_generalcouplerbuilder_impl;
            private: friend class  _GeneralCouplerBuilderBuilder;
            protected: GeneralCouplerBuilder();
            public: ~GeneralCouplerBuilder();
            /**Returns  the attachment type  <br> License requirements : None */
            public: NXOpen::Motion::GeneralCouplerBuilder::AttachmentType Attachment
            (
            );
            /**Sets  the attachment type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAttachment
            (
                NXOpen::Motion::GeneralCouplerBuilder::AttachmentType attachment /** attachment */ 
            );
            /**Returns  the selected first joint  <br> License requirements : None */
            public: NXOpen::Motion::SelectJoint * FirstJoint
            (
            );
            /**Returns  the first joint scale  <br> License requirements : None */
            public: double FirstScale
            (
            );
            /**Sets  the first joint scale  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFirstScale
            (
                double firstScale /** firstscale */ 
            );
            /**Returns  the first joint movement type  <br> License requirements : None */
            public: NXOpen::Motion::GcouplerMovementTypes FirstType
            (
            );
            /**Sets  the first joint movement type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFirstType
            (
                NXOpen::Motion::GcouplerMovementTypes firstType /** firsttype */ 
            );
            /**Returns  the selected second joint  <br> License requirements : None */
            public: NXOpen::Motion::SelectJoint * SecondJoint
            (
            );
            /**Returns  the second joint scale  <br> License requirements : None */
            public: double SecondScale
            (
            );
            /**Sets  the second joint scale  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSecondScale
            (
                double secondScale /** secondscale */ 
            );
            /**Returns  the second joint movement type  <br> License requirements : None */
            public: NXOpen::Motion::GcouplerMovementTypes SecondType
            (
            );
            /**Sets  the second joint movement type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSecondType
            (
                NXOpen::Motion::GcouplerMovementTypes secondType /** secondtype */ 
            );
            /**Returns  the selected third joint  <br> License requirements : None */
            public: NXOpen::Motion::SelectJoint * ThirdJoint
            (
            );
            /**Returns  the third joint scale  <br> License requirements : None */
            public: double ThirdScale
            (
            );
            /**Sets  the third joint scale  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetThirdScale
            (
                double thirdScale /** thirdscale */ 
            );
            /**Returns  the third joint movement type  <br> License requirements : None */
            public: NXOpen::Motion::GcouplerMovementTypes ThirdType
            (
            );
            /**Sets  the third joint movement type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetThirdType
            (
                NXOpen::Motion::GcouplerMovementTypes thirdType /** thirdtype */ 
            );
            /**Returns  the 2-3 joint coupler name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the 2-3 joint coupler name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
