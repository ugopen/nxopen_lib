#ifndef NXOpen_MECHATRONICS_COUPLINGBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_COUPLINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_CouplingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_CouplingBuilder.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Mechatronics
    {
        class CouplingBuilder;
    }
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectPhysicsJoint;
    }
    namespace Mechatronics
    {
        class _CouplingBuilderBuilder;
        class CouplingBuilderImpl;
        /** This is an abstract class, and cannot be created.  <br> This is an abstract class, and cannot be created. <br> */
        class NXOPENCPPEXPORT  CouplingBuilder : public Mechatronics::PhysicsConstraintBuilder
        {
            private: CouplingBuilderImpl * m_couplingbuilder_impl;
            private: friend class  _CouplingBuilderBuilder;
            protected: CouplingBuilder();
            public: ~CouplingBuilder();
            /**Returns  the master axis joint. This can be a @link HingeJoint HingeJoint@endlink , @link SlidingJoint SlidingJoint@endlink  
                    and @link CylindricalJoint CylindricalJoint@endlink . <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SelectPhysicsJoint * MasterAxisJoint
            (
            );
            /**Returns  the slave axis joint. This can be a @link HingeJoint HingeJoint@endlink , @link SlidingJoint SlidingJoint@endlink  
                    and @link CylindricalJoint CylindricalJoint@endlink . <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SelectPhysicsJoint * SlaveAxisJoint
            (
            );
            /**Returns  the coulping can slip or not.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool AllowSlip
            (
            );
            /**Sets  the coulping can slip or not.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAllowSlip
            (
                bool allowSlip /** allowslip */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
