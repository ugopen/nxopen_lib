#ifndef NXOpen_CAE_STANDARDBEAMSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_STANDARDBEAMSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_StandardBeamSectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_StandardBeamSectionBuilder.hxx>
#include <NXOpen/CAE_IBeamSectionBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class StandardBeamSectionBuilder;
    }
    namespace CAE
    {
        class IBeamSectionBuilder;
    }
    namespace CAE
    {
        class _StandardBeamSectionBuilderBuilder;
        class StandardBeamSectionBuilderImpl;
        /**
            Represents a @link CAE::StandardBeamSectionBuilder CAE::StandardBeamSectionBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::BeamSectionCollection::CreateStandardBeamSectionBuilder CAE::BeamSectionCollection::CreateStandardBeamSectionBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  StandardBeamSectionBuilder : public CAE::IBeamSectionBuilder
        {
            private: StandardBeamSectionBuilderImpl * m_standardbeamsectionbuilder_impl;
            private: friend class  _StandardBeamSectionBuilderBuilder;
            protected: StandardBeamSectionBuilder();
            public: ~StandardBeamSectionBuilder();
            /**Returns  the section descriptor name  <br> License requirements : None */
            public: NXString DescriptorName
            (
            );
            /**Sets  the section descriptor name  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDescriptorName
            (
                const NXString & descriptorName /** descriptorname */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
