#ifndef NXOpen_ANNOTATIONS_IDSYMBOLBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_IDSYMBOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_IdSymbolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_AnnotationPlacement.hxx>
#include <NXOpen/Annotations_IdSymbolBuilder.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class IdSymbolBuilder;
    }
    namespace Annotations
    {
        class AnnotationPlacement;
    }
    namespace Annotations
    {
        class IdSymbol;
    }
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class Builder;
    class SelectObject;
    namespace Annotations
    {
        class _IdSymbolBuilderBuilder;
        class IdSymbolBuilderImpl;
        /** Represents a @link Annotations::IdSymbol Annotations::IdSymbol@endlink  builder  <br> To create a new instance of this class, use @link Annotations::IdSymbolCollection::CreateIdSymbolBuilder Annotations::IdSymbolCollection::CreateIdSymbolBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Size </td> <td> 
         
        0 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  IdSymbolBuilder : public Builder
        {
            /** the valid types for an id symbol */
            public: enum SymbolTypes
            {
                SymbolTypesCircle/** Circle                   */,
                SymbolTypesDividedCircle/** Divided circle           */,
                SymbolTypesTriangle/** Triangle with point down */,
                SymbolTypesTriangleUp/** Triangle with point up   */,
                SymbolTypesSquare/** Square                   */,
                SymbolTypesDividedSquare/** Divided square           */,
                SymbolTypesHexagon/** Hexagon                  */,
                SymbolTypesDividedHexagon/** Divided hexagon          */,
                SymbolTypesQuadrantCircle/** Quadrant circle          */,
                SymbolTypesRoundedBox/** Rounded box              */,
                SymbolTypesUnderline/** Underline                */
            };

            private: IdSymbolBuilderImpl * m_idsymbolbuilder_impl;
            private: friend class  _IdSymbolBuilderBuilder;
            protected: IdSymbolBuilder();
            public: ~IdSymbolBuilder();
            /**Returns  the symbol type  <br> License requirements : None */
            public: NXOpen::Annotations::IdSymbolBuilder::SymbolTypes Type
            (
            );
            /**Sets  the symbol type  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetType
            (
                NXOpen::Annotations::IdSymbolBuilder::SymbolTypes type /** type */ 
            );
            /**Returns  the symbol type 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::Annotations::IdSymbolBuilder::SymbolTypes SymbolType
            (
            );
            /**Sets  the symbol type 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetSymbolType
            (
                NXOpen::Annotations::IdSymbolBuilder::SymbolTypes symbolType /** symboltype */ 
            );
            /**Returns  the upper text 
                     The text displayed in the upper portion of the divided symbol    
                     In case Quadrant Circle symbol, the upper text is placed in      
                     the upper left quadrant just above the horizontal dividing line.  <br> License requirements : None */
            public: NXString UpperText
            (
            );
            /**Sets  the upper text 
                     The text displayed in the upper portion of the divided symbol    
                     In case Quadrant Circle symbol, the upper text is placed in      
                     the upper left quadrant just above the horizontal dividing line.  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetUpperText
            (
                const NXString & upperText /** uppertext */ 
            );
            /**Returns  the lower text 
                     The text displayed in the lower portion of the divided symbol    
                     In case Quadrant Circle symbol, the lower text is placed in      
                     the lower right quadrant just above the horizontal dividing line.  <br> License requirements : None */
            public: NXString LowerText
            (
            );
            /**Sets  the lower text 
                     The text displayed in the lower portion of the divided symbol    
                     In case Quadrant Circle symbol, the lower text is placed in      
                     the lower right quadrant just above the horizontal dividing line.  <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetLowerText
            (
                const NXString & lowerText /** lowertext */ 
            );
            /**Returns  the origin, where the symbol is going to be displayed  <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /**Returns  the @link Annotations::LeaderBuilder Annotations::LeaderBuilder@endlink  for the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::LeaderBuilder * Leader
            (
            );
            /**Returns  the inherit 
                    The id symbol from which the style properties are inherited  <br> License requirements : None */
            public: NXOpen::SelectObject * Inherit
            (
            );
            /**Returns  the size 
                    The circle symbols are measured by diameter, the rounded box   
                    is measured by length, and all other symbols are measured by a 
                    circumscribed circle                                            <br> License requirements : None */
            public: double Size
            (
            );
            /**Sets  the size 
                    The circle symbols are measured by diameter, the rounded box   
                    is measured by length, and all other symbols are measured by a 
                    circumscribed circle                                            <br> License requirements : drafting ("DRAFTING") OR geometric_tol ("GDT") */
            public: void SetSize
            (
                double size /** size */ 
            );
            /**Returns  the style  <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
            /**Returns  an annotation placement object 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::Annotations::AnnotationPlacement * Placement
            (
            );
            /** Sets the preview object for dialog creation of id symbols 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") void SetPreviewObject
            (
                NXOpen::Annotations::IdSymbol * symbol /** rubberbanding symbol */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
