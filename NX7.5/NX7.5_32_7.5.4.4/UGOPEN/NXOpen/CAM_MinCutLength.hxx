#ifndef NXOpen_CAM_MINCUTLENGTH_HXX_INCLUDED
#define NXOpen_CAM_MINCUTLENGTH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MinCutLength.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MinCutLength.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MinCutLength;
    }
    namespace CAM
    {
        class _MinCutLengthBuilder;
        class MinCutLengthImpl;
        /**
            Represents a @link CAM::MinCutLength CAM::MinCutLength@endlink 
            */
        class NXOPENCPPEXPORT  MinCutLength : public TaggedObject
        {
            /** the mininmum cut length options */
            public: enum Types
            {
                TypesNone/** None */,
                TypesSpecify/** Specify */
            };

            private: MinCutLengthImpl * m_mincutlength_impl;
            private: friend class  _MinCutLengthBuilder;
            protected: MinCutLength();
            public: ~MinCutLength();
            /**Returns  the status of Minimum Cut Length  <br> License requirements : None */
            public: NXOpen::CAM::MinCutLength::Types Status
            (
            );
            /**Sets  the status of Minimum Cut Length  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStatus
            (
                NXOpen::CAM::MinCutLength::Types minLength /** the the status of Minimum Cut Length */
            );
            /**Returns  the distance of Minimum Cut Length   <br> License requirements : None */
            public: double Distance
            (
            );
            /**Sets  the distance of Minimum Cut Length   <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistance
            (
                double minLength /** the distance of Minimum Cut Length */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
