#ifndef NXOpen_FEATURES_SHEETMETAL_CLEANUPUTILITYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_CLEANUPUTILITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_CleanUpUtilityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SheetMetal_CleanUpUtilityBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class CleanUpUtilityBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        namespace SheetMetal
        {
            class _CleanUpUtilityBuilderBuilder;
            class CleanUpUtilityBuilderImpl;
            /**
                Represents a Clean-Up Utility builder builder
                 <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateCleanUpUtilityBuilder Features::SheetMetal::SheetmetalManager::CreateCleanUpUtilityBuilder@endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            SliverTol </td> <td> 
             
            0.009 </td> </tr> 

            <tr><td> 
             
            ThicknessValue.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            UseGlobal </td> <td> 
             
            1 </td> </tr> 

            </table>  
            */
            class NXOPENCPPEXPORT  CleanUpUtilityBuilder : public Features::FeatureBuilder
            {
                private: CleanUpUtilityBuilderImpl * m_cleanuputilitybuilder_impl;
                private: friend class  _CleanUpUtilityBuilderBuilder;
                protected: CleanUpUtilityBuilder();
                public: ~CleanUpUtilityBuilder();
                /**Returns  the select base face for clean-up utility  <br> License requirements : None */
                public: NXOpen::ScCollector * SelectBaseFace
                (
                );
                /**Returns  the thickness value  <br> License requirements : None */
                public: NXOpen::Expression * ThicknessValue
                (
                );
                /**Returns  the use global, if it equals to true - use global thickness value  <br> License requirements : None */
                public: bool UseGlobal
                (
                );
                /**Sets  the use global, if it equals to true - use global thickness value  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetUseGlobal
                (
                    bool useGlobal /** Clean-up utility use global value*/
                );
                /**Returns  the sliver tolerance  <br> License requirements : None */
                public: double SliverTol
                (
                );
                /**Sets  the sliver tolerance  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSliverTol
                (
                    double sliverTol /** Clean-up utility sliver tolerance value*/
                );
                /**Returns  the hide original  <br> License requirements : None */
                public: bool HideOriginal
                (
                );
                /**Sets  the hide original  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetHideOriginal
                (
                    bool hideOriginal /** Clean-up utility hide original value*/
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
