#ifndef NXOpen_CAE_RESULTSMANIPULATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_RESULTSMANIPULATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultsManipulationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ResultsManipulationBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ResultsManipulationBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        class _ResultsManipulationBuilderBuilder;
        class ResultsManipulationBuilderImpl;
        /** Represents an abstract @link CAE::ResultsManipulationBuilder CAE::ResultsManipulationBuilder@endlink   <br> This is an abstract class and cannot be instantiated <br> */
        class NXOPENCPPEXPORT  ResultsManipulationBuilder : public Builder
        {
            /** Action options */
            public: enum Action
            {
                ActionExportResultsOnly/** export results only */ ,
                ActionExportResultsAndModel/** export results and model */ ,
                ActionCreateImportedResult/** create imported result */ ,
                ActionCreateCompanionResult/** create companion result */ ,
                ActionCreateCompanionResultWithModel/** create companion result with model */ 
            };

            private: ResultsManipulationBuilderImpl * m_resultsmanipulationbuilder_impl;
            private: friend class  _ResultsManipulationBuilderBuilder;
            protected: ResultsManipulationBuilder();
            public: ~ResultsManipulationBuilder();
            /** The action  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAction
            (
                NXOpen::CAE::ResultsManipulationBuilder::Action action /** set action */
            );
            /** The output name  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOutputName
            (
                const NXString & outputName /** set output name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** The output file  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetOutputFile
            (
                const NXString & outputFile /** set output file   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** The companion solution  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCompanionSolution
            (
                NXOpen::CAE::SimSolution * solution /** set companion solution */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
