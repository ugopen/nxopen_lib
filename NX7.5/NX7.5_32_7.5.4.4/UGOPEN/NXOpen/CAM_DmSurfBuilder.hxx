#ifndef NXOpen_CAM_DMSURFBUILDER_HXX_INCLUDED
#define NXOpen_CAM_DMSURFBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_DmSurfBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class DmSurfBuilder;
    }
    namespace CAM
    {
        class CutPatternBuilder;
    }
    namespace CAM
    {
        class DmSurfStepoverCiBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class StepoverBuilder;
    }
    namespace CAM
    {
        class _DmSurfBuilderBuilder;
        class DmSurfBuilderImpl;
        /** Represents a DmSurfBuilder */
        class NXOPENCPPEXPORT  DmSurfBuilder : public TaggedObject
        {
            /** Available types for SDM: Tool Position Type */
            public: enum ToolPositionType
            {
                ToolPositionTypeOn/**On*/,
                ToolPositionTypeTanto/**Tanto*/
            };

            /** SDM: Cut Method in scop, cut pattern  */
            public: enum DmSurfCutPatternType
            {
                DmSurfCutPatternTypeFollowPeriphery/**None*/,
                DmSurfCutPatternTypeSep1/**Warning*/,
                DmSurfCutPatternTypeParallelLines/**Skip*/,
                DmSurfCutPatternTypeSep2/**Retract*/,
                DmSurfCutPatternTypeHelical/**Retract*/
            };

            /** SDM: Cut Method in scop, cut traversal */
            public: enum DmSurfCutTraversalType
            {
                DmSurfCutTraversalTypeZigZag/**Zig-Zag*/,
                DmSurfCutTraversalTypeZigZagLift/**Zig-Zag with Lift*/,
                DmSurfCutTraversalTypeZig/**Zig*/
            };

            /** Surface Drive method/Gouge Check in scop  */
            public: enum GougeActionType
            {
                GougeActionTypeNone/**None*/,
                GougeActionTypeWarning/**Warning*/,
                GougeActionTypeSkip/**Skip*/,
                GougeActionTypeRetract/**Retract*/
            };

            /** Available types for SDM: Cut Step*/
            public: enum DmSurfCutStepType
            {
                DmSurfCutStepTypeTolerance/**Tolerances*/,
                DmSurfCutStepTypePoints/**Number*/
            };

            /** Available types for SDM: Cut Area*/
            public: enum DmSurfCutAreaType
            {
                DmSurfCutAreaTypeSurfacePercent/**Surface %*/,
                DmSurfCutAreaTypeDiagonalPoints/**Diagonal Points*/
            };

            /** Available types for Flip Material, SDM: Select Cut Direction */
            public: enum MatSideType
            {
                MatSideTypeSame/**same*/,
                MatSideTypeOpp/**opp*/
            };

            private: DmSurfBuilderImpl * m_dmsurfbuilder_impl;
            private: friend class  _DmSurfBuilderBuilder;
            protected: DmSurfBuilder();
            public: ~DmSurfBuilder();
            /**Returns the builder of Surface Stock (inheritable double)  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StockDriveBuilder
            (
            );
            /**Returns  the SDM: Tool Position <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::ToolPositionType DmSurfToolPos
            (
            );
            /**Sets  the SDM: Tool Position <br> License requirements : None */
            public: void SetDmSurfToolPos
            (
                NXOpen::CAM::DmSurfBuilder::ToolPositionType dmSurfToolPos /** the value of Tool Position */
            );
            /**Returns  the SDM: Cut Arear <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutAreaType DmSurfCutArea
            (
            );
            /**Sets  the SDM: Cut Arear <br> License requirements : None */
            public: void SetDmSurfCutArea
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutAreaType dmSurfCutArea /** the value of Stepover */
            );
            /**Returns  the Pattern  SDM: Cut Method <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutPatternType DmSurfCutPattern
            (
            );
            /**Sets  the Pattern  SDM: Cut Method <br> License requirements : None */
            public: void SetDmSurfCutPattern
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutPatternType dmSurfCutPattern /** the value of Pattern */
            );
            /**Returns  the Cut Type  SDM: Cut Method <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutTraversalType DmSurfCutTraversal
            (
            );
            /**Sets  the Cut Type  SDM: Cut Method <br> License requirements : None */
            public: void SetDmSurfCutTraversal
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutTraversalType dmSurfCutTraversal /** the value of Cut Type */
            );
            /**Returns  the SDM: Cut Step <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::DmSurfCutStepType DmSurfCutStep
            (
            );
            /**Sets  the SDM: Cut Step <br> License requirements : None */
            public: void SetDmSurfCutStep
            (
                NXOpen::CAM::DmSurfBuilder::DmSurfCutStepType dmSurfCutStep /** the value of Cut Step */
            );
            /**Returns  the  builder of SDM: Cut Step Intol  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepIntolBuilder
            (
            );
            /**Returns  the  builder of SDM: Cut Step Outol  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StepOuttolBuilder
            (
            );
            /**Returns  the  First Cut, SDM: Cut Step  <br> License requirements : None */
            public: int DmSurfCutStepFirstCut
            (
            );
            /**Sets  the  First Cut, SDM: Cut Step  <br> License requirements : None */
            public: void SetDmSurfCutStepFirstCut
            (
                int dmSurfCutStepFirstCut /** the first cut value */
            );
            /**Returns  the  Second Cut, SDM: Cut Step  <br> License requirements : None */
            public: int DmSurfCutStepSecondCut
            (
            );
            /**Sets  the  Second Cut, SDM: Cut Step  <br> License requirements : None */
            public: void SetDmSurfCutStepSecondCut
            (
                int dmSurfCutStepSecondCut /** the second cut value */
            );
            /**Returns  the Third Cut, SDM: Cut Step  <br> License requirements : None */
            public: int DmSurfCutStepThirdCut
            (
            );
            /**Sets  the Third Cut, SDM: Cut Step  <br> License requirements : None */
            public: void SetDmSurfCutStepThirdCut
            (
                int dmSurfCutStepThirdCut /** the third cut value */
            );
            /**Returns  the builder of stepover which is obsolete 
             @deprecated Deprecated in NX6.0.0 <br> 
             <br> License requirements : cam_base ("CAM BASE") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0") NXOpen::CAM::DmSurfStepoverCiBuilder * StepoverCiBuilder
            (
            );
            /**Returns  the builder of stepover  <br> License requirements : None */
            public: NXOpen::CAM::StepoverBuilder * StepoverBuilder
            (
            );
            /**Returns  the Surface Drive method/Gouge Check <br> License requirements : None */
            public: NXOpen::CAM::DmSurfBuilder::GougeActionType DmSurfGouge
            (
            );
            /**Sets  the Surface Drive method/Gouge Check <br> License requirements : None */
            public: void SetDmSurfGouge
            (
                NXOpen::CAM::DmSurfBuilder::GougeActionType dmSurfGouge /** the value of Gouge Check */
            );
            /**Returns  the cut pattern builder  <br> License requirements : None */
            public: NXOpen::CAM::CutPatternBuilder * CutPatternBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
