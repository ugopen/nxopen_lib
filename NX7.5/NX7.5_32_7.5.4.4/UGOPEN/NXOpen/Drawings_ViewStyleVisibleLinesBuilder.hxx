#ifndef NXOpen_DRAWINGS_VIEWSTYLEVISIBLELINESBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWSTYLEVISIBLELINESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewStyleVisibleLinesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewStyleVisibleLinesBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class ViewStyleVisibleLinesBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXColor;
    namespace Drawings
    {
        class _ViewStyleVisibleLinesBuilderBuilder;
        class ViewStyleVisibleLinesBuilderImpl;
        /** Represents the VISIBLE LINES tab on the View Style Dialog (Drawings.ViewStyleVisibleLinesBuilder)
            */
        class NXOPENCPPEXPORT  ViewStyleVisibleLinesBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: ViewStyleVisibleLinesBuilderImpl * m_viewstylevisiblelinesbuilder_impl;
            private: friend class  _ViewStyleVisibleLinesBuilderBuilder;
            protected: ViewStyleVisibleLinesBuilder();
            public: ~ViewStyleVisibleLinesBuilder();
            /**Returns  the visible color on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : None */
            public: NXOpen::NXColor * VisibleColor
            (
            );
            /**Sets  the visible color on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleColor
            (
                NXOpen::NXColor * visibleColor /** Sets new visible color on the visible lines sub-builder */
            );
            /**Returns  the visible font on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : None */
            public: NXOpen::Preferences::Font VisibleFont
            (
            );
            /**Sets  the visible font on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleFont
            (
                NXOpen::Preferences::Font font /** Sets new visible font on the visible lines sub-builder */
            );
            /**Returns  the visible width on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : None */
            public: NXOpen::Preferences::Width VisibleWidth
            (
            );
            /**Sets  the visible width on the VISIBLE LINES tab of the View Style Dialog  <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleWidth
            (
                NXOpen::Preferences::Width width /** Sets new visible width on the visible lines sub-builder */
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
