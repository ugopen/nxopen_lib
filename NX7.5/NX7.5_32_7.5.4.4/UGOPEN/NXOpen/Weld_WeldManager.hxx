#ifndef NXOpen_WELD_WELDMANAGER_HXX_INCLUDED
#define NXOpen_WELD_WELDMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_WeldManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Weld_UserDefinedWeldBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Weld
    {
        class WeldManager;
    }
    namespace Features
    {
        class FeatureCollection;
    }
    namespace Features
    {
        class Feature;
    }
    class NXObject;
    namespace Weld
    {
        class AutoPointBuilder;
    }
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Weld
    {
        class EasyPatternBuilder;
    }
    namespace Weld
    {
        class ExportWeldBuilder;
    }
    namespace Weld
    {
        class Fill;
    }
    namespace Weld
    {
        class GrooveBuilder;
    }
    namespace Weld
    {
        class UserDefinedWeldBuilder;
    }
    namespace Weld
    {
        class WeldAdvisorBuilder;
    }
    namespace Weld
    {
        class WeldBeadBuilder;
    }
    namespace Weld
    {
        class WeldFillBuilder;
    }
    namespace Weld
    {
        class WeldImportBuilder;
    }
    namespace Weld
    {
        class WeldPointBuilder;
    }
    namespace Weld
    {
        class WeldPreferenceBuilder;
    }
    namespace Weld
    {
        class WeldManagerImpl;
        /** Manages weld features and assistant tools.  <br> To obtain an instance of this class, refer to @link Features::FeatureCollection Features::FeatureCollection@endlink  <br> */
        class NXOPENCPPEXPORT  WeldManager
        {
            private: WeldManagerImpl * m_weldmanager_impl;
            private: NXOpen::Features::FeatureCollection* m_owner;
            /** Constructor */
            public: explicit WeldManager(NXOpen::Features::FeatureCollection *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~WeldManager();
            /** Creates a @link Weld::GrooveBuilder Weld::GrooveBuilder@endlink  object.  @return  WeldGroove feature builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::GrooveBuilder * CreateWeldGrooveBuilder
            (
                NXOpen::Features::Feature * weldGroove /** Groove Weld to be edited, if NULL then create a new one */
            );
            /** Creates a @link Weld::WeldPointBuilder Weld::WeldPointBuilder@endlink  object.  @return  WeldPoint feature builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::WeldPointBuilder * CreateWeldPointBuilder
            (
                NXOpen::Features::Feature * weldPoint /** @link WeldPointBuilder WeldPointBuilder@endlink 
                                                                          to be edited, if NULL then create a new one */
            );
            /** Creates a @link Weld::WeldImportBuilder Weld::WeldImportBuilder@endlink  object.  @return  Import weld builder  <br> License requirements : None */
            public: NXOpen::Weld::WeldImportBuilder * CreateImportBuilder
            (
            );
            /** Creates a @link Weld::ExportWeldBuilder Weld::ExportWeldBuilder@endlink  object.  @return  ExportWeld assistant builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::ExportWeldBuilder * CreateExportWeldBuilder
            (
            );
            /** Creates a @link Weld::AutoPointBuilder Weld::AutoPointBuilder@endlink  object.  @return  AutoPoint assistant builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::AutoPointBuilder * CreateAutoPointBuilder
            (
                NXOpen::Features::Feature * unused /** Builder only creates */
            );
            /** Creates a @link Weld::WeldPreferenceBuilder Weld::WeldPreferenceBuilder@endlink  object.  @return  WeldPref assistant builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::WeldPreferenceBuilder * CreatePreferenceBuilder
            (
            );
            /** Creates a @link Weld::UserDefinedWeldBuilder Weld::UserDefinedWeldBuilder@endlink   @return   <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::UserDefinedWeldBuilder * CreateUserDefinedWeldBuilder
            (
                NXOpen::Features::Feature * featureSet /** Builder only creates */
            );
            /** Creates a @link Weld::CharacteristicsBuilder Weld::CharacteristicsBuilder@endlink , used to specify
                   welding characteristics for any welding feature.  @return   <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::CharacteristicsBuilder * CreateCharacteristicsBuilder
            (
                NXOpen::NXObject * object /** object having attributes to be edited. */,
                int weldType /** type of weld feature being created/edited, see uf_weld_types.h. */
            );
            /** Creates a @link Weld::WeldAdvisorBuilder Weld::WeldAdvisorBuilder@endlink  object.  @return  Weld Advisor builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::WeldAdvisorBuilder * CreateWeldAdvisorBuilder
            (
            );
            /** Creates a @link Weld::WeldFillBuilder Weld::WeldFillBuilder@endlink , used to create or edit
                a @link Weld::Fill Weld::Fill@endlink  feature.  @return   <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::WeldFillBuilder * CreateFillBuilder
            (
                NXOpen::Weld::Fill * fillFeature /** @link Weld::Fill Weld::Fill@endlink  to be edited */
            );
            /** Creates a @link Weld::WeldBeadBuilder Weld::WeldBeadBuilder@endlink  object.  @return   <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::WeldBeadBuilder * CreateWeldBeadBuilder
            (
                NXOpen::Features::Feature * beadFeature /** Weld Bead to be edited */
            );
            /** Creates a @link Weld::EasyPatternBuilder Weld::EasyPatternBuilder@endlink  object.  @return  EasyPattern assistant builder <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::EasyPatternBuilder * CreateEasyPatternBuilder
            (
                NXOpen::Features::Feature * patternFeatureSet /** Pattern feature set.  */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
