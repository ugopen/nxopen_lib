#ifndef NXOpen_CAE_LAMINATELOCKANGLEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_LAMINATELOCKANGLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminateLockAngleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_LaminateLockAngleBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class LaminateLockAngleBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _LaminateLockAngleBuilderBuilder;
        class LaminateLockAngleBuilderImpl;
        /** Represents a builder  <br> To create a new instance of this class, use @link CAE::LaminateGlobalLayup::CreateLockAngleBuilder CAE::LaminateGlobalLayup::CreateLockAngleBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  LaminateLockAngleBuilder : public Builder
        {
            private: LaminateLockAngleBuilderImpl * m_laminatelockanglebuilder_impl;
            private: friend class  _LaminateLockAngleBuilderBuilder;
            protected: LaminateLockAngleBuilder();
            public: ~LaminateLockAngleBuilder();
            /**Sets  the lock angle  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetLockAngle
            (
                double lockAngle /** lock */
            );
            /**Returns  the lock angle  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: double LockAngle
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
