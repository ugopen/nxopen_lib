#ifndef NXOpen_MOTION_LINKINITIALVELOCITY_HXX_INCLUDED
#define NXOpen_MOTION_LINKINITIALVELOCITY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_LinkInitialVelocity.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_LinkInitialVelocity.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class LinkInitialVelocity;
    }
    class CoordinateSystem;
    class Direction;
    namespace Motion
    {
        class _LinkInitialVelocityBuilder;
        class LinkInitialVelocityImpl;
        /**
            Represents a @link Motion::LinkInitialVelocity Motion::LinkInitialVelocity@endlink 
            */
        class NXOPENCPPEXPORT  LinkInitialVelocity : public TaggedObject
        {
            /** Defines rotate type of initial velocity.
                        If @link Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude@endlink  is set, @link Motion::LinkInitialVelocity::RotateVector Motion::LinkInitialVelocity::RotateVector@endlink  and @link Motion::LinkInitialVelocity::RotateMagnitude Motion::LinkInitialVelocity::RotateMagnitude@endlink  is valid.
                        If @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is selected, @link Motion::LinkInitialVelocity::RotateCsys Motion::LinkInitialVelocity::RotateCsys@endlink  , @link Motion::LinkInitialVelocity::Wx Motion::LinkInitialVelocity::Wx@endlink , @link Motion::LinkInitialVelocity::Wy Motion::LinkInitialVelocity::Wy@endlink , and @link Motion::LinkInitialVelocity::Wz Motion::LinkInitialVelocity::Wz@endlink  is valid. */
            public: enum AngularVelocityType
            {
                AngularVelocityTypeMagnitude/** Magnitude type define rotate vector  */,
                AngularVelocityTypeComponent/** Component type define rotate csys  */
            };

            private: LinkInitialVelocityImpl * m_linkinitialvelocity_impl;
            private: friend class  _LinkInitialVelocityBuilder;
            protected: LinkInitialVelocity();
            public: ~LinkInitialVelocity();
            /**Returns  the translate vector  <br> License requirements : None */
            public: NXOpen::Direction * TranslateVector
            (
            );
            /**Sets  the translate vector  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTranslateVector
            (
                NXOpen::Direction * translateVector /** translatevector */ 
            );
            /**Returns  the translate magnitude  <br> License requirements : None */
            public: double TranslateMagnitude
            (
            );
            /**Sets  the translate magnitude  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTranslateMagnitude
            (
                double translateMagnitude /** translatemagnitude */ 
            );
            /**Returns  the rotate type  <br> License requirements : None */
            public: NXOpen::Motion::LinkInitialVelocity::AngularVelocityType RotateType
            (
            );
            /**Sets  the rotate type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRotateType
            (
                NXOpen::Motion::LinkInitialVelocity::AngularVelocityType rotateType /** rotatetype */ 
            );
            /**Returns  the rotate vector.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude@endlink  is set.  <br> License requirements : None */
            public: NXOpen::Direction * RotateVector
            (
            );
            /**Sets  the rotate vector.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRotateVector
            (
                NXOpen::Direction * rotateVector /** rotatevector */ 
            );
            /**Returns  the rotate magnitude.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude@endlink  is set.  <br> License requirements : None */
            public: double RotateMagnitude
            (
            );
            /**Sets  the rotate magnitude.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude Motion::LinkInitialVelocity::AngularVelocityTypeMagnitude@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRotateMagnitude
            (
                double rotateMagnitude /** rotatemagnitude */ 
            );
            /**Returns  the rotate csys.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * RotateCsys
            (
            );
            /**Sets  the rotate csys.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRotateCsys
            (
                NXOpen::CoordinateSystem * rotateCsys /** rotatecsys */ 
            );
            /**Returns  the wx.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : None */
            public: double Wx
            (
            );
            /**Sets  the wx.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetWx
            (
                double wx /** wx */ 
            );
            /**Returns  the wy.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : None */
            public: double Wy
            (
            );
            /**Sets  the wy.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetWy
            (
                double wy /** wy */ 
            );
            /**Returns  the wz.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : None */
            public: double Wz
            (
            );
            /**Sets  the wz.  Only valid if @link Motion::LinkInitialVelocity::AngularVelocityTypeComponent Motion::LinkInitialVelocity::AngularVelocityTypeComponent@endlink  is set.  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetWz
            (
                double wz /** wz */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
