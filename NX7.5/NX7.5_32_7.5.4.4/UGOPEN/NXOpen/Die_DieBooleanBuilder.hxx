#ifndef NXOpen_DIE_DIEBOOLEANBUILDER_HXX_INCLUDED
#define NXOpen_DIE_DIEBOOLEANBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieBooleanBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieBooleanBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class DieBooleanBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectNXObjectList;
    namespace Die
    {
        class _DieBooleanBuilderBuilder;
        class DieBooleanBuilderImpl;
        /**
            Represents a @link Die::DieBooleanBuilder Die::DieBooleanBuilder@endlink . This class is a helper to other
            Die Design features that identify specific booleans in their dialogs, such as the Die Shoe
            feature. 
             <br> To create a new instance of this class, use @link Die::DieCollection::CreateDieBoolean Die::DieCollection::CreateDieBoolean@endlink  <br> */
        class NXOPENCPPEXPORT  DieBooleanBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** boolean type to apply to the selected solids */
            public: enum BooleanType
            {
                BooleanTypeUnite/** Unite the solids to the application solid. */,
                BooleanTypeSubtract/** Subtract the solids from the application solid. */,
                BooleanTypeIntersect/** Intersect the solids with the application solid. */
            };

            private: DieBooleanBuilderImpl * m_diebooleanbuilder_impl;
            private: friend class  _DieBooleanBuilderBuilder;
            protected: DieBooleanBuilder();
            public: ~DieBooleanBuilder();
            /**Returns  the boolean option to apply to the list of selected solids  <br> License requirements : None */
            public: NXOpen::Die::DieBooleanBuilder::BooleanType BooleanOptions
            (
            );
            /**Sets  the boolean option to apply to the list of selected solids  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBooleanOptions
            (
                NXOpen::Die::DieBooleanBuilder::BooleanType booleanOptions /** booleanoptions */ 
            );
            /**Returns  the bodies to be booleaned to the main feature body  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SelectBodies
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
