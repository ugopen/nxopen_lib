#ifndef NXOpen_DRAWINGCOMPAREMANAGER_HXX_INCLUDED
#define NXOpen_DRAWINGCOMPAREMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DrawingCompareManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_CompareReportBuilder.hxx>
#include <NXOpen/Drawings_DrawingCompareSettingsBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class DrawingCompareManager;
    class Part;
    namespace Drawings
    {
        class CompareReportBuilder;
    }
    namespace Drawings
    {
        class DrawingCompareSettingsBuilder;
    }
    class NXObject;
    class DrawingCompareManagerImpl;
    /** Represents an object that manages drawing compare.  <br> To obtain an instance of this class, refer to @link Part Part@endlink  <br> */
    class NXOPENCPPEXPORT  DrawingCompareManager
    {
        private: DrawingCompareManagerImpl * m_drawingcomparemanager_impl;
        private: NXOpen::Part* m_owner;
        /** Constructor */
        public: explicit DrawingCompareManager(NXOpen::Part *owner);
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~DrawingCompareManager();
        /** Caches data for drafing objects in the drawing part  <br> License requirements : None */
        public: void CreateSnapshot
        (
        );
        /** Create track changes data for drafing objects in the drawing part  <br> License requirements : None */
        public: void CreateTrackChanges
        (
        );
        /** Delete track changes data for drafing objects in the drawing part  <br> License requirements : None */
        public: void DeleteTrackChanges
        (
        );
        /** Deletes the cached data for drafting objects.  <br> License requirements : None */
        public: void DeleteSnapshot
        (
        );
        /** Deletes part comparison report.  <br> License requirements : None */
        public: void DeleteComparisonReport
        (
        );
        /** Gets the tag of entity for given ID.  @return  The tag of entity  <br> License requirements : None */
        public: NXOpen::NXObject * GetEntityObjectFromId
        (
            int subfileID /** The ID of entity */
        );
        /** Creates a @link Drawings::DrawingCompareSettingsBuilder Drawings::DrawingCompareSettingsBuilder@endlink   @return   <br> License requirements : drafting ("DRAFTING") */
        public: NXOpen::Drawings::DrawingCompareSettingsBuilder * CreateDrawingCompareSettingsBuilder
        (
        );
        /** Creates a @link Drawings::CompareReportBuilder Drawings::CompareReportBuilder@endlink   @return   <br> License requirements : drafting ("DRAFTING") */
        public: NXOpen::Drawings::CompareReportBuilder * CreateCompareReportBuilder
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}
#undef EXPORTLIBRARY
#endif
