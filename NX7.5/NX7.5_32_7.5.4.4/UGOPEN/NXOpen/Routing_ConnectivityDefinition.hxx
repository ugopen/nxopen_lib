#ifndef NXOpen_ROUTING_CONNECTIVITYDEFINITION_HXX_INCLUDED
#define NXOpen_ROUTING_CONNECTIVITYDEFINITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ConnectivityDefinition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_RouteObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class ConnectivityDefinition;
    }
    namespace Routing
    {
        class RouteObject;
    }
    namespace Routing
    {
        class _ConnectivityDefinitionBuilder;
        class ConnectivityDefinitionImpl;
        /** 
                 @brief 
                The base class for various connection objects.
                 

         
                 <br> 
                Reference subclasses for more information.  
                See NX Open Routing help for detailed information on the Connection data model.
                This is an abstract class.
                 <br> 
             <br> Creator not available in KF. <br> */
        class NXOPENCPPEXPORT  ConnectivityDefinition : public Routing::RouteObject
        {
            private: ConnectivityDefinitionImpl * m_connectivitydefinition_impl;
            private: friend class  _ConnectivityDefinitionBuilder;
            protected: ConnectivityDefinition();
            public: ~ConnectivityDefinition();
            /**Returns  the @link Routing::RouteObject Routing::RouteObject@endlink  implementing a connection.  Is typically a @link Routing::Electrical::WireDevice Routing::Electrical::WireDevice@endlink , @link Routing::Electrical::CableDevice Routing::Electrical::CableDevice@endlink ,
                        @link Routing::Electrical::ShieldDevice Routing::Electrical::ShieldDevice@endlink 
                     <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::Routing::RouteObject * ImplementedBy
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
