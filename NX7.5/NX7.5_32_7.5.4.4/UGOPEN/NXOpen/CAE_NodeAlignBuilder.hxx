#ifndef NXOpen_CAE_NODEALIGNBUILDER_HXX_INCLUDED
#define NXOpen_CAE_NODEALIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodeAlignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_NodeAlignBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class NodeAlignBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectFENode;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class _NodeAlignBuilderBuilder;
        class NodeAlignBuilderImpl;
        /**
            Represents a @link CAE::NodeAlignBuilder CAE::NodeAlignBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateNodeAlignBuilder CAE::NodeElementManager::CreateNodeAlignBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  NodeAlignBuilder : public Builder
        {
            private: NodeAlignBuilderImpl * m_nodealignbuilder_impl;
            private: friend class  _NodeAlignBuilderBuilder;
            protected: NodeAlignBuilder();
            public: ~NodeAlignBuilder();
            /**Returns  the point1 of line  <br> License requirements : None */
            public: NXOpen::CAE::SelectFENode * Point1
            (
            );
            /**Returns  the point2 of line  <br> License requirements : None */
            public: NXOpen::CAE::SelectFENode * Point2
            (
            );
            /**Returns  the node  <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * Node
            (
            );
            /**Returns  the mid node move  <br> License requirements : None */
            public: bool MidNodeMove
            (
            );
            /**Sets  the mid node move  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMidNodeMove
            (
                bool midNodeMove /** midnodemove */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
