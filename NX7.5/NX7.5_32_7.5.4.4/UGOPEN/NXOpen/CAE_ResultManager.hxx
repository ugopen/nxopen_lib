#ifndef NXOpen_CAE_RESULTMANAGER_HXX_INCLUDED
#define NXOpen_CAE_RESULTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Result.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ResultManager;
    }
    class Session;
    namespace CAE
    {
        class ClippingParameters;
    }
    namespace CAE
    {
        class CrossSectionParameters;
    }
    namespace CAE
    {
        class DeformationParameters;
    }
    namespace CAE
    {
        class DurabilityEvent;
    }
    namespace CAE
    {
        class FreeBodyResultsBuilder;
    }
    namespace CAE
    {
        class ImportedResult;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RSEvent;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class Solution;
        }
    }
    namespace CAE
    {
        class Result;
    }
    namespace CAE
    {
        class ResultAccess;
    }
    namespace CAE
    {
        class ResultParameters;
    }
    namespace CAE
    {
        class ResultsCombinationBuilder;
    }
    namespace CAE
    {
        class ResultsEnvelopeBuilder;
    }
    namespace CAE
    {
        class SimSolution;
    }
    namespace CAE
    {
        class SolutionResult;
    }
    class TaggedObject;
    class Unit;
    namespace CAE
    {
        class ResultManagerImpl;
        /** Manages results  <br> To obtain an instance of this class, refer to @link Session Session@endlink  <br> */
        class NXOPENCPPEXPORT  ResultManager
        {
            private: ResultManagerImpl * m_resultmanager_impl;
            private: NXOpen::Session* m_owner;
            /** Constructor */
            public: explicit ResultManager(NXOpen::Session *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~ResultManager();
            /** Creates a imported result object given a solver results file and the unit systems that these results are defined in.
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ImportedResult * CreateImportedResult
            (
                const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXOpen::CAE::Result::ResultBasicUnit & unitsystem /** unitsystem */ 
            );
            /** Creates a imported result object given a solver results file and the unit systems that these results are defined in.
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ImportedResult * CreateImportedResult
            (
                const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & resultname /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXOpen::CAE::Result::ResultBasicUnit & unitsystem /** unitsystem */ 
            );
            /** Creates a imported result object given a solver results file. The unit systems is infered from the result file and Part.
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ImportedResult * CreateImportedResult
            (
                const NXString & filename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & resultname /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a solution result object given a @link CAE::SimSolution CAE::SimSolution@endlink  
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SolutionResult * CreateSolutionResult
            (
                NXOpen::CAE::SimSolution * solution /** solution */ 
            );
            /** Creates a solution result object given a @link CAE::ResponseSimulation::Solution  CAE::ResponseSimulation::Solution @endlink  
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SolutionResult * CreateResponseSolutionResult
            (
                NXOpen::CAE::ResponseSimulation::Solution * responseSolution /** responsesolution */ 
            );
            /** Creates a solution result object given a @link CAE::ResponseSimulation::RSEvent  CAE::ResponseSimulation::RSEvent @endlink  
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SolutionResult * CreateResponseEventResult
            (
                NXOpen::CAE::ResponseSimulation::RSEvent * responseSolution /** responsesolution */ 
            );
            /** Creates a solution result object given a @link CAE::DurabilityEvent CAE::DurabilityEvent@endlink  
                        It is user's responsibility to destroy the result object once done
                        using @link CAE::ResultManager::DeleteResult CAE::ResultManager::DeleteResult@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SolutionResult * CreateDurabilityEventResult
            (
                NXOpen::CAE::DurabilityEvent * durablityEvent /** durablityevent */ 
            );
            /** Creates a result parameter object.
                        It is user's responsibility to destroy the result parameters object once done 
                        using @link CAE::ResultManager::DeleteResultParameters CAE::ResultManager::DeleteResultParameters@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ResultParameters * CreateResultParameters
            (
            );
            /** Creates a cross-section parameter object.
                        It is user's responsibility to destroy the crosss-section parameters object once done 
                        using @link CAE::ResultManager::DeleteCrossSectionParameters CAE::ResultManager::DeleteCrossSectionParameters@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::CrossSectionParameters * CreateCrossSectionParameters
            (
            );
            /** Creates a result access object
                        It is user's responsibility to destroy the result access object once done
                        using @link CAE::ResultManager::DeleteResultAccess CAE::ResultManager::DeleteResultAccess@endlink , in order to free up system resources        
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ResultAccess * CreateResultAccess
            (
                NXOpen::CAE::Result * result /** analysis results for which you want to access information */,
                NXOpen::CAE::ResultParameters * parameters /** defines the specific results state you wish to access */
            );
            /** Delete a @link CAE::Result  CAE::Result @endlink  object. If a @link CAE::ResultAccess  CAE::ResultAccess @endlink  object referencing it, that will also be deleted <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteResult
            (
                NXOpen::CAE::Result * result /** result */ 
            );
            /** Delete a @link CAE::ResultAccess CAE::ResultAccess@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteResultAccess
            (
                NXOpen::CAE::ResultAccess * result /** result */ 
            );
            /** Delete a @link CAE::ResultParameters CAE::ResultParameters@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteResultParameters
            (
                NXOpen::CAE::ResultParameters * result /** result */ 
            );
            /** Delete a @link CAE::CrossSectionParameters CAE::CrossSectionParameters@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteCrossSectionParameters
            (
                NXOpen::CAE::CrossSectionParameters * crossSection /** cross section */ 
            );
            /** Convert older version of ODB file to currently supported version  <br> License requirements : None */
            public: void ConvertOdbFile
            (
                const NXString & inputFileName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & outputFileName /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a deformation parameter object.
                        It is user's responsibility to destroy the deformation parameters object once done 
                        using @link CAE::ResultManager::DeleteDeformationParameters CAE::ResultManager::DeleteDeformationParameters@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::DeformationParameters * CreateDeformationParameters
            (
            );
            /** Delete a @link CAE::DeformationParameters CAE::DeformationParameters@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteDeformationParameters
            (
                NXOpen::CAE::DeformationParameters * result /** result */ 
            );
            /** Creates a free body results builder.
                        It is user's responsibility to destroy the builder object once done 
                        using @link CAE::ResultManager::DeleteFreeBodyResultsBuilder CAE::ResultManager::DeleteFreeBodyResultsBuilder@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::FreeBodyResultsBuilder * CreateFreeBodyResultsBuilder
            (
            );
            /** Delete a @link CAE::FreeBodyResultsBuilder CAE::FreeBodyResultsBuilder@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteFreeBodyResultsBuilder
            (
                NXOpen::CAE::FreeBodyResultsBuilder * builder /** builder */ 
            );
            /** Creates a results combination builder.
                        It is user's responsibility to destroy the builder object once done 
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ResultsCombinationBuilder * CreateResultsCombinationBuilder
            (
            );
            /** Creates a results envelope builder.
                        It is user's responsibility to destroy the builder object once done 
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ResultsEnvelopeBuilder * CreateResultsEnvelopeBuilder
            (
            );
            /** Returns a @link CAE::Result CAE::Result@endlink    @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::TaggedObject * FindObject
            (
                const NXString & journalIdentifier /** Journal identifier of the object */
            );
            /** Creates a clipping parameter object.
                        It is user's responsibility to destroy the clipping parameters object once done 
                        using @link CAE::ResultManager::DeleteClippingParameters CAE::ResultManager::DeleteClippingParameters@endlink , in order to free up system resources
                     @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ClippingParameters * CreateClippingParameters
            (
            );
            /** Delete a @link CAE::ClippingParameters CAE::ClippingParameters@endlink  object.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DeleteClippingParameters
            (
                NXOpen::CAE::ClippingParameters * result /** result */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
