#ifndef NXOpen_CAE_FEMPART_HXX_INCLUDED
#define NXOpen_CAE_FEMPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FemPart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BaseFemPart.hxx>
#include <NXOpen/CAE_EdgeSticherBuilder.hxx>
#include <NXOpen/CAE_FemSynchronizeOptions.hxx>
#include <NXOpen/CAE_UnStitchEdgeBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class FemPart;
    }
    class Body;
    namespace CAE
    {
        class BaseFemPart;
    }
    namespace CAE
    {
        class EdgeSticherBuilder;
    }
    namespace CAE
    {
        class FemSynchronizeOptions;
    }
    namespace CAE
    {
        class MeshPointCollection;
    }
    namespace CAE
    {
        class UnStitchEdgeBuilder;
    }
    class Part;
    namespace CAE
    {
        class _FemPartBuilder;
        class FemPartImpl;
        /**  @brief  Represents an NX part of type .fem.  

           <br> Use the @link PartCollection PartCollection@endlink  class to load or create a part. <br> */
        class NXOPENCPPEXPORT  FemPart : public CAE::BaseFemPart
        {
            /** Used to specify whether all bodies should be used while creating the
                        FEMMain object. */
            public: enum UseAllBodies
            {
                UseAllBodiesFalse/** Use specified bodies from the cad part */,
                UseAllBodiesTrue/** Use all bodies from the cad part */
            };

            /** Used to specify the option of specifying bodies to use from the CAD Part 
                        while creating the FEMMain object. */
            public: enum UseBodiesOption
            {
                UseBodiesOptionSelectedBodies/** Use selected bodies from the cad part */,
                UseBodiesOptionVisibleBodies/** Use all visible bodies from the cad part */,
                UseBodiesOptionAllBodies/** Use all bodies from the cad part */
            };

            private: FemPartImpl * m_fempart_impl;
            private: friend class  _FemPartBuilder;
            protected: FemPart();
            public: ~FemPart();
            /** Finalizes the creation of the fem part file. 
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error. 
                         <br> This method is deprecated. Use @link CAE::FemPart::FinalizeCreation CAE::FemPart::FinalizeCreation@endlink  that takes in a use bodies option instead.
                         <br>  
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const NXString & idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseAllBodies useAllBodiesFlag /** The fem refers
                                            to all bodies in the cad part if this parameter is set to
                                            @link CAE::FemPart::UseAllBodiesTrue CAE::FemPart::UseAllBodiesTrue@endlink . */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file. 
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error.  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const NXString & idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating
                                                                                          the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the idealized part associated with the fem part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Part * IdealizedPart
            (
            );
            /**Returns  the master cad part associated with the fem part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Part * MasterCadPart
            (
            );
            /** Creates a @link  CAE::FemSynchronizeOptions   CAE::FemSynchronizeOptions @endlink 
                     @return  the syncrhonize options object created  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::FemSynchronizeOptions * NewFemSynchronizeOptions
            (
            );
            /** Creates a @link CAE::EdgeSticherBuilder CAE::EdgeSticherBuilder@endlink  
                     @return    <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::EdgeSticherBuilder * CreateEdgeSticherBuilder
            (
            );
            /** Creates a @link CAE::UnStitchEdgeBuilder CAE::UnStitchEdgeBuilder@endlink  
                     @return    <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::UnStitchEdgeBuilder * CreateUnStitchEdgeBuilder
            (
            );
            /** Gets geometry data associated with the fem part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetGeometryData
            (
                NXOpen::CAE::FemPart::UseBodiesOption* useBodiesOption /** Flag if all were selected */,
                std::vector<NXOpen::Body *> & listOfBodies /** Array of tags of selected bodies */,
                NXOpen::CAE::FemSynchronizeOptions ** psyncData /** Syncrhonize options object */
            );
            /** Sets the geometry data associated with the fem part
                         <br> This method is deprecated. Use @link CAE::FemPart::SetGeometryData CAE::FemPart::SetGeometryData@endlink  that takes in a use bodies option instead.
                         <br>  
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") void SetGeometryData
            (
                bool useAllBodies /** Flag if all were selected */,
                const std::vector<NXOpen::Body *> & listOfBodies /** Array of tags of selected bodies */,
                NXOpen::CAE::FemSynchronizeOptions * psyncData /** Syncrhonize options object */
            );
            /** Sets the geometry data associated with the fem part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGeometryData
            (
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** Flag if all were selected */,
                const std::vector<NXOpen::Body *> & listOfBodies /** Array of tags of selected bodies */,
                NXOpen::CAE::FemSynchronizeOptions * psyncData /** Syncrhonize options object */
            );


            /** Returns the meshpoint collector collection belonging to the part */
            public: NXOpen::CAE::MeshPointCollection *MeshPoints();
        };
    }
}
#undef EXPORTLIBRARY
#endif
