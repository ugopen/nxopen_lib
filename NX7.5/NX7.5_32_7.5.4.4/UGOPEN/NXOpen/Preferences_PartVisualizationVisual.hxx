#ifndef NXOpen_PREFERENCES_PARTVISUALIZATIONVISUAL_HXX_INCLUDED
#define NXOpen_PREFERENCES_PARTVISUALIZATIONVISUAL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_PartVisualizationVisual.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class PartVisualizationVisual;
    }
    namespace Preferences
    {
        class PartPreferences;
    }
    namespace Preferences
    {
        class PartVisualizationVisualImpl;
        /** Represents the set of visualization preferences applicable to entire session <br> To obtain an instance of this class, refer to @link Preferences::PartPreferences Preferences::PartPreferences@endlink  <br> */
        class NXOPENCPPEXPORT  PartVisualizationVisual
        {
            private: PartVisualizationVisualImpl * m_partvisualizationvisual_impl;
            private: NXOpen::Preferences::PartPreferences* m_owner;
            /** Constructor */
            public: explicit PartVisualizationVisual(NXOpen::Preferences::PartPreferences *owner);
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartVisualizationVisual();
            /**Returns  the update hidden edges flag for working part. Controls whether or not hidden edges are updated 
            whenever a solid body is edited.  <br> License requirements : None */
            public: bool UpdateHiddenEdge
            (
            );
            /**Sets  the update hidden edges flag for working part. Controls whether or not hidden edges are updated 
            whenever a solid body is edited.  <br> License requirements : None */
            public: void SetUpdateHiddenEdge
            (
                bool updateHiddenEdge /** update hidden edge */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
