#ifndef NXOpen_ANNOTATIONS_BASEDATUMTARGET_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BASEDATUMTARGET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BaseDatumTarget.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_IDatumTarget.hxx>
#include <NXOpen/Annotations_Gdt.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class BaseDatumTarget;
    }
    namespace Annotations
    {
        class Gdt;
    }
    namespace Annotations
    {
        class IDatumTarget;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class INXObject;
    namespace Annotations
    {
        class _BaseDatumTargetBuilder;
        class BaseDatumTargetImpl;
        /** Represents a datum target <br> This is an abstract class, and cannot be created. <br> */
        class NXOPENCPPEXPORT  BaseDatumTarget : public Annotations::Gdt, public virtual Annotations::IDatumTarget
        {
            private: BaseDatumTargetImpl * m_basedatumtarget_impl;
            private: friend class  _BaseDatumTargetBuilder;
            protected: BaseDatumTarget();
            public: ~BaseDatumTarget();
            /**Returns  the datum target label  <br> License requirements : None */
            public: virtual NXString DatumLabel
            (
            );
            /**Sets  the datum target label  <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetDatumLabel
            (
                const NXString & datumLabel /** New datum label */
            );
            /**Returns  the datum target index  <br> License requirements : None */
            public: virtual int TargetIndex
            (
            );
            /**Sets  the datum target index  <br> License requirements : geometric_tol ("GDT") */
            public: virtual void SetTargetIndex
            (
                int index /** New datum target index */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
