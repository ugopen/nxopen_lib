#ifndef NXOpen_GEOMETRICUTILITIES_STYLEDSWEEPREFERENCEMETHODBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_STYLEDSWEEPREFERENCEMETHODBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_StyledSweepReferenceMethodBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_StyledSweepReferenceMethodBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class StyledSweepReferenceMethodBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _StyledSweepReferenceMethodBuilderBuilder;
        class StyledSweepReferenceMethodBuilderImpl;
        /**
            Represents a @link GeometricUtilities::StyledSweepReferenceMethodBuilder GeometricUtilities::StyledSweepReferenceMethodBuilder@endlink 
            */
        class NXOPENCPPEXPORT  StyledSweepReferenceMethodBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the orientation reference option. By default, it is set to guide. */
            public: enum ReferenceOptions
            {
                ReferenceOptionsToGuide/** Guide */,
                ReferenceOptionsToCurve/** Curve */,
                ReferenceOptionsToVector/** Vector Direction */
            };

            private: StyledSweepReferenceMethodBuilderImpl * m_styledsweepreferencemethodbuilder_impl;
            private: friend class  _StyledSweepReferenceMethodBuilderBuilder;
            protected: StyledSweepReferenceMethodBuilder();
            public: ~StyledSweepReferenceMethodBuilder();
            /**Returns  the section orientation reference option.  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::StyledSweepReferenceMethodBuilder::ReferenceOptions ReferenceOption
            (
            );
            /**Sets  the section orientation reference option.  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetReferenceOption
            (
                NXOpen::GeometricUtilities::StyledSweepReferenceMethodBuilder::ReferenceOptions referenceOption /** referenceoption */ 
            );
            /**Returns  a value indicating whether there is a hinge vector  <br> License requirements : None */
            public: bool HasHingeVector
            (
            );
            /**Sets  a value indicating whether there is a hinge vector  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetHasHingeVector
            (
                bool hasHingeVector /** hashingevector */ 
            );
            /**Returns  the section orientation reference curve.  <br> License requirements : None */
            public: NXOpen::Section * ReferenceCurve
            (
            );
            /**Returns  the section orientation reference vector.  <br> License requirements : None */
            public: NXOpen::Direction * ReferenceVector
            (
            );
            /**Sets  the section orientation reference vector.  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetReferenceVector
            (
                NXOpen::Direction * referenceVector /** referencevector */ 
            );
            /** Updates the builder based on reference vector sense  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void UpdateOnReferenceVectorReversal
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
