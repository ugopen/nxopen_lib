#ifndef NXOpen_CAE_MESHPOINTMULTIPLEONCURVEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHPOINTMULTIPLEONCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshPointMultipleOnCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_MeshPointMultipleOnCurveBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MeshPointMultipleOnCurveBuilder;
    }
    class Builder;
    class Expression;
    class SelectIBaseCurveList;
    namespace CAE
    {
        class _MeshPointMultipleOnCurveBuilderBuilder;
        class MeshPointMultipleOnCurveBuilderImpl;
        /**
            Represents a @link CAE::MeshPointMultipleOnCurveBuilder CAE::MeshPointMultipleOnCurveBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshPointCollection::CreateMeshpointMultipleOnCurveBuilder CAE::MeshPointCollection::CreateMeshpointMultipleOnCurveBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  MeshPointMultipleOnCurveBuilder : public Builder
        {
            /** the placement type types */
            public: enum PlacementType
            {
                PlacementTypeByNumber/**by number */,
                PlacementTypeByDistance/**by distance */
            };

            private: MeshPointMultipleOnCurveBuilderImpl * m_meshpointmultipleoncurvebuilder_impl;
            private: friend class  _MeshPointMultipleOnCurveBuilderBuilder;
            protected: MeshPointMultipleOnCurveBuilder();
            public: ~MeshPointMultipleOnCurveBuilder();
            /**Returns  the node  <br> License requirements : None */
            public: NXOpen::SelectIBaseCurveList * Edge
            (
            );
            /**Returns  the distance  <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  the number of meshpoints  <br> License requirements : None */
            public: int NumMeshpoints
            (
            );
            /**Sets  the number of meshpoints  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumMeshpoints
            (
                int numMeshpoints /** nummeshpoints */ 
            );
            /**Returns  the placement option  <br> License requirements : None */
            public: NXOpen::CAE::MeshPointMultipleOnCurveBuilder::PlacementType PlacementOption
            (
            );
            /**Sets  the placement option  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPlacementOption
            (
                NXOpen::CAE::MeshPointMultipleOnCurveBuilder::PlacementType placementOption /** placementoption */ 
            );
            /**Returns  the create option  <br> License requirements : None */
            public: bool CreateOption
            (
            );
            /**Sets  the create option  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCreateOption
            (
                bool createOption /** createoption */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
