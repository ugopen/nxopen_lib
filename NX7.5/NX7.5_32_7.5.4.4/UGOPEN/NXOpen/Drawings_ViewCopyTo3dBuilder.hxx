#ifndef NXOpen_DRAWINGS_VIEWCOPYTO3DBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWCOPYTO3DBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewCopyTo3dBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Drawings_ViewCopyTo3dBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class ViewCopyTo3dBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class DrawingView;
    }
    namespace Drawings
    {
        class SelectDrawingView;
    }
    namespace Drawings
    {
        class SelectDrawingViewList;
    }
    class Expression;
    class SelectNXObjectList;
    namespace Drawings
    {
        class _ViewCopyTo3dBuilderBuilder;
        class ViewCopyTo3dBuilderImpl;
        /**
            Represents a @link Drawings::ViewCopyTo3dBuilder Drawings::ViewCopyTo3dBuilder@endlink .  This class
            is used to copy the contents of a drawing view to modeling space
             <br> To create a new instance of this class, use @link Drawings::DraftingViewCollection::CreateCopyTo3dBuilder Drawings::DraftingViewCollection::CreateCopyTo3dBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ViewCopyTo3dBuilder : public Builder
        {
            /** The pre-NX7.5 option 
             @deprecated Deprecated in NX7.5.0 <br> 
            */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") enum Option
            {
                OptionAutomatic/** automatic */ ,
                OptionSpecify/** specify */ 
            };

            /** The option to get the distance */
            public: enum DistanceFromViewPlaneOption
            {
                DistanceFromViewPlaneOptionAutomatic/** automatic distance calculation */,
                DistanceFromViewPlaneOptionSpecify/** specify distance */
            };

            /** The type of copy to 3d selections */
            public: enum Types
            {
                TypesSelectedCurves/** selected curves */,
                TypesSelectedViews/** selected views  */
            };

            /** The bounding box options  */
            public: enum BoundingBoxOption
            {
                BoundingBoxOptionCurvesToCopy/** curves to copy */,
                BoundingBoxOptionEntireViews/** entire views */
            };

            private: ViewCopyTo3dBuilderImpl * m_viewcopyto3dbuilder_impl;
            private: friend class  _ViewCopyTo3dBuilderBuilder;
            protected: ViewCopyTo3dBuilder();
            public: ~ViewCopyTo3dBuilder();
            /**Returns  the selected view for previous single view selection  
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") NXOpen::Drawings::SelectDrawingView * View
            (
            );
            /**Returns  the selected views for multiple views selection  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: NXOpen::Drawings::SelectDrawingViewList * Views
            (
            );
            /** The selection of drawing view to process.
             @deprecated Deprecated in NX6.0.1 <br> 
             <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.1") void SelectView
            (
                NXOpen::Drawings::DrawingView * view /** The view to copy from */
            );
            /** Commits any edits that have been applied to the builder. Returns the object being
                   edited, or a new object if the builder is being used in creation mode.
                 @return  The object being edited, or the new object.  <br> License requirements : None */
            public: NXOpen::NXObject * Commit
            (
            );
            /** The copy of the selected view to modeling.  
             @deprecated Deprecated in NX6.0.1 <br> 
             <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.1") void Commit
            (
                double offset /** offset from origin */,
                bool curves /** process curves */,
                bool sketches /** process sketch curves */,
                bool dimensions /** process dimensions */
            );
            /** The copy of the selected view to modeling 
             @deprecated Deprecated in NX7.5.0 <br> 
             <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public:  NX_DEPRECATED("Deprecated in NX7.5.0") void Commit
            (
                double offset /** offset from origin */,
                bool curves /** process curves */,
                bool sketches /** process sketch curves */,
                int option /** option of automatic or specify  */
            );
            /**Returns  the flag indicating to process sketch curves  <br> License requirements : None */
            public: bool ProcessSketchCurves
            (
            );
            /**Sets  the flag indicating to process sketch curves  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetProcessSketchCurves
            (
                bool option /** option */ 
            );
            /**Returns  the flag indicating to process view curves  <br> License requirements : None */
            public: bool ProcessViewCurves
            (
            );
            /**Sets  the flag indicating to process view curves  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetProcessViewCurves
            (
                bool option /** option */ 
            );
            /**Returns  the select curves for source group  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Curves
            (
            );
            /**Returns  the path to the destination part  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: NXString DestinationPart
            (
            );
            /**Sets  the path to the destination part  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetDestinationPart
            (
                const NXString & filename /** filename */ 
            );
            /**Returns  the option specifying the distance from the view plane  <br> License requirements : None */
            public: NXOpen::Drawings::ViewCopyTo3dBuilder::DistanceFromViewPlaneOption DistanceFromViewPlane
            (
            );
            /**Sets  the option specifying the distance from the view plane  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetDistanceFromViewPlane
            (
                NXOpen::Drawings::ViewCopyTo3dBuilder::DistanceFromViewPlaneOption option /** option */ 
            );
            /**Returns  the expression of clearance  <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /**Returns  the type of bounding box   <br> License requirements : None */
            public: NXOpen::Drawings::ViewCopyTo3dBuilder::BoundingBoxOption BoundingBox
            (
            );
            /**Sets  the type of bounding box   <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetBoundingBox
            (
                NXOpen::Drawings::ViewCopyTo3dBuilder::BoundingBoxOption option /** option */ 
            );
            /**Returns  the select views in the placement group  <br> License requirements : None */
            public: NXOpen::Drawings::SelectDrawingViewList * BoundingViews
            (
            );
            /**Returns  the flag indicating to create sketches in Modeling <br> License requirements : None */
            public: bool CreateSketches
            (
            );
            /**Sets  the flag indicating to create sketches in Modeling <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetCreateSketches
            (
                bool option /** option */ 
            );
            /**Returns  the flag that indicates whether to extrude solid  <br> License requirements : None */
            public: bool ExtrudeSolidBody
            (
            );
            /**Sets  the flag that indicates whether to extrude solid  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetExtrudeSolidBody
            (
                bool option /** option */ 
            );
            /**Returns  the type of copy  <br> License requirements : None */
            public: NXOpen::Drawings::ViewCopyTo3dBuilder::Types Type
            (
            );
            /**Sets  the type of copy  <br> License requirements : nx_drafting_plus ("Drafting Plus") */
            public: void SetType
            (
                NXOpen::Drawings::ViewCopyTo3dBuilder::Types type /** type */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
