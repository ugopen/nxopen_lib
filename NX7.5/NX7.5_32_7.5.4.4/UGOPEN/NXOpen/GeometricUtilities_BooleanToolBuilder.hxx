#ifndef NXOpen_GEOMETRICUTILITIES_BOOLEANTOOLBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BOOLEANTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BooleanToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanToolBuilder.hxx>
#include <NXOpen/GeometricUtilities_ExtrudeRevolveToolBuilder.hxx>
#include <NXOpen/GeometricUtilities_FacePlaneToolBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BooleanToolBuilder;
    }
    namespace GeometricUtilities
    {
        class ExtrudeRevolveToolBuilder;
    }
    namespace GeometricUtilities
    {
        class FacePlaneToolBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _BooleanToolBuilderBuilder;
        class BooleanToolBuilderImpl;
        /** a class which defines boolean tool builder. It provides four types of
              * tool creation methods viz. a set of existing faces or datum planes, a new plane
              * created on the fly (FacePlaneToolBuilder), extrude or revolve sheet bodies created on the fly by
              * a given section and direction (ExtrudeRevolveToolBuilder).
              */
        class NXOPENCPPEXPORT  BooleanToolBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** the boolean tool created options*/
            public: enum BooleanToolType
            {
                BooleanToolTypeFaceOrPlane/** Tool consists of sets of faces or datum planes */,
                BooleanToolTypeNewPlane/** Tool consists of plane created on the fly */,
                BooleanToolTypeExtrude/** Tool consists of extrude created on the fly */,
                BooleanToolTypeRevolve/** Tool consists of revolve created on the fly */
            };

            private: BooleanToolBuilderImpl * m_booleantoolbuilder_impl;
            private: friend class  _BooleanToolBuilderBuilder;
            protected: BooleanToolBuilder();
            public: ~BooleanToolBuilder();
            /**Returns  the boolean tool option  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanToolBuilder::BooleanToolType ToolOption
            (
            );
            /**Sets  the boolean tool option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolOption
            (
                NXOpen::GeometricUtilities::BooleanToolBuilder::BooleanToolType toolOption /** tooloption */ 
            );
            /**Returns  the FacePlaneTool Builder. Through this tool, the sets of tool faces/datum planes or
                      * new plane created on the fly can be queried  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FacePlaneToolBuilder * FacePlaneTool
            (
            );
            /**Returns  the ExtrudeRevolveTool builder. Through this tool, the extrude 
                      * or revolve created on the fly can be queried  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ExtrudeRevolveToolBuilder * ExtrudeRevolveTool
            (
            );
            /**Returns  the boolean tool reverse direction option  <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the boolean tool reverse direction option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
