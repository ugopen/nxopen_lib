#ifndef NXOpen_CAM_FLOWCUTSTEEPCONTAINMENT_HXX_INCLUDED
#define NXOpen_CAM_FLOWCUTSTEEPCONTAINMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FlowCutSteepContainment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class FlowCutSteepContainment;
    }
    namespace CAM
    {
        class CutPatternBuilder;
    }
    namespace CAM
    {
        class InheritableIntBuilder;
    }
    namespace CAM
    {
        class Sequence;
    }
    namespace CAM
    {
        class StepoverBuilder;
    }
    namespace CAM
    {
        class _FlowCutSteepContainmentBuilder;
        class FlowCutSteepContainmentImpl;
        /** Represents a Steep Containment Builder */
        class NXOPENCPPEXPORT  FlowCutSteepContainment : public TaggedObject
        {
            /** Available types for Pattern Direction in Flow Cut  */
            public: enum PatternDirectionTypes
            {
                PatternDirectionTypesOutward/**Outward*/,
                PatternDirectionTypesInward/**Inward*/
            };

            /** Available types for Cut Direction in Flow Cut  */
            public: enum CutDirectionTypes
            {
                CutDirectionTypesMixed/**Mixed*/,
                CutDirectionTypesClimb/**Climb*/,
                CutDirectionTypesConventional/**Conventional*/
            };

            /** Available types for Steep Cut Direct in Flow Cut  */
            public: enum SteepCutDirectionTypes
            {
                SteepCutDirectionTypesMixed/**Mixed*/,
                SteepCutDirectionTypesHighToLow/**High to Low*/,
                SteepCutDirectionTypesLowToHigh/**Low to High*/
            };

            private: FlowCutSteepContainmentImpl * m_flowcutsteepcontainment_impl;
            private: friend class  _FlowCutSteepContainmentBuilder;
            protected: FlowCutSteepContainment();
            public: ~FlowCutSteepContainment();
            /**Returns  the cut pattern builder  <br> License requirements : None */
            public: NXOpen::CAM::CutPatternBuilder * CutPattern
            (
            );
            /**Returns  the pattern direction  <br> License requirements : None */
            public: NXOpen::CAM::FlowCutSteepContainment::PatternDirectionTypes PatternDirection
            (
            );
            /**Sets  the pattern direction  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPatternDirection
            (
                NXOpen::CAM::FlowCutSteepContainment::PatternDirectionTypes propValue /** the Pattern Deriction value */
            );
            /**Returns  the builder of flow cut stepover <br> License requirements : None */
            public: NXOpen::CAM::StepoverBuilder * Stepover
            (
            );
            /**Returns  the Cut Direction  <br> License requirements : None */
            public: NXOpen::CAM::FlowCutSteepContainment::CutDirectionTypes FlowCutDirection
            (
            );
            /**Sets  the Cut Direction  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFlowCutDirection
            (
                NXOpen::CAM::FlowCutSteepContainment::CutDirectionTypes flowCutDirection /** the Offset Mode value */
            );
            /**Returns  the number of stepovers per side builder (inheritable int)  <br> License requirements : None */
            public: NXOpen::CAM::InheritableIntBuilder * NumberOfStepoversPerSide
            (
            );
            /**Returns  the Steep Cut Direct  <br> License requirements : None */
            public: NXOpen::CAM::FlowCutSteepContainment::SteepCutDirectionTypes SteepCutDirection
            (
            );
            /**Sets  the Steep Cut Direct  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSteepCutDirection
            (
                NXOpen::CAM::FlowCutSteepContainment::SteepCutDirectionTypes flowSteepCutDirect /** the Steep Cut Direct value */
            );
            /**Returns   <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::Sequence * Sequence
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
