#ifndef NXOpen_CAM_TURNMETHODBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNMETHODBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnMethodBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MethodBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TurnMethodBuilder;
    }
    namespace CAM
    {
        class FeedsTurnBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class MethodBuilder;
    }
    namespace CAM
    {
        class _TurnMethodBuilderBuilder;
        class TurnMethodBuilderImpl;
        /** Represents a Turn Method Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateTurnMethodBuilder CAM::NCGroupCollection::CreateTurnMethodBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  TurnMethodBuilder : public CAM::MethodBuilder
        {
            private: TurnMethodBuilderImpl * m_turnmethodbuilder_impl;
            private: friend class  _TurnMethodBuilderBuilder;
            protected: TurnMethodBuilder();
            public: ~TurnMethodBuilder();
            /** Get the display collisions value  @return  the display collisions value  <br> License requirements : None */
            public: int GetTurnDisplCollTog
            (
            );
            /** Set the display collisions value  <br> License requirements : None */
            public: void SetTurnDisplCollTog
            (
                int displayValue /** the display collisions value value */
            );
            /**Returns  the part stock builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * StockPartBuilder
            (
            );
            /**Returns  the face stock builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * FaceStockBuilder
            (
            );
            /**Returns  the radial stock builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * RadStockBuilder
            (
            );
            /**Returns  the minimum engage/retract distance builder (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TurnEngRetMinDistBuilder
            (
            );
            /**Returns  the feeds builder  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::FeedsTurnBuilder * FeedsBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
