#ifndef NXOpen_SCALAR_HXX_INCLUDED
#define NXOpen_SCALAR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Scalar.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SmartObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Scalar;
    class SmartObject;
    class _ScalarBuilder;
    class ScalarImpl;
    /** Represents a scalar.  <br> To create a new instance of this class, use @link ScalarCollection::CreateScalar ScalarCollection::CreateScalar@endlink  <br> */
    class NXOPENCPPEXPORT  Scalar : public SmartObject
    {
        /** Specifies the dimensionality of the scalar. */
        public: enum DimensionalityType
        {
            DimensionalityTypeNone/** none */ ,
            DimensionalityTypeLength/** length */ ,
            DimensionalityTypeArea/** area */ ,
            DimensionalityTypeVolume/** volume */ ,
            DimensionalityTypeMass/** mass */ ,
            DimensionalityTypeAngle/** angle */ ,
            DimensionalityTypeForce/** force */ 
        };

        private: ScalarImpl * m_scalar_impl;
        private: friend class  _ScalarBuilder;
        protected: Scalar();
        public: ~Scalar();
        /**Returns  the value of a scalar.  <br> License requirements : None */
        public: double Value
        (
        );
        /**Sets  the value of a scalar.  <br> License requirements : None */
        public: void SetValue
        (
            double val /** val */ 
        );
        /**Returns  the dimensionality of a scalar.  <br> License requirements : None */
        public: NXOpen::Scalar::DimensionalityType Dimensionality
        (
        );
        /**Returns  the measurement name, if the scalar represents a measurement.
               For more information on measurements, see @link MeasureManager MeasureManager@endlink .  <br> License requirements : None */
        public: NXString MeasurementName
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
