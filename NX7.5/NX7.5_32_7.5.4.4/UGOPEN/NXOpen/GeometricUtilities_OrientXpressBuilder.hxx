#ifndef NXOpen_GEOMETRICUTILITIES_ORIENTXPRESSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_ORIENTXPRESSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_OrientXpressBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OrientXpressBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class OrientXpressBuilder;
    }
    class CoordinateSystem;
    class NXObject;
    namespace GeometricUtilities
    {
        class _OrientXpressBuilderBuilder;
        class OrientXpressBuilderImpl;
        /** Represent the OrientXpress block  <br> OrientXpress is not supported in KF. <br> */
        class NXOPENCPPEXPORT  OrientXpressBuilder : public TaggedObject
        {
            /** the active axis option */
            public: enum Axis
            {
                AxisX/** Active axis in x-axis direction */,
                AxisY/** Active axis in y-axis direction */,
                AxisZ/** Active axis in z-axis direction */,
                AxisPassive/** Passive axis input mode */
            };

            /** the active plane option */
            public: enum Plane
            {
                PlaneYz/** Active plane is parallel to yz-plane */,
                PlaneXz/** Active plane is parallel to xz-plane */,
                PlaneXy/** Active plane is parallel to xy-plane */,
                PlanePassive/** Passive plane input mode */
            };

            /** the option for reference csys */
            public: enum Reference
            {
                ReferenceAcsWorkPart/** Reference CSYS is absolute coordinate system in the work part */,
                ReferenceAcsDisplayPart/** Reference CSYS is absolute coordinate system in the display part */,
                ReferenceWcsWorkPart/** Reference CSYS is work coordinate system in the work part */,
                ReferenceWcsDisplayPart/** Reference CSYS is work coordinate system in the display part */,
                ReferenceCsys/** Reference CSYS is user specified coordinate system */,
                ReferenceFixed/** Reference CSYS is user defined coordinate system */,
                ReferenceProgramDefined/** Reference CSYS is application defined */
            };

            private: OrientXpressBuilderImpl * m_orientxpressbuilder_impl;
            private: friend class  _OrientXpressBuilderBuilder;
            protected: OrientXpressBuilder();
            public: ~OrientXpressBuilder();
            /**Returns  the orientXpress active axis option  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OrientXpressBuilder::Axis AxisOption
            (
            );
            /**Sets  the orientXpress active axis option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAxisOption
            (
                NXOpen::GeometricUtilities::OrientXpressBuilder::Axis orientXpressAxisOption /** orientxpressaxisoption */ 
            );
            /**Returns  the orientXpress active plane option  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OrientXpressBuilder::Plane PlaneOption
            (
            );
            /**Sets  the orientXpress active plane option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPlaneOption
            (
                NXOpen::GeometricUtilities::OrientXpressBuilder::Plane orientXpressPlaneOption /** orientxpressplaneoption */ 
            );
            /**Returns  the orientXpress reference coordinate system  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OrientXpressBuilder::Reference ReferenceOption
            (
            );
            /**Sets  the orientXpress reference coordinate system  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReferenceOption
            (
                NXOpen::GeometricUtilities::OrientXpressBuilder::Reference orientXpressReferenceOption /** orientxpressreferenceoption */ 
            );
            /**Returns  the orientXpress reference csys when reference option is set to csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the orientXpress reference csys when reference option is set to csys  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * orientXpressCsys /** orientxpresscsys */ 
            );
            /**Returns  the orientXpress fixed csys when reference option is set to fixed csys  <br> License requirements : None */
            public: NXOpen::NXObject * FixedCsys
            (
            );
            /**Sets  the orientXpress fixed csys when reference option is set to fixed csys  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFixedCsys
            (
                NXOpen::NXObject * orientXpressFixedCsys /** orientxpressfixedcsys */ 
            );
            /**Returns  the orientXpress program defined csys when reference option is set to program defined csys  <br> License requirements : None */
            public: NXOpen::NXObject * ProgramDefinedCsys
            (
            );
            /**Sets  the orientXpress program defined csys when reference option is set to program defined csys  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetProgramDefinedCsys
            (
                NXOpen::NXObject * orientXpressProgramDefinedCsys /** orientxpressprogramdefinedcsys */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
