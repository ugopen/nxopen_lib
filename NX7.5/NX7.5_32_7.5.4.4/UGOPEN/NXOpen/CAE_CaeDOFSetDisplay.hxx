#ifndef NXOpen_CAE_CAEDOFSETDISPLAY_HXX_INCLUDED
#define NXOpen_CAE_CAEDOFSETDISPLAY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaeDOFSetDisplay.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CaeDOFSetDisplay.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class CaeDOFSetDisplay;
    }
    namespace CAE
    {
        class _CaeDOFSetDisplayBuilder;
        class CaeDOFSetDisplayImpl;
        /**  @brief  Represents a DOF Set display attributes 

          */
        class NXOPENCPPEXPORT  CaeDOFSetDisplay : public TaggedObject
        {
            private: CaeDOFSetDisplayImpl * m_caedofsetdisplay_impl;
            private: friend class  _CaeDOFSetDisplayBuilder;
            protected: CaeDOFSetDisplay();
            public: ~CaeDOFSetDisplay();
            /**Returns  the true/false flag based on whether the name of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool NameDisplayFlag
            (
            );
            /**Sets  the true/false flag based on whether the name of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNameDisplayFlag
            (
                bool nameFlag /** true when the name should be displayed, false otherwise */
            );
            /**Returns  the true/false flag based on whether the node id of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool NodeIdDisplayFlag
            (
            );
            /**Sets  the true/false flag based on whether the node id of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNodeIdDisplayFlag
            (
                bool nodeIdFlag /** true when the node id should be displayed, false otherwise */
            );
            /**Returns  the true/false flag based on whether the graphic symbol of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GraphicSymbolDisplayFlag
            (
            );
            /**Sets  the true/false flag based on whether the graphic symbol of the DOF Set is
                        displayed in the graphics window  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGraphicSymbolDisplayFlag
            (
                bool graphicSymbolFlag /** true when the graphic symbol should be displayed, false otherwise */
            );
            /**Returns  the DOF Set display scaling factor
                        this option specifies the scale of the graphic symbol relative to the size of the bounding box of the FE model.
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int Scale
            (
            );
            /**Sets  the DOF Set display scaling factor
                        this option specifies the scale of the graphic symbol relative to the size of the bounding box of the FE model.
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetScale
            (
                int scale /** 1 is the smallest - 100 is the largest */
            );
            /** Updates the display of the DOF Set
                      <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void UpdateDisplay
            (
            );
            /**Returns  the flag indicating whether or not shading of graphic symbols is required  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool ShadeGraphicSymbol
            (
            );
            /**Sets  the flag indicating whether or not shading of graphic symbols is required  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetShadeGraphicSymbol
            (
                bool shadeGsymbolFlag /** true when shading is required, false otherwise */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
