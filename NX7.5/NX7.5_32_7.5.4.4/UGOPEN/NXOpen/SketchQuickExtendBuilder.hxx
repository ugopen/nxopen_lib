#ifndef NXOpen_SKETCHQUICKEXTENDBUILDER_HXX_INCLUDED
#define NXOpen_SKETCHQUICKEXTENDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchQuickExtendBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/SketchQuickExtendBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchQuickExtendBuilder;
    class Builder;
    class SelectCurveList;
    class _SketchQuickExtendBuilderBuilder;
    class SketchQuickExtendBuilderImpl;
    /**
        Represents a @link SketchQuickExtendBuilder SketchQuickExtendBuilder@endlink 
         <br> To create a new instance of this class, use @link SketchCollection::CreateQuickExtendBuilder SketchCollection::CreateQuickExtendBuilder@endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    ExtendBound </td> <td> 
     
    True </td> </tr> 

    </table>  
    */
    class NXOPENCPPEXPORT  SketchQuickExtendBuilder : public Builder
    {
        private: SketchQuickExtendBuilderImpl * m_sketchquickextendbuilder_impl;
        private: friend class  _SketchQuickExtendBuilderBuilder;
        protected: SketchQuickExtendBuilder();
        public: ~SketchQuickExtendBuilder();
        /**Returns  the extended curves  <br> License requirements : None */
        public: NXOpen::SelectCurveList * ExtendedCurves
        (
        );
        /**Returns  the boundary curves  <br> License requirements : None */
        public: NXOpen::SelectCurveList * BoundaryCurves
        (
        );
        /**Returns  the flag to control the ability to extend to extension of the boundary  <br> License requirements : None */
        public: bool ExtendBound
        (
        );
        /**Sets  the flag to control the ability to extend to extension of the boundary  <br> License requirements : None */
        public: void SetExtendBound
        (
            bool extendBound /** extendbound */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
