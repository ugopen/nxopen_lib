#ifndef NXOpen_CAE_IMESHCOLLECTOR_HXX_INCLUDED
#define NXOpen_CAE_IMESHCOLLECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_IMeshCollector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class IMeshCollector;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class NXObject;
    namespace CAE
    {
        class _IMeshCollectorBuilder;
        class IMeshCollectorImpl;
        /**  @brief  Represents the base IMeshCollector class for MeshCollector and
                          MeshCollectorOccurrence classes  

           <br> Base Class for MeshCollector and MeshCollectorOccurrence classes <br> */
        class NXOPENCPPEXPORT  IMeshCollector : public NXObject
        {
            private: IMeshCollectorImpl * m_imeshcollector_impl;
            private: friend class  _IMeshCollectorBuilder;
            protected: IMeshCollector();
            public: ~IMeshCollector();
            /**Returns  the element property table associated with the mesh collector  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PropertyTable * ElementPropertyTable
            (
            );
            /**Returns  the mesh collector type  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString CollectorType
            (
            );
            /**Returns  the mesh collector neutral type  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString CollectorNeutralType
            (
            );
            /** Returns the mesh collector associated meshes @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: std::vector<NXOpen::CAE::Mesh *> GetMeshes
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
