#ifndef NXOpen_FEATURES_TRACELINESBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRACELINESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TraceLinesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_TraceLinesBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class TraceLinesBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeatureList;
    }
    class ScCollector;
    class Section;
    namespace Features
    {
        class _TraceLinesBuilderBuilder;
        class TraceLinesBuilderImpl;
        /**
            Represents a @link Features::TraceLines Features::TraceLines@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateTraceLinesBuilder Features::FeatureCollection::CreateTraceLinesBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associative </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CurveCount </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Offset.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        OffsetCurveCount </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        OffsetType </td> <td> 
         
        EqualSpacing </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  TraceLinesBuilder : public Features::FeatureBuilder
        {
            /** Define the traceline creation method */
            public: enum TraceLineType
            {
                TraceLineTypeEqualSpacing/** equal spacing */ ,
                TraceLineTypeOffset/** offset */ 
            };

            private: TraceLinesBuilderImpl * m_tracelinesbuilder_impl;
            private: friend class  _TraceLinesBuilderBuilder;
            protected: TraceLinesBuilder();
            public: ~TraceLinesBuilder();
            /**Returns  the offset type  <br> License requirements : None */
            public: NXOpen::Features::TraceLinesBuilder::TraceLineType OffsetType
            (
            );
            /**Sets  the offset type  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetOffsetType
            (
                NXOpen::Features::TraceLinesBuilder::TraceLineType offsetType /** offsettype */ 
            );
            /**Returns  the placement face  <br> License requirements : None */
            public: NXOpen::ScCollector * PlacementFace
            (
            );
            /**Returns  the reference curve  <br> License requirements : None */
            public: NXOpen::Section * ReferenceCurve
            (
            );
            /**Returns  the direction <br> License requirements : None */
            public: bool Direction
            (
            );
            /**Sets  the direction <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetDirection
            (
                bool direction /** direction */ 
            );
            /**Returns  the start curve  <br> License requirements : None */
            public: NXOpen::Section * StartCurve
            (
            );
            /**Returns  the end curve  <br> License requirements : None */
            public: NXOpen::Section * EndCurve
            (
            );
            /**Returns  the datum planes  <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * DatumPlanes
            (
            );
            /**Returns  the curve count  <br> License requirements : None */
            public: int CurveCount
            (
            );
            /**Sets  the curve count  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetCurveCount
            (
                int curveCount /** curvecount */ 
            );
            /**Returns  the offset curve count  <br> License requirements : None */
            public: int OffsetCurveCount
            (
            );
            /**Sets  the offset curve count  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetOffsetCurveCount
            (
                int offsetCurveCount /** offsetcurvecount */ 
            );
            /**Returns  the offset  <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /**Returns  the associative  <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
