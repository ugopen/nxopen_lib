#ifndef NXOpen_MECHATRONICS_COLLISIONSENSORBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_COLLISIONSENSORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_CollisionSensorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_CollisionShapeBuilder.hxx>
#include <NXOpen/Mechatronics_CollisionSensorBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Mechatronics
    {
        class CollisionSensorBuilder;
    }
    namespace Mechatronics
    {
        class CollisionShapeBuilder;
    }
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _CollisionSensorBuilderBuilder;
        class CollisionSensorBuilderImpl;
        /** Represents a @link Mechatronics::CollisionSensor Mechatronics::CollisionSensor@endlink  builder.  <br> To create a new instance of this class, use @link Mechatronics::CollisionSensorCollection::CreateCollisionSensorBuilder Mechatronics::CollisionSensorCollection::CreateCollisionSensorBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  CollisionSensorBuilder : public Mechatronics::CollisionShapeBuilder
        {
            /** the Trigger Shape Types. */
            public: enum CollisionShapeTypes
            {
                CollisionShapeTypesBox/** Box */,
                CollisionShapeTypesSphere/** Sphere */,
                CollisionShapeTypesLine/** Line */
            };

            /** the Trigger Shape Option. */
            public: enum ShapePropertiesOption
            {
                ShapePropertiesOptionAutomatic/** Automatic */,
                ShapePropertiesOptionUserDefined/** UserDefined */
            };

            private: CollisionSensorBuilderImpl * m_collisionsensorbuilder_impl;
            private: friend class  _CollisionSensorBuilderBuilder;
            protected: CollisionSensorBuilder();
            public: ~CollisionSensorBuilder();
            /**Returns  the geometries. This can be a @link Assemblies::ComponentAssembly Assemblies::ComponentAssembly@endlink , @link Point Point@endlink 
                    , bodies and curves.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::SelectNXObjectList * Geometry
            (
            );
            /**Returns  the collision shape type.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::CollisionSensorBuilder::CollisionShapeTypes CollisionShape
            (
            );
            /**Sets  the collision shape type.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetCollisionShape
            (
                NXOpen::Mechatronics::CollisionSensorBuilder::CollisionShapeTypes collisionShape /** collisionshape */ 
            );
            /**Returns  the trigger shape option.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::CollisionSensorBuilder::ShapePropertiesOption ShapeProperties
            (
            );
            /**Sets  the trigger shape option.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetShapeProperties
            (
                NXOpen::Mechatronics::CollisionSensorBuilder::ShapePropertiesOption shapeProperties /** shapeproperties */ 
            );
            /**Returns  the category. It should be between 0 and 16.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int Category
            (
            );
            /**Sets  the category. It should be between 0 and 16.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetCategory
            (
                int category /** category */ 
            );
            /**Returns  the name.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  the name.  <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
