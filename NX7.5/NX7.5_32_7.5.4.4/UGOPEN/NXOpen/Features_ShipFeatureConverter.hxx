#ifndef NXOpen_FEATURES_SHIPFEATURECONVERTER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPFEATURECONVERTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipFeatureConverter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_ShipFeatureConverter.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ShipFeatureConverter;
    }
    class Builder;
    namespace Features
    {
        class _ShipFeatureConverterBuilder;
        class ShipFeatureConverterImpl;
        /**
            This class is used to convert/upgrade legacy Ship Design features.  It currently supports the
            conversion of KF Steel Features into non-KF Steel features.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateShipFeatureConverter Features::FeatureCollection::CreateShipFeatureConverter@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Scope </td> <td> 
         
        WorkPart </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  ShipFeatureConverter : public Builder
        {
            /** Settings for the conversion scope */
            public: enum PartScope
            {
                PartScopeWorkPart/** convert features in the work part only */,
                PartScopeWorkPartandComponents/** convert features in wort part and sub-component parts */
            };

            private: ShipFeatureConverterImpl * m_shipfeatureconverter_impl;
            private: friend class  _ShipFeatureConverterBuilder;
            protected: ShipFeatureConverter();
            public: ~ShipFeatureConverter();
            /**Returns  the conversion scope  <br> License requirements : None */
            public: NXOpen::Features::ShipFeatureConverter::PartScope Scope
            (
            );
            /**Sets  the conversion scope  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetScope
            (
                NXOpen::Features::ShipFeatureConverter::PartScope scope /** scope */ 
            );
            /**Returns  the number of candidate features.  This is only set after committing the converter.    <br> License requirements : None */
            public: int NumCandidateFeatures
            (
            );
            /**Returns  the number of converted features.  This is only set after committing the converter.    <br> License requirements : None */
            public: int NumConvertedFeatures
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
