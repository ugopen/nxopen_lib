#ifndef NXOpen_CAM_TURNAVOIDANCEGOHOMEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNAVOIDANCEGOHOMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnAvoidanceGohomeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TurnAvoidanceGohomeBuilder;
    }
    class Point;
    namespace CAM
    {
        class _TurnAvoidanceGohomeBuilderBuilder;
        class TurnAvoidanceGohomeBuilderImpl;
        /** Represents an avoidance return Builder */
        class NXOPENCPPEXPORT  TurnAvoidanceGohomeBuilder : public TaggedObject
        {
            /** The gohome point motion type options */
            public: enum GohomePointMotionTypes
            {
                GohomePointMotionTypesNone/** Point is inactive. */,
                GohomePointMotionTypesDirect/** Motion type: Direct to point. */,
                GohomePointMotionTypesRadialThenAxial/** Motion type: Radial then axial to point. */,
                GohomePointMotionTypesAxialThenRadial/** Motion type: Axial then axial to point. */,
                GohomePointMotionTypesClearRadialThenDirect/** Motion type: Radial to clearance plane then direct to point. */,
                GohomePointMotionTypesClearAxialThenDirect/** Motion type: Axial to clearance plane then direct to point. */
            };

            /** The gohome point mode options */
            public: enum GohomePointModes
            {
                GohomePointModesPoint/** Point is defined by point. */,
                GohomePointModesSameAsFrom/** Point is locked to from point. */
            };

            private: TurnAvoidanceGohomeBuilderImpl * m_turnavoidancegohomebuilder_impl;
            private: friend class  _TurnAvoidanceGohomeBuilderBuilder;
            protected: TurnAvoidanceGohomeBuilder();
            public: ~TurnAvoidanceGohomeBuilder();
            /**Returns  the gohome point motion type  <br> License requirements : None */
            public: NXOpen::CAM::TurnAvoidanceGohomeBuilder::GohomePointMotionTypes GohomePointMotionType
            (
            );
            /**Sets  the gohome point motion type  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGohomePointMotionType
            (
                NXOpen::CAM::TurnAvoidanceGohomeBuilder::GohomePointMotionTypes gohomePointMotionType /** the gohome point motion type value */
            );
            /**Returns  the gohome point mode  <br> License requirements : None */
            public: NXOpen::CAM::TurnAvoidanceGohomeBuilder::GohomePointModes GohomePointMode
            (
            );
            /**Sets  the gohome point mode  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGohomePointMode
            (
                NXOpen::CAM::TurnAvoidanceGohomeBuilder::GohomePointModes gohomePointMode /** the gohome point mode value */
            );
            /**Returns  the gohome point  <br> License requirements : None */
            public: NXOpen::Point * GohomePoint
            (
            );
            /**Sets  the gohome point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetGohomePoint
            (
                NXOpen::Point * gohomePoint /** the gohome point value */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
