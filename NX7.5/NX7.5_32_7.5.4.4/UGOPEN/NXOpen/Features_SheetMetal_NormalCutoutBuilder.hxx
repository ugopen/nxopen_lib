#ifndef NXOpen_FEATURES_SHEETMETAL_NORMALCUTOUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_NORMALCUTOUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_NormalCutoutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_SheetMetal_SheetmetalBaseBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class NormalCutoutBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalBaseBuilder;
        }
    }
    namespace Features
    {
        class SketchFeature;
    }
    class ISurface;
    class Section;
    namespace Features
    {
        namespace SheetMetal
        {
            class _NormalCutoutBuilderBuilder;
            class NormalCutoutBuilderImpl;
            /** Represents a NormalCutout feature builder.  <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateNormalCutoutFeatureBuilder Features::SheetMetal::SheetmetalManager::CreateNormalCutoutFeatureBuilder@endlink  <br> */
            class NXOPENCPPEXPORT  NormalCutoutBuilder : public Features::SheetMetal::SheetmetalBaseBuilder
            {
                /** This enum represents the depth type for the normal cutout. */
                public: enum DepthTypeOptions
                {
                    DepthTypeOptionsFinite/** Finite */,
                    DepthTypeOptionsFromTo/** From To */,
                    DepthTypeOptionsThroughNext/** Though Next */,
                    DepthTypeOptionsThroughAll/** Through All */
                };

                /** This enum represents the cut type for the normal cutout. */
                public: enum CutTypeOptions
                {
                    CutTypeOptionsThicknessCut/** thickness cut */ ,
                    CutTypeOptionsMidPlaneCut/** mid plane cut */ 
                };

                /** This enum represents the depth direction for the normal cutout. Not used if the normal cutout is from-to. */
                public: enum DepthSideOptions
                {
                    DepthSideOptionsSectionNormalSide/** Material removed on the side of the section normal. */,
                    DepthSideOptionsSectionReverseNormalSide/** Material removed on the side opposite to that of the section normal */,
                    DepthSideOptionsSymmetric/** Material removed in both directions equally. Only applies when the depth type is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFinite Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFinite@endlink . */
                };

                /** This enum represents the side of the section that the normal cutout removes material. The "left" option
                            represents the side to the left of a person who is walking along the section in the direction of its curves 
                            when the section normal is pointing up. The "right" option represents the person's right hand side.
                            This interpretation is the same regardless of whether the section is open or closed. The "right" side at any point 
                            along the section can also be represented by the vector resulting from the cross product of the curve tangent 
                            (of the section curve at that point) and the section normal. The "left" side is the opposite. */
                public: enum SectionSideOptions
                {
                    SectionSideOptionsLeft/** Side pointed to by the inverse of the tangent cross normal vector */,
                    SectionSideOptionsRight/** Side pointed to by the tangent cross normal vector */
                };

                /** Represents the type of the normal cutout - sketch type OR 3D-curve type */
                public: enum TypeOptions
                {
                    TypeOptionsSketchType/** Sketch type normal cutout */,
                    TypeOptionsNonPlanarCurveType/** 3D curves type normal cutout  */
                };

                private: NormalCutoutBuilderImpl * m_normalcutoutbuilder_impl;
                private: friend class  _NormalCutoutBuilderBuilder;
                protected: NormalCutoutBuilder();
                public: ~NormalCutoutBuilder();
                /**Returns  the section used by the normal cutout. It can be open or closed. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Section * Section
                (
                );
                /**Sets  the section used by the normal cutout. It can be open or closed. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetSection
                (
                    NXOpen::Section * section /** section */ 
                );
                /**Returns  the depth side for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions DepthSide
                (
                );
                /**Sets  the depth side for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetDepthSide
                (
                    NXOpen::Features::SheetMetal::NormalCutoutBuilder::DepthSideOptions depthSide /** depth side */ 
                );
                /**Returns  the side of the section that the normal cutout removes material. The options are in @link Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions SectionSide
                (
                );
                /**Sets  the side of the section that the normal cutout removes material. The options are in @link Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetSectionSide
                (
                    NXOpen::Features::SheetMetal::NormalCutoutBuilder::SectionSideOptions sectionSide /** section side */ 
                );
                /**Returns  the depth type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions DepthType
                (
                );
                /**Sets  the depth type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetDepthType
                (
                    NXOpen::Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptions type /** type */ 
                );
                /**Returns  the cut type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions CutType
                (
                );
                /**Sets  the cut type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetCutType
                (
                    NXOpen::Features::SheetMetal::NormalCutoutBuilder::CutTypeOptions cutType /** cut type */ 
                );
                /**Returns  the depth of the cutout. Only applies when the depth type is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFinite Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFinite@endlink . <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Expression * Depth
                (
                );
                /**  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetDepth
                (
                    const NXString & depth /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the internal sketch used by the normal cutout, if it exists.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SketchFeature * Sketch
                (
                );
                /**Sets  the internal sketch used by the normal cutout, if it exists.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetSketch
                (
                    NXOpen::Features::SketchFeature * sketch /** sketch */ 
                );
                /**Returns  the face or datum plane from which the cutout begins. This is only applicable if the depth type
                            is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo@endlink   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::ISurface * From
                (
                );
                /**Sets  the face or datum plane from which the cutout begins. This is only applicable if the depth type
                            is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo@endlink   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetFrom
                (
                    NXOpen::ISurface * ffrom /** From face or datum plane */
                );
                /**Returns  the face or datum plane at which the cutout ends. This is only applicable if the depth type
                            is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo@endlink   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::ISurface * To
                (
                );
                /**Sets  the face or datum plane at which the cutout ends. This is only applicable if the depth type
                            is @link Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo Features::SheetMetal::NormalCutoutBuilder::DepthTypeOptionsFromTo@endlink   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetTo
                (
                    NXOpen::ISurface * to /** To face or datum plane */
                );
                /** Verify that the builder data is valid for creating a normal cutout. 
                             <br> 
                                 If the builder data is valid, a value of 0 is returned.
                             <br> 
                         @return  data validity flag (zero is valid, non-zero is invalid). <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: int ValidateBuilderData
                (
                );
                /**Returns  the type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::TypeOptions Features::SheetMetal::NormalCutoutBuilder::TypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::NormalCutoutBuilder::TypeOptions Type
                (
                );
                /**Sets  the type for the normal cutout. The options are in @link Features::SheetMetal::NormalCutoutBuilder::TypeOptions Features::SheetMetal::NormalCutoutBuilder::TypeOptions@endlink .
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetType
                (
                    NXOpen::Features::SheetMetal::NormalCutoutBuilder::TypeOptions type /** type */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
