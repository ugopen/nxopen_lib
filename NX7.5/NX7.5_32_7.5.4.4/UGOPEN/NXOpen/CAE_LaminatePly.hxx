#ifndef NXOpen_CAE_LAMINATEPLY_HXX_INCLUDED
#define NXOpen_CAE_LAMINATEPLY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminatePly.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_LaminateDrapingData.hxx>
#include <NXOpen/CAE_LaminateDrapingDataBuilder.hxx>
#include <NXOpen/CAE_LaminateDrapingOrientation.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class LaminatePly;
    }
    namespace CAE
    {
        class LaminateDrapingData;
    }
    namespace CAE
    {
        class LaminateDrapingDataBuilder;
    }
    namespace CAE
    {
        class LaminateDrapingDataCollection;
    }
    namespace CAE
    {
        class LaminateDrapingOrientation;
    }
    class NXObject;
    namespace CAE
    {
        class _LaminatePlyBuilder;
        class LaminatePlyImpl;
        /**  @brief  Represents one ply in a laminate layup 

          */
        class NXOPENCPPEXPORT  LaminatePly : public NXObject
        {
            private: LaminatePlyImpl * m_laminateply_impl;
            private: friend class  _LaminatePlyBuilder;
            protected: LaminatePly();
            public: ~LaminatePly();
            /** Creates a @link CAE::LaminateDrapingDataBuilder CAE::LaminateDrapingDataBuilder@endlink   @return   <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: NXOpen::CAE::LaminateDrapingDataBuilder * CreateDrapingDataBuilder
            (
            );
            /**Returns  the ply thickness, in part units (inches or millimeters)  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: double Thickness
            (
            );
            /**Sets  the ply thickness, in part units (inches or millimeters)  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetThickness
            (
                double thickness /** ply thickness */
            );
            /**Returns  the ply orientation angle in degrees, relative to local material orientation  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: double Orientation
            (
            );
            /**Sets  the ply orientation angle in degrees, relative to local material orientation  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetOrientation
            (
                double orientation /** ply orientation */
            );
            /**Returns  the ply color  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: int Color
            (
            );
            /**Sets  the ply color  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetColor
            (
                int orientation /** ply color */
            );
            /**Returns  the ply global id  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: int GlobalId
            (
            );
            /**Sets  the ply global id  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetGlobalId
            (
                int globalId /** ply color */
            );
            /**Returns  the draping data (draping settings)  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: NXOpen::CAE::LaminateDrapingData * DrapingInput
            (
            );
            /**Sets  the draping data (draping settings)  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void SetDrapingInput
            (
                NXOpen::CAE::LaminateDrapingData * drapingInput /** draping algorithm input */
            );
            public: void CopyDrapingResults
            (
                NXOpen::CAE::LaminateDrapingOrientation * drapingResults /** draping results */
            );
            /**Returns  the ply description  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: NXString Description
            (
            );
            /**Sets  the ply description  <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetDescription
            (
                const NXString & description /** ply description */
            );
            public: void SetMaterialByName
            (
                const NXString & name /** material name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            public: void SetPlyMaterialByName
            (
                const NXString & name /** ply material name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Display global ply information  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void Information
            (
                bool detailed /** detailed */ 
            );
            /** Launch the draping algorithm, overriding previous results  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void ComputeDraping
            (
            );
            /** Exports draping results to a csv file.  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void ExportDrapingResults
            (
                const NXString & csvFilename /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                bool showShearAngle /** showshearangle */ ,
                bool showYarnAngle /** showyarnangle */ ,
                bool showPrimaryDirection /** showprimarydirection */ ,
                bool showSecondaryDirection /** showsecondarydirection */ ,
                bool showNormalDirection /** shownormaldirection */ 
            );
            /** Exports draping domain to a group  <br> License requirements : nx_lam_comp_adv ("Laminate Composites Advanced") */
            public: void ExportDrapingDomainAsGroup
            (
            );


            /** The draping data associated to the ply for draping algorithm (this is deprecated) */
            public: NXOpen::CAE::LaminateDrapingDataCollection *DrapingData();
        };
    }
}
#undef EXPORTLIBRARY
#endif
