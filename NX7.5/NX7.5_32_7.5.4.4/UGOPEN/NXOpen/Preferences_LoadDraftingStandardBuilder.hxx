#ifndef NXOpen_PREFERENCES_LOADDRAFTINGSTANDARDBUILDER_HXX_INCLUDED
#define NXOpen_PREFERENCES_LOADDRAFTINGSTANDARDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_LoadDraftingStandardBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Preferences_LoadDraftingStandardBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class LoadDraftingStandardBuilder;
    }
    class Builder;
    namespace Preferences
    {
        class _LoadDraftingStandardBuilderBuilder;
        class LoadDraftingStandardBuilderImpl;
        /**
            Represents a @link Preferences::LoadDraftingStandardBuilder Preferences::LoadDraftingStandardBuilder@endlink 
             <br> To create a new instance of this class, use @link Preferences::DraftingPreferenceManager::CreateLoadDraftingStandardBuilder Preferences::DraftingPreferenceManager::CreateLoadDraftingStandardBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  LoadDraftingStandardBuilder : public Builder
        {
            /** This enum is for the load level */
            public: enum LoadLevel
            {
                LoadLevelShipped/** the shipped level */,
                LoadLevelSite/** the site level    */,
                LoadLevelGroup/**  the group level  */,
                LoadLevelUser/**  the user level   */
            };

            private: LoadDraftingStandardBuilderImpl * m_loaddraftingstandardbuilder_impl;
            private: friend class  _LoadDraftingStandardBuilderBuilder;
            protected: LoadDraftingStandardBuilder();
            public: ~LoadDraftingStandardBuilder();
            /**Returns  the standard level  <br> License requirements : None */
            public: NXOpen::Preferences::LoadDraftingStandardBuilder::LoadLevel Level
            (
            );
            /**Sets  the standard level  <br> License requirements : None */
            public: void SetLevel
            (
                NXOpen::Preferences::LoadDraftingStandardBuilder::LoadLevel level /** level */ 
            );
            /**Returns  the standard name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the standard name  <br> License requirements : None */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
