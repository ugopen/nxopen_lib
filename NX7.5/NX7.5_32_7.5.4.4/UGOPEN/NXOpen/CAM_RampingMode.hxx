#ifndef NXOpen_CAM_RAMPINGMODE_HXX_INCLUDED
#define NXOpen_CAM_RAMPINGMODE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_RampingMode.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_RampingMode.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class RampingMode;
    }
    namespace CAM
    {
        class _RampingModeBuilder;
        class RampingModeImpl;
        /** Represents a ramping mode Builder */
        class NXOPENCPPEXPORT  RampingMode : public TaggedObject
        {
            /** the ramping mode options */
            public: enum Types
            {
                TypesRampOutOnEveryOtherPass/** Ramping mode: Ramp Out on every other Pass */,
                TypesRampInOnEveryOtherPass/** Ramping mode: Ramp In on every other Pass */,
                TypesRampOutFirst/** Ramping mode: Ramp Out first */,
                TypesRampInFirst/** Ramping mode: Ramp In first */
            };

            private: RampingModeImpl * m_rampingmode_impl;
            private: friend class  _RampingModeBuilder;
            protected: RampingMode();
            public: ~RampingMode();
            /**Returns  the ramping mode  <br> License requirements : None */
            public: NXOpen::CAM::RampingMode::Types Type
            (
            );
            /**Sets  the ramping mode  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::RampingMode::Types rampingMode /** the ramping mode */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
