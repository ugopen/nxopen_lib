#ifndef NXOpen_CAM_TURNCUTTERCLEARANCE_HXX_INCLUDED
#define NXOpen_CAM_TURNCUTTERCLEARANCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnCutterClearance.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TurnCutterClearance.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TurnCutterClearance;
    }
    namespace CAM
    {
        class _TurnCutterClearanceBuilder;
        class TurnCutterClearanceImpl;
        /**
            Represents a @link CAM::TurnCutterClearance CAM::TurnCutterClearance@endlink 
            */
        class NXOPENCPPEXPORT  TurnCutterClearance : public TaggedObject
        {
            private: TurnCutterClearanceImpl * m_turncutterclearance_impl;
            private: friend class  _TurnCutterClearanceBuilder;
            protected: TurnCutterClearance();
            public: ~TurnCutterClearance();
            /**Returns  the first cutting edge clearance angle  <br> License requirements : None */
            public: double FirstCuttingEdge
            (
            );
            /**Sets  the first cutting edge clearance angle  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFirstCuttingEdge
            (
                double newValue /** the first cutting edge clearance angle */
            );
            /**Returns  the last cutting edge clearance angle  <br> License requirements : None */
            public: double LastCuttingEdge
            (
            );
            /**Sets  the last cutting edge clearance angle  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetLastCuttingEdge
            (
                double newValue /** the last cutting edge clearance angle */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
