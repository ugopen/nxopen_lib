#ifndef NXOpen_GEOMETRICANALYSIS_SOLIDDENSITY_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SOLIDDENSITY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SolidDensity.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/GeometricAnalysis_SolidDensity.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class SolidDensity;
    }
    class Builder;
    class SelectObjectList;
    namespace GeometricAnalysis
    {
        class _SolidDensityBuilder;
        class SolidDensityImpl;
        /**
              Represents a @link GeometricAnalysis::SolidDensity GeometricAnalysis::SolidDensity@endlink 
              <br> To create a new instance of this class, use @link GeometricAnalysis::AnalysisManager::CreateSolidDensityObject GeometricAnalysis::AnalysisManager::CreateSolidDensityObject@endlink  <br> */
        class NXOPENCPPEXPORT  SolidDensity : public Builder
        {
            /** Types of units for solid density */
            public: enum UnitsType
            {
                UnitsTypePoundsPerCubicInches/** Lbs/Cubic Inches */,
                UnitsTypePoundsPerCubicFeet/** Lbs/Cubic Feet */,
                UnitsTypeGramsPerCubicCentimeters/** Grams/Cubic Centimeters */,
                UnitsTypeKilogramsPerCubicMeters/** Kilograms/Cubic Meters */
            };

            private: SolidDensityImpl * m_soliddensity_impl;
            private: friend class  _SolidDensityBuilder;
            protected: SolidDensity();
            public: ~SolidDensity();
            /**Returns  the solids to set density for  <br> License requirements : None */
            public: NXOpen::SelectObjectList * Solids
            (
            );
            /**Returns  the Solid Density. @link Units Units @endlink and @link SetUnits SetUnits @endlink  must be specified before
            	      specifying the density. When @link Units Units @endlink and @link SetUnits SetUnits @endlink  is changed, 
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  value is recomputed to reflect the change
            	      in units. Set @link Units Units @endlink and @link SetUnits SetUnits @endlink  first, then
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  to set specify the density along
            	      with its units.  <br> License requirements : None */
            public: double Density
            (
            );
            /**Sets  the Solid Density. @link Units Units @endlink and @link SetUnits SetUnits @endlink  must be specified before
            	      specifying the density. When @link Units Units @endlink and @link SetUnits SetUnits @endlink  is changed, 
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  value is recomputed to reflect the change
            	      in units. Set @link Units Units @endlink and @link SetUnits SetUnits @endlink  first, then
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  to set specify the density along
            	      with its units.  <br> License requirements : None */
            public: void SetDensity
            (
                double density /** density */ 
            );
            /**Returns  the density units for @link GeometricAnalysis::SolidDensity GeometricAnalysis::SolidDensity@endlink . 
            	      When @link Units Units @endlink and @link SetUnits SetUnits @endlink  is changed, @link Density Density @endlink and @link SetDensity SetDensity @endlink 
            	      value is recomputed to reflect the change in units. Set
            	      @link Units Units @endlink and @link SetUnits SetUnits @endlink  first, then
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  to set specify the density with
            	      units.  <br> License requirements : None */
            public: NXOpen::GeometricAnalysis::SolidDensity::UnitsType Units
            (
            );
            /**Sets  the density units for @link GeometricAnalysis::SolidDensity GeometricAnalysis::SolidDensity@endlink . 
            	      When @link Units Units @endlink and @link SetUnits SetUnits @endlink  is changed, @link Density Density @endlink and @link SetDensity SetDensity @endlink 
            	      value is recomputed to reflect the change in units. Set
            	      @link Units Units @endlink and @link SetUnits SetUnits @endlink  first, then
            	      @link Density Density @endlink and @link SetDensity SetDensity @endlink  to set specify the density with
            	      units.  <br> License requirements : None */
            public: void SetUnits
            (
                NXOpen::GeometricAnalysis::SolidDensity::UnitsType units /** Type of Units */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
