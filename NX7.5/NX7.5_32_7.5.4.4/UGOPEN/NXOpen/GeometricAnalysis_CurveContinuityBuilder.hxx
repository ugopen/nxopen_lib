#ifndef NXOpen_GEOMETRICANALYSIS_CURVECONTINUITYBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_CURVECONTINUITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_CurveContinuityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/GeometricAnalysis_CurveContinuityBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class CurveContinuityBuilder;
    }
    class Builder;
    class SelectNXObject;
    namespace GeometricAnalysis
    {
        class _CurveContinuityBuilderBuilder;
        class CurveContinuityBuilderImpl;
        /** Represents a curve continuity builder  <br> To create a new instance of this class, use @link GeometricAnalysis::AnalysisObjectCollection::CreateCurveContinuityBuilder GeometricAnalysis::AnalysisObjectCollection::CreateCurveContinuityBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        EndPointX </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        EndPointY </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        EndPointZ </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        G0Check </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        G1Check </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        G2Check </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        G3Check </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ShowNeedle </td> <td> 
         
        1 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT  CurveContinuityBuilder : public Builder
        {
            private: CurveContinuityBuilderImpl * m_curvecontinuitybuilder_impl;
            private: friend class  _CurveContinuityBuilderBuilder;
            protected: CurveContinuityBuilder();
            public: ~CurveContinuityBuilder();
            /**Returns  the select curve  <br> License requirements : None */
            public: NXOpen::SelectNXObject * SelectCurve
            (
            );
            /**Returns  the select object  <br> License requirements : None */
            public: NXOpen::SelectNXObject * SelectObject
            (
            );
            /**Returns  the end point x value  <br> License requirements : None */
            public: double EndPointX
            (
            );
            /**Sets  the end point x value  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetEndPointX
            (
                double endPointX /** endpointx */ 
            );
            /**Returns  the end point y value  <br> License requirements : None */
            public: double EndPointY
            (
            );
            /**Sets  the end point y value  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetEndPointY
            (
                double endPointY /** endpointy */ 
            );
            /**Returns  the end point z value  <br> License requirements : None */
            public: double EndPointZ
            (
            );
            /**Sets  the end point z value  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetEndPointZ
            (
                double endPointZ /** endpointz */ 
            );
            /**Returns  the G0 check  <br> License requirements : None */
            public: bool G0Check
            (
            );
            /**Sets  the G0 check  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetG0Check
            (
                bool g0Check /** g0check */ 
            );
            /**Returns  the G1 check  <br> License requirements : None */
            public: bool G1Check
            (
            );
            /**Sets  the G1 check  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetG1Check
            (
                bool g1Check /** g1check */ 
            );
            /**Returns  the G2 check  <br> License requirements : None */
            public: bool G2Check
            (
            );
            /**Sets  the G2 check  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetG2Check
            (
                bool g2Check /** g2check */ 
            );
            /**Returns  the G3 check  <br> License requirements : None */
            public: bool G3Check
            (
            );
            /**Sets  the G3 check  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetG3Check
            (
                bool g3Check /** g3check */ 
            );
            /**Returns  the show needle  <br> License requirements : None */
            public: bool ShowNeedle
            (
            );
            /**Sets  the show needle  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
            public: void SetShowNeedle
            (
                bool showNeedle /** showneedle */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
