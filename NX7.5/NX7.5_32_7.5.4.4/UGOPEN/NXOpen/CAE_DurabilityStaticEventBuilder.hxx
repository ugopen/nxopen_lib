#ifndef NXOpen_CAE_DURABILITYSTATICEVENTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYSTATICEVENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityStaticEventBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityStaticEventBuilder.hxx>
#include <NXOpen/CAE_DurabilityEventBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class DurabilityStaticEventBuilder;
    }
    namespace CAE
    {
        class DurabilityEventBuilder;
    }
    namespace CAE
    {
        class _DurabilityStaticEventBuilderBuilder;
        class DurabilityStaticEventBuilderImpl;
        /** Represents the builder for the static durability event.  <br> There is no kf creator for this. <br> */
        class NXOPENCPPEXPORT  DurabilityStaticEventBuilder : public CAE::DurabilityEventBuilder
        {
            /** the static excitation type.*/
            public: enum ExcitationTypeEnum
            {
                ExcitationTypeEnumPattern/** Pattern */,
                ExcitationTypeEnumFunction/** Function */,
                ExcitationTypeEnumStressHistory/** Stress History */,
                ExcitationTypeEnumStrainHistory/** Strain History*/
            };

            private: DurabilityStaticEventBuilderImpl * m_durabilitystaticeventbuilder_impl;
            private: friend class  _DurabilityStaticEventBuilderBuilder;
            protected: DurabilityStaticEventBuilder();
            public: ~DurabilityStaticEventBuilder();
            /**Returns  the excitation type.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::CAE::DurabilityStaticEventBuilder::ExcitationTypeEnum ExcitationType
            (
            );
            /**Sets  the excitation type.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetExcitationType
            (
                NXOpen::CAE::DurabilityStaticEventBuilder::ExcitationTypeEnum excitationType /** excitationtype */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
