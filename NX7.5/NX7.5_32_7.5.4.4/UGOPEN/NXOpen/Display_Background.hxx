#ifndef NXOpen_DISPLAY_BACKGROUND_HXX_INCLUDED
#define NXOpen_DISPLAY_BACKGROUND_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_Background.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Display_Background.hxx>
#include <NXOpen/Display_Image.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Display
    {
        class Background;
    }
    class Builder;
    namespace Display
    {
        class Image;
    }
    namespace Display
    {
        class _BackgroundBuilder;
        class BackgroundImpl;
        /**
            Represents a @link Display::Background Display::Background@endlink 
            Background defines how background pixels are displayed.  The background
            resides on a virtual plane at the back of a view.  This background is used
            for display in Studio rendering style and High Quality Images.
             <br> To create a new instance of this class, use @link ViewCollection::CreateBackground ViewCollection::CreateBackground@endlink  <br> */
        class NXOPENCPPEXPORT  Background : public Builder
        {
            /** background types */
            public: enum Type
            {
                TypePlain/** single color background */,
                TypeGraduated/** two color background, which varies between them */,
                TypeImage/** an image file displayed in the background */
            };

            private: BackgroundImpl * m_background_impl;
            private: friend class  _BackgroundBuilder;
            protected: Background();
            public: ~Background();
            /**Returns  the background type  <br> License requirements : None */
            public: NXOpen::Display::Background::Type BackgroundType
            (
            );
            /**Sets  the background type  <br> License requirements : None */
            public: void SetBackgroundType
            (
                NXOpen::Display::Background::Type backgroundType /** backgroundtype */ 
            );
            /** Returns the bottom color  @return  Array of 3 rgb values, each between 0 and 1  <br> License requirements : None */
            public: std::vector<double> GetBottomColor
            (
            );
            /** Sets the bottom color  <br> License requirements : None */
            public: void SetBottomColor
            (
                const std::vector<double> & bottomColor /** Array of 3 rgb values, each between 0 and 1 */
            );
            /** Returns the top color  @return  Array of 3 rgb values, each between 0 and 1  <br> License requirements : None */
            public: std::vector<double> GetTopColor
            (
            );
            /** Sets the top color  <br> License requirements : None */
            public: void SetTopColor
            (
                const std::vector<double> & topColor /** Array of 3 rgb values, each between 0 and 1 */
            );
            /**Returns  the background's image builder  <br> License requirements : None */
            public: NXOpen::Display::Image * Image
            (
            );
            /**Sets  the background's image builder  <br> License requirements : None */
            public: void SetImage
            (
                NXOpen::Display::Image * imageBuilder /** image builder */ 
            );
            /**Returns  the background's image filename  <br> License requirements : None */
            public: NXString ImageFilename
            (
            );
            /**Sets  the background's image filename  <br> License requirements : None */
            public: void SetImageFilename
            (
                const NXString & imageFileName /** image file name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
