#ifndef NXOpen_CAM_MACHINEGROUPBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MACHINEGROUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MachineGroupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MachineGroupBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableFeedBuilder;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    namespace CAM
    {
        class _MachineGroupBuilderBuilder;
        class MachineGroupBuilderImpl;
        /** Represents a MachineGroup Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateMachineGroupBuilder CAM::NCGroupCollection::CreateMachineGroupBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  MachineGroupBuilder : public CAM::NCGroupBuilder
        {
            private: MachineGroupBuilderImpl * m_machinegroupbuilder_impl;
            private: friend class  _MachineGroupBuilderBuilder;
            protected: MachineGroupBuilder();
            public: ~MachineGroupBuilder();
            /**Returns  the Tool Change Time  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ToolChangeTime
            (
            );
            /**Returns  the Rapid Feed Rate  <br> License requirements : None */
            public: NXOpen::CAM::InheritableFeedBuilder * RapidFeed
            (
            );
            /** Recalculate tool path time and update the operation navigator  <br> License requirements : cam_base ("CAM BASE") */
            public: void UpdateToolPathTime
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
