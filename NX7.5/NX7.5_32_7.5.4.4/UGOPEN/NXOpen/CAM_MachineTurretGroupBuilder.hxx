#ifndef NXOpen_CAM_MACHINETURRETGROUPBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MACHINETURRETGROUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_MachineTurretGroupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NCGroupBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class MachineTurretGroupBuilder;
    }
    namespace CAM
    {
        class InheritableTextBuilder;
    }
    namespace CAM
    {
        class NCGroupBuilder;
    }
    class CartesianCoordinateSystem;
    namespace CAM
    {
        class _MachineTurretGroupBuilderBuilder;
        class MachineTurretGroupBuilderImpl;
        /** Represents a MachineTurretGroup Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateMachineTurretGroupBuilder CAM::NCGroupCollection::CreateMachineTurretGroupBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  MachineTurretGroupBuilder : public CAM::NCGroupBuilder
        {
            /** WorkPlane Type*/
            public: enum MctTurrentWplTypes
            {
                MctTurrentWplTypesXy/** XY */,
                MctTurrentWplTypesXz/** XZ */
            };

            private: MachineTurretGroupBuilderImpl * m_machineturretgroupbuilder_impl;
            private: friend class  _MachineTurretGroupBuilderBuilder;
            protected: MachineTurretGroupBuilder();
            public: ~MachineTurretGroupBuilder();
            /**Returns  the Mct Turrent ID   <br> License requirements : None */
            public: NXString MctTurrentId
            (
            );
            /**Sets  the Mct Turrent ID   <br> License requirements : None */
            public: void SetMctTurrentId
            (
                const NXString & mctTurrentID /**  the mct turrent id value */
            );
            /**Returns  the Carrier Name object(inheritable text)  <br> License requirements : None */
            public: NXOpen::CAM::InheritableTextBuilder * CarrierName
            (
            );
            /**Returns  the mct turrent workplane  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CartesianCoordinateSystem * MctTurrentWpl
            (
            );
            /**Sets  the mct turrent workplane  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMctTurrentWpl
            (
                NXOpen::CartesianCoordinateSystem * mctTurrentWpl /** the mct turrent wpl value*/
            );
            /**Returns  the workplane type  <br> License requirements : None */
            public: NXOpen::CAM::MachineTurretGroupBuilder::MctTurrentWplTypes MctTurrentWplType
            (
            );
            /**Sets  the workplane type  <br> License requirements : None */
            public: void SetMctTurrentWplType
            (
                NXOpen::CAM::MachineTurretGroupBuilder::MctTurrentWplTypes mctTurrentWplType /** mctturrentwpltype */ 
            );
            /**Returns  the channel's name  <br> License requirements : None */
            public: NXString ChannelName
            (
            );
            /**Sets  the channel's name  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetChannelName
            (
                const NXString & name /** the channel's name */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
