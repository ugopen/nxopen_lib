#ifndef NXOpen_CAE_DURABILITYDATACONTROLBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYDATACONTROLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityDataControlBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityDataControlBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class DurabilityDataControlBuilder;
    }
    class Expression;
    namespace CAE
    {
        class _DurabilityDataControlBuilderBuilder;
        class DurabilityDataControlBuilderImpl;
        /** Represents a builder class for the transient event data control.
                The data control helps choose the start and ending time for the
                transient loading. It also allows for a decimation order and a 
                peak valley tolerance control.*/
        class NXOPENCPPEXPORT  DurabilityDataControlBuilder : public TaggedObject
        {
            private: DurabilityDataControlBuilderImpl * m_durabilitydatacontrolbuilder_impl;
            private: friend class  _DurabilityDataControlBuilderBuilder;
            protected: DurabilityDataControlBuilder();
            public: ~DurabilityDataControlBuilder();
            /**Returns  the output start time.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::Expression * OutputStartTime
            (
            );
            /**Returns  the output end time.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::Expression * OutputEndTime
            (
            );
            /**Returns  the decimation order.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: int DecimationOrder
            (
            );
            /**Sets  the decimation order.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetDecimationOrder
            (
                int decimationOrder /** decimationorder */ 
            );
            /**Returns  the peak valley tolerance.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: double PeakValleyTolerance
            (
            );
            /**Sets  the peak valley tolerance.  <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetPeakValleyTolerance
            (
                double peakValleyTolerance /** peakvalleytolerance */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
