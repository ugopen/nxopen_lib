#ifndef NXOpen_FEATURES_REPLACEFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_REPLACEFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ReplaceFaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ReplaceFaceBuilder.hxx>
#include <NXOpen/GeometricUtilities_FaceChangeOverflowBehavior.hxx>
#include <NXOpen/ModlDirect_SelectBlend.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ReplaceFaceBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class FaceChangeOverflowBehavior;
    }
    namespace ModlDirect
    {
        class SelectBlend;
    }
    class ScCollector;
    class SelectFace;
    class SelectFaceList;
    namespace Features
    {
        class _ReplaceFaceBuilderBuilder;
        class ReplaceFaceBuilderImpl;
        /**
            Represents a builder for a replace face feature, don't use it until nx502.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateReplaceFaceBuilder Features::FeatureCollection::CreateReplaceFaceBuilder@endlink  <br> */
        class NXOPENCPPEXPORT  ReplaceFaceBuilder : public Features::FeatureBuilder
        {
            /** Enumeration of replace face type, don't use it until nx502 */
            public: enum ReplaceTypes
            {
                ReplaceTypesReplace/** This stands for replace type - to replace the surface of the target face with the tool face    */,
                ReplaceTypesSimplify/** This stands for simplify type - to simplify the geometry representation of a surface of a face */
            };

            private: ReplaceFaceBuilderImpl * m_replacefacebuilder_impl;
            private: friend class  _ReplaceFaceBuilderBuilder;
            protected: ReplaceFaceBuilder();
            public: ~ReplaceFaceBuilder();
            /**Returns  the replace face type, set UGII_Simplify_Surface to 1 if wants to use simplify type, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::Features::ReplaceFaceBuilder::ReplaceTypes Type
            (
            );
            /**Sets  the replace face type, set UGII_Simplify_Surface to 1 if wants to use simplify type, don't use it until nx502  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::ReplaceFaceBuilder::ReplaceTypes replaceType /** the replace face type */
            );
            /**Returns  the target faces to replace, only for replace type, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::ScCollector * FaceToReplace
            (
            );
            /**Returns  the target faces to replace  <br> License requirements : None */
            public: NXOpen::ScCollector * ReplaceFaces
            (
            );
            /**Returns  the replacement face, only for replace type, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::SelectFace * ReplacementFace
            (
            );
            /**Returns  the replacement faces  <br> License requirements : None */
            public: NXOpen::ScCollector * ReplacementFaces
            (
            );
            /**Returns  the flag of reverse direction between replace face and the surface of replacement face, only for replace type,
                        don't use it until nx502  <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the flag of reverse direction between replace face and the surface of replacement face, only for replace type,
                        don't use it until nx502  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** the flag of reverse direction or not */
            );
            /**Returns  the offset distance of replacement faces  <br> License requirements : None */
            public: NXOpen::Expression * OffsetDistance
            (
            );
            /**Returns  the offset reverse direction flag of replacement faces  <br> License requirements : None */
            public: bool OffsetReverseDirection
            (
            );
            /**Sets  the offset reverse direction flag of replacement faces  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOffsetReverseDirection
            (
                bool reverseDirection /** the flag of offset reverse direction */
            );
            /**Returns  the face collector holding the all the recognized blend faces adjacent to faces to replace. It is auto recognized blends +
                        user selected blends - user excluded blends, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::ModlDirect::SelectBlend * BlendFace
            (
            );
            /**Returns  the face to simplify, only for simplify type, don't use it until nx502  <br> License requirements : None */
            public: NXOpen::SelectFaceList * FaceToSimplify
            (
            );
            /**Returns  the face change overflow behavior. Please refer @link GeometricUtilities::FaceChangeOverflowBehavior GeometricUtilities::FaceChangeOverflowBehavior@endlink  for details.  <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FaceChangeOverflowBehavior * FaceChangeOverflowBehavior
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
