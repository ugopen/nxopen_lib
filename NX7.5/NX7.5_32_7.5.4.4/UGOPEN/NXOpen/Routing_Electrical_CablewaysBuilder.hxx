#ifndef NXOpen_ROUTING_ELECTRICAL_CABLEWAYSBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_CABLEWAYSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_CablewaysBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Routing_Electrical_CablewaysBuilder.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class CablewaysBuilder;
        }
    }
    class Builder;
    class Expression;
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _CablewaysBuilderBuilder;
            class CablewaysBuilderImpl;
            /** Represents @link Routing::Electrical::CablewaysBuilder Routing::Electrical::CablewaysBuilder@endlink .  <br> To create a new instance of this class, use @link Routing::RouteManager::CreateCablewaysBuilder Routing::RouteManager::CreateCablewaysBuilder@endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AllowNewCables </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            FillPercentage.Value </td> <td> 
             
            0 </td> </tr> 

            </table>  
            */
            class NXOPENCPPEXPORT  CablewaysBuilder : public Builder
            {
                private: CablewaysBuilderImpl * m_cablewaysbuilder_impl;
                private: friend class  _CablewaysBuilderBuilder;
                protected: CablewaysBuilder();
                public: ~CablewaysBuilder();
                /**Returns  the route object collector  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXOpen::Routing::RouteObjectCollector * RouteObjectCollector
                (
                );
                /**Returns  the allow new cables toggle  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: bool AllowNewCables
                (
                );
                /**Sets  the allow new cables toggle  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: void SetAllowNewCables
                (
                    bool allowNewCables /** allownewcables */ 
                );
                /**Returns  the fill percentage expression  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXOpen::Expression * FillPercentage
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
