#ifndef NXOpen_XFORM_HXX_INCLUDED
#define NXOpen_XFORM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Xform.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SmartObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Xform;
    class SmartObject;
    class _XformBuilder;
    class XformImpl;
    /** Represents a smart xform  <br> To create a new instance of this class, use @link XformCollection::CreateXform XformCollection::CreateXform@endlink  <br> */
    class NXOPENCPPEXPORT  Xform : public SmartObject
    {
        private: XformImpl * m_xform_impl;
        private: friend class  _XformBuilder;
        protected: Xform();
        public: ~Xform();
        /**Returns  the coordinates of the origin  <br> License requirements : None */
        public: NXOpen::Point3d Origin
        (
        );
        /**Returns  the orientation  <br> License requirements : None */
        public: NXOpen::Matrix3x3 Orientation
        (
        );
        /** Sets the coordinates of the origin  <br> License requirements : None */
        public: void SetOrigin
        (
            const NXOpen::Point3d & origin /** origin */ 
        );
        /** Sets the orientation  <br> License requirements : None */
        public: void SetOrientation
        (
            const NXOpen::Matrix3x3 & orientation /** orientation */ 
        );
        /**Returns  the scale  <br> License requirements : None */
        public: double Scale
        (
        );
        /** Sets the scale  <br> License requirements : None */
        public: void SetScale
        (
            double scale /** scale */ 
        );
    };
}
#undef EXPORTLIBRARY
#endif
