#ifndef NXOpen_ANNOTATIONS_LINECOMPONENT_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_LINECOMPONENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_LineComponent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class LineComponent;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class LineComponentImpl;
        /** Represents a single line in an annotation and can be queried 
                for information about that line.  This information includes the
                line type, the start point in absolute coordinates, and
                the end point in absolute coordinates.*/
        class NXOPENCPPEXPORT  LineComponent : public TransientObject
        {
            /** the line type*/
            public: enum LineType
            {
                LineTypeExtension/** extension line */,
                LineTypeLeader/** leader line*/,
                LineTypeNarrowLeader/** narrow leader line*/,
                LineTypeStub/** stub line*/,
                LineTypeDualBracket/** dual bracket*/,
                LineTypeAnnotation/** annotation line*/,
                LineTypeInspection/** inspection line*/
            };

            private: LineComponentImpl * m_linecomponent_impl;
            public: explicit LineComponent(void *ptr);
            /** Free resources associated with the line component. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector.   <br> License requirements : None */
            public: virtual ~LineComponent();
            /**Returns  the line type.  <br> License requirements : None */
            public: NXOpen::Annotations::LineComponent::LineType Type
            (
            );
            /**Returns  the line start point in absolute coordinates.
                    If the annotation is on a drawing, the start point is returned 
                    in drawing space. If the annotation is on the model,
                    the start point is returned in model space.  <br> License requirements : None */
            public: NXOpen::Point3d StartPoint
            (
            );
            /**Returns  the line end point in absolute coordinates.
                    If the annotation is on a drawing, the end point is returned 
                    in drawing space. If the annotation is on the model,
                    the end point is returned in model space.  <br> License requirements : None */
            public: NXOpen::Point3d EndPoint
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}
#undef EXPORTLIBRARY
#endif
