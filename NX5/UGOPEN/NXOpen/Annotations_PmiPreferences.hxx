#ifndef NXOpen_ANNOTATIONS_PMIPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_PMIPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_PmiPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class PmiPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        /** Represents line and arrow preferences */
        class NXOPENCPPEXPORT PmiPreferences : public TransientObject
        {
            public: explicit PmiPreferences(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~PmiPreferences();
            /**Returns  the default annotation plane for PMI symbols  <br> License requirements : None */
            public: NXOpen::Annotations::PmiDefaultPlane DefaultPlane
            (
            );
            /**Sets  the default annotation plane for PMI symbols  <br> License requirements : None */
            public: void SetDefaultPlane
            (
                NXOpen::Annotations::PmiDefaultPlane default_plane /** default plane */ 
            );
            /**Returns  the toggle for display through shaded models  <br> License requirements : None */
            public: bool ShadedDisplay
            (
            );
            /**  <br> License requirements : None */
            public: void SetShadedDisplay
            (
                bool shaded_display /** shaded display */ 
            );
            /**Returns  the initial letter for datum labels  <br> License requirements : None */
            public: NXString DatumLabel
            (
            );
            /**Sets  the initial letter for datum labels  <br> License requirements : None */
            public: void SetDatumLabel
            (
                const NXString & datum_label /** datum label */ 
            );
            /**Returns  the flag indicating whether the PMI would be created view independent  <br> License requirements : None */
            public: bool CreateViewIndependent
            (
            );
            /**Sets  the flag indicating whether the PMI would be created view independent  <br> License requirements : None */
            public: void SetCreateViewIndependent
            (
                bool create_view_independent /** create view independent */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
