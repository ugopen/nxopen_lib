#ifndef NXOpen_NXCOLOR_HXX_INCLUDED
#define NXOpen_NXCOLOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NXColor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class NXColor;
    /** Represents a standard NX color.
        The RGB values and name for a particular NXColor object depend on
        the part.  Hence, if you look up an NXColor object in one part and use it in another
        part, the object may have different RGB values in the other part. 
     */
    class NXOPENCPPEXPORT NXColor
    {
         /** RGB values */
        public:
        struct Rgb
        {
            public: /** red value */double R;
            public: /** green value */double G;
            public: /** blue value */double B;
            public: Rgb() :
                R(),
                G(),
                B()
            {
            }
            /** Constructor for the Rgb struct. */ 
            public: Rgb(double INIT_r /** red value */, double INIT_g /** green value */, double INIT_b /** blue value */) :
                R(INIT_r),
                G(INIT_g),
                B(INIT_b)
            {
            }
        };

        // This class exists only to aid NX internally.
        // This class should be considered "private" to the NX internal implementation.
        // This class is subject to change at any time without notice
        public: struct NXOPENCPPEXPORT  Factory { static NXColor* _Get(int handle); };
        friend struct Factory;
        private: explicit NXColor(int handle) : m_handle(handle) {}
        /** Returns an integer identifier for this object. This identifier can be used in methods that require an integer representation of this object, such as User Function methods. */
        public: int Handle() const {return m_handle;}
        private: int m_handle;
        /** Gets the RGB values in the display part  @return   <br> License requirements : None */
        public: NXOpen::NXColor::Rgb GetRgb
        (
        );
        /**Returns  the label in the display part  <br> License requirements : None */
        public: NXString Label
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
