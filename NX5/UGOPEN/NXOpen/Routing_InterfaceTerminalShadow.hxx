#ifndef NXOpen_ROUTING_INTERFACETERMINALSHADOW_HXX_INCLUDED
#define NXOpen_ROUTING_INTERFACETERMINALSHADOW_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_InterfaceTerminalShadow.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_InterfaceTerminalBase.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class InterfaceTerminalShadow;
    }
    namespace Routing
    {
        class InterfaceTerminalBase;
    }
    namespace Routing
    {
        class _InterfaceTerminalShadowBuilder;
        /**  <br> 
                @link Routing::InterfaceTerminalShadow Routing::InterfaceTerminalShadow@endlink  contains the defining data for a physical @link Routing::Port Routing::Port@endlink .
                 <br> 
                 <br> 
                @link Routing::InterfaceTerminalShadow Routing::InterfaceTerminalShadow@endlink  is an assembly shadow of @link Routing::InterfaceTerminalBase Routing::InterfaceTerminalBase@endlink .  
                Component assignment associates the physical NX @link Routing::Port Routing::Port@endlink  to the logical port defined by this
                @link Routing::InterfaceTerminalShadow Routing::InterfaceTerminalShadow@endlink .
                 <br>        
                 <br> 
                @link Routing::InterfaceTerminalShadow Routing::InterfaceTerminalShadow@endlink  objects reside in the work part (in assembly context) and
                carries the same GUID as the source @link Routing::Port Routing::Port@endlink .  It syncs with the source anytime necessary or possible.
                 <br> 
                 <br> 
                Shadow objects are like extracted objects and stand in for the source objects, when source parts are
                unavailable or unloaded.
                 <br> 
                 <br> 
                See NX Routing help for the Connectivity data model documentation.
                 <br> 
             <br> Creator not available in KF. <br> */
        class NXOPENCPPEXPORT InterfaceTerminalShadow : public Routing::InterfaceTerminalBase
        {
            private: friend class  _InterfaceTerminalShadowBuilder;
            protected: InterfaceTerminalShadow();
        };
    }
}
#undef EXPORTLIBRARY
#endif
