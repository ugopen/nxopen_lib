#ifndef NXOpen_FEATURES_RAPIDSURFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_RAPIDSURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RapidSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_GeometricConstraintDataSetManager.hxx>
#include <NXOpen/Features_RapidSurfaceBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class RapidSurfaceBuilder;
    }
    class Direction;
    namespace Facet
    {
        class SelectFacetedBody;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class GeometricConstraintDataSetManager;
    }
    class SelectCurveList;
    class Spline;
    namespace Features
    {
        class _RapidSurfaceBuilderBuilder;
        /**
            Represents a @link Features::RapidSurface Features::RapidSurface@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateRapidSurfaceBuilder Features::FeatureCollection::CreateRapidSurfaceBuilder@endlink  <br> */
        class NXOPENCPPEXPORT RapidSurfaceBuilder : public Features::FeatureBuilder
        {
            private: friend class  _RapidSurfaceBuilderBuilder;
            protected: RapidSurfaceBuilder();
            /**Returns  the facet body  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Facet::SelectFacetedBody * FacetBody
            (
            );
            /**Returns  the constraint set manager  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Features::GeometricConstraintDataSetManager * ConstraintSetManager
            (
            );
            /**Returns  the smoothness  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: int Smoothness
            (
            );
            /**Sets  the smoothness  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSmoothness
            (
                int smoothness /** smoothness */ 
            );
            /**Returns  the import curves  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::SelectCurveList * ImportCurves
            (
            );
            /**Returns  the projection direction  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Direction * ProjectDirection
            (
            );
            /**Sets  the projection direction  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetProjectDirection
            (
                NXOpen::Direction * projectDirection /** projectdirection */ 
            );
            /**Returns  the delete curves  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::SelectCurveList * DeleteCurves
            (
            );
            /**Returns  the degree  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: int Degree
            (
            );
            /**Sets  the degree  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetDegree
            (
                int degree /** degree */ 
            );
            /**Returns  the segments  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: int Segments
            (
            );
            /**Sets  the segments  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSegments
            (
                int segments /** segments */ 
            );
            /** Accept new facet body  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void AcceptNewFacetBody
            (
            );
            /** Accept import curve  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void ImportCurve
            (
            );
            /** Accept draw curve  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void DrawCurve
            (
            );
            /** Accept delete curve  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void DeleteCurve
            (
            );
            /** Ask edge count in the current curve network  @return   <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: int AskEdgeCount
            (
            );
            /** Ask an edge in the current curve network  @return   <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Spline * AskEdge
            (
                int edgeIndex /** edgeindex */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
