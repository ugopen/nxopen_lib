#ifndef NXOpen_CAE_REASSIGNELEMENTSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_REASSIGNELEMENTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ReassignElementsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ReassignElementsBuilder.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ReassignElementsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class _ReassignElementsBuilderBuilder;
        /**
            Represents a @link CAE::ReassignElementsBuilder CAE::ReassignElementsBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshCollectorManager::CreateReassignElementsBuilder CAE::MeshCollectorManager::CreateReassignElementsBuilder@endlink  <br> */
        class NXOPENCPPEXPORT ReassignElementsBuilder : public Builder
        {
            /** Indicates the different element dimensions */
            public: enum ElementDimensionOption
            {
                ElementDimensionOptionPoint/** 0-d */,
                ElementDimensionOptionBeam/** 1-d */,
                ElementDimensionOptionShell/** 2-d */,
                ElementDimensionOptionSolid/** 3-d */
            };

            /** 
                    Indicates the element types for each dimension.
                    Since this varies dynamically based on the language and dimension
                    Will not touch this for now. 
                    */
            public: enum ElementTypeOption
            {
                ElementTypeOptionFirstValue/** first value */ 
            };

            private: friend class  _ReassignElementsBuilderBuilder;
            protected: ReassignElementsBuilder();
            /**Returns  the element dim opt  <br> License requirements : None */
            public: NXOpen::CAE::ReassignElementsBuilder::ElementDimensionOption ElementDimOpt
            (
            );
            /**Sets  the element dim opt  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementDimOpt
            (
                NXOpen::CAE::ReassignElementsBuilder::ElementDimensionOption elementDimOpt /** elementdimopt */ 
            );
            /**Returns  the element type opt  <br> License requirements : None */
            public: NXOpen::CAE::ReassignElementsBuilder::ElementTypeOption ElementTypeOpt
            (
            );
            /**Sets  the element type opt  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementTypeOpt
            (
                NXOpen::CAE::ReassignElementsBuilder::ElementTypeOption elementTypeOpt /** elementtypeopt */ 
            );
            /**Returns  the elem sel  <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * ElemSel
            (
            );
            /**Returns  the ECC name  <br> License requirements : None */
            public: NXString EccName
            (
            );
            /**Sets  the ECC name  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEccName
            (
                const NXString & eccName /** eccname */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
