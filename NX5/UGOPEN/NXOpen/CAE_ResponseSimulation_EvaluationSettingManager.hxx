#ifndef NXOpen_CAE_RESPONSESIMULATION_EVALUATIONSETTINGMANAGER_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_EVALUATIONSETTINGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_EvaluationSettingManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class EvaluationSettingManager;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class Manager;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ElementalFunctionEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ElementalFunctionEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FrfEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FrfEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class LcrResultsEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class LcrResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class NodalFunctionEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class NodalFunctionEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class PeakValueEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class PeakValueEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ResponseResultsEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class ResponseResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RmsResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class StrengthResultsEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class StrengthResultsEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class TransmissibilityEvaluationSetting;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class TransmissibilityEvaluationSettingBuilder;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            /** Represents the manager of all evaluation setting objects. Any evaluation setting object must 
                be created through this class  <br> To obtain an instance of this class, refer to @link CAE::ResponseSimulation::Manager CAE::ResponseSimulation::Manager@endlink  <br> */
            class NXOPENCPPEXPORT EvaluationSettingManager
            {
                private: NXOpen::CAE::ResponseSimulation::Manager* m_owner;
                public: explicit EvaluationSettingManager(NXOpen::CAE::ResponseSimulation::Manager *owner): m_owner(owner)
                {
                }
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                /** Creates FRF evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::FrfEvaluationSettingBuilder * CreateFrfEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::FrfEvaluationSetting * setting /** setting */ 
                );
                /** Creates transmissibility evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::TransmissibilityEvaluationSettingBuilder * CreateTransmissibilityEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::TransmissibilityEvaluationSetting * setting /** setting */ 
                );
                /** Creates nodal function evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::NodalFunctionEvaluationSettingBuilder * CreateNodalFunctionEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::NodalFunctionEvaluationSetting * setting /** setting */ 
                );
                /** Creates elemental function evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::ElementalFunctionEvaluationSettingBuilder * CreateElementalFunctionEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::ElementalFunctionEvaluationSetting * setting /** setting */ 
                );
                /** Creates response results evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::ResponseResultsEvaluationSettingBuilder * CreateResponseResultsEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::ResponseResultsEvaluationSetting * setting /** setting */ 
                );
                /** Creates strength results evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::StrengthResultsEvaluationSettingBuilder * CreateStrengthResultsEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::StrengthResultsEvaluationSetting * setting /** setting */ 
                );
                /** Creates peak value evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::PeakValueEvaluationSettingBuilder * CreatePeakValueEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::PeakValueEvaluationSetting * setting /** setting */ 
                );
                /** Creates RMS results evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RmsResultsEvaluationSettingBuilder * CreateRmsResultsEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::NodalFunctionEvaluationSetting * setting /** setting */ 
                );
                /** Creates LCR results evaluation setting object  @return    <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::LcrResultsEvaluationSettingBuilder * CreateLcrResultsEvaluationSettingBuilder
                (
                    NXOpen::CAE::ResponseSimulation::LcrResultsEvaluationSetting * setting /** setting */ 
                );
                public: virtual void initialize();
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
