#ifndef NXOpen_ANNOTATIONS_DATUMTARGETDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DATUMTARGETDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DatumTargetData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_SimpleDraftingAidPreferences.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class DatumTargetData;
    }
    namespace Annotations
    {
        class SimpleDraftingAidPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        /** Represents datum target data */
        class NXOPENCPPEXPORT DatumTargetData : public TransientObject
        {
            public: explicit DatumTargetData(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~DatumTargetData();
            /**Returns  the datum label  <br> License requirements : None */
            public: NXString DatumLabel
            (
            );
            /**Sets  the datum label  <br> License requirements : None */
            public: void SetDatumLabel
            (
                const NXString & datum_label /** New datum label */
            );
            /**Returns  the target index  <br> License requirements : None */
            public: int Index
            (
            );
            /**Sets  the target index  <br> License requirements : None */
            public: void SetIndex
            (
                int index /** New target index */
            );
            /** Returns the SimpleDraftingAidPreferences object  @return  Datum target preferences  <br> License requirements : None */
            public: NXOpen::Annotations::SimpleDraftingAidPreferences * GetSimpleDraftingAidPreferences
            (
            );
            /** Sets the SimpleDraftingAidPreferences object  <br> License requirements : None */
            public: void SetSimpleDraftingAidPreferences
            (
                NXOpen::Annotations::SimpleDraftingAidPreferences * preferences /** New datum target preferences */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
