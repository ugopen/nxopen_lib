#ifndef NXOpen_CAE_BEAMSECTIONOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_BEAMSECTIONOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BeamSectionOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class BeamSectionOptions;
    }
    namespace CAE
    {
        class BeamSection;
    }
    class Direction;
    namespace CAE
    {
        /**  @brief  Represents the synchronize options to be used when a FEM part is created
                          These options will be used to synchronize the specified entities from the
                          master CAD part file to the FEM part file  

           <br> To create a new instance of this class, use @link CAE::FemPart::NewBeamSectionOptions CAE::FemPart::NewBeamSectionOptions@endlink  <br> */
        class NXOPENCPPEXPORT BeamSectionOptions : public TransientObject
        {
            public: explicit BeamSectionOptions(void *ptr);
            /**Sets   <br> License requirements : None */
            public: void SetBeamSectionInherited
            (
                bool bInherited /** binherited */ 
            );
            /**Returns   <br> License requirements : None */
            public: bool BeamSectionInherited
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamSectionTapered
            (
                bool bTapered /** btapered */ 
            );
            /**Returns   <br> License requirements : None */
            public: bool BeamSectionTapered
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamForeSection
            (
                NXOpen::CAE::BeamSection * beam_section /** beam section */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::CAE::BeamSection * BeamForeSection
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamAftSection
            (
                NXOpen::CAE::BeamSection * beam_section /** beam section */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::CAE::BeamSection * BeamAftSection
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamSectionSpecifyOffsets
            (
                bool bOffsets /** boffsets */ 
            );
            /**Returns   <br> License requirements : None */
            public: bool BeamSectionSpecifyOffsets
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamForeSectionOffsets
            (
                const NXOpen::Vector3d & foreOffests /** foreoffests */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Vector3d BeamForeSectionOffsets
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamAftSectionOffsets
            (
                const NXOpen::Vector3d & aftOffests /** aftoffests */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Vector3d BeamAftSectionOffsets
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetBeamSectionOrientation
            (
                NXOpen::Direction * orientation /** orientation */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::Direction * BeamSectionOrientation
            (
            );
            /** Destroys the object  <br> License requirements : None */
            public: virtual ~BeamSectionOptions();
        };
    }
}
#undef EXPORTLIBRARY
#endif
