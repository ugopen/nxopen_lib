#ifndef NXOpen_FEATURES_SHEETMETAL_LOFTEDFLANGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_LOFTEDFLANGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_LoftedFlangeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SheetMetal_BendOptions.hxx>
#include <NXOpen/SheetmetalFeatureProperty.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class LoftedFlangeBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class BendOptions;
        }
    }
    namespace Features
    {
        class SketchFeature;
    }
    class Section;
    namespace Features
    {
        namespace SheetMetal
        {
            class _LoftedFlangeBuilderBuilder;
            /** Represents a Lofted Flange feature builder.  <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateLoftedFlangeFeatureBuilder Features::SheetMetal::SheetmetalManager::CreateLoftedFlangeFeatureBuilder@endlink  <br> */
            class NXOPENCPPEXPORT LoftedFlangeBuilder : public Features::FeatureBuilder
            {
                /** This enum represents the side of the section that the lofted flange creates thickness. The "left" option
                        represents the side to the left of a person who is walking along the section in the direction of its curves
                        when the section normal is pointing up. The "right" option represents the person's right hand side.
                        This interpretation is the same regardless of whether the section is open or closed. The "right" side at any point
                        along the section can also be represented by the vector resulting from the cross product of the curve tangent
                        (of the section curve at that point) and the section normal. The "left" side is the opposite.
                        */
                public: enum SectionSideOptions
                {
                    SectionSideOptionsLeft/** Side pointed to by the inverse of the tangent cross normal vector */,
                    SectionSideOptionsRight/** Side pointed to by the tangent cross normal vector */
                };

                private: friend class  _LoftedFlangeBuilderBuilder;
                protected: LoftedFlangeBuilder();
                /**Returns  the type of lofted flange feature - base lofted flange/secondary lofted flange. Specify false for base lofted flanges and true for secondary lofted flanges.
                          <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: bool IsSecondary
                (
                );
                /**Sets  the type of lofted flange feature - base lofted flange/secondary lofted flange. Specify false for base lofted flanges and true for secondary lofted flanges.
                          <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetSecondary
                (
                    bool is_secondary /** is secondary */ 
                );
                /**Returns  the start section of the lofted flange. The section profile should be open looped.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Section * StartSection
                (
                );
                /**Sets  the start section of the lofted flange. The section profile should be open looped.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSection
                (
                    NXOpen::Section * start_section /** start section */ 
                );
                /**Returns  the start/end point of the start section.It can be start/end point of the section profile.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Point3d StartSectionPoint
                (
                );
                /**Sets  the start/end point of the start section.It can be start/end point of the section profile.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSectionPoint
                (
                    const NXOpen::Point3d & point /** point*/
                );
                /**Returns  the end section of the lofted flange.The section profile should be open looped.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Section * EndSection
                (
                );
                /**Sets  the end section of the lofted flange.The section profile should be open looped.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSection
                (
                    NXOpen::Section * end_section /** end section */ 
                );
                /**Returns  the start/end point of the end section.It can be start/end point of the section profile.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Point3d EndSectionPoint
                (
                );
                /**Sets  the start/end point of the end section.It can be start/end point of the section profile.
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSectionPoint
                (
                    const NXOpen::Point3d & point /** point*/
                );
                /** The thickness  of base lofted flange.Applicable only for Base lofted flange. Ignored for a Secondary Lofted Flange. @return   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Expression * GetThickness
                (
                );
                /** The thickness  of base lofted flange.Applicable only for Base lofted flange. Ignored for a Secondary Lofted Flange. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetThickness
                (
                    const NXString & thickness /**   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /**Returns  the thickness side of base lofted flange.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::LoftedFlangeBuilder::SectionSideOptions ThicknessSide
                (
                );
                /**Sets  the thickness side of base lofted flange.
                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetThicknessSide
                (
                    NXOpen::Features::SheetMetal::LoftedFlangeBuilder::SectionSideOptions thick_side /** thick side */ 
                );
                /**Returns  the bend options object.

                        Get the bend options object which is created while creating builder. Then set values to parameters of
                        bend options object(like bend radius, bend relief type etc.) using set methods of bend options object.

                         <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::BendOptions * BendOptions
                (
                );
                /**Returns  the start section sketch as slave.

                       Set the sketch tag which is used to create start section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or start sketch is not required to be slave, set slave sketch as NULL.
                       <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SketchFeature * StartSketch
                (
                );
                /**Sets  the start section sketch as slave.

                       Set the sketch tag which is used to create start section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or start sketch is not required to be slave, set slave sketch as NULL.
                       <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetStartSketch
                (
                    NXOpen::Features::SketchFeature * slave_start_sketch /** slave start sketch */ 
                );
                /**Returns  the end section sketch as slave.

                       Set the sketch tag which is used to create end section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or if the end sketch is not required to be slave, set the value as NULL .
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SketchFeature * EndSketch
                (
                );
                /**Sets  the end section sketch as slave.

                       Set the sketch tag which is used to create end section.
                       This is only used when the section is created from sketch. If the section is created
                       from edges or if the end sketch is not required to be slave, set the value as NULL .
                        <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetEndSketch
                (
                    NXOpen::Features::SketchFeature * slave_end_sketch /** slave end sketch */ 
                );
                /** Verify user data validity.

                        If the data is valid, returned value should be 0.


                         @return  Data Validity Flag. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: int ValidateBuilderData
                (
                );
                /** the application context of Lofted Flange  @return   <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: NXOpen::Features::SheetMetal::ApplicationContext GetApplicationContext
                (
                );
                /**  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetApplicationContext
                (
                    NXOpen::Features::SheetMetal::ApplicationContext app_context /** app context */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
