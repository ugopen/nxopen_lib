#ifndef NXOpen_FEATURES_TRANSFRAMEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRANSFRAMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TransFrameBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_TransFrameBuilder.hxx>
#include <NXOpen/Features_TransFrameListItemBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class TransFrameBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class TransFrameListItemBuilder;
    }
    namespace Features
    {
        class TransFrameListItemBuilderList;
    }
    namespace Features
    {
        class _TransFrameBuilderBuilder;
        /**
            Represents a @link Features::TransFrame Features::TransFrame@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateTransFrameBuilder Features::FeatureCollection::CreateTransFrameBuilder@endlink  <br> */
        class NXOPENCPPEXPORT TransFrameBuilder : public Features::FeatureBuilder
        {
            private: friend class  _TransFrameBuilderBuilder;
            protected: TransFrameBuilder();
            /**Returns  the positive list  <br> License requirements : None */
            public: NXOpen::Features::TransFrameListItemBuilderList * TransFramePosList
            (
            );
            /**Returns  the negative list  <br> License requirements : None */
            public: NXOpen::Features::TransFrameListItemBuilderList * TransFrameNegList
            (
            );
            /**Returns  the attrib name  <br> License requirements : None */
            public: NXString AttribName
            (
            );
            /**Sets  the attrib name  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAttribName
            (
                const NXString & attribName /** attribname */ 
            );
            /**Returns  the attrib ref  <br> License requirements : None */
            public: NXString AttribRef
            (
            );
            /**Sets  the attrib ref  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetAttribRef
            (
                const NXString & attribRef /** attribref */ 
            );
            /**Returns  the negateFrame value  <br> License requirements : None */
            public: int NegateFrame
            (
            );
            /**Sets  the negateFrame value  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetNegateFrame
            (
                int negateFrame /** negateframe */ 
            );
            /** TODO: fill in a description for this  @return   <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: NXOpen::Features::TransFrameListItemBuilder * CreateNewTransFrameListItem
            (
                int endFrame /** endframe */ ,
                double spacing /** spacing */ ,
                bool isSeed /** isseed */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
