#ifndef NXOpen_DISPLAY_REFLECTION_HXX_INCLUDED
#define NXOpen_DISPLAY_REFLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_Reflection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Display_Image.hxx>
#include <NXOpen/Display_Reflection.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Display
    {
        class Reflection;
    }
    class Builder;
    namespace Display
    {
        class Image;
    }
    namespace Display
    {
        class _ReflectionBuilder;
        /**
            Represents a @link Display::Reflection Display::Reflection@endlink 
            Reflection defines the source of reflection in shiny objects for Studio
            rendering style or High Quality Images.
             <br> To create a new instance of this class, use @link ViewCollection::CreateReflection ViewCollection::CreateReflection@endlink  <br> */
        class NXOPENCPPEXPORT Reflection : public Builder
        {
            /** where the reflections for rendering will be obtained */
            public: enum Type
            {
                TypeBackground/** use the background for reflections */,
                TypeStage/** use the stage for reflections */,
                TypeIbl/** use the image-based lighting image for reflections */,
                TypeImage/** use the given image file for reflection */
            };

            private: friend class  _ReflectionBuilder;
            protected: Reflection();
            /**Returns  the reflection type  <br> License requirements : None */
            public: NXOpen::Display::Reflection::Type ReflectionMap
            (
            );
            /**Sets  the reflection type  <br> License requirements : None */
            public: void SetReflectionMap
            (
                NXOpen::Display::Reflection::Type reflectionMap /** reflectionmap */ 
            );
            /**Returns  the reflections's image builder  <br> License requirements : None */
            public: NXOpen::Display::Image * Image
            (
            );
            /**Sets  the reflections's image builder  <br> License requirements : None */
            public: void SetImage
            (
                NXOpen::Display::Image * image_builder /** image builder */ 
            );
            /**Returns  the reflection's image filename  <br> License requirements : None */
            public: NXString ImageFilename
            (
            );
            /**Sets  the reflection's image filename  <br> License requirements : None */
            public: void SetImageFilename
            (
                const NXString & image_file_name /** image file name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
