#ifndef NXOpen_POSITIONING_POSITIONER_HXX_INCLUDED
#define NXOpen_POSITIONING_POSITIONER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Positioning_Positioner.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Positioning_Constraint.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Positioning
    {
        class Positioner;
    }
    class NXObject;
    namespace Positioning
    {
        class Constraint;
    }
    namespace Positioning
    {
        class ConstraintCollection;
    }
    namespace Positioning
    {
        class Network;
    }
    namespace Positioning
    {
        class _PositionerBuilder;
        /**
          An instance of this class can be used to create @link Constraint Constraint@endlink s and
          associated objects.
         <br> To obtain an instance of this class, use @link Assemblies::ComponentAssembly::Positioner Assemblies::ComponentAssembly::Positioner@endlink  <br> */
        class NXOPENCPPEXPORT Positioner : public NXObject
        {
            private: friend class  _PositionerBuilder;
            protected: Positioner();
            /** 
                    Creates a new @link Constraint Constraint@endlink  in the positioner.
                 @return  The new @link Constraint Constraint@endlink   <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Positioning::Constraint * CreateConstraint
            (
            );
            /** 
                    Establishes a @link Network Network@endlink  in the positioner.
                 @return  The new @link Network Network@endlink   <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Positioning::Network * EstablishNetwork
            (
            );
            /** 
                    Removes the @link Network Network@endlink  of the positioner.
                    The network is added to the delete list by this call.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ClearNetwork
            (
            );
            /** 
                    Deletes all the non-persistent @link Constraint Constraint@endlink s of the positioner.
                 <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void DeleteNonPersistentConstraints
            (
            );


            private: NXOpen::Positioning::ConstraintCollection *constraints;
            /** The collection of @link Positioning::Constraint Positioning::Constraint@endlink s defined in the positioner */
            public: NXOpen::Positioning::ConstraintCollection *Constraints()
            {
                return constraints;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
