#ifndef NXOpen_CAE_ELEMENTDELETEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTDELETEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementDeleteBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ElementDeleteBuilder.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ElementDeleteBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class _ElementDeleteBuilderBuilder;
        /**
            Represents a @link CAE::ElementDeleteBuilder CAE::ElementDeleteBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateDeleteElementBuilder CAE::NodeElementManager::CreateDeleteElementBuilder@endlink  <br> */
        class NXOPENCPPEXPORT ElementDeleteBuilder : public Builder
        {
            private: friend class  _ElementDeleteBuilderBuilder;
            protected: ElementDeleteBuilder();
            /**Returns  the selected elements to be deleted <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * Element
            (
            );
            /**Returns  the delete dangling node flag, whether the dangling nodes to be deleted  <br> License requirements : None */
            public: bool DeleteDangling
            (
            );
            /**Sets  the delete dangling node flag, whether the dangling nodes to be deleted  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDeleteDangling
            (
                bool deleteDangling /** deletedangling */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
