#ifndef NXOpen_DIE_FLANGESTEELRIBCHILDBUILDER_HXX_INCLUDED
#define NXOpen_DIE_FLANGESTEELRIBCHILDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_FlangeSteelRibChildBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class FlangeSteelRibChildBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ISurface;
    namespace Die
    {
        class _FlangeSteelRibChildBuilderBuilder;
        /** Represents a Die Flange Steel Rib Child sub feature.  <br> This sub feature is created via the main feature builder. <br> */
        class NXOPENCPPEXPORT FlangeSteelRibChildBuilder : public Features::FeatureBuilder
        {
            private: friend class  _FlangeSteelRibChildBuilderBuilder;
            protected: FlangeSteelRibChildBuilder();
            /**Sets  the plane of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetPlane
            (
                NXOpen::ISurface * plane /** plane */ 
            );
            /**Returns  the plane of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::ISurface * Plane
            (
            );
            /**Sets  the thickness of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetThickness
            (
                double thickness /** thickness */ 
            );
            /**Returns  the thickness of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double Thickness
            (
            );
            /**Sets  the offset of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOffset
            (
                double offset /** offset */ 
            );
            /**Returns  the offset of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double Offset
            (
            );
            /**Sets  the chamfer distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetChamferDistance
            (
                double chamfer_distance /** chamfer distance */ 
            );
            /**Returns  the chamfer distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double ChamferDistance
            (
            );
            /**Sets  the sheet metal distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetSheetMetalDistance
            (
                double sheet_metal_distance /** sheet metal distance */ 
            );
            /**Returns  the sheet metal distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double SheetMetalDistance
            (
            );
            /**Sets  the back distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBackDistance
            (
                double back_distance /** back distance */ 
            );
            /**Returns  the back distance of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double BackDistance
            (
            );
            /**Sets  the use angle toggle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetUseAngle
            (
                int use_angle /** use angle */ 
            );
            /**Returns  the use angle toggle of the Flange Steel Ribs  <br> License requirements : ug_die_design ("Die Design") */
            public: int UseAngle
            (
            );
            /**Sets  the angle of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAngle
            (
                double angle /** angle */ 
            );
            /**Returns  the angle of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: double Angle
            (
            );
            /**Sets  the design status of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDesignStatus
            (
                bool design_status /** design status */ 
            );
            /**Returns  the design status of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DesignStatus
            (
            );
            /**Returns  the build status of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Die::DieBuildStatusOption BuildStatus
            (
            );
            /**Sets  the display status of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDisplayStatus
            (
                bool display_status /** display status */ 
            );
            /**Returns  the display status of the Flange Steel Rib  <br> License requirements : ug_die_design ("Die Design") */
            public: bool DisplayStatus
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
