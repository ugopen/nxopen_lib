#ifndef NXOpen_CAM_FEEDSBUILDER_HXX_INCLUDED
#define NXOpen_CAM_FEEDSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FeedsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class FeedsBuilder;
    }
    class Builder;
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableFeedBuilder;
    }
    namespace CAM
    {
        class InheritableIntBuilder;
    }
    namespace CAM
    {
        class InheritableTextBuilder;
    }
    namespace CAM
    {
        class _FeedsBuilderBuilder;
        /** Represents a feeds Builder  <br> This builder can not instantiated separately. <br> */
        class NXOPENCPPEXPORT FeedsBuilder : public Builder
        {
            private: friend class  _FeedsBuilderBuilder;
            protected: FeedsBuilder();
            /**Returns  the surface_speed builder (inheritable Double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * SurfaceSpeedBuilder
            (
            );
            /**Returns  the feed_per_tooth builder (inheritable Double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * FeedPerToothBuilder
            (
            );
            /**Returns  the spindle_rpm builder (inheritable Double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * SpindleRpmBuilder
            (
            );
            /**Returns  the spindle_mode builder (inheritable Int)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * SpindleModeBuilder
            (
            );
            /**Returns  the tool_direction builder (inheritable Int)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableIntBuilder * ToolDirectionBuilder
            (
            );
            /**Returns  the spindle_range builder (inheritable Text)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableTextBuilder * SpindleRangeBuilder
            (
            );
            /**Returns  the spindle_text builder (inheritable Text)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableTextBuilder * SpindleTextBuilder
            (
            );
            /**Returns  the feed_rapid builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedRapidBuilder
            (
            );
            /**Returns  the feed_approach builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedApproachBuilder
            (
            );
            /**Returns  the feed_engage builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedEngageBuilder
            (
            );
            /**Returns  the feed_first_cut builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedFirstCutBuilder
            (
            );
            /**Returns  the feed_stepover builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedStepoverBuilder
            (
            );
            /**Returns  the feed_cut builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedCutBuilder
            (
            );
            /**Returns  the feed_traversal builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedTraversalBuilder
            (
            );
            /**Returns  the feed_retract builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedRetractBuilder
            (
            );
            /**Returns  the feed_departure builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedDepartureBuilder
            (
            );
            /**Returns  the feed_return builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedReturnBuilder
            (
            );
            /**Returns  the feed_side_cut builder (inheritable Feed)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableFeedBuilder * FeedSideCutBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
