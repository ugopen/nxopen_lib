#ifndef NXOpen_LAYER_CATEGORY_HXX_INCLUDED
#define NXOpen_LAYER_CATEGORY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layer_Category.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layer.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Layer
    {
        class Category;
    }
    class NXObject;
    namespace Layer
    {
        class _CategoryBuilder;
        /** Represents a layer category.  A layer category is a set of layers.  A layer
            can belong to more than one category.  <br> To create a new instance of this class, use @link Layer::CategoryCollection::CreateCategory Layer::CategoryCollection::CreateCategory@endlink  <br> */
        class NXOPENCPPEXPORT Category : public NXObject
        {
            public: enum { DescriptionMaxLength = 80 };
            private: friend class  _CategoryBuilder;
            protected: Category();
            /**Returns  the category's description, if one exists  <br> License requirements : None */
            public: NXString Description
            (
            );
            /** <b>Deprecated</b>:<br>
            &nbsp;&nbsp;&nbsp;Use @link Description() Description@endlink instead.
            @deprecated
            */
            public: NXString GetDescription
            (
            ) { return this->Description(); }
            /**Sets  the category's description, if one exists  <br> License requirements : None */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /** Sets which layers belong to the category  <br> License requirements : None */
            public: void SetMemberLayers
            (
                const std::vector<int> & layers /** layers */ 
            );
            /** Returns all the layers that belong to the category  @return   <br> License requirements : None */
            public: std::vector<int> GetMemberLayers
            (
            );
            /** Changes the state of every layer in the category to the
                    specified state, except the work layer  <br> License requirements : None */
            public: void SetState
            (
                NXOpen::Layer::State state /** new state for the category.  Must not be
                                                @link Layer::StateWorkLayer Layer::StateWorkLayer@endlink  */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
