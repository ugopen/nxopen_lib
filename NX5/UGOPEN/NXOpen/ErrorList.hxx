#ifndef NXOpen_ERRORLIST_HXX_INCLUDED
#define NXOpen_ERRORLIST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ErrorList.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ErrorInfo.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class ErrorList;
    class ErrorInfo;
    /** Represents a list of errors */
    class NXOPENCPPEXPORT ErrorList : public TransientObject
    {
        public: explicit ErrorList(void *ptr);
        /** Frees the object from memory.  After this method is called,
            it is illegal to use the object.  In .NET, this method is automatically
            called when the object is deleted by the garbage collector.   <br> License requirements : None */
        public: virtual ~ErrorList();
        /**Returns  the number of errors in the list  <br> License requirements : None */
        public: int Length
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link Length() Length@endlink instead.
        @deprecated
        */
        public: int GetLength
        (
        ) { return this->Length(); }
        /** Gets the nth error information structure in the list  @return  the nth error information structure in the list  <br> License requirements : None */
        public: NXOpen::ErrorInfo * GetErrorInfo
        (
            int n /** must be between 0 and (length of the list - 1) */
        );
        /** Clears the list  <br> License requirements : None */
        public: void Clear
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
