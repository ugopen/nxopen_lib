#ifndef NXOpen_ANNOTATIONS_SIMPLEDRAFTINGAIDPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_SIMPLEDRAFTINGAIDPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_SimpleDraftingAidPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_LetteringPreferences.hxx>
#include <NXOpen/Annotations_LineAndArrowPreferences.hxx>
#include <NXOpen/Annotations_SymbolPreferences.hxx>
#include <NXOpen/Annotations_UserSymbolPreferences.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class SimpleDraftingAidPreferences;
    }
    namespace Annotations
    {
        class LetteringPreferences;
    }
    namespace Annotations
    {
        class LineAndArrowPreferences;
    }
    namespace Annotations
    {
        class SymbolPreferences;
    }
    namespace Annotations
    {
        class UserSymbolPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        /** Represents simple drafting aid preferences */
        class NXOPENCPPEXPORT SimpleDraftingAidPreferences : public TransientObject
        {
            public: explicit SimpleDraftingAidPreferences(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~SimpleDraftingAidPreferences();
            /** Returns the lettering preferences  @return   <br> License requirements : None */
            public: NXOpen::Annotations::LetteringPreferences * GetLetteringPreferences
            (
            );
            /** Sets the lettering preferences  <br> License requirements : None */
            public: void SetLetteringPreferences
            (
                NXOpen::Annotations::LetteringPreferences * preferences /** preferences */ 
            );
            /** Returns the line and arrow preferences  @return   <br> License requirements : None */
            public: NXOpen::Annotations::LineAndArrowPreferences * GetLineAndArrowPreferences
            (
            );
            /** Sets the line and arrow preferences  <br> License requirements : None */
            public: void SetLineAndArrowPreferences
            (
                NXOpen::Annotations::LineAndArrowPreferences * preferences /** preferences */ 
            );
            /** Returns the symbol preferences  @return   <br> License requirements : None */
            public: NXOpen::Annotations::SymbolPreferences * GetSymbolPreferences
            (
            );
            /** Sets the symbol preferences  <br> License requirements : None */
            public: void SetSymbolPreferences
            (
                NXOpen::Annotations::SymbolPreferences * preferences /** preferences */ 
            );
            /** Returns the user symbol preferences  @return   <br> License requirements : None */
            public: NXOpen::Annotations::UserSymbolPreferences * GetUserSymbolPreferences
            (
            );
            /** Sets the user symbol preferences  <br> License requirements : None */
            public: void SetUserSymbolPreferences
            (
                NXOpen::Annotations::UserSymbolPreferences * preferences /** preferences */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
