#ifndef NXOpen_FEATURES_TRIMCORNERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRIMCORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TrimCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_TrimCornerBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class TrimCornerBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectObject;
    namespace Features
    {
        class _TrimCornerBuilderBuilder;
        /**
            Represents a builder for non-associative trim corner operation.
             <br> To create a new instance of this class, use @link Features::BaseFeatureCollection::CreateTrimCornerBuilder Features::BaseFeatureCollection::CreateTrimCornerBuilder@endlink  <br> */
        class NXOPENCPPEXPORT TrimCornerBuilder : public Features::FeatureBuilder
        {
            private: friend class  _TrimCornerBuilderBuilder;
            protected: TrimCornerBuilder();
            /**Returns  the curve1  <br> License requirements : None */
            public: NXOpen::SelectObject * Curve1
            (
            );
            /**Returns  the curve2  <br> License requirements : None */
            public: NXOpen::SelectObject * Curve2
            (
            );
            /** the reference point  @return   <br> License requirements : None */
            public: NXOpen::Point3d GetReferencePoint
            (
            );
            public: void SetReferencePoint
            (
                const NXOpen::Point3d & reference_point /** reference point */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
