#ifndef NXOpen_PARTREOPENSTATUS_HXX_INCLUDED
#define NXOpen_PARTREOPENSTATUS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartReopenStatus.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class PartReopenStatus;
    /** Contains information about a part after an attempt was made to
    reopen it. Instances of this class are retrieved from
    @link PartReopenReport::ReopenStatuses PartReopenReport::ReopenStatuses@endlink . */
    class NXOPENCPPEXPORT PartReopenStatus : public TransientObject
    {
        public: explicit PartReopenStatus(void *ptr);
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  <br> License requirements : None */
        public: virtual ~PartReopenStatus();
        /**Returns  the name of the part before it was reopened.  <br> License requirements : None */
        public: NXString BeforeName
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link BeforeName() BeforeName@endlink instead.
        @deprecated
        */
        public: NXString GetBeforeName
        (
        ) { return this->BeforeName(); }
        /**Returns  the name of the part after it was reopened.  <br> License requirements : None */
        public: NXString AfterName
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link AfterName() AfterName@endlink instead.
        @deprecated
        */
        public: NXString GetAfterName
        (
        ) { return this->AfterName(); }
        /**Returns  whether or not the part was closed. If true, then the part could not
            be closed because it was modified in the session, and no flag was set
            to allow reopening of parts modified in the session.  <br> License requirements : None */
        public: bool CouldNotClose
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link CouldNotClose() CouldNotClose@endlink instead.
        @deprecated
        */
        public: bool GetCouldNotClose
        (
        ) { return this->CouldNotClose(); }
        /**Returns  whether part is modified on disk.  <br> License requirements : None */
        public: bool ModifiedOnDisk
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link ModifiedOnDisk() ModifiedOnDisk@endlink instead.
        @deprecated
        */
        public: bool GetModifiedOnDisk
        (
        ) { return this->ModifiedOnDisk(); }
        /**Returns  whether part is modified in session.  <br> License requirements : None */
        public: bool ModifiedInSession
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link ModifiedInSession() ModifiedInSession@endlink instead.
        @deprecated
        */
        public: bool GetModifiedInSession
        (
        ) { return this->ModifiedInSession(); }
        /**Returns  the load status value from part load. This will be 0 if the load was
            successful.  <br> License requirements : None */
        public: int LoadStatus
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link LoadStatus() LoadStatus@endlink instead.
        @deprecated
        */
        public: int GetLoadStatus
        (
        ) { return this->LoadStatus(); }
        /**Returns  the description of the load status value from part load. This will
            be a blank string if the load was successful.  <br> License requirements : None */
        public: NXString LoadStatusDescription
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link LoadStatusDescription() LoadStatusDescription@endlink instead.
        @deprecated
        */
        public: NXString GetLoadStatusDescription
        (
        ) { return this->LoadStatusDescription(); }
    };
}
#undef EXPORTLIBRARY
#endif
