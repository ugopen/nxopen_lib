#ifndef NXOpen_CAE_AFUMATHOPERATION_HXX_INCLUDED
#define NXOpen_CAE_AFUMATHOPERATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AfuMathOperation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class AfuMathOperation;
    }
    namespace CAE
    {
        class AfuManager;
    }
    namespace CAE
    {
        /** Does math operations on the AFU Data Records  <br> To obtain an instance of this class, refer to @link CAE::AfuManager CAE::AfuManager@endlink  <br> */
        class NXOPENCPPEXPORT AfuMathOperation
        {
            /** Defines the type of Multi Math Operations */
            public: enum MultiType
            {
                MultiTypeAdd/** Adds AFU records */,
                MultiTypeSubtract/** Subtracts AFU records */,
                MultiTypeMultiple/** Multiples AFU records */,
                MultiTypeConjugate/** Conjugates AFU records */,
                MultiTypeDivide/** Divides AFU records */
            };

            /** Defines the type of extreme */
            public: enum Extreme
            {
                ExtremeMinimum/** Gets minimum of AFU records */,
                ExtremeMaximum/** Gets maximum of AFU records */
            };

            /** Defines the type of Overall Math Operations */
            public: enum OverallType
            {
                OverallTypeMinimum/** Gets minimum magnitude of AFU records */,
                OverallTypeMaximum/** Gets maximum magnitude of AFU records */,
                OverallTypeMean/** Gets mean magnitude of AFU records */,
                OverallTypeSum/** Gets sum magnitude of AFU records */,
                OverallTypeSumComplex/** Gets complex sum of AFU records */
            };

            /** Defines the output type of new AFU Data Record */
            public: enum OutputType
            {
                OutputTypeAppend/** Appends the new AFU Data Record to the source AFU file */,
                OutputTypeOverwrite/** Overwrites the source AFU Data Record */,
                OutputTypeOtherFile/** Saves the new AFU Data Record to other file */
            };

            /** Defines the outer interpolation method */
            public: enum OuterInterpolation
            {
                OuterInterpolationZero/** Interpolates values with zero */,
                OuterInterpolationCurve/** Interpolates values with curve points */
            };

            private: NXOpen::CAE::AfuManager* m_owner;
            public: explicit AfuMathOperation(NXOpen::CAE::AfuManager *owner): m_owner(owner)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            /** Scales AFU Data Records by real value  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathScaleByReal
            (
                double scale_value /** Value of scale */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Scales AFU Data Records by complex value  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathScaleByComplex
            (
                double scale_real_value /** Real value of scale */,
                double scale_imaginary_value /** Imaginary value of scale */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Offsets AFU Data Records by real value  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathOffsetByReal
            (
                double offset_value /** Value of offset */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Offsets AFU Data Records by complex value  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathOffsetByComplex
            (
                double offset_real_value /** Real value of offset */,
                double offset_imaginary_value /** Imaginary value of offset */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Shifts abscissa values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathShiftAbscissa
            (
                double shift_value /** Value of shift abscissa */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets sign values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathSignValue
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets absolute values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathAbsoluteValue
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets complex conjugate values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathComplexConjugate
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets fourier transform values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathFourierTransform
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Interpolates AFU Data Records with linear method  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathLinearInterpolation
            (
                NXOpen::CAE::AfuMathOperation::OuterInterpolation outer_interpolation /** Outer interpolation method */,
                double new_x_increment /** X increment of new AFU Data Record */,
                double new_x_minimum /** X minimum of new AFU Data Record */,
                double new_x_maximum /** X maximum of new AFU Data Record */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Interpolates AFU Data Records with lagrangian method  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathLagrangianInterpolation
            (
                int polynomial_order /** Polynomial order which must be 1 thru 8 */,
                NXOpen::CAE::AfuMathOperation::OuterInterpolation outer_interpolation /** Outer interpolation method */,
                double new_x_increment /** X increment of new AFU Data Record */,
                double new_x_minimum /** X minimum of new AFU Data Record */,
                double new_x_maximum /** X maximum of new AFU Data Record */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets square root values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathSquareRoot
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets square of magnitude values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathSquareMagnitude
            (
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets moving average values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateSingleMathMovingAverage
            (
                int moving_average_number /** Moving average number */,
                const NXString & source_afu_file_name /** File name of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index /** Index of the source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Does Multi Math Operations on AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateMultiMathRecords
            (
                NXOpen::CAE::AfuMathOperation::MultiType multi_math_type /** Multi Math Operation type */,
                const NXString & source_afu_file_name1 /** File name of the first source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index1 /** Index of the first source AFU Data Record */,
                const NXString & source_afu_file_name2 /** File name of the second source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                int source_record_index2 /** Index of the second source AFU Data Record */,
                NXOpen::CAE::AfuMathOperation::OutputType output_type /** Output type of new AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name. It is NULL if output_type is not
                                                                                         JA_AFU_MATH_OPERATION_output_type_other_file.
                                                                                          <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Gets the minimum or maximum values of AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void GetMinMaxRecords
            (
                NXOpen::CAE::AfuMathOperation::Extreme extrem_type /** The type of Overall Math Operations */,
                std::vector<NXString> & source_afu_file_names /** File names of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const std::vector<int> & source_record_indexes /** Indexes of the source AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Does Overall Math Operations on AFU Data Records  <br> License requirements : nx_ftk ("NX Advanced Graphing") */
            public: void CalculateOverallMathRecords
            (
                NXOpen::CAE::AfuMathOperation::OverallType overall_math_type /** Overall Math Operation type */,
                std::vector<NXString> & source_afu_file_names /** File names of the source AFU   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const std::vector<int> & source_record_indexes /** Indexes of the source AFU Data Record */,
                const NXString & destination_afu_file_name /** Destination AFU file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
