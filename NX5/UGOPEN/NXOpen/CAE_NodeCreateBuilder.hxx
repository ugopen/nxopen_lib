#ifndef NXOpen_CAE_NODECREATEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_NODECREATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodeCreateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_NodeCreateBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class NodeCreateBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Expression;
    class Point;
    namespace CAE
    {
        class _NodeCreateBuilderBuilder;
        /**
            Represents a @link CAE::NodeCreateBuilder CAE::NodeCreateBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateNodeCreateBuilder CAE::NodeElementManager::CreateNodeCreateBuilder@endlink  <br> */
        class NXOPENCPPEXPORT NodeCreateBuilder : public Builder
        {
            private: friend class  _NodeCreateBuilderBuilder;
            protected: NodeCreateBuilder();
            /**Returns  the label  <br> License requirements : None */
            public: int Label
            (
            );
            /**Sets  the label  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int label /** label */ 
            );
            /**Returns  the increment  <br> License requirements : None */
            public: int Increment
            (
            );
            /**Sets  the increment  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetIncrement
            (
                int increment /** increment */ 
            );
            /**Returns  the csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the point  <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the x  <br> License requirements : None */
            public: NXOpen::Expression * X
            (
            );
            /**Returns  the y  <br> License requirements : None */
            public: NXOpen::Expression * Y
            (
            );
            /**Returns  the z  <br> License requirements : None */
            public: NXOpen::Expression * Z
            (
            );
            /**Returns  the t angle  <br> License requirements : None */
            public: NXOpen::Expression * TAngle
            (
            );
            /**Returns  the p angle  <br> License requirements : None */
            public: NXOpen::Expression * PAngle
            (
            );
            /**Returns  the disp csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * DispCsys
            (
            );
            /**Sets  the disp csys  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDispCsys
            (
                NXOpen::CoordinateSystem * dispCsys /** dispcsys */ 
            );
            /**Returns  the ref csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * RefCsys
            (
            );
            /**Sets  the ref csys  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetRefCsys
            (
                NXOpen::CoordinateSystem * refCsys /** refcsys */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
