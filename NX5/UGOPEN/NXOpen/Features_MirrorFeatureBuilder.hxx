#ifndef NXOpen_FEATURES_MIRRORFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_MIRRORFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_MirrorFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_MirrorFeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class MirrorFeatureBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeatureList;
    }
    class Plane;
    class SelectISurface;
    namespace Features
    {
        class _MirrorFeatureBuilderBuilder;
        /**
            Represents a @link Features::MirrorFeature Features::MirrorFeature@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateMirrorFeatureBuilder Features::FeatureCollection::CreateMirrorFeatureBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MirrorFeatureBuilder : public Features::FeatureBuilder
        {
            /** the Plane options. */
            public: enum PlaneOptions
            {
                PlaneOptionsExisting/** existing plane*/,
                PlaneOptionsNew/** new plane */
            };

            private: friend class  _MirrorFeatureBuilderBuilder;
            protected: MirrorFeatureBuilder();
            /**Returns  the Mirror Plane
            	 <br> License requirements : None */
            public: NXOpen::SelectISurface * Plane
            (
            );
            /**Returns  the Features
            	 <br> License requirements : None */
            public: NXOpen::Features::SelectFeatureList * FeatureSet
            (
            );
            /**Returns  the plane option
                 <br> License requirements : None */
            public: NXOpen::Features::MirrorFeatureBuilder::PlaneOptions PlaneOption
            (
            );
            /**Sets  the plane option
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPlaneOption
            (
                NXOpen::Features::MirrorFeatureBuilder::PlaneOptions plane_options /** plane options */ 
            );
            /**Returns  the plane constructor  <br> License requirements : None */
            public: NXOpen::Plane * PlaneConstructor
            (
            );
            /**Sets  the plane constructor  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPlaneConstructor
            (
                NXOpen::Plane * planeConstructor /** planeconstructor */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
