#ifndef NXOpen_PREFERENCES_RULEPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_RULEPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_RulePreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class RulePreferences;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        /** Provides methods for manipulating the Knowledge Fusion preferences in a session.  <br> To obtain an instance of this class, refer to @link Preferences::SessionPreferences Preferences::SessionPreferences@endlink  <br> */
        class NXOPENCPPEXPORT RulePreferences
        {
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            public: explicit RulePreferences(NXOpen::Preferences::SessionPreferences *owner): m_owner(owner)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            /** Get the search libraries for user classes.  @return  search libraries  <br> License requirements : ug_kf_author ("UG/Knowledge Fusion - Author") */
            public: std::vector<NXString> GetSearchLibraries
            (
            );
            /** Set the search libraries for user classes.  <br> License requirements : ug_kf_author ("UG/Knowledge Fusion - Author") */
            public: void SetSearchLibraries
            (
                std::vector<NXString> & user_libraries /** search libraries   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
