#ifndef NXOpen_GEOMETRICANALYSIS_SIMPLEINTERFERENCE_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SIMPLEINTERFERENCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SimpleInterference.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/GeometricAnalysis_SimpleInterference.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class SimpleInterference;
    }
    class Builder;
    class SelectObject;
    namespace GeometricAnalysis
    {
        class _SimpleInterferenceBuilder;
        /** Represents the Simple Interference object. A
              @link GeometricAnalysis::SimpleInterference GeometricAnalysis::SimpleInterference@endlink  object
              takes two solid bodies as inputs and the type of interference results to
              be produced. It can report the first pair of interfering faces between
              two solids or all pairs of interfering faces. It can also
              create the interference solid(s) between two bodies.
              <br> To create a new instance of this class, use @link GeometricAnalysis::AnalysisManager::CreateSimpleInterferenceObject GeometricAnalysis::AnalysisManager::CreateSimpleInterferenceObject@endlink  <br> */
        class NXOPENCPPEXPORT SimpleInterference : public Builder
        {
            /** Specifies interference method, i.e., to highlight interfering
                         faces or create interference solid */
            public: enum InterferenceMethod
            {
                InterferenceMethodInterferingFaces/** Find
                                                                         interfering faces. */,
                InterferenceMethodInterferenceSolid/** Create
                                                                           interference solid. */
            };

            /** Specifies to "find only first pair of interfering faces" or "all
                         pairs of interfering faces" between the input boides. */
            public: enum FaceInterferenceMethod
            {
                FaceInterferenceMethodFirstPairOnly/** Find first pair of interfering faces */,
                FaceInterferenceMethodAllPairs/** Find
                                                     all pairs of interfering faces. */
            };

            /** Specifies the result of a simple interference check */
            public: enum Result
            {
                ResultNoInterference/** No interference
                                                           exists between the input bodies. */,
                ResultOnlyEdgesOrFacesInterfere/**
                                                           Only faces or edges interfere and no
                                                           solid interference exists between
                                                           the input bodies. */,
                ResultInterferenceExists/** Interference
                                                           exists between the input bodies. Use
                                                           @link GetResults GetResults@endlink  to
                                                           obtain the pairs of faces interfering
                                                           or interference solid(s) created
                                                           between the input bodies. */,
                ResultCanNotPerformCheck/** An unknown
                                                           error has occured while performing
                                                           the interference check. Check could 
                                                           not be performed between
                                                           the input bodies.*/
            };

            private: friend class  _SimpleInterferenceBuilder;
            protected: SimpleInterference();
            /**Returns  the First Body  <br> License requirements : None */
            public: NXOpen::SelectObject * FirstBody
            (
            );
            /**Returns  the Second Body  <br> License requirements : None */
            public: NXOpen::SelectObject * SecondBody
            (
            );
            /**Returns  the InterferenceType. A value of
                         @link InterferenceMethodInterferingFaces InterferenceMethodInterferingFaces@endlink   for
                          @link InterferenceType InterferenceType @endlink and @link SetInterferenceType SetInterferenceType @endlink  reports 
                          the pairs of interfering faces between two solids.  You can also
                          further specify to report only the first pair of interfering faces or 
                          all pairs of interfering faces by 
                          @link FaceInterferenceType FaceInterferenceType @endlink and @link SetFaceInterferenceType SetFaceInterferenceType @endlink . A value of
                          @link InterferenceMethodInterferenceSolid InterferenceMethodInterferenceSolid@endlink  for
                          @link InterferenceType InterferenceType @endlink and @link SetInterferenceType SetInterferenceType @endlink  creates the 
                          interference solid(s) between the two input bodies.  <br> License requirements : None */
            public: NXOpen::GeometricAnalysis::SimpleInterference::InterferenceMethod InterferenceType
            (
            );
            /**Sets  the InterferenceType. A value of
                         @link InterferenceMethodInterferingFaces InterferenceMethodInterferingFaces@endlink   for
                          @link InterferenceType InterferenceType @endlink and @link SetInterferenceType SetInterferenceType @endlink  reports 
                          the pairs of interfering faces between two solids.  You can also
                          further specify to report only the first pair of interfering faces or 
                          all pairs of interfering faces by 
                          @link FaceInterferenceType FaceInterferenceType @endlink and @link SetFaceInterferenceType SetFaceInterferenceType @endlink . A value of
                          @link InterferenceMethodInterferenceSolid InterferenceMethodInterferenceSolid@endlink  for
                          @link InterferenceType InterferenceType @endlink and @link SetInterferenceType SetInterferenceType @endlink  creates the 
                          interference solid(s) between the two input bodies.  <br> License requirements : None */
            public: void SetInterferenceType
            (
                NXOpen::GeometricAnalysis::SimpleInterference::InterferenceMethod interferenceType /** interferencetype */ 
            );
            /**Returns  the FaceInterferenceType.
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceTypeGeometricAnalysis::SimpleInterference::FaceInterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetFaceInterferenceTypeGeometricAnalysis::SimpleInterference::SetFaceInterferenceType @endlink  is used when 
                          @link GeometricAnalysis::SimpleInterference::InterferenceTypeGeometricAnalysis::SimpleInterference::InterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetInterferenceTypeGeometricAnalysis::SimpleInterference::SetInterferenceType @endlink  is set to
                          @link GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces@endlink , 
                          i.e., create pair(s) of interfering faces between two solids. A
                          value of @link GeometricAnalysis::SimpleInterference::FaceInterferenceMethodFirstPairOnly GeometricAnalysis::SimpleInterference::FaceInterferenceMethodFirstPairOnly@endlink  
                          for @link GeometricAnalysis::SimpleInterference::FaceInterferenceTypeGeometricAnalysis::SimpleInterference::FaceInterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetFaceInterferenceTypeGeometricAnalysis::SimpleInterference::SetFaceInterferenceType @endlink  reports only the first
                          pair of interfering faces and value of
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs@endlink  
                          reports all pairs of interfering faces between two bodies.  <br> License requirements : None */
            public: NXOpen::GeometricAnalysis::SimpleInterference::FaceInterferenceMethod FaceInterferenceType
            (
            );
            /**Sets  the FaceInterferenceType.
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceTypeGeometricAnalysis::SimpleInterference::FaceInterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetFaceInterferenceTypeGeometricAnalysis::SimpleInterference::SetFaceInterferenceType @endlink  is used when 
                          @link GeometricAnalysis::SimpleInterference::InterferenceTypeGeometricAnalysis::SimpleInterference::InterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetInterferenceTypeGeometricAnalysis::SimpleInterference::SetInterferenceType @endlink  is set to
                          @link GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces@endlink , 
                          i.e., create pair(s) of interfering faces between two solids. A
                          value of @link GeometricAnalysis::SimpleInterference::FaceInterferenceMethodFirstPairOnly GeometricAnalysis::SimpleInterference::FaceInterferenceMethodFirstPairOnly@endlink  
                          for @link GeometricAnalysis::SimpleInterference::FaceInterferenceTypeGeometricAnalysis::SimpleInterference::FaceInterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetFaceInterferenceTypeGeometricAnalysis::SimpleInterference::SetFaceInterferenceType @endlink  reports only the first
                          pair of interfering faces and value of
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs@endlink  
                          reports all pairs of interfering faces between two bodies.  <br> License requirements : None */
            public: void SetFaceInterferenceType
            (
                NXOpen::GeometricAnalysis::SimpleInterference::FaceInterferenceMethod faceInterferenceType /** faceinterferencetype */ 
            );
            /** Perform Interference Check. @link PerformCheck PerformCheck@endlink 
                          should be called after specifiying input bodies to be checked, i.e.,
                          @link FirstBody FirstBody @endlink and @link SetFirstBody SetFirstBody @endlink 
                          and @link SecondBody SecondBody @endlink and @link SetSecondBody SetSecondBody @endlink . 
                          The return value @link Result Result@endlink  specifies the type of
                          interference existing between the input bodies. Use
                          @link GetResults GetResults@endlink  to obtain the interfering faces
                          or solid(s) of interference between the input bodis.
                          @return  Indicates
                             the type of interference existing between the input bodies.  <br> License requirements : None */
            public: NXOpen::GeometricAnalysis::SimpleInterference::Result PerformCheck
            (
            );
            /** Highlights the pairs of interfering faces after a
                          @link GeometricAnalysis::SimpleInterference::PerformCheck GeometricAnalysis::SimpleInterference::PerformCheck@endlink . This method is applicable only
                          when @link GeometricAnalysis::SimpleInterference::InterferenceTypeGeometricAnalysis::SimpleInterference::InterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetInterferenceTypeGeometricAnalysis::SimpleInterference::SetInterferenceType @endlink  is set to
                          @link GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces GeometricAnalysis::SimpleInterference::InterferenceMethodInterferingFaces@endlink  and
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceTypeGeometricAnalysis::SimpleInterference::FaceInterferenceType @endlink and @link GeometricAnalysis::SimpleInterference::SetFaceInterferenceTypeGeometricAnalysis::SimpleInterference::SetFaceInterferenceType @endlink  is set to
                          @link GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs GeometricAnalysis::SimpleInterference::FaceInterferenceMethodAllPairs@endlink . When
                          highlighting the next pair, current pair of faces is
                          unhighlighted. Return value is set to true if there are more
                          pairs of faces to be highlighted. If the last pair is reached 
                          (i.e., the pair being highlighted in this call is the last pair 
                          of faces), return value is set to false. @return  Indicates if there are
                                                                    any more pairs left .  <br> License requirements : None */
            public: bool HighlightNextPair
            (
            );
            /** Returns the pair(s) of interfering faces or solid(s) of interference
                          between the input solid bodies. nObjects will be 0 if there is no face or
                          solid interference bewteen input bodies. If the
                          @link InterferenceType InterferenceType @endlink and @link SetInterferenceType SetInterferenceType @endlink  is
                          @link InterferenceMethodInterferingFaces InterferenceMethodInterferingFaces@endlink , i.e., report pair(s) of
                          interfering faces, nObjects will be twice the number of pairs and
                          results[0] and results[1] will represent the first pair, results[2*i-1]
                          and results[2*i] represent the i-th pair and so on and 
                          results[nObjects-1] and results[nObjects] the last pair. If the
                          @link FaceInterferenceType FaceInterferenceType @endlink and @link SetFaceInterferenceType SetFaceInterferenceType @endlink  is
                          @link FaceInterferenceMethodFirstPairOnly FaceInterferenceMethodFirstPairOnly@endlink , .i.e. report the
                          only the first pair of interfering faces, then nObjects will be either 2 or 0.
                          @return  Results of Simple Interference  <br> License requirements : None */
            public: std::vector<int> GetResults
            (
            );
            /** Frees up resources/results associated with
                         @link GeometricAnalysis::SimpleInterference GeometricAnalysis::SimpleInterference@endlink  object after a
                         call to @link PerformCheck PerformCheck@endlink .
                         @link PerformCheck PerformCheck@endlink  is followed by
                         @link GetResults GetResults@endlink  and the
                         @link Reset Reset@endlink .  <br> License requirements : None */
            public: void Reset
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
