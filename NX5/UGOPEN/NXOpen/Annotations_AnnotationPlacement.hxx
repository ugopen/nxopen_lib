#ifndef NXOpen_ANNOTATIONS_ANNOTATIONPLACEMENT_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ANNOTATIONPLACEMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_AnnotationPlacement.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations.hxx>
#include <NXOpen/Annotations_Annotation.hxx>
#include <NXOpen/Annotations_AnnotationPlacement.hxx>
#include <NXOpen/Annotations_LeaderBundle.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class AnnotationPlacement;
    }
    namespace Annotations
    {
        class Annotation;
    }
    namespace Annotations
    {
        class LeaderBundle;
    }
    class Point;
    class View;
    namespace Annotations
    {
        class _AnnotationPlacementBuilder;
        /** Represents an object that journals the adding of a leader and setting of the origin
                for dialogs that use a builder */
        class NXOPENCPPEXPORT AnnotationPlacement : public TaggedObject
        {
            private: friend class  _AnnotationPlacementBuilder;
            protected: AnnotationPlacement();
            /** Sets the leader bundle for the current annotation in the builder  <br> License requirements : drafting ("DRAFTING") */
            public: void SetLeaderBundle
            (
                NXOpen::Annotations::LeaderBundle * ja_leader /** The leader bundle to set */
            );
            /** Sets the origin of the current annotation  <br> License requirements : drafting ("DRAFTING") */
            public: void SetOrigin
            (
                const NXOpen::Annotations::Annotation::AssociativeOriginData & origin_data /** The origin data */,
                const NXOpen::Point3d & origin /** The new origin */
            );
            /** Gets the origin of the current annotation  <br> License requirements : None */
            public: void GetOrigin
            (
                NXOpen::Annotations::Annotation::AssociativeOriginData* origin_data /** The origin data */,
                NXOpen::Point3d* origin /** The origin stored on the annotation */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
