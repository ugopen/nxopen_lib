#ifndef NXOpen_MOTION_BODYCONTACTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_BODYCONTACTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_BodyContactBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Motion_BodyContactBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class BodyContactBuilder;
    }
    class Builder;
    namespace Motion
    {
        class BodyContactAdams;
    }
    namespace Motion
    {
        class BodyContactRecurdyn;
    }
    class SelectNXObjectList;
    namespace Motion
    {
        class _BodyContactBuilderBuilder;
        /** Represents a @link Motion::BodyContactBuilder Motion::BodyContactBuilder@endlink 
              <br> To create a new instance of this class, use @link Motion::BodyContactCollection::CreateBodyContactBuilder Motion::BodyContactCollection::CreateBodyContactBuilder@endlink  <br> */
        class NXOPENCPPEXPORT BodyContactBuilder : public Builder
        {
            private: friend class  _BodyContactBuilderBuilder;
            protected: BodyContactBuilder();
            /**Returns  the selection of the first contact geometry  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FirstContactGeometry
            (
            );
            /**Returns  the selection of the second contact geometry  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SecondContactGeometry
            (
            );
            /**Returns  the contact's name  <br> License requirements : None */
            public: NXString ContactName
            (
            );
            /**Sets  the contact's name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetContactName
            (
                const NXString & name /** name */ 
            );
            /**Returns the 3D BodyContact's subobject (the adams parameters)   <br> License requirements : None */
            public: NXOpen::Motion::BodyContactAdams * AdamsParameters
            (
            );
            /**Returns  the 3D BodyContact's subobject (the recurdyn parameters)  <br> License requirements : None */
            public: NXOpen::Motion::BodyContactRecurdyn * RecurdynParameters
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
