#ifndef NXOpen_CAM_OPERATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAM_OPERATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_OperationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_ParamBuilder.hxx>
#include <NXOpen/CAM_ParamBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class OperationBuilder;
    }
    namespace CAM
    {
        class GeometryCiBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableFeedBuilder;
    }
    namespace CAM
    {
        class NcmSubopBuilder;
    }
    namespace CAM
    {
        class ParamBuilder;
    }
    namespace CAM
    {
        class ToolChangeCiBuilder;
    }
    namespace CAM
    {
        class _OperationBuilderBuilder;
        /** Represents a Opr Builder  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT OperationBuilder : public CAM::ParamBuilder
        {
            /** Available types for IPW type in mill operation */
            public: enum IpwTypes
            {
                IpwTypesNone/** none */,
                IpwTypesThreeDimension/** 3d type */,
                IpwTypesLevelBased/** level based type */
            };

            /** Available types for Hole Axis Type in feature milling and hole making */
            public: enum HoleAxisTypes
            {
                HoleAxisTypesVector/** Vector */,
                HoleAxisTypesRule/** Rule */,
                HoleAxisTypesRuleIfNoVector/** Rule if no vector */
            };

            /** Available types for Hole Depth Type in feature milling and hole making */
            public: enum HoleDepthTypes
            {
                HoleDepthTypesPoint/** Smart Point */,
                HoleDepthTypesRule/** Depth/Rule */
            };

            /** Available types for optimization level in operation */
            public: enum OptimizationLevelTypes
            {
                OptimizationLevelTypesStandard/** standard */,
                OptimizationLevelTypesAdvanced/** advanced */
            };

            /** Available types for optimization based on in operation */
            public: enum OptimizationBasedOnTypes
            {
                OptimizationBasedOnTypesDist/** dist */,
                OptimizationBasedOnTypesOrient/** orient */
            };

            /** Available types for optimization distance method in operation */
            public: enum OptimizationDistanceTypes
            {
                OptimizationDistanceTypesDirect/** direct */,
                OptimizationDistanceTypesTransition/** transition */
            };

            private: friend class  _OperationBuilderBuilder;
            protected: OperationBuilder();
            /**Returns  the non-cutting moves builder   <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::NcmSubopBuilder * NonCuttingBuilder
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
