#ifndef NXOpen_ROUTING_ELECTRICAL_CABLECONNECTION_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_CABLECONNECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_CableConnection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Electrical_Connection.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class CableConnection;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class Connection;
        }
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _CableConnectionBuilder;
            /** Connection used by a @link Routing::Electrical::CableDevice Routing::Electrical::CableDevice@endlink .
                         <br> 
                        Use is similar to a @link Routing::Electrical::PathConnection Routing::Electrical::PathConnection@endlink , 
                        except that a cable connection may have many paths due to many wire and/or cable children.
                         <br> 
                        See the NX Routing help for detailed information on the Connection data model.
                     <br> To create a new instance of this class, use @link Routing::Electrical::CableConnectionCollection::CreateCableConnection Routing::Electrical::CableConnectionCollection::CreateCableConnection@endlink  <br> */
            class NXOPENCPPEXPORT CableConnection : public Routing::Electrical::Connection
            {
                private: friend class  _CableConnectionBuilder;
                protected: CableConnection();
                /** Is this cable routed?  @return  <ul>
                                                <li><tt>true</tt> The cable is routed.</li>
                                                <li><tt>false</tt> The cable not routed.</li>
                                            </ul>
                                         <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: bool IsCableRouted
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
