#ifndef NXOpen_CAM_HOLDERSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAM_HOLDERSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_HolderSectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class HolderSectionBuilder;
    }
    class Builder;
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _HolderSectionBuilderBuilder;
        /** Represents a Holder Section Builder  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT HolderSectionBuilder : public Builder
        {
            private: friend class  _HolderSectionBuilderBuilder;
            protected: HolderSectionBuilder();
            /**Returns  the Offset (inheritable double)  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TlHolderOffsetBuilder
            (
            );
            /** Create a new holder section  @return   <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::NXObject * Create
            (
                double diameter /** the diameter */,
                double length /** the length */,
                double taper_angle /** the taper angle */,
                double corner_radius /** the corner radius */
            );
            /** Modify an existing holder section  <br> License requirements : cam_base ("CAM BASE") */
            public: void Modify
            (
                NXOpen::NXObject * section /** the section */,
                double diameter /** the diameter */,
                double length /** the length */,
                double taper_angle /** the taper angle */,
                double corner_radius /** the corner radius */
            );
            /** Delete an existing holder section  <br> License requirements : cam_base ("CAM BASE") */
            public: void Delete
            (
                NXOpen::NXObject * section /** the section */
            );
            /** Get the values of an existing holder section  <br> License requirements : cam_base ("CAM BASE") */
            public: void Get
            (
                NXOpen::NXObject * section /** the section */,
                double* diameter /** the diameter */,
                double* length /** the length */,
                double* taper_angle /** the taper angle */,
                double* corner_radius /** the corner radius */
            );
            /**Returns  the number of holder sections  <br> License requirements : cam_base ("CAM BASE") */
            public: int NumberOfSections
            (
            );
            /** Get a specific holder section  @return  the section  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::NXObject * GetSection
            (
                int position /** position */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
