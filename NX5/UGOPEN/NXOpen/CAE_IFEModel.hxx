#ifndef NXOpen_CAE_IFEMODEL_HXX_INCLUDED
#define NXOpen_CAE_IFEMODEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_IFEModel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class IFEModel;
    }
    namespace CAE
    {
        class MeshControlDisplayManager;
    }
    namespace CAE
    {
        class NodeElementInfoManager;
    }
    namespace CAE
    {
        class SelectElementsManager;
    }
    class NXObject;
    namespace CAE
    {
        class _IFEModelBuilder;
        /**  @brief  This class represents an Interface to the Finite Element Model.  

          */
        class NXOPENCPPEXPORT IFEModel : public NXObject
        {
            private: friend class  _IFEModelBuilder;
            protected: IFEModel();


            private: NXOpen::CAE::NodeElementInfoManager *nodeElementInfoMgr;
            /** Returns the node element info manager belonging to this IFem */
            public: NXOpen::CAE::NodeElementInfoManager *NodeElementInfoMgr()
            {
                return nodeElementInfoMgr;
            }
            private: NXOpen::CAE::SelectElementsManager *selectElementMgr;
            /** Returns the select element manager belonging to this IFem */
            public: NXOpen::CAE::SelectElementsManager *SelectElementMgr()
            {
                return selectElementMgr;
            }
            private: NXOpen::CAE::MeshControlDisplayManager *meshControlDisplayMgr;
            /** Returns the mesh control display manager belonging to this IFem */
            public: NXOpen::CAE::MeshControlDisplayManager *MeshControlDisplayMgr()
            {
                return meshControlDisplayMgr;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
