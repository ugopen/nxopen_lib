#ifndef NXOpen_CAM_PLANARMILLINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PLANARMILLINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PlanarMillingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_PlanarOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class PlanarMillingBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class PlanarOperationBuilder;
    }
    namespace CAM
    {
        class _PlanarMillingBuilderBuilder;
        /** Represents a PlanarMilling Builder  <br> To create a new instance of this class, use @link CAM::OperationCollection::CreatePlanarMillingBuilder CAM::OperationCollection::CreatePlanarMillingBuilder@endlink  <br> */
        class NXOPENCPPEXPORT PlanarMillingBuilder : public CAM::PlanarOperationBuilder
        {
            /** Available types for Corner Control Method in planar milling */
            public: enum CornerControlMethodTypes
            {
                CornerControlMethodTypesActive/** Add Arcs */,
                CornerControlMethodTypesInactive/** Ext. Tan */
            };

            /** Available types for Cut level method in planar milling */
            public: enum CutlevMethodTypes
            {
                CutlevMethodTypesUserDefined/** User Defined */,
                CutlevMethodTypesFloorOnly/** Floor Only */,
                CutlevMethodTypesFloorAndIslandTops/** Floor and Island Tops */,
                CutlevMethodTypesLevelsAtIslandTops/** Levels at Island Tops */,
                CutlevMethodTypesFixedDepth/** Fixed Depth */
            };

            /** Available types for profile method in planar milling */
            public: enum ProfileMethodTypes
            {
                ProfileMethodTypesSingleByRegion/** Single Profile By Region */,
                ProfileMethodTypesSingleByShape2d/** 2D Single Profile */,
                ProfileMethodTypesCurve3d/** 3D-Curve Single Profile */,
                ProfileMethodTypesEngravingProfile/** Engraving Profile */
            };

            private: friend class  _PlanarMillingBuilderBuilder;
            protected: PlanarMillingBuilder();
        };
    }
}
#undef EXPORTLIBRARY
#endif
