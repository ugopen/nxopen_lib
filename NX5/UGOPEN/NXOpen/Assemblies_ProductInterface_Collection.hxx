#ifndef NXOpen_ASSEMBLIES_PRODUCTINTERFACE_COLLECTION_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_PRODUCTINTERFACE_COLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_ProductInterface_Collection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Assemblies
    {
        namespace ProductInterface
        {
            class Collection;
        }
    }
    class Part;
    namespace Assemblies
    {
        namespace ProductInterface
        {
            class ObjectBuilder;
        }
    }
    class NXObject;
    namespace Assemblies
    {
        namespace ProductInterface
        {
            /** This class represents the collection of product interface objects  <br> To obtain an instance of this class, refer to @link Part Part@endlink  <br> */
            class NXOPENCPPEXPORT Collection
            {
                private: NXOpen::Part* m_owner;
                public: explicit Collection(NXOpen::Part *owner): m_owner(owner)
                {
                }
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                /** Create Product Interface Object Builder  @return   <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::ObjectBuilder * CreateObjectBuilder
                (
                );
                /** Find the Product Interface Object with input name  @return  Product Interface Object with this identifier  <br> License requirements : None */
                public: NXOpen::NXObject * FindObject
                (
                    const NXString & journal_identifier /** Identifier of the product interface object you want   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                public: virtual void initialize();
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
