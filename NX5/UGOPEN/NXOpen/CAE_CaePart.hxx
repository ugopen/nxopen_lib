#ifndef NXOpen_CAE_CAEPART_HXX_INCLUDED
#define NXOpen_CAE_CAEPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaePart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/CAE_MaterialOptions.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class CaePart;
    }
    class BasePart;
    namespace CAE
    {
        class FEElementSetCollection;
    }
    namespace CAE
    {
        class FENodeSetCollection;
    }
    namespace CAE
    {
        class MaterialOptions;
    }
    namespace CAE
    {
        class ModelingObjectPropertyTableCollection;
    }
    namespace CAE
    {
        class PhysicalPropertyTableCollection;
    }
    class MaterialManager;
    namespace CAE
    {
        class _CaePartBuilder;
        /**  @brief  This is an abstract class for NX parts of type .fem and .sim  

           <br> This is an abstract class <br> */
        class NXOPENCPPEXPORT CaePart : public BasePart
        {
            private: friend class  _CaePartBuilder;
            protected: CaePart();
            /** Creates a @link  CAE::MaterialOptions   CAE::MaterialOptions @endlink 
                     @return  the material options object created  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::MaterialOptions * NewMaterialOptions
            (
            );


            private: NXOpen::CAE::PhysicalPropertyTableCollection *physicalPropertyTables;
            /** Returns the physical property table collection belonging to this CAE Part */
            public: NXOpen::CAE::PhysicalPropertyTableCollection *PhysicalPropertyTables()
            {
                return physicalPropertyTables;
            }
            private: NXOpen::CAE::ModelingObjectPropertyTableCollection *modelingObjectPropertyTables;
            /** Returns the modeling object property table collection belonging to this CAE Part */
            public: NXOpen::CAE::ModelingObjectPropertyTableCollection *ModelingObjectPropertyTables()
            {
                return modelingObjectPropertyTables;
            }
            private: NXOpen::CAE::FENodeSetCollection *fENodeSets;
            /** Returns the FE node set collection belonging to this CAE Part */
            public: NXOpen::CAE::FENodeSetCollection *FENodeSets()
            {
                return fENodeSets;
            }
            private: NXOpen::CAE::FEElementSetCollection *fEElementSets;
            /** Returns the FE element set collection belonging to this CAE Part */
            public: NXOpen::CAE::FEElementSetCollection *FEElementSets()
            {
                return fEElementSets;
            }
            private: NXOpen::MaterialManager *materialManager;
            /** Returns the Material Manager belonging to this Part */
            public: NXOpen::MaterialManager *MaterialManager()
            {
                return materialManager;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
