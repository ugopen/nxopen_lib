#ifndef NXOpen_ROUTING_ELECTRICAL_ROUTEERRORLIST_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_ROUTEERRORLIST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_RouteErrorList.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class RouteErrorList;
        }
    }
    class NXObject;
    namespace Routing
    {
        namespace Electrical
        {
            /** Represents a list of errors. This is an input to the method @link Routing::Electrical::ElectricalStockDeviceCollection::AutoRouteConnections Routing::Electrical::ElectricalStockDeviceCollection::AutoRouteConnections@endlink . */
            class NXOPENCPPEXPORT RouteErrorList : public TransientObject
            {
                public: explicit RouteErrorList(void *ptr);
                /** Frees the object from memory. After this method is called,
                            it is illegal to use the object.  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: virtual ~RouteErrorList();
                /** Returns the number of errors from the @link Routing::Electrical::RouteErrorList Routing::Electrical::RouteErrorList@endlink .  @return   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: int GetLength
                (
                );
                /** Returns the error code associated with particular error.  @return   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: int GetErrorCode
                (
                    int counter /** Counter on number of errors from the list. */
                );
                /** Returns the error object associated with particular error.  @return   <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") */
                public: NXOpen::NXObject * GetErrorObject
                (
                    int counter /** counter */ 
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
