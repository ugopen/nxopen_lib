#ifndef NXOpen_MOTION_LINKMASSPROPERTY_HXX_INCLUDED
#define NXOpen_MOTION_LINKMASSPROPERTY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_LinkMassProperty.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_LinkMassProperty.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class LinkMassProperty;
    }
    class CoordinateSystem;
    class Point;
    namespace Motion
    {
        class _LinkMassPropertyBuilder;
        /**
            Represents a @link Motion::LinkMassProperty Motion::LinkMassProperty@endlink 
            */
        class NXOPENCPPEXPORT LinkMassProperty : public TaggedObject
        {
            /** Defines mass property type of link */
            public: enum MassPropertyType
            {
                MassPropertyTypeAutomatic/** Mass property automatic generate */,
                MassPropertyTypeUserDefined/** Mass property defined by user */,
                MassPropertyTypeNone/** No mass property  */
            };

            private: friend class  _LinkMassPropertyBuilder;
            protected: LinkMassProperty();
            /**Returns  the mass type  <br> License requirements : None */
            public: NXOpen::Motion::LinkMassProperty::MassPropertyType MassType
            (
            );
            /**Sets  the mass type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMassType
            (
                NXOpen::Motion::LinkMassProperty::MassPropertyType massType /** masstype */ 
            );
            /**Returns  the mass center  <br> License requirements : None */
            public: NXOpen::Point * MassCenter
            (
            );
            /**Sets  the mass center  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMassCenter
            (
                NXOpen::Point * massCenter /** masscenter */ 
            );
            /**Returns  the mass value  <br> License requirements : None */
            public: double MassValue
            (
            );
            /**Sets  the mass value  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMassValue
            (
                double massValue /** massvalue */ 
            );
            /**Returns  the inertia csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * InertiaCsys
            (
            );
            /**Sets  the inertia csys  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetInertiaCsys
            (
                NXOpen::CoordinateSystem * inertiaCsys /** inertiacsys */ 
            );
            /**Returns  the ixx  <br> License requirements : None */
            public: double Ixx
            (
            );
            /**Sets  the ixx  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIxx
            (
                double ixx /** ixx */ 
            );
            /**Returns  the iyy  <br> License requirements : None */
            public: double Iyy
            (
            );
            /**Sets  the iyy  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIyy
            (
                double iyy /** iyy */ 
            );
            /**Returns  the izz  <br> License requirements : None */
            public: double Izz
            (
            );
            /**Sets  the izz  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIzz
            (
                double izz /** izz */ 
            );
            /**Returns  the ixy  <br> License requirements : None */
            public: double Ixy
            (
            );
            /**Sets  the ixy  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIxy
            (
                double ixy /** ixy */ 
            );
            /**Returns  the ixz  <br> License requirements : None */
            public: double Ixz
            (
            );
            /**Sets  the ixz  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIxz
            (
                double ixz /** ixz */ 
            );
            /**Returns  the iyz  <br> License requirements : None */
            public: double Iyz
            (
            );
            /**Sets  the iyz  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIyz
            (
                double iyz /** iyz */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
