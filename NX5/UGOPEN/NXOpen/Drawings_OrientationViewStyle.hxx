#ifndef NXOpen_DRAWINGS_ORIENTATIONVIEWSTYLE_HXX_INCLUDED
#define NXOpen_DRAWINGS_ORIENTATIONVIEWSTYLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_OrientationViewStyle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_IOrientationViewPreferences.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class OrientationViewStyle;
    }
    namespace Drawings
    {
        class ViewStyle;
    }
    class Direction;
    namespace Preferences
    {
        class IOrientationViewPreferences;
    }
    class Xform;
    namespace Drawings
    {
        /** Represents set of Orientation View Style Preferences applicable to drafting views.  <br> To obtain an instance of this class, refer to @link Drawings::ViewStyle Drawings::ViewStyle@endlink  <br> */
        class NXOPENCPPEXPORT OrientationViewStyle: public virtual Preferences::IOrientationViewPreferences
        {
            private: NXOpen::Drawings::ViewStyle* m_owner;
            public: explicit OrientationViewStyle(NXOpen::Drawings::ViewStyle *owner): m_owner(owner)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            /**Returns  the rotation plane.  <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Xform * RotationPlane
            (
            );
            /**Sets  the rotation plane.  <br> License requirements : drafting ("DRAFTING") */
            public: void SetRotationPlane
            (
                NXOpen::Xform * plane /** plane */ 
            );
            /**Returns  the rotation in x-direction for the drawing member view which stays 
            	       parallel to the x-axis drawing coordinate. The orientation of the view is 
            	       associative to the x-direction.
            	     <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Direction * RotationXDirection
            (
            );
            /**Sets  the rotation in x-direction for the drawing member view which stays 
            	       parallel to the x-axis drawing coordinate. The orientation of the view is 
            	       associative to the x-direction.
            	     <br> License requirements : drafting ("DRAFTING") */
            public: void SetRotationXDirection
            (
                NXOpen::Direction * x_direction /** x direction */ 
            );
            /** Reverse the rotation vector. The direction of this vector 
            	       determines how the view is rendered. 
            	     <br> License requirements : drafting ("DRAFTING") */
            public: void ReverseRotationVector
            (
            );
            /** Reverse the hinge line. The direction of this vector 
            	       determines how the view is rendered. 
            	     <br> License requirements : drafting ("DRAFTING") */
            public: void ReverseHingeLine
            (
            );
            /** Removes the associativity to the defined plane (if it existed) and returns 
            	      the member view to its orientation with the model with respect to the Absolute 
            	      Coordinate System.
                     <br> License requirements : drafting ("DRAFTING") */
            public: void Restore
            (
            );
            /**Sets  the hinge line for an existing auxillary view. <br> License requirements : drafting ("DRAFTING") */
            public: void SetHingeLine
            (
                NXOpen::Direction * hinge_line /** hinge line */ 
            );
            /**Returns  the hinge line for an existing auxillary view. <br> License requirements : None */
            public: NXOpen::Direction * HingeLine
            (
            );
            /** Orients the view.   <br> License requirements : drafting ("DRAFTING") */
            public: void OrientView
            (
                const NXOpen::Matrix3x3 & matrix /** Orientation relative to the absolute coordinate system.
                									Must be orthonormal. */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
