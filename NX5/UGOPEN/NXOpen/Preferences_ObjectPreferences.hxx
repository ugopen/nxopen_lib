#ifndef NXOpen_PREFERENCES_OBJECTPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_OBJECTPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_ObjectPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class ObjectPreferences;
    }
    class UI;
    namespace Preferences
    {
        /** Captures the UI based calls required for Object Preferences  <br> To obtain an instance of this class, refer to @link UI UI@endlink  <br> */
        class NXOPENUICPPEXPORT ObjectPreferences
        {
            /** Describes whether the translucency is enabled or disabled */
            public: enum Translucency
            {
                TranslucencyDisabled/** disabled */ ,
                TranslucencyEnabled/** enabled */ ,
                TranslucencyTemporarilyEnabled/** temporarily enabled */ 
            };

            private: NXOpen::UI* m_owner;
            public: explicit ObjectPreferences(NXOpen::UI *owner): m_owner(owner)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            /** Resets the session translucency  <br> License requirements : None */
            public: void ResetSessionTranslucency
            (
                bool option /** User can set TRUE or FALSE */,
                NXOpen::Preferences::ObjectPreferences::Translucency* session_translucency /** Return Value */
            );
            /** Sets the session translucency  <br> License requirements : None */
            public: void SetSessionTranslucency
            (
                NXOpen::Preferences::ObjectPreferences::Translucency option /** option */ ,
                NXOpen::Preferences::ObjectPreferences::Translucency* session_translucency /** Return Value */
            );
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
