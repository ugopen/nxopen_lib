#ifndef NXOpen_SKETCHCONSTRAINT_HXX_INCLUDED
#define NXOpen_SKETCHCONSTRAINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SketchConstraint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/Sketch.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class SketchConstraint;
    class NXObject;
    class _SketchConstraintBuilder;
    /** Represents a constraint in a sketch.  There are two classes of constraints:
    geometric and dimensional  <br> This is an abstract class. <br> */
    class NXOPENCPPEXPORT SketchConstraint : public NXObject
    {
        private: friend class  _SketchConstraintBuilder;
        protected: SketchConstraint();
        /**Returns  the constraint's type  <br> License requirements : None */
        public: NXOpen::Sketch::ConstraintType ConstraintType
        (
        );
        /** <b>Deprecated</b>:<br>
        &nbsp;&nbsp;&nbsp;Use @link ConstraintType() ConstraintType@endlink instead.
        @deprecated
        */
        public: NXOpen::Sketch::ConstraintType GetConstraintType
        (
        ) { return this->ConstraintType(); }
        /** Refreshes the display of a sketch dimension  <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
        public: void RefreshDimension
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
