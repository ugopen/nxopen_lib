#ifndef NXOpen_CAE_MESHCONTROLBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHCONTROLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshControlBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_MeshControlBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MeshControlBuilder;
    }
    class Builder;
    namespace CAE
    {
        class MeshControl;
    }
    class Expression;
    class SelectNXObjectList;
    namespace CAE
    {
        class _MeshControlBuilderBuilder;
        /**
            Represents a @link CAE::MeshControl CAE::MeshControl@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshControlCollection::CreateBuilder CAE::MeshControlCollection::CreateBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MeshControlBuilder : public Builder
        {
            /** the mesh control types */
            public: enum Types
            {
                TypesEdgeDensityNumber/** edge density number */ ,
                TypesEdgeDensitySize/**@link MeshControlBuilder::SizeTypes MeshControlBuilder::SizeTypes@endlink */,
                TypesEdgeDensityChordal/** edge density chordal */ ,
                TypesEdgeDensityProgression/**@link MeshControlBuilder::Progression::Types MeshControlBuilder::Progression::Types@endlink */,
                TypesFaceDensitySize/** face density size */ ,
                TypesTypesLastValue/** types last value */ 
            };

            /** the mesh control size subtypes. */
            public: enum SizeTypes
            {
                SizeTypesAll/** all */ ,
                SizeTypesStart/** start */ ,
                SizeTypesEnd/** end */ ,
                SizeTypesStartAndEnd/** start and end */ ,
                SizeTypesLastValue/** last value */ 
            };

            /** the mesh control progression subtypes. */
            public: enum ProgressionTypes
            {
                ProgressionTypesStart/** start */ ,
                ProgressionTypesEnd/** end */ ,
                ProgressionTypesCenter/** center */ ,
                ProgressionTypesLastValue/** last value */ 
            };

            private: friend class  _MeshControlBuilderBuilder;
            protected: MeshControlBuilder();
            /**Returns  the selection  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectNXObjectList * Selection
            (
            );
            /**Returns  the type of mesh control  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshControlBuilder::Types MainType
            (
            );
            /**Sets  the type of mesh control  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMainType
            (
                NXOpen::CAE::MeshControlBuilder::Types type /** type */ 
            );
            /**Returns  the size type of mesh control  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshControlBuilder::SizeTypes SizeSubtype
            (
            );
            /**Sets  the size type of mesh control  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSizeSubtype
            (
                NXOpen::CAE::MeshControlBuilder::SizeTypes type /** type */ 
            );
            /**Returns  the progression or bias starting type  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshControlBuilder::ProgressionTypes ProgressionSubtype
            (
            );
            /**Sets  the progression or bias starting type  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetProgressionSubtype
            (
                NXOpen::CAE::MeshControlBuilder::ProgressionTypes type /** type */ 
            );
            /**Returns  the number of elements defined on edge. Valid for following types:
                        @link MeshControlBuilder::TypesEdgeDensityNumber MeshControlBuilder::TypesEdgeDensityNumber@endlink , 
                        @link MeshControlBuilder::TypesEdgeDensityProgression MeshControlBuilder::TypesEdgeDensityProgression@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumOfElements
            (
            );
            /**Sets  the number of elements defined on edge. Valid for following types:
                        @link MeshControlBuilder::TypesEdgeDensityNumber MeshControlBuilder::TypesEdgeDensityNumber@endlink , 
                        @link MeshControlBuilder::TypesEdgeDensityProgression MeshControlBuilder::TypesEdgeDensityProgression@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetNumOfElements
            (
                int numOfElements /** numofelements */ 
            );
            /**Returns  the value stored in Size field. This field represents:
                        Size  for @link MeshControlBuilder::TypesEdgeDensitySize MeshControlBuilder::TypesEdgeDensitySize@endlink  
                        Size  for @link MeshControlBuilder::TypesFaceDensitySize MeshControlBuilder::TypesFaceDensitySize@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * OverallSize
            (
            );
            /**Returns  the value stored in start size field. This field represents:
                        Size  for @link MeshControlBuilder::TypesEdgeDensitySize MeshControlBuilder::TypesEdgeDensitySize@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * StartSize
            (
            );
            /**Returns  the value stored in end size field. This field represents:
                        Size  for @link MeshControlBuilder::TypesEdgeDensitySize MeshControlBuilder::TypesEdgeDensitySize@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndSize
            (
            );
            /**Returns  the value stored in chordal tolerance field. This field represents:
                        Tolerance for @link MeshControlBuilder::TypesEdgeDensityChordal MeshControlBuilder::TypesEdgeDensityChordal@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * ChordalTolerance
            (
            );
            /**Returns  the value stored in geometric ratio field. This field represents:
                        Ratio for @link MeshControlBuilder::TypesEdgeDensityProgression MeshControlBuilder::TypesEdgeDensityProgression@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * GeometricRatio
            (
            );
            /**Returns  the value stored in edge fraction field. This field represents:
                        Fraction for @link MeshControlBuilder::TypesEdgeDensityProgression MeshControlBuilder::TypesEdgeDensityProgression@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EdgeFraction
            (
            );
            /** The calculate Auto Size method.
                        This computes and populates num of elements and size fields based auto 
                        element size computation. Selected geometry is used in computation.  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void AutoSize
            (
            );
            /** Commits the creation of the @link MeshControl MeshControl@endlink  objects
                        or Commits the changes made to the @link MeshControl MeshControl@endlink 
                      @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: std::vector<NXOpen::CAE::MeshControl *> CommitDensities
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
