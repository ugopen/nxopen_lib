#ifndef NXOpen_FEATURES_CUSTOMFEATUREHIGHLIGHTEVENT_HXX_INCLUDED
#define NXOpen_FEATURES_CUSTOMFEATUREHIGHLIGHTEVENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CustomFeatureHighlightEvent.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_CustomFeatureEvent.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CustomFeatureHighlightEvent;
    }
    class DisplayableObject;
    namespace Features
    {
        class CustomFeatureEvent;
    }
    namespace Features
    {
        class _CustomFeatureHighlightEventBuilder;
        class CustomFeatureHighlightEventImpl;
        /** Represents the event data for highlight callback for custom feature  <br> This class cannot be created  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CustomFeatureHighlightEvent : public NXOpen::Features::CustomFeatureEvent
        {
            private: CustomFeatureHighlightEventImpl * m_customfeaturehighlightevent_impl;
            private: friend class  _CustomFeatureHighlightEventBuilder;
            protected: CustomFeatureHighlightEvent();
            public: ~CustomFeatureHighlightEvent();
            /** Highlights or unhighlights the objects passed in objectsToHighlight depending on the highlightFlag status
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void ObjectsToHighlightUnhighlight
            (
                const std::vector<NXOpen::DisplayableObject *> & objectsToHighlight /** objectstohighlight */ 
            );
            /** Gets the highlight flag status of highlight event @return  Get Highlight Flag, true = Highlight, false = Unhighlight
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool GetHighlightFlag
            (
            );
            /** Gets the highlight only supplied objects (objects passed to @link NXOpen::Features::CustomFeatureHighlightEvent::ObjectsToHighlightUnhighlight NXOpen::Features::CustomFeatureHighlightEvent::ObjectsToHighlightUnhighlight@endlink ) option of highlight event @return  Get Highlight Only Objects Option
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool GetHighlightOnlySuppliedObjectsOption
            (
            );
            /** Sets the highlight only supplied objects (objects passed to @link NXOpen::Features::CustomFeatureHighlightEvent::ObjectsToHighlightUnhighlight NXOpen::Features::CustomFeatureHighlightEvent::ObjectsToHighlightUnhighlight@endlink ) option of highlight event
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetHighlightOnlySuppliedObjectsOption
            (
                bool highlightOption /** Set Highlight Only Objects Option*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
