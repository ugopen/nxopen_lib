#ifndef NXOpen_CAE_ACOUSTICSANDVIBRATIONRANDOMVATVRESPONSESOLUTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICSANDVIBRATIONRANDOMVATVRESPONSESOLUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticsAndVibrationRandomVatvResponseSolutionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationRandomOutputRequestsComponentAccessor.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationSolverParametersComponentAccessor.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationTblModelParametersAccessor.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationTransientMeshSelectionAccessor.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationVatvSelectionComponentAccessor.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticsAndVibrationRandomVatvResponseSolutionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class AcousticsAndVibrationRandomOutputRequestsComponentAccessor;
    }
    namespace CAE
    {
        class AcousticsAndVibrationSolverParametersComponentAccessor;
    }
    namespace CAE
    {
        class AcousticsAndVibrationTblModelParametersAccessor;
    }
    namespace CAE
    {
        class AcousticsAndVibrationTransientMeshSelectionAccessor;
    }
    namespace CAE
    {
        class AcousticsAndVibrationVatvSelectionComponentAccessor;
    }
    namespace CAE
    {
        class _AcousticsAndVibrationRandomVatvResponseSolutionBuilderBuilder;
        class AcousticsAndVibrationRandomVatvResponseSolutionBuilderImpl;
        /**
            Builds a @link NXOpen::CAE::AcousticsAndVibrationRandomVatvResponseSolution NXOpen::CAE::AcousticsAndVibrationRandomVatvResponseSolution@endlink  object which 
            represets a data processing meta solution.
             <br> To create a new instance of this class, use @link NXOpen::CAE::AcousticsAndVibrationRandomVatvResponseSolutionCollection::CreateBuilder  NXOpen::CAE::AcousticsAndVibrationRandomVatvResponseSolutionCollection::CreateBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticsAndVibrationRandomVatvResponseSolutionBuilder : public NXOpen::Builder
        {
            private: AcousticsAndVibrationRandomVatvResponseSolutionBuilderImpl * m_acousticsandvibrationrandomvatvresponsesolutionbuilder_impl;
            private: friend class  _AcousticsAndVibrationRandomVatvResponseSolutionBuilderBuilder;
            protected: AcousticsAndVibrationRandomVatvResponseSolutionBuilder();
            public: ~AcousticsAndVibrationRandomVatvResponseSolutionBuilder();
            /**Returns  the meta solution name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SolutionName
            (
            );
            /**Sets  the meta solution name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSolutionName
            (
                const NXString & title /** title */ 
            );
            /**Sets  the meta solution name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetSolutionName
            (
                const char * title /** title */ 
            );
            /**Returns  the vatv selection accessor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationVatvSelectionComponentAccessor * VatvSelection
            (
            );
            /**Returns  the tbl selection accessor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor * TblModel
            (
            );
            /**Returns  the transient mesh selection accessor for VATV faces. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationTransientMeshSelectionAccessor * TblTransientMeshSelector
            (
            );
            /**Returns  the solver parameters accessor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationSolverParametersComponentAccessor * SolverParameters
            (
            );
            /**Returns  the random output request accessor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationRandomOutputRequestsComponentAccessor * RandomOutputRequests
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
