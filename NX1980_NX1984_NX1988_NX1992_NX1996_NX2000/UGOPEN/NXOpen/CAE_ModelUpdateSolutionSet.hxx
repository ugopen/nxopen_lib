#ifndef NXOpen_CAE_MODELUPDATESOLUTIONSET_HXX_INCLUDED
#define NXOpen_CAE_MODELUPDATESOLUTIONSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelUpdateSolutionSet.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CorrelModePairingBuilder.hxx>
#include <NXOpen/CAE_ModelUpdateOptimOptionsBuilder.hxx>
#include <NXOpen/CAE_ModelUpdateOptionsBuilder.hxx>
#include <NXOpen/CAE_ModelUpdateSolution.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelUpdateSolutionSet;
    }
    namespace CAE
    {
        class ModelUpdateOptimOptionsBuilder;
    }
    namespace CAE
    {
        class ModelUpdateOptionsBuilder;
    }
    namespace CAE
    {
        class ModelUpdateSolution;
    }
    namespace CAE
    {
        class ModelUpdateSolutionSetDesignVariableCollection;
    }
    class NXObject;
    namespace CAE
    {
        class _ModelUpdateSolutionSetBuilder;
        class ModelUpdateSolutionSetImpl;
        /** Represents a @link NXOpen::CAE::ModelUpdateSolutionSet NXOpen::CAE::ModelUpdateSolutionSet@endlink  meta-solution used to optimize multiple @link NXOpen::CAE::ModelUpdateSolution NXOpen::CAE::ModelUpdateSolution@endlink  metasolutions <br> TODO - replace with appropriate JA method from solution set collection - NXC-2362  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelUpdateSolutionSet : public NXOpen::NXObject
        {
            private: ModelUpdateSolutionSetImpl * m_modelupdatesolutionset_impl;
            private: friend class  _ModelUpdateSolutionSetBuilder;
            protected: ModelUpdateSolutionSet();
            public: ~ModelUpdateSolutionSet();
            /** Rename the metasolution. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void Rename
            (
                const NXString & name /** name */ 
            );
            /** Rename the metasolution. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            void Rename
            (
                const char * name /** name */ 
            );
            /** Set the master model update. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetMaster
            (
                NXOpen::CAE::ModelUpdateSolution * muSol /** musol */ 
            );
            /** Clear the master metasolution. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void ClearMaster
            (
            );
            /**Returns  the mode pairing method 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CorrelModePairingBuilder::Auto ModePairingMethod
            (
            );
            /**Sets  the mode pairing method 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetModePairingMethod
            (
                NXOpen::CAE::CorrelModePairingBuilder::Auto modePairingMethod /** modepairingmethod */ 
            );
            /**Returns  the shape correlation method 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CorrelModePairingBuilder::ShapeCorrelation ShapeCorrelationMethod
            (
            );
            /**Sets  the shape correlation method 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetShapeCorrelationMethod
            (
                NXOpen::CAE::CorrelModePairingBuilder::ShapeCorrelation shapeCorrelationMethod /** shapecorrelationmethod */ 
            );
            /** Set the active status of a frequency target in a Model Update Set. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetFreqTargetActive
            (
                int solutionIndex /** solutionindex */ ,
                int targetIndex /** targetindex */ ,
                bool active /** active */ 
            );
            /** Set the active status of a mode shape target in a Model Update Set. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetModeShapeTargetActive
            (
                int solutionIndex /** solutionindex */ ,
                int targetIndex /** targetindex */ ,
                bool active /** active */ 
            );
            /** Update the design variables 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void UpdateDesignVariables
            (
            );
            /** Output information 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void Information
            (
            );
            /** Output error to information window
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void Error
            (
            );
            /** Output error to csv file
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void Error
            (
                const NXString & fileName /** filename */ 
            );
            /** Output error to csv file
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            void Error
            (
                const char * fileName /** filename */ 
            );
            /** Calculate errors 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void CalculateErrors
            (
            );
            /** Creates the builder object of model update options 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: NXOpen::CAE::ModelUpdateOptionsBuilder * CreateOptionsBuilder
            (
            );
            /** Creates the builder object of model update optimize options 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: NXOpen::CAE::ModelUpdateOptimOptionsBuilder * CreateOptimOptionsBuilder
            (
            );
            /** Targets information 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void TargetsInformation
            (
                int setTargetIndex /** settargetindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetsType /** targetstype */ 
            );
            /** Targets reset 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void TargetsReset
            (
            );
            /** Targets csv export 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void TargetsCsvExport
            (
                int setTargetIndex /** settargetindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetsType /** targetstype */ ,
                const NXString & fileName /** filename */ 
            );
            /** Targets csv export 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            void TargetsCsvExport
            (
                int setTargetIndex /** settargetindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetsType /** targetstype */ ,
                const char * fileName /** filename */ 
            );
            /** Set the weight of a frequency target in a Model Update Set. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetFreqTargetWeight
            (
                int solutionIndex /** solutionindex */ ,
                int targetIndex /** targetindex */ ,
                double newWeight /** newweight */ 
            );
            /** Set the weight of a mode shape target in a Model Update Set. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetModeShapeTargetWeight
            (
                int solutionIndex /** solutionindex */ ,
                int targetIndex /** targetindex */ ,
                double newWeight /** newweight */ 
            );
            /** Errors information 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void ErrorsInformation
            (
                int solutionIndex /** solutionindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetsType /** targetstype */ 
            );
            /** Export the model update errors to the csv file 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void ExportErrorsCsvFile
            (
                int solutionIndex /** solutionindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetType /** Target type of export to csv file */,
                const NXString & fileName /** CSV file name. */
            );
            /** Export the model update errors to the csv file 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            void ExportErrorsCsvFile
            (
                int solutionIndex /** solutionindex */ ,
                NXOpen::CAE::ModelUpdateSolution::TargetType targetType /** Target type of export to csv file */,
                const char * fileName /** CSV file name. */
            );


            /** The design variable collection for this meta solution. 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::CAE::ModelUpdateSolutionSetDesignVariableCollection *DesignVariables();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
