#ifndef NXOpen_ANIMATIONDESIGNER_SPEEDMOTORBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_SPEEDMOTORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_SpeedMotorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/AnimationDesigner_MotorBuilder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class SpeedMotorBuilder;
    }
    namespace AnimationDesigner
    {
        class MotorBuilder;
    }
    class Expression;
    class NXColor;
    namespace AnimationDesigner
    {
        class _SpeedMotorBuilderBuilder;
        class SpeedMotorBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::SpeedMotorBuilder NXOpen::AnimationDesigner::SpeedMotorBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::SpeedMotorCollection::CreateSpeedMotorBuilder  NXOpen::AnimationDesigner::SpeedMotorCollection::CreateSpeedMotorBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  SpeedMotorBuilder : public NXOpen::AnimationDesigner::MotorBuilder
        {
            /** the axis types. */
            public: enum Axis
            {
                AxisAngular/** Angular */,
                AxisLinear/** Linear */,
                AxisMixed/** Mix angular and linear */
            };

            /** the color options. */
            public: enum ColorOptions
            {
                ColorOptionsSpecifyColor/** Assigns a color to the speed motor */,
                ColorOptionsNoColor/** Assigns no color to the speed motor */
            };

            private: SpeedMotorBuilderImpl * m_speedmotorbuilder_impl;
            private: friend class  _SpeedMotorBuilderBuilder;
            protected: SpeedMotorBuilder();
            public: ~SpeedMotorBuilder();
            /**Returns  the axis type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::SpeedMotorBuilder::Axis AxisType
            (
            );
            /**Sets  the axis type. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetAxisType
            (
                NXOpen::AnimationDesigner::SpeedMotorBuilder::Axis axisType /** axistype */ 
            );
            /**Returns  the start time. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * StartTime
            (
            );
            /** Sets the start time value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void EditStartTime
            (
                double deltaStart /** deltastart */ 
            );
            /**Returns  the speed. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * Speed
            (
            );
            /**Returns  the limit acceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool UseAcceleration
            (
            );
            /**Sets  the limit acceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetUseAcceleration
            (
                bool useAcceleration /** useacceleration */ 
            );
            /**Returns  the max acceleration. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * MaxAcceleration
            (
            );
            /**Returns  the color option. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::SpeedMotorBuilder::ColorOptions ColorOption
            (
            );
            /**Sets  the color option. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetColorOption
            (
                NXOpen::AnimationDesigner::SpeedMotorBuilder::ColorOptions colorOption /** coloroption */ 
            );
            /**Returns  the color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
