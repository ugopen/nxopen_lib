#ifndef NXOpen_COMPOSITES_FEATURES_LAYUPSURFACE_HXX_INCLUDED
#define NXOpen_COMPOSITES_FEATURES_LAYUPSURFACE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Composites_Features_LayupSurface.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Feature.hxx>
#include <NXOpen/libnxopencpp_composites_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Composites
    {
        namespace Features
        {
            class LayupSurface;
        }
    }
    namespace Features
    {
        class Feature;
    }
    namespace Composites
    {
        namespace Features
        {
            class _LayupSurfaceBuilder;
            class LayupSurfaceImpl;

            /// \cond NX_NO_DOC 
            /** Represents a layup surface feature that defines a surface that a @link Composites::Laminate Composites::Laminate@endlink  can be built upon  <br> To create or edit an instance of this class, use @link NXOpen::Composites::Features::LayupSurfaceBuilder  NXOpen::Composites::Features::LayupSurfaceBuilder @endlink  <br> 
             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_COMPOSITESEXPORT  LayupSurface : public NXOpen::Features::Feature
            {
                private: LayupSurfaceImpl * m_layupsurface_impl;
                private: friend class  _LayupSurfaceBuilder;
                protected: LayupSurface();
                public: ~LayupSurface();
            };

            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
