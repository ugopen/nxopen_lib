#ifndef NXOpen_WELD_CONNECTIONFINDERBUILDER_HXX_INCLUDED
#define NXOpen_WELD_CONNECTIONFINDERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_ConnectionFinderBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class ConnectionFinderBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    class ScCollector;
    namespace Weld
    {
        class _ConnectionFinderBuilderBuilder;
        class ConnectionFinderBuilderImpl;
        /**
            Represents a builder to display, manage, delete, and allow the user to
            reparent face information for the weld objects.
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  ConnectionFinderBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Filter values to control "Save All" processing. */
            public: enum FilterTypes
            {
                FilterTypesAll/** all */ ,
                FilterTypesPassed/** passed */ ,
                FilterTypesWarning/** warning */ ,
                FilterTypesFailed/** failed */ ,
                FilterTypesSaved/** saved */ ,
                FilterTypesNotSaved/** not saved */ ,
                FilterTypesDeleted/** deleted */ 
            };

            private: ConnectionFinderBuilderImpl * m_connectionfinderbuilder_impl;
            private: friend class  _ConnectionFinderBuilderBuilder;
            protected: ConnectionFinderBuilder();
            public: ~ConnectionFinderBuilder();
            /**Returns  the filter values to contol Save All processing. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::ConnectionFinderBuilder::FilterTypes Filter
            (
            );
            /**Sets  the filter values to contol Save All processing. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetFilter
            (
                NXOpen::Weld::ConnectionFinderBuilder::FilterTypes filter /** filter */ 
            );
            /**Returns  the option to list the search results according to the feature sets that the specified weld point belongs to. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ListFeatureSet
            (
            );
            /**Sets  the option to list the search results according to the feature sets that the specified weld point belongs to. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetListFeatureSet
            (
                bool listFeatureSet /** listfeatureset */ 
            );
            /** Reorders a selected face by putting it before the specified face. Indices start at 0 for the 1st element. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReorderBeforeFaceNode
            (
                NXOpen::NXObject * parentTag /** Parent Weld Feature. */,
                int faceSetIndexToMove /** Index of the face set to reorder */,
                int faceSetIndexToReoderBefore /** Index of the face set to reposition before */
            );
            /** Reorders a selected face by putting it after the specified face. Indices start at 0 for the 1st element. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReorderAfterFaceNode
            (
                NXOpen::NXObject * parentTag /** Parent Weld Feature. */,
                int faceSetIndexToMove /** Index of the face set to reorder */,
                int faceSetIndexToReoderAfter /** Index of the face set to reposition after */
            );
            /** Adjusts the display of the part and fits the selected weld points in the center of the graphics window. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void CenterNode
            (
                NXOpen::NXObject * nodeTag /** Weld Feature. */
            );
            /**Returns  the faces to use when the reassign button is invoked. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ReassignFace
            (
            );
            /** Deletes the connected part information from the results. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void DeleteNode
            (
                NXOpen::NXObject * nodeTag /** Weld Feature */
            );
            /** Identify all the connected part information as "saved" so the commit will save the information. Dependent on value of @link NXOpen::Weld::ConnectionFinderBuilder::FilterTypes NXOpen::Weld::ConnectionFinderBuilder::FilterTypes@endlink . Will not mark nodes identified in failure condition. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SaveAllTree
            (
            );
            /** Clears the tree list and allows you to perform another search. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ClearAllTree
            (
            );
            /** Identify the connected part information as "saved" so commit will save the information. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SaveNode
            (
                NXOpen::NXObject * nodeTag /** Weld Feature. */
            );
            /** Reassign the faces from the Reassign Face collector to the specified node. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReassignFaceNode
            (
                NXOpen::NXObject * ownerTag /** Weld Feature Set or Feature Point. */,
                NXOpen::NXObject * nodeTag /** Face, or collector, identify which faces to modify in set or point. */
            );
            /** Unmarks (removes save or delete mark) the weld feature from processing. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ClearMarking
            (
                NXOpen::NXObject * nodeTag /** Weld Feature. */
            );
            /**Returns  the option to update the coordinate system for the node from the obtained reconnection when saved. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool UpdateCoordinateSystem
            (
            );
            /**Sets  the option to update the coordinate system for the node from the obtained reconnection when saved. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetUpdateCoordinateSystem
            (
                bool updateCoordinateSystem /** updatecoordinatesystem */ 
            );
            /** Identify if the face collector for a specific weld object and index has faces assigned to it. Search will be limited by the list feature set setting. An error will be returned if the face node cannot be found or the collector is missing. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsFaceNodeEmpty
            (
                NXOpen::NXObject * weldObject /** Specific weld feature set or point to search for. */,
                int faceNodeIndex /** Specific position index to look for in the weld object. */
            );
            /** Get the face collector for a specific weld object and index. This is useful when the face node for the object is empty and you need to populate it. Search will be limited by the list feature set setting.  @return  Can return NULL if not found. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * GetFaceNodeCollector
            (
                NXOpen::NXObject * weldObject /** Specific weld feature set or point to search for. */,
                int faceNodeIndex /** Specific position index to look for in the weld object. */
            );
            /** Reorders a selected edge by putting it before the specified edge. Indices start at 0 for the 1st element. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReorderBeforeEdgeNode
            (
                NXOpen::NXObject * parentTag /** Parent Weld Feature. */,
                int edgeSetIndexToMove /** Index of the edge set to reorder */,
                int edgeSetIndexToReoderBefore /** Index of the edge set to reposition before */
            );
            /** Reorders a selected edge by putting it after the specified edge. Indices start at 0 for the 1st element. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReorderAfterEdgeNode
            (
                NXOpen::NXObject * parentTag /** Parent Weld Feature. */,
                int edgeSetIndexToMove /** Index of the edge set to reorder */,
                int edgeSetIndexToReoderAfter /** Index of the edge set to reposition after */
            );
            /**Returns  the edges to use when the reassign button is invoked. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ReassignEdge
            (
            );
            /** Reassign the edges from the Reassign Edge collector to the specified node. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void ReassignEdgeNode
            (
                NXOpen::NXObject * ownerTag /** Weld Feature Set or Feature Point. */,
                NXOpen::NXObject * nodeTag /** Edge, or collector, identify which edges to modify in set or point. */
            );
            /** Identify if the edge collector for a specific weld object and index has edges assigned to it. Search will be limited by the list feature set setting. An error will be returned if the edge node cannot be found or the collector is missing. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsEdgeNodeEmpty
            (
                NXOpen::NXObject * weldObject /** Specific weld feature set or point to search for. */,
                int edgeNodeIndex /** Specific position index to look for in the weld object. */
            );
            /** Get the edge collector for a specific weld object and index. This is useful when the edge node for the object is empty and you need to populate it. Search will be limited by the list feature set setting.  @return  Can return NULL if not found. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * GetEdgeNodeCollector
            (
                NXOpen::NXObject * weldObject /** Specific weld feature set or point to search for. */,
                int edgeNodeIndex /** Specific position index to look for in the weld object. */
            );
            /** Identify if the face node is required (true) or optional (false). This is used in the case where a weld point has been identified as having faces from only 1 connected part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void RequiredFaceNode
            (
                NXOpen::NXObject * nodeTag /** Weld face identifier. Typically, this will be the tag for the collector. */,
                bool isRequired /** Is the face node required (true) or optional (false)? */
            );
            /** Get the face collectors for the given feature set or point depending on the @link NXOpen::Weld::ConnectionFinderBuilder::ListFeatureSet NXOpen::Weld::ConnectionFinderBuilder::ListFeatureSet@endlink .  @return  Face Collectors. 
             <br>  Created in NX10.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::ScCollector *> GetFaces
            (
                NXOpen::NXObject * weldObject /** Specific weld feature set or point to search for. */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
