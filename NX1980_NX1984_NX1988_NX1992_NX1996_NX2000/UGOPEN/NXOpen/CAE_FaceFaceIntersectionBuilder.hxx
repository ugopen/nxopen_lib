#ifndef NXOpen_CAE_FACEFACEINTERSECTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_FACEFACEINTERSECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FaceFaceIntersectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FaceFaceIntersectionBuilder;
    }
    class Builder;
    class Expression;
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _FaceFaceIntersectionBuilderBuilder;
        class FaceFaceIntersectionBuilderImpl;
        /** Builder for creating face face intersection   <br> To create a new instance of this class, use @link NXOpen::CAE::AbstractionManager::CreateFaceFaceIntersectionBuilder  NXOpen::CAE::AbstractionManager::CreateFaceFaceIntersectionBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FaceFaceIntersectionBuilder : public NXOpen::Builder
        {
            private: FaceFaceIntersectionBuilderImpl * m_facefaceintersectionbuilder_impl;
            private: friend class  _FaceFaceIntersectionBuilderBuilder;
            protected: FaceFaceIntersectionBuilder();
            public: ~FaceFaceIntersectionBuilder();
            /**Returns  the geom selection for FaceFaceIntersection
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * GeomSelection
            (
            );
            /**Returns  the stitch toggle state 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: bool StitchToggle
            (
            );
            /**Sets  the stitch toggle state 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetStitchToggle
            (
                bool stitchOption /** stitchoption */ 
            );
            /**Returns  the snap distance 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * SnapDistance
            (
            );
            /**Sets  the snap distance 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSnapDistance
            (
                NXOpen::Expression * expSnapDistance /** expsnapdistance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
