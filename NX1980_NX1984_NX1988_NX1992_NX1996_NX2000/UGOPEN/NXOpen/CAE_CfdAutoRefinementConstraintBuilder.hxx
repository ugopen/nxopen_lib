#ifndef NXOpen_CAE_CFDAUTOREFINEMENTCONSTRAINTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_CFDAUTOREFINEMENTCONSTRAINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CfdAutoRefinementConstraintBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CfdAutoRefinementConstraintBuilder;
    }
    class Builder;
    class Expression;
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _CfdAutoRefinementConstraintBuilderBuilder;
        class CfdAutoRefinementConstraintBuilderImpl;
        /** Represents a @link NXOpen::CAE::CfdAutoRefinementConstraint NXOpen::CAE::CfdAutoRefinementConstraint@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::CAE::CfdAutoRefinementConstraintCollection::CreateBuilder  NXOpen::CAE::CfdAutoRefinementConstraintCollection::CreateBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CfdAutoRefinementConstraintBuilder : public NXOpen::Builder
        {
            /** The sizing option */
            public: enum Sizing
            {
                SizingRelativeRefinement/** Set relative refinement through local subdivisions */,
                SizingRelativeCoarsening/** Set relative coarsening through local subdivisions */,
                SizingAbsolute/** Set aboslute resolution */
            };

            /** The maximum local subdivision */
            public: enum LocalSubdivisions
            {
                LocalSubdivisionsZero/** No local subdivision */,
                LocalSubdivisionsOne/** One level of subdivision */,
                LocalSubdivisionsTwo/** Two levels of subdivision */,
                LocalSubdivisionsThree/** Three levels of subdivision */,
                LocalSubdivisionsFour/** Four levels of subdivision */,
                LocalSubdivisionsFive/** Five levels of subdivision */
            };

            /** The priority level */
            public: enum Priority
            {
                PriorityLow/** Low priority */,
                PriorityMedium/** Medium priority */,
                PriorityHigh/** High priority */
            };

            private: CfdAutoRefinementConstraintBuilderImpl * m_cfdautorefinementconstraintbuilder_impl;
            private: friend class  _CfdAutoRefinementConstraintBuilderBuilder;
            protected: CfdAutoRefinementConstraintBuilder();
            public: ~CfdAutoRefinementConstraintBuilder();
            /**Returns  the name of the constraint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NameString
            (
            );
            /**Sets  the name of the constraint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            public: void SetNameString
            (
                const NXString & nameString /** namestring */ 
            );
            /**Sets  the name of the constraint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            void SetNameString
            (
                const char * nameString /** namestring */ 
            );
            /**Returns  the list of selected objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * SelectObject
            (
            );
            /**Returns  the sizing option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CfdAutoRefinementConstraintBuilder::Sizing SizingOption
            (
            );
            /**Sets  the sizing option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            public: void SetSizingOption
            (
                NXOpen::CAE::CfdAutoRefinementConstraintBuilder::Sizing sizingOption /** sizingoption */ 
            );
            /**Returns  the maximum local subdivision 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CfdAutoRefinementConstraintBuilder::LocalSubdivisions LocalSubdivision
            (
            );
            /**Sets  the maximum local subdivision 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            public: void SetLocalSubdivision
            (
                NXOpen::CAE::CfdAutoRefinementConstraintBuilder::LocalSubdivisions localSubdivision /** localsubdivision */ 
            );
            /**Returns  the minimum local resolution 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * LocalResolution
            (
            );
            /**Returns  the priority level 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::CfdAutoRefinementConstraintBuilder::Priority PriorityLevel
            (
            );
            /**Sets  the priority level 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") OR sc_acou_meshing (" SC Acoustic Meshing") */
            public: void SetPriorityLevel
            (
                NXOpen::CAE::CfdAutoRefinementConstraintBuilder::Priority priorityLevel /** prioritylevel */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
