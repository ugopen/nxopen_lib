#ifndef NXOpen_CAE_XYPLOT_PREFERENCE_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_PREFERENCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_Preference.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_DataManager.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class Preference;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class _PreferenceBuilder;
            class PreferenceImpl;
            /** Manages the preference data.  <br> Not support KF.  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Preference : public NXOpen::TaggedObject
            {
                /** Defines the target graphic window type */
                public: enum TargetGraphicWindowOption
                {
                    TargetGraphicWindowOptionMain/** Only shows plot graph on main graphic window */,
                    TargetGraphicWindowOptionSeparate/** Only shows plot graph on a separate graphic window */,
                    TargetGraphicWindowOptionBoth/** Shows plot graph on either main graphic window or a separate graphic window */
                };

                /** Defines whether to always show plot graph on a new separate graphic window */
                public: enum NewWindowChoice
                {
                    NewWindowChoicePrompt/** Prompts user to show plot graph on either an existing or a new separate graphic window */,
                    NewWindowChoiceAlways/** Always show plot graph on a new separate graphic window */
                };

                private: PreferenceImpl * m_preference_impl;
                private: friend class  _PreferenceBuilder;
                protected: Preference();
                public: ~Preference();
                /**Returns  the target window setting value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::Preference::TargetGraphicWindowOption TargetWindowSetting
                (
                );
                /**Sets  the target window setting value 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetTargetWindowSetting
                (
                    NXOpen::CAE::Xyplot::Preference::TargetGraphicWindowOption targetWindowSetting /** targetwindowsetting */ 
                );
                /**Returns  the new window setting value. Avaliable when @link CAE::Xyplot::Preference::TargetWindowSetting CAE::Xyplot::Preference::TargetWindowSetting@endlink 
                                is @link CAE::Xyplot::Preference::TargetGraphicWindowOptionSeparate CAE::Xyplot::Preference::TargetGraphicWindowOptionSeparate@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::Preference::NewWindowChoice NewWindowSetting
                (
                );
                /**Sets  the new window setting value. Avaliable when @link CAE::Xyplot::Preference::TargetWindowSetting CAE::Xyplot::Preference::TargetWindowSetting@endlink 
                                is @link CAE::Xyplot::Preference::TargetGraphicWindowOptionSeparate CAE::Xyplot::Preference::TargetGraphicWindowOptionSeparate@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetNewWindowSetting
                (
                    NXOpen::CAE::Xyplot::Preference::NewWindowChoice newWindowSetting /** New window setting */
                );
                /**Returns  the maximum sub-graph count in a stacked graph  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaximumSubGraphsInStack
                (
                );
                /**Sets  the maximum sub-graph count in a stacked graph  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMaximumSubGraphsInStack
                (
                    int graphCount /** The maximum sub-graph count */
                );
                /**Returns  the maximum displayable row count in a matrix plot. The row count must be greater than 0  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaximumDisplayableRowsInMatrix
                (
                );
                /**Sets  the maximum displayable row count in a matrix plot. The row count must be greater than 0  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMaximumDisplayableRowsInMatrix
                (
                    int rowCount /** The maximum displayable row count */
                );
                /**Returns  the maximum displayable column count in a matrix plot. The column count must be greater than 0  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaximumDisplayableColumnsInMatrix
                (
                );
                /**Sets  the maximum displayable column count in a matrix plot. The column count must be greater than 0  
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMaximumDisplayableColumnsInMatrix
                (
                    int columnCount /** The maximum displayable column count */
                );
                /**Returns  the Z value type for afu record in 3D plot 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::DataManager::AfuRecordZValue AfuRecordZValue
                (
                );
                /**Sets  the Z value type for afu record in 3D plot 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAfuRecordZValue
                (
                    NXOpen::CAE::FTK::DataManager::AfuRecordZValue afuZValue /** The 3D afu record z value */
                );
                /** Saves preference settings to memory file so that preference setting could be shared among sessions 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void Save
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
