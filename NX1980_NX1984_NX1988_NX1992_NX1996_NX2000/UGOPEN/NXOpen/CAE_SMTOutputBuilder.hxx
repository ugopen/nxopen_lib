#ifndef NXOpen_CAE_SMTOUTPUTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SMTOUTPUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SMTOutputBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SMTOutputBuilder;
    }
    class Builder;
    namespace CAE
    {
        class BaseIteration;
    }
    namespace CAE
    {
        class BaseLoadcase;
    }
    namespace CAE
    {
        class NodalForceReport;
    }
    namespace CAE
    {
        class _SMTOutputBuilderBuilder;
        class SMTOutputBuilderImpl;
        /** This class exposes the journamation APIs for SMT Dialog functionlaity.  <br> To create a new instance of this class, use @link NXOpen::CAE::SimSolution::CreateSmtOutputBuilder  NXOpen::CAE::SimSolution::CreateSmtOutputBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AxialForceZ </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        BendingMomentX </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        BendingMomentY </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShearForceX </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShearForceY </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        TorqueZ </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SMTOutputBuilder : public NXOpen::Builder
        {
            /** Enumeration for output quantity type used to create SMT Diagrams. */
            public: enum Outsmttype
            {
                OutsmttypeShearForceX/** shear force x */ ,
                OutsmttypeShearForceY/** shear force y */ ,
                OutsmttypeShearForceZ/** shear force z */ ,
                OutsmttypeBendingMomentX/** bending moment x */ ,
                OutsmttypeBendingMomentY/** bending moment y */ ,
                OutsmttypeTorqueZ/** torque z */ 
            };

            private: SMTOutputBuilderImpl * m_smtoutputbuilder_impl;
            private: friend class  _SMTOutputBuilderBuilder;
            protected: SMTOutputBuilder();
            public: ~SMTOutputBuilder();
            /** Sets candidate NFR tag list to the smt output builder for SMT Diagrams creation. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNfrList
            (
                const std::vector<NXOpen::CAE::NodalForceReport *> & nfrList /** nfr list */ 
            );
            /**Returns  a property that returns group name prefix string. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GraphNamePrefix
            (
            );
            /**Sets  a property that returns group name prefix string. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGraphNamePrefix
            (
                const NXString & graphNamePrefix /** graphnameprefix */ 
            );
            /**Sets  a property that returns group name prefix string. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetGraphNamePrefix
            (
                const char * graphNamePrefix /** graphnameprefix */ 
            );
            /**Returns  a property that returns Shear Force in X direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShearForceX
            (
            );
            /**Sets  a property that returns Shear Force in X direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetShearForceX
            (
                bool shearForceX /** shearforcex */ 
            );
            /**Returns  a property that returns the Bending Moment in Y direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool BendingMomentY
            (
            );
            /**Sets  a property that returns the Bending Moment in Y direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBendingMomentY
            (
                bool bendingMomentY /** bendingmomenty */ 
            );
            /**Returns  a property that returns the Shear Force in Y direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShearForceY
            (
            );
            /**Sets  a property that returns the Shear Force in Y direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetShearForceY
            (
                bool shearForceY /** shearforcey */ 
            );
            /**Returns  a property that returns the Axial Force in Z direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool AxialForceZ
            (
            );
            /**Sets  a property that returns the Axial Force in Z direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAxialForceZ
            (
                bool axialForceZ /** axialforcez */ 
            );
            /**Returns  a property that returns the Bending Moment in X direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool BendingMomentX
            (
            );
            /**Sets  a property that returns the Bending Moment in X direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBendingMomentX
            (
                bool bendingMomentX /** bendingmomentx */ 
            );
            /**Returns  a property that returns the Torque in Z direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool TorqueZ
            (
            );
            /**Sets  a property that returns the Torque in Z direction toggle state. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTorqueZ
            (
                bool torqueZ /** torquez */ 
            );
            /**Returns  a property loadcase 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BaseLoadcase * Loadcase
            (
            );
            /**Sets  a property loadcase 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLoadcase
            (
                NXOpen::CAE::BaseLoadcase * loadcase /** loadcase */ 
            );
            /**Returns  a property iteratoin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BaseIteration * Iteration
            (
            );
            /**Sets  a property iteratoin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetIteration
            (
                NXOpen::CAE::BaseIteration * iteration /** iteration */ 
            );
            /**Returns  a property subIteratoin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::BaseIteration * SubIteration
            (
            );
            /**Sets  a property subIteratoin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSubIteration
            (
                NXOpen::CAE::BaseIteration * subIteration /** subiteration */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
