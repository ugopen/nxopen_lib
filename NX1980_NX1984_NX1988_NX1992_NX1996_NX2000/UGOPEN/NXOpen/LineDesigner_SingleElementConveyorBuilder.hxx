#ifndef NXOpen_LINEDESIGNER_SINGLEELEMENTCONVEYORBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_SINGLEELEMENTCONVEYORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_SingleElementConveyorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/KFObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class SingleElementConveyorBuilder;
    }
    class Builder;
    class Direction;
    class KFObject;
    class Point;
    namespace LineDesigner
    {
        class _SingleElementConveyorBuilderBuilder;
        class SingleElementConveyorBuilderImpl;
        /**      <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateSingleElementConveyorBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateSingleElementConveyorBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  SingleElementConveyorBuilder : public NXOpen::Builder
        {
            private: SingleElementConveyorBuilderImpl * m_singleelementconveyorbuilder_impl;
            private: friend class  _SingleElementConveyorBuilderBuilder;
            protected: SingleElementConveyorBuilder();
            public: ~SingleElementConveyorBuilder();
            /**Returns  the point on surface of conveyor are return 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * PointOnConveyingSurface
            (
            );
            /**Sets  the point on surface of conveyor are return 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetPointOnConveyingSurface
            (
                NXOpen::Point * pointOnConveyingSurface /** pointonconveyingsurface */ 
            );
            /**Returns  the first conveying surface corner of conveyor
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * FirstConveyingSurfaceCroner
            (
            );
            /**Sets  the first conveying surface corner of conveyor
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetFirstConveyingSurfaceCroner
            (
                NXOpen::Point * firstConveyingSurfaceCroner /** firstconveyingsurfacecroner */ 
            );
            /**Returns  the second conveying surface corner of conveyor 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * SecondConveyingSurfaceCorner
            (
            );
            /**Sets  the second conveying surface corner of conveyor 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetSecondConveyingSurfaceCorner
            (
                NXOpen::Point * secondConveyingSurfaceCorner /** secondconveyingsurfacecorner */ 
            );
            /**Returns  the kf object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::KFObject * KfObject
            (
            );
            /**Returns  the moving direction of conveyor 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Direction * MovingDirection
            (
            );
            /**Sets  the moving direction of conveyor 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetMovingDirection
            (
                NXOpen::Direction * dirVector /** dirvector */ 
            );
            /**Returns  the option to check whether conveyor is reversible 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool Reversible
            (
            );
            /**Sets  the option to check whether conveyor is reversible 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetReversible
            (
                bool reversible /** reversible */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
