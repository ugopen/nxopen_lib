#ifndef NXOpen_ANNOTATIONS_BASEFRAMEBARBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BASEFRAMEBARBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BaseFrameBarBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_OriginBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class BaseFrameBarBuilder;
    }
    namespace Annotations
    {
        class BaseFrameBar;
    }
    namespace Annotations
    {
        class OriginBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class Builder;
    namespace Drawings
    {
        class SelectDraftingView;
    }
    namespace Annotations
    {
        class _BaseFrameBarBuilderBuilder;
        class BaseFrameBarBuilderImpl;
        /**
            Represents a @link NXOpen::Annotations::BaseFrameBarBuilder NXOpen::Annotations::BaseFrameBarBuilder@endlink .
            This class allows to create frame bar annotation
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  BaseFrameBarBuilder : public NXOpen::Builder
        {
            /** Enum for Ship Axis This is used by @link NXOpen::Annotations::BaseFrameBarBuilder::Axis NXOpen::Annotations::BaseFrameBarBuilder::Axis@endlink  
                    and @link NXOpen::Annotations::BaseFrameBarBuilder::SetAxis NXOpen::Annotations::BaseFrameBarBuilder::SetAxis@endlink  to get/set the axis for a frame bar*/
            public: enum AxisType
            {
                AxisTypeX/** Ship X Axis */,
                AxisTypeY/** Ship Y Axis */,
                AxisTypeZ/** Ship Z Axis */,
                AxisTypeAlongHull/** Ship Along_Hull for Z Axis */
            };

            /** Enum for Ship Axis This is used by @link NXOpen::Annotations::BaseFrameBarBuilder::OriginType NXOpen::Annotations::BaseFrameBarBuilder::OriginType@endlink  
                    and @link NXOpen::Annotations::BaseFrameBarBuilder::SetOriginType NXOpen::Annotations::BaseFrameBarBuilder::SetOriginType@endlink  to get/set the axis for a frame bar*/
            public: enum OriginOption
            {
                OriginOptionSpecifyPosition/** Specify Position */,
                OriginOptionDistance/** Distance to Boundary */
            };

            /** Enum for Ship Axis This is used by @link NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPosition NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPosition@endlink  
                    and @link NXOpen::Annotations::BaseFrameBarBuilder::SetHorizontalPosition NXOpen::Annotations::BaseFrameBarBuilder::SetHorizontalPosition@endlink  to get/set the axis for a frame bar*/
            public: enum HorizontalPositionType
            {
                HorizontalPositionTypeAbove/** The frame bar is above the view boundary */,
                HorizontalPositionTypeShipCenter/** The frame bar is at the ship center */,
                HorizontalPositionTypeViewCenter/** The frame bar is at the view center*/,
                HorizontalPositionTypeBelow/** The frame bar is below the view boundary */
            };

            /** Enum for Ship Axis This is used by @link NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPosition NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPosition@endlink  
                    and @link NXOpen::Annotations::BaseFrameBarBuilder::SetHorizontalPosition NXOpen::Annotations::BaseFrameBarBuilder::SetHorizontalPosition@endlink  to get/set the axis for a frame bar*/
            public: enum VerticalPositionType
            {
                VerticalPositionTypeLeft/** The frame bar is at left of the view boundary */,
                VerticalPositionTypeShipCenter/** The frame bar is at the ship center */,
                VerticalPositionTypeViewCenter/** The frame bar is at the view center*/,
                VerticalPositionTypeRight/** The frame bar is at right of the view boundary */
            };

            private: BaseFrameBarBuilderImpl * m_baseframebarbuilder_impl;
            private: friend class  _BaseFrameBarBuilderBuilder;
            protected: BaseFrameBarBuilder();
            public: ~BaseFrameBarBuilder();
            /**Returns  the select view 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::SelectDraftingView * View
            (
            );
            /**Returns  the origin 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::OriginBuilder * Origin
            (
            );
            /** This function is used to update framebar from Concept model 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void UpdateFromConceptModel
            (
            );
            /**Returns  the axis 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BaseFrameBarBuilder::AxisType Axis
            (
            );
            /**Sets  the axis 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetAxis
            (
                NXOpen::Annotations::BaseFrameBarBuilder::AxisType axis /** axis */ 
            );
            /**Returns  the aft perpendicular 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool AftPerpendicular
            (
            );
            /**Sets  the aft perpendicular 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetAftPerpendicular
            (
                bool aftPerpendicular /** aftperpendicular */ 
            );
            /**Returns  the forward perpendicular 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ForwardPerpendicular
            (
            );
            /**Sets  the forward perpendicular 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetForwardPerpendicular
            (
                bool forwardPerpendicular /** forwardperpendicular */ 
            );
            /**Returns  the transverse frames 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool TransverseFrames
            (
            );
            /**Sets  the transverse frames 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetTransverseFrames
            (
                bool transverseFrames /** transverseframes */ 
            );
            /**Returns  the inter transverse frames 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool InterTransverseFrames
            (
            );
            /**Sets  the inter transverse frames 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetInterTransverseFrames
            (
                bool interTransverseFrames /** intertransverseframes */ 
            );
            /**Returns  the transveral insert area 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool TransveralInsertArea
            (
            );
            /**Sets  the transveral insert area 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetTransveralInsertArea
            (
                bool transveralInsertArea /** transveralinsertarea */ 
            );
            /**Returns  the bulk heads 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool BulkHeads
            (
            );
            /**Sets  the bulk heads 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetBulkHeads
            (
                bool bulkHeads /** bulkheads */ 
            );
            /**Returns  the centerline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Centerline
            (
            );
            /**Sets  the centerline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetCenterline
            (
                bool centerline /** centerline */ 
            );
            /**Returns  the longitudinal yframes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool LongitudinalYFrames
            (
            );
            /**Sets  the longitudinal yframes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetLongitudinalYFrames
            (
                bool longitudinalYFrames /** longitudinalyframes */ 
            );
            /**Returns  the baseline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Baseline
            (
            );
            /**Sets  the baseline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetBaseline
            (
                bool baseline /** baseline */ 
            );
            /**Returns  the waterline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Waterline
            (
            );
            /**Sets  the waterline 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetWaterline
            (
                bool waterline /** waterline */ 
            );
            /**Returns  the longitudinal zframes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool LongitudinalZFrames
            (
            );
            /**Sets  the longitudinal zframes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetLongitudinalZFrames
            (
                bool longitudinalZFrames /** longitudinalzframes */ 
            );
            /**Returns  the decks 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Decks
            (
            );
            /**Sets  the decks 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetDecks
            (
                bool decks /** decks */ 
            );
            /** This function is used to reverse tics on the framebar 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void ReverseTics
            (
            );
            /**Returns  the style 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );
            /** Creates frame bar object 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void CreateFrameBarObject
            (
            );
            /** The frame bar  @return  The frame bar 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BaseFrameBar * GetFramebar
            (
            );
            /** Updates frame bar object as per style 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void UpdateFrameBarFromStyle
            (
            );
            /** This function is used to reverse along hull side 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void ReverseAlongHullSide
            (
            );
            /** This function is used to delete frame bar 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void DeleteFrameBarObject
            (
            );
            /**Returns  the origin type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BaseFrameBarBuilder::OriginOption OriginType
            (
            );
            /**Sets  the origin type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetOriginType
            (
                NXOpen::Annotations::BaseFrameBarBuilder::OriginOption originType /** origintype */ 
            );
            /**Returns  the horizontal position 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPositionType HorizontalPosition
            (
            );
            /**Sets  the horizontal position 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetHorizontalPosition
            (
                NXOpen::Annotations::BaseFrameBarBuilder::HorizontalPositionType horizontalPosition /** horizontalposition */ 
            );
            /**Returns  the horizontal distance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double HorizontalDistance
            (
            );
            /**Sets  the horizontal distance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetHorizontalDistance
            (
                double horizontalDistance /** horizontaldistance */ 
            );
            /**Returns  the vertical position 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BaseFrameBarBuilder::VerticalPositionType VerticalPosition
            (
            );
            /**Sets  the vertical position 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetVerticalPosition
            (
                NXOpen::Annotations::BaseFrameBarBuilder::VerticalPositionType verticalPosition /** verticalposition */ 
            );
            /**Returns  the vertical distance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double VerticalDistance
            (
            );
            /**Sets  the vertical distance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
            public: void SetVerticalDistance
            (
                double verticalDistance /** verticaldistance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
