#ifndef NXOpen_MFG_AM_PROFILELIBRARY_HXX_INCLUDED
#define NXOpen_MFG_AM_PROFILELIBRARY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_ProfileLibrary.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_Library.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class ProfileLibrary;
        }
    }
    class INXObject;
    namespace Mfg
    {
        namespace AM
        {
            class Library;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class Profile;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class SupportProfile;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class _ProfileLibraryBuilder;
            class ProfileLibraryImpl;
            /** Interface for Services Profile Library objects  <br> To obtain an instance of this class use @link NXOpen::Mfg::AM::ApplicationManager NXOpen::Mfg::AM::ApplicationManager@endlink .  <br> 
             <br>  Created in NX11.0.2.  <br>  
            */
            class MFGAMOPENCPPEXPORT  ProfileLibrary : public NXOpen::Mfg::AM::Library
            {
                private: ProfileLibraryImpl * m_profilelibrary_impl;
                private: friend class  _ProfileLibraryBuilder;
                protected: ProfileLibrary();
                public: ~ProfileLibrary();
                /** Remove a Library component from the Profile Library
                 <br>  @deprecated Deprecated in NX1953.0.0.  Profiles do not contain other profiles anymore <br>  

                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Profiles do not contain other profiles anymore") void DeleteLibraryFolder
                (
                    NXOpen::Mfg::AM::ProfileLibrary * pChildProfileLib /** the folder to be removed */
                );
                /** Remove a Profile component from the Profile Library
                 <br>  @deprecated Deprecated in NX1953.0.0.  Use @link Remove Remove@endlink  instead. <br>  

                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use Remove instead.") void DeleteProfile
                (
                    NXOpen::Mfg::AM::Profile * pChildProfile /** the component to be removed */
                );
                /** Adds a profile to the library  @return  the new support profile 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: NXOpen::Mfg::AM::SupportProfile * AddSupportProfile
                (
                );
                /** Gets the children Profile Objects of the Profile Library  @return  the profiles 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::AM::SupportProfile *> GetSupportProfiles
                (
                );
                /** Remove a support profile
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: void Remove
                (
                    NXOpen::Mfg::AM::SupportProfile * profile /** the support profile to be removed */
                );
                /** Find a profile by its recorded id @return  Object found, or null if no such partfeature exists.
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::INXObject * FindObject
                (
                    const NXString & journalIdentifier /** Name of the profile to be found */
                );
                /** Find a profile by its recorded id @return  Object found, or null if no such partfeature exists.
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::INXObject * FindObject
                (
                    const char * journalIdentifier /** Name of the profile to be found */
                );
                /**Returns  the active support profile 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SupportProfile * Active
                (
                );
                /**Sets  the active support profile 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: void SetActive
                (
                    NXOpen::Mfg::AM::SupportProfile * profile /** the active support profile */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
