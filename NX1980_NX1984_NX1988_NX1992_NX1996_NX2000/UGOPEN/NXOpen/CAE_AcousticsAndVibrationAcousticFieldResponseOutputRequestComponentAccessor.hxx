#ifndef NXOpen_CAE_ACOUSTICSANDVIBRATIONACOUSTICFIELDRESPONSEOUTPUTREQUESTCOMPONENTACCESSOR_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICSANDVIBRATIONACOUSTICFIELDRESPONSEOUTPUTREQUESTCOMPONENTACCESSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor;
    }
    class NXObject;
    namespace CAE
    {
        class _AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessorBuilder;
        class AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessorImpl;
        /**
            Builds a @link NXOpen::CAE::AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor NXOpen::CAE::AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor@endlink  object
            
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor : public NXOpen::NXObject
        {
            private: AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessorImpl * m_acousticsandvibrationacousticfieldresponseoutputrequestcomponentaccessor_impl;
            private: friend class  _AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessorBuilder;
            protected: AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor();
            public: ~AcousticsAndVibrationAcousticFieldResponseOutputRequestComponentAccessor();
            /**Returns  the option for functions output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableFunctionsOutput
            (
            );
            /**Sets  the option for functions output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEnableFunctionsOutput
            (
                bool enabled /** enabled */ 
            );
            /**Returns  the option for vectors output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableVectorsOutput
            (
            );
            /**Sets  the option for vectors output 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEnableVectorsOutput
            (
                bool enabled /** enabled */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
