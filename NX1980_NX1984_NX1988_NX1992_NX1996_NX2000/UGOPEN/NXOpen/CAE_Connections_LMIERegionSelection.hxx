#ifndef NXOpen_CAE_CONNECTIONS_LMIEREGIONSELECTION_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_LMIEREGIONSELECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_LMIERegionSelection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_LMIEPid.hxx>
#include <NXOpen/CAE_Connections_LMIESelectionRecipe.hxx>
#include <NXOpen/CAE_Connections_LMIEError.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class LMIERegionSelection;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEError;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIEPid;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class LMIESelectionRecipe;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class _LMIERegionSelectionBuilder;
            class LMIERegionSelectionImpl;
            /**  Region selection.   <br> No creator  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LMIERegionSelection : public NXOpen::CAE::Connections::LMIEError
            {
                private: LMIERegionSelectionImpl * m_lmieregionselection_impl;
                private: friend class  _LMIERegionSelectionBuilder;
                protected: LMIERegionSelection();
                public: ~LMIERegionSelection();
                /** Get the PIDs  @return  The PIDs 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Connections::LMIEPid *> GetPids
                (
                );
                /** Set the PIDs 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetPids
                (
                    const std::vector<NXOpen::CAE::Connections::LMIEPid *> & opt /** The PIDs */
                );
                /** Create a standalone PID  @return  The PID 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIEPid * CreatePid
                (
                );
                /** Get the selection recipes  @return  The selection recipes 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::Connections::LMIESelectionRecipe *> GetSelectionRecipes
                (
                );
                /** Set the selection recipes 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetSelectionRecipes
                (
                    const std::vector<NXOpen::CAE::Connections::LMIESelectionRecipe *> & opt /** The selection recipes */
                );
                /** Create a standalone Selection Recipe  @return  The PID 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Connections::LMIESelectionRecipe * CreateSelectionRecipe
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
