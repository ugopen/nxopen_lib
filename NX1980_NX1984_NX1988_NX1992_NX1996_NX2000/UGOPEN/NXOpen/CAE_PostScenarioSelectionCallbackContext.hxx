#ifndef NXOpen_CAE_POSTSCENARIOSELECTIONCALLBACKCONTEXT_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOSELECTIONCALLBACKCONTEXT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioSelectionCallbackContext.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioMesh.hxx>
#include <NXOpen/CAE_PostScenarioMeshNode.hxx>
#include <NXOpen/CAE_PostScenarioMessageCollector.hxx>
#include <NXOpen/CAE_PostScenarioResultGroupVariable.hxx>
#include <NXOpen/CAE_PostScenarioVariant.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioSelectionCallbackContext;
    }
    namespace CAE
    {
        class PostScenarioMesh;
    }
    namespace CAE
    {
        class PostScenarioMeshNode;
    }
    namespace CAE
    {
        class PostScenarioMessageCollector;
    }
    namespace CAE
    {
        class PostScenarioResultGroupVariable;
    }
    namespace CAE
    {
        class PostScenarioVariant;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioSelectionCallbackContextImpl;
        /**  @brief  This class represents a @link NXOpen::CAE::PostScenarioSelectionCallbackContext NXOpen::CAE::PostScenarioSelectionCallbackContext@endlink .  

           <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioSelectionCallbackContext : public NXOpen::TransientObject
        {
            private: PostScenarioSelectionCallbackContextImpl * m_postscenarioselectioncallbackcontext_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioSelectionCallbackContext(void *ptr);
            /// \endcond 
            /** Dispose of this instance. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioSelectionCallbackContext();
            /**Returns  the @link NXOpen::CAE::PostScenarioMessageCollector NXOpen::CAE::PostScenarioMessageCollector@endlink . Can be NULL. Used for error reporting 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::PostScenarioMessageCollector * MessageCollector
            (
            );
            /**Returns   the @link NXOpen::CAE::PostScenarioResultGroupVariable NXOpen::CAE::PostScenarioResultGroupVariable@endlink  variable for which the selection is overriden, the one the callback was registered to. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioResultGroupVariable * CurrentVariable
            (
            );
            /**Returns   the name of the variable for which the selection is overriden, the one the callback was registered to. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CurrentVariableName
            (
            );
            /** This method returns the current @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  list selection for a certain variable.
                         Note that the current selection might not be resolved just yet and in this case an empty list will be returned.
                         The default selection of variables is resolved in the order of the variable declarations of your scenario.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioVariant *> GetCurrentSelection
            (
                const NXString & variable /** variable */ 
            );
            /** This method returns the current @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  list selection for a certain variable.
                         Note that the current selection might not be resolved just yet and in this case an empty list will be returned.
                         The default selection of variables is resolved in the order of the variable declarations of your scenario.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            std::vector<NXOpen::CAE::PostScenarioVariant *> GetCurrentSelection
            (
                const char * variable /** variable */ 
            );
            /**  This method returns the @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  default value as suggested by the data source.
                         If the variable doesn't have any values the @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  will be null.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioVariant * GetDataSourceDefaultValue
            (
                const NXString & variable /** variable */ 
            );
            /**  This method returns the @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  default value as suggested by the data source.
                         If the variable doesn't have any values the @link NXOpen::CAE::PostScenarioVariant NXOpen::CAE::PostScenarioVariant@endlink  will be null.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAE::PostScenarioVariant * GetDataSourceDefaultValue
            (
                const char * variable /** variable */ 
            );
            /** This method returns the selected meshes of the finite element model as specified in @link CAE::PostScenarioBuilder CAE::PostScenarioBuilder@endlink  in the PostScenarioBuilderSlots more specifically.
                        This will access the data sources and trigger loading the mesh if it was not loaded before.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioMesh *> GetSelectedMeshes
            (
            );
            /** This method returns the mesh nodes for the selected finite element model, as specified in @link CAE::PostScenarioBuilder CAE::PostScenarioBuilder@endlink .
                        These nodes are shared by all selected meshes. This will access the data sources and trigger loading the mesh if it was not loaded before.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioMeshNode *> GetMeshNodes
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
