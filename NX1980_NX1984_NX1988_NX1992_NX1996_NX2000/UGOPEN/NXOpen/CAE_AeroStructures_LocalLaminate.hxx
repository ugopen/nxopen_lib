#ifndef NXOpen_CAE_AEROSTRUCTURES_LOCALLAMINATE_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_LOCALLAMINATE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_LocalLaminate.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_Laminate.hxx>
#include <NXOpen/CAE_AeroStructures_Laminate.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class LocalLaminate;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class Laminate;
        }
    }
    class PhysicalMaterial;
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class LocalLaminateImpl;
            /** Represents a @link NXOpen::CAE::AeroStructures::LocalLaminate NXOpen::CAE::AeroStructures::LocalLaminate@endlink  object.  <br> To obtain an instance of this class use CAE.AeroStructures.LaminateHelper  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LocalLaminate : public NXOpen::CAE::AeroStructures::Laminate
            {
                private: LocalLaminateImpl * m_locallaminate_impl;
                /// \cond NX_NO_DOC 
                public: explicit LocalLaminate(void *ptr);
                /// \endcond 
                /** Frees the object from memory.  After this method is called, it is
                            illegal to use the object. In .NET, this method is automatically
                            called when the object is deleted by the garbage collector. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~LocalLaminate();
                /** Top|Middle|Bottom|Specify 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReferencePlane
                (
                    NXOpen::CAE::AeroStructures::Laminate::LamRefLoc location /** location */ 
                );
                /** Set laminate angle 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetLaminateAngle
                (
                    double angle /** angle */ ,
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL use default */
                );
                /** Invert ply angles 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetInverted
                (
                    bool inverted /** inverted */ 
                );
                /** Reverse ply order 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReversed
                (
                    bool reversed /** reversed */ 
                );
                /** Set reference temperature 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReferenceTemperature
                (
                    double temperature /** temperature */ ,
                    NXOpen::Unit * temperatureUnit /** Unit for the temperature value, if NULL use default */
                );
                /** Set bottom fiber distance 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetBottomFiberDistance
                (
                    double distance /** distance */ ,
                    NXOpen::Unit * distanceUnit /** Unit for the distance value, if NULL use default */
                );
                /** Set the Physical Material for the ply 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetPlyMaterial
                (
                    int plyIndex /** plyindex */ ,
                    NXOpen::PhysicalMaterial * material /** material */ 
                );
                /** Set the Material for the ply by name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetPlyMaterialByName
                (
                    int plyIndex /** plyindex */ ,
                    const NXString & materialName /** materialname */ 
                );
                /** Set the Material for the ply by name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetPlyMaterialByName
                (
                    int plyIndex /** plyindex */ ,
                    const char * materialName /** materialname */ 
                );
                /** Set the angle for the ply 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetPlyAngle
                (
                    int plyIndex /** plyindex */ ,
                    double angle /** angle */ ,
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL use default */
                );
                /** Set the thickness for the ply 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetPlyThickness
                (
                    int plyIndex /** plyindex */ ,
                    double thickness /** thickness */ ,
                    NXOpen::Unit * thicknessUnit /** Unit for the thickness value, if NULL use default */
                );
                /** Add a ply to the laminate. Always added to the end of the original
                            stack. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: int AddPly
                (
                    NXOpen::PhysicalMaterial * material /** material */ ,
                    double thickness /** thickness */ ,
                    NXOpen::Unit * thicknessUnit /** Unit for the thickness value, if NULL use default */,
                    double angle /** angle */ ,
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL use default */
                );
                /** Add a ply to the laminate using a material name. Always added to
                            the end of the original stack. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: int AddPlyByMaterialName
                (
                    const NXString & materialName /** materialname */ ,
                    double thickness /** thickness */ ,
                    NXOpen::Unit * thicknessUnit /** Unit for the thickness value, if NULL use default */,
                    double angle /** angle */ ,
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL use default */
                );
                /** Add a ply to the laminate using a material name. Always added to
                            the end of the original stack. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                int AddPlyByMaterialName
                (
                    const char * materialName /** materialname */ ,
                    double thickness /** thickness */ ,
                    NXOpen::Unit * thicknessUnit /** Unit for the thickness value, if NULL use default */,
                    double angle /** angle */ ,
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL use default */
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
