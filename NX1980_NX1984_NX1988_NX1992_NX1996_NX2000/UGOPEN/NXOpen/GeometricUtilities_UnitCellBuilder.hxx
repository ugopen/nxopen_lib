#ifndef NXOpen_GEOMETRICUTILITIES_UNITCELLBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_UNITCELLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_UnitCellBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class UnitCellBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class ScCollector;
    namespace GeometricUtilities
    {
        class _UnitCellBuilderBuilder;
        class UnitCellBuilderImpl;
        /**Represents a GeometricUtilities.UnitCellBuilder
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  UnitCellBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Determines the Unit Cell type for Lattice creation */
            public: enum UnitCellType
            {
                UnitCellTypeBiTriangle/** bi triangle */ ,
                UnitCellTypeTriDiametral/** tri diametral */ ,
                UnitCellTypeTriDiametralChevron/** tri diametral chevron */ ,
                UnitCellTypeQuadDiametral/** quad diametral */ ,
                UnitCellTypeQuadDiametralLine/** quad diametral line */ ,
                UnitCellTypeQuadDiametralCross/** quad diametral cross */ ,
                UnitCellTypeDodecahedron/** dodecahedron */ ,
                UnitCellTypeStar/** star */ ,
                UnitCellTypeHexStar/** hex star */ ,
                UnitCellTypePseudoSierpinski/** pseudo sierpinski */ ,
                UnitCellTypeHexVase/** hex vase */ ,
                UnitCellTypeHexVaseMod/** hex vase mod */ ,
                UnitCellTypeCubeplex/** cubeplex */ ,
                UnitCellTypeOctapeak/** octapeak */ ,
                UnitCellTypeOctahedroid/** octahedroid */ ,
                UnitCellTypeFromFile/** from file */ ,
                UnitCellTypeFromPart/** from part */ 
            };

            private: UnitCellBuilderImpl * m_unitcellbuilder_impl;
            private: friend class  _UnitCellBuilderBuilder;
            protected: UnitCellBuilder();
            public: ~UnitCellBuilder();
            /**Returns  @brief the name of the unit cell type. 

              
                       
                       Currently there are 15 valid unit cells that are 
                       supported in NX. Their name strings are: 
                       <ul>
                       <li>BiTriangle</li> 
                       <li>Cubeplex</li>
                       <li>Dodecahedron</li>
                       <li>HexStar</li>
                       <li>HexVase</li>
                       <li>HexVaseMod</li>
                       <li>Octapeak</li> 
                       <li>Octahedroid</li> 
                       <li>PseudoSierpinski</li>
                       <li>QuadDiametral</li>
                       <li>QuadDiametralCross</li>
                       <li>QuadDiametralLine</li>
                       <li>Star</li> 
                       <li>TriDiametral</li>
                       <li>TriDiametralChevron</li>
                       </ul>
                       
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CellTypeName
            (
            );
            /**Sets  @brief the name of the unit cell type. 

              
                       
                       Currently there are 15 valid unit cells that are 
                       supported in NX. Their name strings are: 
                       <ul>
                       <li>BiTriangle</li> 
                       <li>Cubeplex</li>
                       <li>Dodecahedron</li>
                       <li>HexStar</li>
                       <li>HexVase</li>
                       <li>HexVaseMod</li>
                       <li>Octapeak</li> 
                       <li>Octahedroid</li> 
                       <li>PseudoSierpinski</li>
                       <li>QuadDiametral</li>
                       <li>QuadDiametralCross</li>
                       <li>QuadDiametralLine</li>
                       <li>Star</li> 
                       <li>TriDiametral</li>
                       <li>TriDiametralChevron</li>
                       </ul>
                       
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCellTypeName
            (
                const NXString & cellTypeName /** celltypename */ 
            );
            /**Sets  @brief the name of the unit cell type. 

              
                       
                       Currently there are 15 valid unit cells that are 
                       supported in NX. Their name strings are: 
                       <ul>
                       <li>BiTriangle</li> 
                       <li>Cubeplex</li>
                       <li>Dodecahedron</li>
                       <li>HexStar</li>
                       <li>HexVase</li>
                       <li>HexVaseMod</li>
                       <li>Octapeak</li> 
                       <li>Octahedroid</li> 
                       <li>PseudoSierpinski</li>
                       <li>QuadDiametral</li>
                       <li>QuadDiametralCross</li>
                       <li>QuadDiametralLine</li>
                       <li>Star</li> 
                       <li>TriDiametral</li>
                       <li>TriDiametralChevron</li>
                       </ul>
                       
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            void SetCellTypeName
            (
                const char * cellTypeName /** celltypename */ 
            );
            /**Returns  the unit cell type
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::UnitCellBuilder::UnitCellType CellType
            (
            );
            /**Sets  the unit cell type
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCellType
            (
                NXOpen::GeometricUtilities::UnitCellBuilder::UnitCellType cellType /** celltype */ 
            );
            /**Returns the sheet or solid body that define the seed body for body lattice type.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * UnitCellBody
            (
            );
            /**Returns whether the unit cell bounding box is a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsUniformCube
            (
            );
            /**Sets whether the unit cell bounding box is a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetUniformCube
            (
                bool uniformCube /** uniformcube */ 
            );
            /**Returns  the edge length of the unit cell bounding box, 
                         and effective only when the bounding box is a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EdgeLength
            (
            );
            /**Returns the size of the unit cell bounding box in x axis, 
                         and effective only when the bounding box is not a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeX
            (
            );
            /**Returns the size of the unit cell bounding box in y axis, 
                         and effective only when the bounding box is not a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeY
            (
            );
            /**Returns  the size of the unit cell bounding box in z axis, 
                         and effective only when the bounding box is not a uniform cube
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeZ
            (
            );
            /**Returns  the native file browser0 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CustomUnitCellFile
            (
            );
            /**Sets  the native file browser0 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            public: void SetCustomUnitCellFile
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the native file browser0 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_lattice_base (" NX Lattice Base") */
            void SetCustomUnitCellFile
            (
                const char * filename /** filename */ 
            );
            /**Returns  the approximate size of hexaherdal mesh element
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ApproximateSourceHexMeshSize
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
