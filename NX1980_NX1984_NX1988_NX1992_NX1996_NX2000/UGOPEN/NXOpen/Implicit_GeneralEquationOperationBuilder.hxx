#ifndef NXOpen_IMPLICIT_GENERALEQUATIONOPERATIONBUILDER_HXX_INCLUDED
#define NXOpen_IMPLICIT_GENERALEQUATIONOPERATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Implicit_GeneralEquationOperationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/ModlUtils_EquationEditorBuilder.hxx>
#include <NXOpen/Implicit_OperationBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_implicit_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Implicit
    {
        class GeneralEquationOperationBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Implicit
    {
        class OperationBuilder;
    }
    namespace ModlUtils
    {
        class EquationEditorBuilder;
    }
    class ScCollector;
    namespace Implicit
    {
        class _GeneralEquationOperationBuilderBuilder;
        class GeneralEquationOperationBuilderImpl;
        /**
            Represents a Implicit.GeneralEquationOperationBuilder.
            It will create an Implicit surfaces derived from given equation in the 3D space.
            The definition of an implicit surface is that a coordinate is located on the surface if the equation results in zero.
             <br> To create a new instance of this class, use @link NXOpen::Implicit::ImplicitOperationCollection::CreateGeneralEquationOperationBuilder  NXOpen::Implicit::ImplicitOperationCollection::CreateGeneralEquationOperationBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BoundaryOption </term> <description> 
         
        CartesianRange </description> </item> 

        <item><term> 
         
        SizeX.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        SizeY.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        SizeZ.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        <item><term> 
         
        Thickness.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        UniformRange </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        UniformSize.Value </term> <description> 
         
        10 (millimeters part), 0.4 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_IMPLICITEXPORT  GeneralEquationOperationBuilder : public NXOpen::Implicit::OperationBuilder
        {
            /** Boundary option */
            public: enum BoundaryOptionsEnum
            {
                BoundaryOptionsEnumCartesianRange/** Cartesian Range */,
                BoundaryOptionsEnumBoundaryBody/** Boundary Body */
            };

            private: GeneralEquationOperationBuilderImpl * m_generalequationoperationbuilder_impl;
            private: friend class  _GeneralEquationOperationBuilderBuilder;
            protected: GeneralEquationOperationBuilder();
            public: ~GeneralEquationOperationBuilder();
            /**Returns  the user expression from whch implicit surface will be created
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ModlUtils::EquationEditorBuilder * UserExpression
            (
            );
            /**Returns  the Boundary Options 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Implicit::GeneralEquationOperationBuilder::BoundaryOptionsEnum BoundaryOption
            (
            );
            /**Sets  the Boundary Options 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_implicit (" NX Implicit Modeling") */
            public: void SetBoundaryOption
            (
                NXOpen::Implicit::GeneralEquationOperationBuilder::BoundaryOptionsEnum boundaryOptions /** boundaryoptions */ 
            );
            /**Returns  the Uniform Flag
                    Uniform boundary range inside which the implicit surface for given equation will be created.
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool UniformRange
            (
            );
            /**Sets  the Uniform Flag
                    Uniform boundary range inside which the implicit surface for given equation will be created.
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_implicit (" NX Implicit Modeling") */
            public: void SetUniformRange
            (
                bool uniform /** uniform */ 
            );
            /**Returns  the Uniform Size
                    Uniform range in X, Y and Z directions.
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * UniformSize
            (
            );
            /**Returns  the Size in X direction 
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeX
            (
            );
            /**Returns  the Size in Y direction
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeY
            (
            );
            /**Returns  the Size in Z direction
                    Range will be centered around the origin.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SizeZ
            (
            );
            /**Returns  the Boundary Body 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * BoundaryBody
            (
            );
            /**Returns  the Location and Orientation
                    locate the origin and orient the CSYS for the equation.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * LocationAndOrientation
            (
            );
            /**Sets  the Location and Orientation
                    locate the origin and orient the CSYS for the equation.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_implicit (" NX Implicit Modeling") */
            public: void SetLocationAndOrientation
            (
                NXOpen::CoordinateSystem * locationAndOrientation /** locationandorientation */ 
            );
            /**Returns  the thickness
                    Thickness to be used for equation surface.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Thickness
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
