#ifndef NXOpen_ANNOTATIONS_TABLECOMMONSORTINGBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_TABLECOMMONSORTINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_TableCommonSortingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class TableCommonSortingBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _TableCommonSortingBuilderBuilder;
        class TableCommonSortingBuilderImpl;
        /**
            Represents a  @brief Annotations.TableCommonSortingBuilder 

         .
            
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  TableCommonSortingBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** The sorting method types */
            public: enum MethodType
            {
                MethodTypeAlphabetic/** Alphabetic */,
                MethodTypeAlphanumeric/** Alphanumeric */,
                MethodTypeManual/** Manual */
            };

            /** The sorting direction */
            public: enum SortingDirection
            {
                SortingDirectionDescending/** Descending sort direction*/,
                SortingDirectionAscending/** Ascending sort direction*/
            };

             /** Sort data used to specify column position and sorting direction */
            public:
            struct SortData
            {
                public: /** Position of column from left to right, starting from 0 */int ColumnPosition;
                public: /** Sorting direction*/NXOpen::Annotations::TableCommonSortingBuilder::SortingDirection SortingDirection;
                public: SortData() :
                    ColumnPosition(),
                    SortingDirection((NXOpen::Annotations::TableCommonSortingBuilder::SortingDirection)0)
                {
                }
                /** Constructor for the SortData struct. */ 
                public: SortData(int columnPositionInitial /** Position of column from left to right, starting from 0 */, 
                        NXOpen::Annotations::TableCommonSortingBuilder::SortingDirection sortingDirectionInitial /** Sorting direction*/) :
                    ColumnPosition(columnPositionInitial),
                    SortingDirection(sortingDirectionInitial)
                {
                }
            };

            private: TableCommonSortingBuilderImpl * m_tablecommonsortingbuilder_impl;
            private: friend class  _TableCommonSortingBuilderBuilder;
            protected: TableCommonSortingBuilder();
            public: ~TableCommonSortingBuilder();
            /**Returns  the sorting method 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::TableCommonSortingBuilder::MethodType Method
            (
            );
            /**Sets  the sorting method 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMethod
            (
                NXOpen::Annotations::TableCommonSortingBuilder::MethodType method /** Sort method*/
            );
            /** Set sorting data. This should be used when @link NXOpen::Annotations::TableCommonSortingBuilder::SetMethod NXOpen::Annotations::TableCommonSortingBuilder::SetMethod@endlink  is
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphabetic NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphabetic@endlink  or 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphanumeric NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphanumeric@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSortingData
            (
                const std::vector<NXOpen::Annotations::TableCommonSortingBuilder::SortData> & sortingData /** Array of sorting data for Alphabetic/Alphanumeric sorting*/
            );
            /** Get sorting data. This should be used when @link NXOpen::Annotations::TableCommonSortingBuilder::Method NXOpen::Annotations::TableCommonSortingBuilder::Method@endlink  is
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphabetic NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphabetic@endlink  or 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphanumeric NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeAlphanumeric@endlink   @return  Array of sorting data for Alphabetic/Alphanumeric sorting
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::TableCommonSortingBuilder::SortData> GetSortingData
            (
            );
            /** Returns manual sort row order. This should be used when 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::Method NXOpen::Annotations::TableCommonSortingBuilder::Method@endlink  is 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeManual NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeManual@endlink . @return  Array of row indices for manual sorting
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<int> GetManualSortRowList
            (
            );
            /** Sets manual sort row order. This should be used when 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::SetMethod NXOpen::Annotations::TableCommonSortingBuilder::SetMethod@endlink  is 
                    @link NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeManual NXOpen::Annotations::TableCommonSortingBuilder::MethodTypeManual@endlink .
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetManualSortRowList
            (
                const std::vector<int> & rowList /** Array of row indices for manual sorting*/
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
