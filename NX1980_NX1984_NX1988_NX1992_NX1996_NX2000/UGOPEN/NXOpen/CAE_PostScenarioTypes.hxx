#ifndef NXOpen_CAE_POSTSCENARIOTYPES_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOTYPES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioTypes.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
         /** A complex number 
         <br>  Created in NX11.0.0.  <br>  
        */

        struct Complex
        {
            public: /** real */ double Real;
            public: /** imag */ double Imag;
            public: Complex() :
                Real(),
                Imag()
            {
            }
            /** Constructor for the Complex struct. */ 
            public: Complex(double realInitial /** real */ , 
                    double imagInitial /** imag */ ) :
                Real(realInitial),
                Imag(imagInitial)
            {
            }
        };

        /** The data type of a CAE.PostScenarioVariant Value */
        enum PostScenarioVariantType
        {
            PostScenarioVariantTypeUnary/** an empty value */,
            PostScenarioVariantTypeBoolean/** a boolean value */,
            PostScenarioVariantTypeInteger/** an integer number */,
            PostScenarioVariantTypeDouble/** a real number */,
            PostScenarioVariantTypeComplex/** a complex number */,
            PostScenarioVariantTypeString/** an ASCII character string */,
            PostScenarioVariantTypeUnicodeString/** a Unicode UTF-8 character string */,
            PostScenarioVariantTypeVector3d/** a 3D vector */,
            PostScenarioVariantTypeComponent/** a component */,
            PostScenarioVariantTypeModeDescription/** a mode number and frequency */,
            PostScenarioVariantTypeWildcard/** a wildcard value */,
            PostScenarioVariantTypeCoordinateSystem/** a local result coordinate system */,
            PostScenarioVariantTypeDoubleDataOnNodesOfElements/** element-nodal data, real */,
            PostScenarioVariantTypeComplexDataOnNodesOfElements/** element-nodal data, real-imaginary */
        };

        /** Components of vectors or tensors. */
        enum PostScenarioVariantComponent
        {
            PostScenarioVariantComponentScalar/** represents that the data is scalar */,
            PostScenarioVariantComponentX/** X component of a 3D vector */,
            PostScenarioVariantComponentY/** Y component of a 3D vector */,
            PostScenarioVariantComponentZ/** Z component of a 3D vector */,
            PostScenarioVariantComponentMagnitude/** the magnitude of a 3D vector */,
            PostScenarioVariantComponentXx/** XX component of a tensor */,
            PostScenarioVariantComponentYy/** YY component of a tensor */,
            PostScenarioVariantComponentZz/** ZZ component of a tensor */,
            PostScenarioVariantComponentXy/** XY component of a tensor */,
            PostScenarioVariantComponentXz/** XZ component of a tensor */,
            PostScenarioVariantComponentYx/** YX component of a tensor */,
            PostScenarioVariantComponentYz/** YZ component of a tensor */,
            PostScenarioVariantComponentZx/** ZX component of a tensor */,
            PostScenarioVariantComponentZy/** ZY component of a tensor */,
            PostScenarioVariantComponentDeterminant/** the determinant of a tensor */,
            PostScenarioVariantComponentMean/** the mean of a tensor */,
            PostScenarioVariantComponentMaxShear/** the max shear of a tensor */,
            PostScenarioVariantComponentMinPrincipal/** the min principal of a tensor */,
            PostScenarioVariantComponentMidPrincipal/** the mid principal of a tensor */,
            PostScenarioVariantComponentMaxPrincipal/** the max principal of a tensor */,
            PostScenarioVariantComponentWorstPrincipal/** the worst principal of a tensor */,
            PostScenarioVariantComponentOctahedral/** the octahedral of a tensor */,
            PostScenarioVariantComponentVonMises/** the von mises of a tensor */,
            PostScenarioVariantComponentAxial/** axial bar/rod force resultant */,
            PostScenarioVariantComponentTorque/** torsional bar/rod force resultant */,
            PostScenarioVariantComponentAxialXx/** Axial XX shell force resultant */,
            PostScenarioVariantComponentShearXy/** Shear XY shell force resultant */,
            PostScenarioVariantComponentShearXz/** Shear XZ shell force resultant */,
            PostScenarioVariantComponentBendingYy/** Bending YY shell force resultant */,
            PostScenarioVariantComponentBendingZz/** Bending ZZ shell force resultant */,
            PostScenarioVariantComponentTorsionXx/** Torsion XX shell force resultant */
        };

         /** Mode description */

        struct PostScenarioModeDescription
        {
            public: /** number */ int Number;
            public: /** frequency */ double Frequency;
            public: PostScenarioModeDescription() :
                Number(),
                Frequency()
            {
            }
            /** Constructor for the PostScenarioModeDescription struct. */ 
            public: PostScenarioModeDescription(int numberInitial /** number */ , 
                    double frequencyInitial /** frequency */ ) :
                Number(numberInitial),
                Frequency(frequencyInitial)
            {
            }
        };

        /** This controls the display behaviour of a @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink  on @link NXOpen::Builder::Commit NXOpen::Builder::Commit@endlink . */
        enum PostScenarioPlotTypes
        {
            PostScenarioPlotTypesReplace/** completely replaces the contents of a viewport with the new @link NXOpen::CAE::PostScenario NXOpen::CAE::PostScenario@endlink  */,
            PostScenarioPlotTypesUpdateScenario/** updates a @link NXOpen::CAE::PostScenario NXOpen::CAE::PostScenario@endlink  that is already displayed */,
            PostScenarioPlotTypesOverlay/** attempts to overlay a @link NXOpen::CAE::PostScenario NXOpen::CAE::PostScenario@endlink  over a viewport that already contains plotted scenarios */
        };

        /** Component Type used in PostScenarioResultGroupBuilder */
        enum PostScenarioComponentType
        {
            PostScenarioComponentTypeScalar/** Scalar */,
            PostScenarioComponentTypeVector/** X, Y, Z */,
            PostScenarioComponentTypeSymmetricTensor/** XX, YY, ZZ, XY, YZ, ZX*/,
            PostScenarioComponentTypeSymmetric2dTensor/** XX, YY, XY */,
            PostScenarioComponentTypePlyTensor/** XX, YY, XY, YZ, ZX*/,
            PostScenarioComponentTypeBeamForce/** AXIAL_XX, SHEAR_XY, SHEAR_XZ */,
            PostScenarioComponentTypeBeamMoment/** BENDING_YY, BENDING_ZZ, TORSION_XX */,
            PostScenarioComponentTypeRodForce/** AXIAL */,
            PostScenarioComponentTypeRodMoment/** TORQUE */,
            PostScenarioComponentTypeBarForce/** AXIAL */,
            PostScenarioComponentTypeBarMoment/** TORQUE */,
            PostScenarioComponentTypeScalarSprinT/** Scalar */,
            PostScenarioComponentTypeVectorSpring/** X, Y, Z */,
            PostScenarioComponentTypeScalar3Components/** X, Y, XY */,
            PostScenarioComponentTypeScalar6Components/** X, Y, Z, XY, YZ, ZX */
        };

        /** Element type describing nodes order used in PostScenarioMeshElement @link NXOpen::CAE::PostScenarioMeshElement NXOpen::CAE::PostScenarioMeshElement@endlink 
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum ElementType
        {
            ElementTypeNode1/** 0D */,
            ElementTypeLine2/** 1D */,
            ElementTypeLine3/** 1D */,
            ElementTypeSpid/** spid */ ,
            ElementTypeSpli/**
                       5  4  3
                        \ | /
                         \|/
                       6--1--2
                         /|\
                        / | \
                       7  8  9
                    Spiders can have a variable number of nodes. The first node shall always be the center node.
                    */,
            ElementTypeTria3/**
                        3
                        |\
                        | \
                        1--2
                    */,
            ElementTypeTria6/**
                        3
                        |\
                        6 5
                        |  \
                        1-4-2
                    */,
            ElementTypeQuad4/**
                        4----3
                        |    |
                        |    |
                        |    |
                        1----2
                    */,
            ElementTypeQuad8/**
                        4--7-3
                        |    |
                        8    6
                        |    |
                        1-5--2
                    */,
            ElementTypeTetr4/**
                            4
                           /|\
                          / | \
                         /  |  \
                        1. .|. .3
                         \  |  /
                          ',|,'
                            2
                    */,
            ElementTypeTetr10/**
                            4
                           /|\
                          / | \
                         8  9  10
                        /   |   \
                       /    |    \
                      1...7.|.....3
                       \    |    /
                        \   |   /
                         5  |  6
                          \ | /
                           \|/
                            2
                    */,
            ElementTypeWedg6/**
                       4-------6
                       |\     /|
                       | ', ,' |
                       |   5   |
                       |   |   |
                       1...|...3
                        \  |  /
                         ',|,'
                           2
                    */,
            ElementTypeWedg15/**
                       4---15--6
                       |\     /|
                       |13, ,14|
                       |   5   | 
                      10   |   12
                       |   |   |
                       |  11   |
                       |   |   |
                       |   |   |
                       1...|9..3
                        \  |  /
                         7,|,8
                           2
                    */,
            ElementTypePyra5/**
                                         5
                                        /|\
                                      /''| `    
                                    ,' / |  '   
                                   /     |   `  
                                 ,'  /   |    ' 
                                /        |    ` 
                              ,'   4 . . |. . .3
                             /   .       |    /
                            /  .         |   /
                          ,' .           |  /
                         /.              | /
                        1----------------2'
                    */,
            ElementTypePyra13/**
                                         5
                                        /|\
                                      /''| `    
                                    ,' / |  '   
                                   /  13 |   `12
                                10'  /   |    ' 
                                /   '    |    ` 
                              ,'   4.....|.8...3
                             /   .       |    /
                            /  .9       11   7
                          ,' .           |  /
                         /.              | /
                        1--------6-------2'
                    */,
            ElementTypeHexa8/**
                            8----------7
                           /.         /|
                          / .        / |
                         /  .       /  |
                        /   .      /   |
                       5----------6    |
                       |    .     |    |
                       |    4. . .| . .3
                       |   .      |   /
                       |  .       |  /
                       | .        | /
                       |.         |/
                       1----------2
                    */,
            ElementTypeHexa20/**
                            8----19----7
                           /.         /|
                         20 .       18 |
                         /  16      /  |
                        /   .      /   15
                       5-----17---6    |
                       |    .     |    |
                       |    4. 11.| . .3
                      13   .      |   /
                       |  12     14  10
                       | .        | /
                       |.         |/
                       1----9-----2
                    */
        };

        /** Return type for the callback @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  of class @link NXOpen::CAE::PostScenarioDescriptorBuilder NXOpen::CAE::PostScenarioDescriptorBuilder@endlink 
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum DataMatchOverrideResult
        {
            DataMatchOverrideResultOverride/** Return this if your @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  callback wants to override the implicit CAE.PostScenarioBuilder defaults */,
            DataMatchOverrideResultUseDefault/** Return this from your @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  callback if you want to keep the implicit CAE.PostScenarioBuilder defaults */
        };

        /** This enum defines the function class for signal processing. It is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioFunctionClass
        {
            PostScenarioFunctionClassUnknown/** unknown */ ,
            PostScenarioFunctionClassSpectrum/** Represents a spectrum */,
            PostScenarioFunctionClassTime/** Represents a transient signal */,
            PostScenarioFunctionClassFrequencyResponseFunctions/** Represents a frequency response function which is a relation between response and excitation. */,
            PostScenarioFunctionClassAutoPower/** Represents the auto-power of a spectrum */,
            PostScenarioFunctionClassCrossPower/** Represents the cross-power between to spectra */,
            PostScenarioFunctionClassPowerSpectralDensity/** Represents the power spectrum density of a signal */
        };

        /** This enum defines the spectrum format for signal processing. Is is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioSpectrumFormat
        {
            PostScenarioSpectrumFormatUnknown/** unknown */ ,
            PostScenarioSpectrumFormatLinear/** linear */ ,
            PostScenarioSpectrumFormatPower/** power */ 
        };

        /** This enum defines the scaling mode for signal processing. It is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioSpectrumMode
        {
            PostScenarioSpectrumModeUnknown/** unknown */ ,
            PostScenarioSpectrumModePeak/** peak */ ,
            PostScenarioSpectrumModeRms/** rms */ 
        };

        /** This enum defines the correction mode. Represents the type of correction that is applied to a windowed signal.
            It is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioCorrectionMode
        {
            PostScenarioCorrectionModeUnknown/** unknown */ ,
            PostScenarioCorrectionModeEnergy/** energy */ ,
            PostScenarioCorrectionModeAmplitude/** amplitude */ 
        };

        /** This enum defines the acoustical weighting applied on a visualization. These are commonly used functions that scale a signal to the way sound is perceived by the human ear.
                Is is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioWeightingType
        {
            PostScenarioWeightingTypeUnknown/** unknown */ ,
            PostScenarioWeightingTypeNoWeighting/** no weighting */ ,
            PostScenarioWeightingTypeA/** a */ ,
            PostScenarioWeightingTypeB/** b */ ,
            PostScenarioWeightingTypeC/** c */ ,
            PostScenarioWeightingTypeD/** d */ ,
            PostScenarioWeightingTypeAb/** ab */ ,
            PostScenarioWeightingTypeBc/** bc */ 
        };

        /** This enum defines the axis scale. It is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */
        enum PostScenarioAxisScale
        {
            PostScenarioAxisScaleDefault/** default */ ,
            PostScenarioAxisScaleLinear/** linear */ ,
            PostScenarioAxisScaleDb/** The reference values are set in Customer Defaults->Simulation->General->Environment->Decibel (dB)*/,
            PostScenarioAxisScaleLog/** log */ 
        };

        /** This enum defines the basic complex options. It is used by @link NXOpen::CAE::PostScenarioMetadata NXOpen::CAE::PostScenarioMetadata@endlink  
         <br>  Created in NX1953.0.0.  <br>  
        */

        /// \cond NX_NO_DOC 
        enum PostScenarioComplexOption
        {
            PostScenarioComplexOptionNone/** none */ ,
            PostScenarioComplexOptionReal/** real */ ,
            PostScenarioComplexOptionImaginary/** imaginary */ ,
            PostScenarioComplexOptionMagnitude/** magnitude */ ,
            PostScenarioComplexOptionPhase/** phase */ ,
            PostScenarioComplexOptionSignedMagnitude/** signed magnitude */ 
        };


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
