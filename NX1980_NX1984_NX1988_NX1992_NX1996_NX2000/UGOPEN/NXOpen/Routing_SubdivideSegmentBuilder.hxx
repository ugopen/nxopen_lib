#ifndef NXOpen_ROUTING_SUBDIVIDESEGMENTBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_SUBDIVIDESEGMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_SubdivideSegmentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class SubdivideSegmentBuilder;
    }
    class Builder;
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    namespace Routing
    {
        class SelectISegment;
    }
    namespace Routing
    {
        class _SubdivideSegmentBuilderBuilder;
        class SubdivideSegmentBuilderImpl;
        /**
            Represents a @link NXOpen::Routing::SubdivideSegmentBuilder NXOpen::Routing::SubdivideSegmentBuilder@endlink . This is used 
            to subidivide a given segment into two or more segments based on one of the three
            spacing methods.
             <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateSubdivideSegmentBuilder  NXOpen::Routing::RouteManager::CreateSubdivideSegmentBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        EqualSegmentsOption </term> <description> 
         
        EqualArcLength </description> </item> 

        <item><term> 
         
        SubdivideNumSegments </term> <description> 
         
        2 </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  SubdivideSegmentBuilder : public NXOpen::Builder
        {
            /** Spacing method to use for subdivision. */
            public: enum Types
            {
                TypesAtPoint/** At Point */,
                TypesEqualSegments/** Equal Segments */,
                TypesArcLengthSegments/** Arc Length Segments */
            };

            /** Options for subdivision with Equal Segments spacing method.*/
            public: enum EqualSegmentsMethod
            {
                EqualSegmentsMethodEqualArcLength/** Equal Arc Length */,
                EqualSegmentsMethodEqualParameter/** Equal Parameter */
            };

            private: SubdivideSegmentBuilderImpl * m_subdividesegmentbuilder_impl;
            private: friend class  _SubdivideSegmentBuilderBuilder;
            protected: SubdivideSegmentBuilder();
            public: ~SubdivideSegmentBuilder();
            /**Returns  the segment to subdivide 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::SelectISegment * Segment
            (
            );
            /**Returns  the location of the subdivision point on segment as arclength or %arclength or point, if
                        @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  is @link NXOpen::Routing::SubdivideSegmentBuilder::TypesAtPoint NXOpen::Routing::SubdivideSegmentBuilder::TypesAtPoint@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * SubdividePoint
            (
            );
            /**Returns  the direction of the start of segment to subdivide. The distance of the subdivision 
                        point on the segment is measured from this end.
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool ReverseSubdividePoint
            (
            );
            /**Sets  the direction of the start of segment to subdivide. The distance of the subdivision 
                        point on the segment is measured from this end.
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetReverseSubdividePoint
            (
                bool reverseSubdividePoint /** reversesubdividepoint */ 
            );
            /**Returns  the equal segments option as @link NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod@endlink 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod EqualSegmentsOption
            (
            );
            /**Sets  the equal segments option as @link NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod@endlink 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetEqualSegmentsOption
            (
                NXOpen::Routing::SubdivideSegmentBuilder::EqualSegmentsMethod equalSegmentsOption /** equalsegmentsoption */ 
            );
            /**Returns  the start location of subdivision on the segment as percentage, if
                        @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  is @link NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments@endlink 
                        or @link NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * SubdivideStartPercentage
            (
            );
            /**Returns  the end location of subdivision on the segment as percentage, if
                        @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  is @link NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments@endlink 
                        or @link NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * SubdivideEndPercentage
            (
            );
            /**Returns  the number of subdivisions to do on the given segment, if @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  
                        is @link NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments@endlink 
                        or @link NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: int SubdivideNumSegments
            (
            );
            /**Sets  the number of subdivisions to do on the given segment, if @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  
                        is @link NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesEqualSegments@endlink 
                        or @link NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetSubdivideNumSegments
            (
                int subdivideNumSegments /** subdividenumsegments */ 
            );
            /**Returns  the arc length of each resulting segment from subdivision, if @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  is 
                        @link NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments NXOpen::Routing::SubdivideSegmentBuilder::TypesArcLengthSegments@endlink 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * SubdivideArcLength
            (
            );
            /**Returns  the spacing method as @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::SubdivideSegmentBuilder::Types Type
            (
            );
            /**Sets  the spacing method as @link NXOpen::Routing::SubdivideSegmentBuilder::Types NXOpen::Routing::SubdivideSegmentBuilder::Types@endlink  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetType
            (
                NXOpen::Routing::SubdivideSegmentBuilder::Types type /** type */ 
            );
            /** Sets options for subdividing splines.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetSplineSettings
            (
                bool createTangency /** Creates tangency at the point where the spline is subdivided by adding parallel extensions.*/,
                bool addPoints /** Add points to the new segments to maintain shape after subdivision.*/
            );
            /** Gets the current subdivide spline settings. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void GetSplineSettings
            (
                bool* createTangency /** Creates tangency at the point where the spline is subdivided by adding parallel extensions.*/,
                bool* createPoints /** Add points to the new segments to maintain shape after subdivision.*/
            );
            /** Sets options for subdividing splines.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetSplineSettings
            (
                bool createTangency /** Creates tangency at the point where the spline is subdivided by adding parallel extensions.*/,
                bool addPoints /** Add points to the new segments to maintain shape after subdivision.*/,
                bool addFixConstraint /** Adds a fix constraint at newly created subdivision locations*/
            );
            /** Gets the current subdivide spline settings. 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void GetSplineSettings
            (
                bool* createTangency /** Creates tangency at the point where the spline is subdivided by adding parallel extensions.*/,
                bool* createPoints /** Add points to the new segments to maintain shape after subdivision.*/,
                bool* addFixConstraint /** Adds a fix constraint at newly created subdivision locations*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
