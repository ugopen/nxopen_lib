#ifndef NXOpen_AME_PLCBLOCK_HXX_INCLUDED
#define NXOpen_AME_PLCBLOCK_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_PlcBlock.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_MultiValueObjectsPort.hxx>
#include <NXOpen/AME_PlcCodePosition.hxx>
#include <NXOpen/AME_PlcMethod.hxx>
#include <NXOpen/AME_AMEBaseNode.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class PlcBlock;
    }
    namespace AME
    {
        class AMEBaseNode;
    }
    namespace AME
    {
        class MultiValueObjectsPort;
    }
    namespace AME
    {
        class PlcCodePosition;
    }
    namespace AME
    {
        class PlcMethod;
    }
    namespace AME
    {
        class _PlcBlockBuilder;
        class PlcBlockImpl;
        /** Plc Block Node Journaling class  <br> This is an abstract class.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  PlcBlock : public NXOpen::AME::AMEBaseNode
        {
            private: PlcBlockImpl * m_plcblock_impl;
            private: friend class  _PlcBlockBuilder;
            protected: PlcBlock();
            public: ~PlcBlock();
            /** Remove a rule position on the given block
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void RemovePosition
            (
                NXOpen::AME::PlcCodePosition * node /** node */ 
            );
            /** Remove a method on the given block
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void RemoveMethod
            (
                NXOpen::AME::PlcMethod * node /** node */ 
            );
            /** Update all rules
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void UpdateRules
            (
            );
            /** Remove a interface member port from the given block if the port is not used in other interfaces 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void RemoveInterfaceMember
            (
                NXOpen::AME::MultiValueObjectsPort * interfaceMember /** interfacemember */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
