#ifndef NXOpen_FEATURES_SHIPDESIGN_PROJECTSTRUCTURENODE_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PROJECTSTRUCTURENODE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ProjectStructureNode.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ProjectStructureNode;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ProjectStructureNodeImpl;
            /**  @brief 
                    Represents a project structure node for ship project setup.
                     

             
                    
                    This node is to mark a structure node to create
                    
                    
             <br>  Created in NX12.0.1.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ProjectStructureNode : public NXOpen::TransientObject
            {
                private: ProjectStructureNodeImpl * m_projectstructurenode_impl;
                /// \cond NX_NO_DOC 
                public: explicit ProjectStructureNode(void *ptr);
                /// \endcond 
                /**
                               Free resources associated with the instance. After this method
                               is called, it is illegal to use the object.  In .NET, this method
                               is automatically called when the object is deleted by the garbage
                               collector.
                            
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual ~ProjectStructureNode();
                /**Returns  the node check status. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: bool Checked
                (
                );
                /**Sets  the node check status. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetChecked
                (
                    bool nodeChecked /** nodechecked */ 
                );
                /**Returns  the flag to indicate whether the node is created as the root part. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: bool CreateAsRootPart
                (
                );
                /**Sets  the flag to indicate whether the node is created as the root part. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetCreateAsRootPart
                (
                    bool createAsRootPart /** createasrootpart */ 
                );
                /**Returns  the node specialization used to define what template is used to create the part. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: NXString SelectedSpecialization
                (
                );
                /**Sets  the node specialization used to define what template is used to create the part. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetSelectedSpecialization
                (
                    const NXString & specialization /** specialization */ 
                );
                /**Sets  the node specialization used to define what template is used to create the part. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                void SetSelectedSpecialization
                (
                    const char * specialization /** specialization */ 
                );
                /** Gets the child nodes. 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void GetChildNodes
                (
                    std::vector<NXOpen::Features::ShipDesign::ProjectStructureNode *> & childNodes /** The project structure nodes. */
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
