#ifndef NXOpen_SIAUTOTESTPREFERENCESBUILDER_HXX_INCLUDED
#define NXOpen_SIAUTOTESTPREFERENCESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIAutotestPreferencesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SIAutotestPreferencesBuilder;
    class Builder;
    class _SIAutotestPreferencesBuilderBuilder;
    class SIAutotestPreferencesBuilderImpl;

    /// \cond NX_NO_DOC 
    /** SIAutotestePreferences class stores preferences for creating SI tests. This is an internal class for development. <br> To create a new instance of this class, use @link NXOpen::DebugSession::CreateSiautotestpreferencesBuilder  NXOpen::DebugSession::CreateSiautotestpreferencesBuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    AllowReferenceCurves </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    AllowSelfIntersection </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    ChainBetween </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    InterPartCollector </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    InterPartSection </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    LaminarEdgesOnly </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    MixedComponentCollector </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    MixedComponentSection </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    NonFeatureModeOfCollector </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    NonFeatureModeOfSection </term> <description> 
     
    0 </description> </item> 

    </list> 

     <br>  Created in NX8.5.0.  <br>  
    */
    class NXOPENDEBUGSESSIONCPPEXPORT  SIAutotestPreferencesBuilder : public NXOpen::Builder
    {
        private: SIAutotestPreferencesBuilderImpl * m_siautotestpreferencesbuilder_impl;
        private: friend class  _SIAutotestPreferencesBuilderBuilder;
        protected: SIAutotestPreferencesBuilder();
        public: ~SIAutotestPreferencesBuilder();

        /// \cond NX_NO_DOC 
        /**Returns  the allow reference curves 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool AllowReferenceCurves
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the allow reference curves 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetAllowReferenceCurves
        (
            bool allowReferenceCurves /** allowreferencecurves */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the allow self intersection 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool AllowSelfIntersection
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the allow self intersection 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetAllowSelfIntersection
        (
            bool allowSelfIntersection /** allowselfintersection */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the chain between 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool ChainBetween
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the chain between 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetChainBetween
        (
            bool chainBetween /** chainbetween */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the inter part section 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool InterPartSection
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the inter part section 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetInterPartSection
        (
            bool interPartSection /** interpartsection */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the mixed component section 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool MixedComponentSection
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the mixed component section 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetMixedComponentSection
        (
            bool mixedComponentSection /** mixedcomponentsection */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the non-feature mode section 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: bool NonFeatureModeOfSection
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the non-feature mode section 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNonFeatureModeOfSection
        (
            bool nonFeatureModeOfSection /** non feature mode of section */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the laminar edges only 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool LaminarEdgesOnly
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the laminar edges only 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetLaminarEdgesOnly
        (
            bool laminarEdgesOnly /** laminaredgesonly */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the inter part collector 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool InterPartCollector
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the inter part collector 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetInterPartCollector
        (
            bool interPartCollector /** interpartcollector */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the mixed component collector 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: bool MixedComponentCollector
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the mixed component collector 
         <br>  Created in NX8.5.0.  <br>  
         <br> License requirements : None */
        public: void SetMixedComponentCollector
        (
            bool mixedComponentCollector /** mixedcomponentcollector */ 
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Returns  the non-feature mode collector 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: bool NonFeatureModeOfCollector
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Sets  the non-feature mode collector 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNonFeatureModeOfCollector
        (
            bool nonFeatureModeOfCollector /** non feature mode of collector */ 
        );

        /// \endcond 
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
