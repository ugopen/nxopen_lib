#ifndef NXOpen_ROUTING_STOCKBROWSERBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_STOCKBROWSERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_StockBrowserBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class StockBrowserBuilder;
    }
    class Builder;
    class NXObject;
    namespace Routing
    {
        class _StockBrowserBuilderBuilder;
        class StockBrowserBuilderImpl;
        /** Builder class for stock browser .  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateStockBrowserBuilder  NXOpen::Routing::RouteManager::CreateStockBrowserBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FilterType </term> <description> 
         
        All </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  StockBrowserBuilder : public NXOpen::Builder
        {
            /** Filter type */
            public: enum TypeFilter
            {
                TypeFilterAll/** All Stocks */,
                TypeFilterStock/** Stock */,
                TypeFilterOverStock/** Overstock */,
                TypeFilterFillerStock/** Filler Stock */,
                TypeFilterSpaceReservation/** Space Reservation */,
                TypeFilterFittingOverstock/** fitting overstock */ 
            };

            private: StockBrowserBuilderImpl * m_stockbrowserbuilder_impl;
            private: friend class  _StockBrowserBuilderBuilder;
            protected: StockBrowserBuilder();
            public: ~StockBrowserBuilder();
            /**Returns  the stock type filter which defines the type of stock
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::StockBrowserBuilder::TypeFilter FilterType
            (
            );
            /**Sets  the stock type filter which defines the type of stock
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetFilterType
            (
                NXOpen::Routing::StockBrowserBuilder::TypeFilter stockTypeFilter /** stocktypefilter */ 
            );
            /**Returns  the stock name filter which defines filter to name stock 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXString NameFilter
            (
            );
            /**Sets  the stock name filter which defines filter to name stock 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetNameFilter
            (
                const NXString & stockNameFilter /** stocknamefilter */ 
            );
            /**Sets  the stock name filter which defines filter to name stock 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetNameFilter
            (
                const char * stockNameFilter /** stocknamefilter */ 
            );
            /** Get the filtered stock object list 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void GetSortedList
            (
                std::vector<NXOpen::NXObject *> & objects /** Filtered Routing Stocks */
            );
            /** Set the filtered stock object list when filter type is changed.
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetSortedList
            (
                const std::vector<NXOpen::NXObject *> & objects /** Filtered Routing Stocks */
            );
            /** Deletes the given @link Routing::Stock Routing::Stock@endlink  or @link Routing::FittingOverstock Routing::FittingOverstock@endlink  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void DeleteStocks
            (
                const std::vector<NXOpen::NXObject *> & objects /** Filtered Routing Stocks */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
