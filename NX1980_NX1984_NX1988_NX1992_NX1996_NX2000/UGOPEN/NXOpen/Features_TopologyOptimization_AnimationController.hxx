#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_ANIMATIONCONTROLLER_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_ANIMATIONCONTROLLER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimization_AnimationController.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnimationController;
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
        }
    }
    namespace Features
    {
        namespace TopologyOptimization
        {
            class AnimationControllerImpl;

            /// \cond NX_NO_DOC 
            /**
                    Represents animation controls and play settings
                     <br> To create a new instance of this class, use @link NXOpen::Features::TopologyOptimization::PostManager::CreateAnimationController  NXOpen::Features::TopologyOptimization::PostManager::CreateAnimationController @endlink  <br> 
             <br>  Created in NX1980.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  AnimationController : public NXOpen::TransientObject
            {
                /** Animation States option */
                public: enum State
                {
                    StatePlay/** play */ ,
                    StateStop/** stop */ ,
                    StatePause/** pause */ ,
                    StateNext/** next */ ,
                    StatePrevious/** previous */ 
                };

                private: AnimationControllerImpl * m_animationcontroller_impl;
                /// \cond NX_NO_DOC 
                public: explicit AnimationController(void *ptr);
                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the animation is full cycle or not 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: bool FullCycle
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the animation is full cycle or not 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetFullCycle
                (
                    bool isFullCycle /** isfullcycle */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Controls the contour animation 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void AnimateContour
                (
                    NXOpen::Features::TopologyOptimization::AnimationController::State animState /** animstate */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /** Destroys the object. 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~AnimationController();

                /// \endcond 
            }; //lint !e1712 default constructor not defined for class  


            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
