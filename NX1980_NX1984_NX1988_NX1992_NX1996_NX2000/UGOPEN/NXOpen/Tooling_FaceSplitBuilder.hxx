#ifndef NXOpen_TOOLING_FACESPLITBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_FACESPLITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_FaceSplitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class FaceSplitBuilder;
    }
    class Builder;
    class Curve;
    class Face;
    namespace Features
    {
        class DividefaceBuilder;
    }
    namespace Features
    {
        class Feature;
    }
    class ScCollector;
    namespace Tooling
    {
        class _FaceSplitBuilderBuilder;
        class FaceSplitBuilderImpl;
        /** Represents a face split operation <br> To create a new instance of this class, use @link NXOpen::Tooling::FaceSplitCollection::CreateFaceSplitBuilder  NXOpen::Tooling::FaceSplitCollection::CreateFaceSplitBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DivideFaceBuilder.SelectDividingObject.OffsetDistance.Value </term> <description> 
         
        5 (millimeters part), 0.2 (inches part) </description> </item> 

        <item><term> 
         
        DivideFaceBuilder.SelectDividingObject.ToolOption </term> <description> 
         
        Object </description> </item> 

        <item><term> 
         
        Tolerance </term> <description> 
         
        0.025 </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  FaceSplitBuilder : public NXOpen::Builder
        {
            /** the type for Split Face*/
            public: enum FaceSplitType
            {
                FaceSplitTypeCurvesEdges/** using curve or edge for Split Face*/,
                FaceSplitTypePlane/** using plane for Split Face*/,
                FaceSplitTypeIntersection/** using intersection curve of two body for Split Face*/,
                FaceSplitTypeIsocline/** using Isocline for Split Face*/
            };

            private: FaceSplitBuilderImpl * m_facesplitbuilder_impl;
            private: friend class  _FaceSplitBuilderBuilder;
            protected: FaceSplitBuilder();
            public: ~FaceSplitBuilder();
            /**Returns  the split face type which splits a face by using curves, edges, plane, face, isolines or 
                        intersected curves with another body
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::FaceSplitBuilder::FaceSplitType Type
            (
            );
            /**Sets  the split face type which splits a face by using curves, edges, plane, face, isolines or 
                        intersected curves with another body
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::FaceSplitBuilder::FaceSplitType splitType /** splittype */ 
            );
            /**Returns  the faces to be divided 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * FaceToDivide
            (
            );
            /**Returns  the dividing objects which will be different according to the split type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * DivObjects
            (
            );
            /**Returns  the tolerance is used to do dividing face operation
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the tolerance is used to do dividing face operation
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /** Create isocline
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void CreateIsoclines
            (
                const std::vector<NXOpen::Face *> & pFacesToDivide /** faces to be divided with isoclines*/,
                std::vector<NXOpen::Curve *> & outputCurves /** isoclines on selected faces*/
            );
            /** Set the reference point to the selected face center. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void FindMoldUnsplitFace
            (
            );
            /**Returns  the divide face builder 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::DividefaceBuilder * DivideFaceBuilder
            (
            );
            /** Add/Remove the new added dividing objects. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void AddOrRemoveNewDividingObjects
            (
                NXOpen::Features::Feature * createdFeture /** createdfeture */ ,
                bool isAdding /** isadding */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
