#ifndef NXOpen_CAE_AEROSTRUCTURES_LAMINATEQUERY_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_LAMINATEQUERY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_LaminateQuery.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_BaseExtractionSource.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class LaminateQuery;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class BaseExtractionSource;
        }
    }
    class NXObject;
    class TaggedObject;
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _LaminateQueryBuilder;
            class LaminateQueryImpl;
            /**  @brief  Represents a laminate query  

               <br> No support for KF  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LaminateQuery : public NXOpen::NXObject
            {
                /** Enumeration for reference entity types */
                public: enum ReferenceEntityTypeEnum
                {
                    ReferenceEntityTypeEnumExistingLaminate/** existing laminate */ ,
                    ReferenceEntityTypeEnumLaminatePhysicalProperty/** laminate physical property */ ,
                    ReferenceEntityTypeEnumElement2D/** element2d */ ,
                    ReferenceEntityTypeEnumPolygonFace/** polygon face */ ,
                    ReferenceEntityTypeEnumMesh/** mesh */ ,
                    ReferenceEntityTypeEnumCollector2D/** collector2d */ ,
                    ReferenceEntityTypeEnumGroup/** group */ ,
                    ReferenceEntityTypeEnumSelectionRecipe/** selection recipe */ ,
                    ReferenceEntityTypeEnumUnknown/** unknown */ ,
                    ReferenceEntityTypeEnumExtractionSource/** extraction source */ 
                };

                /** Enumeration defining the manner in which the laminate properties
                             * are to be extracted. */
                public: enum AngleDefinitionTypeEnum
                {
                    AngleDefinitionTypeEnumMaterialAngle/** material angle */ ,
                    AngleDefinitionTypeEnumAngle/** angle */ ,
                    AngleDefinitionTypeEnumVector/** vector */ 
                };

                private: LaminateQueryImpl * m_laminatequery_impl;
                private: friend class  _LaminateQueryBuilder;
                protected: LaminateQuery();
                public: ~LaminateQuery();
                /**Returns  the current reference entity type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::LaminateQuery::ReferenceEntityTypeEnum ReferenceEntityType
                (
                );
                /**Sets  the current reference entity type 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReferenceEntityType
                (
                    NXOpen::CAE::AeroStructures::LaminateQuery::ReferenceEntityTypeEnum referenceEntityType /** referenceentitytype */ 
                );
                /**Returns  the selected entity tag 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::TaggedObject * ReferenceEntity
                (
                );
                /**Sets  the selected entity tag 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetReferenceEntity
                (
                    NXOpen::TaggedObject * referenceEntity /** referenceentity */ 
                );
                /**Returns  the laminate name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString LaminateName
                (
                );
                /**Sets  the laminate name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetLaminateName
                (
                    const NXString & laminateName /** laminatename */ 
                );
                /**Sets  the laminate name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetLaminateName
                (
                    const char * laminateName /** laminatename */ 
                );
                /**Returns  the laminate base name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString LaminateBaseName
                (
                );
                /**Sets  the laminate base name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetLaminateBaseName
                (
                    const NXString & laminateBaseName /** laminatebasename */ 
                );
                /**Sets  the laminate base name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetLaminateBaseName
                (
                    const char * laminateBaseName /** laminatebasename */ 
                );
                /** Returns the renference entity type names 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetReferenceEntityTypeNames
                (
                    std::vector<NXString> & referenceEntityTypeNames /** referenceentitytypenames */ 
                );
                /** Returns the renference entity type names 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetReferenceEntityTypesAndNames
                (
                    std::vector<int> & referenceEntityIndexes /** referenceentityindexes */ ,
                    std::vector<NXString> & referenceEntityTypeNames /** referenceentitytypenames */ 
                );
                /** Returns the renference entity type name  @return  The reference entity name 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString GetReferenceEntityTypeName
                (
                    NXOpen::CAE::AeroStructures::LaminateQuery::ReferenceEntityTypeEnum referenceEntityType /** referenceentitytype */ 
                );
                /** Finds the available physical properties of type laminate 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetLaminatePhysicalProperties
                (
                    std::vector<NXString> & physicalPropertyNames /** physicalpropertynames */ ,
                    std::vector<NXOpen::NXObject *> & physicalPropertyLaminates /** physicalpropertylaminates */ 
                );
                /** Returns the list of available laminate queries 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void GetLaminateQueries
                (
                    std::vector<NXString> & laminateQueryNames /** laminatequerynames */ ,
                    std::vector<NXOpen::NXObject *> & laminateQueryTags /** laminatequerytags */ 
                );
                /** Sets the internal values of the query  (with entity) 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetValues
                (
                    const NXString & laminateBaseName /** laminatebasename */ ,
                    const NXString & laminateName /** laminatename */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::ReferenceEntityTypeEnum referenceEntityType /** referenceentitytype */ ,
                    NXOpen::TaggedObject * referenceEntity /** referenceentity */ ,
                    double extractionAngleInRadians /** extractionangleinradians */ ,
                    const NXOpen::Vector3d & extractionDirection /** extractiondirection */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::AngleDefinitionTypeEnum extractionType /** extractiontype */ ,
                    double extractionAngleToleranceInRadians /** extractionangletoleranceinradians */ ,
                    bool invertNormals /** invertnormals */ ,
                    bool reverseOrder /** reverseorder */ 
                );
                /** Sets the internal values of the query  (with entity) 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetValues
                (
                    const char * laminateBaseName /** laminatebasename */ ,
                    const char * laminateName /** laminatename */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::ReferenceEntityTypeEnum referenceEntityType /** referenceentitytype */ ,
                    NXOpen::TaggedObject * referenceEntity /** referenceentity */ ,
                    double extractionAngleInRadians /** extractionangleinradians */ ,
                    const NXOpen::Vector3d & extractionDirection /** extractiondirection */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::AngleDefinitionTypeEnum extractionType /** extractiontype */ ,
                    double extractionAngleToleranceInRadians /** extractionangletoleranceinradians */ ,
                    bool invertNormals /** invertnormals */ ,
                    bool reverseOrder /** reverseorder */ 
                );
                /** Sets the internal values of the query  (with extraction source) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetValues
                (
                    const NXString & laminateBaseName /** laminatebasename */ ,
                    const NXString & laminateName /** laminatename */ ,
                    const NXString & sourceName /** sourcename */ ,
                    double extractionAngleInRadians /** extractionangleinradians */ ,
                    const NXOpen::Vector3d & extractionDirection /** extractiondirection */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::AngleDefinitionTypeEnum extractionType /** extractiontype */ ,
                    double extractionAngleToleranceInRadians /** extractionangletoleranceinradians */ ,
                    bool invertNormals /** invertnormals */ ,
                    bool reverseOrder /** reverseorder */ 
                );
                /** Sets the internal values of the query  (with extraction source) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetValues
                (
                    const char * laminateBaseName /** laminatebasename */ ,
                    const char * laminateName /** laminatename */ ,
                    const char * sourceName /** sourcename */ ,
                    double extractionAngleInRadians /** extractionangleinradians */ ,
                    const NXOpen::Vector3d & extractionDirection /** extractiondirection */ ,
                    NXOpen::CAE::AeroStructures::LaminateQuery::AngleDefinitionTypeEnum extractionType /** extractiontype */ ,
                    double extractionAngleToleranceInRadians /** extractionangletoleranceinradians */ ,
                    bool invertNormals /** invertnormals */ ,
                    bool reverseOrder /** reverseorder */ 
                );
                /** Gets the laminate extraction angle. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetExtractionAngle
                (
                );
                /** Sets the laminate extraction angle. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetExtractionAngle
                (
                    double laminateAngle /** laminate angle in radians */
                );
                /** Gets the laminate extraction direction. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::Vector3d GetExtractionDirection
                (
                );
                /** Sets the laminate extraction direction. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetExtractionDirection
                (
                    const NXOpen::Vector3d & direction /** direction */ 
                );
                /**Returns  the extraction source name
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXString ExtractionSourceName
                (
                );
                /**Sets  the extraction source name
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: void SetExtractionSourceName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the extraction source name
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                void SetExtractionSourceName
                (
                    const char * name /** name */ 
                );
                /** Gets the laminate extraction angle tolerance. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: double GetExtractionAngleTolerance
                (
                    NXOpen::Unit * angleUnit /** Unit for the angle value, if NULL returns the value in radians */
                );
                /**Returns  the laminate extraction normal flag. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: bool ExtractionInvertNormal
                (
                );
                /**Returns  the laminate extraction reverse ply order flag. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: bool ExtractionReversePlies
                (
                );
                /** Get the extraction source 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::BaseExtractionSource * GetExtractionSource
                (
                );
                /**Returns  the current angle definition type 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: NXOpen::CAE::AeroStructures::LaminateQuery::AngleDefinitionTypeEnum AngleDefinitionType
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
