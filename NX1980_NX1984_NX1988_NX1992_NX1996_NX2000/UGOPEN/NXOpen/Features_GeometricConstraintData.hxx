#ifndef NXOpen_FEATURES_GEOMETRICCONSTRAINTDATA_HXX_INCLUDED
#define NXOpen_FEATURES_GEOMETRICCONSTRAINTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_GeometricConstraintData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class GeometricConstraintData;
    }
    class Direction;
    class Offset;
    class Point;
    class Scalar;
    namespace Features
    {
        class _GeometricConstraintDataBuilder;
        class GeometricConstraintDataImpl;
        /** Represents Geometric Constraint Data class.
                 <br> 
                This class acts as a container of various types of geometric constraints such as
                position(G0), tangent(G1), tangent magnitude, curvature(G2) and curvature derivative(G3).
                An array of objects of this class may be used to create a curve. Not all features support
                all types of constraints. For details of the supported types by a feature, refer to feature
                documentation. Position is a minimum required element of <b>NXOpen.Features.GeometricConstraintData</b>.
                 <br> 
                
                 <br> 
                <b>NXOpen.Features.GeometricConstraintData</b> can be specified as automatic or fixed type.
                 <br> 
                
                 <br> 
                Automatic type - <br>  <br> 
                When a point (G0) is attached to an object such as curve or a face, constraint types
                such as tangent, curvature or curvature derivative can be automatically inferred
                from the attached object. In this case the tangent direction is determined by some
                scheme decided by the feature. To specify automatic type
                @link NXOpen::Features::GeometricConstraintData::AutoConstraintType NXOpen::Features::GeometricConstraintData::AutoConstraintType@endlink  
                and @link NXOpen::Features::GeometricConstraintData::ParameterDirection NXOpen::Features::GeometricConstraintData::ParameterDirection@endlink 
                are necessary.
                 <br> 
                
                 <br> 
                Fixed type - <br>  <br> 
                To specify <b>NXOpen.Features.GeometricConstraintData</b> as a fixed type, the actual
                objects representing different types of constraints such as @link NXOpen::Direction NXOpen::Direction@endlink 
                for tangent, @link NXOpen::Scalar NXOpen::Scalar@endlink  for tangent magnitude or
                @link NXOpen::Offset NXOpen::Offset@endlink  for curvature or curvature derivative are specified.
                 <br> 
             <br> To create a new instance of this class, use @link NXOpen::Features::GeometricConstraintDataManager::CreateGeometricConstraintData  NXOpen::Features::GeometricConstraintDataManager::CreateGeometricConstraintData @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  GeometricConstraintData : public NXOpen::TaggedObject
        {
            /** Automatic constraint types */
            public: enum AutoConstraintType
            {
                AutoConstraintTypeNone/** No automatic constraint */,
                AutoConstraintTypeTangent/** Tangent(G1) */,
                AutoConstraintTypeCurvature/** Curvature(G2) */,
                AutoConstraintTypeCurvatureDerivative/** Curvature derivative(G3) */
            };

            /** Parameter direction to be used for creation of the constraint at a point
                        which is attached to an object, for example a curve or a face */
            public: enum ParameterDirection
            {
                ParameterDirectionIso/** Iso parameter */,
                ParameterDirectionSection/** General section if point is attached to face */,
                ParameterDirectionNormal/** Normal */,
                ParameterDirectionPerpendicular/** Perpendicular to curve on face or edge */
            };

            private: GeometricConstraintDataImpl * m_geometricconstraintdata_impl;
            private: friend class  _GeometricConstraintDataBuilder;
            protected: GeometricConstraintData();
            public: ~GeometricConstraintData();
            /**Returns  the point. Point is the minimum required data to create a constraint. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point. Point is the minimum required data to create a constraint. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the automatic constraint type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::GeometricConstraintData::AutoConstraintType AutomaticConstraintType
            (
            );
            /**Sets  the automatic constraint type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAutomaticConstraintType
            (
                NXOpen::Features::GeometricConstraintData::AutoConstraintType autoConstraintType /** auto constraint type */ 
            );
            /**Returns  the automatic constraint direction type. For a constraint on a face it is
                        necessary to specify parameter direction. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::GeometricConstraintData::ParameterDirection AutomaticConstraintDirection
            (
            );
            /**Sets  the automatic constraint direction type. For a constraint on a face it is
                        necessary to specify parameter direction. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAutomaticConstraintDirection
            (
                NXOpen::Features::GeometricConstraintData::ParameterDirection autoConstraintDirection /** auto constraint direction */ 
            );
            /**Returns  the flag indicating if a constraint can be inferred from the parent of the attachment object of the point.
                        E.g. if point is attached to an edge or a curve on face, then infer constraint from the face of the edge
                        or the curve. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool CanInferConstraintFromAttachmentParent
            (
            );
            /**Sets  the flag indicating if a constraint can be inferred from the parent of the attachment object of the point.
                        E.g. if point is attached to an edge or a curve on face, then infer constraint from the face of the edge
                        or the curve. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCanInferConstraintFromAttachmentParent
            (
                bool canInferConstraintFromAttachmentParent /** caninferconstraintfromattachmentparent */ 
            );
            /**Returns  the tangent direction. Used only when automatic constraint type is none.  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * TangentDirection
            (
            );
            /**Sets  the tangent direction. Used only when automatic constraint type is none.  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTangentDirection
            (
                NXOpen::Direction * tangentDirection /** tangent direction */ 
            );
            /**Returns  the tangent magnitude. Used only when automatic constraint type is none. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Scalar * TangentMagnitude
            (
            );
            /**Sets  the tangent magnitude. Used only when automatic constraint type is none. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTangentMagnitude
            (
                NXOpen::Scalar * tangentMagnitude /** tangent magnitude */ 
            );
            /**Returns  the curvature. Used only when automatic constraint type is none. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Offset * Curvature
            (
            );
            /**Sets  the curvature. Used only when automatic constraint type is none. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurvature
            (
                NXOpen::Offset * curvature /** curvature */ 
            );
            /**Returns  the curvature derivative. Used only when automatic constraint type is none 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Offset * CurvatureDerivative
            (
            );
            /**Sets  the curvature derivative. Used only when automatic constraint type is none 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurvatureDerivative
            (
                NXOpen::Offset * curvatureDerivative /** curvature derivative */ 
            );
            /**Returns  the flag indicating if tangent direction is used for creating symmetric modeling
                        constraint. If true, only tangent direction object is used for constraint evaluation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool HasSymmetricModelingConstraint
            (
            );
            /**Sets  the flag indicating if tangent direction is used for creating symmetric modeling
                        constraint. If true, only tangent direction object is used for constraint evaluation. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHasSymmetricModelingConstraint
            (
                bool symmetric /** symmetric */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
