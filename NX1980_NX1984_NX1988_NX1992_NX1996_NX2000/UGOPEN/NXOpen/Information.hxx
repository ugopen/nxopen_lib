#ifndef NXOpen_INFORMATION_HXX_INCLUDED
#define NXOpen_INFORMATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Information.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Information;
    class Session;
    class BasePart;
    namespace Features
    {
        class Feature;
    }
    class NXObject;
    class Part;
    class Point;
    class InformationImpl;
    /**
    Represents a class that provides methods for displaying information about part history, 
    interpart parents and children, features, points, and other NX Objects.
     <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Information
    {
        /** 
            Describes type of information displayed into listing window device.
            */
        public: enum DisplayFeatureType
        {
            DisplayFeatureTypeAll/** Displays all the information. Default set. */,
            DisplayFeatureTypeExpressions/** Displays expressions information. */,
            DisplayFeatureTypeParameters/** Displays parameters information. */,
            DisplayFeatureTypeDependencies/** Displays dependencies information. */,
            DisplayFeatureTypeFeaturesInBody/** Displays features in body information. */,
            DisplayFeatureTypeRelatedObject/** Displays related(dual) object information. */
        };

        private: InformationImpl * m_information_impl;
        private: NXOpen::Session* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit Information(NXOpen::Session *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~Information();
        /**
            Displays the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink  with a part's save history.
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayPartHistory
        (
            NXOpen::BasePart * part /** Part Object */
        );
        /** 
            Obtains the absolute and work coordinates of an explicit or implicit point
            and displays information in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink  device.
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayPointDetails
        (
            NXOpen::Point * point /** Point Object */
        );
        /**
            Displays the absolute and work coordinates of a point 
            in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink  device.
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.5.  <br>  
         <br> License requirements : None */
        public: void DisplayPointDetails
        (
            const NXOpen::Point3d & absolutePointCoordinates /** Absolute coordinates of a point */
        );
        /** 
            Displays information about geometric objects in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink .
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayObjectsDetails
        (
            const std::vector<NXOpen::NXObject *> & selectedObjects /** Array of objects for which the information is to be displayed */
        );
        /** Displays relevant information about features created while 
            generating a 3-D model in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink . 
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayFeatureDetails
        (
            NXOpen::Features::Feature * feature /** Feature object */,
            NXOpen::Information::DisplayFeatureType type /** Type of information to display */
        );
        /** Displays names of interpart children(part files having interlinked 
            geometry) in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink . 
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayInterpartChildren
        (
            NXOpen::Part * part /** Part object */
        );
        /** Displays names of interpart parents(part files having interlinked 
            geometry) in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink . 
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayInterpartParents
        (
            NXOpen::Part * part /** Part object */
        );
        /** Displays status of all the features that failed to update 
            in the @link  NXOpen::ListingWindow   NXOpen::ListingWindow @endlink . 
            If we call this method externally without UI, it displays 
            the information on standard output device. The listing 
            window output can be sent to the Information window or to a 
            file, or to both. See @link  NXOpen::ListingWindow::SelectDevice   NXOpen::ListingWindow::SelectDevice @endlink 
            for more information.
            
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayUpdateStatusReport
        (
            NXOpen::Part * part /** Part object */
        );
        /** Display details of cam objects 
         <br>  Created in NX4.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayCamObjectsDetails
        (
            const std::vector<NXOpen::NXObject *> & selectedObjects /** Array of objects for which the information is to be displayed */
        );
        /** Display details of product interface objects 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: void DisplayProdIntObjectsDetails
        (
            const std::vector<NXOpen::NXObject *> & selectedObjects /** product interface objects  */,
            int startCounter /** start counter for object # */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
