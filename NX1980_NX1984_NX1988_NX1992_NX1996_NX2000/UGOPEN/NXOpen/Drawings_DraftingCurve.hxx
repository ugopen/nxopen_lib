#ifndef NXOpen_DRAWINGS_DRAFTINGCURVE_HXX_INCLUDED
#define NXOpen_DRAWINGS_DRAFTINGCURVE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_DraftingCurve.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_DraftingCurveInfo.hxx>
#include <NXOpen/GeometricUtilities_CurveLocation.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/IBaseCurve.hxx>
#include <NXOpen/ICurve.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class DraftingCurve;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class DisplayableObject;
    namespace Drawings
    {
        class DraftingCurveInfo;
    }
    class IBaseCurve;
    class ICurve;
    class INXObject;
    namespace Drawings
    {
        class _DraftingCurveBuilder;
        class DraftingCurveImpl;
        /** Represents a Drafting VD Curve.  <br> An instance of this class can be obtained by using @link NXOpen::Drawings::DraftingCurveCollection NXOpen::Drawings::DraftingCurveCollection@endlink   <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  DraftingCurve : public NXOpen::DisplayableObject, public virtual NXOpen::ICurve
        {
            private: DraftingCurveImpl * m_draftingcurve_impl;
            private: friend class  _DraftingCurveBuilder;
            protected: DraftingCurve();
            public: ~DraftingCurve();
            /** Creates new DraftingCurveInfo object  @return  New DraftingCurveInfo object. Returns NULL if the input curve 
                                                                                                                           is not a drafting curve 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::Drawings::DraftingCurveInfo * GetDraftingCurveInfo
            (
            );
            /** Checks if an object is a Drafting Curve  @return  Returns TRUE if object is a drafting curve, FALSE otherwise 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: virtual bool IsDraftingCurve
            (
            );
            /** Returns the length of the object  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual double GetLength
            (
            );
            /**Returns  the reference state of a curve 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: virtual bool IsReference
            (
            );
            /** Finds the locations associated with this curve  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXOpen::GeometricUtilities::CurveLocation> GetLocations
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
