#ifndef NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORDEBUGBUILDER_HXX_INCLUDED
#define NXOpen_SIM_POSTCONFIGURATOR_POSTCONFIGURATORDEBUGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_PostConfigurator_PostConfiguratorDebugBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        namespace PostConfigurator
        {
            class PostConfiguratorDebugBuilder;
        }
    }
    class Builder;
    namespace SIM
    {
        namespace PostConfigurator
        {
            class _PostConfiguratorDebugBuilderBuilder;
            class PostConfiguratorDebugBuilderImpl;
            /** This class is represents a @link SIM::PostConfigurator::PostConfiguratorDebugBuilder SIM::PostConfigurator::PostConfiguratorDebugBuilder@endlink .
                        Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
                     <br> To create a new instance of this class, use @link NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorDebugBuilder  NXOpen::SIM::PostConfigurator::PostConfiguratorManager::CreatePostConfiguratorDebugBuilder @endlink  <br> 
             <br>  Created in NX12.0.2.  <br>  
            */
            class NXOPENCPP_SIMEXPORT  PostConfiguratorDebugBuilder : public NXOpen::Builder
            {
                /** Represents the trace type */
                public: enum TraceType
                {
                    TraceTypeCreatePostprocessor/** Trace Create Postprocessor */,
                    TraceTypeSelectPostprocessor/** Trace Select Postprocessor */
                };

                /** Represents the dump type */
                public: enum DumpType
                {
                    DumpTypeNone/** Dump Nothing */,
                    DumpTypeShowChanges/** Dump Show Changes */
                };

                /** The output type */
                public: enum OutputType
                {
                    OutputTypeSyslog/** Output to syslog */,
                    OutputTypeListingWindow/** Output to listing window */,
                    OutputTypeXml/** Output to xml */,
                    OutputTypeToFile/** Output to file */
                };

                private: PostConfiguratorDebugBuilderImpl * m_postconfiguratordebugbuilder_impl;
                private: friend class  _PostConfiguratorDebugBuilderBuilder;
                protected: PostConfiguratorDebugBuilder();
                public: ~PostConfiguratorDebugBuilder();
                /** Gets the trace  @return  The state
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: bool GetTrace
                (
                    NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::TraceType type /** The trace type*/
                );
                /**Sets the trace 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: void SetTrace
                (
                    NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::TraceType type /** The trace type*/,
                    bool state /** The state*/
                );
                /**Returns  the output 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::OutputType Output
                (
                );
                /**Sets  the output 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: void SetOutput
                (
                    NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::OutputType type /** The output type*/
                );
                /**Returns  the output filename 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: NXString OutputToFileName
                (
                );
                /**Sets  the output filename 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: void SetOutputToFileName
                (
                    const NXString & name /** the output new name */
                );
                /**Sets  the output filename 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                void SetOutputToFileName
                (
                    const char * name /** the output new name */
                );
                /**Returns  the dump 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::DumpType Dump
                (
                );
                /**Sets  the dump 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") */
                public: void SetDump
                (
                    NXOpen::SIM::PostConfigurator::PostConfiguratorDebugBuilder::DumpType type /** The dump type*/
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
