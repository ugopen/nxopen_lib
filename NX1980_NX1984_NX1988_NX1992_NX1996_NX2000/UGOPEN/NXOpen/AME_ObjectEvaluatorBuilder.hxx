#ifndef NXOpen_AME_OBJECTEVALUATORBUILDER_HXX_INCLUDED
#define NXOpen_AME_OBJECTEVALUATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ObjectEvaluatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_BaseEvaluatorBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ObjectEvaluatorBuilder;
    }
    namespace AME
    {
        class BaseEvaluatorBuilder;
    }
    namespace AME
    {
        class _ObjectEvaluatorBuilderBuilder;
        class ObjectEvaluatorBuilderImpl;
        /** Evaluates the object given a starting point  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateObjectEvaluatorBuilder  NXOpen::AME::AMEManager::CreateObjectEvaluatorBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ObjectEvaluatorBuilder : public NXOpen::AME::BaseEvaluatorBuilder
        {
            private: ObjectEvaluatorBuilderImpl * m_objectevaluatorbuilder_impl;
            private: friend class  _ObjectEvaluatorBuilderBuilder;
            protected: ObjectEvaluatorBuilder();
            public: ~ObjectEvaluatorBuilder();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
