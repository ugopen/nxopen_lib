#ifndef NXOpen_FEATURES_VEHICLEDESIGN_DIRECTFIELDVIEWBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_DIRECTFIELDVIEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_DirectFieldViewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class DirectFieldViewBuilder;
        }
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class NXColor;
    class Point;
    class ScCollector;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _DirectFieldViewBuilderBuilder;
            class DirectFieldViewBuilderImpl;
            /**
                Represents a @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder NXOpen::Features::VehicleDesign::DirectFieldViewBuilder@endlink  used to create or edit
                a vehicle design @link NXOpen::Features::VehicleDesign::DirectFieldView NXOpen::Features::VehicleDesign::DirectFieldView@endlink  feature.
                 <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateDirectFieldViewBuilder  NXOpen::Features::VehicleDesignCollection::CreateDirectFieldViewBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AllowExtension </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            BoundaryFilter </term> <description> 
             
            CurvesEdges </description> </item> 

            <item><term> 
             
            CurveLayer </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            Driver </term> <description> 
             
            AGroupofDrivers </description> </item> 

            <item><term> 
             
            EnableValidationChecker </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            ExtensionLength </term> <description> 
             
            1016 </description> </item> 

            <item><term> 
             
            EyeRotateAngleDown </term> <description> 
             
            60 </description> </item> 

            <item><term> 
             
            EyeRotateAngleLeft </term> <description> 
             
            30 </description> </item> 

            <item><term> 
             
            EyeRotateAngleRight </term> <description> 
             
            30 </description> </item> 

            <item><term> 
             
            EyeRotateAngleUp </term> <description> 
             
            45 </description> </item> 

            <item><term> 
             
            EyeRotationType </term> <description> 
             
            Maximum </description> </item> 

            <item><term> 
             
            EyellipsePercentile </term> <description> 
             
            Per95 </description> </item> 

            <item><term> 
             
            FaceLayer </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            GenerateLogFile </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            HeadTurnAngleLeft </term> <description> 
             
            60 </description> </item> 

            <item><term> 
             
            HeadTurnAngleRight </term> <description> 
             
            60 </description> </item> 

            <item><term> 
             
            HeadTurnType </term> <description> 
             
            Maximum </description> </item> 

            <item><term> 
             
            LimitationType </term> <description> 
             
            ByanApertureThroughAWindow </description> </item> 

            <item><term> 
             
            OutputBoundaryCurves </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            OutputVisionFace </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            UseStandardLoading </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ViewResults </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  DirectFieldViewBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents the type of drivers to be considered. */
                public: enum DriverType
                {
                    DriverTypeAGroupofDrivers/**Represents the direct field of view will be seen by a group of drivers. */,
                    DriverTypeAnIndividualDriver/**Represents the direct field of view will be seen by an individual driver. */
                };

                /** Represents user defined population percentile of selected eyellipse feature. */
                public: enum EyePercentile
                {
                    EyePercentilePer95/**Represents selecting 95% eyellipse percentile. */,
                    EyePercentilePer99/**Represents selecting 99% eyellipse percentile. */
                };

                /** Represents the type how driver's view is limited. */
                public: enum LimitType
                {
                    LimitTypeByanApertureThroughAWindow/**Represents driver's view is limited by the viewing aperture. */,
                    LimitTypeByHeadTurnandEyeRotation/**Represents driver's view is limited by the amount of head turn and eye rotation. */
                };

                /** Represents the filter of boundary definition. */
                public: enum BoundaryFilterType
                {
                    BoundaryFilterTypeCurvesEdges/**Represents defining the boundary by a loop of curves or edges. */,
                    BoundaryFilterTypeFaces/**Represents defining the boundary by faces. */
                };

                /** Represents the angle of eye rotation to be used for analysis. */
                public: enum EyeRotation
                {
                    EyeRotationMaximum/**Represents selecting maximum eye rotation angle. */,
                    EyeRotationEasy/**Represents selecting easy eye rotation angle. */,
                    EyeRotationCustomize/**Represents selecting customize eye rotation angle. */
                };

                /** Represents the angle of head turn to be used for analysis. */
                public: enum HeadTurn
                {
                    HeadTurnMaximum/**Represents selecting maximum head turn angle. */,
                    HeadTurnEasy/**Represents selecting easy head turn angle. */,
                    HeadTurnCustomize/**Represents selecting customize head turn angle. */,
                    HeadTurnNo/**Represents selecting no head turn angle. */
                };

                private: DirectFieldViewBuilderImpl * m_directfieldviewbuilder_impl;
                private: friend class  _DirectFieldViewBuilderBuilder;
                protected: DirectFieldViewBuilder();
                public: ~DirectFieldViewBuilder();
                /**Returns  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseStandardLoading
                (
                );
                /**Sets  the option to indicate if the loading specified by the standard will be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetUseStandardLoading
                (
                    bool useStandardLoading /** usestandardloading */ 
                );
                /**Returns  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Loading
                (
                );
                /**Sets  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLoading
                (
                    const NXString & loading /** loading */ 
                );
                /**Sets  the name of the used loading. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetLoading
                (
                    const char * loading /** loading */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType@endlink  for the driver type to be considered.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType Driver
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType@endlink  for the driver type to be considered.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDriver
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::DriverType driver /** driver */ 
                );
                /**Returns  the selected eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectFeature * Eyellipse
                (
                );
                /**Returns  the eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Feature * EyeFeature
                (
                );
                /**Sets  the eyellipse feature. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetEyeFeature
                (
                    NXOpen::Features::Feature * eyeFeature /** eyefeature */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile@endlink  for the eyellipse percentile to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile EyellipsePercentile
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile@endlink  for the eyellipse percentile to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyellipsePercentile
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyePercentile eyellipsePercentile /** eyellipsepercentile */ 
                );
                /**Returns  the left eye point.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * LeftEye
                (
                );
                /**Sets  the left eye point.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLeftEye
                (
                    NXOpen::Point * leftEye /** lefteye */ 
                );
                /**Returns  the right eye point. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * RightEye
                (
                );
                /**Sets  the right eye point. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetRightEye
                (
                    NXOpen::Point * rightEye /** righteye */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType@endlink  for the limitation type. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType LimitationType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType@endlink  for the limitation type. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetLimitationType
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::LimitType limitationType /** limitationtype */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType@endlink  for the boundary filter. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType BoundaryFilter
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType@endlink  for the boundary filter. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetBoundaryFilter
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::BoundaryFilterType boundaryFilter /** boundaryfilter */ 
                );
                /**Returns  the curves or edges used to define the aperture boundary. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * BoundaryCurve
                (
                );
                /**Sets  the curves or edges used to define the aperture boundary. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBoundaryCurve
                (
                    NXOpen::ScCollector * boundaryCurve /** boundarycurve */ 
                );
                /**Returns  the faces used to define the aperture boundary. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * BoundaryFace
                (
                );
                /**Sets  the faces used to define the aperture boundary. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBoundaryFace
                (
                    NXOpen::ScCollector * boundaryFace /** boundaryface */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation@endlink  for the eye rotation type to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation EyeRotationType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation@endlink  for the eye rotation type to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotationType
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::EyeRotation eyeRotationType /** eyerotationtype */ 
                );
                /**Returns  the left eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double EyeRotateAngleLeft
                (
                );
                /**Sets  the left eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotateAngleLeft
                (
                    double eyeRotateAngleLeft /** eyerotateangleleft */ 
                );
                /**Returns  the right eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double EyeRotateAngleRight
                (
                );
                /**Sets  the right eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotateAngleRight
                (
                    double eyeRotateAngleRight /** eyerotateangleright */ 
                );
                /**Returns  the up eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double EyeRotateAngleUp
                (
                );
                /**Sets  the up eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotateAngleUp
                (
                    double eyeRotateAngleUp /** eyerotateangleup */ 
                );
                /**Returns  the down eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double EyeRotateAngleDown
                (
                );
                /**Sets  the down eye rotate angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotateAngleDown
                (
                    double eyeRotateAngleDown /** eyerotateangledown */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn@endlink  for the head turn type to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn HeadTurnType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn@endlink  for the head turn type to be used. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadTurnType
                (
                    NXOpen::Features::VehicleDesign::DirectFieldViewBuilder::HeadTurn headTurnType /** headturntype */ 
                );
                /**Returns  the left head turn angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double HeadTurnAngleLeft
                (
                );
                /**Sets  the left head turn angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadTurnAngleLeft
                (
                    double headTurnAngleLeft /** headturnangleleft */ 
                );
                /**Returns  the right head turn angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double HeadTurnAngleRight
                (
                );
                /**Sets  the right head turn angle. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadTurnAngleRight
                (
                    double headTurnAngleRight /** headturnangleright */ 
                );
                /**Returns  the option to indicate if the extension will be allowed to use. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool AllowExtension
                (
                );
                /**Sets  the option to indicate if the extension will be allowed to use. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAllowExtension
                (
                    bool allowExtension /** allowextension */ 
                );
                /**Returns  the extension length. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: double ExtensionLength
                (
                );
                /**Sets  the extension length. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetExtensionLength
                (
                    double extensionLength /** extensionlength */ 
                );
                /**Returns  the option to indicate if the boundary curves will be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool OutputBoundaryCurves
                (
                );
                /**Sets  the option to indicate if the boundary curves will be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOutputBoundaryCurves
                (
                    bool outputBoundaryCurves /** outputboundarycurves */ 
                );
                /**Returns  the curve layer. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: int CurveLayer
                (
                );
                /**Sets  the curve layer. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCurveLayer
                (
                    int curveLayer /** curvelayer */ 
                );
                /**Returns  the curve color. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * CurveColor
                (
                );
                /**Sets  the curve color. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetCurveColor
                (
                    NXOpen::NXColor * curveColor /** curvecolor */ 
                );
                /**Returns  the option to indicate if the vision face will be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool OutputVisionFace
                (
                );
                /**Sets  the option to indicate if the vision face will be created. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOutputVisionFace
                (
                    bool outputVisionFace /** outputvisionface */ 
                );
                /**Returns  the face layer. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: int FaceLayer
                (
                );
                /**Sets  the face layer. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFaceLayer
                (
                    int faceLayer /** facelayer */ 
                );
                /**Returns  the face color. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * FaceColor
                (
                );
                /**Sets  the face color. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetFaceColor
                (
                    NXOpen::NXColor * faceColor /** facecolor */ 
                );
                /**Returns  the option to indicate whether enable validation checker. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool EnableValidationChecker
                (
                );
                /**Sets  the option to indicate whether enable validation checker. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEnableValidationChecker
                (
                    bool enableValidationChecker /** enablevalidationchecker */ 
                );
                /** Validates the Direct Field of View analysis and shows the validation results. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ValidationButton
                (
                );
                /**Returns  the indication if the packaging validation gadget is invoked to view the results. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ViewResults
                (
                );
                /**Sets  the indication if the packaging validation gadget is invoked to view the results. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetViewResults
                (
                    bool viewResults /** viewresults */ 
                );
                /**Returns  the indication if the validation log file is generated. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool GenerateLogFile
                (
                );
                /**Sets  the indication if the validation log file is generated. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGenerateLogFile
                (
                    bool generateLogFile /** generatelogfile */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
