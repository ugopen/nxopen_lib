#ifndef NXOpen_CAE_POSTSCENARIOAGGREGATIONINPUT_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOAGGREGATIONINPUT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioAggregationInput.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioResultGroupVariable.hxx>
#include <NXOpen/CAE_PostScenarioVariant.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioAggregationInput;
    }
    namespace CAE
    {
        class PostScenarioResultGroupVariable;
    }
    namespace CAE
    {
        class PostScenarioVariant;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioAggregationInputImpl;
        /** 
             @brief  
                Represents the input for a @link CAE::PostScenarioDescriptorBuilder::AggregationCallback CAE::PostScenarioDescriptorBuilder::AggregationCallback@endlink . 
             

         

            It contains the available values and descriptive data for each slot variable requested by the scenario descriptor. For a list
            of the slot variables that are being aggregated, check you scenario XML for the \<VariableRef\> elements
            belonging to the \<AggregatedSelectionVariable\>.
             <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioAggregationInput : public NXOpen::TransientObject
        {
            private: PostScenarioAggregationInputImpl * m_postscenarioaggregationinput_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioAggregationInput(void *ptr);
            /// \endcond 
            /** Dispose of this instance. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioAggregationInput();
            /** Returns the dependent variables of the data matched with a given slot variable.  @return  The dependent variables. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioResultGroupVariable *> GetDependentVariables
            (
                const NXString & slotVariableName /** The slot variable name. */
            );
            /** Returns the dependent variables of the data matched with a given slot variable.  @return  The dependent variables. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            std::vector<NXOpen::CAE::PostScenarioResultGroupVariable *> GetDependentVariables
            (
                const char * slotVariableName /** The slot variable name. */
            );
            /** Returns the matched data source variable for a given slot variable to be consumed by the aggregation.  @return  The matched data source variable. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioResultGroupVariable * GetDataSourceVariable
            (
                const NXString & slotVariableName /** The slot variable name. */
            );
            /** Returns the matched data source variable for a given slot variable to be consumed by the aggregation.  @return  The matched data source variable. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAE::PostScenarioResultGroupVariable * GetDataSourceVariable
            (
                const char * slotVariableName /** The slot variable name. */
            );
            /** Returns the available values for a given slot variable. Use these values to perform the aggregation.  @return  The available values of the variable. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioVariant *> GetVariableValues
            (
                const NXString & slotVariableName /** The slot variable name. */,
                NXOpen::CAE::PostScenarioVariant ** defaultValue /** The default value of the variable. */
            );
            /** Returns the available values for a given slot variable. Use these values to perform the aggregation.  @return  The available values of the variable. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            std::vector<NXOpen::CAE::PostScenarioVariant *> GetVariableValues
            (
                const char * slotVariableName /** The slot variable name. */,
                NXOpen::CAE::PostScenarioVariant ** defaultValue /** The default value of the variable. */
            );
            /** Returns the optional annotations of the variable values for a given slot variable. 
                        
                            The display names are optional. If missing, an empty list is returned.
                        
                     @return  The display names of the variable values, provided in the same order 
                                                                                        as @link CAE::PostScenarioAggregationInput::GetVariableValues CAE::PostScenarioAggregationInput::GetVariableValues@endlink 
                                                                                        or an empty list if annotations are not provided. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetVariableValueAnnotations
            (
                const NXString & slotVariableName /** The slot variable name. */
            );
            /** Returns the optional annotations of the variable values for a given slot variable. 
                        
                            The display names are optional. If missing, an empty list is returned.
                        
                     @return  The display names of the variable values, provided in the same order 
                                                                                        as @link CAE::PostScenarioAggregationInput::GetVariableValues CAE::PostScenarioAggregationInput::GetVariableValues@endlink 
                                                                                        or an empty list if annotations are not provided. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            std::vector<NXString> GetVariableValueAnnotations
            (
                const char * slotVariableName /** The slot variable name. */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
