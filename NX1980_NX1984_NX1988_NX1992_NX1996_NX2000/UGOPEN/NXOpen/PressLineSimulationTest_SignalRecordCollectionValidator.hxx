#ifndef NXOpen_PRESSLINESIMULATIONTEST_SIGNALRECORDCOLLECTIONVALIDATOR_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATIONTEST_SIGNALRECORDCOLLECTIONVALIDATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulationTest_SignalRecordCollectionValidator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/IValidator.hxx>
#include <NXOpen/IValidator.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libpresslinesimultestopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulationTest
    {
        class SignalRecordCollectionValidator;
    }
    class IValidator;
    namespace PressLineSimulationTest
    {
        class _SignalRecordCollectionValidatorBuilder;
        class SignalRecordCollectionValidatorImpl;

        /// \cond NX_NO_DOC 
        /** This is a validator class for a @link NXOpen::PressLineSimulation::SignalRecord NXOpen::PressLineSimulation::SignalRecord@endlink    <br> This is a test class.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class PRESSLINESIMULTESTOPENCPPEXPORT  SignalRecordCollectionValidator : public NXOpen::TaggedObject, public virtual NXOpen::IValidator
        {
            private: SignalRecordCollectionValidatorImpl * m_signalrecordcollectionvalidator_impl;
            private: friend class  _SignalRecordCollectionValidatorBuilder;
            protected: SignalRecordCollectionValidator();
            public: ~SignalRecordCollectionValidator();

            /// \cond NX_NO_DOC 
            /**Returns  the algorithm to use for validation. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ValidatorVersion ValidatorVersion
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the algorithm to use for validation. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual void SetValidatorVersion
            (
                NXOpen::ValidatorVersion version /** version */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the print level for validation. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ValidatorPrintLevel ValidatorPrintLevel
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the print level for validation. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual void SetValidatorPrintLevel
            (
                NXOpen::ValidatorPrintLevel level /** level */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Deletes the validator. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual void Destroy
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set the ood status of features. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void SetValidatorPrintOodStatus
            (
                bool status /** status */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
