#ifndef NXOpen_DMU_DMUDEBUGSESSION_HXX_INCLUDED
#define NXOpen_DMU_DMUDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DMU_DMUDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libdmuopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DMU
    {
        class DMUDebugSession;
    }
    class Session;
    class Part;
    namespace DMU
    {
        class DMUDebugSessionImpl;

        /// \cond NX_NO_DOC 
        /** Represents a class that is used for DMU testing. This class shouldn't be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class DMUOPENCPPEXPORT  DMUDebugSession
        {
            private: DMUDebugSessionImpl * m_dmudebugsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit DMUDebugSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static DMUDebugSession* theDMUDebugSession;
            /** Returns the DMUDebugSession object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static DMUDebugSession* GetDMUDebugSession(NXOpen::Session *owner);
            public: ~DMUDebugSession();

            /// \cond NX_NO_DOC 
            /** Prints validation information for worksets 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ValidateWorksets
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Prints validation information for snapshots in the given part 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ValidateSnapshots
            (
                NXOpen::Part * part /** part */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Prints validation information for all objects 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void ValidateAllObjects
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Set asset toggle value.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetAssetValidationValue
            (
                const NXString & assetName /** assetname */ ,
                bool value /** value */ 
            );
            /** Set asset toggle value.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            void SetAssetValidationValue
            (
                const char * assetName /** assetname */ ,
                bool value /** value */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Clean asset name to toggle value map.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void CleanAssetValidationValues
            (
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
