#ifndef NXOpen_WELD_WELDPREFERENCEBUILDER_HXX_INCLUDED
#define NXOpen_WELD_WELDPREFERENCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_WeldPreferenceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/WeldAssistant.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class WeldPreferenceBuilder;
    }
    class Builder;
    class NXColor;
    namespace Weld
    {
        class _WeldPreferenceBuilderBuilder;
        class WeldPreferenceBuilderImpl;
        /** Represents a @link NXOpen::Weld::WeldPreferenceBuilder NXOpen::Weld::WeldPreferenceBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreatePreferenceBuilder  NXOpen::Weld::WeldManager::CreatePreferenceBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CurrentGroupIDColorIndex </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        DatumIdLowerRange </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DatumIdUpperRange </term> <description> 
         
        1000 </description> </item> 

        <item><term> 
         
        DatumObjectLayer </term> <description> 
         
        255 </description> </item> 

        <item><term> 
         
        MeasurementIdLowerRange </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        MeasurementIdUpperRange </term> <description> 
         
        1000 </description> </item> 

        <item><term> 
         
        MeasurementObjectLayer </term> <description> 
         
        255 </description> </item> 

        <item><term> 
         
        WeldArcGridLineEndCapDisp </term> <description> 
         
        0.1 </description> </item> 

        <item><term> 
         
        WeldArcGridLineTopDisp </term> <description> 
         
        0.66 </description> </item> 

        <item><term> 
         
        WeldConstLayer </term> <description> 
         
        231 </description> </item> 

        <item><term> 
         
        WeldIdLowerRange </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        WeldIdUpperRange </term> <description> 
         
        1000 </description> </item> 

        <item><term> 
         
        WeldObjectLayer </term> <description> 
         
        255 </description> </item> 

        <item><term> 
         
        WeldSymbolDecimalPlaces </term> <description> 
         
        3 </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  WeldPreferenceBuilder : public NXOpen::Builder
        {
            private: WeldPreferenceBuilderImpl * m_weldpreferencebuilder_impl;
            private: friend class  _WeldPreferenceBuilderBuilder;
            protected: WeldPreferenceBuilder();
            public: ~WeldPreferenceBuilder();
            /**Returns  the weld part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WeldPartNumber
            (
            );
            /**Sets  the weld part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldPartNumber
            (
                const NXString & weldPartNumber /** weldpartnumber */ 
            );
            /**Sets  the weld part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetWeldPartNumber
            (
                const char * weldPartNumber /** weldpartnumber */ 
            );
            /**Returns  the weld object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int WeldObjectLayer
            (
            );
            /**Sets  the weld object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldObjectLayer
            (
                int weldObjectLayer /** weldobjectlayer */ 
            );
            /**Returns  the weld const layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int WeldConstLayer
            (
            );
            /**Sets  the weld const layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldConstLayer
            (
                int weldConstLayer /** weldconstlayer */ 
            );
            /**Returns  the weld id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int WeldIdLowerRange
            (
            );
            /**Sets  the weld id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldIdLowerRange
            (
                int weldIdLowerRange /** weldidlowerrange */ 
            );
            /**Returns  the weld id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int WeldIdUpperRange
            (
            );
            /**Sets  the weld id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldIdUpperRange
            (
                int weldIdUpperRange /** weldidupperrange */ 
            );
            /**Returns  the weld group id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WeldGroupIdLowerRange
            (
            );
            /**Sets  the weld group id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldGroupIdLowerRange
            (
                const NXString & weldGroupIdLowerRange /** weldgroupidlowerrange */ 
            );
            /**Sets  the weld group id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetWeldGroupIdLowerRange
            (
                const char * weldGroupIdLowerRange /** weldgroupidlowerrange */ 
            );
            /**Returns  the weld group id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WeldGroupIdUpperRange
            (
            );
            /**Sets  the weld group id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldGroupIdUpperRange
            (
                const NXString & weldGroupIdUpperRange /** weldgroupidupperrange */ 
            );
            /**Sets  the weld group id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetWeldGroupIdUpperRange
            (
                const char * weldGroupIdUpperRange /** weldgroupidupperrange */ 
            );
            /**Returns  the weld name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WeldNamePrefix
            (
            );
            /**Sets  the weld name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldNamePrefix
            (
                const NXString & weldNamePrefix /** weldnameprefix */ 
            );
            /**Sets  the weld name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetWeldNamePrefix
            (
                const char * weldNamePrefix /** weldnameprefix */ 
            );
            /**Returns  the weld asso color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * WeldAssoColor
            (
            );
            /**Sets  the weld asso color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldAssoColor
            (
                NXOpen::NXColor * weldAssoColor /** weldassocolor */ 
            );
            /**Returns  the weld fixed color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * WeldFixedColor
            (
            );
            /**Sets  the weld fixed color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldFixedColor
            (
                NXOpen::NXColor * weldFixedColor /** weldfixedcolor */ 
            );
            /**Returns  the weld retained color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * WeldRetainedColor
            (
            );
            /**Sets  the weld retained color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldRetainedColor
            (
                NXOpen::NXColor * weldRetainedColor /** weldretainedcolor */ 
            );
            /**Returns  the group idcolor assigned 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldGroupIdColor CurrentGroupIDColorIndex
            (
            );
            /**Sets  the group idcolor assigned 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetCurrentGroupIDColorIndex
            (
                NXOpen::Weld::WeldGroupIdColor currentGroupIDColorIndex /** currentgroupidcolorindex */ 
            );
            /**Returns  the weld sym dec places 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int WeldSymbolDecimalPlaces
            (
            );
            /**Sets  the weld sym dec places 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldSymbolDecimalPlaces
            (
                int weldSymbolDecimalPlaces /** weldsymboldecimalplaces */ 
            );
            /**Returns  the weld arc grid line top disp 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double WeldArcGridLineTopDisp
            (
            );
            /**Sets  the weld arc grid line top disp 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldArcGridLineTopDisp
            (
                double weldArcGridLineTopDisp /** weldarcgridlinetopdisp */ 
            );
            /**Returns  the weld arc grid line end cap disp 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double WeldArcGridLineEndCapDisp
            (
            );
            /**Sets  the weld arc grid line end cap disp 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetWeldArcGridLineEndCapDisp
            (
                double weldArcGridLineEndCapDisp /** weldarcgridlineendcapdisp */ 
            );
            /**Returns  the datum part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DatumPartNumber
            (
            );
            /**Sets  the datum part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumPartNumber
            (
                const NXString & datumPartNumber /** datumpartnumber */ 
            );
            /**Sets  the datum part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetDatumPartNumber
            (
                const char * datumPartNumber /** datumpartnumber */ 
            );
            /**Returns  the datum object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int DatumObjectLayer
            (
            );
            /**Sets  the datum object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumObjectLayer
            (
                int datumObjectLayer /** datumobjectlayer */ 
            );
            /**Returns  the datum id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int DatumIdLowerRange
            (
            );
            /**Sets  the datum id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumIdLowerRange
            (
                int datumIdLowerRange /** datumidlowerrange */ 
            );
            /**Returns  the datum id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int DatumIdUpperRange
            (
            );
            /**Sets  the datum id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumIdUpperRange
            (
                int datumIdUpperRange /** datumidupperrange */ 
            );
            /**Returns  the datum name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DatumNamePrefix
            (
            );
            /**Sets  the datum name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumNamePrefix
            (
                const NXString & datumNamePrefix /** datumnameprefix */ 
            );
            /**Sets  the datum name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetDatumNamePrefix
            (
                const char * datumNamePrefix /** datumnameprefix */ 
            );
            /**Returns  the datum object color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * DatumObjectColor
            (
            );
            /**Sets  the datum object color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumObjectColor
            (
                NXOpen::NXColor * datumObjectColor /** datumobjectcolor */ 
            );
            /** The datum selected prefix  @return  Selected datum prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDatumSelectedPrefix
            (
            );
            /** The datum selected prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumSelectedPrefix
            (
                std::vector<NXString> & datumSelectedPrefix /** Selected datum prefix */
            );
            /** The datum selected suffix  @return  Selected datum suffix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDatumSelectedSuffix
            (
            );
            /** Selected datum suffix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDatumSelectedSuffix
            (
                std::vector<NXString> & datumSelectedSuffix /** Selected datum suffix */
            );
            /**Returns  the measurement part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MeasurementPartNumber
            (
            );
            /**Sets  the measurement part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementPartNumber
            (
                const NXString & measurementPartNumber /** measurementpartnumber */ 
            );
            /**Sets  the measurement part number 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetMeasurementPartNumber
            (
                const char * measurementPartNumber /** measurementpartnumber */ 
            );
            /**Returns  the measurement object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int MeasurementObjectLayer
            (
            );
            /**Sets  the measurement object layer 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementObjectLayer
            (
                int measurementObjectLayer /** measurementobjectlayer */ 
            );
            /**Returns  the measurement id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int MeasurementIdLowerRange
            (
            );
            /**Sets  the measurement id lower range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementIdLowerRange
            (
                int measurementIdLowerRange /** measurementidlowerrange */ 
            );
            /**Returns  the measurement id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int MeasurementIdUpperRange
            (
            );
            /**Sets  the measurement id upper range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementIdUpperRange
            (
                int measurementIdUpperRange /** measurementidupperrange */ 
            );
            /**Returns  the measurement name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MeasurementNamePrefix
            (
            );
            /**Sets  the measurement name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementNamePrefix
            (
                const NXString & measurementNamePrefix /** measurementnameprefix */ 
            );
            /**Sets  the measurement name prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            void SetMeasurementNamePrefix
            (
                const char * measurementNamePrefix /** measurementnameprefix */ 
            );
            /**Returns  the measurement object color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * MeasurementObjectColor
            (
            );
            /**Sets  the measurement object color 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementObjectColor
            (
                NXOpen::NXColor * measurementObjectColor /** measurementobjectcolor */ 
            );
            /** The measurement selected prefix  @return  Selected measurement prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetMeasurementSelectedPrefix
            (
            );
            /** The measurement selected prefix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementSelectedPrefix
            (
                std::vector<NXString> & measurementSelectedPrefix /** Selected measurement prefix */
            );
            /** The measurement selected suffix  @return  Selected measurement suffix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetMeasurementSelectedSuffix
            (
            );
            /** Selected measurement suffix 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMeasurementSelectedSuffix
            (
                std::vector<NXString> & measurementSelectedSuffix /** Selected measurement suffix */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
