#ifndef NXOpen_MECHANICALROUTING_CABLEWAYATTRIBUTEBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_CABLEWAYATTRIBUTEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_CablewayAttributeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class CablewayAttributeBuilder;
    }
    class Builder;
    class SelectNXObjectList;
    class TaggedObject;
    namespace MechanicalRouting
    {
        class _CablewayAttributeBuilderBuilder;
        class CablewayAttributeBuilderImpl;
        /**
                CablewayAttributeBuilder is to assign predefined attribute/value to selected routing objects
             <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayAttributeBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateCablewayAttributeBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AttributeCatalog </term> <description> 
         
        EditPointAttributes </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  CablewayAttributeBuilder : public NXOpen::Builder
        {
            /** catalog type */
            public: enum AttributeCatalogType
            {
                AttributeCatalogTypeEditPointAttributes/** edit point attributes */ ,
                AttributeCatalogTypeEditCurveAttributes/** edit curve attributes */ ,
                AttributeCatalogTypeEditHangerAttributes/** edit hanger attributes */ 
            };

            private: CablewayAttributeBuilderImpl * m_cablewayattributebuilder_impl;
            private: friend class  _CablewayAttributeBuilderBuilder;
            protected: CablewayAttributeBuilder();
            public: ~CablewayAttributeBuilder();
            /**Returns  the attribute catalog 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: NXOpen::MechanicalRouting::CablewayAttributeBuilder::AttributeCatalogType AttributeCatalog
            (
            );
            /**Sets  the attribute catalog 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void SetAttributeCatalog
            (
                NXOpen::MechanicalRouting::CablewayAttributeBuilder::AttributeCatalogType attributeCatalog /** attributecatalog */ 
            );
            /**Returns  the route object collector 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: NXOpen::SelectNXObjectList * SelectedObjectList
            (
            );
            /** Build equivalent points map. The equivalent points are controlpoints or Cablewaynetworks point that are overlapped in connected parts.
                    They should have the same cableway attributes. The reason is to build the map is when assign attributes to point, only assign to one of them, 
                    then copy the attributes assigned to all its equivalent points. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void BuildEquivalentPointsMap
            (
                const std::vector<NXOpen::TaggedObject *> & objects /** objects */ 
            );
            /** Copy template attributes from point to its equivalent points. The equivalent points are controlpoints or Cablewaynetworks point that are overlapped in connected parts.
                    Before copying the attributes, build the equivalent points map first.
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void CopyTemplateAttributesToEquivalentPoints
            (
                const std::vector<NXOpen::TaggedObject *> & objects /** objects */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
