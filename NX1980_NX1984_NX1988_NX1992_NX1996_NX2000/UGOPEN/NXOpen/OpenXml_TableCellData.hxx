#ifndef NXOpen_OPENXML_TABLECELLDATA_HXX_INCLUDED
#define NXOpen_OPENXML_TABLECELLDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     OpenXml_TableCellData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/OpenXml_DocumentData.hxx>
#include <NXOpen/OpenXml_DocumentData.hxx>
#include <NXOpen/OpenXml_ImageGroupDocumentData.hxx>
#include <NXOpen/OpenXml_TextDocumentData.hxx>
#include <NXOpen/libnxopencpp_openxml_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace OpenXml
    {
        class TableCellData;
    }
    namespace OpenXml
    {
        class DocumentData;
    }
    namespace OpenXml
    {
        class ImageGroupDocumentData;
    }
    namespace OpenXml
    {
        class TextDocumentData;
    }
    namespace OpenXml
    {
    }
    namespace OpenXml
    {
        class TableCellDataImpl;
        /** Represents the table cell to be exported to the speific Open XML file. 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_OPENXMLEXPORT  TableCellData : public NXOpen::OpenXml::DocumentData
        {
            private: TableCellDataImpl * m_tablecelldata_impl;
            /// \cond NX_NO_DOC 
            public: explicit TableCellData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~TableCellData();
            /** Gets the grid IDs of the table cell @return  the grid ID array 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<int> GetGridsId
            (
            );
            /** Creates a new @link NXOpen::OpenXml::TextDocumentData NXOpen::OpenXml::TextDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::OpenXml::TableCellData NXOpen::OpenXml::TableCellData@endlink  object @return  the text data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::TextDocumentData * AddText
            (
                const NXString & textContent /** the content of the text data*/
            );
            /** Creates a new @link NXOpen::OpenXml::TextDocumentData NXOpen::OpenXml::TextDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::OpenXml::TableCellData NXOpen::OpenXml::TableCellData@endlink  object @return  the text data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::OpenXml::TextDocumentData * AddText
            (
                const char * textContent /** the content of the text data*/
            );
            /** Creates a new @link NXOpen::OpenXml::ImageGroupDocumentData NXOpen::OpenXml::ImageGroupDocumentData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::OpenXml::TableCellData NXOpen::OpenXml::TableCellData@endlink  object @return  the image group data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::ImageGroupDocumentData * AddImageGroup
            (
            );
            /** Gets the number of content in the table cell @return  the number of content 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetContentCount
            (
            );
            /** Gets the nth content data        
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::OpenXml::TableCellData NXOpen::OpenXml::TableCellData@endlink  object @return  the content
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::DocumentData * GetNthContent
            (
                int index /** the index of content*/
            );
            /** Removes the nth content data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteNthContent
            (
                int index /** the index of content*/
            );
            /** Removes all contents data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ClearContents
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
