#ifndef NXOpen_CAE_ELEMENTCONNECTIVITYBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTCONNECTIVITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementConnectivityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ElementConnectivityBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class SelectFENode;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class _ElementConnectivityBuilderBuilder;
        class ElementConnectivityBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::ElementConnectivityBuilder NXOpen::CAE::ElementConnectivityBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateElementConnectivityBuilder  NXOpen::CAE::NodeElementManager::CreateElementConnectivityBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ElementConnectivityBuilder : public NXOpen::Builder
        {
            /**Modify connectivity types*/
            public: enum Types
            {
                TypesSingleElement/**Modify connectivity of selected element.*/,
                TypesAllElementsAttachedToNode/**Modify connectivities of all attached elements to nodes.*/
            };

            /**Available modify connectivity methods*/
            public: enum Methods
            {
                MethodsReplaceNode/**Replace a node of an element by another one*/,
                MethodsSwapEnds/**Swap the nodes of a 2-noded element*/,
                MethodsModifyLegs/**Add or delete leg nodes of spider element*/
            };

            private: ElementConnectivityBuilderImpl * m_elementconnectivitybuilder_impl;
            private: friend class  _ElementConnectivityBuilderBuilder;
            protected: ElementConnectivityBuilder();
            public: ~ElementConnectivityBuilder();
            /**Returns  the out node which will be replaced
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENode * OutNode
            (
            );
            /**Returns  the in node which will replace 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENode * InNode
            (
            );
            /**Returns  the delete orphan node flag, telling whether orphan nodes will be deleted 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool DeleteOrphan
            (
            );
            /**Sets  the delete orphan node flag, telling whether orphan nodes will be deleted 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDeleteOrphan
            (
                bool deleteOrphan /** deleteorphan */ 
            );
            /**Returns  a type which indicates whether connectivity is to be modfied for selected element or all attached elements.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementConnectivityBuilder::Types Type
            (
            );
            /**Sets  a type which indicates whether connectivity is to be modfied for selected element or all attached elements.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetType
            (
                NXOpen::CAE::ElementConnectivityBuilder::Types type /** type */ 
            );
            /**Returns  a selected element whose connectivity is to be modified. 
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectElementsBuilder * Element
            (
            );
            /**Returns  an element modification method.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementConnectivityBuilder::Methods Method
            (
            );
            /**Sets  an element modification method.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMethod
            (
                NXOpen::CAE::ElementConnectivityBuilder::Methods method /** method */ 
            );
            /**Returns the spider element leg nodes. To delete a leg node, the node should be removed from the list and to add a new leg node, the node is added in the list.
             <br>  Created in NX7.5.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectFENodeList * SpiderLegNodes
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
