#ifndef NXOpen_ANNOTATIONS_BASEVEHICLEGRIDBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BASEVEHICLEGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BaseVehicleGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class BaseVehicleGridBuilder;
    }
    namespace Annotations
    {
        class StyleBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    namespace Annotations
    {
        class _BaseVehicleGridBuilderBuilder;
        class BaseVehicleGridBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link NXOpen::Annotations::BaseVehicleGridBuilder NXOpen::Annotations::BaseVehicleGridBuilder@endlink .
            This class allows to creation of a vehicle grid annotation
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  BaseVehicleGridBuilder : public NXOpen::Builder
        {
            private: BaseVehicleGridBuilderImpl * m_basevehiclegridbuilder_impl;
            private: friend class  _BaseVehicleGridBuilderBuilder;
            protected: BaseVehicleGridBuilder();
            public: ~BaseVehicleGridBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the origin 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Origin
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the origin 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal axis 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * HorizontalAxis
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the horizontal axis 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHorizontalAxis
            (
                NXOpen::Direction * horizontalAxis /** horizontalaxis */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical axis 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * VerticalAxis
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the vertical axis 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVerticalAxis
            (
                NXOpen::Direction * verticalAxis /** verticalaxis */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the grid spacing 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double GridSpacing
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the grid spacing 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetGridSpacing
            (
                double gridSpacing /** gridspacing */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal line display 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowHorizontalLines
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the horizontal line display 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetShowHorizontalLines
            (
                bool showHorizontalLines /** showhorizontallines */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal minimum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double HorizontalMinimumValue
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the horizontal minimum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHorizontalMinimumValue
            (
                double horizontalMinimumValue /** horizontalminimumvalue */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal maximum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double HorizontalMaximumValue
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the horizontal maximum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHorizontalMaximumValue
            (
                double horizontalMaximumValue /** horizontalmaximumvalue */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical line display 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowVerticalLines
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the vertical line display 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetShowVerticalLines
            (
                bool showVerticalLines /** showverticallines */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical minimum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double VerticalMinimumValue
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the vertical minimum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVerticalMinimumValue
            (
                double verticalMinimumValue /** verticalminimumvalue */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical maximum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double VerticalMaximumValue
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the vertical maximum value 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVerticalMaximumValue
            (
                double verticalMaximumValue /** verticalmaximumvalue */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the style 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::StyleBuilder * Style
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
