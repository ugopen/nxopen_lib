#ifndef NXOpen_ROUTING_ADOPTIONTONGBVRBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ADOPTIONTONGBVRBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_AdoptionToNGBVRBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_NamingPatternBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class AdoptionToNGBVRBuilder;
    }
    class Builder;
    namespace Routing
    {
        class NamingPatternBuilder;
    }
    class SelectNXObject;
    namespace Routing
    {
        class _AdoptionToNGBVRBuilderBuilder;
        class AdoptionToNGBVRBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
                Represents a @link NXOpen::Routing::AdoptionToNGBVRBuilder NXOpen::Routing::AdoptionToNGBVRBuilder@endlink 
            
                This builder takes assembly / subassembly and converts it to Next Generation Assemblies Routing structure.
             <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateAdoptionToNGBVRBuilder  NXOpen::Routing::RouteManager::CreateAdoptionToNGBVRBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  AdoptionToNGBVRBuilder : public NXOpen::Builder
        {
            /** Determines the component naming method type */

            /// \cond NX_NO_DOC 
            public: enum NamingMethod
            {
                NamingMethodPlugin/** plugin */ ,
                NamingMethodIncremental/** incremental */ 
            };


            /// \endcond 
            private: AdoptionToNGBVRBuilderImpl * m_adoptiontongbvrbuilder_impl;
            private: friend class  _AdoptionToNGBVRBuilderBuilder;
            protected: AdoptionToNGBVRBuilder();
            public: ~AdoptionToNGBVRBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the selected part to adopt 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObject * PartToAdoptSelection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Checks the adoption validity of part stored in this builder object.. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: int IsValidPartToAdopt
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the space reservation advancement 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool AdvanceSpaceReservation
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the space reservation advancement 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetAdvanceSpaceReservation
            (
                bool advanceSpaceReservation /** advancespacereservation */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the report result to information window 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool ReportResultToInfowindow
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the report result to information window 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetReportResultToInfowindow
            (
                bool reportResultToInfowindow /** reportresulttoinfowindow */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the naming pattern generating virtual terminals 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::NamingPatternBuilder * NamingPattern
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the naming pattern generating virtual terminals 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetNamingPattern
            (
                NXOpen::Routing::NamingPatternBuilder * pattern /** pattern */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Get the generated names 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: std::vector<NXString> GetGeneratedNames
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Generates component names via incremental or through plugin and validates them 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: bool GenerateAndValidateNames
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the component naming method type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Routing::AdoptionToNGBVRBuilder::NamingMethod ComponentNamingMethod
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the component naming method type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetComponentNamingMethod
            (
                NXOpen::Routing::AdoptionToNGBVRBuilder::NamingMethod namingMethod /** namingmethod */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
