#ifndef NXOpen_FEATURES_SHIPDESIGN_PLATEPREPARATIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PLATEPREPARATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PlatePreparationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PlatePreparationBuilder;
        }
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _PlatePreparationBuilderBuilder;
            class PlatePreparationBuilderImpl;
            /**
                Used to create or edit a @link NXOpen::Features::ShipDesign::PlatePreparation NXOpen::Features::ShipDesign::PlatePreparation@endlink  feature.
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreatePlatePreparationBuilder  NXOpen::Features::ShipCollection::CreatePlatePreparationBuilder @endlink  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PlatePreparationBuilder : public NXOpen::Features::FeatureBuilder
            {
                private: PlatePreparationBuilderImpl * m_platepreparationbuilder_impl;
                private: friend class  _PlatePreparationBuilderBuilder;
                protected: PlatePreparationBuilder();
                public: ~PlatePreparationBuilder();
                /** Remove the part from the collection of parts to be unformed and scaled. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void RemovePart
                (
                    const NXString & partName /** partname */ 
                );
                /** Remove the part from the collection of parts to be unformed and scaled. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                void RemovePart
                (
                    const char * partName /** partname */ 
                );
                /** Add the part to the collection of parts to be unformed and scaled. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void AddPart
                (
                    const NXString & partName /** partname */ 
                );
                /** Add the part to the collection of parts to be unformed and scaled. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                void AddPart
                (
                    const char * partName /** partname */ 
                );
                /**Returns  the expression containing the scale factor for the length direction (X). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Length
                (
                );
                /**Returns  the expression containing the scale factor for the width direction (Y). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Width
                (
                );
                /**Returns  the coordinate system defining the origin as well as the X and Y axis for shrinkage. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * CoordinateSystem
                (
                );
                /**Sets  the coordinate system defining the origin as well as the X and Y axis for shrinkage. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCoordinateSystem
                (
                    NXOpen::CoordinateSystem * coordinateSystem /** coordinatesystem */ 
                );
                /**Returns  the calculation method defining methods to calculate shrinkage factors. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: int CalculationMethod
                (
                );
                /**Sets  the calculation method defining methods to calculate shrinkage factors. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCalculationMethod
                (
                    int calculationMethod /** calculationmethod */ 
                );
                /**Returns  the option that determines how the X direction is created. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: int XDirectionType
                (
                );
                /**Sets  the option that determines how the X direction is created. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetXDirectionType
                (
                    int xDirType /** xdirtype */ 
                );
                /**Returns  the expression containing the width in x direction. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * XWidth
                (
                );
                /**Returns  the expression containing the width in y direction. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * YWidth
                (
                );
                /**Returns  the expression containing the attached part count in x direction. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * XCount
                (
                );
                /**Returns  the expression containing the attached part count in y direction. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * YCount
                (
                );
                /**Returns  the distance tolerance (part units) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance (part units) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the angle tolerance (degrees) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngleTolerance
                (
                );
                /**Sets  the angle tolerance (degrees) 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetAngleTolerance
                (
                    double angleTolerance /** angletolerance */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
