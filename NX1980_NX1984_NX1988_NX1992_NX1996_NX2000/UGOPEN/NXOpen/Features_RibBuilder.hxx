#ifndef NXOpen_FEATURES_RIBBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_RIBBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RibBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RibBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class Section;
    namespace Features
    {
        class _RibBuilderBuilder;
        class RibBuilderImpl;
        /**
            Represents a @link Features::Rib Features::Rib@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::DesignFeatureCollection::CreateRibBuilder  NXOpen::Features::DesignFeatureCollection::CreateRibBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CombineRibWithTarget </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        DraftAngle.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        RibCapGeometryOption </term> <description> 
         
        FromSection </description> </item> 

        <item><term> 
         
        RibCapOffset.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        RibDraftOption </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        RibThickness.Value </term> <description> 
         
        2 (millimeters part), 0.1 (inches part) </description> </item> 

        <item><term> 
         
        RibThicknessOffsetOption </term> <description> 
         
        Symmetric </description> </item> 

        <item><term> 
         
        RibType </term> <description> 
         
        PerpendiculartoSectionPlane </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RibBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** These represent the options for Rib type */
            public: enum RibTypes
            {
                RibTypesPerpendiculartoSectionPlane/** Perpendicular to Section Plane */,
                RibTypesParalleltoSectionPlane/** Parallel to Section Plane */
            };

            /** These represent the options for Rib Walls Offset */
            public: enum RibThicknessOffsetOptions
            {
                RibThicknessOffsetOptionsSymmetric/** Symmetric Offset */,
                RibThicknessOffsetOptionsAsymmetric/** Asymmetric Offset */
            };

            /** These represent the options for the Rib cap */
            public: enum RibCapGeometryOptions
            {
                RibCapGeometryOptionsFromSection/** Cap from section */,
                RibCapGeometryOptionsFromSelected/** Cap from selected */
            };

            /** These represent the options for drafting the Rib */
            public: enum RibDraftOptions
            {
                RibDraftOptionsNone/** No Draft */,
                RibDraftOptionsFromCap/** Draft from cap */
            };

            private: RibBuilderImpl * m_ribbuilder_impl;
            private: friend class  _RibBuilderBuilder;
            protected: RibBuilder();
            public: ~RibBuilder();
            /**Returns  the target body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetBody
            (
            );
            /**Returns  the input section 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * Section
            (
            );
            /**Returns  the rib type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RibBuilder::RibTypes RibType
            (
            );
            /**Sets  the rib type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRibType
            (
                NXOpen::Features::RibBuilder::RibTypes ribType /** ribtype */ 
            );
            /**Returns  the reverse rib direction flag. Indicates whether the Rib direction has been flipped from its initial inferred direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseRibDirection
            (
            );
            /**Sets  the reverse rib direction flag. Indicates whether the Rib direction has been flipped from its initial inferred direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseRibDirection
            (
                bool reverseRibDirection /** reverseribdirection */ 
            );
            /**Returns  the rib walls offset type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RibBuilder::RibThicknessOffsetOptions RibThicknessOffsetOption
            (
            );
            /**Sets  the rib walls offset type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRibThicknessOffsetOption
            (
                NXOpen::Features::RibBuilder::RibThicknessOffsetOptions ribThicknessOffsetOption /** ribthicknessoffsetoption */ 
            );
            /**Returns  the rib thickness 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RibThickness
            (
            );
            /**Returns  the reverse thickness direction flag. Indicates whether the Thickness direction has been flipped from its initial inferred direction
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseThicknessDirection
            (
            );
            /**Sets  the reverse thickness direction flag. Indicates whether the Thickness direction has been flipped from its initial inferred direction
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseThicknessDirection
            (
                bool reverseThicknessDirection /** reversethicknessdirection */ 
            );
            /**Returns  the combine rib with target flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CombineRibWithTarget
            (
            );
            /**Sets  the combine rib with target flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCombineRibWithTarget
            (
                bool combineRibWithTarget /** combineribwithtarget */ 
            );
            /**Returns  the rib cap geometry 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RibBuilder::RibCapGeometryOptions RibCapGeometryOption
            (
            );
            /**Sets  the rib cap geometry 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRibCapGeometryOption
            (
                NXOpen::Features::RibBuilder::RibCapGeometryOptions ribCapGeometryOption /** ribcapgeometryoption */ 
            );
            /**Returns  the capping datum or faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * CappingFaces
            (
            );
            /**Returns  the rib cap offset 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RibCapOffset
            (
            );
            /**Returns  the reverse offset direction flag. Indicates whether the Rib Cap Offset direction has been flipped from its initial inferred direction
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseOffsetDirection
            (
            );
            /**Sets  the reverse offset direction flag. Indicates whether the Rib Cap Offset direction has been flipped from its initial inferred direction
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseOffsetDirection
            (
                bool reverseOffsetDirection /** reverseoffsetdirection */ 
            );
            /**Returns  the rib draft options 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RibBuilder::RibDraftOptions RibDraftOption
            (
            );
            /**Sets  the rib draft options 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRibDraftOption
            (
                NXOpen::Features::RibBuilder::RibDraftOptions ribDraftOption /** ribdraftoption */ 
            );
            /**Returns  the draft angle 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DraftAngle
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
