#ifndef NXOpen_CAE_WIREFRAMEELEMENTSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_WIREFRAMEELEMENTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_WireframeElementsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class WireframeElementsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectFENodeList;
    }
    class Expression;
    namespace CAE
    {
        class _WireframeElementsBuilderBuilder;
        class WireframeElementsBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::WireframeElementsBuilder NXOpen::CAE::WireframeElementsBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateWireframeElementsBuilder  NXOpen::CAE::NodeElementManager::CreateWireframeElementsBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  WireframeElementsBuilder : public NXOpen::Builder
        {
            private: WireframeElementsBuilderImpl * m_wireframeelementsbuilder_impl;
            private: friend class  _WireframeElementsBuilderBuilder;
            protected: WireframeElementsBuilder();
            public: ~WireframeElementsBuilder();
            /**Returns  the selected nodes. To delete a node, the node should be removed from the list and to add a new node, the node is added in the list.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::SelectFENodeList * Nodes
            (
            );
            /**Returns  the use size reduction flag 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseSizeReduction
            (
            );
            /**Sets  the use size reduction flag 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetUseSizeReduction
            (
                bool useSizeReduction /** usesizereduction */ 
            );
            /**Returns  the max number of nodes for size reduction 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxNumberOfNodes
            (
            );
            /**Sets  the max number of nodes for size reduction 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetMaxNumberOfNodes
            (
                int numNodes /** numnodes */ 
            );
            /**Returns  the min distance for size reduction 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::Expression * MinDistance
            (
            );
            /**Returns  the minAngleBetweenWires 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::Expression * MinAngleBetweenWires
            (
            );
            /**Returns  the max number of wires per node 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int MaxNumberOfWiresPerNode
            (
            );
            /**Sets  the max number of wires per node 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetMaxNumberOfWiresPerNode
            (
                int numWires /** numwires */ 
            );
            /**Returns  the maxDistanceRatio 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxDistanceRatio
            (
            );
            /**Sets  the maxDistanceRatio 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetMaxDistanceRatio
            (
                double maxDistanceRatio /** maxdistanceratio */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
