#ifndef NXOpen_CAE_DURSPECIALISTCORRELATIONINPUTDEFINITIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTCORRELATIONINPUTDEFINITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistCorrelationInputDefinitionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistVibrationDataSourceBuilder.hxx>
#include <NXOpen/CAE_DurSpecialistVibrationInputDefinition.hxx>
#include <NXOpen/CAE_FENode.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistCorrelationInputDefinitionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistVibrationDataSourceBuilder;
    }
    namespace CAE
    {
        class DurSpecialistVibrationInputDefinition;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class Function;
    }
    namespace CAE
    {
        class _DurSpecialistCorrelationInputDefinitionBuilderBuilder;
        class DurSpecialistCorrelationInputDefinitionBuilderImpl;
        /** Represents a @link CAE::DurSpecialistCorrelationInputDefinition CAE::DurSpecialistCorrelationInputDefinition@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistCorrelationInputDefinitionCollection::CreateDurSpecialistCorrelationInputDefinitionBuilder  NXOpen::CAE::DurSpecialistCorrelationInputDefinitionCollection::CreateDurSpecialistCorrelationInputDefinitionBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DataSourceBuilder.ModeSelection </term> <description> 
         
        ByIndex </description> </item> 

        <item><term> 
         
        DataSourceBuilder.StaticLoadSourceType </term> <description> 
         
        Solution </description> </item> 

        </list> 

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistCorrelationInputDefinitionBuilder : public NXOpen::Builder
        {
            /** Degree of Freedom */
            public: enum Dof
            {
                DofX/** x */ ,
                DofY/** y */ ,
                DofZ/** z */ ,
                DofRx/** rx */ ,
                DofRy/** ry */ ,
                DofRz/** rz */ 
            };

            private: DurSpecialistCorrelationInputDefinitionBuilderImpl * m_durspecialistcorrelationinputdefinitionbuilder_impl;
            private: friend class  _DurSpecialistCorrelationInputDefinitionBuilderBuilder;
            protected: DurSpecialistCorrelationInputDefinitionBuilder();
            public: ~DurSpecialistCorrelationInputDefinitionBuilder();
            /**Returns  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the vibration input definition used as the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationInputDefinition * FromVibrationInputDefinition
            (
            );
            /**Sets  the vibration input definition used as the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFromVibrationInputDefinition
            (
                NXOpen::CAE::DurSpecialistVibrationInputDefinition * fromVID /** fromvid */ 
            );
            /**Returns  the node ID of the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::FENode * FromNode
            (
            );
            /**Sets  the node ID of the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFromNode
            (
                NXOpen::CAE::FENode * fromNode /** fromnode */ 
            );
            /**Returns  the DOF of the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistCorrelationInputDefinitionBuilder::Dof FromDOF
            (
            );
            /**Sets  the DOF of the source of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFromDOF
            (
                NXOpen::CAE::DurSpecialistCorrelationInputDefinitionBuilder::Dof fromDOF /** fromdof */ 
            );
            /**Returns  the vibration input definition associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationInputDefinition * ToVibrationInputDefinition
            (
            );
            /**Sets  the vibration input definition associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetToVibrationInputDefinition
            (
                NXOpen::CAE::DurSpecialistVibrationInputDefinition * toVID /** tovid */ 
            );
            /**Returns  the node ID associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::FENode * ToNode
            (
            );
            /**Sets  the node ID associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetToNode
            (
                NXOpen::CAE::FENode * fromNode /** fromnode */ 
            );
            /**Returns  the DOF associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistCorrelationInputDefinitionBuilder::Dof ToDOF
            (
            );
            /**Sets  the DOF associated to the result of the correlation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetToDOF
            (
                NXOpen::CAE::DurSpecialistCorrelationInputDefinitionBuilder::Dof toDOF /** todof */ 
            );
            /**Returns  the correlation function 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * Function
            (
            );
            /**Sets  the correlation function 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFunction
            (
                NXOpen::CAE::Function * func /** func */ 
            );
            /**Returns  the vibration data source builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder * DataSourceBuilder
            (
            );
            /**Sets  the vibration data source builder 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDataSourceBuilder
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder * func /** func */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
