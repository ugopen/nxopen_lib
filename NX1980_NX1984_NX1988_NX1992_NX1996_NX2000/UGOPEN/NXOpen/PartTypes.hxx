#ifndef NXOpen_PARTTYPES_HXX_INCLUDED
#define NXOpen_PARTTYPES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartTypes.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    /** Controls whether or not a new display part may be displayed in addition to existing display parts,
        or instead of the currently active display part. 
        See @link NXOpen::PartCollection::SetActiveDisplay NXOpen::PartCollection::SetActiveDisplay@endlink  

     <br>  Created in NX12.0.0.  <br>  
    */
    enum DisplayPartOption
    {
        DisplayPartOptionReplaceExisting/** Replace the existing active display part with the new one  */,
        DisplayPartOptionAllowAdditional/** If possible display the new part as an additional display part */
    };

    /** Controls what the work part will be when setting active display part. 
        See @link NXOpen::PartCollection::SetActiveDisplay NXOpen::PartCollection::SetActiveDisplay@endlink  
    */
    enum PartDisplayPartWorkPartOption
    {
        PartDisplayPartWorkPartOptionSameAsDisplay/** New work part will be set to the new display part  */,
        PartDisplayPartWorkPartOptionUseLast/** If possible use the work part that was used when this part was last the display part */
    };

    /** Represents the part load information.
        See @link NXOpen::BasePart::PartLoadState NXOpen::BasePart::PartLoadState@endlink  and @link NXOpen::PartCollection::GetPartLoadStateOfFileName NXOpen::PartCollection::GetPartLoadStateOfFileName@endlink  for reference.
    */
    enum PartLoadState
    {
        PartLoadStateNotLoaded/** Part is not loaded. */,
        PartLoadStateFullyLoaded/** Part is fully loaded. */,
        PartLoadStatePartiallyLoaded/** Part is partially loaded. */,
        PartLoadStateMinimallyLoaded/** Part is minimally loaded. */
    };

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
