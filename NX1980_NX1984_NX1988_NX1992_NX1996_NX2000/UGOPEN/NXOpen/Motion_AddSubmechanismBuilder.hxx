#ifndef NXOpen_MOTION_ADDSUBMECHANISMBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_ADDSUBMECHANISMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_AddSubmechanismBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ErrorList.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/IAttributeSourceObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class AddSubmechanismBuilder;
    }
    class Builder;
    class ErrorList;
    class IAttributeSourceObjectBuilder;
    class NXObject;
    namespace Motion
    {
        class _AddSubmechanismBuilderBuilder;
        class AddSubmechanismBuilderImpl;
        /**
                Represents a builder class that performs add submechanism in current context.
             <br> To create a new instance of this class, use @link NXOpen::Motion::MotionSimulation::CreateAddSubmechanismBuilder  NXOpen::Motion::MotionSimulation::CreateAddSubmechanismBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        LayerOption </term> <description> 
         
        Original </description> </item> 

        <item><term> 
         
        Positioning </term> <description> 
         
        AbsoluteOrigin </description> </item> 

        <item><term> 
         
        UserLayer </term> <description> 
         
        1 </description> </item> 

        </list> 

         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  AddSubmechanismBuilder : public NXOpen::Builder, public virtual NXOpen::IAttributeSourceObjectBuilder
        {
            /** Represents initial location type that can be present during add component */
            public: enum Layer
            {
                LayerOriginal/** the original layer */,
                LayerWork/** the work laye */,
                LayerSpecified/** custom specified layer */
            };

            /** Represents the positioning method */
            public: enum PositioningMethod
            {
                PositioningMethodAbsoluteOrigin/** absolute origin of the current part */,
                PositioningMethodOriginToOrigin/** only useful when @link NXOpen::Motion::AddSubmechanismBuilder::RemappingOn NXOpen::Motion::AddSubmechanismBuilder::RemappingOn@endlink  is active */
            };

            private: AddSubmechanismBuilderImpl * m_addsubmechanismbuilder_impl;
            private: friend class  _AddSubmechanismBuilderBuilder;
            protected: AddSubmechanismBuilder();
            public: ~AddSubmechanismBuilder();
            /**Returns  the option of using geometry remapping
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool RemappingOn
            (
            );
            /**Sets  the option of using geometry remapping
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRemappingOn
            (
                bool remappingOn /** remappingon */ 
            );
            /**Returns  the Motion Simulation part to add as sumbechanism 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * SelectedPart
            (
            );
            /**Sets  the Motion Simulation part to add as sumbechanism 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSelectedPart
            (
                NXOpen::NXObject * part /** part */ 
            );
            /**Returns  the remapped geometry. User should set a valid geometry if remaping is on, otherwise this is not used. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * RemappedGeometry
            (
            );
            /**Sets  the remapped geometry. User should set a valid geometry if remaping is on, otherwise this is not used. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetRemappedGeometry
            (
                NXOpen::NXObject * geometry /** geometry */ 
            );
            /**Returns  the layers to which geometry are added 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::AddSubmechanismBuilder::Layer LayerOption
            (
            );
            /**Sets  the layers to which geometry are added 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetLayerOption
            (
                NXOpen::Motion::AddSubmechanismBuilder::Layer layerOption /** layeroption */ 
            );
            /**Returns  the user defined layer (should be a value in the range 1-256) 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: int UserLayer
            (
            );
            /**Sets  the user defined layer (should be a value in the range 1-256) 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetUserLayer
            (
                int layer /** layer */ 
            );
            /**Returns  the positioning method. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::AddSubmechanismBuilder::PositioningMethod Positioning
            (
            );
            /**Sets  the positioning method. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPositioning
            (
                NXOpen::Motion::AddSubmechanismBuilder::PositioningMethod positioningMethod /** positioningmethod */ 
            );
            /**  Auto assigns the attributes for a given array of objects and returns an array of objects that failed to auto assign.
               
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ErrorList * AutoAssignAttributes
            (
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /**  Auto assigns the attributes for a given object and returns an array of objects that failed to auto assign.
                    properties needs to be created using @link CreateAttributeTitleToNamingPatternMap CreateAttributeTitleToNamingPatternMap@endlink 
               
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::ErrorList * AutoAssignAttributesWithNamingPattern
            (
                const std::vector<NXOpen::NXObject *> & objects /** objects */ ,
                const std::vector<NXOpen::NXObject *> & properties /** properties */ 
            );
            /** Creates a map object of attribute titles to their corresponding naming pattern 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::NXObject * CreateAttributeTitleToNamingPatternMap
            (
                std::vector<NXString> & attributeTitles /** attributetitles */ ,
                std::vector<NXString> & titlePatterns /** titlepatterns */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
