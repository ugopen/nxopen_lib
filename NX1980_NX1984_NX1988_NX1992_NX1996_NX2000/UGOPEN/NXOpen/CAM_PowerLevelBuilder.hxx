#ifndef NXOpen_CAM_POWERLEVELBUILDER_HXX_INCLUDED
#define NXOpen_CAM_POWERLEVELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PowerLevelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PowerLevelBuilder;
    }
    namespace CAM
    {
        class _PowerLevelBuilderBuilder;
        class PowerLevelBuilderImpl;
        /** Represents a builder which holds the data for a set of layer and laser power. 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PowerLevelBuilder : public NXOpen::TaggedObject
        {
            private: PowerLevelBuilderImpl * m_powerlevelbuilder_impl;
            private: friend class  _PowerLevelBuilderBuilder;
            protected: PowerLevelBuilder();
            public: ~PowerLevelBuilder();
            /** Add a new item 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Add
            (
                int indexAfter /** the index which new item will be added after */,
                int layer /** the layer for new item */,
                double laserPower /** the laser power for new item */
            );
            /** Modify item 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Modify
            (
                int index /** the index of item to be modified */,
                int layer /** the new value of layer */,
                double laserPower /** the new value of laser power */
            );
            /** Delete a item 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Delete
            (
                int index /** the index of item to be deleted */
            );
            /** Move up a item 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void MoveUp
            (
                int index /** the index of item to be moved up */
            );
            /** Move down a item 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void MoveDown
            (
                int index /** the index of item to be moved down */
            );
            /** Get data for the specified item index
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void GetData
            (
                int index /** the index of item to be modified */,
                int* layer /** the new value of layer */,
                double* laserPower /** the new value of laser power */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
