#ifndef NXOpen_MECHATRONICS_BONDZONEBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_BONDZONEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_BondZoneBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_ZoneBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class BondZoneBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SelectRigidBodyList;
    }
    namespace Mechatronics
    {
        class ZoneBuilder;
    }
    namespace Mechatronics
    {
        class _BondZoneBuilderBuilder;
        class BondZoneBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::BondZone NXOpen::Mechatronics::BondZone@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::BondZoneCollection::CreateBondZoneBuilder  NXOpen::Mechatronics::BondZoneCollection::CreateBondZoneBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  BondZoneBuilder : public NXOpen::Builder
        {
            /** the action mode for bond. */
            public: enum ActionModes
            {
                ActionModesCollision/** when collision happens */,
                ActionModesUserDefined/** when user defined */
            };

            private: BondZoneBuilderImpl * m_bondzonebuilder_impl;
            private: friend class  _BondZoneBuilderBuilder;
            protected: BondZoneBuilder();
            public: ~BondZoneBuilder();
            /**Returns  the zone builder that holds the parameters. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::ZoneBuilder * Zone
            (
            );
            /**Returns  the bond bodies. This can be @link NXOpen::Mechatronics::RigidBody NXOpen::Mechatronics::RigidBody@endlink .
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectRigidBodyList * BondBodies
            (
            );
            /**Returns  the action mode. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::BondZoneBuilder::ActionModes ActionMode
            (
            );
            /**Sets  the action mode. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetActionMode
            (
                NXOpen::Mechatronics::BondZoneBuilder::ActionModes mode /** mode */ 
            );
            /**Returns  the category. It should be between 0 and 16. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: int Category
            (
            );
            /**Sets  the category. It should be between 0 and 16. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCategory
            (
                int category /** category */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
