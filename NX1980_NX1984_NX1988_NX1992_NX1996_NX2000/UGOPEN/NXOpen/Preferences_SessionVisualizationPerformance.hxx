#ifndef NXOpen_PREFERENCES_SESSIONVISUALIZATIONPERFORMANCE_HXX_INCLUDED
#define NXOpen_PREFERENCES_SESSIONVISUALIZATIONPERFORMANCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_SessionVisualizationPerformance.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class SessionVisualizationPerformance;
    }
    namespace Preferences
    {
        class SessionPreferences;
    }
    namespace Preferences
    {
        class SessionVisualizationPerformanceImpl;
        /** Represents visualization performance preferences that are applicable
                to the entire session.  <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::SessionPreferences  NXOpen::Preferences::SessionPreferences @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  SessionVisualizationPerformance
        {
            private: SessionVisualizationPerformanceImpl * m_sessionvisualizationperformance_impl;
            private: NXOpen::Preferences::SessionPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SessionVisualizationPerformance(NXOpen::Preferences::SessionPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SessionVisualizationPerformance();
            /**Returns  the rendering of solids using stored facets during interactive mode.
                        <br>  When a solid is rendered in non-lightweight mode, this
                       preference can be enabled to use facets stored in the part if 
                       valid facets exist for the solid, even if those facets do not meet
                       the current rendering parameters. This improves performance of 
                       certain shaded displays by avoiding need to tessellate the solid, 
                       though the visual quality may be impacted. E.g. when this preference 
                       is enabled, smooth edge settings (e.g. see use of 
                       @link NXOpen::Preferences::ViewVisualizationVisual::SmoothEdgeWidth NXOpen::Preferences::ViewVisualizationVisual::SmoothEdgeWidth@endlink )
                       are implicitly ignored to improve the performance.
                        <br> 
                        <br> 
                       This setting is ignored by @link NXOpen::ViewCollection::UpdateDisplay NXOpen::ViewCollection::UpdateDisplay@endlink .
                        <br> 
                        <br> 
                       The display is not immediately regenerated when this setting is changed.
                       Use @link NXOpen::ViewCollection::Regenerate NXOpen::ViewCollection::Regenerate@endlink  to update display.
                        <br> 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenderSolidsUsingStoredFacets
            (
            );
            /**Sets  the rendering of solids using stored facets during interactive mode.
                        <br>  When a solid is rendered in non-lightweight mode, this
                       preference can be enabled to use facets stored in the part if 
                       valid facets exist for the solid, even if those facets do not meet
                       the current rendering parameters. This improves performance of 
                       certain shaded displays by avoiding need to tessellate the solid, 
                       though the visual quality may be impacted. E.g. when this preference 
                       is enabled, smooth edge settings (e.g. see use of 
                       @link NXOpen::Preferences::ViewVisualizationVisual::SmoothEdgeWidth NXOpen::Preferences::ViewVisualizationVisual::SmoothEdgeWidth@endlink )
                       are implicitly ignored to improve the performance.
                        <br> 
                        <br> 
                       This setting is ignored by @link NXOpen::ViewCollection::UpdateDisplay NXOpen::ViewCollection::UpdateDisplay@endlink .
                        <br> 
                        <br> 
                       The display is not immediately regenerated when this setting is changed.
                       Use @link NXOpen::ViewCollection::Regenerate NXOpen::ViewCollection::Regenerate@endlink  to update display.
                        <br> 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRenderSolidsUsingStoredFacets
            (
                bool useStoredFacets /** usestoredfacets */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
