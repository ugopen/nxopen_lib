#ifndef NXOpen_CAE_FUNCTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_FUNCTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FunctionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Function.hxx>
#include <NXOpen/CAE_XYFunctionDataTypes.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FunctionBuilder;
    }
    class Builder;
    namespace CAE
    {
        class Function;
    }
    namespace CAE
    {
        class _FunctionBuilderBuilder;
        class FunctionBuilderImpl;
        /** This builder class is used to create or edit @link  NXOpen::CAE::Function   NXOpen::CAE::Function @endlink  objects.
            All:
            @link CAE::FunctionBuilder::SetName CAE::FunctionBuilder::SetName@endlink ,
            @link CAE::FunctionBuilder::SetTypes CAE::FunctionBuilder::SetTypes@endlink ,
            @link CAE::FunctionBuilder::SetAbscissaUnit CAE::FunctionBuilder::SetAbscissaUnit@endlink , 
            @link CAE::FunctionBuilder::SetOrdinateUnit CAE::FunctionBuilder::SetOrdinateUnit@endlink , 
            @link CAE::FunctionBuilder::SetOrdinateSecondNumeratorUnit CAE::FunctionBuilder::SetOrdinateSecondNumeratorUnit@endlink  
            @link CAE::FunctionBuilder::SetOrdinateDenominatorUnit CAE::FunctionBuilder::SetOrdinateDenominatorUnit@endlink ;

            formula:
            @link CAE::FunctionBuilder::SetDefinitions CAE::FunctionBuilder::SetDefinitions@endlink ,
            @link CAE::FunctionBuilder::SetReferencedObjects CAE::FunctionBuilder::SetReferencedObjects@endlink ,
            @link CAE::FunctionBuilder::SetMathPlotData CAE::FunctionBuilder::SetMathPlotData@endlink ;

            table function:
            @link CAE::FunctionBuilder::SetTableData CAE::FunctionBuilder::SetTableData@endlink .
             <br> To create a new instance of this class, use @link NXOpen::CAE::FunctionCollection::CreateFunctionBuilder  NXOpen::CAE::FunctionCollection::CreateFunctionBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FunctionBuilder : public NXOpen::Builder
        {
            private: FunctionBuilderImpl * m_functionbuilder_impl;
            private: friend class  _FunctionBuilderBuilder;
            protected: FunctionBuilder();
            public: ~FunctionBuilder();
            /**Sets  the function name. For math function, the name is function name.
                        For table function, the name is the AFU file name with directory 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the function name. For math function, the name is function name.
                        For table function, the name is the AFU file name with directory 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the function name. For math function, the name is function name.
                        For table function, the name is the AFU file name with directory 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /** Sets types of a function 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTypes
            (
                NXOpen::CAE::Function::Type functionType /** Math function or Table function. */,
                NXOpen::CAE::XyFunctionMacroType macroType /** For Motion Simulation or Advanced Simulation or General Purpose. */,
                NXOpen::CAE::XyFunctionGeneralType generalType /** Data type of function.
                                                                                 If macro_type is @link CAE::XyFunctionMacroTypeMotion CAE::XyFunctionMacroTypeMotion@endlink ,
                                                                                 it must be @link CAE::XyFunctionGeneralTypeGeneral CAE::XyFunctionGeneralTypeGeneral@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTime CAE::XyFunctionGeneralTypeTime@endlink .
                                                                                 If macro_type is @link CAE::XyFunctionMacroTypeLoad CAE::XyFunctionMacroTypeLoad@endlink  or
                                                                                 it must be @link CAE::XyFunctionGeneralTypeGeneral CAE::XyFunctionGeneralTypeGeneral@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTime CAE::XyFunctionGeneralTypeTime@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeSpectrum CAE::XyFunctionGeneralTypeSpectrum@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypePowerSpectralDensity CAE::XyFunctionGeneralTypePowerSpectralDensity@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeShockResponseSpectrum CAE::XyFunctionGeneralTypeShockResponseSpectrum@endlink .
                                                                                 If macro_type is @link CAE::XyFunctionMacroTypeMaterial CAE::XyFunctionMacroTypeMaterial@endlink ,
                                                                                 it must be @link CAE::XyFunctionGeneralTypeGeneral CAE::XyFunctionGeneralTypeGeneral@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTime CAE::XyFunctionGeneralTypeTime@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTemperature CAE::XyFunctionGeneralTypeTemperature@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeStressStrain CAE::XyFunctionGeneralTypeStressStrain@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeLife CAE::XyFunctionGeneralTypeLife@endlink .
                                                                                 If macro_type is @link CAE::XyFunctionMacroTypeResponse CAE::XyFunctionMacroTypeResponse@endlink ,
                                                                                 it must be @link CAE::XyFunctionGeneralTypeGeneral CAE::XyFunctionGeneralTypeGeneral@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTime CAE::XyFunctionGeneralTypeTime@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeSpectrum CAE::XyFunctionGeneralTypeSpectrum@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypePowerSpectralDensity CAE::XyFunctionGeneralTypePowerSpectralDensity@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeShockResponseSpectrum CAE::XyFunctionGeneralTypeShockResponseSpectrum@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeCrossSpectrum CAE::XyFunctionGeneralTypeCrossSpectrum@endlink  or
                                                                                            @link CAE::XyFunctionGeneralTypeTransmissibility CAE::XyFunctionGeneralTypeTransmissibility@endlink . */
            );
            /** Returns types of a function 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void GetTypes
            (
                NXOpen::CAE::Function::Type* functionType /** Math function or Table function */,
                NXOpen::CAE::XyFunctionMacroType* macroType /** For Motion Simulation or Advanced Simulation or General Purpose */,
                NXOpen::CAE::XyFunctionGeneralType* generalType /** Data type of function */
            );
            /** Sets units of a function 
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link CAE::FunctionBuilder::SetAbscissaUnit CAE::FunctionBuilder::SetAbscissaUnit@endlink , @link CAE::FunctionBuilder::SetOrdinateUnit CAE::FunctionBuilder::SetOrdinateUnit@endlink , @link CAE::FunctionBuilder::SetOrdinateSecondNumeratorUnit CAE::FunctionBuilder::SetOrdinateSecondNumeratorUnit@endlink  and @link CAE::FunctionBuilder::SetOrdinateDenominatorUnit CAE::FunctionBuilder::SetOrdinateDenominatorUnit@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use CAE::FunctionBuilder::SetAbscissaUnit, CAE::FunctionBuilder::SetOrdinateUnit, CAE::FunctionBuilder::SetOrdinateSecondNumeratorUnit and CAE::FunctionBuilder::SetOrdinateDenominatorUnit instead.") void SetUnits
            (
                NXOpen::CAE::XyFunctionUnit xUnit /** x unit */ ,
                NXOpen::CAE::XyFunctionUnit yUnit /** y unit */ ,
                NXOpen::CAE::XyFunctionUnit frfUnit /** frf unit */ 
            );
            /** Returns units of a function 
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link CAE::FunctionBuilder::AbscissaUnit CAE::FunctionBuilder::AbscissaUnit@endlink , @link CAE::FunctionBuilder::OrdinateUnit CAE::FunctionBuilder::OrdinateUnit@endlink , @link CAE::FunctionBuilder::OrdinateSecondNumeratorUnit CAE::FunctionBuilder::OrdinateSecondNumeratorUnit@endlink  and @link CAE::FunctionBuilder::OrdinateDenominatorUnit CAE::FunctionBuilder::OrdinateDenominatorUnit@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use CAE::FunctionBuilder::AbscissaUnit, CAE::FunctionBuilder::OrdinateUnit, CAE::FunctionBuilder::OrdinateSecondNumeratorUnit and CAE::FunctionBuilder::OrdinateDenominatorUnit instead.") void GetUnits
            (
                NXOpen::CAE::XyFunctionUnit* xUnit /** x unit */ ,
                NXOpen::CAE::XyFunctionUnit* yUnit /** y unit */ ,
                NXOpen::CAE::XyFunctionUnit* frfUnit /** frf unit */ 
            );
            /**Returns   the abscissa unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::XyFunctionUnit AbscissaUnit
            (
            );
            /**Sets   the abscissa unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAbscissaUnit
            (
                NXOpen::CAE::XyFunctionUnit xUnit /** x unit */ 
            );
            /**Returns   the ordinate unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::XyFunctionUnit OrdinateUnit
            (
            );
            /**Sets   the ordinate unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrdinateUnit
            (
                NXOpen::CAE::XyFunctionUnit yUnit /** y unit */ 
            );
            /**Returns   the ordinate second numerator unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::XyFunctionUnit OrdinateSecondNumeratorUnit
            (
            );
            /**Sets   the ordinate second numerator unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrdinateSecondNumeratorUnit
            (
                NXOpen::CAE::XyFunctionUnit ySecNumUnit /** y sec num unit */ 
            );
            /**Returns   the ordinate denominator unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::XyFunctionUnit OrdinateDenominatorUnit
            (
            );
            /**Sets   the ordinate denominator unit of Function Data 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrdinateDenominatorUnit
            (
                NXOpen::CAE::XyFunctionUnit yDenomUnit /** y denom unit */ 
            );
            /** Sets definition strings of a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDefinitions
            (
                std::vector<NXString> & definitions /** definitions */ 
            );
            /** Returns definition strings of a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink   @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDefinitions
            (
            );
            /** Sets referenced objects of a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferencedObjects
            (
                const std::vector<NXOpen::CAE::Function *> & objects /** objects */ 
            );
            /** Returns referenced objects of a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink   @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::Function *> GetReferencedObjects
            (
            );
            /** Sets plot data setting for a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMathPlotData
            (
                int dataCount /** data count */ ,
                double xMinimum /** x minimum */ ,
                double xIncrement /** x increment */ 
            );
            /** Returns plot data setting of a math function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeMath NXOpen::CAE::Function::TypeMath@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void GetMathPlotData
            (
                int* dataCount /** data count */ ,
                double* xMinimum /** x minimum */ ,
                double* xIncrement /** x increment */ 
            );
            /** Sets data for a table function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeTable NXOpen::CAE::Function::TypeTable@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTableData
            (
                int recordIndex /** Begins with one */,
                const NXString & recordName /** record name */ ,
                const NXString & recordTimestamp /** A time string indicating the creating or editing time of an afu record. 
                                                                     The string could be returned by @link CAE::AfuManager::CreateRecord CAE::AfuManager::CreateRecord@endlink 
                                                                     or @link CAE::AfuManager::EditRecord CAE::AfuManager::EditRecord@endlink 
                                                                     or @link CAE::AfuManager::GetAfuData CAE::AfuManager::GetAfuData@endlink  */,
                NXOpen::CAE::Function::InterpolationMethod interpolateMethod /** interpolate method */ 
            );
            /** Sets data for a table function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeTable NXOpen::CAE::Function::TypeTable@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetTableData
            (
                int recordIndex /** Begins with one */,
                const char * recordName /** record name */ ,
                const char * recordTimestamp /** A time string indicating the creating or editing time of an afu record. 
                                                                     The string could be returned by @link CAE::AfuManager::CreateRecord CAE::AfuManager::CreateRecord@endlink 
                                                                     or @link CAE::AfuManager::EditRecord CAE::AfuManager::EditRecord@endlink 
                                                                     or @link CAE::AfuManager::GetAfuData CAE::AfuManager::GetAfuData@endlink  */,
                NXOpen::CAE::Function::InterpolationMethod interpolateMethod /** interpolate method */ 
            );
            /** Returns data of a table function. Only used when function type
                        is @link NXOpen::CAE::Function::TypeTable NXOpen::CAE::Function::TypeTable@endlink  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void GetTableData
            (
                int* recordIndex /**  Begins with one */,
                NXString* recordName /** record name */ ,
                NXString* recordTimestamp /** A time string indicating the last creating or editing time of an afu record */,
                NXOpen::CAE::Function::InterpolationMethod* interpolateMethod /** interpolate method */ 
            );
            /**Sets  the initial value for function 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInitialEstimateValue
            (
                double val /** val */ 
            );
            /**Returns  the initial value for function 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double InitialEstimateValue
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
