#ifndef NXOpen_PCBEXCHANGE_TEMPLATEBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_TEMPLATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_TemplateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class TemplateBuilder;
    }
    class Builder;
    namespace PcbExchange
    {
        class _TemplateBuilderBuilder;
        class TemplateBuilderImpl;
        /** Represents a builder to create or edit template.  <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateTemplateBuilder  NXOpen::PcbExchange::Manager::CreateTemplateBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  TemplateBuilder : public NXOpen::Builder
        {
            private: TemplateBuilderImpl * m_templatebuilder_impl;
            private: friend class  _TemplateBuilderBuilder;
            protected: TemplateBuilder();
            public: ~TemplateBuilder();
            /**Returns  the board template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int BoardTemplate
            (
            );
            /**Sets  the board template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardTemplate
            (
                int boardTemplate /** boardtemplate */ 
            );
            /**Returns  the component template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int ComponentTemplate
            (
            );
            /**Sets  the component template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetComponentTemplate
            (
                int componentTemplate /** componenttemplate */ 
            );
            /**Returns  the area template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int AreaTemplate
            (
            );
            /**Sets  the area template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetAreaTemplate
            (
                int areaTemplate /** areatemplate */ 
            );
            /**Returns  the assembly template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int AssemblyTemplate
            (
            );
            /**Sets  the assembly template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetAssemblyTemplate
            (
                int assemblyTemplate /** assemblytemplate */ 
            );
            /**Returns  the subassembly template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int SubAssemblyTemplate
            (
            );
            /**Sets  the subassembly template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetSubAssemblyTemplate
            (
                int subAssemblyTemplate /** subassemblytemplate */ 
            );
            /**Returns  the fem template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int FemTemplate
            (
            );
            /**Sets  the fem template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFemTemplate
            (
                int femTemplate /** femtemplate */ 
            );
            /**Returns  the sim template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int SimTemplate
            (
            );
            /**Sets  the sim template. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetSimTemplate
            (
                int simTemplate /** simtemplate */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
