#ifndef NXOpen_CAE_ROTORDYNAMICS_SUPERELEMENTRECOVERY_HXX_INCLUDED
#define NXOpen_CAE_ROTORDYNAMICS_SUPERELEMENTRECOVERY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_RotorDynamics_SuperelementRecovery.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace RotorDynamics
        {
            class SuperelementRecovery;
        }
    }
    class Session;
    namespace CAE
    {
        namespace RotorDynamics
        {
            class SuperelementRecoveryImpl;
            /** Superelement Recovery for Rotor Dynamics  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  SuperelementRecovery
            {
                private: SuperelementRecoveryImpl * m_superelementrecovery_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit SuperelementRecovery(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static SuperelementRecovery* theSuperelementRecovery;
                /** Returns the SuperelementRecovery object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static SuperelementRecovery* GetSuperelementRecovery(NXOpen::Session *owner);
                public: ~SuperelementRecovery();
                /** Superelement Recovery: Get Superelements 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<int> GetSuperelementsInformation
                (
                    const NXString & resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    NXString* sePath /** sepath */ ,
                    std::vector<NXString> & seNames /** senames */ ,
                    std::vector<NXString> & sePaths /** sepaths */ ,
                    std::vector<int> & filePresence /** filepresence */ 
                );
                /** Superelement Recovery: Get Superelements 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                std::vector<int> GetSuperelementsInformation
                (
                    const char * resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    NXString* sePath /** sepath */ ,
                    std::vector<NXString> & seNames /** senames */ ,
                    std::vector<NXString> & sePaths /** sepaths */ ,
                    std::vector<int> & filePresence /** filepresence */ 
                );
                /** Superelement Recovery: Get Superelements 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<int> GetSuperelementsInformation2
                (
                    const NXString & resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    NXString* sePath /** sepath */ ,
                    std::vector<NXString> & seNames /** senames */ ,
                    std::vector<NXString> & sePaths /** sepaths */ ,
                    std::vector<int> & filePresence /** filepresence */ ,
                    std::vector<int> & seNxnIds /** senxnids */ 
                );
                /** Superelement Recovery: Get Superelements 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                std::vector<int> GetSuperelementsInformation2
                (
                    const char * resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    NXString* sePath /** sepath */ ,
                    std::vector<NXString> & seNames /** senames */ ,
                    std::vector<NXString> & sePaths /** sepaths */ ,
                    std::vector<int> & filePresence /** filepresence */ ,
                    std::vector<int> & seNxnIds /** senxnids */ 
                );
                /** Superelement Recovery: Get References 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetReferences
                (
                    const NXString & resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    std::vector<NXString> & refList /** reflist */ ,
                    std::vector<NXString> & ref2ListFirstColumn /** ref2listfirstcolumn */ ,
                    std::vector<NXString> & ref2ListSecondColumn /** ref2listsecondcolumn */ 
                );
                /** Superelement Recovery: Get References 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                void GetReferences
                (
                    const char * resultSEUseFile /** resultseusefile */ ,
                    int samZone /** samzone */ ,
                    std::vector<NXString> & refList /** reflist */ ,
                    std::vector<NXString> & ref2ListFirstColumn /** ref2listfirstcolumn */ ,
                    std::vector<NXString> & ref2ListSecondColumn /** ref2listsecondcolumn */ 
                );
                /** Superelement Recovery: Launch Recovery 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: void LaunchRecovery
                (
                    const NXString & resultSEUseFile /** resultseusefile */ ,
                    const NXString & recoveryDeckFileName /** recoverydeckfilename */ ,
                    int seLabel /** selabel */ ,
                    const NXString & seName /** sename */ ,
                    const NXString & sePath /** sepath */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableChoice /** executablechoice */ ,
                    const NXString & executableFolderName /** executablefoldername */ ,
                    const NXString & configVarName /** configvarname */ ,
                    const NXString & firstRow /** firstrow */ ,
                    std::vector<NXString> & ref1Selected /** ref1selected */ ,
                    std::vector<NXString> & ref2RotationSelected /** ref2rotationselected */ ,
                    std::vector<NXString> & ref2ModeSelected /** ref2modeselected */ 
                );
                /** Superelement Recovery: Launch Recovery 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                void LaunchRecovery
                (
                    const char * resultSEUseFile /** resultseusefile */ ,
                    const char * recoveryDeckFileName /** recoverydeckfilename */ ,
                    int seLabel /** selabel */ ,
                    const char * seName /** sename */ ,
                    const char * sePath /** sepath */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableChoice /** executablechoice */ ,
                    const char * executableFolderName /** executablefoldername */ ,
                    const char * configVarName /** configvarname */ ,
                    const char * firstRow /** firstrow */ ,
                    std::vector<NXString> & ref1Selected /** ref1selected */ ,
                    std::vector<NXString> & ref2RotationSelected /** ref2rotationselected */ ,
                    std::vector<NXString> & ref2ModeSelected /** ref2modeselected */ 
                );
                /** Superelement Recovery: Launch Recovery 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: void LaunchRecovery2
                (
                    const NXString & resultSEUseFile /** resultseusefile */ ,
                    const NXString & recoveryDeckFileName /** recoverydeckfilename */ ,
                    int seLabel /** selabel */ ,
                    const NXString & seName /** sename */ ,
                    const NXString & sePath /** sepath */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableChoice /** executablechoice */ ,
                    const NXString & executableFolderName /** executablefoldername */ ,
                    const NXString & configVarName /** configvarname */ ,
                    const NXString & firstRow /** firstrow */ ,
                    std::vector<NXString> & ref1Selected /** ref1selected */ ,
                    std::vector<NXString> & ref2RotationSelected /** ref2rotationselected */ ,
                    std::vector<NXString> & ref2ModeSelected /** ref2modeselected */ ,
                    bool theRequestStress /** therequeststress */ ,
                    bool theRequestEnergy /** therequestenergy */ ,
                    bool theAskQualification /** theaskqualification */ 
                );
                /** Superelement Recovery: Launch Recovery 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                void LaunchRecovery2
                (
                    const char * resultSEUseFile /** resultseusefile */ ,
                    const char * recoveryDeckFileName /** recoverydeckfilename */ ,
                    int seLabel /** selabel */ ,
                    const char * seName /** sename */ ,
                    const char * sePath /** sepath */ ,
                    double zoneValue /** zonevalue */ ,
                    bool executableChoice /** executablechoice */ ,
                    const char * executableFolderName /** executablefoldername */ ,
                    const char * configVarName /** configvarname */ ,
                    const char * firstRow /** firstrow */ ,
                    std::vector<NXString> & ref1Selected /** ref1selected */ ,
                    std::vector<NXString> & ref2RotationSelected /** ref2rotationselected */ ,
                    std::vector<NXString> & ref2ModeSelected /** ref2modeselected */ ,
                    bool theRequestStress /** therequeststress */ ,
                    bool theRequestEnergy /** therequestenergy */ ,
                    bool theAskQualification /** theaskqualification */ 
                );
                /** Superelement Recovery: Get SE USe File Path 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString GetSuperelementsUseFilePath
                (
                    const NXString & resultSEUseFile /** resultseusefile */ 
                );
                /** Superelement Recovery: Get SE USe File Path 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                NXString GetSuperelementsUseFilePath
                (
                    const char * resultSEUseFile /** resultseusefile */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
