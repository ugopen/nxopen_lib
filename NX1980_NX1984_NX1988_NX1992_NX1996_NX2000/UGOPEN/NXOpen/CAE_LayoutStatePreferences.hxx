#ifndef NXOpen_CAE_LAYOUTSTATEPREFERENCES_HXX_INCLUDED
#define NXOpen_CAE_LAYOUTSTATEPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LayoutStatePreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LayoutStatePreferences;
    }
    namespace CAE
    {
        class CaePart;
    }
    class BasePropertyTable;
    namespace CAE
    {
        class LayoutStatePreferencesImpl;
        /**  @brief  This class gives access to the layout state preferences property tables  

           <br> Not support KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LayoutStatePreferences
        {
            private: LayoutStatePreferencesImpl * m_layoutstatepreferences_impl;
            private: NXOpen::CAE::CaePart* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit LayoutStatePreferences(NXOpen::CAE::CaePart *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~LayoutStatePreferences();
            /**Returns  the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the retaining preferences for the work layout states.
                        The returned persistent table is created in the part if it does not yet exist.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::BasePropertyTable * WorkRetainingPreferencesPropertyTable
            (
            );
            /**Returns  the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the restoring preferences for the work layout states.
                        The returned persistent table is created in the part if it does not yet exist.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::BasePropertyTable * WorkRestoringPreferencesPropertyTable
            (
            );
            /**Returns  the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the preferences for retaining the layout state.
                        A temporary copy of the work property table for retaining the layout state is created and must 
                        be disposed by the caller when it is not more needed.
                       
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::BasePropertyTable * RetainingPreferencesPropertyTable
            (
            );
            /**Returns  the @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the preferences for restoring the layout state.
                        A temporary copy of the work property table for restoring the layout state is created and must 
                        be disposed by the caller when it is not more needed.
                       
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::BasePropertyTable * RestoringPreferencesPropertyTable
            (
            );
            /** Deletes the temporary @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the copy of the
                        work property table for retaining the layout state created by the 
                        NXOpen.CAE.LayoutStatePreferences.RetainingPreferencesPropertyTable method.
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DisposeRetainingPreferencesPropertyTable
            (
            );
            /** Deletes the temporary @link NXOpen::BasePropertyTable NXOpen::BasePropertyTable@endlink  containing the copy of the
                        work property table for restoring the layout state created by the 
                        NXOpen.CAE.LayoutStatePreferences.RestoringPreferencesPropertyTable method.
                        
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void DisposeRestoringPreferencesPropertyTable
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
