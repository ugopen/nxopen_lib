#ifndef NXOpen_CAE_XYPLOT_AXISSTYLESETTING_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_AXISSTYLESETTING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_AxisStyleSetting.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseUnit.hxx>
#include <NXOpen/CAE_SignalProcessingDBSettings.hxx>
#include <NXOpen/CAE_XYFunctionDataTypes.hxx>
#include <NXOpen/CAE_XyplotDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_CustomTextStyleSetting.hxx>
#include <NXOpen/CAE_Xyplot_TextStyleSetting.hxx>
#include <NXOpen/CAE_Xyplot_BaseDisplayStyleSetting.hxx>
#include <NXOpen/CAE_Xyplot_IAxisStyle.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class AxisStyleSetting;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseUnit;
        }
    }
    namespace CAE
    {
        class SignalProcessingDBSettings;
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseDisplayStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class CustomTextStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class IAxisStyle;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class TextStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class _AxisStyleSettingBuilder;
            class AxisStyleSettingImpl;
            /** Represents the axis display style. Call @link CAE::Xyplot::BaseDisplayStyleSetting::CommitChange CAE::Xyplot::BaseDisplayStyleSetting::CommitChange@endlink 
                        to apply style changes to corresponding plot after it's modified.
                     <br> Not support KF.  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  AxisStyleSetting : public NXOpen::CAE::Xyplot::BaseDisplayStyleSetting, public virtual NXOpen::CAE::Xyplot::IAxisStyle
            {
                private: AxisStyleSettingImpl * m_axisstylesetting_impl;
                private: friend class  _AxisStyleSettingBuilder;
                protected: AxisStyleSetting();
                public: ~AxisStyleSetting();
                /**Returns  the axis scale type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::AxisType AxisType
                (
                );
                /**Sets  the axis scale type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAxisType
                (
                    NXOpen::CAE::Xyplot::AxisType axisType /** axistype */ 
                );
                /**Returns  the option indicates whether to use absolute value. This option is only valid for Y-Axis and color axis.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UseAbsoluteValue
                (
                );
                /**Sets  the option indicates whether to use absolute value. This option is only valid for Y-Axis and color axis.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUseAbsoluteValue
                (
                    bool useAbsValue /** useabsvalue */ 
                );
                /**Returns  the number of Log decades to display. Avaliable when @link CAE::Xyplot::AxisStyleSetting::AxisType CAE::Xyplot::AxisStyleSetting::AxisType@endlink 
                                is @link CAE::Xyplot::AxisTypeLog CAE::Xyplot::AxisTypeLog@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int LogDecades
                (
                );
                /**Sets  the number of Log decades to display. Avaliable when @link CAE::Xyplot::AxisStyleSetting::AxisType CAE::Xyplot::AxisStyleSetting::AxisType@endlink 
                                is @link CAE::Xyplot::AxisTypeLog CAE::Xyplot::AxisTypeLog@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLogDecades
                (
                    int logDecades /** logdecades */ 
                );
                /**Returns  the round value to display. It is a percent value. Avaliable when @link CAE::Xyplot::AxisStyleSetting::AxisType CAE::Xyplot::AxisStyleSetting::AxisType@endlink 
                                is not @link CAE::Xyplot::AxisTypeAuto CAE::Xyplot::AxisTypeAuto@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int GraphOverhead
                (
                );
                /**Sets  the round value to display. It is a percent value. Avaliable when @link CAE::Xyplot::AxisStyleSetting::AxisType CAE::Xyplot::AxisStyleSetting::AxisType@endlink 
                                is not @link CAE::Xyplot::AxisTypeAuto CAE::Xyplot::AxisTypeAuto@endlink . 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetGraphOverhead
                (
                    int graphOverhead /** graphoverhead */ 
                );
                /**Returns  the unit system type
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::XyFunctionUnitSystem UnitSystemType
                (
                );
                /**Sets  the unit system type
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUnitSystemType
                (
                    NXOpen::CAE::XyFunctionUnitSystem unitSystemType /** unitsystemtype */ 
                );
                /** Gets the dB settings 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::SignalProcessingDBSettings * GetDBSettings
                (
                );
                /**Returns  the limits type
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::LimitsType LimitsType
                (
                );
                /**Sets  the limits type
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLimitsType
                (
                    NXOpen::CAE::Xyplot::LimitsType limitsType /** limitstype */ 
                );
                /** Gets the fixed limits
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetFixedLimits
                (
                    double* lowerLimit /** lowerlimit */ ,
                    double* upperLimit /** upperlimit */ 
                );
                /** Sets the fixed limits
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetFixedLimits
                (
                    double lowerLimit /** lowerlimit */ ,
                    double upperLimit /** upperlimit */ 
                );
                /** Logs an update event for changing display unit before committing AxisStyleSetting change.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void LogUnitChangedEvent
                (
                );
                /** Gets display unit
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FTK::BaseUnit * GetDisplayUnit
                (
                );
                /** Gets the annotation style  @return  Axis item style 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::Xyplot::TextStyleSetting * GetAnnotationStyle
                (
                );
                /** Gets the label style 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::Xyplot::CustomTextStyleSetting * GetLabelDisplayStyle
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
