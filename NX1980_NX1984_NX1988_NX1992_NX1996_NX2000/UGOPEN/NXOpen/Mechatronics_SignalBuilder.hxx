#ifndef NXOpen_MECHATRONICS_SIGNALBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SIGNALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SignalBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mechatronics_GenericSignal.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class SignalBuilder;
    }
    class Builder;
    class Expression;
    namespace Mechatronics
    {
        class GenericSignal;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _SignalBuilderBuilder;
        class SignalBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::SignalBuilder NXOpen::Mechatronics::SignalBuilder@endlink  builder.  

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::SignalCollection::CreateSignalBuilder  NXOpen::Mechatronics::SignalCollection::CreateSignalBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  SignalBuilder : public NXOpen::Builder
        {
            /**  @brief  Represents the IO type.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::GenericSignal::IOTypes NXOpen::Mechatronics::GenericSignal::IOTypes@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::GenericSignal::IOTypes instead.") IOType
            {
                IOTypeInput/** Input  */,
                IOTypeOutput/** Output */
            };

            /**  @brief  Represents the external signal IO type.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::GenericSignal::ExternalIOTypes NXOpen::Mechatronics::GenericSignal::ExternalIOTypes@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::GenericSignal::ExternalIOTypes instead.") ExternalSignalIOType
            {
                ExternalSignalIOTypeInput/** Input  */,
                ExternalSignalIOTypeOutput/** Output */,
                ExternalSignalIOTypeInout/** Output */
            };

            /**  @brief  Represents the data type.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::GenericSignal::DataTypes NXOpen::Mechatronics::GenericSignal::DataTypes@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::GenericSignal::DataTypes instead.") DataType
            {
                DataTypeBool/** bool   */,
                DataTypeInt/** int    */,
                DataTypeDouble/** double */,
                DataTypeString/** string */
            };

            /**  @brief  Represents the external signal data type.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::GenericSignal::ExternalDataTypes NXOpen::Mechatronics::GenericSignal::ExternalDataTypes@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::GenericSignal::ExternalDataTypes instead.") ExternalSignalDataType
            {
                ExternalSignalDataTypeBool/** bool   */,
                ExternalSignalDataTypeByte/** byte    */,
                ExternalSignalDataTypeWord/** uint16 */,
                ExternalSignalDataTypeInt/** int16 */,
                ExternalSignalDataTypeDword/** uint32 */,
                ExternalSignalDataTypeDint/** int32 */,
                ExternalSignalDataTypeReal/** float */,
                ExternalSignalDataTypeLreal/** double */,
                ExternalSignalDataTypeString/** string */
            };

             /**  @brief  Represents Signal definition structure.  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::GenericSignal NXOpen::Mechatronics::GenericSignal@endlink  instead. <br>  
            */
            public:
            struct NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::GenericSignal instead.") Signal
            {
                public: /** Physics Object       */NXOpen::NXObject * TgPhysicsObject;
                public: /** Physics Property Peristent Index  */int NPhysicsPropTag;
                public: /** IO type              */NXOpen::Mechatronics::SignalBuilder::IOType EIOType;
                public: /** Data type            */NXOpen::Mechatronics::SignalBuilder::DataType EDataType;
                public: /** Data Value (bool)    */NXOpen::Expression * BoolValueExp;
                public: /** Data Value (int)     */NXOpen::Expression * IntValueExp;
                public: /** Data Value (double)  */NXOpen::Expression * DoubleValueExp;
                public: Signal() :
                    TgPhysicsObject(),
                    NPhysicsPropTag(),
                    EIOType((NXOpen::Mechatronics::SignalBuilder::IOType)0),
                    EDataType((NXOpen::Mechatronics::SignalBuilder::DataType)0),
                    BoolValueExp(),
                    IntValueExp(),
                    DoubleValueExp()
                {
                }
                /** Constructor for the Signal struct. */ 
                public: Signal(NXOpen::NXObject * tgPhysicsObjectInitial /** Physics Object       */, 
                        int nPhysicsPropTagInitial /** Physics Property Peristent Index  */, 
                        NXOpen::Mechatronics::SignalBuilder::IOType eIOTypeInitial /** IO type              */, 
                        NXOpen::Mechatronics::SignalBuilder::DataType eDataTypeInitial /** Data type            */, 
                        NXOpen::Expression * boolValueExpInitial /** Data Value (bool)    */, 
                        NXOpen::Expression * intValueExpInitial /** Data Value (int)     */, 
                        NXOpen::Expression * doubleValueExpInitial /** Data Value (double)  */) :
                    TgPhysicsObject(tgPhysicsObjectInitial),
                    NPhysicsPropTag(nPhysicsPropTagInitial),
                    EIOType(eIOTypeInitial),
                    EDataType(eDataTypeInitial),
                    BoolValueExp(boolValueExpInitial),
                    IntValueExp(intValueExpInitial),
                    DoubleValueExp(doubleValueExpInitial)
                {
                }
            };

             /**  @brief  Represents Signal definition structure.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::GenericSignal NXOpen::Mechatronics::GenericSignal@endlink  instead. <br>  
            */
            public:
            struct NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::GenericSignal instead.") SignalV2
            {
                public: /** Physics Object       */NXOpen::NXObject * TgPhysicsObject;
                public: /** Physics Property Peristent Index  */int NPhysicsPropTag;
                public: /** IO type              */NXOpen::Mechatronics::SignalBuilder::IOType EIOType;
                public: /** Data type            */NXOpen::Mechatronics::SignalBuilder::DataType EDataType;
                public: /** Data Value (bool)    */NXOpen::Expression * BoolValueExp;
                public: /** Data Value (int)     */NXOpen::Expression * IntValueExp;
                public: /** Data Value (double)  */NXOpen::Expression * DoubleValueExp;
                public: /** Data Value (string)  */NXOpen::Expression * StringValueExp;
                public: SignalV2() :
                    TgPhysicsObject(),
                    NPhysicsPropTag(),
                    EIOType((NXOpen::Mechatronics::SignalBuilder::IOType)0),
                    EDataType((NXOpen::Mechatronics::SignalBuilder::DataType)0),
                    BoolValueExp(),
                    IntValueExp(),
                    DoubleValueExp(),
                    StringValueExp()
                {
                }
                /** Constructor for the SignalV2 struct. */ 
                public: SignalV2(NXOpen::NXObject * tgPhysicsObjectInitial /** Physics Object       */, 
                        int nPhysicsPropTagInitial /** Physics Property Peristent Index  */, 
                        NXOpen::Mechatronics::SignalBuilder::IOType eIOTypeInitial /** IO type              */, 
                        NXOpen::Mechatronics::SignalBuilder::DataType eDataTypeInitial /** Data type            */, 
                        NXOpen::Expression * boolValueExpInitial /** Data Value (bool)    */, 
                        NXOpen::Expression * intValueExpInitial /** Data Value (int)     */, 
                        NXOpen::Expression * doubleValueExpInitial /** Data Value (double)  */, 
                        NXOpen::Expression * stringValueExpInitial /** Data Value (string)  */) :
                    TgPhysicsObject(tgPhysicsObjectInitial),
                    NPhysicsPropTag(nPhysicsPropTagInitial),
                    EIOType(eIOTypeInitial),
                    EDataType(eDataTypeInitial),
                    BoolValueExp(boolValueExpInitial),
                    IntValueExp(intValueExpInitial),
                    DoubleValueExp(doubleValueExpInitial),
                    StringValueExp(stringValueExpInitial)
                {
                }
            };

            private: SignalBuilderImpl * m_signalbuilder_impl;
            private: friend class  _SignalBuilderBuilder;
            protected: SignalBuilder();
            public: ~SignalBuilder();
            /**  @brief  Gets signal data.  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::SignalBuilder::GetSignal NXOpen::Mechatronics::SignalBuilder::GetSignal@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::SignalBuilder::GetSignal instead.") NXOpen::Mechatronics::SignalBuilder::Signal GetSignalData
            (
            );
            /**  @brief  Gets signal data.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::SignalBuilder::GetSignal NXOpen::Mechatronics::SignalBuilder::GetSignal@endlink  instead. <br>  

             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::SignalBuilder::GetSignal instead.") NXOpen::Mechatronics::SignalBuilder::SignalV2 GetSignalDataV2
            (
            );
            /**  @brief  Gets signal.  

              
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NXOpen::Mechatronics::GenericSignal * GetSignal
            (
            );
            /**  @brief  Sets signal data.  

              
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Mechatronics::SignalBuilder::SetSignal NXOpen::Mechatronics::SignalBuilder::SetSignal@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Mechatronics::SignalBuilder::SetSignal instead.") void SetSignalData
            (
                const NXOpen::Mechatronics::SignalBuilder::Signal & signalData /** signaldata */ 
            );
            /**  @brief  Sets signal data.  

              
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Mechatronics::SignalBuilder::SetSignal NXOpen::Mechatronics::SignalBuilder::SetSignal@endlink  instead. <br>  

             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Mechatronics::SignalBuilder::SetSignal instead.") void SetSignalDataV2
            (
                const NXOpen::Mechatronics::SignalBuilder::SignalV2 & signalData /** signaldata */ 
            );
            /**  @brief  Sets signal data.  

              
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetSignal
            (
                NXOpen::Mechatronics::GenericSignal * signalData /** signaldata */ 
            );
            /**Returns   @brief  the name.  

             
                         The Signal name must be unique in the context of assembly and it should be selected from @link NXOpen::Mechatronics::SymbolTable NXOpen::Mechatronics::SymbolTable@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets   @brief  the name.  

             
                         The Signal name must be unique in the context of assembly and it should be selected from @link NXOpen::Mechatronics::SymbolTable NXOpen::Mechatronics::SymbolTable@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets   @brief  the name.  

             
                         The Signal name must be unique in the context of assembly and it should be selected from @link NXOpen::Mechatronics::SymbolTable NXOpen::Mechatronics::SymbolTable@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") OR nx_mcd_player ("Mechatronics Concept Designer Player") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
