#ifndef NXOpen_AME_SUMEVALUATORBUILDER_HXX_INCLUDED
#define NXOpen_AME_SUMEVALUATORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_SumEvaluatorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_BaseEvaluatorBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class SumEvaluatorBuilder;
    }
    namespace AME
    {
        class BaseEvaluatorBuilder;
    }
    class NXObject;
    namespace AME
    {
        class _SumEvaluatorBuilderBuilder;
        class SumEvaluatorBuilderImpl;
        /** Evaluates sum of given property for list of objects <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateSumEvaluatorBuilder  NXOpen::AME::AMEManager::CreateSumEvaluatorBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  SumEvaluatorBuilder : public NXOpen::AME::BaseEvaluatorBuilder
        {
            private: SumEvaluatorBuilderImpl * m_sumevaluatorbuilder_impl;
            private: friend class  _SumEvaluatorBuilderBuilder;
            protected: SumEvaluatorBuilder();
            public: ~SumEvaluatorBuilder();
            /**Returns  the property name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString PropertyName
            (
            );
            /**Sets  the property name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPropertyName
            (
                const NXString & propertyName /** propertyname */ 
            );
            /**Sets  the property name 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPropertyName
            (
                const char * propertyName /** propertyname */ 
            );
            /**Returns  the property unit 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * PropertyUnitTag
            (
            );
            /**Returns  the selected object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::NXObject * SelectedObject
            (
            );
            /**Sets  the selected object 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectedObject
            (
                NXOpen::NXObject * selectedObject /** selectedobject */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
