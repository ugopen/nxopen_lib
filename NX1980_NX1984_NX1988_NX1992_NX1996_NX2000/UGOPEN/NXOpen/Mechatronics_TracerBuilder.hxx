#ifndef NXOpen_MECHATRONICS_TRACERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_TRACERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_TracerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class TracerBuilder;
    }
    class Builder;
    class Expression;
    namespace Mechatronics
    {
        class SelectRigidBody;
    }
    class Point;
    namespace Mechatronics
    {
        class _TracerBuilderBuilder;
        class TracerBuilderImpl;
        /** Represents a @link Mechatronics::Tracer Mechatronics::Tracer@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::TracerCollection::CreateTracerBuilder  NXOpen::Mechatronics::TracerCollection::CreateTracerBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  TracerBuilder : public NXOpen::Builder
        {
            private: TracerBuilderImpl * m_tracerbuilder_impl;
            private: friend class  _TracerBuilderBuilder;
            protected: TracerBuilder();
            public: ~TracerBuilder();
            /**Returns  the body selection. This should be a @link NXOpen::Mechatronics::RigidBody NXOpen::Mechatronics::RigidBody@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectRigidBody * Selection
            (
            );
            /**Returns  the origin point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the origin point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSelectPoint
            (
                NXOpen::Point * selectPoint /** selectpoint */ 
            );
            /**Returns  the trace rate setting 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * TraceRateSetting
            (
            );
            /**Returns  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
