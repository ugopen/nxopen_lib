#ifndef NXOpen_WELD_WELDBEADSIZEBUILDER_HXX_INCLUDED
#define NXOpen_WELD_WELDBEADSIZEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_WeldBeadSizeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class WeldBeadSizeBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class Section;
    namespace Weld
    {
        class _WeldBeadSizeBuilderBuilder;
        class WeldBeadSizeBuilderImpl;
        /** This builder is used to define the bead shape.  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldBeadBuilder::NewSize  NXOpen::Weld::WeldBeadBuilder::NewSize @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  WeldBeadSizeBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Settings to indicate which standard size to use from the customer defaults file. */
            public: enum Size
            {
                SizeDefault1/** Default1 from the customer defaults */,
                SizeDefault2/** Default2 from the customer defaults */,
                SizeDefault3/** Default3 from the customer defaults */,
                SizeDefault4/** Default4 from the customer defaults */,
                SizeDefault5/** Default5 from the customer defaults */,
                SizeCustom/** Manually keyin value.               */
            };

            /** Settings to indicate the type of method used to build a triangle shape. */
            public: enum TriangleMethodType
            {
                TriangleMethodTypeLegLength/** Triangle defined by leg lengths */,
                TriangleMethodTypeThroatThickness/** Trangle defined by throat thickness               */
            };

            /** Settings to indicate the type of triangle. */
            public: enum TriangleTypes
            {
                TriangleTypesOneSided/** Basically a right triangle */,
                TriangleTypesTwoSided/** Basically an isosceles triangle */
            };

            private: WeldBeadSizeBuilderImpl * m_weldbeadsizebuilder_impl;
            private: friend class  _WeldBeadSizeBuilderBuilder;
            protected: WeldBeadSizeBuilder();
            public: ~WeldBeadSizeBuilder();
            /**Returns  the standard size setting. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldBeadSizeBuilder::Size SizeString
            (
            );
            /**Sets  the standard size setting. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetSizeString
            (
                NXOpen::Weld::WeldBeadSizeBuilder::Size sizeString /** sizestring */ 
            );
            /**Returns  the method used to construct the triangle shape. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldBeadSizeBuilder::TriangleMethodType TriangleMethod
            (
            );
            /**Sets  the method used to construct the triangle shape. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTriangleMethod
            (
                NXOpen::Weld::WeldBeadSizeBuilder::TriangleMethodType method /** method */ 
            );
            /**Returns  the method used to indicate the type of triangle to create. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::WeldBeadSizeBuilder::TriangleTypes TriangleType
            (
            );
            /**Sets  the method used to indicate the type of triangle to create. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTriangleType
            (
                NXOpen::Weld::WeldBeadSizeBuilder::TriangleTypes type /** type */ 
            );
            /**Returns   the section containing the custom bead shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * CustomSection
            (
            );
            /**Returns  the location on the path to place the bead shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * PathLocation
            (
            );
            /**Returns  the height of a rectangle shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double RectangleHeight
            (
            );
            /**Sets  the height of a rectangle shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetRectangleHeight
            (
                double height /** height */ 
            );
            /**Returns  the base length of a rectangle shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double RectangleBase
            (
            );
            /**Sets  the base length of a rectangle shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetRectangleBase
            (
                double length /** length */ 
            );
            /**Returns  the horizontal leg length of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double TriangleBase
            (
            );
            /**Sets  the horizontal leg length of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTriangleBase
            (
                double length /** length */ 
            );
            /**Returns  the vertical leg length of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double TriangleHeight
            (
            );
            /**Sets  the vertical leg length of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTriangleHeight
            (
                double length /** length */ 
            );
            /**Returns  the throat thickness of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double ThroatThickness
            (
            );
            /**Sets  the throat thickness of a triangular shaped bead.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetThroatThickness
            (
                double throatThickness /** throatthickness */ 
            );
            /**Returns  the semi minor size of an ellipse shaped bead.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double SemiMinor
            (
            );
            /**Sets  the semi minor size of an ellipse shaped bead.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetSemiMinor
            (
                double semiMinor /** semiminor */ 
            );
            /**Returns  the semi the semi major size of an ellipse shaped bead.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double SemiMajor
            (
            );
            /**Sets  the semi the semi major size of an ellipse shaped bead.  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetSemiMajor
            (
                double semiMajor /** semimajor */ 
            );
            /**Returns  the diameter size of the tube shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double TubeDiameter
            (
            );
            /**Sets  the diameter size of the tube shape. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetTubeDiameter
            (
                double tubeDiameter /** tubediameter */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
