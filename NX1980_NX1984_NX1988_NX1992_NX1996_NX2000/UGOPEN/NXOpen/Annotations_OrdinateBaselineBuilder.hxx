#ifndef NXOpen_ANNOTATIONS_ORDINATEBASELINEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_ORDINATEBASELINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_OrdinateBaselineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class OrdinateBaselineBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _OrdinateBaselineBuilderBuilder;
        class OrdinateBaselineBuilderImpl;
        /** Represents a builder for an ordinate baseline  <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  OrdinateBaselineBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: OrdinateBaselineBuilderImpl * m_ordinatebaselinebuilder_impl;
            private: friend class  _OrdinateBaselineBuilderBuilder;
            protected: OrdinateBaselineBuilder();
            public: ~OrdinateBaselineBuilder();
            /**Returns  the baseline vector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * BaselineVector
            (
            );
            /**Sets  the baseline vector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetBaselineVector
            (
                NXOpen::Direction * baselineVector /** baselinevector */ 
            );
            /**Returns  the activate baseline 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ActivateBaseline
            (
            );
            /**Sets  the activate baseline 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetActivateBaseline
            (
                bool active /** active */ 
            );
            /**Returns  the activate perpendicular 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ActivatePerpendicular
            (
            );
            /**Sets  the activate perpendicular 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetActivatePerpendicular
            (
                bool active /** active */ 
            );
            /**Returns  a flag indicating if the positive measurement direction for the baseline is reversed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsBaselineDirectionReversed
            (
            );
            /**Sets  a flag indicating if the positive measurement direction for the baseline is reversed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetBaselineDirectionReversed
            (
                bool isReversed /** isreversed */ 
            );
            /**Returns  a flag indicating if the positive measurement direction for the perpendicular baseline is reversed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsPerpendicularBaselineDirectionReversed
            (
            );
            /**Sets  a flag indicating if the positive measurement direction for the perpendicular baseline is reversed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetPerpendicularBaselineDirectionReversed
            (
                bool isReversed /** isreversed */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
