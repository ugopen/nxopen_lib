#ifndef NXOpen_PCBEXCHANGE_INCREMENTALIMPORTBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_INCREMENTALIMPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_IncrementalImportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class IncrementalImportBuilder;
    }
    class Builder;
    class DisplayableObject;
    namespace PcbExchange
    {
        class _IncrementalImportBuilderBuilder;
        class IncrementalImportBuilderImpl;
        /** Represents a builder to import incremental changes.  <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateIncrementalImportBuilder  NXOpen::PcbExchange::Manager::CreateIncrementalImportBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  IncrementalImportBuilder : public NXOpen::Builder
        {
            private: IncrementalImportBuilderImpl * m_incrementalimportbuilder_impl;
            private: friend class  _IncrementalImportBuilderBuilder;
            protected: IncrementalImportBuilder();
            public: ~IncrementalImportBuilder();
            /**Returns  the output file. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Output
            (
            );
            /**Sets  the output file. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetOutput
            (
                const NXString & output /** output */ 
            );
            /**Sets  the output file. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetOutput
            (
                const char * output /** output */ 
            );
            /**Returns  the filename. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Filename
            (
            );
            /**Sets  the filename. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetFilename
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the filename. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void SetFilename
            (
                const char * filename /** filename */ 
            );
            /** Accepts all changes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AcceptAll
            (
            );
            /** Rejects all changes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void RejectAll
            (
            );
            /** Acknowledges all changes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AcknowledgeAll
            (
            );
            /** Ignores all changes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void IgnoreAll
            (
            );
            /** Acknowledges a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AcknowledgeResponse
            (
                const NXString & id /** id */ 
            );
            /** Acknowledges a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void AcknowledgeResponse
            (
                const char * id /** id */ 
            );
            /** Ignores a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void IgnoreResponse
            (
                const NXString & id /** id */ 
            );
            /** Ignores a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void IgnoreResponse
            (
                const char * id /** id */ 
            );
            /** Accepts a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AcceptChange
            (
                const NXString & id /** id */ 
            );
            /** Accepts a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void AcceptChange
            (
                const char * id /** id */ 
            );
            /** Rejects a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void RejectChange
            (
                const NXString & id /** id */ 
            );
            /** Rejects a change. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void RejectChange
            (
                const char * id /** id */ 
            );
            /** Sets the board change state to false and rejects change with id. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void RejectBoardChange
            (
                const NXString & id /** id */ 
            );
            /** Sets the board change state to false and rejects change with id. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void RejectBoardChange
            (
                const char * id /** id */ 
            );
            /** Sets the board change state to true and accepts change with id. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AcceptBoardChange
            (
                const NXString & id /** id */ 
            );
            /** Sets the board change state to true and accepts change with id. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void AcceptBoardChange
            (
                const char * id /** id */ 
            );
            /** Adds a new comment to a response. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void AddNewComment
            (
                const NXString & id /** id */ ,
                const NXString & comment /** comment */ 
            );
            /** Adds a new comment to a response. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            void AddNewComment
            (
                const char * id /** id */ ,
                const char * comment /** comment */ 
            );
            /** Previews all changes. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void PreviewChanges
            (
            );
            /** Un-highlights all. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void UnhighlightAll
            (
            );
            /** Reads the import file. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void ReadImportFile
            (
            );
            /** Makes the supplied part the display part. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: NXOpen::DisplayableObject * SetExistingPart
            (
            );
            /** Sets board update status. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetBoardUpdated
            (
                bool updated /** updated */ 
            );
            /** Cancels increment review. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void CancelIncrementReview
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
