#ifndef NXOpen_MOLDCOOLING_ANALYSISPARAMS_HXX_INCLUDED
#define NXOpen_MOLDCOOLING_ANALYSISPARAMS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MoldCooling_AnalysisParams.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_moldcooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MoldCooling
    {
        class AnalysisParams;
    }
    class NXObject;
    namespace MoldCooling
    {
        class _AnalysisParamsBuilder;
        class AnalysisParamsImpl;
        /** Encapsulates the various parameters needed for a mold cooling simulation  <br> To create or edit an instance of this class, use @link NXOpen::MoldCooling::AnalysisParamsBuilder  NXOpen::MoldCooling::AnalysisParamsBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_MOLDCOOLINGEXPORT  AnalysisParams : public NXOpen::NXObject
        {
            private: AnalysisParamsImpl * m_analysisparams_impl;
            private: friend class  _AnalysisParamsBuilder;
            protected: AnalysisParams();
            public: ~AnalysisParams();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
