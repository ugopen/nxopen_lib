#ifndef NXOpen_FEATURES_INTERCEPTIONMIRRORLISTITEMBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_INTERCEPTIONMIRRORLISTITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_InterceptionMirrorListItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class InterceptionMirrorListItemBuilder;
    }
    class Expression;
    namespace Features
    {
        class SelectFeature;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Features
    {
        class _InterceptionMirrorListItemBuilderBuilder;
        class InterceptionMirrorListItemBuilderImpl;
        /**
            Represents the builder to create mirror list item used for interception
             <br> To create a new instance of this class, use @link NXOpen::Features::InterceptionBuilder::CreateInterceptionMirrorListItemBuilder  NXOpen::Features::InterceptionBuilder::CreateInterceptionMirrorListItemBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  InterceptionMirrorListItemBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**
                    Used to indicate the mirror orientation method
                    */
            public: enum MirrorOrientations
            {
                MirrorOrientationsAutoRotation/** auto rotation */ ,
                MirrorOrientationsInteractive/** interactive */ 
            };

            /**
                    Used to indicate the mirror rotation axes pairs
                    */
            public: enum AxisPairs
            {
                AxisPairsZy/** zy */ ,
                AxisPairsXy/** xy */ 
            };

            private: InterceptionMirrorListItemBuilderImpl * m_interceptionmirrorlistitembuilder_impl;
            private: friend class  _InterceptionMirrorListItemBuilderBuilder;
            protected: InterceptionMirrorListItemBuilder();
            public: ~InterceptionMirrorListItemBuilder();
            /**Returns  the mirror 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeature * Mirror
            (
            );
            /**Returns  the mirror orientation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::InterceptionMirrorListItemBuilder::MirrorOrientations MirrorOrientation
            (
            );
            /**Sets  the mirror orientation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetMirrorOrientation
            (
                NXOpen::Features::InterceptionMirrorListItemBuilder::MirrorOrientations mirrorOrientation /** mirrororientation */ 
            );
            /**Returns  the axis pair 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::InterceptionMirrorListItemBuilder::AxisPairs AxisPair
            (
            );
            /**Sets  the axis pair 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetAxisPair
            (
                NXOpen::Features::InterceptionMirrorListItemBuilder::AxisPairs axisPair /** axispair */ 
            );
            /**Returns  the z rotation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ZRotation
            (
            );
            /**Returns  the x rotation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XRotation
            (
            );
            /**Returns  the y rotation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * YRotation
            (
            );
            /** This button pops up dialog to set display properties to mirror output data 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void ButtonSettings
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
