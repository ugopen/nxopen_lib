#ifndef NXOpen_CAE_SELECTIONRECIPEDISPLAY_HXX_INCLUDED
#define NXOpen_CAE_SELECTIONRECIPEDISPLAY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SelectionRecipeDisplay.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectionRecipe.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SelectionRecipeDisplay;
    }
    namespace CAE
    {
        class SelectionRecipe;
    }
    namespace CAE
    {
        class SelectionRecipeDisplayImpl;
        /**  @brief  Represents the display attributes of a @link CAE::SelectionRecipe CAE::SelectionRecipe@endlink   

          <br> To obtain an instance of this class, refer to @link NXOpen::CAE::SelectionRecipe  NXOpen::CAE::SelectionRecipe @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SelectionRecipeDisplay
        {
            private: SelectionRecipeDisplayImpl * m_selectionrecipedisplay_impl;
            private: NXOpen::CAE::SelectionRecipe* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SelectionRecipeDisplay(NXOpen::CAE::SelectionRecipe *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SelectionRecipeDisplay();
            /**Returns  the flag indicating whether the graphic symbol of the Selection Recipe is 
                        displayed in the graphics window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool IsGraphicSymbolDisplayed
            (
            );
            /**Sets  the flag indicating whether the graphic symbol of the Selection Recipe is 
                        displayed in the graphics window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGraphicSymbolDisplayed
            (
                bool isGraphicSymbolDisplayed /** isgraphicsymboldisplayed */ 
            );
            /**Returns  the flag indicating whether the name of the Selection Recipe is 
                        displayed in the graphics window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool IsNameDisplayed
            (
            );
            /**Sets  the flag indicating whether the name of the Selection Recipe is 
                        displayed in the graphics window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNameDisplayed
            (
                bool isNameDisplayed /** isnamedisplayed */ 
            );
            /**Returns  the flag indicating whether the name of the single entity, to which the Selection Recipe 
                        resolves to, is displayed in the graphics window. This property has no effect on 
                        Selection Recipes which support multiple entities. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool IsSingleSelectionEntityNameDisplayed
            (
            );
            /**Sets  the flag indicating whether the name of the single entity, to which the Selection Recipe 
                        resolves to, is displayed in the graphics window. This property has no effect on 
                        Selection Recipes which support multiple entities. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSingleSelectionEntityNameDisplayed
            (
                bool isSingleSelectionEntityNameDisplayed /** issingleselectionentitynamedisplayed */ 
            );
            /** Updates the display of the Selection Recipe 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Update
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
