#ifndef NXOpen_APPEARANCE_AREA_HXX_INCLUDED
#define NXOpen_APPEARANCE_AREA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Appearance_Area.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Appearance_Designator.hxx>
#include <NXOpen/Appearance_Scheme.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_appearance_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Appearance
    {
        class Area;
    }
    namespace Appearance
    {
        class Designator;
    }
    namespace Appearance
    {
        class Scheme;
    }
    class NXObject;
    namespace Appearance
    {
        class _AreaBuilder;
        class AreaImpl;
        /**
                Represents the Appearance Area class in NX data model. This class holds the set of Appearance Designators.

                ( Appearance Schemes are assigned to an Appearance Area. Appearance Schemes have Visual Materials mapped
                through Appearance Designators.)
             <br> Use @link NXOpen::Appearance::DataManager::GetCurrentWorkAppearanceArea NXOpen::Appearance::DataManager::GetCurrentWorkAppearanceArea@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_APPEARANCEEXPORT  Area : public NXOpen::NXObject
        {
            private: AreaImpl * m_area_impl;
            private: friend class  _AreaBuilder;
            protected: Area();
            public: ~Area();
            /** Returns the array of Appearance Designators under the current Appearance Area.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: void GetAllAppearanceDesignators
            (
                std::vector<NXOpen::Appearance::Designator *> & designators /** Array of Appearance Designators*/
            );
            /** This function will fetch the active appearance scheme in appearance context. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            public: NXOpen::Appearance::Scheme * GetActiveAppearanceScheme
            (
            );
            /** This function will get the designator object of the input designator name @return  Designator object will be returned.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            public: NXOpen::Appearance::Designator * GetDesignator
            (
                const NXString & designatorName /** designatorname */ 
            );
            /** This function will get the designator object of the input designator name @return  Designator object will be returned.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : appearance_mgmt (" AppearanceManagement Author for Native mode") OR appearance_mgmt_mgd (" AppearanceManagement Author for Managed mode") */
            NXOpen::Appearance::Designator * GetDesignator
            (
                const char * designatorName /** designatorname */ 
            );
            /** This function will get the scheme object of the input scheme name. @return  Scheme object will be returned.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            public: NXOpen::Appearance::Scheme * GetScheme
            (
                const NXString & schemeName /** schemename */ 
            );
            /** This function will get the scheme object of the input scheme name. @return  Scheme object will be returned.
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : studio_visualize ("STUDIO VISUALIZE") */
            NXOpen::Appearance::Scheme * GetScheme
            (
                const char * schemeName /** schemename */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
