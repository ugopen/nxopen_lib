#ifndef NXOpen_CAE_SIMFIELDFROMBCBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SIMFIELDFROMBCBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimFieldFromBcBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimFieldFromBcBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SimBC;
    }
    class Unit;
    namespace CAE
    {
        class _SimFieldFromBcBuilderBuilder;
        class SimFieldFromBcBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::SimFieldFromBcBuilder NXOpen::CAE::SimFieldFromBcBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::CAE::SimSimulation::CreateSimFieldFromBcBuilder  NXOpen::CAE::SimSimulation::CreateSimFieldFromBcBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimFieldFromBcBuilder : public NXOpen::Builder
        {
            /** Strategy types */

            /// \cond NX_NO_DOC 
            public: enum MagnitudeStrategy
            {
                MagnitudeStrategyNone/** none */ ,
                MagnitudeStrategyForceOrientToCompPressure/** force orient to comp pressure */ ,
                MagnitudeStrategyMagOrientToComp/** mag orient to comp */ ,
                MagnitudeStrategyForceOrientToCompForcePerLenth/** force orient to comp force per lenth */ 
            };


            /// \endcond 
            private: SimFieldFromBcBuilderImpl * m_simfieldfrombcbuilder_impl;
            private: friend class  _SimFieldFromBcBuilderBuilder;
            protected: SimFieldFromBcBuilder();
            public: ~SimFieldFromBcBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the bc 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SimBC * Bc
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the bc 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetBc
            (
                NXOpen::CAE::SimBC * bc /** bc */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the strategy 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SimFieldFromBcBuilder::MagnitudeStrategy Strategy
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the strategy 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetStrategy
            (
                NXOpen::CAE::SimFieldFromBcBuilder::MagnitudeStrategy strategy /** strategy */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets properties 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetProperties
            (
                std::vector<NXString> & propNames /** propnames */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Sets evaluation points 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEvaluationPoints
            (
                const std::vector<double> & values /** values */ ,
                const std::vector<NXOpen::Unit *> & units /** units */ 
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
