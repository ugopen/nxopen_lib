#ifndef NXOpen_PRESSLINESIMULATION_SIMULATIONSETUP_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_SIMULATIONSETUP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_SimulationSetup.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/PressLineSimulation_ActiveScopeManager.hxx>
#include <NXOpen/PressLineSimulation_ClientDataStore.hxx>
#include <NXOpen/PressLineSimulation_CollisionSettings.hxx>
#include <NXOpen/PressLineSimulation_ControlItemManager.hxx>
#include <NXOpen/PressLineSimulation_KinematicModel.hxx>
#include <NXOpen/PressLineSimulation_PressModelRoot.hxx>
#include <NXOpen/PressLineSimulation_SimulationController.hxx>
#include <NXOpen/PressLineSimulation_SimulationState.hxx>
#include <NXOpen/PressLineSimulation_StaticChecker.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class SimulationSetup;
    }
    class NXObject;
    namespace PressLineSimulation
    {
        class ActiveScopeManager;
    }
    namespace PressLineSimulation
    {
        class ClientDataStore;
    }
    namespace PressLineSimulation
    {
        class CollisionSettings;
    }
    namespace PressLineSimulation
    {
        class ControlItemManager;
    }
    namespace PressLineSimulation
    {
        class KinematicModel;
    }
    namespace PressLineSimulation
    {
        class PressModelRoot;
    }
    namespace PressLineSimulation
    {
        class SimulationController;
    }
    namespace PressLineSimulation
    {
        class SimulationState;
    }
    namespace PressLineSimulation
    {
        class StaticChecker;
    }
    namespace PressLineSimulation
    {
        class _SimulationSetupBuilder;
        class SimulationSetupImpl;
        /** Represents the simulation setup in press line simulation.  <br> Use the @link NXOpen::PressLineSimulation::ApplicationManager NXOpen::PressLineSimulation::ApplicationManager@endlink  class to create a SimulationSetup object.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  SimulationSetup : public NXOpen::NXObject
        {
            private: SimulationSetupImpl * m_simulationsetup_impl;
            private: friend class  _SimulationSetupBuilder;
            protected: SimulationSetup();
            public: ~SimulationSetup();
            /**Returns  an object of class @link NXOpen::PressLineSimulation::ControlItemManager NXOpen::PressLineSimulation::ControlItemManager@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::ControlItemManager * ControlItemManager
            (
            );
            /**Returns  an object of the @link NXOpen::PressLineSimulation::ClientDataStore NXOpen::PressLineSimulation::ClientDataStore@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::ClientDataStore * ClientDataStore
            (
            );
            /**Sets  an object of the @link NXOpen::PressLineSimulation::ClientDataStore NXOpen::PressLineSimulation::ClientDataStore@endlink  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetClientDataStore
            (
                NXOpen::PressLineSimulation::ClientDataStore * clientDataStore /** clientdatastore */ 
            );
            /**Returns  an object of class @link NXOpen::PressLineSimulation::KinematicModel NXOpen::PressLineSimulation::KinematicModel@endlink  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::KinematicModel * KinematicModel
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::PressModelRoot NXOpen::PressLineSimulation::PressModelRoot@endlink , which is the root object for all logical press components 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::PressModelRoot * PressModelRoot
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::SimulationController NXOpen::PressLineSimulation::SimulationController@endlink , which allows to configure the curves used in the simulation 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::SimulationController * SimulationController
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::SimulationState NXOpen::PressLineSimulation::SimulationState@endlink , which stores the current angle of the simulation. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::SimulationState * SimulationState
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::CollisionSettings NXOpen::PressLineSimulation::CollisionSettings@endlink , which stores the configurations of the collision module. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::CollisionSettings * CollisionSettings
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::ActiveScopeManager NXOpen::PressLineSimulation::ActiveScopeManager@endlink , which stores the active scope for collision checking. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::ActiveScopeManager * ActiveScopeManager
            (
            );
            /**Returns  an instance of the @link NXOpen::PressLineSimulation::StaticChecker NXOpen::PressLineSimulation::StaticChecker@endlink , which is used for checking for collision over one cycle of the simulation. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::StaticChecker * CollisionStaticChecker
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
