#ifndef NXOpen_CAE_UNIFIEDDATABASEOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_UNIFIEDDATABASEOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_UnifiedDatabaseOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DataReaderDatabaseOptions.hxx>
#include <NXOpen/CAE_IFormatHandler.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class UnifiedDatabaseOptions;
    }
    namespace CAE
    {
        class DataReaderDatabaseOptions;
    }
    namespace CAE
    {
        class IFormatHandler;
    }
    namespace CAE
    {
        class _UnifiedDatabaseOptionsBuilder;
        class UnifiedDatabaseOptionsImpl;
        /**  @brief  Represents the sum of options associated with the "Generic Data Source" format.  

          
             <br> Not support KF.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  UnifiedDatabaseOptions : public NXOpen::CAE::DataReaderDatabaseOptions, public virtual NXOpen::CAE::IFormatHandler
        {
             /**  @brief Represents additional flags to configure a @link CAE::DataSource CAE::DataSource@endlink . 

             
                        
                          <ul>Possible flags:
                          <li>Hierarchy - Controls whether the data definitions from this data source reflect the internal hierarchy of a data source or whether the data source presents data as flat lists</li>
                          <li>MotionChannelRenaming - Controls whether to present variables with standardised names in the context of Simcenter Motion</li>
                          </ul>
                        
                      
             <br>  Created in NX1847.0.0.  <br>  
            */
            public:
            struct Flag
            {
                public: /** The name of the flag. */NXString FlagName;
                public: /** Whether the flag is set or not. */bool FlagSet;
                public: Flag() :
                    FlagName(),
                    FlagSet()
                {
                }
                /** Constructor for the Flag struct. */ 
                public: Flag(const NXString &flagNameInitial /** The name of the flag. */, 
                        bool flagSetInitial /** Whether the flag is set or not. */) :
                    FlagName(flagNameInitial),
                    FlagSet(flagSetInitial)
                {
                }
            };

            private: UnifiedDatabaseOptionsImpl * m_unifieddatabaseoptions_impl;
            private: friend class  _UnifiedDatabaseOptionsBuilder;
            protected: UnifiedDatabaseOptions();
            public: ~UnifiedDatabaseOptions();
            /** Retrieves available flags for this data source. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::UnifiedDatabaseOptions::Flag> GetFlags
            (
            );
            /** Sets the flags specified in the array to their associated value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFlags
            (
                const std::vector<NXOpen::CAE::UnifiedDatabaseOptions::Flag> & flags /** flags */ 
            );
            /**Returns  the name of this Format Handler. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: virtual NXString Name
            (
            );
            /**Returns  the display name of this Format Handler. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: virtual NXString DisplayName
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
