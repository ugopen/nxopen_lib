#ifndef NXOpen_TOOLING_DIEENGFORMTASKBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIEENGFORMTASKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DieEngFormTaskBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DieEngFormTaskBuilder;
    }
    class Direction;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class Point;
    class ScCollector;
    class SelectDisplayableObjectList;
    namespace Tooling
    {
        class _DieEngFormTaskBuilderBuilder;
        class DieEngFormTaskBuilderImpl;
        /**
            Represents a Form Task builder
             <br> To create a new instance of this class, use @link NXOpen::Tooling::AutoDieCollection::CreateDieEngFormTaskBuilder  NXOpen::Tooling::AutoDieCollection::CreateDieEngFormTaskBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FinishOperation </term> <description> 
         
        1 </description> </item> 

        </list> 

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DieEngFormTaskBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: DieEngFormTaskBuilderImpl * m_dieengformtaskbuilder_impl;
            private: friend class  _DieEngFormTaskBuilderBuilder;
            protected: DieEngFormTaskBuilder();
            public: ~DieEngFormTaskBuilder();
            /**Returns  the die tip selection. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SelectFeature * DieTip
            (
            );
            /**Returns  the edge region bounds 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * RegionBounds
            (
            );
            /**Returns  the point in region 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PointInRegion
            (
            );
            /**Sets  the point in region 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetPointInRegion
            (
                NXOpen::Point * pointInRegion /** pointinregion */ 
            );
            /**Returns  the cam direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * CamDirection
            (
            );
            /**Sets  the cam direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetCamDirection
            (
                NXOpen::Direction * camDirection /** camdirection */ 
            );
            /**Returns  the shape detail selection. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * ShapeDetail
            (
            );
            /** Returns the detailed information of the feature set by user. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetDetails
            (
            );
            /** Sets the detailed information of the feature. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetDetails
            (
                const std::vector<NXString> & details /** details */ 
            );
            /**Returns  the finish operation option. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool FinishOperation
            (
            );
            /**Sets  the finish operation option. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetFinishOperation
            (
                bool finishOperation /** finishoperation */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
