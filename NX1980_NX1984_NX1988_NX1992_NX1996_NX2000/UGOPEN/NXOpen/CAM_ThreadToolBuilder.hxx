#ifndef NXOpen_CAM_THREADTOOLBUILDER_HXX_INCLUDED
#define NXOpen_CAM_THREADTOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ThreadToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TurningToolBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class ThreadToolBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class TurningToolBuilder;
    }
    namespace CAM
    {
        class _ThreadToolBuilderBuilder;
        class ThreadToolBuilderImpl;
        /** Represents a Thread tool builder  <br> To create a new instance of this class, use @link NXOpen::CAM::NCGroupCollection::CreateThreadToolBuilder  NXOpen::CAM::NCGroupCollection::CreateThreadToolBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  ThreadToolBuilder : public NXOpen::CAM::TurningToolBuilder
        {
            /** the available insert shapes */
            public: enum InsertShapes
            {
                InsertShapesStandard/** Standard insert shape */,
                InsertShapesTrapezoidal/** Trapezoidal insert shape */,
                InsertShapesTriangularStandard/** Triangular standard insert shape */,
                InsertShapesTriangularTrapezoidal/** Triangular trapezoidal insert shape */
            };

            /** the available profile angles */
            public: enum ProfileAngles
            {
                ProfileAnglesDeg45/** deg 45 profile angle */,
                ProfileAnglesDeg55/** deg 55 profile angle */,
                ProfileAnglesDeg60/** deg 60 profile angle */,
                ProfileAnglesDeg80/** deg 80 profile angle */,
                ProfileAnglesDeg29/** deg 29 profile angle */,
                ProfileAnglesDeg30/** deg 30 profile angle */
            };

            /** The available holder hand options for thread tools */
            public: enum HolderHands
            {
                HolderHandsLeft/** Left hand */,
                HolderHandsRight/** Right hand */
            };

            private: ThreadToolBuilderImpl * m_threadtoolbuilder_impl;
            private: friend class  _ThreadToolBuilderBuilder;
            protected: ThreadToolBuilder();
            public: ~ThreadToolBuilder();
            /**Returns  the insert shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ThreadToolBuilder::InsertShapes InsertShape
            (
            );
            /**Sets  the insert shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInsertShape
            (
                NXOpen::CAM::ThreadToolBuilder::InsertShapes insertShape /** insertshape */ 
            );
            /**Returns  the tip offset builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * TipOffsetBuilder
            (
            );
            /**Returns  the profile depth insert builder 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * ProfileDepthInsertBuilder
            (
            );
            /**Returns  the profile distance ex builder 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * ProfileDistanceExBuilder
            (
            );
            /**Returns  the profile distance ey builder 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * ProfileDistanceEyBuilder
            (
            );
            /**Returns  the profile angle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ThreadToolBuilder::ProfileAngles ProfileAngle
            (
            );
            /**Sets  the profile angle 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetProfileAngle
            (
                NXOpen::CAM::ThreadToolBuilder::ProfileAngles profileAngle /** profileangle */ 
            );
            /**Returns  the holder hand 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ThreadToolBuilder::HolderHands HolderHand
            (
            );
            /**Sets  the holder hand 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetHolderHand
            (
                NXOpen::CAM::ThreadToolBuilder::HolderHands holderHand /** holderhand */ 
            );
            /**Returns  the thread height difference builder 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * ThreadHeightDifferenceBuilder
            (
            );
            /**Returns  the thread height theoretical builder 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::InheritableDoubleBuilder * ThreadHeightTheoreticalBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
