#ifndef NXOpen_CAE_IMMERSEDBOUNDARYMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_IMMERSEDBOUNDARYMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ImmersedBoundaryMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ImmersedBoundaryMeshBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _ImmersedBoundaryMeshBuilderBuilder;
        class ImmersedBoundaryMeshBuilderImpl;
        /** Represents 3D Mesh
             *  Used to create a @link CAE::Mesh3d CAE::Mesh3d@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateImmersedBoundaryMeshBuilder  NXOpen::CAE::MeshManager::CreateImmersedBoundaryMeshBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ImmersedBoundaryMeshBuilder : public NXOpen::Builder
        {
            /** Represents the subdivision types. */
            public: enum JaImmersedBoundaryMeshBuilderSubdivisionType
            {
                JaImmersedBoundaryMeshBuilderSubdivisionTypeOne/** one */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeTwo/** two */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeThree/** three */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeFour/** four */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeFive/** five */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeSix/** six */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeSeven/** seven */ ,
                JaImmersedBoundaryMeshBuilderSubdivisionTypeEight/** eight */ 
            };

            private: ImmersedBoundaryMeshBuilderImpl * m_immersedboundarymeshbuilder_impl;
            private: friend class  _ImmersedBoundaryMeshBuilderBuilder;
            protected: ImmersedBoundaryMeshBuilder();
            public: ~ImmersedBoundaryMeshBuilder();
            /**Returns  the auto reset geometry option. All manually performed edits will be removed if this option is true.
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: bool AutoResetOption
            (
            );
            /**Sets  the auto reset geometry option. All manually performed edits will be removed if this option is true.
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: void SetAutoResetOption
            (
                bool fAutoReset /** fautoreset */ 
            );
            /**Returns  the selection objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: NXOpen::SelectDisplayableObjectList * SelectionList
            (
            );
            /**Returns  the embedded feature selection objects 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: NXOpen::SelectDisplayableObjectList * FeatureSelectionList
            (
            );
            /**Returns  the element type builder.  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the property table associated with the mesh. 
                        The property table contains the parameters needed for the generation
                        of the mesh.  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /** Commits the creation of the 
                                     @link CAE::Mesh0d CAE::Mesh0d@endlink ,
                                     @link CAE::Mesh1d CAE::Mesh1d@endlink ,
                                     @link CAE::Mesh2d CAE::Mesh2d@endlink ,
                                     @link CAE::Mesh3d CAE::Mesh3d@endlink  object
                        or Commits the changes made to the @link CAE::Mesh0d CAE::Mesh0d@endlink ,
                                     @link CAE::Mesh1d CAE::Mesh1d@endlink ,
                                     @link CAE::Mesh2d CAE::Mesh2d@endlink ,
                                     @link CAE::Mesh3d CAE::Mesh3d@endlink  object.
                      @return  
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: std::vector<NXOpen::CAE::Mesh *> CommitMesh
            (
            );
            /**Returns  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: NXString MeshName
            (
            );
            /**Sets  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            public: void SetMeshName
            (
                const NXString & meshName /** meshname */ 
            );
            /**Sets  the mesh name option. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_adv_fld_mod_solv ("NX Advanced Fluid Modeling - Full") */
            void SetMeshName
            (
                const char * meshName /** meshname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
