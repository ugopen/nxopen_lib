#ifndef NXOpen_VSA_GDTMEASUREMENTOPERATIONBUILDER_HXX_INCLUDED
#define NXOpen_VSA_GDTMEASUREMENTOPERATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_GDTMeasurementOperationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class GDTMeasurementOperationBuilder;
    }
    class Builder;
    class NXObject;
    namespace Vsa
    {
        class _GDTMeasurementOperationBuilderBuilder;
        class GDTMeasurementOperationBuilderImpl;
        /**
            
             <br> To create a new instance of this class, use @link NXOpen::Vsa::VsaManager::CreateGdtmeasurementOperationBuilder  NXOpen::Vsa::VsaManager::CreateGdtmeasurementOperationBuilder @endlink  <br> 
         <br>  Usable only on Windows <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  GDTMeasurementOperationBuilder : public NXOpen::Builder
        {
            /**
                    
                    */
            public: enum APIGeometricChar
            {
                APIGeometricCharPosition/** position */ ,
                APIGeometricCharProfile/** profile */ ,
                APIGeometricCharAngularity/** angularity */ ,
                APIGeometricCharFlatness/** flatness */ 
            };

            /**
                    
                    */
            public: enum APIEnumNameFormat
            {
                APIEnumNameFormatShort/** short */ ,
                APIEnumNameFormatLong/** long */ 
            };

            private: GDTMeasurementOperationBuilderImpl * m_gdtmeasurementoperationbuilder_impl;
            private: friend class  _GDTMeasurementOperationBuilderBuilder;
            protected: GDTMeasurementOperationBuilder();
            public: ~GDTMeasurementOperationBuilder();
            /**Returns  the str name 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StrName
            (
            );
            /**Sets  the str name 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStrName
            (
                const NXString & strName /** strname */ 
            );
            /**Sets  the str name 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStrName
            (
                const char * strName /** strname */ 
            );
            /**Returns  the str description 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StrDescription
            (
            );
            /**Sets  the str description 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetStrDescription
            (
                const NXString & strDescription /** strdescription */ 
            );
            /**Sets  the str description 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetStrDescription
            (
                const char * strDescription /** strdescription */ 
            );
            /**Returns  the geom characteristic 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::GDTMeasurementOperationBuilder::APIGeometricChar GeaomCharacteristic
            (
            );
            /**Sets  the geom characteristic 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetGeaomCharacteristic
            (
                NXOpen::Vsa::GDTMeasurementOperationBuilder::APIGeometricChar geomChar /** geomchar */ 
            );
            /** The measured feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: NXOpen::NXObject * GetMeasuredFeature
            (
            );
            /** The measured feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetMeasuredFeature
            (
                NXOpen::NXObject * feature /** feature */ 
            );
            /** The primary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: NXOpen::NXObject * GetPrimaryDatumFeatureItem
            (
                int index /** index */ 
            );
            /** The primary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetPrimaryDatumFeatureItem
            (
                int index /** index */ ,
                NXOpen::NXObject * feature /** feature */ 
            );
            /** The secondary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: NXOpen::NXObject * GetSecondaryDatumFeatureItem
            (
                int index /** index */ 
            );
            /** The secondary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetSecondaryDatumFeatureItem
            (
                int index /** index */ ,
                NXOpen::NXObject * feature /** feature */ 
            );
            /** The tertiary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: NXOpen::NXObject * GetTertiaryDatumFeatureItem
            (
                int index /** index */ 
            );
            /** The tertiary datum feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetTertiaryDatumFeatureItem
            (
                int index /** index */ ,
                NXOpen::NXObject * feature /** feature */ 
            );
            /**Returns  the MeasurementZoneLimit 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double MeasurementZoneLimit
            (
            );
            /**Sets  the MeasurementZoneLimit 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetMeasurementZoneLimit
            (
                double measurementZoneLimit /** measurementzonelimit */ 
            );
            /**Returns  the Name Format 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::GDTMeasurementOperationBuilder::APIEnumNameFormat EnumNameFormat
            (
            );
            /**Sets  the Name Format 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumNameFormat
            (
                NXOpen::Vsa::GDTMeasurementOperationBuilder::APIEnumNameFormat nameFormat /** nameformat */ 
            );
            /** The Remove Datum Feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveDatumFeature
            (
                int ntype /** ntype */ ,
                int nIndex /** nindex */ 
            );
            /** The swap the existing  Datum Feature 
             <br>  Usable only on Windows <br> 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SwapDatumFeature
            (
                int ntype /** ntype */ ,
                int nIndex1 /** nindex1 */ ,
                int nIndex2 /** nindex2 */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
