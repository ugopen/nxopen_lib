#ifndef NXOpen_MPA_SHEETINITIALCONFIGURATIONBUILDER_HXX_INCLUDED
#define NXOpen_MPA_SHEETINITIALCONFIGURATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MPA_SheetInitialConfigurationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libmpaopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MPA
    {
        class SheetInitialConfigurationBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class ModelingView;
    class SelectTaggedObject;
    namespace MPA
    {
        class _SheetInitialConfigurationBuilderBuilder;
        class SheetInitialConfigurationBuilderImpl;
        /** Represents a Builder class for creating object of SheetSettings   <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class MPAOPENCPPEXPORT  SheetInitialConfigurationBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Enum that represents how expanded is the asssembly used to create the MPA diagram on sheet  */
            public: enum InitialScope
            {
                InitialScopeAllLevel/** all level */ ,
                InitialScopeTopLevel/** top level */ ,
                InitialScopeSelectAssembly/** select assembly */ 
            };

            private: SheetInitialConfigurationBuilderImpl * m_sheetinitialconfigurationbuilder_impl;
            private: friend class  _SheetInitialConfigurationBuilderBuilder;
            protected: SheetInitialConfigurationBuilder();
            public: ~SheetInitialConfigurationBuilder();
            /**Returns  the scope which determines how much expanded is the asssembly used to create the MPA diagram on sheet  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MPA::SheetInitialConfigurationBuilder::InitialScope Scope
            (
            );
            /**Sets  the scope which determines how much expanded is the asssembly used to create the MPA diagram on sheet  
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_sdpd_pam_a (" NX Physical Architecture Diagram Author") */
            public: void SetScope
            (
                NXOpen::MPA::SheetInitialConfigurationBuilder::InitialScope sheetScope /** sheetscope */ 
            );
            /**Returns  the layout orientation of MPA diagram on sheet 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ModelingView * Layout
            (
            );
            /**Sets  the layout orientation of MPA diagram on sheet 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_sdpd_pam_a (" NX Physical Architecture Diagram Author") */
            public: void SetLayout
            (
                NXOpen::ModelingView * view /** view */ 
            );
            /**Returns  the assembly selcted for MPA diagram 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObject * SelectAssembly
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
