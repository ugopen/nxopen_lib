#ifndef NXOpen_AME_MAPPINGSOURCEBUILDER_HXX_INCLUDED
#define NXOpen_AME_MAPPINGSOURCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_MappingSourceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class MappingSourceBuilder;
    }
    namespace AME
    {
        class _MappingSourceBuilderBuilder;
        class MappingSourceBuilderImpl;
        /** This builder class is a re-usable component used to filter 
                external objects by discipline.
                This is also used to select the type mapping mode preference.
             <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  MappingSourceBuilder : public NXOpen::TaggedObject
        {
            /** possible choices for type mapping mode */
            public: enum MappingMode
            {
                MappingModeMechanicalObject/** mechanical object */ ,
                MappingModeAutomationIdAsProperty/** automation id as property */ ,
                MappingModeMechanicalTypeAsProperty/** mechanical type as property */ 
            };

            private: MappingSourceBuilderImpl * m_mappingsourcebuilder_impl;
            private: friend class  _MappingSourceBuilderBuilder;
            protected: MappingSourceBuilder();
            public: ~MappingSourceBuilder();
            /**Returns  the functions to Get/Set the mapping source input 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int ExternalObjectsSource
            (
            );
            /**Sets  the functions to Get/Set the mapping source input 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetExternalObjectsSource
            (
                int externalObjectSourceIndex /** externalobjectsourceindex */ 
            );
            /**Returns  the functions to Get/Set the @link NXOpen::AME::MappingSourceBuilder::MappingMode NXOpen::AME::MappingSourceBuilder::MappingMode@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::MappingSourceBuilder::MappingMode TypeMappingMode
            (
            );
            /**Sets  the functions to Get/Set the @link NXOpen::AME::MappingSourceBuilder::MappingMode NXOpen::AME::MappingSourceBuilder::MappingMode@endlink  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetTypeMappingMode
            (
                NXOpen::AME::MappingSourceBuilder::MappingMode mode /** mode */ 
            );
            /**Returns  the property to use for type mapping by mechanical or automation id 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString MappingProperty
            (
            );
            /**Sets  the property to use for type mapping by mechanical or automation id 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetMappingProperty
            (
                const NXString & mappingProperty /** mappingproperty */ 
            );
            /**Sets  the property to use for type mapping by mechanical or automation id 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetMappingProperty
            (
                const char * mappingProperty /** mappingproperty */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
