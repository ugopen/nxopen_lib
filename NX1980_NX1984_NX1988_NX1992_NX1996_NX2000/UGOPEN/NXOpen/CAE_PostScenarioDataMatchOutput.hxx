#ifndef NXOpen_CAE_POSTSCENARIODATAMATCHOUTPUT_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIODATAMATCHOUTPUT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioDataMatchOutput.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioDataMatchOutput;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioDataMatchOutputImpl;
        /**  @brief  
                    Represents the list of matches of @link NXOpen::CAE::PostScenarioDefinition NXOpen::CAE::PostScenarioDefinition@endlink  and their parent 
                    @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink  available for a @link CAE::PostScenarioBuilderSlot CAE::PostScenarioBuilderSlot@endlink . 
                 

         

                 
                    This is an output for @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  callback. 
                
             <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioDataMatchOutput : public NXOpen::TransientObject
        {
            private: PostScenarioDataMatchOutputImpl * m_postscenariodatamatchoutput_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioDataMatchOutput(void *ptr);
            /// \endcond 
            /** Dispose of this instance. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioDataMatchOutput();
            /** For a Slot, returns the selected Data Source. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetSlotDataSourceName
            (
                const NXString & slotName /** slotname */ 
            );
            /** For a Slot, returns the selected Data Source. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXString GetSlotDataSourceName
            (
                const char * slotName /** slotname */ 
            );
            /** For a Slot, returns the selected Data Definition. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetSlotDataDefinitionName
            (
                const NXString & slotName /** slotname */ 
            );
            /** For a Slot, returns the selected Data Definition. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXString GetSlotDataDefinitionName
            (
                const char * slotName /** slotname */ 
            );
            /**  @brief  Select which Data Source to use for a Slot.  

             
                        
                        
                             <br> 
                                This method sets the data sorce name for a specific matched slot and the data definition name associated with it.
                             <br> 
                             <br> 
                                The specific matched slot is given by its name. 
                             <br> 
                             <br> 
                                All slots must have a valid match assigned if the @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  
                                callback returns @link NXOpen::CAE::DataMatchOverrideResult::Override NXOpen::CAE::DataMatchOverrideResult::Override@endlink , otherwise the callback must return 
                                @link NXOpen::CAE::DataMatchOverrideResult::UseDefault NXOpen::CAE::DataMatchOverrideResult::UseDefault@endlink .
                             <br> 
                        
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSlotDataSourceName
            (
                const NXString & slotName /** slotname */ ,
                const NXString & dataSourceName /** datasourcename */ ,
                const NXString & dataDefinitionName /** datadefinitionname */ 
            );
            /**  @brief  Select which Data Source to use for a Slot.  

             
                        
                        
                             <br> 
                                This method sets the data sorce name for a specific matched slot and the data definition name associated with it.
                             <br> 
                             <br> 
                                The specific matched slot is given by its name. 
                             <br> 
                             <br> 
                                All slots must have a valid match assigned if the @link NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback NXOpen::CAE::PostScenarioDescriptorBuilder::OverrideMatchCallback@endlink  
                                callback returns @link NXOpen::CAE::DataMatchOverrideResult::Override NXOpen::CAE::DataMatchOverrideResult::Override@endlink , otherwise the callback must return 
                                @link NXOpen::CAE::DataMatchOverrideResult::UseDefault NXOpen::CAE::DataMatchOverrideResult::UseDefault@endlink .
                             <br> 
                        
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetSlotDataSourceName
            (
                const char * slotName /** slotname */ ,
                const char * dataSourceName /** datasourcename */ ,
                const char * dataDefinitionName /** datadefinitionname */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
