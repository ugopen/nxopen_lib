#ifndef NXOpen_MECHATRONICS_GRAPHCONTROLBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GRAPHCONTROLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GraphControlBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GraphControlBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class CamProfile;
    }
    namespace Mechatronics
    {
        class MotionProfile;
    }
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectAdapterSignal;
    }
    namespace Mechatronics
    {
        class SelectPhysicsConstraint;
    }
    namespace Mechatronics
    {
        class SelectPhysicsJoint;
    }
    namespace Mechatronics
    {
        class _GraphControlBuilderBuilder;
        class GraphControlBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::GraphControl NXOpen::Mechatronics::GraphControl@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::GraphControlCollection::CreateGraphControlBuilder  NXOpen::Mechatronics::GraphControlCollection::CreateGraphControlBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GraphControlBuilder : public NXOpen::Mechatronics::PhysicsConstraintBuilder
        {
            /** the action in the end of graph. */
            public: enum EndAction
            {
                EndActionRestartfromBeginning/** restart from the beginning of graph. */,
                EndActionDeactivateGraphControl/** deactivate this graph control. */
            };

            /** the Master Unit types. */
            public: enum MasterValueUnit
            {
                MasterValueUnitLinear/** Linear */,
                MasterValueUnitRotary/** Rotary */,
                MasterValueUnitTime/** Time   */
            };

            /** the Slave Unit types. */
            public: enum SlaveValueUnit
            {
                SlaveValueUnitLinearPosition/** Linear Position */,
                SlaveValueUnitRotaryPosition/** Rotary Position*/,
                SlaveValueUnitLinearSpeed/** Linear Speed*/,
                SlaveValueUnitRotarySpeed/** Rotary Speed*/
            };

            /** the Master axis types. */
            public: enum MasterJointType
            {
                MasterJointTypeLinear/** Linear */,
                MasterJointTypeRotary/** Rotary */
            };

            /** the Master types. */
            public: enum MasterType
            {
                MasterTypeTime/** Time */,
                MasterTypeAxis/** Axis */,
                MasterTypeSignal/** Signal */
            };

            private: GraphControlBuilderImpl * m_graphcontrolbuilder_impl;
            private: friend class  _GraphControlBuilderBuilder;
            protected: GraphControlBuilder();
            public: ~GraphControlBuilder();
            /**Returns  the select axis control. This can be a @link NXOpen::Mechatronics::SpeedControl NXOpen::Mechatronics::SpeedControl@endlink , @link NXOpen::Mechatronics::PositionControl NXOpen::Mechatronics::PositionControl@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::SelectPhysicsConstraint * SelectAxisControl
            (
            );
            /**Returns  the initial offset. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InitialTime
            (
            );
            /**Returns  the value offset. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * ValueOffset
            (
            );
            /**Returns  the graph end action. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::GraphControlBuilder::EndAction GraphEndAction
            (
            );
            /**Sets  the graph end action. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetGraphEndAction
            (
                NXOpen::Mechatronics::GraphControlBuilder::EndAction graphEndAction /** graphendaction */ 
            );
            /**Returns  the motion profile. This can be @link NXOpen::Mechatronics::MotionProfile NXOpen::Mechatronics::MotionProfile@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::MotionProfile * MotionProfile
            (
            );
            /**Sets  the motion profile. This can be @link NXOpen::Mechatronics::MotionProfile NXOpen::Mechatronics::MotionProfile@endlink . 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMotionProfile
            (
                NXOpen::Mechatronics::MotionProfile * profile /** profile */ 
            );
            /**Returns  a cam profile that contains a number of curves that describes the dependency of 
                        the motion of a Slave Axis with respect to the Master Axis. This can be @link NXOpen::Mechatronics::CamProfile NXOpen::Mechatronics::CamProfile@endlink .
                      
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::CamProfile * CamProfile
            (
            );
            /**Sets  a cam profile that contains a number of curves that describes the dependency of 
                        the motion of a Slave Axis with respect to the Master Axis. This can be @link NXOpen::Mechatronics::CamProfile NXOpen::Mechatronics::CamProfile@endlink .
                      
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCamProfile
            (
                NXOpen::Mechatronics::CamProfile * profile /** profile */ 
            );
            /**Returns   an offset that specifies from the  master axis zero point relative to the path 
                        zero point for path interpolation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MasterOffset
            (
            );
            /**Returns  an offset that specifies from the  master slave zero point relative to the path 
                        zero point for path interpolation. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlaveOffset
            (
            );
            /**Returns   the transformation that is described between the normalized representation to the absolute 
                        values. It applied to slave axis. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MasterScaleFactor
            (
            );
            /**Returns  the transformation that is described between the normalized representation to the absolute 
                        values. It applied to slave axis.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SlaveScaleFactor
            (
            );
            /**Returns  the select axis joint. This can be a * @link NXOpen::Mechatronics::HingeJoint NXOpen::Mechatronics::HingeJoint@endlink ,
                         @link NXOpen::Mechatronics::SlidingJoint NXOpen::Mechatronics::SlidingJoint@endlink , @link NXOpen::Mechatronics::CylindricalJoint NXOpen::Mechatronics::CylindricalJoint@endlink . 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SelectPhysicsJoint * SelectMasterJoint
            (
            );
            /**Returns  the master value unit 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GraphControlBuilder::MasterValueUnit MasterUnit
            (
            );
            /**Sets  the master value unit 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMasterUnit
            (
                NXOpen::Mechatronics::GraphControlBuilder::MasterValueUnit masterType /** mastertype */ 
            );
            /**Returns  the slave value unit 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GraphControlBuilder::SlaveValueUnit SlaveUnit
            (
            );
            /**Sets  the slave value unit 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSlaveUnit
            (
                NXOpen::Mechatronics::GraphControlBuilder::SlaveValueUnit slaveType /** slavetype */ 
            );
            /**Returns  the master axis type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GraphControlBuilder::MasterJointType MasterAxisType
            (
            );
            /**Sets  the master axis type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMasterAxisType
            (
                NXOpen::Mechatronics::GraphControlBuilder::MasterJointType type /** type */ 
            );
            /**Returns  the master type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GraphControlBuilder::MasterType MasterBaseType
            (
            );
            /**Sets  the master type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMasterBaseType
            (
                NXOpen::Mechatronics::GraphControlBuilder::MasterType type /** type */ 
            );
            /**Returns  the select axis joint. This can be a * @link NXOpen::Mechatronics::AdapterSignal NXOpen::Mechatronics::AdapterSignal@endlink . 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SelectAdapterSignal * SelectMasterSignal
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
