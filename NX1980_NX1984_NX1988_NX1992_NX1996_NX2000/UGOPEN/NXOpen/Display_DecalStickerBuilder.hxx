#ifndef NXOpen_DISPLAY_DECALSTICKERBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_DECALSTICKERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_DecalStickerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Display_UVTransformationData.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class DecalStickerBuilder;
    }
    class Builder;
    namespace Display
    {
        class UVTransformationData;
    }
    class Expression;
    class Point;
    class SelectNXObjectList;
    namespace Display
    {
        class _DecalStickerBuilderBuilder;
        class DecalStickerBuilderImpl;
        /** Represents a @link NXOpen::Display::DecalStickerBuilder NXOpen::Display::DecalStickerBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Display::DecalCollection::CreateDecalStickerBuilder  NXOpen::Display::DecalCollection::CreateDecalStickerBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AnchorType </term> <description> 
         
        MiddleCenter </description> </item> 

        <item><term> 
         
        FitPreview </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        LockAspectRatio </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        PixelColorTolerance </term> <description> 
         
        32 </description> </item> 

        <item><term> 
         
        Strength </term> <description> 
         
        0.2 </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  DecalStickerBuilder : public NXOpen::Builder
        {
            /** Image size type */
            public: enum PixelSizes
            {
                PixelSizesTrueSize/** true size */ ,
                PixelSizesOneTwentyEight/** one twenty eight */ ,
                PixelSizesTwoFiftySix/** two fifty six */ ,
                PixelSizesFiveTwleve/** five twleve */ ,
                PixelSizesOneZeroTwoFour/** one zero two four */ ,
                PixelSizesTwoZeroFourEight/** two zero four eight */ ,
                PixelSizesFourZeroNineSix/** four zero nine six */ 
            };

            /** Projection type */
            public: enum ProjectionTypes
            {
                ProjectionTypesPlanar/** planar */ ,
                ProjectionTypesCylindrical/** cylindrical */ ,
                ProjectionTypesSpherical/** spherical */ ,
                ProjectionTypesUv/** uv */ 
            };

            /** Anchor type based on the position relative to image. */
            public: enum AnchorTypes
            {
                AnchorTypesBottomLeft/** bottom left */ ,
                AnchorTypesBottomCenter/** bottom center */ ,
                AnchorTypesBottomRight/** bottom right */ ,
                AnchorTypesMiddleLeft/** middle left */ ,
                AnchorTypesMiddleCenter/** middle center */ ,
                AnchorTypesMiddleRight/** middle right */ ,
                AnchorTypesTopLeft/** top left */ ,
                AnchorTypesTopCenter/** top center */ ,
                AnchorTypesTopRight/** top right */ 
            };

            /** Image scaling method */
            public: enum ScalingMethodTypes
            {
                ScalingMethodTypesUserDefined/** user defined */ ,
                ScalingMethodTypesImageSize/** image size */ 
            };

            /** Transparency type */
            public: enum TransparencyTypes
            {
                TransparencyTypesNone/** none */ ,
                TransparencyTypesFromImage/** from image */ ,
                TransparencyTypesPixelColor/** pixel color */ 
            };

            /** Reflectivity type */
            public: enum ReflectivityTypes
            {
                ReflectivityTypesFromVisualMaterial/** from visual material */ ,
                ReflectivityTypesMatte/** matte */ ,
                ReflectivityTypesPlastic/** plastic */ ,
                ReflectivityTypesMirror/** mirror */ ,
                ReflectivityTypesMetal/** metal */ ,
                ReflectivityTypesGlass/** glass */ 
            };

             /** Color definition */
            public:
            struct Color
            {
                public: /** color1 */ double Color1;
                public: /** color2 */ double Color2;
                public: /** color3 */ double Color3;
                public: Color() :
                    Color1(),
                    Color2(),
                    Color3()
                {
                }
                /** Constructor for the Color struct. */ 
                public: Color(double color1Initial /** color1 */ , 
                        double color2Initial /** color2 */ , 
                        double color3Initial /** color3 */ ) :
                    Color1(color1Initial),
                    Color2(color2Initial),
                    Color3(color3Initial)
                {
                }
            };

            private: DecalStickerBuilderImpl * m_decalstickerbuilder_impl;
            private: friend class  _DecalStickerBuilderBuilder;
            protected: DecalStickerBuilder();
            public: ~DecalStickerBuilder();
            /**Returns  the decal name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DecalName
            (
            );
            /**Sets  the decal name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDecalName
            (
                const NXString & decalName /** decalname */ 
            );
            /**Sets  the decal name 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            void SetDecalName
            (
                const char * decalName /** decalname */ 
            );
            /**Returns  the maximum pixel size 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::PixelSizes MaximumPixelSize
            (
            );
            /**Sets  the maximum pixel size 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMaximumPixelSize
            (
                NXOpen::Display::DecalStickerBuilder::PixelSizes maximumPixelSize /** maximumpixelsize */ 
            );
            /**Returns  the flag indicating if decal images should be filtered. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool FilterDecalImages
            (
            );
            /**Sets  the flag indicating if decal images should be filtered. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFilterDecalImages
            (
                bool filterDecalImages /** filterdecalimages */ 
            );
            /**Returns  the image selector 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ImageName
            (
            );
            /**Sets  the image selector 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetImageName
            (
                const NXString & decalName /** decalname */ 
            );
            /**Sets  the image selector 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            void SetImageName
            (
                const char * decalName /** decalname */ 
            );
            /**Returns  the face or body 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FaceOrBody
            (
            );
            /**Returns  the projection 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::ProjectionTypes ProjectionType
            (
            );
            /**Sets  the projection 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetProjectionType
            (
                NXOpen::Display::DecalStickerBuilder::ProjectionTypes projection /** projection */ 
            );
            /**Returns  the anchor 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::AnchorTypes AnchorType
            (
            );
            /**Sets  the anchor 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAnchorType
            (
                NXOpen::Display::DecalStickerBuilder::AnchorTypes anchor /** anchor */ 
            );
            /** Returns origin and coordinate system of the manipulator tool used to orient the image. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void GetManipulatorData
            (
                NXOpen::Point3d* origin /** origin */ ,
                NXOpen::Matrix3x3* csys /** csys */ 
            );
            /** Sets origin and coordinate system of the manipulator tool used to orient the image. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetManipulatorData
            (
                const NXOpen::Point3d & origin /** origin */ ,
                const NXOpen::Matrix3x3 & csys /** csys */ 
            );
            /**Returns  the origin 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Origin
            (
            );
            /**Sets  the origin 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );
            /**Returns  the rotation angle 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RotationAngle
            (
            );
            /**Returns  the transformation data used for editing of pre-NX1980 decal sticker having UV projection type. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::UVTransformationData * UVTransformationData
            (
            );
            /**Returns  the scaling method 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::ScalingMethodTypes ScalingMethodType
            (
            );
            /**Sets  the scaling method 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetScalingMethodType
            (
                NXOpen::Display::DecalStickerBuilder::ScalingMethodTypes scalingMethod /** scalingmethod */ 
            );
            /**Returns  the flag indicating if aspect ratio should be locked. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool LockAspectRatio
            (
            );
            /**Sets  the flag indicating if aspect ratio should be locked. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLockAspectRatio
            (
                bool lockAspectRatio /** lockaspectratio */ 
            );
            /**Returns  the width 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Width
            (
            );
            /**Returns  the height 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Height
            (
            );
            /** Resets the image size. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void ResetImageSize
            (
            );
            /**Returns  the transparency 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::TransparencyTypes TransparencyType
            (
            );
            /**Sets  the transparency 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTransparencyType
            (
                NXOpen::Display::DecalStickerBuilder::TransparencyTypes transparency /** transparency */ 
            );
            /**Returns  the flag indicating if image preview should be shown. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool FitPreview
            (
            );
            /**Sets  the flag indicating if image preview should be shown. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFitPreview
            (
                bool fitPreview /** fitpreview */ 
            );
            /** Returns the transparency pixel color 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::Color GetTransparencyPixelColor
            (
            );
            /** Sets the transparency pixel color 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTransparencyPixelColor
            (
                const NXOpen::Display::DecalStickerBuilder::Color & transparencyColor /** transparencycolor */ 
            );
            /**Returns  the pixel color tolerance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: int PixelColorTolerance
            (
            );
            /**Sets  the pixel color tolerance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPixelColorTolerance
            (
                int pixelColorTolerance /** pixelcolortolerance */ 
            );
            /**Returns  the reflectivity type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::DecalStickerBuilder::ReflectivityTypes ReflectivityType
            (
            );
            /**Sets  the reflectivity type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReflectivityType
            (
                NXOpen::Display::DecalStickerBuilder::ReflectivityTypes reflectivityType /** reflectivitytype */ 
            );
            /**Returns  the flag indicating if bump effect should be applied. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool Bump
            (
            );
            /**Sets  the flag indicating if bump effect should be applied. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBump
            (
                bool bump /** bump */ 
            );
            /**Returns  the strength 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: double Strength
            (
            );
            /**Sets  the strength 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStrength
            (
                double strength /** strength */ 
            );
            /** Updates the decal sticker to reflect change in image rotation angle, width or height. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateDecalStickerOnImageDimensionChange
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
