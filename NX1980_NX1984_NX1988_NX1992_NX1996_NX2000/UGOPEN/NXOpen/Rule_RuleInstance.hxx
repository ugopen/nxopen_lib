#ifndef NXOpen_RULE_RULEINSTANCE_HXX_INCLUDED
#define NXOpen_RULE_RULEINSTANCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Rule_RuleInstance.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libruleopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Rule
    {
        class RuleInstance;
    }
    class NXObject;
    namespace Rule
    {
        class Node;
    }
    namespace Rule
    {
        class NodeInput;
    }
    namespace Rule
    {
        class NodeOutput;
    }
    namespace Rule
    {
        class RuleObject;
    }
    namespace Rule
    {
        class RuleObjectCollection;
    }
    namespace Rule
    {
        class _RuleInstanceBuilder;
        class RuleInstanceImpl;
        /** Represents a @link NXOpen::Rule::RuleInstance NXOpen::Rule::RuleInstance@endlink   <br> This is a rule instance class.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class RULEOPENCPPEXPORT  RuleInstance : public NXOpen::NXObject
        {
            private: RuleInstanceImpl * m_ruleinstance_impl;
            private: friend class  _RuleInstanceBuilder;
            protected: RuleInstance();
            public: ~RuleInstance();
            /** Execute the rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int Execute
            (
            );
            /** Execute the rule instance without dependent rules 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: int ExecuteWithoutDependents
            (
            );
            /** Add input for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void AddNodeInput
            (
                NXOpen::Rule::Node * node /** node */ ,
                NXOpen::Rule::NodeInput * nodeInput /** nodeinput */ 
            );
            /**Returns  the rule object of rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::RuleObject * RuleObject
            (
            );
            /** Gets node input of rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeInput * GetNodeInput
            (
                NXOpen::Rule::Node * inputNode /** inputnode */ 
            );
            /** Gets all the outputs of rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void GetAllOutput
            (
                std::vector<NXOpen::Rule::NodeOutput *> & allOutput /** alloutput */ 
            );
            /** Destroy the rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void Destroy
            (
            );
            /** Create a NXObject type node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateObjectNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const std::vector<NXOpen::NXObject *> & objectTags /** objecttags */ 
            );
            /** Create a integer type node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateIntegerNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const std::vector<int> & intValues /** intvalues */ 
            );
            /** Create a double type node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateDoubleNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const std::vector<double> & doubleValues /** doublevalues */ 
            );
            /** Create a boolean type node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateBooleanNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const std::vector<bool> & boolValues /** boolvalues */ 
            );
            /** Create a string type node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateStringNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                std::vector<NXString> & stringValues /** stringvalues */ 
            );
            /** Create a color node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateColorNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                double red /** red */ ,
                double green /** green */ ,
                double blue /** blue */ 
            );
            /** Create a file node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateFileNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const NXString & filename /** filename */ 
            );
            /** Create a file node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Rule::NodeOutput * CreateFileNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const char * filename /** filename */ 
            );
            /** Create a attribute node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Rule::NodeOutput * CreateAttributeNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const NXString & attrName /** attrname */ ,
                const NXString & attrValue /** attrvalue */ ,
                NXOpen::NXObject * objectTag /** objecttag */ 
            );
            /** Create a attribute node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Rule::NodeOutput * CreateAttributeNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                const char * attrName /** attrname */ ,
                const char * attrValue /** attrvalue */ ,
                NXOpen::NXObject * objectTag /** objecttag */ 
            );
            /** Create a note text node output for rule instance 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : features_modeling ("FEATURES MODELING") OR assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Rule::NodeOutput * CreateNoteTextNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                std::vector<NXString> & stringValues /** stringvalues */ 
            );
            /** Add node output for rule instance 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void AddNodeOutput
            (
                NXOpen::Rule::Node * node /** node */ ,
                NXOpen::Rule::NodeOutput * nodeOutput /** nodeoutput */ 
            );
            /** Reset Rule instance to clear cache 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void RuleOutputReset
            (
                int resetOption /** resetoption */ 
            );
            /**Returns  the rule instance name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString InstanceName
            (
            );
            /**Sets  the rule instance name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInstanceName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the rule instance name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            void SetInstanceName
            (
                const char * name /** name */ 
            );
            /**  Check if rule instance is out-of-date. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsOutOfDate
            (
            );
            /** Update rule instance from rule library. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateRuleFromLibrary
            (
            );


            /** Returns the RuleObjectCollection belonging to this RuleInstance 
             <br>  Created in NX1953.0.0.  <br>  
            */
            public: NXOpen::Rule::RuleObjectCollection *RuleObjectCollection();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
