#ifndef NXOpen_CAE_REASSIGNELEMENTSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_REASSIGNELEMENTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ReassignElementsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ReassignElementsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class _ReassignElementsBuilderBuilder;
        class ReassignElementsBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::ReassignElementsBuilder NXOpen::CAE::ReassignElementsBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateReassignElementsBuilder  NXOpen::CAE::MeshManager::CreateReassignElementsBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ReassignElementsBuilder : public NXOpen::Builder
        {
            /** Indicates the different element dimensions */
            public: enum ElementDimensionOption
            {
                ElementDimensionOptionPoint/** 0-d */,
                ElementDimensionOptionBeam/** 1-d */,
                ElementDimensionOptionShell/** 2-d */,
                ElementDimensionOptionSolid/** 3-d */
            };

            /** 
                    Indicates the element types for each dimension.
                    Since this varies dynamically based on the language and dimension
                    Will not touch this for now. 
                    */
            public: enum ElementTypeOption
            {
                ElementTypeOptionFirstValue/** first value */ 
            };

            private: ReassignElementsBuilderImpl * m_reassignelementsbuilder_impl;
            private: friend class  _ReassignElementsBuilderBuilder;
            protected: ReassignElementsBuilder();
            public: ~ReassignElementsBuilder();
            /**Returns  the element dim opt 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ReassignElementsBuilder::ElementDimensionOption ElementDimOpt
            (
            );
            /**Sets  the element dim opt 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementDimOpt
            (
                NXOpen::CAE::ReassignElementsBuilder::ElementDimensionOption elementDimOpt /** elementdimopt */ 
            );
            /**Returns  the element type opt 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ReassignElementsBuilder::ElementTypeOption ElementTypeOpt
            (
            );
            /**Sets  the element type opt 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementTypeOpt
            (
                NXOpen::CAE::ReassignElementsBuilder::ElementTypeOption elementTypeOpt /** elementtypeopt */ 
            );
            /**Returns  the elem sel 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * ElemSel
            (
            );
            /**Returns  the ECC name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXString EccName
            (
            );
            /**Sets  the ECC name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEccName
            (
                const NXString & eccName /** eccname */ 
            );
            /**Sets  the ECC name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            void SetEccName
            (
                const char * eccName /** eccname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
