#ifndef NXOpen_FEATURES_SHIPDESIGN_SPLITSTANDARDPARTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SPLITSTANDARDPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_SplitStandardPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_CornerCutBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class SplitStandardPartBuilder;
        }
    }
    class Builder;
    class DisplayableObject;
    class Expression;
    namespace Features
    {
        namespace ShipDesign
        {
            class CornerCutBuilder;
        }
    }
    class Section;
    class SelectNXObject;
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _SplitStandardPartBuilderBuilder;
            class SplitStandardPartBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::SplitStandardPartBuilder NXOpen::Features::ShipDesign::SplitStandardPartBuilder@endlink .This class is for splitting ship standard part
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateSplitStandardPartBuilder  NXOpen::Features::ShipCollection::CreateSplitStandardPartBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AngularTolerance </term> <description> 
             
            0.5 </description> </item> 

            <item><term> 
             
            BaseCornerCut.DistanceTolerance </term> <description> 
             
            0.0254 (millimeters part), 0.001 (inches part) </description> </item> 

            <item><term> 
             
            DistanceTolerance </term> <description> 
             
            0.0254 </description> </item> 

            <item><term> 
             
            LocationOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            OrientationAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ReinforceOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            SplitReinforcement </term> <description> 
             
            1 </description> </item> 

            </list> 

             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SplitStandardPartBuilder : public NXOpen::Builder
            {
                /** Represents the split tool types. */
                public: enum ToolTypes
                {
                    ToolTypesFacePlane/** Face or plane object. */,
                    ToolTypesCurve/** Curve */
                };

                private: SplitStandardPartBuilderImpl * m_splitstandardpartbuilder_impl;
                private: friend class  _SplitStandardPartBuilderBuilder;
                protected: SplitStandardPartBuilder();
                public: ~SplitStandardPartBuilder();
                /**Returns  the split tool type to split the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int ToolType
                (
                );
                /**Sets  the split tool type to split the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetToolType
                (
                    int toolType /** tooltype */ 
                );
                /**Returns  the tool curve which used to split the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * ToolCurve
                (
                );
                /**Returns  the tool face or plane used to split the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * ToolFacePlane
                (
                );
                /**Returns  the flag to indicate whether to reverse the split direction or not. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseSplitDirection
                (
                );
                /**Sets  the flag to indicate whether to reverse the split direction or not. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetReverseSplitDirection
                (
                    bool reverseSplitDirection /** reversesplitdirection */ 
                );
                /**Returns  the offset value to the split location on the standard part base. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * LocationOffset
                (
                );
                /**Returns  the offset value to the split location on the standard part reinforcement. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ReinforceOffset
                (
                );
                /**Returns  the orientation angle relative to the split curve or plane to split the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * OrientationAngle
                (
                );
                /**Returns  the weld characteristics assigned to the split edges. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Weld::CharacteristicsBuilder * WeldCharacteristics
                (
                );
                /**Returns  the flag to indicate whether to split the reinforcement part on the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SplitReinforcement
                (
                );
                /**Sets  the flag to indicate whether to split the reinforcement part on the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetSplitReinforcement
                (
                    bool splitReinforcement /** splitreinforcement */ 
                );
                /**Returns  the tolerance used to determine when distances are considered zero. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the tolerance used to determine when distances are considered zero. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the tolerance, in degrees, used to determine when angles are zero. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the tolerance, in degrees, used to determine when angles are zero. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetAngularTolerance
                (
                    double angularTolerance /** angulartolerance */ 
                );
                /**Returns  the corner cut at the base point on the standard part. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CornerCutBuilder * BaseCornerCut
                (
                );
                /**Returns  the corner cut at the reinforcement point. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CornerCutBuilder * ReinforcementCornerCut
                (
                );
                /** Converts the selected objects to acceptable one and add to the selection list.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ConvertObjectsToAdd
                (
                    const std::vector<NXOpen::DisplayableObject *> & selectedObjectTags /** selectedobjecttags */ 
                );
                /** Converts the selected objects to acceptable one and remove it from the selection list.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void ConvertObjectsToRemove
                (
                    const std::vector<NXOpen::DisplayableObject *> & selectedObjectTags /** selectedobjecttags */ 
                );
                /** Resets the calculation results of standard part split when tool object changes.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void Reset
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
