#ifndef NXOpen_FACET_CURVATUREBUILDER_HXX_INCLUDED
#define NXOpen_FACET_CURVATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_CurvatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class CurvatureBuilder;
    }
    class Builder;
    namespace Facet
    {
        class SelectFacetedBodyList;
    }
    class SelectDisplayableObjectList;
    namespace Facet
    {
        class _CurvatureBuilderBuilder;
        class CurvatureBuilderImpl;
        /**
               Represents a @link NXOpen::Facet::CurvatureBuilder NXOpen::Facet::CurvatureBuilder@endlink .
               It calculates the maximum absolute principal curvature on facet
               bodies and creates a color map of these values.
             <br> To create a new instance of this class, use @link NXOpen::Facet::FacetedBodyCollection::CreateFacetCurvatureBuilder  NXOpen::Facet::FacetedBodyCollection::CreateFacetCurvatureBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  CurvatureBuilder : public NXOpen::Builder
        {
            private: CurvatureBuilderImpl * m_curvaturebuilder_impl;
            private: friend class  _CurvatureBuilderBuilder;
            protected: CurvatureBuilder();
            public: ~CurvatureBuilder();
            /**Returns  the input facet body list 
             <br>  @deprecated Deprecated in NX11.0.0.  Use @link NXOpen::Facet::CurvatureBuilder::Bodies NXOpen::Facet::CurvatureBuilder::Bodies@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use NXOpen::Facet::CurvatureBuilder::Bodies instead.") NXOpen::Facet::SelectFacetedBodyList * FacetBodies
            (
            );
            /**Returns  the input facet body list. Inputs to this command can be convergent objects. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * Bodies
            (
            );
            /**Returns  the reverse direction option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsDirectionReversed
            (
            );
            /**Sets  the reverse direction option 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetDirectionReversed
            (
                bool directionReversed /** direction reversed */ 
            );
            /**Returns  the concave radius threshold 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double ConcaveRadius
            (
            );
            /**Sets  the concave radius threshold 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetConcaveRadius
            (
                double concaveRadius /** concave radius */ 
            );
            /**Returns  the convex radius threshold 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double ConvexRadius
            (
            );
            /**Sets  the convex radius threshold 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetConvexRadius
            (
                double convexRadius /** convex radius */ 
            );
            /**Returns  the smoothing factor 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double SmoothingFactor
            (
            );
            /**Sets  the smoothing factor 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetSmoothingFactor
            (
                double smoothingFactor /** smoothing factor */ 
            );
            /** Deletes the curvature data associated with the input facet bodies.
                        Call this method in order to save memory if the curvature data are not needed any more.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void DeleteCurvature
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
