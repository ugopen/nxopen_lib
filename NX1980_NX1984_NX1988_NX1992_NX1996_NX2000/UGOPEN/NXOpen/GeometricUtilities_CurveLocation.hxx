#ifndef NXOpen_GEOMETRICUTILITIES_CURVELOCATION_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CURVELOCATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_CurveLocation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ugmath.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        /** Specify the curve location type 
         <br>  Created in NX1847.0.0.  <br>  
        */
        enum CurveLocationType
        {
            CurveLocationTypeStart/** Start point */,
            CurveLocationTypeEnd/** End point */,
            CurveLocationTypeCenter/** Center point of arcs */,
            CurveLocationTypeMid/**  Mid point of analytic types */
        };

         

        struct CurveLocation
        {
            public: /** the type of location relative to the edge/curve */NXOpen::GeometricUtilities::CurveLocationType Type;
            public: /** the location in the edge/curve's part space */NXOpen::Point3d Location;
            public: CurveLocation() :
                Type((NXOpen::GeometricUtilities::CurveLocationType)0),
                Location()
            {
            }
            /** Constructor for the CurveLocation struct. */ 
            public: CurveLocation(NXOpen::GeometricUtilities::CurveLocationType typeInitial /** the type of location relative to the edge/curve */, 
                    const NXOpen::Point3d &locationInitial /** the location in the edge/curve's part space */) :
                Type(typeInitial),
                Location(locationInitial)
            {
            }
        };

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#endif
