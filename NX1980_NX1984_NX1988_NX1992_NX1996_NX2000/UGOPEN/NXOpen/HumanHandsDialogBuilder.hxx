#ifndef NXOpen_HUMANHANDSDIALOGBUILDER_HXX_INCLUDED
#define NXOpen_HUMANHANDSDIALOGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     HumanHandsDialogBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class HumanHandsDialogBuilder;
    class Builder;
    namespace Features
    {
        class HumanBuilder;
    }
    class _HumanHandsDialogBuilderBuilder;
    class HumanHandsDialogBuilderImpl;
    /** Dialog for creating and editing standalone/"disembodied" hand figures  <br> To create a new instance of this class, use @link NXOpen::Features::HumanBuilder::CreateHumanHandsDialogBuilder  NXOpen::Features::HumanBuilder::CreateHumanHandsDialogBuilder @endlink  <br> 
    Default values.
    <list type="table"> 
     
    <listheader><term> 
    Property</term>  <description> 
    Value</description> </listheader>
    <item><term> 
     
    Aperture </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    BreadthPercentile </term> <description> 
     
    P75 </description> </item> 

    <item><term> 
     
    BreadthValue </term> <description> 
     
    9 </description> </item> 

    <item><term> 
     
    Database </term> <description> 
     
    Ansur </description> </item> 

    <item><term> 
     
    Gender </term> <description> 
     
    Male </description> </item> 

    <item><term> 
     
    GloveThickness </term> <description> 
     
    1 </description> </item> 

    <item><term> 
     
    IncludeForearm </term> <description> 
     
    0 </description> </item> 

    <item><term> 
     
    LengthPercentile </term> <description> 
     
    P75 </description> </item> 

    <item><term> 
     
    LengthValue </term> <description> 
     
    20 </description> </item> 

    <item><term> 
     
    Side </term> <description> 
     
    Right </description> </item> 

    <item><term> 
     
    Style </term> <description> 
     
    Gloves </description> </item> 

    </list> 

     <br>  Created in NX11.0.2.  <br>  
    */
    class NXOPENCPPEXPORT  HumanHandsDialogBuilder : public NXOpen::Builder
    {
        /** gender of hand figure, also used for scaling */
        public: enum GenderType
        {
            GenderTypeMale/** male */ ,
            GenderTypeFemale/** female */ 
        };

        /** left or right hand */
        public: enum HandType
        {
            HandTypeRight/** right */ ,
            HandTypeLeft/** left */ 
        };

        /** gloved or bare hand */
        public: enum StyleType
        {
            StyleTypeGloves/** gloves */ ,
            StyleTypeBareHands/** bare hands */ 
        };

        /** database used for scaling.  likely to be dynamically generated at runtime */
        public: enum DatabaseType
        {
            DatabaseTypeAnsur/** ansur */ ,
            DatabaseTypeAnsur2/** ansur2 */ ,
            DatabaseTypeNhanes/** nhanes */ ,
            DatabaseTypeNhanes2014/** nhanes2014 */ 
        };

        /** hand length for scaling */
        public: enum LengthType
        {
            LengthTypeP5/** p5 */ ,
            LengthTypeP25/** p25 */ ,
            LengthTypeP50/** p50 */ ,
            LengthTypeP75/** p75 */ ,
            LengthTypeP95/** p95 */ 
        };

        /** hand breadth for scaling */
        public: enum BreadthType
        {
            BreadthTypeP5/** p5 */ ,
            BreadthTypeP25/** p25 */ ,
            BreadthTypeP50/** p50 */ ,
            BreadthTypeP75/** p75 */ ,
            BreadthTypeP95/** p95 */ 
        };

        private: HumanHandsDialogBuilderImpl * m_humanhandsdialogbuilder_impl;
        private: friend class  _HumanHandsDialogBuilderBuilder;
        protected: HumanHandsDialogBuilder();
        public: ~HumanHandsDialogBuilder();
        /**Returns  the gender 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::GenderType Gender
        (
        );
        /**Sets  the gender 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetGender
        (
            NXOpen::HumanHandsDialogBuilder::GenderType gender /** gender */ 
        );
        /**Returns  the side 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::HandType Side
        (
        );
        /**Sets  the side 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetSide
        (
            NXOpen::HumanHandsDialogBuilder::HandType side /** side */ 
        );
        /**Returns  the style 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::StyleType Style
        (
        );
        /**Sets  the style 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetStyle
        (
            NXOpen::HumanHandsDialogBuilder::StyleType style /** style */ 
        );
        /**Returns  the glove thickness 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double GloveThickness
        (
        );
        /**Sets  the glove thickness 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetGloveThickness
        (
            double gloveThickness /** glovethickness */ 
        );
        /**Returns  the include forearm 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: bool IncludeForearm
        (
        );
        /**Sets  the include forearm 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetIncludeForearm
        (
            bool includeForearm /** includeforearm */ 
        );
        /**Returns  the database 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::DatabaseType Database
        (
        );
        /**Sets  the database 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetDatabase
        (
            NXOpen::HumanHandsDialogBuilder::DatabaseType database /** database */ 
        );
        /**Returns  the length percentile
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::LengthType LengthPercentile
        (
        );
        /**Sets  the length percentile
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetLengthPercentile
        (
            NXOpen::HumanHandsDialogBuilder::LengthType lengthPercentile /** lengthpercentile */ 
        );
        /**Returns  the length value 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double LengthValue
        (
        );
        /**Sets  the length value 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetLengthValue
        (
            double lengthValue /** lengthvalue */ 
        );
        /**Returns  the breadth percentile 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXOpen::HumanHandsDialogBuilder::BreadthType BreadthPercentile
        (
        );
        /**Sets  the breadth percentile 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetBreadthPercentile
        (
            NXOpen::HumanHandsDialogBuilder::BreadthType breadthPercentile /** breadthpercentile */ 
        );
        /**Returns  the breadth value 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double BreadthValue
        (
        );
        /**Sets  the breadth value 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetBreadthValue
        (
            double breadthValue /** breadthvalue */ 
        );
        /** TODO: fill in a description for this 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void UpdateHandPropsButton
        (
        );
        /**Returns  the shape name 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: NXString ShapeName
        (
        );
        /**Sets  the shape name 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetShapeName
        (
            const NXString & shapeName /** shapename */ 
        );
        /**Sets  the shape name 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        void SetShapeName
        (
            const char * shapeName /** shapename */ 
        );
        /**Returns  the aperture 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: double Aperture
        (
        );
        /**Sets  the aperture 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetAperture
        (
            double aperture /** aperture */ 
        );
        /** TODO: fill in a description for this 
         <br>  Created in NX11.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void JointDialogButton
        (
        );
        /** Sets the feature builder  
         <br>  Created in NX12.0.2.  <br>  
         <br> License requirements : ug_human ("Human Modelling") */
        public: void SetHumanFeatureBuilder
        (
            NXOpen::Features::HumanBuilder * humanfeaturebuilder /** humanfeaturebuilder */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
