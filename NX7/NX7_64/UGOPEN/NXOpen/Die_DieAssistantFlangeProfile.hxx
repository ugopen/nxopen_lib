#ifndef NXOpen_DIE_DIEASSISTANTFLANGEPROFILE_HXX_INCLUDED
#define NXOpen_DIE_DIEASSISTANTFLANGEPROFILE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieAssistantFlangeProfile.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Die_DieAssistantFlangeProfile.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class DieAssistantFlangeProfile;
    }
    class Direction;
    class NXObject;
    class ScCollector;
    namespace Die
    {
        /** Settings for the flange type. */
        enum DieAssistantFlangeProfileType
        {
            DieAssistantFlangeProfileTypeWipe/** Wipe flange steel. */,
            DieAssistantFlangeProfileTypeFormAndRestrike/** Form and restrike flange steel. */
        };

    }
    namespace Die
    {
        class _DieAssistantFlangeProfileBuilder;
        /**
            Represents a @link Die::DieAssistantFlangeProfile Die::DieAssistantFlangeProfile@endlink 
            */
        class NXOPENCPPEXPORT DieAssistantFlangeProfile : public NXObject
        {
            private: friend class  _DieAssistantFlangeProfileBuilder;
            protected: DieAssistantFlangeProfile();
            /**Returns  the flange profile  <br> License requirements : None */
            public: NXOpen::ScCollector * FlangeProfile
            (
            );
            /**Returns  the flange end profile  <br> License requirements : None */
            public: NXOpen::ScCollector * FlangeEndProfile
            (
            );
            /**Returns  the flange profile flange direction  <br> License requirements : None */
            public: NXOpen::Direction * FlangeDirection
            (
            );
            /**Sets  the flange profile flange direction  <br> License requirements : None */
            public: void SetFlangeDirection
            (
                NXOpen::Direction * flangeDirection /** flangedirection */ 
            );
            /**Returns  the flange profile reverse flange side indicator  <br> License requirements : None */
            public: bool FlangeSide
            (
            );
            /**Sets  the flange profile reverse flange side indicator  <br> License requirements : None */
            public: void SetFlangeSide
            (
                bool flangeSide /** flangeside */ 
            );
            /**Returns  the flange profile direction  <br> License requirements : None */
            public: NXOpen::Die::DirectionOption FlangeProfileDirection
            (
            );
            /**Sets  the flange profile direction  <br> License requirements : None */
            public: void SetFlangeProfileDirection
            (
                NXOpen::Die::DirectionOption flangeProfileDirection /** flangeprofiledirection */ 
            );
            /**Returns  the flange type  <br> License requirements : None */
            public: NXOpen::Die::DieAssistantFlangeProfileType FlangeType
            (
            );
            /**Sets  the flange type  <br> License requirements : None */
            public: void SetFlangeType
            (
                NXOpen::Die::DieAssistantFlangeProfileType flangeType /** flangetype */ 
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void DefineBases
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
