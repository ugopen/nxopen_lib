#ifndef NXOpen_PARTFAMILYMEMBERDATA_HXX_INCLUDED
#define NXOpen_PARTFAMILYMEMBERDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartFamilyMemberData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PartFamilyMemberValues.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class PartFamilyMemberData;
    class PartFamilyMemberValues;
    /** This class is responsible for storing part family member data 
        Use the method @link Part::NewPartFamilyMemberData Part::NewPartFamilyMemberData@endlink 
        to create new instance of this class. */
    class NXOPENCPPEXPORT PartFamilyMemberData : public TransientObject
    {
        public: explicit PartFamilyMemberData(void *ptr);
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  <br> License requirements : None */
        public: virtual ~PartFamilyMemberData();
        /** Set the part family member data  <br> License requirements : None */
        public: void SetMemberData
        (
            const std::vector<NXOpen::PartFamilyMemberValues *> & memberData /** array of attribute values corresponding to each member */
        );
    };
}
#undef EXPORTLIBRARY
#endif
