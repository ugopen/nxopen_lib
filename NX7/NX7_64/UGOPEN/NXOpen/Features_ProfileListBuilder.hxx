#ifndef NXOpen_FEATURES_PROFILELISTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_PROFILELISTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ProfileListBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ProfileListBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ProfileListBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _ProfileListBuilderBuilder;
        /**
            Represents a @link Features::ProfileList Features::ProfileList@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateProfileListBuilder Features::FeatureCollection::CreateProfileListBuilder@endlink  <br> */
        class NXOPENCPPEXPORT ProfileListBuilder : public Features::FeatureBuilder
        {
            private: friend class  _ProfileListBuilderBuilder;
            protected: ProfileListBuilder();
            /**Returns  the assembly part  <br> License requirements : None */
            public: NXString ListFile
            (
            );
            /**Sets  the assembly part  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetListFile
            (
                const NXString & listFile /** listfile */ 
            );
            /**Returns  the ventilation holes  <br> License requirements : None */
            public: bool VentilationHoles
            (
            );
            /**Sets  the ventilation holes  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetVentilationHoles
            (
                bool ventilationHoles /** ventilationholes */ 
            );
            /**Returns  the inverse bending  <br> License requirements : None */
            public: bool InverseBending
            (
            );
            /**Sets  the inverse bending  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetInverseBending
            (
                bool inverseBending /** inversebending */ 
            );
            /**Returns  the knuckled profile  <br> License requirements : None */
            public: bool KnuckledProfile
            (
            );
            /**Sets  the knuckled profile  <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetKnuckledProfile
            (
                bool knuckledProfile /** knuckledprofile */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
