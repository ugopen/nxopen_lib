#ifndef NXOpen_CAM_TABPOINTDATABUILDER_HXX_INCLUDED
#define NXOpen_CAM_TABPOINTDATABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TabPointDataBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TabPointDataBuilder;
    }
    class NXObject;
    class Point;
    namespace CAM
    {
        class _TabPointDataBuilderBuilder;
        /** Represents a Tab Point Builder  <br> To create a new instance of this class, use @link CAM::WedmCustomBoundaryDataBuilder::CreateTabPointDataBuilder CAM::WedmCustomBoundaryDataBuilder::CreateTabPointDataBuilder@endlink  <br> */
        class NXOPENCPPEXPORT TabPointDataBuilder : public NXObject
        {
            /** Tab Point Method Options */
            public: enum TabMethodType
            {
                TabMethodTypeStartAndEndPoint/** Start and End point */,
                TabMethodTypePointAndWidth/** Point and Width */
            };

            /** Tab Thread Point Options */
            public: enum TabThreadMethodType
            {
                TabThreadMethodTypeSameAsTabStartPoint/** Same as Tab start point */,
                TabThreadMethodTypeUserDefined/** User Defined */,
                TabThreadMethodTypeThreadAtLeadIn/** Thread at Lead-in */
            };

            private: friend class  _TabPointDataBuilderBuilder;
            protected: TabPointDataBuilder();
            /**Returns  the tab method option  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TabPointDataBuilder::TabMethodType TabMethod
            (
            );
            /**Sets  the tab method option  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTabMethod
            (
                NXOpen::CAM::TabPointDataBuilder::TabMethodType method /** the new tab method value */
            );
            /**Returns  the tab start point  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Point * StartPoint
            (
            );
            /**Sets  the tab start point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStartPoint
            (
                NXOpen::Point * startPoint /** the new start point value */
            );
            /**Returns  the tab end point  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Point * EndPoint
            (
            );
            /**Sets  the tab end point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEndPoint
            (
                NXOpen::Point * endPoint /** the new end point value */
            );
            /**Returns  the tab thread method option  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TabPointDataBuilder::TabThreadMethodType TabThreadMethod
            (
            );
            /**Sets  the tab thread method option  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTabThreadMethod
            (
                NXOpen::CAM::TabPointDataBuilder::TabThreadMethodType threadMethod /** the new thread method value */
            );
            /**Returns  the tab thread point  <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Point * TabThreadPoint
            (
            );
            /**Sets  the tab thread point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTabThreadPoint
            (
                NXOpen::Point * threadPoint /** the new point value */
            );
            /**Returns  the tab Width  <br> License requirements : cam_base ("CAM BASE") */
            public: double TabWidth
            (
            );
            /**Sets  the tab Width  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTabWidth
            (
                double tabWidth /** the tab width */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
