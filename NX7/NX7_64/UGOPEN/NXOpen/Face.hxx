#ifndef NXOpen_FACE_HXX_INCLUDED
#define NXOpen_FACE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Face.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/IOrientation.hxx>
#include <NXOpen/IParameterizedSurface.hxx>
#include <NXOpen/IProfile.hxx>
#include <NXOpen/IReferenceAxis.hxx>
#include <NXOpen/ISurface.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class Face;
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class Body;
    class DisplayableObject;
    class Edge;
    class INXObject;
    class IOrientation;
    class IParameterizedSurface;
    class IProfile;
    class IReferenceAxis;
    class ISurface;
    class _FaceBuilder;
    /** Represents a face */
    class NXOPENCPPEXPORT Face : public DisplayableObject, public virtual ISurface, public virtual IReferenceAxis, public virtual IProfile, public virtual IOrientation, public virtual IParameterizedSurface
    {
        /** Solid face type. */
        public: enum FaceType
        {
            FaceTypeRubber/** Rubber face, no surface attached */,
            FaceTypePlanar/** Planar face */,
            FaceTypeCylindrical/** Cylindrical face */,
            FaceTypeConical/** Conical face */,
            FaceTypeSpherical/** Spherical face */,
            FaceTypeSurfaceOfRevolution/** Face from surface of revolution */,
            FaceTypeParametric/** Parametric face */,
            FaceTypeBlending/** Blending face */,
            FaceTypeOffset/** Offset face */,
            FaceTypeSwept/** Swept face */,
            FaceTypeUndefined/** Undefined face type */
        };

        private: friend class  _FaceBuilder;
        protected: Face();
        /**Returns  the Parasolid type of the face  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Face::FaceType SolidFaceType
        (
        );
        /** Returns the edges in the face  @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: std::vector<NXOpen::Edge *> GetEdges
        (
        );
        /** Returns the body containing this face  @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: NXOpen::Body * GetBody
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
