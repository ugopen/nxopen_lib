#ifndef NXOpen_ROUTING_EXTRACTPORT_HXX_INCLUDED
#define NXOpen_ROUTING_EXTRACTPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ExtractPort.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Routing_Port.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Routing
    {
        class ExtractPort;
    }
    class Point;
    namespace Routing
    {
        class Port;
    }
    namespace Routing
    {
        class _ExtractPortBuilder;
        /** Routing ExtractPort object is an extract of Port class  <br> To create an instance of this class use @link Routing::PortCollection::CreateExtractPort Routing::PortCollection::CreateExtractPort@endlink  <br> */
        class NXOPENCPPEXPORT ExtractPort : public Routing::Port
        {
            private: friend class  _ExtractPortBuilder;
            protected: ExtractPort();
            /** Retrieves the stock offset point. Stock offset point exists only if
                        ExtractPort is a stock offset port If the source of an extracted port 
                        is loaded, but other objects from the source part are not loaded - 
                        routine loads all objects of required classes from the source part. @return  Stock offset Point if it exists  <br> License requirements : routing_combined ("Routing Combined") OR routing_electrical ("Routing Electrical") OR routing_mechanical ("Routing Mechanical") */
            public: NXOpen::Point * GetStockOffsetPoint
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
