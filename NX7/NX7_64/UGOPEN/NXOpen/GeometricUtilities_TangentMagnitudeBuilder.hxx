#ifndef NXOpen_GEOMETRICUTILITIES_TANGENTMAGNITUDEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_TANGENTMAGNITUDEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_TangentMagnitudeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_TangentMagnitudeBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class TangentMagnitudeBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _TangentMagnitudeBuilderBuilder;
        /**
                This class provides ability to specify the start and end
                tangent magnitude values.
            */
        class NXOPENCPPEXPORT TangentMagnitudeBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _TangentMagnitudeBuilderBuilder;
            protected: TangentMagnitudeBuilder();
            /**Returns  the start tangent magnitude  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Expression * StartTangentMagnitude
            (
            );
            /**Returns  the end tangent magnitude  <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::Expression * EndTangentMagnitude
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
