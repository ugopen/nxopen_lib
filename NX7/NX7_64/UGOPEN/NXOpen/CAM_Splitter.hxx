#ifndef NXOpen_CAM_SPLITTER_HXX_INCLUDED
#define NXOpen_CAM_SPLITTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_Splitter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Splitter.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class Splitter;
    }
    class NXObject;
    namespace CAM
    {
        class _SplitterBuilder;
        /** Represents a Splitter Builder  <br> This is an abstract class, and cannot be instantiated. <br> */
        class NXOPENCPPEXPORT Splitter : public TaggedObject
        {
            private: friend class  _SplitterBuilder;
            protected: Splitter();
            /** Get the wall faces  @return  the wall faces  <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetWallFaces
            (
            );
            /** Set the wall faces  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetWallFaces
            (
                const std::vector<NXOpen::NXObject *> & wallFaces /** the wall faces */
            );
            /** Remove the deselection wall faces  <br> License requirements : cam_base ("CAM BASE") */
            public: void RemoveDeselectionWallFaces
            (
                const std::vector<NXOpen::NXObject *> & faces /** the deselection wall faces */
            );
            /** Get the blend faces  @return  the blend faces  <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetBlendFaces
            (
            );
            /** Set the blend faces  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetBlendFaces
            (
                const std::vector<NXOpen::NXObject *> & blendFaces /** the blend faces */
            );
            /** Remove the deselection blend faces  <br> License requirements : cam_base ("CAM BASE") */
            public: void RemoveDeselectionBlendFaces
            (
                const std::vector<NXOpen::NXObject *> & faces /** the deselection blend faces */
            );
            /**Returns  the item count of the list  <br> License requirements : None */
            public: int CountOfFaces
            (
            );
            /**Sets  the item count of the list  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCountOfFaces
            (
                int count /** the count of the list */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
