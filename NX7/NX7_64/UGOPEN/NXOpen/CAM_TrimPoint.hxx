#ifndef NXOpen_CAM_TRIMPOINT_HXX_INCLUDED
#define NXOpen_CAM_TRIMPOINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TrimPoint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TrimPoint.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class TrimPoint;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    class NXObject;
    class Point;
    namespace CAM
    {
        class _TrimPointBuilder;
        /** Represents trim point */
        class NXOPENCPPEXPORT TrimPoint : public TaggedObject
        {
            /** The trim point options */
            public: enum Options
            {
                OptionsNone/** Point is inactive. */,
                OptionsPoint/** Point is active. */
            };

            /** The trim point angle options */
            public: enum AngleOptions
            {
                AngleOptionsAuto/** Angle is calculated automatically. */,
                AngleOptionsVector/** Angle is defined by a vector. */,
                AngleOptionsAngle/** Angle is defined by a value. */
            };

            private: friend class  _TrimPointBuilder;
            protected: TrimPoint();
            /**Returns  the trim point option  <br> License requirements : None */
            public: NXOpen::CAM::TrimPoint::Options Option
            (
            );
            /**Sets  the trim point option  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOption
            (
                NXOpen::CAM::TrimPoint::Options trimPointMode /** the trim point option */
            );
            /**Returns  the trim point  <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the trim point  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPoint
            (
                NXOpen::Point * point /** the trim point */
            );
            /**Returns  the trim point extend distance <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ExtendDistance
            (
            );
            /**Returns  the trim point angle option  <br> License requirements : None */
            public: NXOpen::CAM::TrimPoint::AngleOptions AngleOption
            (
            );
            /**Sets  the trim point angle option  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAngleOption
            (
                NXOpen::CAM::TrimPoint::AngleOptions angleMode /** the trim point angle option */
            );
            /**Returns  the trim point vector  <br> License requirements : None */
            public: NXOpen::NXObject * Vector
            (
            );
            /**Sets  the trim point vector  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVector
            (
                NXOpen::NXObject * vector /** the trim point vector */
            );
            /**Returns  the trim point angle  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * Angle
            (
            );
            /**Returns  the trim point angle offset  <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * AngleOffset
            (
            );
            /**Returns  the trim point check part geometry beyond trim <br> License requirements : None */
            public: bool CheckPartGeometryBeyondTrim
            (
            );
            /**Sets  the trim point check part geometry beyond trim <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCheckPartGeometryBeyondTrim
            (
                bool checkPartGeometry /** the trim point check part geometry beyond trim*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
