#ifndef NXOpen_ENDCUTBLOCKBUILDER_HXX_INCLUDED
#define NXOpen_ENDCUTBLOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     EndCutBlockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/EndCutBlockBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/SketchExpressionModifierBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class EndCutBlockBuilder;
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SketchExpressionModifierBuilder;
    class _EndCutBlockBuilderBuilder;
    /** Represents a End Cut Block Builder. */
    class NXOPENCPPEXPORT EndCutBlockBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
    {
        /** Taper Type */
        public: enum TaperTypeOption
        {
            TaperTypeOptionTrim/** trim */ ,
            TaperTypeOptionExtend/** extend */ ,
            TaperTypeOptionTrimAndExtend/** trim and extend */ 
        };

        private: friend class  _EndCutBlockBuilderBuilder;
        protected: EndCutBlockBuilder();
        /**Returns  the end cut block  <br> License requirements : None */
        public: NXOpen::SketchExpressionModifierBuilder * SketchBlock
        (
        );
        /**Returns  the taperType  <br> License requirements : None */
        public: NXOpen::EndCutBlockBuilder::TaperTypeOption TaperType
        (
        );
        /**Sets  the taperType  <br> License requirements : nx_ship_concept ("Ship Concept") */
        public: void SetTaperType
        (
            NXOpen::EndCutBlockBuilder::TaperTypeOption taperType /** tapertype */ 
        );
        /**Returns  the angle  <br> License requirements : None */
        public: NXOpen::Expression * Angle
        (
        );
        /**Returns  the offset  <br> License requirements : None */
        public: NXOpen::Expression * Offset
        (
        );
        /** Returns true if the inputs to the component are sufficient for 
                    commit to be called.  For example, if the component requires
                    you to set some property, this method will return false if
                    you haven't set it.  This method throws a not-yet-implemented
                    NXException for some components.
                 @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
        public: virtual bool Validate
        (
        );
    };
}
#undef EXPORTLIBRARY
#endif
