#ifndef NXOpen_MOTION_CURVECONTACTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_CURVECONTACTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_CurveContactBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Motion_CurveContactBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class CurveContactBuilder;
    }
    class Builder;
    namespace Motion
    {
        class CurveContactAdams;
    }
    namespace Motion
    {
        class CurveContactRecurdyn;
    }
    class SelectNXObjectList;
    namespace Motion
    {
        class _CurveContactBuilderBuilder;
        /** Represents a @link Motion::CurveContactBuilder Motion::CurveContactBuilder@endlink   <br> To create a new instance of this class, use @link Motion::CurveContactCollection::CreateCurveContactBuilder Motion::CurveContactCollection::CreateCurveContactBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AdamsParameters.DynamicCoefficient </td> <td> 
         
        0.05 </td> </tr> 

        <tr><td> 
         
        AdamsParameters.ForceExponent </td> <td> 
         
        1.2 </td> </tr> 

        <tr><td> 
         
        AdamsParameters.MaterialDamping </td> <td> 
         
        100.0 (millimeters part), 570.993 (inches part) </td> </tr> 

        <tr><td> 
         
        AdamsParameters.PenetrationDepth </td> <td> 
         
        0.001 (millimeters part), 0.00003937 (inches part) </td> </tr> 

        <tr><td> 
         
        AdamsParameters.SlipVelocity </td> <td> 
         
        0.1 (millimeters part), 0.003937 (inches part) </td> </tr> 

        <tr><td> 
         
        AdamsParameters.StaticCoefficient </td> <td> 
         
        0.08 </td> </tr> 

        <tr><td> 
         
        AdamsParameters.Stiffness </td> <td> 
         
        100000000.0 (millimeters part), 570993141.98628 (inches part) </td> </tr> 

        <tr><td> 
         
        AdamsParameters.TransitionVelocity </td> <td> 
         
        1.0 (millimeters part), 0.03937 (inches part) </td> </tr> 

        <tr><td> 
         
        DisplayScale </td> <td> 
         
        1.0 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.BufferRadiusFactor </td> <td> 
         
        1.2 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.CurveToleranceFactor </td> <td> 
         
        10.0 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.DynamicCoefficient </td> <td> 
         
        0.05 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.FirstCurveMaximumPenetration </td> <td> 
         
        10.0 (millimeters part), 0.3937 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.ForceExponent </td> <td> 
         
        1.2 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.MaterialDamping </td> <td> 
         
        100.0 (millimeters part), 570.993 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.MaximumStepSizeFactor </td> <td> 
         
        2.0 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.PenetrationDepth </td> <td> 
         
        0.001 (millimeters part), 0.00003937 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.SecondCurveMaximumPenetration </td> <td> 
         
        10.0 (millimeters part), 0.3937 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.SlipVelocity </td> <td> 
         
        0.1 (millimeters part), 0.003937 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.StaticCoefficient </td> <td> 
         
        0.08 </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.Stiffness </td> <td> 
         
        100000000.0 (millimeters part), 570993141.98628 (inches part) </td> </tr> 

        <tr><td> 
         
        RecurdynParameters.TransitionVelocity </td> <td> 
         
        1.0 (millimeters part), 0.03937 (inches part) </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT CurveContactBuilder : public Builder
        {
            /** the enum for the materia side direction of the selected geometry*/
            public: enum GeometryMaterialSide
            {
                GeometryMaterialSideDirection/** direction */ ,
                GeometryMaterialSideDirectionReverse/** direction reverse */ 
            };

            private: friend class  _CurveContactBuilderBuilder;
            protected: CurveContactBuilder();
            /**Returns  the selection of the first contact curve  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FirstContactCurve
            (
            );
            /**Returns  the selection of the second contact curve  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SecondContactCurve
            (
            );
            /**Returns  the contact name  <br> License requirements : None */
            public: NXString ContactName
            (
            );
            /**Sets  the contact name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetContactName
            (
                const NXString & name /** name */ 
            );
            /**Returns  the display scale  <br> License requirements : None */
            public: double DisplayScale
            (
            );
            /**Sets  the display scale  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDisplayScale
            (
                double displayScale /** display scale */ 
            );
            /**Returns  the first geometry materia side direction  <br> License requirements : None */
            public: NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide FirstGeometryMaterialDirection
            (
            );
            /**Sets  the first geometry materia side direction  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFirstGeometryMaterialDirection
            (
                NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide sideDirection /** side direction */ 
            );
            /**Returns  the second geometry materia side direction  <br> License requirements : None */
            public: NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide SecondGeometryMaterialDirection
            (
            );
            /**Sets  the second geometry materia side direction  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSecondGeometryMaterialDirection
            (
                NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide sideDirection /** side direction */ 
            );
            /**Returns  the 2D CurveContact's subobject (the adams parameters)  <br> License requirements : None */
            public: NXOpen::Motion::CurveContactAdams * AdamsParameters
            (
            );
            /**Returns  the 2D CurveContact's subobject (the recurdyn parameters)  <br> License requirements : None */
            public: NXOpen::Motion::CurveContactRecurdyn * RecurdynParameters
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
