#ifndef NXOpen_PARTCLOSESTATUS_HXX_INCLUDED
#define NXOpen_PARTCLOSESTATUS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PartCloseStatus.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    class PartCloseStatus;
    class BasePart;
    /** This class represents a list of part names with associated status codes that serve
        to communicate why these parts were not able to be closed.
    */
    class NXOPENCPPEXPORT PartCloseStatus : public TransientObject
    {
        public: explicit PartCloseStatus(void *ptr);
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  <br> License requirements : None */
        public: virtual ~PartCloseStatus();
        /**Returns  the number of parts that could not be closed  <br> License requirements : None */
        public: int NumberUnclosedParts
        (
        );
        /** Returns the name of a particular part that could not be closed  @return   <br> License requirements : None */
        public: NXOpen::BasePart * GetPart
        (
            int i /** Index into list of unclosed parts */
        );
        /** Returns the error code indicating the reason the part could not
                 be closed.
             @return  Reason that part could not be closed  <br> License requirements : None */
        public: int GetStatus
        (
            int i /** Index into list of unclosed parts */
        );
    };
}
#undef EXPORTLIBRARY
#endif
