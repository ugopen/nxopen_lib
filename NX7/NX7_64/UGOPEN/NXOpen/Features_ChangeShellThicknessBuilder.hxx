#ifndef NXOpen_FEATURES_CHANGESHELLTHICKNESSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_CHANGESHELLTHICKNESSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ChangeShellThicknessBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ChangeShellThicknessBuilder.hxx>
#include <NXOpen/Features_FaceRecognitionBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ChangeShellThicknessBuilder;
    }
    class Expression;
    namespace Features
    {
        class FaceRecognitionBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class NXObject;
    namespace Features
    {
        class _ChangeShellThicknessBuilderBuilder;
        /** Represents a @link Features::ChangeShellThickness Features::ChangeShellThickness@endlink  builder  <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateChangeShellThicknessBuilder Features::FeatureCollection::CreateChangeShellThicknessBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        FacesToChangeThickness.CoaxialEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.CoplanarAxesEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.CoplanarEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.EqualDiameterEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.OffsetEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.ParallelEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.PerpendicularEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.SymmetricEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.TangentEnabled </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FacesToChangeThickness.UseFaceBrowse </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        NeighborsEnabled </td> <td> 
         
        True </td> </tr> 

        <tr><td> 
         
        WallThickness.Value </td> <td> 
         
        5.0 (millimeters part), 0.5 (inches part) </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT ChangeShellThicknessBuilder : public Features::FeatureBuilder
        {
            private: friend class  _ChangeShellThicknessBuilderBuilder;
            protected: ChangeShellThicknessBuilder();
            /**Returns  the faces to be selected to change thickness  <br> License requirements : None */
            public: NXOpen::Features::FaceRecognitionBuilder * FacesToChangeThickness
            (
            );
            /**Returns  the flag to select neighbor faces that have the same wall thickness value as the face selected. 
                        If true, neighbor faces with same wall thickness value as the face selected will be included automatically. 
                     <br> License requirements : None */
            public: bool NeighborsEnabled
            (
            );
            /**Sets  the flag to select neighbor faces that have the same wall thickness value as the face selected. 
                        If true, neighbor faces with same wall thickness value as the face selected will be included automatically. 
                     <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetNeighborsEnabled
            (
                bool selectNeighbors /** selectneighbors */ 
            );
            /**Returns  the wall thickness  <br> License requirements : None */
            public: NXOpen::Expression * WallThickness
            (
            );
            /** Adds entities which have same wall thickness value as the selected face  <br> License requirements : None */
            public: void AddEntities
            (
                const std::vector<NXOpen::NXObject *> & entities /** Objects to add */
            );
            /** Removes entities  <br> License requirements : None */
            public: void RemoveEntities
            (
                const std::vector<NXOpen::NXObject *> & entities /** Objects to remove */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
