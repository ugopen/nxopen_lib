#ifndef NXOpen_ASSEMBLIES_COMPONENTGROUP_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_COMPONENTGROUP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_ComponentGroup.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/PartLoadStatus.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Assemblies
    {
        class ComponentGroup;
    }
    namespace Assemblies
    {
        class Component;
    }
    class NXObject;
    class PartLoadStatus;
    namespace Assemblies
    {
        class _ComponentGroupBuilder;
        /** 
           Represents a Component Group that is defined within an Assembly.
           */
        class NXOPENCPPEXPORT ComponentGroup : public NXObject
        {
            private: friend class  _ComponentGroupBuilder;
            protected: ComponentGroup();
            /** 
                   Loads a selected component group by name during Assembly part file open.

                    <br> 
                   This operation is used in conjunction with the @link LoadOptions LoadOptions@endlink 
                   enumerator @link LoadOptions::LoadComponents LoadOptions::LoadComponents@endlink  and using the
                   specify filter option.
                   This method is not intented to be used after an Assembly has been
                   loaded but during the loading operations.
                    <br> 

                    @return  Parts
                                             that could not be loaded and their associated errors.  <br> License requirements : adv_assemblies ("ADVANCED ASSEMBLIES") */
            public: NXOpen::PartLoadStatus * Open
            (
            );
            /**Returns  the number of Components within this Component Group  <br> License requirements : None */
            public: int NumberOfComponents
            (
            );
            /** Returns the Components within this Component Group  @return  the components  <br> License requirements : None */
            public: std::vector<NXOpen::Assemblies::Component *> GetComponents
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
