#ifndef NXOpen_DISPLAY_CGFXATTRIBUTEVALUECOLOR3BUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_CGFXATTRIBUTEVALUECOLOR3BUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_CgfxAttributeValueColor3Builder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Display_CgfxAttributeValueColor3Builder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Display
    {
        class CgfxAttributeValueColor3Builder;
    }
    class Builder;
    namespace Display
    {
        class _CgfxAttributeValueColor3BuilderBuilder;
        /** Represents a @link Display::CgfxAttributeValueColor3Builder Display::CgfxAttributeValueColor3Builder@endlink  builder  <br>  <br> */
        class NXOPENCPPEXPORT CgfxAttributeValueColor3Builder : public Builder
        {
            private: friend class  _CgfxAttributeValueColor3BuilderBuilder;
            protected: CgfxAttributeValueColor3Builder();
            /** Gets the CgFX material attribute's array of 3 double values used to represent a color (RGB)  @return  Array of 3 RGB values, each between 0.0 and 1.0  <br> License requirements : None */
            public: std::vector<double> GetColor3Value
            (
            );
            /** Sets the CgFX material attribute's array of 3 double values used to represent a color (RGB)  <br> License requirements : None */
            public: void SetColor3Value
            (
                const std::vector<double> & color3Value /** Array of 3 RGB values, each between 0.0 and 1.0 */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
