#ifndef NXOpen_CAE_SIMMOTIONLOADSLISTITEMBUILDER_HXX_INCLUDED
#define NXOpen_CAE_SIMMOTIONLOADSLISTITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimMotionLoadsListItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimMotionLoadsListItemBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class SimMotionLoadsListItemBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace CAE
    {
        class _SimMotionLoadsListItemBuilderBuilder;
        /**
            Represents a @link CAE::SimMotionLoadsListItemBuilder CAE::SimMotionLoadsListItemBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::SimSimulation::CreateMotionLoadsListItemBuilder CAE::SimSimulation::CreateMotionLoadsListItemBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SimMotionLoadsListItemBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _SimMotionLoadsListItemBuilderBuilder;
            protected: SimMotionLoadsListItemBuilder();
            /**Returns  the link name  <br> License requirements : None */
            public: NXString LinkName
            (
            );
            /**Sets  the link name  <br> License requirements : None */
            public: void SetLinkName
            (
                const NXString & linkName /** linkname */ 
            );
            /**Returns  the solution name  <br> License requirements : None */
            public: NXString SolutionName
            (
            );
            /**Sets  the solution name  <br> License requirements : None */
            public: void SetSolutionName
            (
                const NXString & solutionName /** solutionname */ 
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
