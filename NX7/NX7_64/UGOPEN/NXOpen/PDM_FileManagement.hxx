#ifndef NXOpen_PDM_FILEMANAGEMENT_HXX_INCLUDED
#define NXOpen_PDM_FILEMANAGEMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_FileManagement.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace PDM
    {
        class FileManagement;
    }
    namespace PDM
    {
    }
    namespace PDM
    {
        /** This class is responsible for Teamcenter file management related activities.  */
        class NXOPENCPPEXPORT FileManagement : public TransientObject
        {
            public: explicit FileManagement(void *ptr);
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.   <br> License requirements : None */
            public: virtual ~FileManagement();
            /** Imports all associated files for the specified dataset(s)
                    into the Teamcenter database.  The files will be attached to the
                    dataset(s) as named references.  The dataset(s) are identified by
                    their item id, item revision id, dataset name, dataset type,
                    and dataset relation type.  An import directory containing the files
                    must be specified for each dataset.  An array of PDI result codes is
                    returned indicating the success or failure of each import. @return  result codes  <br> License requirements : None */
            public: std::vector<int> ImportFiles
            (
                std::vector<NXString> & itemIds /** item ids   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & itemRevisionIds /** item revision ids   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetNames /** dataset names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetTypeNames /** dataset type names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetRelationTypeNames /** dataset relation type names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & importDirectoryNames /** import directories   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Exports all associated files for the specified dataset(s)
                    to a directory. The dataset(s) are identified by their item id,
                    item revision id, dataset name, dataset type, and dataset relation
                    type.  A base export directory name must be specified for each dataset
                    along with the tool name that is requesting the export.  The full path
                    to the exported files is returned in an output array.  Additionally, 
                    an array of PDI result codes is returned indicating the success or 
                    failure of each export. @return  result codes  <br> License requirements : None */
            public: std::vector<int> ExportFiles
            (
                std::vector<NXString> & itemIds /** item ids   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & itemRevisionIds /** item revision ids   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetNames /** dataset names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetTypeNames /** dataset type names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & datasetRelationTypeNames /** dataset relation type names   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & baseDirectoryNames /** base export directory name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & toolNames /** tool names ("UGII V10-ALL")   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & exportDirectoryNames /** resulting location of export directory */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
