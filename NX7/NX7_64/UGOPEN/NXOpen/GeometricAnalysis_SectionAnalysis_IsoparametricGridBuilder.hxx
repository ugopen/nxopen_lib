#ifndef NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ISOPARAMETRICGRIDBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_ISOPARAMETRICGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SectionAnalysis_IsoparametricGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_GridSpacingBuilder.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_IsoparametricGridBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_SurfaceRangeBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class IsoparametricGridBuilder;
        }
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class GridSpacingBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class SurfaceRangeBuilder;
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class _IsoparametricGridBuilderBuilder;
            /** Represents the isoparametric grid section specifications for a @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder@endlink .
                        Only used when type is @link SectionAnalysisBuilder::TypesIsoparametric SectionAnalysisBuilder::TypesIsoparametric@endlink .
                    
             @deprecated Deprecated in NX7.0 <br> 
            */
            class NXOPENCPPEXPORT IsoparametricGridBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** Represents the isoparametric methods */
                public: enum Methods
                {
                    MethodsUV/** Isoparametric U and V */,
                    MethodsU/** Isoparametric U */,
                    MethodsV/** Isoparametric V */
                };

                private: friend class  _IsoparametricGridBuilderBuilder;
                protected: IsoparametricGridBuilder();
                /**Returns  the method  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::IsoparametricGridBuilder::Methods Method
                (
                );
                /**Sets  the method  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: void SetMethod
                (
                    NXOpen::GeometricAnalysis::SectionAnalysis::IsoparametricGridBuilder::Methods method /** method */ 
                );
                /**Returns  the spacing specification for the isoparametric grid  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::GridSpacingBuilder * Spacing
                (
                );
                /**Returns  the surface range  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricUtilities::SurfaceRangeBuilder * SurfaceRange
                (
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
