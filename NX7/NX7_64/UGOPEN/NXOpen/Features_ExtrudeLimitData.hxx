#ifndef NXOpen_FEATURES_EXTRUDELIMITDATA_HXX_INCLUDED
#define NXOpen_FEATURES_EXTRUDELIMITDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ExtrudeLimitData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class ExtrudeLimitData;
    }
    class NXObject;
    namespace Features
    {
    }
    namespace Features
    {
        /** Represents limit data of an extrude feature */
        class NXOPENCPPEXPORT ExtrudeLimitData : public TransientObject
        {
            /** This enum represents the type of limit */
            public: enum LimitType
            {
                LimitTypeDistance/** distance */ ,
                LimitTypeUntilNext/** until next */ ,
                LimitTypeUntilSelected/** until selected */ ,
                LimitTypeUntilSelectedExtendFace/** until selected extend face */ ,
                LimitTypeThroughAll/** through all */ 
            };

            public: explicit ExtrudeLimitData(void *ptr);
            /** Free resources associated with the instance. After this method
                is called, it is illegal to use the object.  In .NET, this method
                is automatically called when the object is deleted by the garbage
                collector.  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual ~ExtrudeLimitData();
            /**Returns  the extrude symmetricity
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool IsSymmetric
            (
            );
            /**Returns  the extrude start limit type
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::ExtrudeLimitData::LimitType StartLimitType
            (
            );
            /**Returns  the extrude end limit type
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::ExtrudeLimitData::LimitType EndLimitType
            (
            );
            /** Gets start limit distance if @link  NXOpen::Features::ExtrudeLimitData::StartLimitType   NXOpen::Features::ExtrudeLimitData::StartLimitType @endlink  is @link NXOpen::Features::ExtrudeLimitData::LimitTypeDistance NXOpen::Features::ExtrudeLimitData::LimitTypeDistance@endlink .
                 @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString GetStartLimit
            (
            );
            /** Gets start limit data if @link  NXOpen::Features::ExtrudeLimitData::StartLimitType   NXOpen::Features::ExtrudeLimitData::StartLimitType @endlink  is any of following:
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilNext NXOpen::Features::ExtrudeLimitData::LimitTypeUntilNext@endlink ,
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelectedExtendFace NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelectedExtendFace@endlink ,
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelected NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelected@endlink  and
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeThroughAll NXOpen::Features::ExtrudeLimitData::LimitTypeThroughAll@endlink .
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void GetStartLimit
            (
                NXOpen::NXObject ** selectedObject /** selected object */ 
            );
            /** Gets end limit distance if @link  NXOpen::Features::ExtrudeLimitData::EndLimitType   NXOpen::Features::ExtrudeLimitData::EndLimitType @endlink  is @link NXOpen::Features::ExtrudeLimitData::LimitTypeDistance NXOpen::Features::ExtrudeLimitData::LimitTypeDistance@endlink .
                 @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString GetEndLimit
            (
            );
            /** Gets end limit data if @link  NXOpen::Features::ExtrudeLimitData::EndLimitType   NXOpen::Features::ExtrudeLimitData::EndLimitType @endlink  is any of following
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilNext NXOpen::Features::ExtrudeLimitData::LimitTypeUntilNext@endlink ,
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelectedExtendFace NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelectedExtendFace@endlink ,
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelected NXOpen::Features::ExtrudeLimitData::LimitTypeUntilSelected@endlink  and
                   @link NXOpen::Features::ExtrudeLimitData::LimitTypeThroughAll NXOpen::Features::ExtrudeLimitData::LimitTypeThroughAll@endlink .
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void GetEndLimit
            (
                NXOpen::NXObject ** selectedObject /** selected object */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
