#ifndef NXOpen_ANNOTATIONS_LEADERBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_LEADERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_LeaderBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_LeaderBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class LeaderBuilder;
    }
    namespace Annotations
    {
        class LeaderDataList;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _LeaderBuilderBuilder;
        /**
            Represents a @link Annotations::LeaderBuilder Annotations::LeaderBuilder@endlink .  This class is
            used to construct a leader for an annotation object.
             <br> This is a sub-builder class and cannot be directly instantiated <br> */
        class NXOPENCPPEXPORT LeaderBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _LeaderBuilderBuilder;
            protected: LeaderBuilder();
            /**Returns  the leaders to attach to the annotation  <br> License requirements : None */
            public: NXOpen::Annotations::LeaderDataList * Leaders
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
