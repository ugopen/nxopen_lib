#ifndef NXOpen_ANNOTATIONS_CENTERMARKBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CENTERMARKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CenterMarkBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CenterMarkBuilder.hxx>
#include <NXOpen/Annotations_CenterMarkSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterlineBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class CenterMarkBuilder;
    }
    namespace Annotations
    {
        class CenterMarkSettingsBuilder;
    }
    namespace Annotations
    {
        class CenterlineBuilder;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Annotations
    {
        class _CenterMarkBuilderBuilder;
        /** Builder for creating Center Mark. It creates or edits Center Marks  <br> To create a new instance of this class, use @link Annotations::CenterlineCollection::CreateCenterMarkBuilder Annotations::CenterlineCollection::CreateCenterMarkBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        MultipleCenterMarks </td> <td> 
         
        false </td> </tr> 

        <tr><td> 
         
        Settings.Angle </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Settings.Extension </td> <td> 
         
        6.35 (millimeters part), 0.25 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.Gap </td> <td> 
         
        1.5875 (millimeters part), 0.0625 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.IndividualDistance </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Settings.InheritAngle </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Settings.Size </td> <td> 
         
        3.175 (millimeters part), 0.125 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.Width </td> <td> 
         
        Thin </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT CenterMarkBuilder : public Annotations::CenterlineBuilder
        {
            private: friend class  _CenterMarkBuilderBuilder;
            protected: CenterMarkBuilder();
            /**Returns  the location object  <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Locations
            (
            );
            /**Returns  the inherit object <br> License requirements : None */
            public: NXOpen::SelectNXObject * Inherit
            (
            );
            /**Returns  the center mark settings builder  <br> License requirements : None */
            public: NXOpen::Annotations::CenterMarkSettingsBuilder * Settings
            (
            );
            /**Returns  the multiple center marks <br> License requirements : None */
            public: bool MultipleCenterMarks
            (
            );
            /**Sets  the multiple center marks <br> License requirements : drafting ("DRAFTING") */
            public: void SetMultipleCenterMarks
            (
                bool multipleCenterlines /** multiplecenterlines */ 
            );
            /** Removes location object for a given index from the Select Object List.
                        This method is required for the retained centermark case, however the method can be
                        used for removing any object from select object list for the CenterMark   <br> License requirements : drafting ("DRAFTING") */
            public: void RemoveLocation
            (
                int index /** Index of the object in the select object list*/
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
