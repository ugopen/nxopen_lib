#ifndef NXOpen_DIE_DIEASSISTANTTRIMPROFILE_HXX_INCLUDED
#define NXOpen_DIE_DIEASSISTANTTRIMPROFILE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieAssistantTrimProfile.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die.hxx>
#include <NXOpen/Die_DieAssistantTrimProfile.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Die
    {
        class DieAssistantTrimProfile;
    }
    class Direction;
    class NXObject;
    class ScCollector;
    namespace Die
    {
        class _DieAssistantTrimProfileBuilder;
        /**
            Represents a @link Die::DieAssistantTrimProfile Die::DieAssistantTrimProfile@endlink 
            */
        class NXOPENCPPEXPORT DieAssistantTrimProfile : public NXObject
        {
            private: friend class  _DieAssistantTrimProfileBuilder;
            protected: DieAssistantTrimProfile();
            /**Returns  the trim profile  <br> License requirements : None */
            public: NXOpen::ScCollector * TrimProfile
            (
            );
            /**Returns  the trim profile trim direction  <br> License requirements : None */
            public: NXOpen::Direction * TrimDirection
            (
            );
            /**Sets  the trim profile trim direction  <br> License requirements : None */
            public: void SetTrimDirection
            (
                NXOpen::Direction * trimDirection /** trimdirection */ 
            );
            /**Returns  the trim profile reverse trim side indicator  <br> License requirements : None */
            public: bool TrimSide
            (
            );
            /**Sets  the trim profile reverse trim side indicator  <br> License requirements : None */
            public: void SetTrimSide
            (
                bool trimSide /** trimside */ 
            );
            /**Returns  the trim profile direction  <br> License requirements : None */
            public: NXOpen::Die::DirectionOption TrimProfileDirection
            (
            );
            /**Sets  the trim profile direction  <br> License requirements : None */
            public: void SetTrimProfileDirection
            (
                NXOpen::Die::DirectionOption trimProfileDirection /** trimprofiledirection */ 
            );
            /** TODO: fill in a description for this  <br> License requirements : ug_die_design ("Die Design") */
            public: void DefineBases
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
