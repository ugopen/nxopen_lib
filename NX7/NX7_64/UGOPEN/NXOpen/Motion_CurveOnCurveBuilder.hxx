#ifndef NXOpen_MOTION_CURVEONCURVEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_CURVEONCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_CurveOnCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/Motion_CurveOnCurveBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class CurveOnCurveBuilder;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    class NXObject;
    namespace Motion
    {
        class _CurveOnCurveBuilderBuilder;
        /**
            Represents a @link Motion::CurveOnCurveBuilder Motion::CurveOnCurveBuilder@endlink 
             <br> To create a new instance of this class, use @link Motion::CurveOnCurveCollection::CreateCurveOnCurveBuilder Motion::CurveOnCurveCollection::CreateCurveOnCurveBuilder@endlink  <br> */
        class NXOPENCPPEXPORT CurveOnCurveBuilder : public Motion::MotionBuilder
        {
            private: friend class  _CurveOnCurveBuilderBuilder;
            protected: CurveOnCurveBuilder();
            /** Returns the first curves  @return  curve or edge <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetICurve
            (
            );
            /** Sets the first curves  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetICurve
            (
                const std::vector<NXOpen::NXObject *> & curves /** curve or edge*/
            );
            /** Returns the second curves  @return  curve or edge <br> License requirements : None */
            public: std::vector<NXOpen::NXObject *> GetJCurve
            (
            );
            /** Sets second curves  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetJCurve
            (
                const std::vector<NXOpen::NXObject *> & curves /** curve or edge*/
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
