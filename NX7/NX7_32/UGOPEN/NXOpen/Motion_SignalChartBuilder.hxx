#ifndef NXOpen_MOTION_SIGNALCHARTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SIGNALCHARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_SignalChartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/Motion_SignalChartBuilder.hxx>
#include <NXOpen/Motion_SignalChartListItem.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class SignalChartBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class MotionSensor;
    }
    namespace Motion
    {
        class SignalChartListItem;
    }
    namespace Motion
    {
        class SignalChartListItemList;
    }
    namespace Motion
    {
        class _SignalChartBuilderBuilder;
        /** Represents a @link Motion::SignalChartBuilder Motion::SignalChartBuilder@endlink   <br> To create a new instance of this class, use @link Motion::SignalChartCollection::CreateSignalChartBuilder Motion::SignalChartCollection::CreateSignalChartBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SignalChartBuilder : public Motion::MotionBuilder
        {
            /** SignalChart type  */
            public: enum Type
            {
                TypeOpenLoop/** Open loop */,
                TypeClosedLoop/** Closed loop */
            };

            private: friend class  _SignalChartBuilderBuilder;
            protected: SignalChartBuilder();
            /**Returns  the SignalChart type  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::Motion::SignalChartBuilder::Type SignalChartType
            (
            );
            /**Sets  the SignalChart type  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetSignalChartType
            (
                NXOpen::Motion::SignalChartBuilder::Type signalchartType /** signalchart type */ 
            );
            /**Returns  the open signal function  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::CAE::Function * OpenSignalFunction
            (
            );
            /**Sets  the open signal function  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetOpenSignalFunction
            (
                NXOpen::CAE::Function * openSignalFunction /** opensignalfunction */ 
            );
            /**Returns   the initial Signal  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: double InitialSignal
            (
            );
            /**Sets   the initial Signal  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetInitialSignal
            (
                double initialSignal /** initialsignal */ 
            );
            /**Returns  the closed siganl list  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::Motion::SignalChartListItemList * ClosedSignalList
            (
            );
            /** Creates a new list item  @return   <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXOpen::Motion::SignalChartListItem * NewListItem
            (
                NXOpen::Motion::MotionSensor * sensor /** sensor */,
                bool alwaysEvaluated /** always evaluted */,
                int timeSensor /** time sensor */,
                int condition /** condition */,
                double threshold /** threshold */,
                double delayTime /** delay time */,
                double signal /** signal */
            );
            /**Returns   the name  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: NXString Name
            (
            );
            /**Sets   the name  <br> License requirements : nx_motion_motor ("NX Motion Motor") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
