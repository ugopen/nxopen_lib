#ifndef NXOpen_ANNOTATIONS_BALLOONNOTEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BALLOONNOTEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BalloonNoteBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_BalloonNoteBuilder.hxx>
#include <NXOpen/Annotations_PmiAttributeBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class BalloonNoteBuilder;
    }
    namespace Annotations
    {
        class PmiAttributeBuilder;
    }
    namespace Annotations
    {
        class _BalloonNoteBuilderBuilder;
        /** Represents a @link Annotations::BalloonNote Annotations::BalloonNote@endlink  builder  <br> To create a new instance of this class, use @link Annotations::PmiAttributeCollection::CreateBalloonNoteBuilder Annotations::PmiAttributeCollection::CreateBalloonNoteBuilder@endlink  <br> */
        class NXOPENCPPEXPORT BalloonNoteBuilder : public Annotations::PmiAttributeBuilder
        {
            private: friend class  _BalloonNoteBuilderBuilder;
            protected: BalloonNoteBuilder();
            /**Returns  the title  <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the title  <br> License requirements : None */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Returns  the category  <br> License requirements : None */
            public: NXString Category
            (
            );
            /**Sets  the category  <br> License requirements : None */
            public: void SetCategory
            (
                const NXString & category /** category */ 
            );
            /**Returns  the identifier  <br> License requirements : None */
            public: NXString Identifier
            (
            );
            /**Sets  the identifier  <br> License requirements : None */
            public: void SetIdentifier
            (
                const NXString & identifier /** identifier */ 
            );
            /**Returns  the revision  <br> License requirements : None */
            public: NXString Revision
            (
            );
            /**Sets  the revision  <br> License requirements : None */
            public: void SetRevision
            (
                const NXString & revision /** revision */ 
            );
            /**Returns  the balloon text  <br> License requirements : None */
            public: NXString BalloonText
            (
            );
            /**Sets  the balloon text  <br> License requirements : None */
            public: void SetBalloonText
            (
                const NXString & balloonText /** balloontext */ 
            );
            /** Returns the text  @return   <br> License requirements : None */
            public: std::vector<NXString> GetText
            (
            );
            /** Sets the text  <br> License requirements : None */
            public: void SetText
            (
                const std::vector<NXString> & text /** text */ 
            );
            /**Sets  the scale  <br> License requirements : None */
            public: void SetScale
            (
                double scale /** scale */ 
            );
            /**Returns  the scale  <br> License requirements : None */
            public: double Scale
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
