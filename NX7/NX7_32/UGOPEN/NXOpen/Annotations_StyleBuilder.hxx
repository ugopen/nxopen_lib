#ifndef NXOpen_ANNOTATIONS_STYLEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_STYLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_StyleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DimensionStyleBuilder.hxx>
#include <NXOpen/Annotations_HatchStyleBuilder.hxx>
#include <NXOpen/Annotations_LetteringStyleBuilder.hxx>
#include <NXOpen/Annotations_LineArrowStyleBuilder.hxx>
#include <NXOpen/Annotations_OrdinateStyleBuilder.hxx>
#include <NXOpen/Annotations_RadialStyleBuilder.hxx>
#include <NXOpen/Annotations_StyleBuilder.hxx>
#include <NXOpen/Annotations_SymbolStyleBuilder.hxx>
#include <NXOpen/Annotations_UnitsStyleBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class StyleBuilder;
    }
    namespace Annotations
    {
        class DimensionStyleBuilder;
    }
    namespace Annotations
    {
        class HatchStyleBuilder;
    }
    namespace Annotations
    {
        class LetteringStyleBuilder;
    }
    namespace Annotations
    {
        class LineArrowStyleBuilder;
    }
    namespace Annotations
    {
        class OrdinateStyleBuilder;
    }
    namespace Annotations
    {
        class RadialStyleBuilder;
    }
    namespace Annotations
    {
        class SymbolStyleBuilder;
    }
    namespace Annotations
    {
        class UnitsStyleBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _StyleBuilderBuilder;
        /**
            Represents a @link Annotations::StyleBuilder Annotations::StyleBuilder@endlink .
            This class is used to set Annotation preferences when creating or editing an annotation.
            */
        class NXOPENCPPEXPORT StyleBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: friend class  _StyleBuilderBuilder;
            protected: StyleBuilder();
            /**Returns  the dimension style builder  <br> License requirements : None */
            public: NXOpen::Annotations::DimensionStyleBuilder * DimensionStyle
            (
            );
            /**Returns  the units style builder  <br> License requirements : None */
            public: NXOpen::Annotations::UnitsStyleBuilder * UnitsStyle
            (
            );
            /**Returns  the radial style builder  <br> License requirements : None */
            public: NXOpen::Annotations::RadialStyleBuilder * RadialStyle
            (
            );
            /**Returns  the ordinate style builder  <br> License requirements : None */
            public: NXOpen::Annotations::OrdinateStyleBuilder * OrdinateStyle
            (
            );
            /**Returns  the lettering style builder  <br> License requirements : None */
            public: NXOpen::Annotations::LetteringStyleBuilder * LetteringStyle
            (
            );
            /**Returns  the line/arrow style builder  <br> License requirements : None */
            public: NXOpen::Annotations::LineArrowStyleBuilder * LineArrowStyle
            (
            );
            /**Returns  the symbol style builder  <br> License requirements : None */
            public: NXOpen::Annotations::SymbolStyleBuilder * SymbolStyle
            (
            );
            /**Returns  the hatch style builder  <br> License requirements : None */
            public: NXOpen::Annotations::HatchStyleBuilder * HatchStyle
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
