#ifndef NXOpen_CAE_MESHMANAGER_HXX_INCLUDED
#define NXOpen_CAE_MESHMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_IMeshManager.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MeshManager;
    }
    namespace CAE
    {
        class DependentMesh;
    }
    namespace CAE
    {
        class DependentMeshBuilder;
    }
    namespace CAE
    {
        class IMeshManager;
    }
    namespace CAE
    {
        class MappedMesh;
    }
    namespace CAE
    {
        class MappedMeshBuilder;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class Mesh0d;
    }
    namespace CAE
    {
        class Mesh0dBuilder;
    }
    namespace CAE
    {
        class Mesh1d;
    }
    namespace CAE
    {
        class Mesh1dBuilder;
    }
    namespace CAE
    {
        class Mesh2d;
    }
    namespace CAE
    {
        class Mesh2dBuilder;
    }
    namespace CAE
    {
        class Mesh3d;
    }
    namespace CAE
    {
        class Mesh3dHexBuilder;
    }
    namespace CAE
    {
        class Mesh3dTetBuilder;
    }
    namespace CAE
    {
        class MeshCollector;
    }
    namespace CAE
    {
        class MeshCollectorBuilder;
    }
    namespace CAE
    {
        class ReassignElementsBuilder;
    }
    namespace CAE
    {
        class Shell2SolidBuilder;
    }
    namespace CAE
    {
        class SweptMesh;
    }
    namespace CAE
    {
        class _MeshManagerBuilder;
        /**  @brief  Creates Meshes@link CAE::Mesh CAE::Mesh@endlink  in a fem part  

          */
        class NXOPENCPPEXPORT MeshManager : public CAE::IMeshManager
        {
            private: friend class  _MeshManagerBuilder;
            protected: MeshManager();
            /** Creates a mapped mesh builder 
                      @return  Mapped Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MappedMeshBuilder * CreateMappedMeshBuilder
            (
                NXOpen::CAE::MappedMesh * mappedMesh /** Mapped Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a dependent mesh builder 
                      @return  Dependent Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DependentMeshBuilder * CreateDependentMeshBuilder
            (
                NXOpen::CAE::DependentMesh * dependentMesh /** Dependent Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a 0d mesh builder 
                      @return  0d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh0dBuilder * CreateMesh0dBuilder
            (
                NXOpen::CAE::Mesh0d * mesh /** 0d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a 1d mesh builder 
                      @return  1d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh1dBuilder * CreateMesh1dBuilder
            (
                NXOpen::CAE::Mesh1d * mesh /** 1d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a 2d mesh builder 
                      @return  2d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh2dBuilder * CreateMesh2dBuilder
            (
                NXOpen::CAE::Mesh2d * mesh /** 2d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a 3d Tet mesh builder 
                      @return  2d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh3dTetBuilder * CreateMesh3dTetBuilder
            (
                NXOpen::CAE::Mesh3d * mesh /** 3d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a 3d Hex mesh builder 
                      @return  2d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Mesh3dHexBuilder * CreateMesh3dHexBuilder
            (
                NXOpen::CAE::SweptMesh * mesh /** 3d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a shell to solid builder 
                      @return  2d Mesh Builder is created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::Shell2SolidBuilder * CreateShell2solidBuilder
            (
                NXOpen::CAE::Mesh3d * mesh /** 3d Mesh entity to be edited, if NULL then create a new one */
            );
            /** Creates a mesh collector builder for the mesh collector object
                     <br> This method is deprecated. Use @link CAE::MeshManager::CreateCollectorBuilder CAE::MeshManager::CreateCollectorBuilder@endlink  (with the neutral name) instead.
                     <br>   @return  MeshCollector Builder 
             @deprecated Deprecated in NX5.0.1 <br> 
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshCollectorBuilder * CreateCollectorBuilder
            (
                NXOpen::CAE::MeshCollector * meshCollector /** @link MeshCollector MeshCollector@endlink  to be edited,
                                                                                        if NULL  then create a new one */,
                int eccDescriptorIndex /** Index of the valid ECC Descriptor */
            );
            /** Creates a mesh collector builder for the mesh collector object
                      @return  MeshCollector Builder  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::MeshCollectorBuilder * CreateCollectorBuilder
            (
                NXOpen::CAE::MeshCollector * meshCollector /** @link MeshCollector MeshCollector@endlink  to be edited,
                                                                                        if NULL  then create a new one */,
                const NXString & pElementCollectorContainerName /** the valid Element Collector Container descriptor neutral name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a builder for element transfer to collector command @return   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ReassignElementsBuilder * CreateReassignElementsBuilder
            (
            );
            /** Renames a mesh collector object  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshCollectorName
            (
                NXOpen::CAE::MeshCollector * meshCollector /** @link MeshCollector MeshCollector@endlink  to be renamed */,
                const NXString & collectorName /** The new name being assigned or set   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Call for doing Drag n Drop of a given Mesh across Mesh Collectors  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void DragNDropMesh
            (
                NXOpen::CAE::Mesh * mesh /** @link Mesh Mesh@endlink  being Dragged and Dropped */,
                NXOpen::CAE::MeshCollector * sourceMeshCollector /** Source @link MeshCollector MeshCollector@endlink  */,
                NXOpen::CAE::MeshCollector * targetMeshCollector /** Target @link MeshCollector MeshCollector@endlink  */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
