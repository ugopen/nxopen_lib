#ifndef NXOpen_ASSEMBLIES_UPDATESTRUCTUREBUILDER_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_UPDATESTRUCTUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_UpdateStructureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Assemblies_UpdateStructureBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Assemblies
    {
        class UpdateStructureBuilder;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Assemblies
    {
        class _UpdateStructureBuilderBuilder;
        /**
               Represents a builder @link Assemblies::UpdateStructureBuilder Assemblies::UpdateStructureBuilder@endlink .
             <br> To create a new instance of this class, use @link Assemblies::AssemblyManager::CreateUpdateStructureBuilder Assemblies::AssemblyManager::CreateUpdateStructureBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        IsUpdateAllLevels </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        NumberOfLevels </td> <td> 
         
        1 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT UpdateStructureBuilder : public Builder
        {
            private: friend class  _UpdateStructureBuilderBuilder;
            protected: UpdateStructureBuilder();
            /**Returns  the component selection of the Assembly structure to Update. <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * StructureToUpdate
            (
            );
            /**Returns  the all level toggled on for updating the assembly structure. <br> License requirements : None */
            public: bool IsUpdateAllLevels
            (
            );
            /**Sets  the all level toggled on for updating the assembly structure. <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetUpdateAllLevels
            (
                bool isUpdateAllLevels /** isupdatealllevels */ 
            );
            /**Returns  the particular selected level for updating the structure. <br> License requirements : None */
            public: int NumberOfLevels
            (
            );
            /**Sets  the particular selected level for updating the structure. <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetNumberOfLevels
            (
                int numberOfLevels /** numberoflevels */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
