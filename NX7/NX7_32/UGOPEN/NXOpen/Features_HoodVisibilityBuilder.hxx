#ifndef NXOpen_FEATURES_HOODVISIBILITYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_HOODVISIBILITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_HoodVisibilityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_HoodVisibilityBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class HoodVisibilityBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class ScCollector;
    namespace Features
    {
        class _HoodVisibilityBuilderBuilder;
        /**
            Represents a @link Features::HoodVisibility Features::HoodVisibility@endlink  builder
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateHoodVisibilityBuilder Features::FeatureCollection::CreateHoodVisibilityBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AssoToggle </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PitchAngle </td> <td> 
         
        0 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT HoodVisibilityBuilder : public Features::FeatureBuilder
        {
            private: friend class  _HoodVisibilityBuilderBuilder;
            protected: HoodVisibilityBuilder();
            /**Returns  the eye point  <br> License requirements : None */
            public: NXOpen::Point * EyePoint
            (
            );
            /**Sets  the eye point  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetEyePoint
            (
                NXOpen::Point * eyePoint /** eyepoint */ 
            );
            /**Returns  the hood face  <br> License requirements : None */
            public: NXOpen::ScCollector * SelectFace
            (
            );
            /**Returns  the pitch angle which determines the quantity of section planes  <br> License requirements : None */
            public: double PitchAngle
            (
            );
            /**Sets  the pitch angle which determines the quantity of section planes  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetPitchAngle
            (
                double pitchAngle /** pitchangle */ 
            );
            /**Returns  the associative toggle; toggle on to create feature  <br> License requirements : None */
            public: bool AssoToggle
            (
            );
            /**Sets  the associative toggle; toggle on to create feature  <br> License requirements : nx_general_packaging ("NX General Packaging") */
            public: void SetAssoToggle
            (
                bool assoToggle /** assotoggle */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
