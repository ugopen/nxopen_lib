#ifndef NXOpen_PDMDEBUGSESSION_HXX_INCLUDED
#define NXOpen_PDMDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDMDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    class PDMDebugSession;
    class DebugSession;
    /** Represents a class that is used for NX PDM Autotest.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link DebugSession DebugSession@endlink  <br> */
    class NXOPENDEBUGSESSIONCPPEXPORT PDMDebugSession
    {
         /** Performance statistics */
        public:
        struct PerformanceStatistics
        {
            public: /** PDI calls */int NumberPdiCalls;
            public: /** SOA calls */int NumberSoaCalls;
            public: /** SQL calls */int NumberSqlCalls;
            public: /** FCC calls */int NumberFccCalls;
            public: PerformanceStatistics() :
                NumberPdiCalls(),
                NumberSoaCalls(),
                NumberSqlCalls(),
                NumberFccCalls()
            {
            }
            /** Constructor for the PerformanceStatistics struct. */ 
            public: PerformanceStatistics(int INIT_number_pdi_calls /** PDI calls */, 
                    int INIT_number_soa_calls /** SOA calls */, 
                    int INIT_number_sql_calls /** SQL calls */, 
                    int INIT_number_fcc_calls /** FCC calls */) :
                NumberPdiCalls(INIT_number_pdi_calls),
                NumberSoaCalls(INIT_number_soa_calls),
                NumberSqlCalls(INIT_number_sql_calls),
                NumberFccCalls(INIT_number_fcc_calls)
            {
            }
        };

        private: NXOpen::DebugSession* m_owner;
        public: explicit PDMDebugSession(NXOpen::DebugSession *owner): m_owner(owner)
        {
        }
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        /** Dump all table entries  <br> License requirements : None */
        public: void DumpAllTableEntries
        (
            const NXString & operation /** Current operation such as Load/Save, etc.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Dump the table entry for a part  <br> License requirements : None */
        public: void DumpTableEntry
        (
            const NXString & operation /** Current operation such as Load/Save, etc.   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & partFilename /** Part file name cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int levels /** How many levels to dump: 0-Self, -1-All levels */
        );
        /** Dump SOA ClientSide Data Model from Teamcenter <br> License requirements : None */
        public: void DumpCdm
        (
            const NXString & operation /** User defined operation label   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & partFilename /** Part file name in cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            int nestLevel /** Traverse assembly levels e.g. -1=all, 0=none, 1=first level */,
            bool browseRelations /** Browse GRM relations e.g.for Wave, PI, KF, etc */,
            bool dumpRawXml /** Dump raw xml to file instead of using JAM_test_print */,
            bool refreshCdm /** Refresh CDM objects from DB before printing */
        );
        /** Start collecting Teamcenter performance statistics  <br> License requirements : None */
        public: void StartPerformanceMonitor
        (
        );
        /** Stop collecting Teamcenter performance statistics  <br> License requirements : None */
        public: void EndPerformanceMonitor
        (
        );
        /** Report Teamcenter performance statistics  <br> License requirements : None */
        public: void ReportPerformanceStatistics
        (
        );
        /** Get Teamcenter performance statistics  @return  Return performance metrics  <br> License requirements : None */
        public: NXOpen::PDMDebugSession::PerformanceStatistics AskPerformanceStatistics
        (
        );
        /** Add PLMXML to Doc for a part. The PLMXML doc object will be initialized the first time it's called  <br> License requirements : None */
        public: void AddPlmxmlDoc
        (
            const NXString & partFilename /** Part file name cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Dump the PLMXML Doc accumulated so far to a file  <br> License requirements : None */
        public: void DumpPlmxmlDoc
        (
            const NXString & xmlFilename /** PLMXML file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Compare the PLMXML Doc accumulated so far to a baseline (master)  <br> License requirements : None */
        public: void ComparePlmxmlDoc
        (
            const NXString & xmlFilename /** PLMXML file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Close the PLMXML Doc accumulated so far  <br> License requirements : None */
        public: void ClosePlmxmlDoc
        (
        );
        /** Get the the version of PDM currently using  @return  the current PDM version we are using  <br> License requirements : None */
        public: NXString AskPdmVersion
        (
        );
        /** Manual check out a part   @return   <br> License requirements : None */
        public: int ManualCheckOutPart
        (
            const NXString & partFilename /** Part file name cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool multiSite /** multi site flag */
        );
        /** Manual check in a part   <br> License requirements : None */
        public: void ManualCheckInPart
        (
            const NXString & partFilename /** Part file name cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            bool multiSite /** multi site flag */
        );
        /** Dumps projects string assigned to item, item revision and datasets underneath   <br> License requirements : None */
        public: void DumpProjectsData
        (
            const NXString & partFilename /** Part file name cli format @DB/itemid/revid   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
