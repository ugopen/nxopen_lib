#ifndef NXOpen_FIELDS_SPATIALMAP_HXX_INCLUDED
#define NXOpen_FIELDS_SPATIALMAP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_SpatialMap.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Fields
    {
        class SpatialMap;
    }
    class NXObject;
    namespace Fields
    {
        class _SpatialMapBuilder;
        /**  @brief  Represents the Field Domain Map  

         
             <br> A Spatial Map provides a mapping from a field's independent domain into a new domain space.
            This Particular map type is designed to map into cartesian, cylindrical, spherical or parametric
            space, allowing the field to be used where these independent domains are required. <br> 
             <br> To obtain an instance of this class see @link Fields::FieldManager Fields::FieldManager@endlink . <br> */
        class NXOPENCPPEXPORT SpatialMap : public NXObject
        {
            /** Type of Spatial Map */
            public: enum TypeEnum
            {
                TypeEnumNone/** none */ ,
                TypeEnumGlobal/** global */ ,
                TypeEnumCartesian/** cartesian */ ,
                TypeEnumCylindrical/** cylindrical */ ,
                TypeEnumSpherical/** spherical */ ,
                TypeEnumParametricSpace/** parametric space */ ,
                TypeEnumParametricPlane/** parametric plane */ ,
                TypeEnumParametricLine/** parametric line */ 
            };

            /** Parameteric Plane Map */
            public: enum ParametricPlaneMapEnum
            {
                ParametricPlaneMapEnumIsoSections/** iso sections */ ,
                ParametricPlaneMapEnumIsoLines/** iso lines */ 
            };

            /** Bouding Box Map  */
            public: enum BoundingBoxMapEnum
            {
                BoundingBoxMapEnumOppositeCorner/** opposite corner */ ,
                BoundingBoxMapEnumObjects/** objects */ 
            };

            private: friend class  _SpatialMapBuilder;
            protected: SpatialMap();
        };
    }
}
#undef EXPORTLIBRARY
#endif
