#ifndef NXOpen_CAM_CENTERLINEDRILLVARIABLEINCREMENTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_CENTERLINEDRILLVARIABLEINCREMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_CenterlineDrillVariableIncrementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class CenterlineDrillVariableIncrementBuilder;
    }
    namespace CAM
    {
        class _CenterlineDrillVariableIncrementBuilderBuilder;
        /** Represents a Turn Avoidance Path Points Builder */
        class NXOPENCPPEXPORT CenterlineDrillVariableIncrementBuilder : public TaggedObject
        {
            private: friend class  _CenterlineDrillVariableIncrementBuilderBuilder;
            protected: CenterlineDrillVariableIncrementBuilder();
            /** Get the values of variable increment  <br> License requirements : cam_base ("CAM BASE") */
            public: void GetVariableIncrementListData
            (
                int index /** the index which will be get */,
                int* numberOfCuts /** the number of cuts */,
                double* increment /** the increment value */
            );
            /** Create a new variable increment at last of list, name maybe changed if not unique  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVariableIncrementListData
            (
                int numberOfCuts /** the number of cuts */,
                double increment /** the increment value */
            );
            /** Modify an existing variable increment value, name maybe changed if not unique  <br> License requirements : cam_base ("CAM BASE") */
            public: void ModifyVariableIncrementListData
            (
                int index /** the index of modified variable increment */,
                int numberOfCuts /** the number of cuts */,
                double increment /** the increment value */
            );
            /** Delete an existing variable increment  <br> License requirements : cam_base ("CAM BASE") */
            public: void DeleteVariableIncrementListData
            (
                int index /** the index of deleted variable increment list */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
