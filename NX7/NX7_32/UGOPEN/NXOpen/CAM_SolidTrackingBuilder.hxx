#ifndef NXOpen_CAM_SOLIDTRACKINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_SOLIDTRACKINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SolidTrackingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TrackpointBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class SolidTrackingBuilder;
    }
    namespace CAM
    {
        class TrackpointBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _SolidTrackingBuilderBuilder;
        /** Represents a SolidTracking Builder  <br> To create a new instance of this class, use @link CAM::Tool::CreateSolidTrackingBuilder CAM::Tool::CreateSolidTrackingBuilder@endlink  <br> */
        class NXOPENCPPEXPORT SolidTrackingBuilder : public CAM::TrackpointBuilder
        {
            private: friend class  _SolidTrackingBuilderBuilder;
            protected: SolidTrackingBuilder();
            /**Returns  the XOff value <br> License requirements : None */
            public: double TrackingXOff
            (
            );
            /**Sets  the XOff value <br> License requirements : None */
            public: void SetTrackingXOff
            (
                double xoffValue /** the xoff value */
            );
            /**Returns  the YOff value <br> License requirements : None */
            public: double TrackingYOff
            (
            );
            /**Sets  the YOff value <br> License requirements : None */
            public: void SetTrackingYOff
            (
                double yoffValue /** the yoff value */
            );
            /**Returns  the ZOff value <br> License requirements : None */
            public: double TrackingZOff
            (
            );
            /**Sets  the ZOff value <br> License requirements : None */
            public: void SetTrackingZOff
            (
                double zoffValue /** the zoff value */
            );
            /**Returns  the location   <br> License requirements : None */
            public: NXOpen::NXObject * Location
            (
            );
            /**Sets  the location   <br> License requirements : None */
            public: void SetLocation
            (
                NXOpen::NXObject * tpLocation /** the tracking point tag */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
