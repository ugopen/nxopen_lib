#ifndef NXOpen_UISTYLER_PROPERTYPAGE_HXX_INCLUDED
#define NXOpen_UISTYLER_PROPERTYPAGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UIStyler_PropertyPage.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/UIStyler_StylerItem.hxx>
#include <NXOpen/UIStyler_StylerItem.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>
namespace NXOpen
{
    namespace UIStyler
    {
        class PropertyPage;
    }
    namespace UIStyler
    {
        class StylerItem;
    }
    namespace UIStyler
    {
        /** Represents a PropertyPage for UI Styler */
        class NXOPENUICPPEXPORT PropertyPage : public UIStyler::StylerItem
        {
            public: explicit PropertyPage(void *ptr);
            /**Specifies descriptive text to display for the dialog item. It should describe the dialog item's intended use. 
                If you specify a bitmap for this dialog item, it uses this text as tooltip text.  <br> License requirements : None */
            public: void SetLabel
            (
                const NXString & strLabel /**new label  <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Sets  the sensitivity of property page.  <br> License requirements : None */
            public: void SetSensitivity
            (
                bool type /** type */ 
            );
            /**Returns  the sensitivity of property page.  <br> License requirements : None */
            public: bool Sensitivity
            (
            );
            /**Sets the visibility of the dialog item.  <br> License requirements : None */
            public: void SetVisibility
            (
                bool type /** type */ 
            );
            /**Returns the visibility of the dialog item.  <br> License requirements : None */
            public: bool Visibility
            (
            );
            /** Sets focus  <br> License requirements : None */
            public: void SetFocus
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
