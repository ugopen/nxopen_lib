#ifndef NXOpen_ANNOTATIONS_COORDINATENOTEBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_COORDINATENOTEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CoordinateNoteBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CoordinateNoteBuilder.hxx>
#include <NXOpen/Annotations_PmiAttributeBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class CoordinateNoteBuilder;
    }
    namespace Annotations
    {
        class PmiAttributeBuilder;
    }
    class CoordinateSystem;
    class Point;
    namespace Annotations
    {
        class _CoordinateNoteBuilderBuilder;
        /** Represents a @link Annotations::CoordinateNote Annotations::CoordinateNote@endlink  builder  <br> To create a new instance of this class, use @link Annotations::PmiAttributeCollection::CreateCoordinateNoteBuilder Annotations::PmiAttributeCollection::CreateCoordinateNoteBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ToggleI </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleJ </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleK </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleLabel </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleLevel </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleX </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleY </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ToggleZ </td> <td> 
         
        0 </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT CoordinateNoteBuilder : public Annotations::PmiAttributeBuilder
        {
            private: friend class  _CoordinateNoteBuilderBuilder;
            protected: CoordinateNoteBuilder();
            /**Returns  the tracking point  <br> License requirements : None */
            public: NXOpen::Point * TrackingPoint
            (
            );
            /**Sets  the tracking point  <br> License requirements : None */
            public: void SetTrackingPoint
            (
                NXOpen::Point * trackingPoint /** trackingpoint */ 
            );
            /**Returns  the tracking csys  <br> License requirements : None */
            public: NXOpen::CoordinateSystem * TrackingCsys
            (
            );
            /**Sets  the tracking csys  <br> License requirements : None */
            public: void SetTrackingCsys
            (
                NXOpen::CoordinateSystem * trackingCsys /** trackingcsys */ 
            );
            /**Returns  the str title  <br> License requirements : None */
            public: NXString Title
            (
            );
            /**Sets  the str title  <br> License requirements : None */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Returns  the category  <br> License requirements : None */
            public: NXString Category
            (
            );
            /**Sets  the category  <br> License requirements : None */
            public: void SetCategory
            (
                const NXString & category /** category */ 
            );
            /**Returns  the identifier  <br> License requirements : None */
            public: NXString Identifier
            (
            );
            /**Sets  the identifier  <br> License requirements : None */
            public: void SetIdentifier
            (
                const NXString & identifier /** identifier */ 
            );
            /**Returns  the revision  <br> License requirements : None */
            public: NXString Revision
            (
            );
            /**Sets  the revision  <br> License requirements : None */
            public: void SetRevision
            (
                const NXString & revision /** revision */ 
            );
            /**Returns  the toggle x  <br> License requirements : None */
            public: bool ToggleX
            (
            );
            /**Sets  the toggle x  <br> License requirements : None */
            public: void SetToggleX
            (
                bool toggleX /** togglex */ 
            );
            /**Returns  the string prefix x  <br> License requirements : None */
            public: NXString StringPrefixX
            (
            );
            /**Sets  the string prefix x  <br> License requirements : None */
            public: void SetStringPrefixX
            (
                const NXString & stringPrefixX /** stringprefixx */ 
            );
            /**Returns  the string suffix x  <br> License requirements : None */
            public: NXString StringSuffixX
            (
            );
            /**Sets  the string suffix x  <br> License requirements : None */
            public: void SetStringSuffixX
            (
                const NXString & stringSuffixX /** stringsuffixx */ 
            );
            /**Returns  the toggle y  <br> License requirements : None */
            public: bool ToggleY
            (
            );
            /**Sets  the toggle y  <br> License requirements : None */
            public: void SetToggleY
            (
                bool toggleY /** toggley */ 
            );
            /**Returns  the string prefix y  <br> License requirements : None */
            public: NXString StringPrefixY
            (
            );
            /**Sets  the string prefix y  <br> License requirements : None */
            public: void SetStringPrefixY
            (
                const NXString & stringPrefixY /** stringprefixy */ 
            );
            /**Returns  the string suffix y  <br> License requirements : None */
            public: NXString StringSuffixY
            (
            );
            /**Sets  the string suffix y  <br> License requirements : None */
            public: void SetStringSuffixY
            (
                const NXString & stringSuffixY /** stringsuffixy */ 
            );
            /**Returns  the toggle z  <br> License requirements : None */
            public: bool ToggleZ
            (
            );
            /**Sets  the toggle z  <br> License requirements : None */
            public: void SetToggleZ
            (
                bool toggleZ /** togglez */ 
            );
            /**Returns  the string prefix z  <br> License requirements : None */
            public: NXString StringPrefixZ
            (
            );
            /**Sets  the string prefix z  <br> License requirements : None */
            public: void SetStringPrefixZ
            (
                const NXString & stringPrefixZ /** stringprefixz */ 
            );
            /**Returns  the string suffix z  <br> License requirements : None */
            public: NXString StringSuffixZ
            (
            );
            /**Sets  the string suffix z  <br> License requirements : None */
            public: void SetStringSuffixZ
            (
                const NXString & stringSuffixZ /** stringsuffixz */ 
            );
            /**Returns  the toggle i  <br> License requirements : None */
            public: bool ToggleI
            (
            );
            /**Sets  the toggle i  <br> License requirements : None */
            public: void SetToggleI
            (
                bool toggleI /** togglei */ 
            );
            /**Returns  the string prefix i  <br> License requirements : None */
            public: NXString StringPrefixI
            (
            );
            /**Sets  the string prefix i  <br> License requirements : None */
            public: void SetStringPrefixI
            (
                const NXString & stringPrefixI /** stringprefixi */ 
            );
            /**Returns  the string suffix i  <br> License requirements : None */
            public: NXString StringSuffixI
            (
            );
            /**Sets  the string suffix i  <br> License requirements : None */
            public: void SetStringSuffixI
            (
                const NXString & stringSuffixI /** stringsuffixi */ 
            );
            /**Returns  the toggle j  <br> License requirements : None */
            public: bool ToggleJ
            (
            );
            /**Sets  the toggle j  <br> License requirements : None */
            public: void SetToggleJ
            (
                bool toggleJ /** togglej */ 
            );
            /**Returns  the string prefix j  <br> License requirements : None */
            public: NXString StringPrefixJ
            (
            );
            /**Sets  the string prefix j  <br> License requirements : None */
            public: void SetStringPrefixJ
            (
                const NXString & stringPrefixJ /** stringprefixj */ 
            );
            /**Returns  the string suffix j  <br> License requirements : None */
            public: NXString StringSuffixJ
            (
            );
            /**Sets  the string suffix j  <br> License requirements : None */
            public: void SetStringSuffixJ
            (
                const NXString & stringSuffixJ /** stringsuffixj */ 
            );
            /**Returns  the toggle k  <br> License requirements : None */
            public: bool ToggleK
            (
            );
            /**Sets  the toggle k  <br> License requirements : None */
            public: void SetToggleK
            (
                bool toggleK /** togglek */ 
            );
            /**Returns  the string prefix k  <br> License requirements : None */
            public: NXString StringPrefixK
            (
            );
            /**Sets  the string prefix k  <br> License requirements : None */
            public: void SetStringPrefixK
            (
                const NXString & stringPrefixK /** stringprefixk */ 
            );
            /**Returns  the string suffix k  <br> License requirements : None */
            public: NXString StringSuffixK
            (
            );
            /**Sets  the string suffix k  <br> License requirements : None */
            public: void SetStringSuffixK
            (
                const NXString & stringSuffixK /** stringsuffixk */ 
            );
            /**Returns  the toggle label  <br> License requirements : None */
            public: bool ToggleLabel
            (
            );
            /**Sets  the toggle label  <br> License requirements : None */
            public: void SetToggleLabel
            (
                bool toggleLabel /** togglelabel */ 
            );
            /**Returns  the string prefix label  <br> License requirements : None */
            public: NXString StringPrefixLabel
            (
            );
            /**Sets  the string prefix label  <br> License requirements : None */
            public: void SetStringPrefixLabel
            (
                const NXString & stringPrefixLabel /** stringprefixlabel */ 
            );
            /**Returns  the string suffix label  <br> License requirements : None */
            public: NXString StringSuffixLabel
            (
            );
            /**Sets  the string suffix label  <br> License requirements : None */
            public: void SetStringSuffixLabel
            (
                const NXString & stringSuffixLabel /** stringsuffixlabel */ 
            );
            /**Returns  the toggle level  <br> License requirements : None */
            public: bool ToggleLevel
            (
            );
            /**Sets  the toggle level  <br> License requirements : None */
            public: void SetToggleLevel
            (
                bool toggleLevel /** togglelevel */ 
            );
            /**Returns  the string prefix level  <br> License requirements : None */
            public: NXString StringPrefixLevel
            (
            );
            /**Sets  the string prefix level  <br> License requirements : None */
            public: void SetStringPrefixLevel
            (
                const NXString & stringPrefixLevel /** stringprefixlevel */ 
            );
            /**Returns  the string suffix level  <br> License requirements : None */
            public: NXString StringSuffixLevel
            (
            );
            /**Sets  the string suffix level  <br> License requirements : None */
            public: void SetStringSuffixLevel
            (
                const NXString & stringSuffixLevel /** stringsuffixlevel */ 
            );
            /**Returns  the decimal place for coordinate note display  <br> License requirements : None */
            public: int DecimalPlace
            (
            );
            /**Sets  the decimal place for coordinate note display  <br> License requirements : None */
            public: void SetDecimalPlace
            (
                int decimalPlace /** decimalplace */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
