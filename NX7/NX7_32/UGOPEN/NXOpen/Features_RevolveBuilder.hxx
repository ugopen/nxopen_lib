#ifndef NXOpen_FEATURES_REVOLVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_REVOLVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RevolveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        class RevolveBuilder;
    }
    class Axis;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    namespace GeometricUtilities
    {
        class FeatureOffset;
    }
    namespace GeometricUtilities
    {
        class FeatureOptions;
    }
    namespace GeometricUtilities
    {
        class Limits;
    }
    class Section;
    namespace Features
    {
        class _RevolveBuilderBuilder;
        /** Represents a revolve builder. 
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateRevolveBuilder Features::FeatureCollection::CreateRevolveBuilder@endlink  <br> */
        class NXOPENCPPEXPORT RevolveBuilder : public Features::FeatureBuilder
        {
            private: friend class  _RevolveBuilderBuilder;
            protected: RevolveBuilder();
            /**Sets  the section
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSection
            (
                NXOpen::Section * section /** This parameter may not be NULL.*/
            );
            /**Returns  the section
                 <br> License requirements : None */
            public: NXOpen::Section * Section
            (
            );
            /**Sets  the revolve axis
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAxis
            (
                NXOpen::Axis * axis /** This parameter may not be NULL.*/
            );
            /**Returns  the revolve axis
                 <br> License requirements : None */
            public: NXOpen::Axis * Axis
            (
            );
            /**Returns  the revolve offset
                 <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOffset * Offset
            (
            );
            /**Returns  the revolve boolean
                 <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanOperation
            (
            );
            /**Returns  the revolve tolerance
                 <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the revolve tolerance
                 <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the limit data
                 <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Limits * Limits
            (
            );
            /**Returns  the feature options
                 <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOptions * FeatureOptions
            (
            );
            /**Returns  the Offset enabled status 
                     <br> 
                    This is deprecated. Please use @link GeometricUtilities::FeatureOffset::OffsetType GeometricUtilities::FeatureOffset::OffsetType @endlink and @link GeometricUtilities::FeatureOffset::SetOffsetType GeometricUtilities::FeatureOffset::SetOffsetType @endlink  instead.	
                     <br> 	
                
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : None */
            public: bool OffsetEnabled
            (
            );
            /**Sets  the Offset enabled status 
                     <br> 
                    This is deprecated. Please use @link GeometricUtilities::FeatureOffset::OffsetType GeometricUtilities::FeatureOffset::OffsetType @endlink and @link GeometricUtilities::FeatureOffset::SetOffsetType GeometricUtilities::FeatureOffset::SetOffsetType @endlink  instead.	
                     <br> 	
                
             @deprecated Deprecated in NX5 <br> 
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOffsetEnabled
            (
                bool offsetEnabled /** If true then offset will be enabled on this revolve, else it will be disabled. */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
