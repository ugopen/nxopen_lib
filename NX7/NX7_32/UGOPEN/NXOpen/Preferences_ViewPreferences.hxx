#ifndef NXOpen_PREFERENCES_VIEWPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_VIEWPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_ViewPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Preferences
    {
        class ViewPreferences;
    }
    class Part;
    namespace Preferences
    {
        class BaseViewPreferences;
    }
    namespace Preferences
    {
        class DetailViewPreferences;
    }
    namespace Preferences
    {
        class FlatPatternViewPreferences;
    }
    namespace Preferences
    {
        class GeneralViewPreferences;
    }
    namespace Preferences
    {
        class HiddenLinesViewPreferences;
    }
    namespace Preferences
    {
        class InheritPmiPreferences;
    }
    namespace Preferences
    {
        class ProjectedViewPreferences;
    }
    namespace Preferences
    {
        class SectionViewPreferences;
    }
    namespace Preferences
    {
        class ShadingViewPreferences;
    }
    namespace Preferences
    {
        class SmoothEdgesViewPreferences;
    }
    namespace Preferences
    {
        class ThreadsViewPreferences;
    }
    namespace Preferences
    {
        class TraceLinesViewPreferences;
    }
    namespace Preferences
    {
        class VirtualIntersectionsViewPreferences;
    }
    namespace Preferences
    {
        class VisibleLinesViewPreferences;
    }
    namespace Preferences
    {
        /** Represents set of style applicable to drafting views.  <br> To obtain an instance of this class, refer to @link Part Part@endlink  <br> */
        class NXOPENCPPEXPORT ViewPreferences
        {
            private: NXOpen::Part* m_owner;
            public: explicit ViewPreferences(NXOpen::Part *owner): m_owner(owner)
                 ,general(NULL)
                 ,baseView(NULL)
                 ,projected(NULL)
                 ,inheritPmi(NULL)
                 ,detail(NULL)
                 ,section(NULL)
                 ,virtualIntersections(NULL)
                 ,smoothEdges(NULL)
                 ,visibleLines(NULL)
                 ,threads(NULL)
                 ,traceLines(NULL)
                 ,hiddenLines(NULL)
                 ,shading(NULL)
                 ,flatPattern(NULL)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 


            private: NXOpen::Preferences::GeneralViewPreferences *general;
            /** Returns object for doing View style settings applicable to General */
            public: NXOpen::Preferences::GeneralViewPreferences *General()
            {
                return general;
            }
            private: NXOpen::Preferences::BaseViewPreferences *baseView;
            /** Returns object for doing View style settings applicable to BaseView */
            public: NXOpen::Preferences::BaseViewPreferences *BaseView()
            {
                return baseView;
            }
            private: NXOpen::Preferences::ProjectedViewPreferences *projected;
            /** Returns object for doing View Preferences settings applicable to Projected */
            public: NXOpen::Preferences::ProjectedViewPreferences *Projected()
            {
                return projected;
            }
            private: NXOpen::Preferences::InheritPmiPreferences *inheritPmi;
            /** Returns object for doing View Preferences settings applicable to Inherit Pmi */
            public: NXOpen::Preferences::InheritPmiPreferences *InheritPmi()
            {
                return inheritPmi;
            }
            private: NXOpen::Preferences::DetailViewPreferences *detail;
            /** Returns object for doing View Preferences settings applicable to Detail */
            public: NXOpen::Preferences::DetailViewPreferences *Detail()
            {
                return detail;
            }
            private: NXOpen::Preferences::SectionViewPreferences *section;
            /** Returns object for doing View Preferences settings applicable to Section */
            public: NXOpen::Preferences::SectionViewPreferences *Section()
            {
                return section;
            }
            private: NXOpen::Preferences::VirtualIntersectionsViewPreferences *virtualIntersections;
            /** Returns object for doing View Preferences settings applicable to VirtualIntersections */
            public: NXOpen::Preferences::VirtualIntersectionsViewPreferences *VirtualIntersections()
            {
                return virtualIntersections;
            }
            private: NXOpen::Preferences::SmoothEdgesViewPreferences *smoothEdges;
            /** Returns object for doing View Preferences settings applicable to SmoothEdges */
            public: NXOpen::Preferences::SmoothEdgesViewPreferences *SmoothEdges()
            {
                return smoothEdges;
            }
            private: NXOpen::Preferences::VisibleLinesViewPreferences *visibleLines;
            /** Returns object for doing View Preferences settings applicable to VisibleLines */
            public: NXOpen::Preferences::VisibleLinesViewPreferences *VisibleLines()
            {
                return visibleLines;
            }
            private: NXOpen::Preferences::ThreadsViewPreferences *threads;
            /** Returns object for doing View Preferences settings applicable to Threads */
            public: NXOpen::Preferences::ThreadsViewPreferences *Threads()
            {
                return threads;
            }
            private: NXOpen::Preferences::TraceLinesViewPreferences *traceLines;
            /** Returns object for doing View Preferences settings applicable to TraceLines */
            public: NXOpen::Preferences::TraceLinesViewPreferences *TraceLines()
            {
                return traceLines;
            }
            private: NXOpen::Preferences::HiddenLinesViewPreferences *hiddenLines;
            /** Returns object for doing View Preferences settings applicable to HiddenLines */
            public: NXOpen::Preferences::HiddenLinesViewPreferences *HiddenLines()
            {
                return hiddenLines;
            }
            private: NXOpen::Preferences::ShadingViewPreferences *shading;
            /** Returns object for doing View Preferences settings applicable to Shading */
            public: NXOpen::Preferences::ShadingViewPreferences *Shading()
            {
                return shading;
            }
            private: NXOpen::Preferences::FlatPatternViewPreferences *flatPattern;
            /** Returns object for doing View Preferences settings applicable to Flat Patterns */
            public: NXOpen::Preferences::FlatPatternViewPreferences *FlatPattern()
            {
                return flatPattern;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
