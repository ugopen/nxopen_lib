#ifndef NXOpen_GEOMETRICUTILITIES_CURVEOPTIONS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CURVEOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_CurveOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CurveOptions.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricUtilities
    {
        class CurveOptions;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _CurveOptionsBuilder;
        /** Represents the curve options data
            */
        class NXOPENCPPEXPORT CurveOptions : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents the input curve options */
            public: enum InputCurve
            {
                InputCurveRetain/** Original Curve Retain */,
                InputCurveBlank/** Original Curve Blank */,
                InputCurveDelete/** Original Curve Delete */,
                InputCurveReplace/** Original Curve Replace */
            };

            private: friend class  _CurveOptionsBuilder;
            protected: CurveOptions();
            /**Sets  the associativity option 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAssociative
            (
                bool associative /** associativity */
            );
            /**Returns  the associativity option 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool Associative
            (
            );
            /**Sets  the curve options 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetInputCurveOption
            (
                NXOpen::GeometricUtilities::CurveOptions::InputCurve inputCurveOption /** curve options */
            );
            /**Returns  the curve options 
                    <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricUtilities::CurveOptions::InputCurve InputCurveOption
            (
            );
            /** Returns true if the inputs to the component are sufficient for 
                        commit to be called.  For example, if the component requires
                        you to set some property, this method will return false if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual bool Validate
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
