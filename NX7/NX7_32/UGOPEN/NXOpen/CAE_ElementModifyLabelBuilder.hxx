#ifndef NXOpen_CAE_ELEMENTMODIFYLABELBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTMODIFYLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementModifyLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_ElementModifyLabelBuilder.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ElementModifyLabelBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class _ElementModifyLabelBuilderBuilder;
        /**
            Represents a @link CAE::ElementModifyLabelBuilder CAE::ElementModifyLabelBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::NodeElementManager::CreateElementModifyLabelBuilder CAE::NodeElementManager::CreateElementModifyLabelBuilder@endlink  <br> */
        class NXOPENCPPEXPORT ElementModifyLabelBuilder : public Builder
        {
            /** the label types */
            public: enum LabelType
            {
                LabelTypeLabelIncrement/**label increment */,
                LabelTypeByOffset/**by offset */
            };

            private: friend class  _ElementModifyLabelBuilderBuilder;
            protected: ElementModifyLabelBuilder();
            /**Returns  the elements whose labels are to be modified <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * Elements
            (
            );
            /**Returns  the label option, label/increment or offset  <br> License requirements : None */
            public: NXOpen::CAE::ElementModifyLabelBuilder::LabelType LabelOption
            (
            );
            /**Sets  the label option, label/increment or offset  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabelOption
            (
                NXOpen::CAE::ElementModifyLabelBuilder::LabelType labelOption /** labeloption */ 
            );
            /**Returns  the label  <br> License requirements : None */
            public: int Label
            (
            );
            /**Sets  the label  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLabel
            (
                int label /** label */ 
            );
            /**Returns  the increment  <br> License requirements : None */
            public: int Increment
            (
            );
            /**Sets  the increment  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetIncrement
            (
                int increment /** increment */ 
            );
            /**Returns  the offset  <br> License requirements : None */
            public: int Offset
            (
            );
            /**Sets  the offset  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOffset
            (
                int offset /** offset */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
