#ifndef NXOpen_CAE_BASEFEMPART_HXX_INCLUDED
#define NXOpen_CAE_BASEFEMPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BaseFemPart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_CaePart.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class BaseFemPart;
    }
    namespace CAE
    {
        class BaseFEModel;
    }
    namespace CAE
    {
        class CaePart;
    }
    namespace CAE
    {
        class _BaseFemPartBuilder;
        /**  @brief  Represents an NX part of type .afm.  

           <br> Use the @link PartCollection PartCollection@endlink  class to load or create a part. <br> */
        class NXOPENCPPEXPORT BaseFemPart : public CAE::CaePart
        {
            private: friend class  _BaseFemPartBuilder;
            protected: BaseFemPart();
            /**Returns  the femodel @link  CAE::BaseFEModel   CAE::BaseFEModel @endlink  assoicated with the part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::BaseFEModel * BaseFEModel
            (
            );
            /** Gets solver and analysis type assoicated with the Cae part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetSolverAndAnalysisType
            (
                NXString* solverTypeName /** the name of the solver. Refer to NX help for more information */,
                NXString* analysisTypeName /** the name of the analysis type. Refer to NX help for more information */
            );
            /** Sets solver and analysis type assoicated with the Cae part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSolverAndAnalysisType
            (
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeName /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
