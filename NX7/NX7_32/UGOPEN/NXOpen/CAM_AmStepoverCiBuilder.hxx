#ifndef NXOpen_CAM_AMSTEPOVERCIBUILDER_HXX_INCLUDED
#define NXOpen_CAM_AMSTEPOVERCIBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_AmStepoverCiBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class AmStepoverCiBuilder;
    }
    namespace CAM
    {
        class _AmStepoverCiBuilderBuilder;
        /** Represents a boundary stepover ci Builder */
        class NXOPENCPPEXPORT AmStepoverCiBuilder : public TaggedObject
        {
            /** Available types for am stepover in mill operation */
            public: enum StepoverTypes
            {
                StepoverTypesConstant/** constant */,
                StepoverTypesScallopHeight/** scallop height */,
                StepoverTypesPercentToolDiameter/** percent tool diameter */,
                StepoverTypesVariable/** variable */,
                StepoverTypesAngular/** angular */,
                StepoverTypesUseDepthOfCut/** use depth of cut */
            };

            /** Available types for am stepover apply method in mill operation */
            public: enum ApplyMethodTypes
            {
                ApplyMethodTypesOnPlane/** on plane */,
                ApplyMethodTypesOnPart/** on part */
            };

            private: friend class  _AmStepoverCiBuilderBuilder;
            protected: AmStepoverCiBuilder();
            /** Get the Stepover Type  @return  the Stepover Type  <br> License requirements : None */
            public: NXOpen::CAM::AmStepoverCiBuilder::StepoverTypes GetStepoverType
            (
            );
            /** Set the Stepover Type  <br> License requirements : None */
            public: void SetStepoverType
            (
                NXOpen::CAM::AmStepoverCiBuilder::StepoverTypes stepoverType /** the Stepover Type */
            );
            /** Get the Stepover Distance  @return  the Stepover Distance  <br> License requirements : None */
            public: double GetStepoverDist
            (
            );
            /** Set the Stepover Distance  <br> License requirements : None */
            public: void SetStepoverDist
            (
                double stepoverDist /** the Stepover Distance */
            );
            /** Get the Stepover Scallop  @return  the Stepover Scallop  <br> License requirements : None */
            public: double GetStepoverScallop
            (
            );
            /** Set the Stepover Scallop  <br> License requirements : None */
            public: void SetStepoverScallop
            (
                double stepoverScallop /** the Stepover Scallop */
            );
            /** Get the Stepover Percent  @return  the Stepover Percent  <br> License requirements : None */
            public: double GetStepoverPercent
            (
            );
            /** Set the Stepover Percent  <br> License requirements : None */
            public: void SetStepoverPercent
            (
                double stepoverPercent /** the Stepover Percent */
            );
            /** Get the Stepover Degree  @return  the Stepover degree  <br> License requirements : None */
            public: double GetStepoverDegree
            (
            );
            /** Set the Stepover Degree  <br> License requirements : None */
            public: void SetStepoverDegree
            (
                double stepoverDegree /** the Stepover degree */
            );
            /**Returns  the am stepover apply method operation  <br> License requirements : None */
            public: NXOpen::CAM::AmStepoverCiBuilder::ApplyMethodTypes ApplyMethodType
            (
            );
            /**Sets  the am stepover apply method operation  <br> License requirements : None */
            public: void SetApplyMethodType
            (
                NXOpen::CAM::AmStepoverCiBuilder::ApplyMethodTypes amStepoverApplyMethod /** amstepoverapplymethod */ 
            );
            /**Returns  the Min Stepover  <br> License requirements : None */
            public: double MinStepover
            (
            );
            /**Sets  the Min Stepover  <br> License requirements : None */
            public: void SetMinStepover
            (
                double minStepover /** the Min Stepover */
            );
            /**Returns  the Max Stepover  <br> License requirements : None */
            public: double MaxStepover
            (
            );
            /**Sets  the Max Stepover  <br> License requirements : None */
            public: void SetMaxStepover
            (
                double maxStepover /** the Max Stepover */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
