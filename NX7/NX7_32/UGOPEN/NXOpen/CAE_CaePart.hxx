#ifndef NXOpen_CAE_CAEPART_HXX_INCLUDED
#define NXOpen_CAE_CAEPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaePart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/CAE_BeamSectionOptions.hxx>
#include <NXOpen/CAE_MaterialOptions.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class CaePart;
    }
    class BasePart;
    namespace CAE
    {
        class BeamSectionOptions;
    }
    namespace CAE
    {
        class CaeGroupCollection;
    }
    namespace CAE
    {
        class MaterialOptions;
    }
    namespace CAE
    {
        class MeshControlDisplayManager;
    }
    namespace CAE
    {
        class ModelCheckManager;
    }
    namespace CAE
    {
        class ModelingObjectPropertyTableCollection;
    }
    namespace CAE
    {
        class NodeElementInfoManager;
    }
    namespace CAE
    {
        class PhysicalPropertyTableCollection;
    }
    namespace CAE
    {
        class SelectElementsManager;
    }
    namespace CAE
    {
        class ShowHideManager;
    }
    namespace CAE
    {
        class SmartSelectionManager;
    }
    namespace CAE
    {
        class _CaePartBuilder;
        /**  @brief  This is an abstract class for NX parts of type .fem and .sim  

           <br> This is an abstract class <br> */
        class NXOPENCPPEXPORT CaePart : public BasePart
        {
            private: friend class  _CaePartBuilder;
            protected: CaePart();
            /** Creates a @link  CAE::MaterialOptions   CAE::MaterialOptions @endlink 
                     @return  the material options object created  <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::MaterialOptions * NewMaterialOptions
            (
            );
            /** Exports JT file 
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ExportJt
            (
                const NXString & fileName /** the JT file name to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a @link  CAE::BeamSectionOptions   CAE::BeamSectionOptions @endlink 
                     @return  the syncrhonize options object created  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamSectionOptions * NewBeamSectionOptions
            (
            );
            /** Gets the description assoicated with the Cae part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetDescription
            (
                std::vector<NXString> & description /** description */
            );
            /** Sets the description assoicated with the Cae part
                     <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDescription
            (
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );


            private: NXOpen::CAE::PhysicalPropertyTableCollection *physicalPropertyTables;
            /** Returns the physical property table collection belonging to this CAE Part */
            public: NXOpen::CAE::PhysicalPropertyTableCollection *PhysicalPropertyTables()
            {
                return physicalPropertyTables;
            }
            private: NXOpen::CAE::ModelingObjectPropertyTableCollection *modelingObjectPropertyTables;
            /** Returns the modeling object property table collection belonging to this CAE Part */
            public: NXOpen::CAE::ModelingObjectPropertyTableCollection *ModelingObjectPropertyTables()
            {
                return modelingObjectPropertyTables;
            }
            private: NXOpen::CAE::CaeGroupCollection *caeGroups;
            /** Returns the CAE Group collection belonging to this Part */
            public: NXOpen::CAE::CaeGroupCollection *CaeGroups()
            {
                return caeGroups;
            }
            private: NXOpen::CAE::SmartSelectionManager *smartSelectionMgr;
            /** Returns the smart selection manager belonging to this part */
            public: NXOpen::CAE::SmartSelectionManager *SmartSelectionMgr()
            {
                return smartSelectionMgr;
            }
            private: NXOpen::CAE::NodeElementInfoManager *nodeElementInfoMgr;
            /** Returns the node element info manager belonging to this IFem */
            public: NXOpen::CAE::NodeElementInfoManager *NodeElementInfoMgr()
            {
                return nodeElementInfoMgr;
            }
            private: NXOpen::CAE::SelectElementsManager *selectElementMgr;
            /** Returns the select element manager belonging to this IFem */
            public: NXOpen::CAE::SelectElementsManager *SelectElementMgr()
            {
                return selectElementMgr;
            }
            private: NXOpen::CAE::MeshControlDisplayManager *meshControlDisplayMgr;
            /** Returns the mesh control display manager belonging to this IFem */
            public: NXOpen::CAE::MeshControlDisplayManager *MeshControlDisplayMgr()
            {
                return meshControlDisplayMgr;
            }
            private: NXOpen::CAE::ModelCheckManager *modelCheckMgr;
            /** Returns the select element manager belonging to this IFem */
            public: NXOpen::CAE::ModelCheckManager *ModelCheckMgr()
            {
                return modelCheckMgr;
            }
            private: NXOpen::CAE::ShowHideManager *showHideMgr;
            /** Returns the show hide manager belonging to the part */
            public: NXOpen::CAE::ShowHideManager *ShowHideMgr()
            {
                return showHideMgr;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
