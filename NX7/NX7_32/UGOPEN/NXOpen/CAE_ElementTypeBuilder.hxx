#ifndef NXOpen_CAE_ELEMENTTYPEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ELEMENTTYPEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ElementTypeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DestinationCollectorBuilder.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class DestinationCollectorBuilder;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class _ElementTypeBuilderBuilder;
        /** Represents the specification of the FEA Element Type for a meshing dialog. */
        class NXOPENCPPEXPORT ElementTypeBuilder : public TaggedObject
        {
            /**  Dimension of the element types to be specified. */
            public: enum ElementType
            {
                ElementTypePoint/**  0D element        */,
                ElementTypeBeam/**  beam              */,
                ElementTypeShell/**  shell             */,
                ElementTypeFreeSolid/**  Free mesh solid   */,
                ElementTypeSweepSolid/**  Sweep mesh solid  */,
                ElementTypeSweepSolidWedge/**  Sweep mesh solid with wedges*/,
                ElementTypeSpider/**  Spider Connection */,
                ElementTypeConnection/**  Connection        */,
                ElementTypeAnySolid/**  Any solid         */,
                ElementTypeTriaShell/**  Tria shell        */,
                ElementTypeQuadShell/**  Quad shell        */
            };

            /**  Order of the element types to be specified. */
            public: enum ElementOrderType
            {
                ElementOrderTypeAny/**  any element    */,
                ElementOrderTypeLinear/**  linear element */,
                ElementOrderTypeParabolic/**  parabolic element */
            };

            private: friend class  _ElementTypeBuilderBuilder;
            protected: ElementTypeBuilder();
            /**Returns  the element type  <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder::ElementType ElementDimension
            (
            );
            /**Sets  the element type  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementDimension
            (
                NXOpen::CAE::ElementTypeBuilder::ElementType elementDimension /** elementdimension */ 
            );
            /**Returns  the element order  <br> License requirements : None */
            public: NXOpen::CAE::ElementTypeBuilder::ElementOrderType ElementOrder
            (
            );
            /**Sets  the element order  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementOrder
            (
                NXOpen::CAE::ElementTypeBuilder::ElementOrderType elementOrder /** elementorder */ 
            );
            /**Returns   the elem type name. This name is solver environment dependent. These are
                        the same names that show up in the meshing dialogues. Refer to the
                        release specific CAE user documentation to set a specific element name
                        desired for a specific solver environment in a given release, Refer
                        to the release specific user manual   <br> License requirements : None */
            public: NXString ElementTypeName
            (
            );
            /**Sets   the elem type name. This name is solver environment dependent. These are
                        the same names that show up in the meshing dialogues. Refer to the
                        release specific CAE user documentation to set a specific element name
                        desired for a specific solver environment in a given release, Refer
                        to the release specific user manual   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetElementTypeName
            (
                const NXString & elementType /** elementtype */ 
            );
            /**Returns  the property table associated with the element type.  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns  the destination element collector  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::DestinationCollectorBuilder * DestinationCollector
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
