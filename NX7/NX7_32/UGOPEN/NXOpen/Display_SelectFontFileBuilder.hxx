#ifndef NXOpen_DISPLAY_SELECTFONTFILEBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_SELECTFONTFILEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_SelectFontFileBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Display_SelectFontFileBuilder.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    namespace Display
    {
        class SelectFontFileBuilder;
    }
    class Builder;
    namespace Display
    {
        class _SelectFontFileBuilderBuilder;
        /**  This class is being used in conjunction with the "Select Font File
             dialog, which is (at least so far) only for internal debugging use.
             So no documentation of this class should be published to customers.
             RDB_FIX What needs to be done to stop this class from being published.

        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Fill </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        GlyphSize </td> <td> 
         
        0.125 </td> </tr> 

        <tr><td> 
         
        Justification </td> <td> 
         
        Normal </td> </tr> 

        <tr><td> 
         
        ReferenceLocation </td> <td> 
         
        BaselineStart </td> </tr> 

        </table>  
        */
        class NXOPENDEBUGSESSIONCPPEXPORT SelectFontFileBuilder : public Builder
        {
            /** Defines which position on the text string the location refers to */
            public: enum RefLocation
            {
                RefLocationBaselineStart/** baseline start */ ,
                RefLocationBaselineCenter/** baseline center */ ,
                RefLocationBaselineEnd/** baseline end */ ,
                RefLocationTopLeft/** top left */ ,
                RefLocationTopCenter/** top center */ ,
                RefLocationTopRight/** top right */ ,
                RefLocationCenterLeft/** center left */ ,
                RefLocationCenterCenter/** center center */ ,
                RefLocationCenterRight/** center right */ ,
                RefLocationBottomLeft/** bottom left */ ,
                RefLocationBottomCenter/** bottom center */ ,
                RefLocationBottomRight/** bottom right */ 
            };

            /** How is the text positioned relative its reference location */
            public: enum JustificationType
            {
                JustificationTypeNormal/** normal */ ,
                JustificationTypeCenter/** center */ ,
                JustificationTypeOpposite/** opposite */ 
            };

            private: friend class  _SelectFontFileBuilderBuilder;
            protected: SelectFontFileBuilder();
            /**Returns  the full path of the native font file   <br> License requirements : None */
            public: NXString NativeFilePath
            (
            );
            /**Sets  the full path of the native font file   <br> License requirements : None */
            public: void SetNativeFilePath
            (
                const NXString & filename /** filename */ 
            );
            /**Returns   the string to display in the graphics window  <br> License requirements : None */
            public: NXString String
            (
            );
            /**Sets   the string to display in the graphics window  <br> License requirements : None */
            public: void SetString
            (
                const NXString & string /** string */ 
            );
            /**Returns  the glyph size: the desired size of the text string, in part units  <br> License requirements : None */
            public: double GlyphSize
            (
            );
            /**Sets  the glyph size: the desired size of the text string, in part units  <br> License requirements : None */
            public: void SetGlyphSize
            (
                double double0 /** double0 */ 
            );
            /**Returns  the reference location: which position does the text position specify  <br> License requirements : None */
            public: NXOpen::Display::SelectFontFileBuilder::RefLocation ReferenceLocation
            (
            );
            /**Sets  the reference location: which position does the text position specify  <br> License requirements : None */
            public: void SetReferenceLocation
            (
                NXOpen::Display::SelectFontFileBuilder::RefLocation referenceLocation /** referencelocation */ 
            );
            /**Returns  the fill: Whether the text string is to have filled characters  <br> License requirements : None */
            public: bool Fill
            (
            );
            /**Sets  the fill: Whether the text string is to have filled characters  <br> License requirements : None */
            public: void SetFill
            (
                bool toggle0 /** toggle0 */ 
            );
            /**Returns  the justification:  How the text is placed relative to it position  <br> License requirements : None */
            public: NXOpen::Display::SelectFontFileBuilder::JustificationType Justification
            (
            );
            /**Sets  the justification:  How the text is placed relative to it position  <br> License requirements : None */
            public: void SetJustification
            (
                NXOpen::Display::SelectFontFileBuilder::JustificationType justification /** justification */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
