#ifndef NXOpen_CAE_FTK_FTKMANAGER_HXX_INCLUDED
#define NXOpen_CAE_FTK_FTKMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FTK_FTKManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace FTK
        {
            class FTKManager;
        }
    }
    class Session;
    namespace CAE
    {
        namespace FTK
        {
            class OptionSetting;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            /** FTK function data manager  <br> To obtain an instance of this class use @link Session::FTKManager Session::FTKManager@endlink . <br> */
            class NXOPENCPPEXPORT FTKManager
            {
                private: NXOpen::Session* m_owner;
                public: explicit FTKManager(NXOpen::Session *owner): m_owner(owner)
                     ,optionSetting(NULL)
                {
                }
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 


                private: NXOpen::CAE::FTK::OptionSetting *optionSetting;
                /** Returns the @link OptionSetting OptionSetting@endlink  belonging to this session */
                public: NXOpen::CAE::FTK::OptionSetting *OptionSetting()
                {
                    return optionSetting;
                }
                public: virtual void initialize();
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
