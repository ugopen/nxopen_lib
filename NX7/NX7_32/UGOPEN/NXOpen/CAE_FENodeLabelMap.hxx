#ifndef NXOpen_CAE_FENODELABELMAP_HXX_INCLUDED
#define NXOpen_CAE_FENODELABELMAP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FENodeLabelMap.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class FENodeLabelMap;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        /**  @brief  Represents a Nodel Label to an @link CAE::FENode CAE::FENode@endlink  map, it can be used to quickly convert
                          a @link CAE::FENode CAE::FENode@endlink  label, which is generally used in solver input files and results 
                          files, in the node object itself @link CAE::FENode CAE::FENode@endlink     
                 

           <br> This is an abstract class <br> */
        class NXOPENCPPEXPORT FENodeLabelMap : public TransientObject
        {
            public: explicit FENodeLabelMap(void *ptr);
            /** Returns @link CAE::FENode CAE::FENode@endlink  given a @link CAE::FENode CAE::FENode@endlink  label @return  @link CAE::FENode CAE::FENode@endlink    <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::FENode * GetNode
            (
                int nodelabel /** @link CAE::FENode CAE::FENode@endlink  Label */
            );
            /**Returns  the number of @link CAE::FENode CAE::FENode@endlink   <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumNodes
            (
            );
            /** Returns the next @link CAE::FENode CAE::FENode@endlink  label from the input put label.    @return  next @link CAE::FENode CAE::FENode@endlink  Label    <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int AskNextNodeLabel
            (
                int nodelabel /** @link CAE::FENode CAE::FENode@endlink  Label, for first node label input 0 */
            );
            /** Destroys the object  <br> License requirements : None */
            public: virtual ~FENodeLabelMap();
        };
    }
}
#undef EXPORTLIBRARY
#endif
