#ifndef NXOpen_GEOMETRICANALYSIS_CURVEANALYSISINFLECTIONSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_CURVEANALYSISINFLECTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_CurveAnalysisInflectionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/GeometricAnalysis_CurveAnalysisInflectionsBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class CurveAnalysisInflectionsBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class ScCollector;
    namespace GeometricAnalysis
    {
        class _CurveAnalysisInflectionsBuilderBuilder;
        /**
            This class handles the options setting for the curve analysis information (Inflections) display.
             <br> To create a new instance of this class, use @link GeometricAnalysis::AnalysisObjectCollection::CreateCurveAnalysisInflectionsBuilder GeometricAnalysis::AnalysisObjectCollection::CreateCurveAnalysisInflectionsBuilder@endlink  <br> */
        class NXOPENCPPEXPORT CurveAnalysisInflectionsBuilder : public Builder
        {
            /** Direction option types */
            public: enum DirectionOptionType
            {
                DirectionOptionTypeNone/** no direction   */,
                DirectionOptionTypePlaneOfCurve/** best fit plane */,
                DirectionOptionTypeSpecifyVector/** specify vector */,
                DirectionOptionTypeWorkView/** work view      */
            };

            private: friend class  _CurveAnalysisInflectionsBuilderBuilder;
            protected: CurveAnalysisInflectionsBuilder();
            /**Returns  the selected curves  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::ScCollector * SelectedCurves
            (
            );
            /**Returns  the direction option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::GeometricAnalysis::CurveAnalysisInflectionsBuilder::DirectionOptionType DirectionOption
            (
            );
            /**Sets  the direction option  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirectionOption
            (
                NXOpen::GeometricAnalysis::CurveAnalysisInflectionsBuilder::DirectionOptionType option /** option */ 
            );
            /**Returns  the vector  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetVector
            (
                NXOpen::Direction * vect /** vect */ 
            );
            /** Create points at the infections of the curve  @return   <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: std::vector<NXOpen::Point *> CreatePoints
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
