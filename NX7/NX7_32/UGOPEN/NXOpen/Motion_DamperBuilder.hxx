#ifndef NXOpen_MOTION_DAMPERBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_DAMPERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DamperBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion_ConnectorBuilder.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_DamperBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Motion
    {
        class DamperBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    namespace Motion
    {
        class ConnectorBuilder;
    }
    namespace Motion
    {
        class _DamperBuilderBuilder;
        /**
            Represents a DamperBuilder
             <br> To create a new instance of this class, use @link Motion::DamperCollection::CreateDamperBuilder Motion::DamperCollection::CreateDamperBuilder@endlink  <br> */
        class NXOPENCPPEXPORT DamperBuilder : public Motion::ConnectorBuilder
        {
            private: friend class  _DamperBuilderBuilder;
            protected: DamperBuilder();
            /**Returns  the coefficient type  <br> License requirements : None */
            public: NXOpen::Motion::ConnectorCoefficientTypes CoefficientType
            (
            );
            /**Sets  the coefficient type  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientType
            (
                NXOpen::Motion::ConnectorCoefficientTypes coefficientType /** coefficienttype */ 
            );
            /**Returns  the coefficient. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set  <br> License requirements : None */
            public: double Coefficient
            (
            );
            /**Sets  the coefficient. Only valid if @link Motion::ConnectorCoefficientTypesConstant Motion::ConnectorCoefficientTypesConstant@endlink  is set  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficient
            (
                double coefficient /** coefficient */ 
            );
            /**Returns  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set  <br> License requirements : None */
            public: NXOpen::CAE::Function * CoefficientFunction
            (
            );
            /**Sets  the function tag. Only valid if @link Motion::ConnectorCoefficientTypesSpline Motion::ConnectorCoefficientTypesSpline@endlink  is set  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoefficientFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the name  <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name  <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
