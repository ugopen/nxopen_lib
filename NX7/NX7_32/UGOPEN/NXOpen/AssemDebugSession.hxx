#ifndef NXOpen_ASSEMDEBUGSESSION_HXX_INCLUDED
#define NXOpen_ASSEMDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AssemDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>
namespace NXOpen
{
    class AssemDebugSession;
    class DebugSession;
    class Part;
    /** Represents a class that is used for NX ASSEM Autotest.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link DebugSession DebugSession@endlink  <br> */
    class NXOPENDEBUGSESSIONCPPEXPORT AssemDebugSession
    {
        private: NXOpen::DebugSession* m_owner;
        public: explicit AssemDebugSession(NXOpen::DebugSession *owner): m_owner(owner)
        {
        }
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        /** Compare the input plmxml file to a master plmxml filename   <br> License requirements : None */
        public: void ComparePlmxml
        (
            const NXString & masterXmlFilename /** Recorded PLMXML file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
            const NXString & newXmlFilename /** Playback PLMXML file name   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Create a new plmxml file for the input part with the given name  <br> License requirements : None */
        public: void NewPlmxml
        (
            NXOpen::Part * workPart /** Part Filename */,
            const NXString & newXml /** New PLMXML filename   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
        );
        /** Print information about all constraints in session  <br> License requirements : None */
        public: void PrintConstraintInformation
        (
        );
        /** Print the corresponding lightweight bodies for the solid bodies 
                that are displayed in the current work view  <br> License requirements : None */
        public: void PrintLightweightOfAllDisplayedBodiesInWorkView
        (
        );
        public: virtual void initialize();
    };
}
#undef EXPORTLIBRARY
#endif
