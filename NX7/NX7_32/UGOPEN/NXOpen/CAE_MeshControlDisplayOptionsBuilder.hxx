#ifndef NXOpen_CAE_MESHCONTROLDISPLAYOPTIONSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESHCONTROLDISPLAYOPTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MeshControlDisplayOptionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_MeshControlDisplayOptionsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MeshControlDisplayOptionsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _MeshControlDisplayOptionsBuilderBuilder;
        /**
            Represents a @link CAE::MeshControlDisplayOptionsBuilder CAE::MeshControlDisplayOptionsBuilder@endlink 
             <br> To create a new instance of this class, use @link CAE::MeshControlDisplayManager::CreateBuilder CAE::MeshControlDisplayManager::CreateBuilder@endlink  <br> */
        class NXOPENCPPEXPORT MeshControlDisplayOptionsBuilder : public Builder
        {
            private: friend class  _MeshControlDisplayOptionsBuilderBuilder;
            protected: MeshControlDisplayOptionsBuilder();
            /**Returns  the edge density size  <br> License requirements : None */
            public: int EdgeDensitySize
            (
            );
            /**Sets  the edge density size  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEdgeDensitySize
            (
                int edgeDensitySize /** edgedensitysize */ 
            );
            /**Returns  the dependent edge density size  <br> License requirements : None */
            public: int DependentEdgeDensitySize
            (
            );
            /**Sets  the dependent edge density size  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetDependentEdgeDensitySize
            (
                int dependentEdgeDensitySize /** dependentedgedensitysize */ 
            );
            /**Returns  the face density size  <br> License requirements : None */
            public: int FaceDensitySize
            (
            );
            /**Sets  the face density size  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFaceDensitySize
            (
                int faceDensitySize /** facedensitysize */ 
            );
            /**Returns  the mesh mate size  <br> License requirements : None */
            public: int MeshMateSize
            (
            );
            /**Sets  the mesh mate size  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshMateSize
            (
                int meshMateSize /** meshmatesize */ 
            );
            /**Returns  the show through display  <br> License requirements : None */
            public: bool ShowThroughDisplay
            (
            );
            /**Sets  the show through display  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetShowThroughDisplay
            (
                bool showThroughDisplay /** showthroughdisplay */ 
            );
            /**Returns  the shade symbols  <br> License requirements : None */
            public: bool ShadeSymbols
            (
            );
            /**Sets  the shade symbols  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetShadeSymbols
            (
                bool shadeSymbols /** shadesymbols */ 
            );
            /**Returns  the text display  <br> License requirements : None */
            public: bool TextDisplay
            (
            );
            /**Sets  the text display  <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextDisplay
            (
                bool textDisplay /** textdisplay */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
