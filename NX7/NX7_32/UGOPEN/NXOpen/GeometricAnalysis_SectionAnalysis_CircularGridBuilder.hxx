#ifndef NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_CIRCULARGRIDBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_SECTIONANALYSIS_CIRCULARGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_SectionAnalysis_CircularGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_CircularGridBuilder.hxx>
#include <NXOpen/GeometricAnalysis_SectionAnalysis_GridSpacingBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_CircularFrameBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class CircularGridBuilder;
        }
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class GridSpacingBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class CircularFrameBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricAnalysis
    {
        namespace SectionAnalysis
        {
            class _CircularGridBuilderBuilder;
            /** Represents the circular grid section specifications for a @link GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder GeometricAnalysis::SectionAnalysis::SectionAnalysisBuilder@endlink .
                        Only used when type is @link SectionAnalysisBuilder::TypesCircular SectionAnalysisBuilder::TypesCircular@endlink .
                    */
            class NXOPENCPPEXPORT CircularGridBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                private: friend class  _CircularGridBuilderBuilder;
                protected: CircularGridBuilder();
                /**Returns  the spacing specification for the circular grid  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricAnalysis::SectionAnalysis::GridSpacingBuilder * Spacing
                (
                );
                /**Returns  the circular frame  <br> License requirements : studio_analyze ("STUDIO ANALYZE") */
                public: NXOpen::GeometricUtilities::CircularFrameBuilder * CircularFrame
                (
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
