#ifndef NXOpen_ANNOTATIONS_CENTERLINE2DBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CENTERLINE2DBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_Centerline2dBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_Centerline2dBuilder.hxx>
#include <NXOpen/Annotations_Centerline2dSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterlineBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class Centerline2dBuilder;
    }
    namespace Annotations
    {
        class Centerline2dSettingsBuilder;
    }
    namespace Annotations
    {
        class CenterlineBuilder;
    }
    class SelectNXObject;
    namespace Annotations
    {
        class _Centerline2dBuilderBuilder;
        /** Builder for creating 2D Centerline. It creates or edits 2D Centerlines  <br> To create a new instance of this class, use @link Annotations::CenterlineCollection::CreateCenterline2dBuilder Annotations::CenterlineCollection::CreateCenterline2dBuilder@endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        OffsetDistance </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        OffsetMethod </td> <td> 
         
        None </td> </tr> 

        <tr><td> 
         
        Settings.Extension </td> <td> 
         
        6.35 (millimeters part), 0.25 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.Gap </td> <td> 
         
        1.5875 (millimeters part), 0.0625 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.IndividualDistance </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Settings.Size </td> <td> 
         
        3.175 (millimeters part), 0.125 (inches part) </td> </tr> 

        <tr><td> 
         
        Settings.Width </td> <td> 
         
        Thin </td> </tr> 

        <tr><td> 
         
        Type </td> <td> 
         
        FromCurves </td> </tr> 

        </table>  
        */
        class NXOPENCPPEXPORT Centerline2dBuilder : public Annotations::CenterlineBuilder
        {
            /** the valid types of 2D Centerline */
            public: enum Types
            {
                TypesFromCurves/** centerline from curves */,
                TypesByPoints/** centerline by points */
            };

            /** the valid types of 2D Centerline offset method*/
            public: enum Offset
            {
                OffsetNone/** no offset */,
                OffsetDistanceMethod/** offset distance method */,
                OffsetObjectMethod/** offset object method */
            };

            private: friend class  _Centerline2dBuilderBuilder;
            protected: Centerline2dBuilder();
            /**Returns  the side 1 of 2D Centerline for centerline from curves <br> License requirements : None */
            public: NXOpen::SelectNXObject * Side1
            (
            );
            /**Returns  the side 2 of 2D Centerline for centerline from curves <br> License requirements : None */
            public: NXOpen::SelectNXObject * Side2
            (
            );
            /**Returns  the point 1 of 2D Centerline for centerline by points <br> License requirements : None */
            public: NXOpen::SelectNXObject * Point1
            (
            );
            /**Returns  the point 2 of 2D Centerline for centerline by points <br> License requirements : None */
            public: NXOpen::SelectNXObject * Point2
            (
            );
            /**Returns  the offset method for centerline by points <br> License requirements : None */
            public: NXOpen::Annotations::Centerline2dBuilder::Offset OffsetMethod
            (
            );
            /**Sets  the offset method for centerline by points <br> License requirements : drafting ("DRAFTING") */
            public: void SetOffsetMethod
            (
                NXOpen::Annotations::Centerline2dBuilder::Offset offsetMethod /** offsetmethod */ 
            );
            /**Returns  the offset object for centerline by points  <br> License requirements : None */
            public: NXOpen::SelectNXObject * OffsetObject
            (
            );
            /**Returns  the offset distance for centerline by points <br> License requirements : None */
            public: double OffsetDistance
            (
            );
            /**Sets  the offset distance for centerline by points <br> License requirements : drafting ("DRAFTING") */
            public: void SetOffsetDistance
            (
                double offsetDistance /** offsetdistance */ 
            );
            /**Returns  the type  <br> License requirements : None */
            public: NXOpen::Annotations::Centerline2dBuilder::Types Type
            (
            );
            /**Sets  the type  <br> License requirements : drafting ("DRAFTING") */
            public: void SetType
            (
                NXOpen::Annotations::Centerline2dBuilder::Types type /** type */ 
            );
            /**Returns  the inherit object <br> License requirements : None */
            public: NXOpen::SelectNXObject * Inherit
            (
            );
            /**Returns  the settings builder  <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Annotations::Centerline2dSettingsBuilder * Settings
            (
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
