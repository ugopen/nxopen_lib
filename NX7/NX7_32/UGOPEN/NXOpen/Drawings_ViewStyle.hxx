#ifndef NXOpen_DRAWINGS_VIEWSTYLE_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWSTYLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewStyle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Drawings
    {
        class ViewStyle;
    }
    namespace Drawings
    {
        class DraftingView;
    }
    namespace Drawings
    {
        class BaseViewStyle;
    }
    namespace Drawings
    {
        class FlatPatternViewStyle;
    }
    namespace Drawings
    {
        class GeneralViewStyle;
    }
    namespace Drawings
    {
        class HiddenLinesViewStyle;
    }
    namespace Drawings
    {
        class InheritPmiViewStyle;
    }
    namespace Drawings
    {
        class OrientationViewStyle;
    }
    namespace Drawings
    {
        class PerspectiveViewStyle;
    }
    namespace Drawings
    {
        class ProjectedViewStyle;
    }
    namespace Drawings
    {
        class SectionViewStyle;
    }
    namespace Drawings
    {
        class ShadingViewStyle;
    }
    namespace Drawings
    {
        class SmoothEdgesViewStyle;
    }
    namespace Drawings
    {
        class ThreadsViewStyle;
    }
    namespace Drawings
    {
        class TraceLinesViewStyle;
    }
    namespace Drawings
    {
        class VirtualIntersectionsViewStyle;
    }
    namespace Drawings
    {
        class VisibleLinesViewStyle;
    }
    namespace Drawings
    {
        /** Represents set of style applicable to drafting views.  <br> To obtain an instance of this class, refer to @link Drawings::DraftingView Drawings::DraftingView@endlink  <br> */
        class NXOPENCPPEXPORT ViewStyle
        {
            private: NXOpen::Drawings::DraftingView* m_owner;
            public: explicit ViewStyle(NXOpen::Drawings::DraftingView *owner): m_owner(owner)
                 ,general(NULL)
                 ,baseView(NULL)
                 ,projected(NULL)
                 ,inheritPmi(NULL)
                 ,section(NULL)
                 ,virtualIntersections(NULL)
                 ,smoothEdges(NULL)
                 ,perspective(NULL)
                 ,orientation(NULL)
                 ,visibleLines(NULL)
                 ,threads(NULL)
                 ,traceLines(NULL)
                 ,hiddenLines(NULL)
                 ,shading(NULL)
                 ,flatPattern(NULL)
            {
            }
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 


            private: NXOpen::Drawings::GeneralViewStyle *general;
            /** Returns object for doing View style settings applicable to General */
            public: NXOpen::Drawings::GeneralViewStyle *General()
            {
                return general;
            }
            private: NXOpen::Drawings::BaseViewStyle *baseView;
            /** Returns object for doing View style settings applicable to Basedata */
            public: NXOpen::Drawings::BaseViewStyle *BaseView()
            {
                return baseView;
            }
            private: NXOpen::Drawings::ProjectedViewStyle *projected;
            /** Returns object for doing View style settings applicable to Projected */
            public: NXOpen::Drawings::ProjectedViewStyle *Projected()
            {
                return projected;
            }
            private: NXOpen::Drawings::InheritPmiViewStyle *inheritPmi;
            /** Returns object for doing View style settings applicable to InheritPmi */
            public: NXOpen::Drawings::InheritPmiViewStyle *InheritPmi()
            {
                return inheritPmi;
            }
            private: NXOpen::Drawings::SectionViewStyle *section;
            /** Returns object for doing View style settings applicable to Section */
            public: NXOpen::Drawings::SectionViewStyle *Section()
            {
                return section;
            }
            private: NXOpen::Drawings::VirtualIntersectionsViewStyle *virtualIntersections;
            /** Returns object for doing View style settings applicable to VirtualIntersections */
            public: NXOpen::Drawings::VirtualIntersectionsViewStyle *VirtualIntersections()
            {
                return virtualIntersections;
            }
            private: NXOpen::Drawings::SmoothEdgesViewStyle *smoothEdges;
            /** Returns object for doing View style settings applicable to SmoothEdges */
            public: NXOpen::Drawings::SmoothEdgesViewStyle *SmoothEdges()
            {
                return smoothEdges;
            }
            private: NXOpen::Drawings::PerspectiveViewStyle *perspective;
            /** Returns object for doing View style settings applicable to Perspective */
            public: NXOpen::Drawings::PerspectiveViewStyle *Perspective()
            {
                return perspective;
            }
            private: NXOpen::Drawings::OrientationViewStyle *orientation;
            /** Returns object for doing View style settings applicable to Orientation */
            public: NXOpen::Drawings::OrientationViewStyle *Orientation()
            {
                return orientation;
            }
            private: NXOpen::Drawings::VisibleLinesViewStyle *visibleLines;
            /** Returns object for doing View style settings applicable to VisibleLines */
            public: NXOpen::Drawings::VisibleLinesViewStyle *VisibleLines()
            {
                return visibleLines;
            }
            private: NXOpen::Drawings::ThreadsViewStyle *threads;
            /** Returns object for doing View style settings applicable to Threads */
            public: NXOpen::Drawings::ThreadsViewStyle *Threads()
            {
                return threads;
            }
            private: NXOpen::Drawings::TraceLinesViewStyle *traceLines;
            /** Returns object for doing View style settings applicable to TraceLines */
            public: NXOpen::Drawings::TraceLinesViewStyle *TraceLines()
            {
                return traceLines;
            }
            private: NXOpen::Drawings::HiddenLinesViewStyle *hiddenLines;
            /** Returns object for doing View style settings applicable to HiddenLines */
            public: NXOpen::Drawings::HiddenLinesViewStyle *HiddenLines()
            {
                return hiddenLines;
            }
            private: NXOpen::Drawings::ShadingViewStyle *shading;
            /** Returns object for doing View style settings applicable to Shading */
            public: NXOpen::Drawings::ShadingViewStyle *Shading()
            {
                return shading;
            }
            private: NXOpen::Drawings::FlatPatternViewStyle *flatPattern;
            /** Returns object for doing View style settings applicable to Flat Pattern Views. */
            public: NXOpen::Drawings::FlatPatternViewStyle *FlatPattern()
            {
                return flatPattern;
            }
            public: virtual void initialize();
        };
    }
}
#undef EXPORTLIBRARY
#endif
