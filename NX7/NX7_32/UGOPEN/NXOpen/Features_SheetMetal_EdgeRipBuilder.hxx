#ifndef NXOpen_FEATURES_SHEETMETAL_EDGERIPBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_EDGERIPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_EdgeRipBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class EdgeRipBuilder;
        }
    }
    class Edge;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SketchFeature;
    }
    class Section;
    namespace Features
    {
        namespace SheetMetal
        {
            class _EdgeRipBuilderBuilder;
            /** Represents a Edge Rip feature builder.  <br> To create a new instance of this class, use @link Features::SheetMetal::SheetmetalManager::CreateEdgeRipFeatureBuilder Features::SheetMetal::SheetmetalManager::CreateEdgeRipFeatureBuilder@endlink  <br> */
            class NXOPENCPPEXPORT EdgeRipBuilder : public Features::FeatureBuilder
            {
                private: friend class  _EdgeRipBuilderBuilder;
                protected: EdgeRipBuilder();
                /**Returns  the section used by Edge Rip  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Section * Section
                (
                );
                /**Sets  the section used by Edge Rip  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSection
                (
                    NXOpen::Section * section /** section */ 
                );
                /**Returns  the Slave Sketch used by the Edge Rip, If one exists. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: NXOpen::Features::SketchFeature * Sketch
                (
                );
                /**Sets  the Slave Sketch used by the Edge Rip, If one exists. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetSketch
                (
                    NXOpen::Features::SketchFeature * sketch /** sketch */ 
                );
                /** Edge list of Edge Rip 
                 @deprecated Deprecated in NX5 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetEdges
                (
                    const std::vector<NXOpen::Edge *> & edges /** Edge list */
                );
                /** Edge list of Edge Rip  @return  
                 @deprecated Deprecated in NX5 <br> 
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: std::vector<NXOpen::Edge *> GetEdges
                (
                );
                /** Edges to rip  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: void SetRipEdges
                (
                    const std::vector<NXOpen::Edge *> & ripEdges /** Rip Edges */
                );
                /** Edges to rip  @return  Rip Edges  <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: std::vector<NXOpen::Edge *> GetRipEdges
                (
                );
                /** Verify whether the builder data is valid for creating a Edge Rip or not.
                             <br> 
                                 If the Builder data is valid, returned value shall be 0

                             <br> 
                         @return  Data Validity Flag. <br> License requirements : nx_sheet_metal ("NX Sheet Metal") */
                public: int ValidateBuilderData
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
