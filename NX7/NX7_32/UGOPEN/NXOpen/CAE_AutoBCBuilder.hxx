#ifndef NXOpen_CAE_AUTOBCBUILDER_HXX_INCLUDED
#define NXOpen_CAE_AUTOBCBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AutoBCBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/CAE_AutoBCBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class AutoBCBuilder;
    }
    class Builder;
    namespace CAE
    {
        class AutoPairs;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    namespace CAE
    {
        class SimAutoBcRecipe;
    }
    namespace CAE
    {
        class _AutoBCBuilderBuilder;
        /**
            Builds one or more @link CAE::SimSimulationObject CAE::SimSimulationObject@endlink  object(s).
            These simulation objects use two target face sets like the Surf to Surf Contact
             <br> To create a new instance of this class, use @link CAE::SimSimulation::CreateAutoBcBuilder CAE::SimSimulation::CreateAutoBcBuilder@endlink  <br> */
        class NXOPENCPPEXPORT AutoBCBuilder : public Builder
        {
            private: friend class  _AutoBCBuilderBuilder;
            protected: AutoBCBuilder();
            /**Returns  the AutoBC's @link CAE::PropertyTable CAE::PropertyTable@endlink   <br> License requirements : None */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /**Returns  the AutoBC's @link CAE::SimAutoBcRecipe CAE::SimAutoBcRecipe@endlink   <br> License requirements : None */
            public: NXOpen::CAE::SimAutoBcRecipe * Recipe
            (
            );
            /**Returns  the AutoBC's @link CAE::AutoPairs CAE::AutoPairs@endlink   <br> License requirements : None */
            public: NXOpen::CAE::AutoPairs * Autopairs
            (
            );
            /**Sets  the AutoBC's @link CAE::AutoPairs CAE::AutoPairs@endlink   <br> License requirements : None */
            public: void SetAutopairs
            (
                NXOpen::CAE::AutoPairs * recipe /** auto pairs object */
            );
            /**Returns  the retain recipe flag, which signifies whether or not the 
                        recipe will be retained after the generation of the BCs    <br> License requirements : None */
            public: bool RetainRecipeFlag
            (
            );
            /**Sets  the retain recipe flag, which signifies whether or not the 
                        recipe will be retained after the generation of the BCs    <br> License requirements : None */
            public: void SetRetainRecipeFlag
            (
                bool retainRecipe /** flag for retaining recipe or not */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
