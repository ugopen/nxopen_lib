#ifndef NXOpen_CAM_SPRINGPASSES_HXX_INCLUDED
#define NXOpen_CAM_SPRINGPASSES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SpringPasses.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_SpringPasses.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAM
    {
        class SpringPasses;
    }
    namespace CAM
    {
        class _SpringPassesBuilder;
        /** Represents a spring passes */
        class NXOPENCPPEXPORT SpringPasses : public TaggedObject
        {
            /** the alternate spring passes options */
            public: enum Types
            {
                TypesNone/** Alternate Spring Passes: None */,
                TypesMaintain/** Alternate Spring Passes: Maintain */,
                TypesAlternate/** Alternate Spring Passes: Alternate */
            };

            private: friend class  _SpringPassesBuilder;
            protected: SpringPasses();
            /**Returns  the number of spring passes  <br> License requirements : None */
            public: int Number
            (
            );
            /**Sets  the number of spring passes  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumber
            (
                int springPasses /** the number of spring passes */
            );
            /**Returns  the type of spring passes  <br> License requirements : None */
            public: NXOpen::CAM::SpringPasses::Types Type
            (
            );
            /**Sets  the type of spring passes  <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::SpringPasses::Types alternateSpringPassesMode /** the type of spring passes */
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
