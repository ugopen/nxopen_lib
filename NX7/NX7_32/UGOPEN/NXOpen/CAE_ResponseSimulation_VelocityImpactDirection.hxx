#ifndef NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTDIRECTION_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTDIRECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_VelocityImpactDirection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_VelocityImpactDirection.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class VelocityImpactDirection;
        }
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _VelocityImpactDirectionBuilder;
            /**
                Represents a @link CAE::ResponseSimulation::VelocityImpactDirection CAE::ResponseSimulation::VelocityImpactDirection@endlink 
                */
            class NXOPENCPPEXPORT VelocityImpactDirection : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** the direction options for impact */
                public: enum DirectionType
                {
                    DirectionTypeNodalComponent/** nodal component */ ,
                    DirectionTypeUserDefined/** user defined */ 
                };

                /** the types of nodal component */
                public: enum NodalComponentType
                {
                    NodalComponentTypeDof1/** dof1 */ ,
                    NodalComponentTypeDof2/** dof2 */ ,
                    NodalComponentTypeDof3/** dof3 */ 
                };

                private: friend class  _VelocityImpactDirectionBuilder;
                protected: VelocityImpactDirection();
                /**Returns  the direction option  <br> License requirements : None */
                public: NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::DirectionType DirectionOption
                (
                );
                /**Sets  the direction option  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDirectionOption
                (
                    NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::DirectionType mDirectionOption /** mdirectionoption */ 
                );
                /**Returns  the user-defined direction <br> License requirements : None */
                public: NXOpen::Direction * UserDefinedDirection
                (
                );
                /**Sets  the user-defined direction <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetUserDefinedDirection
                (
                    NXOpen::Direction * userDefinedDirection /** userdefineddirection */ 
                );
                /**Returns  the selected nodal component  <br> License requirements : None */
                public: NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::NodalComponentType NodalComponent
                (
                );
                /**Sets  the selected nodal component  <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetNodalComponent
                (
                    NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::NodalComponentType nodalComponent /** nodalcomponent */ 
                );
                /**Returns  the option to reverse direction of nodal component or not. Only valid when direction option is
                        @link CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent@endlink   <br> License requirements : None */
                public: bool ReverseDirection
                (
                );
                /**Sets  the option to reverse direction of nodal component or not. Only valid when direction option is
                        @link CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent@endlink   <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetReverseDirection
                (
                    bool reverseDirection /** reversedirection */ 
                );
                /** Returns true if the inputs to the component are sufficient for 
                            commit to be called.  For example, if the component requires
                            you to set some property, this method will return false if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful  <br> License requirements : solid_modeling ("SOLIDS MODELING") */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}
#undef EXPORTLIBRARY
#endif
