#ifndef NXOpen_ANNOTATIONS_CENTERLINE3DSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CENTERLINE3DSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_Centerline3dSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_Centerline3dSettingsBuilder.hxx>
#include <NXOpen/Annotations_CenterlineSettingsBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace Annotations
    {
        class Centerline3dSettingsBuilder;
    }
    namespace Annotations
    {
        class CenterlineSettingsBuilder;
    }
    namespace Annotations
    {
        class _Centerline3dSettingsBuilderBuilder;
        /** Represents a Builder for Centerline3dSettings.*/
        class NXOPENCPPEXPORT Centerline3dSettingsBuilder : public Annotations::CenterlineSettingsBuilder
        {
            private: friend class  _Centerline3dSettingsBuilderBuilder;
            protected: Centerline3dSettingsBuilder();
            /**Returns  the overrun size parameter for 3D Centerline  <br> License requirements : None */
            public: double Size
            (
            );
            /**Sets  the overrun size parameter for 3D Centerline  <br> License requirements : drafting ("DRAFTING") */
            public: void SetSize
            (
                double size /** size */ 
            );
            /**Returns  the extension parameter for 3D Centerline <br> License requirements : None */
            public: double Extension
            (
            );
            /**Sets  the extension parameter for 3D Centerline <br> License requirements : drafting ("DRAFTING") */
            public: void SetExtension
            (
                double extension /** extension */ 
            );
            /**Returns  the individual extension distance On/Off parameter for 3D Centerline <br> License requirements : None */
            public: bool IndividualDistance
            (
            );
            /**Sets  the individual extension distance On/Off parameter for 3D Centerline <br> License requirements : drafting ("DRAFTING") */
            public: void SetIndividualDistance
            (
                bool individualDistance /** individualdistance */ 
            );
        };
    }
}
#undef EXPORTLIBRARY
#endif
