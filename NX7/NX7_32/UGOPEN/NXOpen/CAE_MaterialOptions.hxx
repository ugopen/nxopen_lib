#ifndef NXOpen_CAE_MATERIALOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_MATERIALOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MaterialOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>
namespace NXOpen
{
    namespace CAE
    {
        class MaterialOptions;
    }
    class PhysicalMaterial;
    namespace CAE
    {
        /**  @brief  Represents the material options to be used when assigning a material to cae part  

           <br> To create a new instance of this class, use @link CAE::CaePart::NewMaterialOptions CAE::CaePart::NewMaterialOptions@endlink  <br> */
        class NXOPENCPPEXPORT MaterialOptions : public TransientObject
        {
            public: explicit MaterialOptions(void *ptr);
            /**Sets   <br> License requirements : None */
            public: void SetMaterialInherited
            (
                bool bInherited /** binherited */ 
            );
            /**Returns   <br> License requirements : None */
            public: bool MaterialInherited
            (
            );
            /**Sets   <br> License requirements : None */
            public: void SetMaterial
            (
                NXOpen::PhysicalMaterial * material /** material */ 
            );
            /**Returns   <br> License requirements : None */
            public: NXOpen::PhysicalMaterial * Material
            (
            );
            /** Destroys the object  <br> License requirements : None */
            public: virtual ~MaterialOptions();
        };
    }
}
#undef EXPORTLIBRARY
#endif
