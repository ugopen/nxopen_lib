#ifndef NXOpen_ROUTING_PLACEELBOWSBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_PLACEELBOWSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_PlaceElbowsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Routing_AttributeHolder.hxx>
#include <NXOpen/Routing_CharacteristicList.hxx>
#include <NXOpen/Routing_RouteObjectCollector.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class PlaceElbowsBuilder;
    }
    class Builder;
    namespace Routing
    {
        class AttributeHolder;
    }
    namespace Routing
    {
        class CharacteristicList;
    }
    namespace Routing
    {
        class RouteObjectCollector;
    }
    namespace Routing
    {
        class _PlaceElbowsBuilderBuilder;
        class PlaceElbowsBuilderImpl;
        /** Class PlaceElbowsBuilder  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateRoutingPlaceElbowsBuilder  NXOpen::Routing::RouteManager::CreateRoutingPlaceElbowsBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  PlaceElbowsBuilder : public NXOpen::Builder
        {
            private: PlaceElbowsBuilderImpl * m_placeelbowsbuilder_impl;
            private: friend class  _PlaceElbowsBuilderBuilder;
            protected: PlaceElbowsBuilder();
            public: ~PlaceElbowsBuilder();
            /**Returns  the route object collector builder for placing elbows 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_pipetube ("Routing Piping and Tubing") */
            public: NXOpen::Routing::RouteObjectCollector * SelectRoutingObjects
            (
            );
            /**Returns  the attribute holder for elbow placement 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_pipetube ("Routing Piping and Tubing") */
            public: NXOpen::Routing::AttributeHolder * AttributeHolder
            (
            );
            /** Set the Attribute Holder 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_pipetube ("Routing Piping and Tubing") */
            public: void SetAttributeHolder
            (
                NXOpen::Routing::AttributeHolder * attributeHolder /** Object to hold template attributes */
            );
            /** Place Multiple Elbows 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_pipetube ("Routing Piping and Tubing") */
            public: void PlaceMultipleElbows
            (
                NXOpen::Routing::CharacteristicList * jaCharx /** jacharx */ ,
                const NXString & refSet /** refset */ ,
                int layer /** layer */ ,
                int layerOption /** layeroption */ ,
                bool overstockFlag /** overstockflag */ ,
                NXOpen::Routing::CharacteristicList * optionalCharx /** Optional Charx to apply. */,
                NXOpen::Routing::CharacteristicList * requiredCharx /** Required Charx to apply. */
            );
            /** Place Multiple Elbows 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : routing_pipetube ("Routing Piping and Tubing") */
            void PlaceMultipleElbows
            (
                NXOpen::Routing::CharacteristicList * jaCharx /** jacharx */ ,
                const char * refSet /** refset */ ,
                int layer /** layer */ ,
                int layerOption /** layeroption */ ,
                bool overstockFlag /** overstockflag */ ,
                NXOpen::Routing::CharacteristicList * optionalCharx /** Optional Charx to apply. */,
                NXOpen::Routing::CharacteristicList * requiredCharx /** Required Charx to apply. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
