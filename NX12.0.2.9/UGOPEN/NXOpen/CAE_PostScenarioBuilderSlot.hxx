#ifndef NXOpen_CAE_POSTSCENARIOBUILDERSLOT_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOBUILDERSLOT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioBuilderSlot.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DataSource.hxx>
#include <NXOpen/CAE_PostScenarioDefinition.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioBuilderSlot;
    }
    class Builder;
    namespace CAE
    {
        class DataSource;
    }
    namespace CAE
    {
        class PostScenarioDefinition;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class _PostScenarioBuilderSlotBuilder;
        class PostScenarioBuilderSlotImpl;
        /**  @brief  This class represents a @link NXOpen::CAE::PostScenarioBuilderSlot NXOpen::CAE::PostScenarioBuilderSlot@endlink .  

          
              
              A @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink 
               can contain multiple slots to which @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink s
                and respective @link NXOpen::CAE::PostScenarioDefinition NXOpen::CAE::PostScenarioDefinition@endlink s are assigned.
                 The scenario retrieves data from these data sources in order to process it
                  and display it via @link NXOpen::CAE::PostScenarioBuilder::Visualization NXOpen::CAE::PostScenarioBuilder::Visualization@endlink .
                  
               <br> No support for KF.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioBuilderSlot : public NXOpen::Builder
        {
            private: PostScenarioBuilderSlotImpl * m_postscenariobuilderslot_impl;
            private: friend class  _PostScenarioBuilderSlotBuilder;
            protected: PostScenarioBuilderSlot();
            public: ~PostScenarioBuilderSlot();
            /**Returns  the name of the input definition slot. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Returns  the selected @link CAE::DataSource CAE::DataSource@endlink  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DataSource * DataSource
            (
            );
            /** Returns the selected @link CAE::PostScenarioDefinition CAE::PostScenarioDefinition@endlink   @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioDefinition *> GetDefinitions
            (
            );
            /** List @link CAE::DataSource CAE::DataSource@endlink  applicable to the current slot. Data Sources are retrieved from 
                    @link NXOpen::CAE::PostScenarioManager::DataSources NXOpen::CAE::PostScenarioManager::DataSources@endlink  and filtered to only contain data applicable to the current scenario slot. @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::DataSource *> GetAvailableDataSources
            (
            );
            /** List @link NXOpen::CAE::PostScenarioDefinition NXOpen::CAE::PostScenarioDefinition@endlink 
                     applicable to the current slot for a particular @link CAE::DataSource CAE::DataSource@endlink .
                      This is a utility method. The  @code dataSource @endcode  parameter should
                       have been retrieved via @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources@endlink .
                      @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::CAE::PostScenarioDefinition *> GetAvailableDefinitionsForDataSource
            (
                NXOpen::CAE::DataSource * dataSource /** datasource */ 
            );
            /** Assign data to this slot. This assignment applies to the owning @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink .
                     The @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink  and @link NXOpen::CAE::PostScenarioDataDefinition NXOpen::CAE::PostScenarioDataDefinition@endlink  have to be consistent and relevant to this scenario.
                      See @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources@endlink 
                       and @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource@endlink . This overload should be used for data assignments.
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDataSource
            (
                NXOpen::CAE::DataSource * dataSource /** should be retrieved through @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources@endlink . */,
                NXOpen::CAE::PostScenarioDefinition * dataDefinition /** Should be retrieved by calling @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource@endlink  with the  @code dataSource @endcode  parameter. */
            );
            /** Assign data to this slot.
                     This assignment applies to the owning @link NXOpen::CAE::PostScenarioBuilder NXOpen::CAE::PostScenarioBuilder@endlink . The @link NXOpen::CAE::DataSource NXOpen::CAE::DataSource@endlink 
                      and @link NXOpen::CAE::PostScenarioDefinition NXOpen::CAE::PostScenarioDefinition@endlink  have to be consistent and relevant to this scenario.
                       See @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources@endlink 
                        and @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource@endlink . This overload should be used for FE Model assignments.
                     
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDataSource
            (
                NXOpen::CAE::DataSource * dataSource /** should be retrieved through @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDataSources@endlink . */,
                const std::vector<NXOpen::CAE::PostScenarioDefinition *> & dataDefinitions /** Should be retrieved by calling @link NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource NXOpen::CAE::PostScenarioBuilderSlot::GetAvailableDefinitionsForDataSource@endlink  with the  @code dataSource @endcode  parameter. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
