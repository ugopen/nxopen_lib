#ifndef NXOpen_CAE_LAMINATEGRAPHICALREPORTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_LAMINATEGRAPHICALREPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LaminateGraphicalReportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_LaminateElementFilterBuilder.hxx>
#include <NXOpen/CAE_LaminatePlyFilterBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LaminateGraphicalReportBuilder;
    }
    class Builder;
    namespace CAE
    {
        class LaminateElementFilterBuilder;
    }
    namespace CAE
    {
        class LaminatePlyFilterBuilder;
    }
    namespace CAE
    {
        class _LaminateGraphicalReportBuilderBuilder;
        class LaminateGraphicalReportBuilderImpl;
        /** Represents a @link CAE::LaminateGraphicalReport CAE::LaminateGraphicalReport@endlink  builder  <br> There is no kf creator.  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LaminateGraphicalReportBuilder : public NXOpen::Builder
        {
            /** Solver input type */
            public: enum SolverInputType
            {
                SolverInputTypeSolverShellStressResultant/** Using solver shell stress resultants */,
                SolverInputTypeSolverPlyStressesAndStrains/** Using solver ply stresses */
            };

            /** Result enveloping rules. When there is more than one solutions or loadcases, 
                        defines which result to keep and display in the graphical report */
            public: enum EnvelopeRule
            {
                EnvelopeRuleMaxMin/** Keep minimum and maximum values */,
                EnvelopeRuleMin/** Keep minimum values */,
                EnvelopeRuleMax/** Keep maximum values */,
                EnvelopeRuleAbsMax/** Keep maximum absolute values */,
                EnvelopeRuleAbsMin/** Keep minimum absolute values */
            };

            /** Coordinate system to use for ply stresses, ply failure indices, ply strength 
                        ratios and ply margins of safety calculation. */
            public: enum CoordinateSystemType
            {
                CoordinateSystemTypePly/** Ply coordinate system */,
                CoordinateSystemTypeLaminate/** Laminate coordinate system */
            };

            /** Failure indices mode. NXLC can compute in-plane ply 
                        failure indices and/or interlaminar failure indices */
            public: enum FailureModeType
            {
                FailureModeTypeInPlanePly/** Ply failure index */,
                FailureModeTypeInterlaminar/** Bonding failure index */,
                FailureModeTypeBoth/** Both failure index type */
            };

            /** Ply export options. With or without ply ids. */
            public: enum PlyExportOptionType
            {
                PlyExportOptionTypeGlobalPlyId/** Export the ply global ids to the bun file */,
                PlyExportOptionTypeLayer/** Export plies as layers */
            };

            /** Element-Nodal option */
            public: enum ElemNodalOptionType
            {
                ElemNodalOptionTypeElemental/** Average element-nodal results per element */,
                ElemNodalOptionTypeNodal/** Keep element-nodal results */
            };

            private: LaminateGraphicalReportBuilderImpl * m_laminategraphicalreportbuilder_impl;
            private: friend class  _LaminateGraphicalReportBuilderBuilder;
            protected: LaminateGraphicalReportBuilder();
            public: ~LaminateGraphicalReportBuilder();
            /**Returns  the name of the graphical report 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name of the graphical report 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the graphical report 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the solver input type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::SolverInputType SolverInput
            (
            );
            /**Sets  the solver input type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetSolverInput
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::SolverInputType solverInput /** solverinput */ 
            );
            /**Returns  the state of the ply stress calculation at the bottom of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool PlyBottom
            (
            );
            /**Sets  the state of the ply stress calculation at the bottom of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyBottom
            (
                bool plyBottom /** plybottom */ 
            );
            /**Returns  the state of the ply stress calculation at the middle of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool PlyMiddle
            (
            );
            /**Sets  the state of the ply stress calculation at the middle of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyMiddle
            (
                bool plyMiddle /** plymiddle */ 
            );
            /**Returns  the state of the ply stress calculation at the top of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool PlyTop
            (
            );
            /**Sets  the state of the ply stress calculation at the top of each ply 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyTop
            (
                bool plyTop /** plytop */ 
            );
            /**Returns  the ply stress result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool PlyStress
            (
            );
            /**Sets  the ply stress result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyStress
            (
                bool plyStress /** plystress */ 
            );
            /**Returns  the ply stress rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule PlyStressRule
            (
            );
            /**Sets  the ply stress rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyStressRule
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule plyStressRule /** plystressrule */ 
            );
            /**Returns  the ply strain results 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool PlyStrain
            (
            );
            /**Sets  the ply strain results 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyStrain
            (
                bool plyStrain /** plystrain */ 
            );
            /**Returns  the ply strain rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule PlyStrainRule
            (
            );
            /**Sets  the ply strain rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyStrainRule
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule plyStrainRule /** plystrainrule */ 
            );
            /**Returns  the failure index result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool FailureIndex
            (
            );
            /**Sets  the failure index result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetFailureIndex
            (
                bool failureIndex /** failureindex */ 
            );
            /**Returns  the failure index rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule FailureIndexRule
            (
            );
            /**Sets  the failure index rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetFailureIndexRule
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule failureIndexRule /** failureindexrule */ 
            );
            /**Returns  the strength ratio result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool StrengthRatio
            (
            );
            /**Sets  the strength ratio result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetStrengthRatio
            (
                bool strengthRatio /** strengthratio */ 
            );
            /**Returns  the strength ratio rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule StrengthRatioRule
            (
            );
            /**Sets  the strength ratio rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetStrengthRatioRule
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule strengthRatioRule /** strengthratiorule */ 
            );
            /**Returns  the safety margin result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool SafetyMargin
            (
            );
            /**Sets  the safety margin result 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetSafetyMargin
            (
                bool safetyMargin /** safetymargin */ 
            );
            /**Returns  the safety margin rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule SafetyMarginRule
            (
            );
            /**Sets  the safety margin rule 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetSafetyMarginRule
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::EnvelopeRule safetyMarginRule /** safetymarginrule */ 
            );
            /**Returns  the coordinate system for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::CoordinateSystemType CoordinateSystem
            (
            );
            /**Sets  the coordinate system for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetCoordinateSystem
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::CoordinateSystemType coordinateSystem /** coordinatesystem */ 
            );
            /**Returns  the safety factor for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double SafetyFactor
            (
            );
            /**Sets  the safety factor for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetSafetyFactor
            (
                double safetyFactor /** safetyfactor */ 
            );
            /**Returns  the failure mode for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::FailureModeType FailureMode
            (
            );
            /**Sets  the failure mode for failure index, strength ratio and margin of safety calculation 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetFailureMode
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::FailureModeType failureMode /** failuremode */ 
            );
            /**Returns  the ply global id option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::PlyExportOptionType PlyExportOption
            (
            );
            /**Sets  the ply global id option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetPlyExportOption
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::PlyExportOptionType plyExportOption /** plyexportoption */ 
            );
            /**Returns  the show load cases option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool ShowLoadCases
            (
            );
            /**Sets  the show load cases option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetShowLoadCases
            (
                bool showLoadCases /** showloadcases */ 
            );
            /**Returns  the show ply results option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool ShowPlyResults
            (
            );
            /**Sets  the show ply results option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetShowPlyResults
            (
                bool showPlyResults /** showplyresults */ 
            );
            /**Returns  the overall only option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool OverallOnly
            (
            );
            /**Sets  the overall only option 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetOverallOnly
            (
                bool overallOnly /** overallonly */ 
            );
            /**Returns  the element filter 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateElementFilterBuilder * ElementFilter
            (
            );
            /**Returns  the ply filter 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminatePlyFilterBuilder * PlyFilter
            (
            );
            /**Returns  the solver input 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::LaminateGraphicalReportBuilder::ElemNodalOptionType ElemNodalOption
            (
            );
            /**Sets  the solver input 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_lam_composites ("Laminate Composites") */
            public: void SetElemNodalOption
            (
                NXOpen::CAE::LaminateGraphicalReportBuilder::ElemNodalOptionType elemNodalOption /** elemnodaloption */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
