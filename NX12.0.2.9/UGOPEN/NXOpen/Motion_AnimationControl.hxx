#ifndef NXOpen_MOTION_ANIMATIONCONTROL_HXX_INCLUDED
#define NXOpen_MOTION_ANIMATIONCONTROL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_AnimationControl.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_PostControl.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class AnimationControl;
    }
    namespace Motion
    {
        class Link;
    }
    namespace Motion
    {
        class PostControl;
    }
    namespace Motion
    {
        class _AnimationControlBuilder;
        class AnimationControlImpl;
        /** Represents the @link NXOpen::Motion::AnimationControl NXOpen::Motion::AnimationControl@endlink   <br> An instance of this class can not be obtained  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  AnimationControl : public NXOpen::Motion::PostControl
        {
            private: AnimationControlImpl * m_animationcontrol_impl;
            private: friend class  _AnimationControlBuilder;
            protected: AnimationControl();
            public: ~AnimationControl();
            /** Animation play. 
                    This method adds event loop that plays forward step by step and return. 
                    It does not wait finishing the play process. 
                    For the case there is no UI to control the play and stop action, call 
                    @link Motion::AnimationControl::StepForward  Motion::AnimationControl::StepForward @endlink  
                    in a cycle to play animation  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Play
            (
            );
            /** Animation play backward. 
                    This method adds event loop that plays backward step by step and return. 
                    It does not wait finishing the play process. 
                    For the case there is no UI to control the play and stop action, call 
                    @link Motion::AnimationControl::StepBackward  Motion::AnimationControl::StepBackward @endlink  
                    in a cycle to play animation backward 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void PlayBackward
            (
            );
            /** Animation pause 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Pause
            (
            );
            /** Animation stop 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Stop
            (
            );
            /** Animation step to a special step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepTo
            (
                int step /** Special step */
            );
            /** Animation step forward 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepForward
            (
            );
            /** Animation step backward 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepBackward
            (
            );
            /** Animation step to first step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepFirst
            (
            );
            /** Animation step to last step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepLast
            (
            );
            /** Animation step to design position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepToDesignPosition
            (
            );
            /** Animation step to assembly position 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void StepToAssemblyPosition
            (
            );
            /** Finish animation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void Finish
            (
            );
            /**Returns  the current animation step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int CurrentStep
            (
            );
            /** Get animation link transformation matrix  @return  The link transformation matrix within current step 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: double GetLinkTransformatioinMatrix
            (
                NXOpen::Motion::Link * linkTag /** The special link object */,
                int currentStep /** The current step index */
            );
            /**Returns  the number of animation steps 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int NumberSteps
            (
            );
            /**Returns  the animation delay 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: int Delay
            (
            );
            /**Sets  the animation delay 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDelay
            (
                int delay /** delay */ 
            );
            /**Returns  the animation mode 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::PlayMode Mode
            (
            );
            /**Sets  the animation mode 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMode
            (
                NXOpen::Motion::PlayMode mode /** mode */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
