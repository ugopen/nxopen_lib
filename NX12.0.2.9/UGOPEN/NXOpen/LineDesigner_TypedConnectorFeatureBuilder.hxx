#ifndef NXOpen_LINEDESIGNER_TYPEDCONNECTORFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_TYPEDCONNECTORFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_TypedConnectorFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class TypedConnectorFeatureBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    namespace LineDesigner
    {
        class _TypedConnectorFeatureBuilderBuilder;
        class TypedConnectorFeatureBuilderImpl;
        /**
            Represents a @link LineDesigner::TypedConnectorFeature LineDesigner::TypedConnectorFeature@endlink  Features.FeatureBuilder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateTypedConnectorFeatureBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateTypedConnectorFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        MismatchBehavior </td> <td> 
         
        Dontcreatetheconnection </td> </tr> 

        <tr><td> 
         
        ReversePropagation </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  TypedConnectorFeatureBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** This enum is providing possible behavior on mismatch in propagated expressions */
            public: enum BehaviorOnMismatch
            {
                BehaviorOnMismatchDontcreatetheconnection/** dontcreatetheconnection */ ,
                BehaviorOnMismatchContinuewithoutpropagatingtheparticularone/** continuewithoutpropagatingtheparticularone */ 
            };

            private: TypedConnectorFeatureBuilderImpl * m_typedconnectorfeaturebuilder_impl;
            private: friend class  _TypedConnectorFeatureBuilderBuilder;
            protected: TypedConnectorFeatureBuilder();
            public: ~TypedConnectorFeatureBuilder();
            /**Returns  the connector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString ConnectorName
            (
            );
            /**Sets  the connector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorName
            (
                const NXString & connectorName /** connectorname */ 
            );
            /**Sets  the connector name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetConnectorName
            (
                const char * connectorName /** connectorname */ 
            );
            /**Returns  the connector point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * ConnectorPoint
            (
            );
            /**Sets  the connector point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorPoint
            (
                NXOpen::Point * connectorPoint /** connectorpoint */ 
            );
            /**Returns  the connector direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Direction * ConnectorDirection
            (
            );
            /**Sets  the connector direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorDirection
            (
                NXOpen::Direction * connectorDirection /** connectordirection */ 
            );
            /**Returns  the connector parallel to object direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Direction * ConnectorParallelToObjectDirection
            (
            );
            /**Sets  the connector parallel to object direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorParallelToObjectDirection
            (
                NXOpen::Direction * connectorParallelToObjectDirection /** connectorparalleltoobjectdirection */ 
            );
            /** The propagated expressions is set during creation of connector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SelectPropagatedExpressions
            (
            );
            /**Returns  the status of behavior on mismatch property 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::TypedConnectorFeatureBuilder::BehaviorOnMismatch MismatchBehavior
            (
            );
            /**Sets  the status of behavior on mismatch property 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetMismatchBehavior
            (
                NXOpen::LineDesigner::TypedConnectorFeatureBuilder::BehaviorOnMismatch mismatchBehavior /** mismatchbehavior */ 
            );
            /**  The compatible connector types are returns  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: std::vector<NXString> GetConnectorCompatibleTypeList
            (
            );
            /** The connector compatible types are set 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorCompatibleTypeList
            (
                const std::vector<NXString> & connectorCompatibleTypeList /** connectorcompatibletypelist */ 
            );
            /** The connectors propagated expressions  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: std::vector<NXOpen::Expression *> GetConnectorExpressionPropagationList
            (
            );
            /**The connectors propagated expressions are set 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorExpressionPropagationList
            (
                const std::vector<NXOpen::Expression *> & connectorExpressionPropagationList /** connectorexpressionpropagationlist */ 
            );
            /** The Nth expressions from connectors propagated expressions are set
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetNthConnectorExpressionPropagationList
            (
                int nthExpressionPropagationList /** nthexpressionpropagationlist */ ,
                NXOpen::Expression * connectorExpressionPropagationList /** connectorexpressionpropagationlist */ 
            );
            /**Returns  the connector type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString ConnectorTypeName
            (
            );
            /**Sets  the connector type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorTypeName
            (
                const NXString & connectorTypeName /** connectortypename */ 
            );
            /**Sets  the connector type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetConnectorTypeName
            (
                const char * connectorTypeName /** connectortypename */ 
            );
            /**Returns  the connector compatible type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString ConnectorCompatibleTypeName
            (
            );
            /**Sets  the connector compatible type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetConnectorCompatibleTypeName
            (
                const NXString & connectorCompatibleTypeName /** connectorcompatibletypename */ 
            );
            /**Sets  the connector compatible type name 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetConnectorCompatibleTypeName
            (
                const char * connectorCompatibleTypeName /** connectorcompatibletypename */ 
            );
            /**Returns  the status of if reverse propagation is on 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool ReversePropagation
            (
            );
            /**Sets  the status of if reverse propagation is on 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetReversePropagation
            (
                bool reversePropagation /** reversepropagation */ 
            );
            /**Returns  the typed connector name 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString TypedConnectorName
            (
            );
            /**Sets  the typed connector name 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetTypedConnectorName
            (
                const NXString & typedConnectorName /** typedconnectorname */ 
            );
            /**Sets  the typed connector name 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetTypedConnectorName
            (
                const char * typedConnectorName /** typedconnectorname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
