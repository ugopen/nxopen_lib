#ifndef NXOpen_CAM_PARAMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PARAMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ParamBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Cycle.hxx>
#include <NXOpen/CAM_Ude.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class ParamBuilder;
    }
    class Builder;
    namespace CAM
    {
        class Cycle;
    }
    namespace CAM
    {
        class Ude;
    }
    class TaggedObject;
    namespace CAM
    {
        class _ParamBuilderBuilder;
        class ParamBuilderImpl;
        /** Represents a manufacturing object builder. It is the top level builder for all 
                manufacturing objects that have a representation in the Operation Navigator.
             <br> This is an abstract class and cannot be instantiated.  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  ParamBuilder : public NXOpen::Builder
        {
            /** Available types for Optimization Method in operation */
            public: enum OptimizationTypes
            {
                OptimizationTypesNone/** none */,
                OptimizationTypesMinimizeTravel/** minimize travel */,
                OptimizationTypesBand/** band */
            };

            private: ParamBuilderImpl * m_parambuilder_impl;
            private: friend class  _ParamBuilderBuilder;
            protected: ParamBuilder();
            public: ~ParamBuilder();
            /**Returns  the optim method  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::ParamBuilder::OptimizationTypes OptimizationMethod
            (
            );
            /**Sets  the optim method  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOptimizationMethod
            (
                NXOpen::CAM::ParamBuilder::OptimizationTypes optimMethod /** the optim method */
            );
            /**Returns  the cycle event 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::Ude * CycleEvent
            (
            );
            /**Returns  the cycle  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::Cycle * CycleTable
            (
            );
            /** Returns the customizable item builder for the given customizable item name  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * GetCustomizableItemBuilder
            (
                const NXString & name /** the ci name */
            );
            /** Returns the customizable item builder for the given customizable item name  @return  
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            NXOpen::TaggedObject * GetCustomizableItemBuilder
            (
                const char * name /** the ci name */
            );
            /** Returns the names for all customizable item ids  @return  the ci names 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetCustomizableItemNames
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
