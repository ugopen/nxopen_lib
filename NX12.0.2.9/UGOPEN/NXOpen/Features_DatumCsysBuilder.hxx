#ifndef NXOpen_FEATURES_DATUMCSYSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_DATUMCSYSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_DatumCsysBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class DatumCsysBuilder;
    }
    class CartesianCoordinateSystem;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _DatumCsysBuilderBuilder;
        class DatumCsysBuilderImpl;
        /** Represents a datum csys builder  <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateDatumCsysBuilder  NXOpen::Features::FeatureCollection::CreateDatumCsysBuilder @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  DatumCsysBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: DatumCsysBuilderImpl * m_datumcsysbuilder_impl;
            private: friend class  _DatumCsysBuilderBuilder;
            protected: DatumCsysBuilder();
            public: ~DatumCsysBuilder();
            /**Sets  the CSYS that defines a Datum CSYS 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetCsys
            (
                NXOpen::CartesianCoordinateSystem * csys /** exisiting WCS This parameter may not be NULL.*/
            );
            /**Returns  the CSYS that defines a Datum CSYS 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CartesianCoordinateSystem * Csys
            (
            );
            /**Sets  the scale factor of the input Datum Csys 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDisplayScaleFactor
            (
                double displayScaleFactor /** display scale factor */
            );
            /**Returns  the scale factor of the input Datum Csys 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double DisplayScaleFactor
            (
            );
            /**Sets  the flag of the Datum Csys components creation 
             <br>  @deprecated Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed.") void SetComponentsCreation
            (
                bool componentsCreation /** TRUE at creation and FALSE at edit */
            );
            /**Returns  the flag of the Datum Csys components creation 
             <br>  @deprecated Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed.") bool ComponentsCreation
            (
            );
            /**Sets  the fixed size flag of a created Datum Csys 
             <br>  @deprecated Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR geometric_tol ("GDT") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: NX_DEPRECATED("Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed.") void SetFixedSizeDatum
            (
                bool fixedSizeDatum /** always TRUE at both of creation and edit */
            );
            /**Returns  the fixed size flag of a created Datum Csys 
             <br>  @deprecated Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed. <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX7.5.1.  This property is now always TRUE and calls to this property can be safely removed.") bool FixedSizeDatum
            (
            );
            /** Prints wave browser type information about link 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : wave ("WAVE FUNCTIONALITY") */
            public: void GetWaveLinkInformation
            (
                NXString* info /** queried wave information */,
                bool* xformExists /** true if there is a transform */,
                NXOpen::Point3d* xformOrigin /** transformation origin */,
                NXOpen::Matrix3x3* xformOrientation /** transformation matrix */,
                double* xformScale /** transformation scale */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
