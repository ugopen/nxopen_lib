#ifndef NXOpen_CAE_MODELCHECK_ALIGNBEAMELEMENTDIRECTIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELCHECK_ALIGNBEAMELEMENTDIRECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelCheck_AlignBeamElementDirectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FEElement.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ModelCheck
        {
            class AlignBeamElementDirectionBuilder;
        }
    }
    class Builder;
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        namespace ModelCheck
        {
            class _AlignBeamElementDirectionBuilderBuilder;
            class AlignBeamElementDirectionBuilderImpl;
            /**
                    Represents a @link NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder@endlink  builder used to align the Directions of
                    connected beam elements with a seed beam element. You can align the directions by executing either 
                    @link Builder::Commit Builder::Commit@endlink  or @link NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::AlignDirections NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::AlignDirections@endlink .
                    The difference between these two methods is @link Builder::Commit Builder::Commit@endlink  aligns the directions
                    and updates direction display, but it does not return the elements that have changed directions.
                    @link NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::AlignDirections NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::AlignDirections@endlink  aligns the directions
                    and returns the elements that have changed directions. Both of the methods are only available in fem context.
                     <br> To create a new instance of this class, use @link NXOpen::CAE::ModelCheckManager::CreateAlignBeamElementDirectionBuilder  NXOpen::CAE::ModelCheckManager::CreateAlignBeamElementDirectionBuilder @endlink  <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  AlignBeamElementDirectionBuilder : public NXOpen::Builder
            {
                /**  the options to define the connection scope to the seed element for model checking */
                public: enum ConnectedElementScope
                {
                    ConnectedElementScopeSeedMesh/** Limits check to only those beam elements in the mesh that contains the Seed Element */,
                    ConnectedElementScopeAllVisible/** Limits check to only those beam elements which are connected to the Seed Element and are currently visible*/,
                    ConnectedElementScopeUserSpecified/** Limits check to only those beam elements specified in @link NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::UserSpecifiedConnectElements NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::UserSpecifiedConnectElements@endlink  */
                };

                private: AlignBeamElementDirectionBuilderImpl * m_alignbeamelementdirectionbuilder_impl;
                private: friend class  _AlignBeamElementDirectionBuilderBuilder;
                protected: AlignBeamElementDirectionBuilder();
                public: ~AlignBeamElementDirectionBuilder();
                /**Returns  the option to indicate how to define connected elements for checking 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::ConnectedElementScope ElementConnectScope
                (
                );
                /**Sets  the option to indicate how to define connected elements for checking 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetElementConnectScope
                (
                    NXOpen::CAE::ModelCheck::AlignBeamElementDirectionBuilder::ConnectedElementScope connectScope /** connectscope */ 
                );
                /**Returns  the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::FEElement * SeedElement
                (
                );
                /**Sets  the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetSeedElement
                (
                    NXOpen::CAE::FEElement * seedElement /** seedelement */ 
                );
                /**Returns  the option indicating whether to reverse element directions so that they are aligned with the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseSeedDirection
                (
                );
                /**Sets  the option indicating whether to reverse element directions so that they are aligned with the seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetReverseSeedDirection
                (
                    bool seedDirectionToBeReversed /** seeddirectiontobereversed */ 
                );
                /**Returns  the user specified connected elements to be aligned with seed element 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::SelectElementsBuilder * UserSpecifiedConnectElements
                (
                );
                /** Finds all visible elements connected with the seed element  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::FEElement *> FindAllVisibleConnectedElements
                (
                );
                /** Display element directions for connected elements, which are to be aligned with seed element direction 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void DisplayDirections
                (
                );
                /** Aligns the directions of elements connected to the seed element. Returns the elements
                                that have had the directions successfully reversed. This method will only reverse
                                the directions for beam elements in the current work fem part.
                             @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: std::vector<NXOpen::CAE::FEElement *> AlignDirections
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
