#ifndef NXOpen_MATERIALUTILITIES_HXX_INCLUDED
#define NXOpen_MATERIALUTILITIES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MaterialUtilities.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class MaterialUtilities;
    namespace CAE
    {
        class CaeSession;
    }
    class MaterialUtilitiesImpl;
    /** Represents Physical @link NXOpen::MaterialUtilities NXOpen::MaterialUtilities@endlink  class  <br> To obtain an instance of this class, refer to @link NXOpen::CAE::CaeSession  NXOpen::CAE::CaeSession @endlink  <br> 
     <br>  Created in NX10.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  MaterialUtilities
    {
        /** The stress strain data type */
        public: enum StressStrainData
        {
            StressStrainDataEngineeringStressEngineeringStrain/** Engineering stress-Engineering strain */,
            StressStrainDataEngineeringStressEngineeringPlasticStrain/** Engineering stress-Engineering plastic strain */,
            StressStrainDataTrueStressLogStrain/** True stress-log strain */,
            StressStrainDataTrueStressLogPlasticStrain/** True stress-log plastic strain */,
            StressStrainDataUndefined/** Undefined type - data is assumed to be defined using the type used by the solver,
                                                                                                            no attempt will be made to convert the data to the type the solver requires
                                                                                                            */
        };

        private: MaterialUtilitiesImpl * m_materialutilities_impl;
        private: NXOpen::CAE::CaeSession* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit MaterialUtilities(NXOpen::CAE::CaeSession *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~MaterialUtilities();
        /**Convert stress strain data between the four types EngineeringStressEngineeringStrain,
               EngineeringStressEngineeringPlasticStrain, TrueStressLogStrain and TrueStressLogPlasticStrain. 
               The output stressStrain data will be the same units as the input stressStrain data.
               The units of young's modulus should be consistent with the input stressStrain Data.

               The algorithm formula for converting from Engineering Strain to Log ( True ) strain is: 
              
                   Log ( True ) Strain = ln( 1 + Engineering Strain ) 

               The algorithm formulas for converting from Engineering Stress to True Stress are:

                   True Stress = Engineer Stress *(1 - Poisson's Ratio * Engineering Elastic Strain - 0.5 * Engineering Plastic Strain )^(-2)
                   Engineering Elastic Strain = Engineering Stress / Young's Modulus
                   Engineering Plastic Strain = Engineering Strain - Engineering Elastic Strain

               The algorithm formulas for converting from "True stress-log strain" and "True stress-log plastic strain" are:
                   Log Elastic Strain = Log Stress / Young's Modulus
                   Log Plastic Strain = Log Strain - Log Elastic Strain

              
         <br>  @deprecated Deprecated in NX11.0.0.  Use @link NXOpen::MaterialUtilities::ConvertStressStrainYoungsModulusData NXOpen::MaterialUtilities::ConvertStressStrainYoungsModulusData@endlink  instead. <br>  

         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use NXOpen::MaterialUtilities::ConvertStressStrainYoungsModulusData instead.") void ConvertStressStrainData
        (
            const std::vector<double> & strainData /** the input strain array */,
            const std::vector<double> & stressData /** the input stress array */,
            double youngsModulus /** the input young's modulus used in converting algorithm */,
            double poissionRatio /** the input poission's ratio used in converting algorithm */,
            NXOpen::MaterialUtilities::StressStrainData inputDataType /** the input stress-strain data type */,
            NXOpen::MaterialUtilities::StressStrainData outputDataType /** the output stress-strain data type */,
            std::vector<double> & convertedStrainData /** the output strain array */,
            std::vector<double> & convertedStressData /** the output stress array */
        );
        /**Convert stress strain data between the four types EngineeringStressEngineeringStrain,
               EngineeringStressEngineeringPlasticStrain, TrueStressLogStrain and TrueStressLogPlasticStrain. 
               The output stressStrain data will be the same units as the input stressStrain data.
               The units of young's modulus should be consistent with the input stressStrain Data.

               The algorithm formula for converting from Engineering Strain to Log ( True ) strain is: 

                   Log ( True ) Strain = ln( 1 + Engineering Strain ) 

               The algorithm formulas for converting from Engineering Stress to True Stress are:

                   True Stress = Engineer Stress *(1 - Poisson's Ratio * Engineering Elastic Strain - 0.5 * Engineering Plastic Strain )^(-2)
                   Engineering Elastic Strain = Engineering Stress / Young's Modulus
                   Engineering Plastic Strain = Engineering Strain - Engineering Elastic Strain

               The algorithm formulas for converting from "True stress-log strain" and "True stress-log plastic strain" are:
                   Log Elastic Strain = Log Stress / Young's Modulus
                   Log Plastic Strain = Log Strain - Log Elastic Strain

               This method also provides updated Youngs Modulus which is in sync with converted stress and strain
              
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void ConvertStressStrainYoungsModulusData
        (
            const std::vector<double> & strainData /** the input strain array */,
            const std::vector<double> & stressData /** the input stress array */,
            double youngsModulus /** the input young's modulus used in converting algorithm */,
            double poissionRatio /** the input poission's ratio used in converting algorithm */,
            NXOpen::MaterialUtilities::StressStrainData inputDataType /** the input stress-strain data type */,
            NXOpen::MaterialUtilities::StressStrainData outputDataType /** the output stress-strain data type */,
            std::vector<double> & convertedStrainData /** the output strain array */,
            std::vector<double> & convertedStressData /** the output stress array */,
            double* convertedYoungsModulus /** the output converted Youngs Modulus which is in sync with converted stress and strain */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
