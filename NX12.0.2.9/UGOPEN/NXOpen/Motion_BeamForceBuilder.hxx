#ifndef NXOpen_MOTION_BEAMFORCEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_BEAMFORCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_BeamForceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_CustomizedMaterialBuilder.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class BeamForceBuilder;
    }
    class Direction;
    class Expression;
    namespace Motion
    {
        class CustomizedMaterialBuilder;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class Point;
    namespace Motion
    {
        class _BeamForceBuilderBuilder;
        class BeamForceBuilderImpl;
        /** Represents a @link Motion::BeamForceBuilder Motion::BeamForceBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Motion::BeamForceCollection::CreateBeamForceBuilder  NXOpen::Motion::BeamForceCollection::CreateBeamForceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Area.Value </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        CustomizedMaterial.Density.Value </td> <td> 
         
        7.8e-6 (millimeters part), 7.3e-4 (inches part) </td> </tr> 

        <tr><td> 
         
        CustomizedMaterial.PoissonRatio.Value </td> <td> 
         
        0.3 </td> </tr> 

        <tr><td> 
         
        CustomizedMaterial.YoungModulus.Value </td> <td> 
         
        2e+8 (millimeters part), 2.9e+7 (inches part) </td> </tr> 

        <tr><td> 
         
        DampingType </td> <td> 
         
        Viscous </td> </tr> 

        </table>  

         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  BeamForceBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** the vector direction of the beam force */
            public: enum VectorTypes
            {
                VectorTypesY/** Y Vector */,
                VectorTypesZ/** Z Vector */
            };

            /** the damping type*/
            public: enum DampingTypes
            {
                DampingTypesViscous/** Viscous */,
                DampingTypesStructural/** Structural */
            };

            private: BeamForceBuilderImpl * m_beamforcebuilder_impl;
            private: friend class  _BeamForceBuilderBuilder;
            protected: BeamForceBuilder();
            public: ~BeamForceBuilder();
            /**Returns  the name of the beam force object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the name of the beam force object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the beam force object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the action link object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * ActionLink
            (
            );
            /**Returns  the base link object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * BaseLink
            (
            );
            /**Returns  the action point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ActionPoint
            (
            );
            /**Sets  the action point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionPoint
            (
                NXOpen::Point * actionPoint /** actionpoint */ 
            );
            /**Returns  the base point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BasePoint
            (
            );
            /**Sets  the base point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBasePoint
            (
                NXOpen::Point * basePoint /** basepoint */ 
            );
            /**Returns  the orientation of beam force 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::BeamForceBuilder::VectorTypes VectorType
            (
            );
            /**Sets  the orientation of beam force 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetVectorType
            (
                NXOpen::Motion::BeamForceBuilder::VectorTypes vectorType /** vectortype */ 
            );
            /**Returns  the direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the free length 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * FreeLength
            (
            );
            /**Returns  the area 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Area
            (
            );
            /**Returns  the inertia K 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * InertiaK
            (
            );
            /**Returns  the inertia Iyy
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * InertiaIyy
            (
            );
            /**Returns  the inertia Izz 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * InertiaIzz
            (
            );
            /**Returns  the customized material 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::CustomizedMaterialBuilder * CustomizedMaterial
            (
            );
            /**Returns  the ASY Timoshenko correction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * AsyTimoshenkoCorrection
            (
            );
            /**Returns  the ASZ Timoshenko correction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * AszTimoshenkoCorrection
            (
            );
            /**Returns  the damping method 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::BeamForceBuilder::DampingTypes DampingType
            (
            );
            /**Sets  the damping method 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDampingType
            (
                NXOpen::Motion::BeamForceBuilder::DampingTypes type /** type */ 
            );
            /**Returns  the damping ratio 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * DampingRatio
            (
            );
            /**Returns  the beam cross damping flag 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool IsBeamCrossDamping
            (
            );
            /**Sets  the beam cross damping flag 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBeamCrossDamping
            (
                bool type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
