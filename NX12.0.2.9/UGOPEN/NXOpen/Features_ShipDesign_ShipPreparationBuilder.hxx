#ifndef NXOpen_FEATURES_SHIPDESIGN_SHIPPREPARATIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SHIPPREPARATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ShipPreparationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ShipDesign_ShipPreparationInfo.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipPreparationBuilder;
        }
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Edge;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipPreparationInfo;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _ShipPreparationBuilderBuilder;
            class ShipPreparationBuilderImpl;
            /** Creates a builder used to prepare basic design data for meshing. Multiple features are created
                    as a result of committing this builder.  <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateShipPreparationBuilder  NXOpen::Features::ShipCollection::CreateShipPreparationBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            BlendRadius </td> <td> 
             
            100.0 (millimeters part), 4.0 (inches part) </td> </tr> 

            <tr><td> 
             
            HoleDiameter </td> <td> 
             
            300.0 (millimeters part), 12.0 (inches part) </td> </tr> 

            <tr><td> 
             
            RemoveBlends </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            RemoveOpenings </td> <td> 
             
            true </td> </tr> 

            </table>  

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ShipPreparationBuilder : public NXOpen::Features::FeatureBuilder
            {
                private: ShipPreparationBuilderImpl * m_shippreparationbuilder_impl;
                private: friend class  _ShipPreparationBuilderBuilder;
                protected: ShipPreparationBuilder();
                public: ~ShipPreparationBuilder();
                /**Returns  the components containing basic design data to prepare for meshing. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::SelectComponentList * ShipComponents
                (
                );
                /**Returns  the distance tolerance. Used in edge pairing to determine if edges are close. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance. Used in edge pairing to determine if edges are close. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the option to remove blends. If true, blends with a radius less than or equal to
                            @link Features::ShipDesign::ShipPreparationBuilder::BlendRadius Features::ShipDesign::ShipPreparationBuilder::BlendRadius @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetBlendRadius Features::ShipDesign::ShipPreparationBuilder::SetBlendRadius @endlink  will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool RemoveBlends
                (
                );
                /**Sets  the option to remove blends. If true, blends with a radius less than or equal to
                            @link Features::ShipDesign::ShipPreparationBuilder::BlendRadius Features::ShipDesign::ShipPreparationBuilder::BlendRadius @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetBlendRadius Features::ShipDesign::ShipPreparationBuilder::SetBlendRadius @endlink  will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetRemoveBlends
                (
                    bool removeBlends /** removeblends */ 
                );
                /**Returns  the blend radius. If @link Features::ShipDesign::ShipPreparationBuilder::RemoveBlends Features::ShipDesign::ShipPreparationBuilder::RemoveBlends @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetRemoveBlends Features::ShipDesign::ShipPreparationBuilder::SetRemoveBlends @endlink  is true then blends that
                            that are less than or equal to this radius will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double BlendRadius
                (
                );
                /**Sets  the blend radius. If @link Features::ShipDesign::ShipPreparationBuilder::RemoveBlends Features::ShipDesign::ShipPreparationBuilder::RemoveBlends @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetRemoveBlends Features::ShipDesign::ShipPreparationBuilder::SetRemoveBlends @endlink  is true then blends that
                            that are less than or equal to this radius will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetBlendRadius
                (
                    double blendRadius /** blendradius */ 
                );
                /**Returns  the option to remove openings. If true, openings that fit inside a circle with diameter 
                            @link Features::ShipDesign::ShipPreparationBuilder::HoleDiameter Features::ShipDesign::ShipPreparationBuilder::HoleDiameter @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetHoleDiameter Features::ShipDesign::ShipPreparationBuilder::SetHoleDiameter @endlink  will be removed from plate systems.
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool RemoveOpenings
                (
                );
                /**Sets  the option to remove openings. If true, openings that fit inside a circle with diameter 
                            @link Features::ShipDesign::ShipPreparationBuilder::HoleDiameter Features::ShipDesign::ShipPreparationBuilder::HoleDiameter @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetHoleDiameter Features::ShipDesign::ShipPreparationBuilder::SetHoleDiameter @endlink  will be removed from plate systems.
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetRemoveOpenings
                (
                    bool removeOpenings /** removeopenings */ 
                );
                /**Returns  the hole diameter. If @link Features::ShipDesign::ShipPreparationBuilder::RemoveOpenings Features::ShipDesign::ShipPreparationBuilder::RemoveOpenings @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetRemoveOpenings Features::ShipDesign::ShipPreparationBuilder::SetRemoveOpenings @endlink  is true then openings that
                            fit inside a circle with this diameter will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: double HoleDiameter
                (
                );
                /**Sets  the hole diameter. If @link Features::ShipDesign::ShipPreparationBuilder::RemoveOpenings Features::ShipDesign::ShipPreparationBuilder::RemoveOpenings @endlink and @link Features::ShipDesign::ShipPreparationBuilder::SetRemoveOpenings Features::ShipDesign::ShipPreparationBuilder::SetRemoveOpenings @endlink  is true then openings that
                            fit inside a circle with this diameter will be removed from plate systems. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetHoleDiameter
                (
                    double holeDiameter /** holediameter */ 
                );
                /**Returns  the angle tolerance. Used in curve approximation. 
                 <br>  @deprecated Deprecated in NX11.0.0.  Removed with no replacement. <br>  

                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX11.0.0.  Removed with no replacement.") double AngleTolerance
                (
                );
                /**Sets  the angle tolerance. Used in curve approximation. 
                 <br>  @deprecated Deprecated in NX11.0.0.  Removed with no replacement. <br>  

                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: NX_DEPRECATED("Deprecated in NX11.0.0.  Removed with no replacement.") void SetAngleTolerance
                (
                    double angleTolerance /** angletolerance */ 
                );
                /** Outputs the basic design components found in the loaded assembly. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void FindShipComponents
                (
                    std::vector<NXOpen::Assemblies::Component *> & components /** The basic design part occurrences. */,
                    std::vector<bool> & componentsProcessed /** Indication if the part occurrence has already been processed. */
                );
                /** Outputs the basic design data found in the given components. First the work part is searched for any
                            existing ship preparation data. The caller should not delete this data. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void FindBasicDesignData
                (
                    const std::vector<NXOpen::Assemblies::Component *> & components /** The basic design part occurrences to find data in. */,
                    std::vector<NXOpen::Features::ShipDesign::ShipPreparationInfo *> & data /** The basic design data to be processed. */
                );
                /** Wave links in the proper basic design data, if not already linked, into the work part. 
                            The data is updated to reflect the new linked data. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void WaveLinkBasicDesignData
                (
                    NXOpen::Features::ShipDesign::ShipPreparationInfo * data /** The basic design data to be wave linked. */
                );
                /** Creates or updates the divide feature. The basic design data is updated to contain the newly created feature
                            if necessary. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void CreateUpdateDivide
                (
                    NXOpen::Features::ShipDesign::ShipPreparationInfo * data /** The basic design data to create or update the divide feature. */
                );
                /** Converts intersection seam curves to edges on the linked bodies if found. 
                            This method should be called after all linked plate system body features are created or updated. 
                            If any new @link NXOpen::Features::ShipDesign::ShipPreparationInfo::TypesLinkedEdges NXOpen::Features::ShipDesign::ShipPreparationInfo::TypesLinkedEdges@endlink  
                            preparation data is created, it is output. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void ConvertSeamCurves
                (
                    std::vector<NXOpen::Features::ShipDesign::ShipPreparationInfo *> & data /** Additional basic design data to be processed. */
                );
                /** Updates the edge pair information. This method should be called after all plate divide features are created or updated. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void UpdateEdgePairing
                (
                );
                /** Cleans up all old ship preparation features, runs update and updates edge pairing. 
                            This method should be called after all other processing is completed. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void FinalizeProcessing
                (
                );
                /** Creates a empty basic design data object. The caller should not delete this object.  @return  The basic design data that was created. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Features::ShipDesign::ShipPreparationInfo * CreateBasicDesignData
                (
                );
                /** Sets the pairing data between the two edges input. This pairing information is used in the CAE application when
                            stitching edges. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: void SetEdgePair
                (
                    NXOpen::Edge * edge1 /** One of the edge pairs. */,
                    NXOpen::Edge * edge2 /** One of the edge pairs. */
                );
                /** Outputs the edge that is paired with the inEdge it it exists. This pairing information is used in the CAE application when
                            stitching edges.  @return  The paired edge if there is one NULL if not paired. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") */
                public: NXOpen::Edge * GetPairedEdge
                (
                    NXOpen::Edge * inEdge /** The edge to get it's pair. */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
