#ifndef NXOpen_ROUTING_DESIGNRULE_HXX_INCLUDED
#define NXOpen_ROUTING_DESIGNRULE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_DesignRule.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class DesignRule;
    }
    class NXObject;
    namespace Routing
    {
        class DesignRuleViolation;
    }
    namespace Routing
    {
        class _DesignRuleBuilder;
        class DesignRuleImpl;
        /** Represents @link NXOpen::Routing::DesignRule NXOpen::Routing::DesignRule@endlink  object  <br> Creator not available in KF.  <br> 
         <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

         <br>  Created in NX4.0.2.  <br>  
        */
        class NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") NXOPENCPP_ROUTINGEXPORT  DesignRule : public NXOpen::NXObject
        {
            private: DesignRuleImpl * m_designrule_impl;
            private: friend class  _DesignRuleBuilder;
            protected: DesignRule();
            public: ~DesignRule();
            /**Returns  the name of this design rule. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") NXString Drname
            (
            );
            /**Returns  the description of this design rule. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") NXString Description
            (
            );
            /**Returns  the application to which this design rule belongs. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") NXString Application
            (
            );
            /** Returns any violations recorded against this design rule.  @return  
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") std::vector<NXOpen::Routing::DesignRuleViolation *> GetViolations
            (
            );
            /** Adds violations to this design rule. 
             <br>  @deprecated Deprecated in NX11.0.0.  Use @link Routing::DesignRule::CreateViolation Routing::DesignRule::CreateViolation@endlink  instead. <br>  

             <br>  Created in NX4.0.2.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use Routing::DesignRule::CreateViolation instead.") void AddViolations
            (
                const std::vector<NXOpen::Routing::DesignRuleViolation *> & violations /** violations */ 
            );
            /** Creates a new violation for this design rule.  @return   
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") NXOpen::Routing::DesignRuleViolation * CreateViolation
            (
                const NXString & shortDescription /** shortdescription */ ,
                const NXString & longDescription /** longdescription */ ,
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /** Creates a new violation for this design rule.  @return   
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            NXOpen::Routing::DesignRuleViolation * CreateViolation
            (
                const char * shortDescription /** shortdescription */ ,
                const char * longDescription /** longdescription */ ,
                const std::vector<NXOpen::NXObject *> & objects /** objects */ 
            );
            /** Finds the violation of this rule attached to the given object and deletes it.
                        Useful when the given object no longer violates this rule.
                        Call @link NXOpen::Update::DoUpdate NXOpen::Update::DoUpdate@endlink  after clearing violations. 
             <br>  @deprecated Deprecated in NX12.0.0.  Use @link NXOpen::Routing::CustomManager::DesignRule NXOpen::Routing::CustomManager::DesignRule@endlink  instead. <br>  

             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Use NXOpen::Routing::CustomManager::DesignRule instead.") void ClearViolationOnObject
            (
                NXOpen::NXObject * objectToCheck /** objecttocheck */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
