#ifndef NXOpen_TOOLING_COOLINGPATTERNBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_COOLINGPATTERNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_CoolingPatternBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class CoolingPatternBuilder;
    }
    class Builder;
    class Expression;
    class Section;
    namespace Tooling
    {
        class _CoolingPatternBuilderBuilder;
        class CoolingPatternBuilderImpl;
        /**The builder class for Cooling pattern which assists you
               to create channels with selected curves. <br> To create a new instance of this class, use @link NXOpen::Tooling::CoolingPatternCollection::CreateCoolingPatternBuilder  NXOpen::Tooling::CoolingPatternCollection::CreateCoolingPatternBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Diameter.Value </td> <td> 
         
        10 (millimeters part), 0.375 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  CoolingPatternBuilder : public NXOpen::Builder
        {
            private: CoolingPatternBuilderImpl * m_coolingpatternbuilder_impl;
            private: friend class  _CoolingPatternBuilderBuilder;
            protected: CoolingPatternBuilder();
            public: ~CoolingPatternBuilder();
            /**Returns  the lines used to create the channel path. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ChannelGuide
            (
            );
            /**Returns  the channel diameter 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Diameter
            (
            );
            /**Returns  the channel diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double ChannelDiameter
            (
            );
            /**Sets  the channel diameter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetChannelDiameter
            (
                double channelDiameter /** channeldiameter */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
