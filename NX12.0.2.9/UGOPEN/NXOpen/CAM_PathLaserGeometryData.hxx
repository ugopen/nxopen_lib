#ifndef NXOpen_CAM_PATHLASERGEOMETRYDATA_HXX_INCLUDED
#define NXOpen_CAM_PATHLASERGEOMETRYDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PathLaserGeometryData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PathLaserGeometryData;
    }
    class TaggedObject;
    namespace CAM
    {
        class PathLaserGeometryDataImpl;
        /** Definition for Laser geometry data 
         <br>  Created in NX9.0.3.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PathLaserGeometryData : public NXOpen::TransientObject
        {
            private: PathLaserGeometryDataImpl * m_pathlasergeometrydata_impl;
            /// \cond NX_NO_DOC 
            public: explicit PathLaserGeometryData(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: virtual ~PathLaserGeometryData();
            /** Get the in process bodies @return  
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetInProcessBodies
            (
            );
            /** Get the am feature body  @return  
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * GetAmFeatureBody
            (
            );
            /** Get the number of in process bodies @return  
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: int GetNumberOfInProcessBodies
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
