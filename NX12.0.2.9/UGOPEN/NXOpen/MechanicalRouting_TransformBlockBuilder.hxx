#ifndef NXOpen_MECHANICALROUTING_TRANSFORMBLOCKBUILDER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_TRANSFORMBLOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_TransformBlockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_OrientXpressBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class TransformBlockBuilder;
    }
    class Builder;
    class Direction;
    namespace GeometricUtilities
    {
        class OrientXpressBuilder;
    }
    class Plane;
    class Point;
    namespace MechanicalRouting
    {
        class _TransformBlockBuilderBuilder;
        class TransformBlockBuilderImpl;
        /** Represents @link NXOpen::MechanicalRouting::TransformBlockBuilder NXOpen::MechanicalRouting::TransformBlockBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::MechanicalRouting::BuilderFactory::CreateTransformBlockBuilder  NXOpen::MechanicalRouting::BuilderFactory::CreateTransformBlockBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  TransformBlockBuilder : public NXOpen::Builder
        {
            /** Specifies the options available for transform. The available opitons are Manipulator, OrientXpress, View, Plane, Vector.
                    */
            public: enum Transformtype
            {
                TransformtypeNone/** none */  = -1,
                TransformtypeOrientXpress/** OrientXpress allows you to move a point constrained to a coordinate axis or plane in wcs. */,
                TransformtypeVector/** Vector allows you to move a point constrained to a specified direction. */,
                TransformtypeView/** View allows you to move a point constrained to a plane, normal to the view. */,
                TransformtypeManipulator/** Manipulator allows you to move a point dynamically to any location in wcs. */,
                TransformtypePlane/** Plane allows you to move a point constrained to a specified plane. */
            };

            private: TransformBlockBuilderImpl * m_transformblockbuilder_impl;
            private: friend class  _TransformBlockBuilderBuilder;
            protected: TransformBlockBuilder();
            public: ~TransformBlockBuilder();
            /**Returns  the transform type setting.
                        Allows you to specify the type of tool to be used for transform. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::MechanicalRouting::TransformBlockBuilder::Transformtype ActiveTransformType
            (
            );
            /**Sets  the transform type setting.
                        Allows you to specify the type of tool to be used for transform. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetActiveTransformType
            (
                NXOpen::MechanicalRouting::TransformBlockBuilder::Transformtype transformType /** transformtype */ 
            );
            /**Returns  the orient express setting.
                        Allows you to access the orient express object. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::GeometricUtilities::OrientXpressBuilder * OrientExpress
            (
            );
            /**Returns  the plane setting.
                        Allows you to specify the constraint plane. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the plane setting.
                        Allows you to specify the constraint plane. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the vector setting.
                        Allows you to specify the constraint direction. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector setting.
                        Allows you to specify the constraint direction. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the constrained point setting.
                        Allows you to specify the constrained point. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point * ConstrainedPoint
            (
            );
            /**Sets  the constrained point setting.
                        Allows you to specify the constrained point. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetConstrainedPoint
            (
                NXOpen::Point * constrainedPoint /** constrainedpoint */ 
            );
            /**Returns  the initial position setting.
                        Allows you to specify start point for the transform tool. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point3d InitialPosition
            (
            );
            /**Sets  the initial position setting.
                        Allows you to specify start point for the transform tool. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetInitialPosition
            (
                const NXOpen::Point3d & initialPosition /** initialposition */ 
            );
            /**Returns  the initial orientation setting.
                        Allows you to specify initial orientation for the transform tools. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Matrix3x3 InitialOrientation
            (
            );
            /**Sets  the initial orientation setting.
                        Allows you to specify initial orientation for the transform tools. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetInitialOrientation
            (
                const NXOpen::Matrix3x3 & initialOrientation /** initialorientation */ 
            );
            /**Returns  the temp position setting.
                        Allows you to specify final position for the transform tool. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Point3d TempPosition
            (
            );
            /**Sets  the temp position setting.
                        Allows you to specify final position for the transform tool. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTempPosition
            (
                const NXOpen::Point3d & tmepPosition /** tmepposition */ 
            );
            /**Returns  the temp orientation setting.
                        Allows you to specify final orientation for the transform tools. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Matrix3x3 TempOrientation
            (
            );
            /**Sets  the temp orientation setting.
                        Allows you to specify final orientation for the transform tools. 
                    
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetTempOrientation
            (
                const NXOpen::Matrix3x3 & tempOrientation /** temporientation */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
