#ifndef NXOpen_GEOMETRICUTILITIES_PLAYBUTTONSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PLAYBUTTONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PlayButtonsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PlayButtonsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _PlayButtonsBuilderBuilder;
        class PlayButtonsBuilderImpl;
        /** VCR buttons for any dialog that needs them 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PlayButtonsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** the different play modes available */
            public: enum PlayModeValues
            {
                PlayModeValuesPlayOnce/** play once */ ,
                PlayModeValuesLoopOver/** loop over */ ,
                PlayModeValuesRetrace/** retrace */ 
            };

            private: PlayButtonsBuilderImpl * m_playbuttonsbuilder_impl;
            private: friend class  _PlayButtonsBuilderBuilder;
            protected: PlayButtonsBuilder();
            public: ~PlayButtonsBuilder();
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void Stop
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void RewindToStart
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void StepBackward
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void PlayBackward
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void PlayForward
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void StepForward
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ForwardToEnd
            (
            );
            /**Returns  the play modes 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PlayButtonsBuilder::PlayModeValues PlayModes
            (
            );
            /**Sets  the play modes 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPlayModes
            (
                NXOpen::GeometricUtilities::PlayButtonsBuilder::PlayModeValues playModes /** playmodes */ 
            );
            /**Returns  the step 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int CurrentStep
            (
            );
            /**Sets  the step 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurrentStep
            (
                int currentStep /** currentstep */ 
            );
            /**Returns  the scale step 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double ScaleStep
            (
            );
            /**Sets  the scale step 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetScaleStep
            (
                double scaleStep /** scalestep */ 
            );
            /**Returns  the speed 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double Speed
            (
            );
            /**Sets  the speed 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSpeed
            (
                double speed /** speed */ 
            );
            /**Returns  the scale speed 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double ScaleSpeed
            (
            );
            /**Sets  the scale speed 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetScaleSpeed
            (
                double scaleSpeed /** scalespeed */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
