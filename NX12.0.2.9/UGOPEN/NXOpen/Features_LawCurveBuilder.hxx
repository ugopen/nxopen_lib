#ifndef NXOpen_FEATURES_LAWCURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_LAWCURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_LawCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_LawBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class LawCurveBuilder;
    }
    class CoordinateSystem;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class LawBuilder;
    }
    namespace Features
    {
        class _LawCurveBuilderBuilder;
        class LawCurveBuilderImpl;
        /**
            Represents a @link NXOpen::Features::LawCurve NXOpen::Features::LawCurve@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateLawCurveBuilder  NXOpen::Features::FeatureCollection::CreateLawCurveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        XLaw.Function </td> <td> 
         
        xt </td> </tr> 

        <tr><td> 
         
        XLaw.LawType </td> <td> 
         
        ByEquation </td> </tr> 

        <tr><td> 
         
        XLaw.Parameter </td> <td> 
         
        t </td> </tr> 

        <tr><td> 
         
        YLaw.Function </td> <td> 
         
        yt </td> </tr> 

        <tr><td> 
         
        YLaw.LawType </td> <td> 
         
        ByEquation </td> </tr> 

        <tr><td> 
         
        ZLaw.Function </td> <td> 
         
        zt </td> </tr> 

        <tr><td> 
         
        ZLaw.LawType </td> <td> 
         
        ByEquation </td> </tr> 

        </table>  

         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  LawCurveBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: LawCurveBuilderImpl * m_lawcurvebuilder_impl;
            private: friend class  _LawCurveBuilderBuilder;
            protected: LawCurveBuilder();
            public: ~LawCurveBuilder();
            /**Returns  the x law 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::LawBuilder * XLaw
            (
            );
            /**Returns  the y law 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::LawBuilder * YLaw
            (
            );
            /**Returns  the z law 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::LawBuilder * ZLaw
            (
            );
            /**Returns  the coordinate system 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * CoordinateSystem
            (
            );
            /**Sets  the coordinate system 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCoordinateSystem
            (
                NXOpen::CoordinateSystem * coordinateSystem /** coordinatesystem */ 
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
