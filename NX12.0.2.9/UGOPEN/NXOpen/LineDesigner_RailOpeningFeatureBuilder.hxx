#ifndef NXOpen_LINEDESIGNER_RAILOPENINGFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_RAILOPENINGFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_RailOpeningFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class RailOpeningFeatureBuilder;
    }
    class Builder;
    class Direction;
    class Expression;
    namespace Features
    {
        class Feature;
    }
    class Point;
    namespace LineDesigner
    {
        class _RailOpeningFeatureBuilderBuilder;
        class RailOpeningFeatureBuilderImpl;
        /**
            Represents a @link LineDesigner::RailOpeningFeature LineDesigner::RailOpeningFeature@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateRailOpeningFeatureBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateRailOpeningFeatureBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        LinearDimElevation.Value </td> <td> 
         
        650 (millimeters part), 25.6 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimGateThickness.Value </td> <td> 
         
        37.5 (millimeters part), 1.5 (inches part) </td> </tr> 

        <tr><td> 
         
        LinearDimOpeningWidth.Value </td> <td> 
         
        350 (millimeters part), 14 (inches part) </td> </tr> 

        <tr><td> 
         
        OpeningAddGate </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        OpeningStyleEnum </td> <td> 
         
        Left </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  RailOpeningFeatureBuilder : public NXOpen::Builder
        {
            /**  This enum is providing possible gate opening styles*/
            public: enum GateOpeningStyle
            {
                GateOpeningStyleLeft/** left */ ,
                GateOpeningStyleMiddle/** middle */ ,
                GateOpeningStyleRight/** right */ 
            };

            private: RailOpeningFeatureBuilderImpl * m_railopeningfeaturebuilder_impl;
            private: friend class  _RailOpeningFeatureBuilderBuilder;
            protected: RailOpeningFeatureBuilder();
            public: ~RailOpeningFeatureBuilder();
            /**Returns  the selected point of rail opening feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the selected point of rail opening feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetSelectPoint
            (
                NXOpen::Point * selectPoint /** selectpoint */ 
            );
            /** Direction of rail opening  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Direction * GetDirVector
            (
            );
            /**      
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetDirVector
            (
                NXOpen::Direction * dirVector /** dirvector */ 
            );
            /**Returns  the rail opening width 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimOpeningWidth
            (
            );
            /**Returns  the opening add gate is return
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool OpeningAddGate
            (
            );
            /**Sets  the opening add gate is return
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetOpeningAddGate
            (
                bool openingAddGate /** openingaddgate */ 
            );
            /**Returns  the rail opening style enum 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::RailOpeningFeatureBuilder::GateOpeningStyle OpeningStyleEnum
            (
            );
            /**Sets  the rail opening style enum 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetOpeningStyleEnum
            (
                NXOpen::LineDesigner::RailOpeningFeatureBuilder::GateOpeningStyle openingStyleEnum /** openingstyleenum */ 
            );
            /**Returns  the rail opening elevation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimElevation
            (
            );
            /**Returns  the gate thickness 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * LinearDimGateThickness
            (
            );
            /**     
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetRailingFeature
            (
                NXOpen::Features::Feature * railingFrec /** railingfrec */ 
            );
            /**Returns  the reverse direction of rail opening 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse direction of rail opening 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** reversedirection */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
