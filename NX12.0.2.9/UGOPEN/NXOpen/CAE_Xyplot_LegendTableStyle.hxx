#ifndef NXOpen_CAE_XYPLOT_LEGENDTABLESTYLE_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_LEGENDTABLESTYLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_LegendTableStyle.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_XyplotDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_CurveDisplaySettings.hxx>
#include <NXOpen/CAE_Xyplot_LegendTableTextStyle.hxx>
#include <NXOpen/CAE_Xyplot_BaseDisplayStyleSetting.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class LegendTableStyle;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseDisplayStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class CurveDisplaySettings;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class LegendTableTextStyle;
        }
    }
    class NXColor;
    namespace CAE
    {
        namespace Xyplot
        {
            class _LegendTableStyleBuilder;
            class LegendTableStyleImpl;
            /** Manages the legend table styles.  <br> Not support KF.  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LegendTableStyle : public NXOpen::CAE::Xyplot::BaseDisplayStyleSetting
            {
                private: LegendTableStyleImpl * m_legendtablestyle_impl;
                private: friend class  _LegendTableStyleBuilder;
                protected: LegendTableStyle();
                public: ~LegendTableStyle();
                /** Gets the legend table style type  @return  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::LegendTablePositionType GetPositionType
                (
                );
                /** Gets the text style.  @return  Text display style 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::LegendTableTextStyle * GetTextStyle
                (
                );
                /** Gets the grid line style.  @return  Grid Line style 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::CurveDisplaySettings * GetGridLineStyle
                (
                );
                /** Gets the border line style.  @return  Border Line style 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::CurveDisplaySettings * GetBorderLineStyle
                (
                );
                /**Returns  the legend table header background color 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * BackgroundColor
                (
                );
                /**Sets  the legend table header background color 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBackgroundColor
                (
                    NXOpen::NXColor * backgroundColor /** backgroundcolor */ 
                );
                /**Returns  the legend table header visibility
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsHeaderVisible
                (
                );
                /**Sets  the legend table header visibility
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetHeaderVisible
                (
                    bool isHeaderVisible /** isheadervisible */ 
                );
                /**Gets the legend table column titles 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetColumnTitles
                (
                    std::vector<NXString> & columnTitles /** column titles*/
                );
                /**Sets the legend table column titles 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetColumnTitles
                (
                    std::vector<NXString> & columnTitles /** column titles*/
                );
                /**Returns  the maximum displayable functions count on legend table page 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaximumLegendItemCount
                (
                );
                /**Sets  the maximum displayable functions count on legend table page 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMaximumLegendItemCount
                (
                    int maxLegendItemCount /** maxlegenditemcount */ 
                );
                /**Returns  the grid background color 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * GridBackgroundColor
                (
                );
                /**Sets  the grid background color 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetGridBackgroundColor
                (
                    NXOpen::NXColor * gridBackgroundColor /** gridbackgroundcolor */ 
                );
                /**Returns  the grid line visibility 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsGridLineVisible
                (
                );
                /**Sets  the grid line visibility 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetGridLineVisible
                (
                    bool isGridLineVisible /** isgridlinevisible */ 
                );
                /**Returns  the border line visibility 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsBorderLineVisible
                (
                );
                /**Sets  the border line visibility 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBorderLineVisible
                (
                    bool isBorderLineVisible /** isborderlinevisible */ 
                );
                /**Returns  the value of controlling whether the grid background is filled 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsGridBackgroundFilled
                (
                );
                /**Sets  the value of controlling whether the grid background is filled 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetGridBackgroundFilled
                (
                    bool isGridBackgroundFilled /** isgridbackgroundfilled */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
