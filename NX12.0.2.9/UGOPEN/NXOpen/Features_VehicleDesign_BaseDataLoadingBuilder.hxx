#ifndef NXOpen_FEATURES_VEHICLEDESIGN_BASEDATALOADINGBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_BASEDATALOADINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_BaseDataLoadingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_VehicleDesign_BaseDataLoadingWheelBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataLoadingBuilder;
        }
    }
    class Builder;
    class DatumPlane;
    namespace Features
    {
        namespace VehicleDesign
        {
            class BaseDataLoadingWheelBuilder;
        }
    }
    class NXColor;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _BaseDataLoadingBuilderBuilder;
            class BaseDataLoadingBuilderImpl;
            /** Represents a @link NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder@endlink .  <br> An instance of this class can be obtained from @link BaseDataBuilder::CreateLoading BaseDataBuilder::CreateLoading@endlink   <br> 
             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  BaseDataLoadingBuilder : public NXOpen::Builder
            {
                /** This enum represents the vehicle loading types. */
                public: enum LoadingType
                {
                    LoadingTypeStandard/** Standard - Defined in the registration file, user can not delete it. */,
                    LoadingTypeUserDefined/** User-Defined - user can add or delete it. */
                };

                private: BaseDataLoadingBuilderImpl * m_basedataloadingbuilder_impl;
                private: friend class  _BaseDataLoadingBuilderBuilder;
                protected: BaseDataLoadingBuilder();
                public: ~BaseDataLoadingBuilder();
                /** Assigns value from another loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Assign
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder * other /** other */ 
                );
                /**Returns  the vehicle loading type. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder::LoadingType Type
                (
                );
                /**Sets  the vehicle loading type. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetType
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingBuilder::LoadingType loadingType /** loadingtype */ 
                );
                /**Returns  the status to indicate whether the loading is active or not. If it is true, the loading is active. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool Active
                (
                );
                /**Sets  the status to indicate whether the loading is active or not. If it is true, the loading is active. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetActive
                (
                    bool active /** active */ 
                );
                /**Returns  the name of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the name of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /**Returns  the Data Definition option of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingWheelBuilder::DataDefinitionOptions DataDefinition
                (
                );
                /**Sets  the Data Definition option of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDataDefinition
                (
                    NXOpen::Features::VehicleDesign::BaseDataLoadingWheelBuilder::DataDefinitionOptions dataDefinition /** datadefinition */ 
                );
                /**Returns  the front wheel data of this loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingWheelBuilder * FrontWheel
                (
                );
                /**Returns  the rear wheel data of this loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::BaseDataLoadingWheelBuilder * RearWheel
                (
                );
                /** Sets the reference plane to represent the loading plane. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetReferencePlane
                (
                    NXOpen::DatumPlane * referencePlane /** referenceplane */ 
                );
                /**Returns  the color of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * Color
                (
                );
                /**Sets  the color of loading. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetColor
                (
                    NXOpen::NXColor * color /** color */ 
                );
                /** Gets the loading descriptions.  @return  
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetDescription
                (
                );
                /** Sets the loading descriptions. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetDescription
                (
                    const std::vector<NXString> & description /** description */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
