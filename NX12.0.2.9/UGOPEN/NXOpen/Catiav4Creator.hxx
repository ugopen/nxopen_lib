#ifndef NXOpen_CATIAV4CREATOR_HXX_INCLUDED
#define NXOpen_CATIAV4CREATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Catiav4Creator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class Catiav4Creator;
    class Builder;
    class ObjectSelector;
    class _Catiav4CreatorBuilder;
    class Catiav4CreatorImpl;
    /**
        Represents a @link NXOpen::Catiav4Creator NXOpen::Catiav4Creator@endlink  to be used when exporting the CATIA V4 Data
        This class is created using @link NXOpen::DexManager NXOpen::DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateCatiav4Creator  NXOpen::DexManager::CreateCatiav4Creator @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    WriteSolidAs </td> <td> 
     
    VOLUMEs </td> </tr> 

    </table>  

     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  Catiav4Creator : public NXOpen::Builder
    {
        /** Options for outputing solid bodies to CATIA V4 */
        public: enum SolidBodyOutputOption
        {
            SolidBodyOutputOptionVOLUMEs/** output NX solid bodies as Volumes in CATIA */,
            SolidBodyOutputOptionSolide/** output NX solid bodies as SOLIDE in CATIA */
        };

        private: Catiav4CreatorImpl * m_catiav4creator_impl;
        private: friend class  _Catiav4CreatorBuilder;
        protected: Catiav4Creator();
        public: ~Catiav4Creator();
        /** The save settings - this will save the settings to a file sepcified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** The save settings - this will save the settings to a file sepcified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the export selection block - the object selection will be done by this block. 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectSelector * ExportSelectionBlock
        (
        );
        /**Returns  the output file - the exported data will be written to file specified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - the exported data will be written to file specified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - the exported data will be written to file specified 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the settings file - The definition file to read default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the write solid as - this will decide if solids should be written as SOLIDE or Volumes 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Catiav4Creator::SolidBodyOutputOption WriteSolidAs
        (
        );
        /**Sets  the write solid as - this will decide if solids should be written as SOLIDE or Volumes 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetWriteSolidAs
        (
            NXOpen::Catiav4Creator::SolidBodyOutputOption writeSolidAs /** writesolidas */ 
        );
        /**Returns  the file save flag - this should be set to false if doing File Export 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileSaveFlag
        (
        );
        /**Sets  the file save flag - this should be set to false if doing File Export 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileSaveFlag
        (
            bool doingFileSave /** doingfilesave */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
