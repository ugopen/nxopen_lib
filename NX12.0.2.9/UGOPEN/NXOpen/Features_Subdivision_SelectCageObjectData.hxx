#ifndef NXOpen_FEATURES_SUBDIVISION_SELECTCAGEOBJECTDATA_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SELECTCAGEOBJECTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SelectCageObjectData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    class SelectDisplayableObjectList;
    class View;
    namespace Features
    {
        namespace Subdivision
        {
            class _SelectCageObjectDataBuilder;
            class SelectCageObjectDataImpl;
            /** Represents subdivision cage topology object selection. 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SelectCageObjectData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
            {
                private: SelectCageObjectDataImpl * m_selectcageobjectdata_impl;
                private: friend class  _SelectCageObjectDataBuilder;
                protected: SelectCageObjectData();
                public: ~SelectCageObjectData();
                /**Returns  the object list. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * SelectionList
                (
                );
                /**Returns  the flag indicating if previously selected objects can be de-selected during selection of new objects. 
                 <br>  @deprecated Deprecated in NX11.0.0.  There is no replacement for this unused property. <br>  

                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX11.0.0.  There is no replacement for this unused property.") bool CanDeselectObjectsAutomatically
                (
                );
                /**Sets  the flag indicating if previously selected objects can be de-selected during selection of new objects. 
                 <br>  @deprecated Deprecated in NX11.0.0.  There is no replacement for this unused property. <br>  

                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: NX_DEPRECATED("Deprecated in NX11.0.0.  There is no replacement for this unused property.") void SetCanDeselectObjectsAutomatically
                (
                    bool canDeselect /** candeselect */ 
                );
                /** Clears the currently present objects and adds new objects. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void ClearAndAdd
                (
                    const std::vector<NXOpen::NXObject *> & objects /** Objects to process. */,
                    NXOpen::View * view /** Selected object view when selecting a single object. */,
                    const NXOpen::Point3d & point /** Selected object point when selecting a single object. */
                );
                /** Sets the cursor location in absolute coordinates. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetCursorLocation
                (
                    const NXOpen::Point3d & point /** point */ 
                );
                /** Sets the view direction. 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetViewDirection
                (
                    const NXOpen::Vector3d & direction /** direction */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
