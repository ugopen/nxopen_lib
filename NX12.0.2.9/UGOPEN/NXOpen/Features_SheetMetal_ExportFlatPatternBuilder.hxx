#ifndef NXOpen_FEATURES_SHEETMETAL_EXPORTFLATPATTERNBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_EXPORTFLATPATTERNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_ExportFlatPatternBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class ExportFlatPatternBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        class SelectFlatPattern;
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class _ExportFlatPatternBuilderBuilder;
            class ExportFlatPatternBuilderImpl;
            /** Represents a Export flat pattern builder.  <br> To create a new instance of this class, use @link NXOpen::Features::SheetMetal::SheetmetalManager::CreateExportFlatPatternBuilder  NXOpen::Features::SheetMetal::SheetmetalManager::CreateExportFlatPatternBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AddedBottom </td> <td> 
             
            false </td> </tr> 

            <tr><td> 
             
            AddedTop </td> <td> 
             
            false </td> </tr> 

            <tr><td> 
             
            BendDown </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            BendTangent </td> <td> 
             
            false </td> </tr> 

            <tr><td> 
             
            BendUp </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            InteriorCutout </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            InteriorFeature </td> <td> 
             
            false </td> </tr> 

            </table>  

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ExportFlatPatternBuilder : public NXOpen::Builder
            {
                /** Specifies the flat pattern export type */
                public: enum FileType
                {
                    FileTypeDxf/** DXF Export */,
                    FileTypeTrumpfGeo/** Trumpf Geo Export */
                };

                /** Specifies the DXF Revisions for flat pattern export  */
                public: enum DxfRevisionType
                {
                    DxfRevisionTypeR2005/** r2005 */ ,
                    DxfRevisionTypeR2004/** r2004 */ ,
                    DxfRevisionTypeR2000/** r2000 */ ,
                    DxfRevisionTypeR14/** r14 */ ,
                    DxfRevisionTypeR2007/** r2007 */ ,
                    DxfRevisionTypeR20102012/** r20102012 */ ,
                    DxfRevisionTypeR20132016/** r20132016 */ ,
                    DxfRevisionTypeR12/** r12 */ ,
                    DxfRevisionTypeR13/** r13 */ 
                };

                private: ExportFlatPatternBuilderImpl * m_exportflatpatternbuilder_impl;
                private: friend class  _ExportFlatPatternBuilderBuilder;
                protected: ExportFlatPatternBuilder();
                public: ~ExportFlatPatternBuilder();
                /**Returns  the output file used to export flat pattern curves 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString OutputFile
                (
                );
                /**Sets  the output file used to export flat pattern curves 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetOutputFile
                (
                    const NXString & filename /** filename */ 
                );
                /**Sets  the output file used to export flat pattern curves 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                void SetOutputFile
                (
                    const char * filename /** filename */ 
                );
                /**Returns  the flat pattern feature 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectFlatPattern * FlatPattern
                (
                );
                /**Returns  the deviational tolerance 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double DeviationalTolerance
                (
                );
                /**Sets  the deviational tolerance 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetDeviationalTolerance
                (
                    double deviationalTolerance /** deviationaltolerance */ 
                );
                /**Returns  the option to export the bend up center line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BendUp
                (
                );
                /**Sets  the option to export the bend up center line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetBendUp
                (
                    bool bendUp /** bendup */ 
                );
                /**Returns  the option to export the bend down center line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BendDown
                (
                );
                /**Sets  the option to export the bend down center line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetBendDown
                (
                    bool bendDown /** benddown */ 
                );
                /**Returns  the option to export the bend tangent line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool BendTangent
                (
                );
                /**Sets  the option to export the bend tangent line 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetBendTangent
                (
                    bool bendTangent /** bendtangent */ 
                );
                /**Returns  the option to export the interior cutout 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool InteriorCutout
                (
                );
                /**Sets  the option to export the interior cutout 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetInteriorCutout
                (
                    bool interiorCutout /** interiorcutout */ 
                );
                /**Returns  the option to export the interior feature 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool InteriorFeature
                (
                );
                /**Sets  the option to export the interior feature 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetInteriorFeature
                (
                    bool interiorFeature /** interiorfeature */ 
                );
                /**Returns  the option to export the added top geometry 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool AddedTop
                (
                );
                /**Sets  the option to export the added top geometry 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetAddedTop
                (
                    bool addedTop /** addedtop */ 
                );
                /**Returns  the option to export the added bottom geometry 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool AddedBottom
                (
                );
                /**Sets  the option to export the added bottom geometry 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetAddedBottom
                (
                    bool addedBottom /** addedbottom */ 
                );
                /**Returns  the option to export the outer mold 
                             <br> 
                                Use this option only for the DXF type.
                             <br> 
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool OuterMold
                (
                );
                /**Sets  the option to export the outer mold 
                             <br> 
                                Use this option only for the DXF type.
                             <br> 
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetOuterMold
                (
                    bool outerMold /** outermold */ 
                );
                /**Returns  the option to export the inner mold 
                             <br> 
                                Use this option only for the DXF type.
                             <br> 
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool InnerMold
                (
                );
                /**Sets  the option to export the inner mold 
                             <br> 
                                Use this option only for the DXF type.
                             <br> 
                        
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetInnerMold
                (
                    bool innerMold /** innermold */ 
                );
                /**Returns  the dxf revision. The options are in @link NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType@endlink .
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType DxfRevision
                (
                );
                /**Sets  the dxf revision. The options are in @link NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType@endlink .
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetDxfRevision
                (
                    NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::DxfRevisionType dxfRevision /** dxfrevision */ 
                );
                /**Returns  the type for the flat pattern export.The options are in @link NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::Type NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::Type@endlink . 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::FileType Type
                (
                );
                /**Sets  the type for the flat pattern export.The options are in @link NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::Type NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::Type@endlink . 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_sheet_metal ("NX Sheet Metal") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetType
                (
                    NXOpen::Features::SheetMetal::ExportFlatPatternBuilder::FileType type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
