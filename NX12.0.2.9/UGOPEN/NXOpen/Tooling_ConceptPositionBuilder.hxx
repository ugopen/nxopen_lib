#ifndef NXOpen_TOOLING_CONCEPTPOSITIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CONCEPTPOSITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ConceptPositionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/Tooling_ConceptStandardPartRecord.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ConceptPositionBuilder;
    }
    class Builder;
    class NXObject;
    class Point;
    class Section;
    namespace Tooling
    {
        class ConceptStandardPartRecord;
    }
    namespace Tooling
    {
        class _ConceptPositionBuilderBuilder;
        class ConceptPositionBuilderImpl;
        /** concept position builder for standard part design  <br> To create a new instance of this class, use @link NXOpen::Tooling::ConceptPositionCollection::CreateConceptPositionBuilder  NXOpen::Tooling::ConceptPositionCollection::CreateConceptPositionBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ConceptPositionBuilder : public NXOpen::Builder
        {
            private: ConceptPositionBuilderImpl * m_conceptpositionbuilder_impl;
            private: friend class  _ConceptPositionBuilderBuilder;
            protected: ConceptPositionBuilder();
            public: ~ConceptPositionBuilder();
            /**Returns  the located point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * LocatedPoint
            (
            );
            /**Sets  the located point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLocatedPoint
            (
                NXOpen::Point * locatedPoint /** locatedpoint */ 
            );
            /**Returns  the part position section 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * PartPosition
            (
            );
            /** Gets attribute data  @return  Concept standard part record with attributes 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::ConceptStandardPartRecord * GetAttributeData
            (
            );
            /** Sets attribute data 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void SetAttributeData
            (
                NXOpen::Tooling::ConceptStandardPartRecord * conceptRecord /** Concept standard part record with attributes */
            );
            /** Gets points where concept objects are inserted  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: void GetSelectedPoints
            (
                std::vector<NXOpen::Point *> & selectedPoints /** Points where concept objects are inserted */
            );
            /** Adds a point where a symbol is inserted  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void AddToSelectedPoints
            (
                NXOpen::Point * point /** The point where a symbol is inserted */
            );
            /** Insert a symbol at the specified point location 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: void InsertSymbol
            (
                NXOpen::Point * attachPoint /** The point where a symbol is inserted */
            );
            /** Creates points or inserts symbol as concept positioning object.  @return  the created concept points 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR ug_die_design ("Die Design") */
            public: std::vector<NXOpen::Point *> AddLinkFeature
            (
                NXOpen::NXObject * sketch /** The sketch where concept object locating points are created */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
