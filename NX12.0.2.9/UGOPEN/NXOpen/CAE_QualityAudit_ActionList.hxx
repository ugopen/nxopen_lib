#ifndef NXOpen_CAE_QUALITYAUDIT_ACTIONLIST_HXX_INCLUDED
#define NXOpen_CAE_QUALITYAUDIT_ACTIONLIST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_QualityAudit_ActionList.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_QualityAudit_Action.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace QualityAudit
        {
            class ActionList;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class Action;
        }
    }
    class NXObject;
    namespace CAE
    {
        namespace QualityAudit
        {
            class _ActionListBuilder;
            class ActionListImpl;
            /**  @brief  The Quality Audit ActionList class offers means to select, deselect, obtain @link NXOpen::CAE::QualityAudit::Action NXOpen::CAE::QualityAudit::Action@endlink  instances. 

               <br> To obtain the instance of this class access @link CAE::QualityAudit::Manager::ActionList CAE::QualityAudit::Manager::ActionList@endlink  of  @link CAE::QualityAudit::Manager CAE::QualityAudit::Manager@endlink .  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ActionList : public NXOpen::NXObject
            {
                private: ActionListImpl * m_actionlist_impl;
                private: friend class  _ActionListBuilder;
                protected: ActionList();
                public: ~ActionList();
                /** Get the action by id. See @link NXOpen::CAE::QualityAudit::Action::Id NXOpen::CAE::QualityAudit::Action::Id@endlink  for full the list of actions.
                              @return  Corresponding action 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::QualityAudit::Action * GetAction
                (
                    NXOpen::CAE::QualityAudit::Action::Id id /** Action id. See @link NXOpen::CAE::QualityAudit::Action::Id NXOpen::CAE::QualityAudit::Action::Id@endlink  */
                );
                /** Select all the actions available.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SelectAll
                (
                );
                /** Deselect all available actions.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void DeselectAll
                (
                );
                /** Tells if the action is to be used in the quality audit.
                              @return  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsSelected
                (
                    NXOpen::CAE::QualityAudit::Action * pAction /** The action to be checked if selected or not */
                );
                /** Select the specified action to be used in the quality audit.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void Select
                (
                    NXOpen::CAE::QualityAudit::Action * pAction /** The action to be selected */
                );
                /** Deselect the specified action to avoid using it in the quality audit.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void Deselect
                (
                    NXOpen::CAE::QualityAudit::Action * pAction /** The action to be deselected */
                );
                /** Returns an array of all selected actions.
                              @return  The selected actions 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::QualityAudit::Action *> GetSelectedActions
                (
                );
                /** Import action settings from file
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void LoadActionSettings
                (
                    const NXString & actionConfigFile /** actionconfigfile */ 
                );
                /** Import action settings from file
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                void LoadActionSettings
                (
                    const char * actionConfigFile /** actionconfigfile */ 
                );
                /** Export action settings to file
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SaveActionSettings
                (
                    const NXString & actionConfigFile /** actionconfigfile */ 
                );
                /** Export action settings to file
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                void SaveActionSettings
                (
                    const char * actionConfigFile /** actionconfigfile */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
