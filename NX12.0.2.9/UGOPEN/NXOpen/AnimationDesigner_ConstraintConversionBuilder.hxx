#ifndef NXOpen_ANIMATIONDESIGNER_CONSTRAINTCONVERSIONBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_CONSTRAINTCONVERSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_ConstraintConversionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class ConstraintConversionBuilder;
    }
    class Builder;
    class NXObject;
    namespace AnimationDesigner
    {
        class _ConstraintConversionBuilderBuilder;
        class ConstraintConversionBuilderImpl;
        /** Represents a @link AnimationDesigner::ConstraintConversionBuilder AnimationDesigner::ConstraintConversionBuilder@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::AnimationDesignerManager::CreateConstraintConversionBuilder  NXOpen::AnimationDesigner::AnimationDesignerManager::CreateConstraintConversionBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  ConstraintConversionBuilder : public NXOpen::Builder
        {
            private: ConstraintConversionBuilderImpl * m_constraintconversionbuilder_impl;
            private: friend class  _ConstraintConversionBuilderBuilder;
            protected: ConstraintConversionBuilder();
            public: ~ConstraintConversionBuilder();
            /**  @brief  Tentatively convert assembly constraints.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void TentativelyConvert
            (
            );
            /**  @brief  Returns the tentatively converting physics objects.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void GetTentativePhysics
            (
                std::vector<NXOpen::NXObject *> & physics /** physics */ 
            );
            /**  @brief  Enables the conversion of objects. If it is impossible, the objects will keep unable status.  

              
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void EnableObjectsConversion
            (
                const std::vector<NXOpen::NXObject *> & physics /** physics */ ,
                bool enable /** enable */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
