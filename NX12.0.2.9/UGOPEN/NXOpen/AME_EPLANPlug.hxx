#ifndef NXOpen_AME_EPLANPLUG_HXX_INCLUDED
#define NXOpen_AME_EPLANPLUG_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_EPLANPlug.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AMEExtendedObject.hxx>
#include <NXOpen/AME_IPort.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class EPLANPlug;
    }
    namespace AME
    {
        class AMEExtendedObject;
    }
    namespace AME
    {
        class IPort;
    }
    class Expression;
    namespace AME
    {
        class _EPLANPlugBuilder;
        class EPLANPlugImpl;
        /** Represents EPLANPlug  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  EPLANPlug : public NXOpen::AME::AMEExtendedObject, public virtual NXOpen::AME::IPort
        {
            private: EPLANPlugImpl * m_eplanplug_impl;
            private: friend class  _EPLANPlugBuilder;
            protected: EPLANPlug();
            public: ~EPLANPlug();
            /** Disconnets lhs from rhs port 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: virtual void Disconnect
            (
                NXOpen::AME::IPort * rhs /** rhs */ 
            );
            /** Disconnects given port 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: virtual void Disconnect
            (
                bool keepUnmanaged /** keepunmanaged */ 
            );
            /** Connect given ports via expression 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: virtual void ConnectViaExpression
            (
                NXOpen::Expression * exp /** exp */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
