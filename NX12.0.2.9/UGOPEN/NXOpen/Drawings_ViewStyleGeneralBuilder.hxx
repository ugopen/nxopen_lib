#ifndef NXOpen_DRAWINGS_VIEWSTYLEGENERALBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWSTYLEGENERALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewStyleGeneralBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_AssociativeAngleBuilder.hxx>
#include <NXOpen/Drawings_ViewScaleBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class ViewStyleGeneralBuilder;
    }
    namespace Drawings
    {
        class AssociativeAngleBuilder;
    }
    namespace Drawings
    {
        class RenderSet;
    }
    namespace Drawings
    {
        class ViewScaleBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Drawings
    {
        class _ViewStyleGeneralBuilderBuilder;
        class ViewStyleGeneralBuilderImpl;
        /** Represents view style general builder (Drawings.ViewStyleGeneralBuilder) which manages all the general
            *   attributes which are necessary for all the views.
            *   To obtain an instance of the class, we need to follow the steps: creat a new view, click the view style
            *   button on the view dialog, edit the view style general tab.
            
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  ViewStyleGeneralBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: ViewStyleGeneralBuilderImpl * m_viewstylegeneralbuilder_impl;
            private: friend class  _ViewStyleGeneralBuilderBuilder;
            protected: ViewStyleGeneralBuilder();
            public: ~ViewStyleGeneralBuilder();
            /**Returns  the silhouettes toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Silhouettes
            (
            );
            /**Sets  the silhouettes toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSilhouettes
            (
                bool silhouettesToggle /** Sets a new silhouettes toggle value on the general sub-builder */
            );
            /**Returns  the reference toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Reference
            (
            );
            /**Sets  the reference toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetReference
            (
                bool referenceToggle /** Sets a new reference toggle value on the general sub-builder */
            );
            /**Returns  the uvgrid toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool UVGrid
            (
            );
            /**Sets  the uvgrid toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetUVGrid
            (
                bool uVGridToggle /** Sets a new uv-grid toggle value on the general sub-builder */
            );
            /**Returns  the automatic update toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticUpdate
            (
            );
            /**Sets  the automatic update toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticUpdate
            (
                bool automaticUpdateToggle /** Sets a new automatic update toggle value on the general sub-builder */
            );
            /**Returns  the automatic anchor point toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticAnchorPoint
            (
            );
            /**Sets  the automatic anchor point toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticAnchorPoint
            (
                bool automaticAnchorPointToggle /** Sets a new aautomatic anchor point toggle value on the general sub-builder */
            );
            /**Returns  the view label toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ViewLabel
            (
            );
            /**Sets  the view label toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetViewLabel
            (
                bool viewLabelToggle /** Sets a new view label toggle value on the general sub-builder */
            );
            /**Returns  the scale label toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ScaleLabel
            (
            );
            /**Sets  the scale label toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetScaleLabel
            (
                bool scaleLabelToggle /** Sets a new scale label toggle value on the general sub-builder */
            );
            /**Returns  the boundary status toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool BoundaryStatus
            (
            );
            /**Sets  the boundary status toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBoundaryStatus
            (
                bool boundaryStatusToggle /** Sets a new boundary status toggle value on the general sub-builder */
            );
            /**Returns  the centerlines toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Centerlines
            (
            );
            /**Sets  the centerlines toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCenterlines
            (
                bool centerlinesToggle /** Sets a new centerlines toggle value on the general sub-builder */
            );
            /**Returns  the tolerance option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralToleranceOption Tolerance
            (
            );
            /**Sets  the tolerance option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetTolerance
            (
                NXOpen::Preferences::GeneralToleranceOption toleranceOption /** Sets a new tolerance option on the general sub-builder */
            );
            /**Returns  the view representation option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralViewRepresentationOption ViewRepresentation
            (
            );
            /**Sets  the view representation option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetViewRepresentation
            (
                NXOpen::Preferences::GeneralViewRepresentationOption viewRepresentation /** Sets a new view representation option on the general sub-builder */
            );
            /**Returns  the view quality option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralViewQualityOption ViewQuality
            (
            );
            /**Sets  the view quality option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetViewQuality
            (
                NXOpen::Preferences::GeneralViewQualityOption viewQualityOption /** Sets a new view quality option on the general sub-builder */
            );
            /**Returns  the leagcy view toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool LegacyView
            (
            );
            /**Sets  the leagcy view toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLegacyView
            (
                bool legacyView /** Sets a legacy view toggle value on the general sub-builder */
            );
            /**Returns  the view representation enum on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool LightweightView
            (
            );
            /**Sets  the view representation enum on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLightweightView
            (
                bool lightweightView /** Sets a view representation option on the general sub-builder */
            );
            /**Returns  the snapshot toggle on the GENERAL tab of the View Style Dialog 
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::Drawings::ViewStyleGeneralBuilder::LockmethodView NXOpen::Drawings::ViewStyleGeneralBuilder::LockmethodView@endlink  instead(the value is NXOpen.Preferences.GeneralViewPreferences.GeneralViewLockmethodOptionSnapshot). <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::Drawings::ViewStyleGeneralBuilder::LockmethodView instead(the value is NXOpen.Preferences.GeneralViewPreferences.GeneralViewLockmethodOptionSnapshot).") bool SnapshotView
            (
            );
            /**Sets  the snapshot toggle on the GENERAL tab of the View Style Dialog 
             <br>  @deprecated Deprecated in NX11.0.1.  Use @link NXOpen::Drawings::ViewStyleGeneralBuilder::SetLockmethodView NXOpen::Drawings::ViewStyleGeneralBuilder::SetLockmethodView@endlink  instead(the value is NXOpen.Preferences.GeneralViewPreferences.GeneralViewLockmethodOptionSnapshot). <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX11.0.1.  Use NXOpen::Drawings::ViewStyleGeneralBuilder::SetLockmethodView instead(the value is NXOpen.Preferences.GeneralViewPreferences.GeneralViewLockmethodOptionSnapshot).") void SetSnapshotView
            (
                bool snapshotView /** Sets a snapshot view toggle value on the general sub-builder */
            );
            /**Returns  the lock method setting on the Configuration tab of the View Style Dialog 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralViewLockmethodOption LockmethodView
            (
            );
            /**Sets  the lock method setting on the Configuration tab of the View Style Dialog 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLockmethodView
            (
                NXOpen::Preferences::GeneralViewLockmethodOption lockMethodView /** Sets a lock method option on the general sub-builder */
            );
            /**Returns  the tolerance value on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double ToleranceValue
            (
            );
            /**Sets  the tolerance value on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetToleranceValue
            (
                double toleranceValue /** Sets a new tolerance value on the general sub-builder */
            );
            /**Returns  the angle value on the GENERAL tab of the View Style Dialog 
             <br>  @deprecated Deprecated in NX11.0.0.  Use @link NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting instead.") double AngleValue
            (
            );
            /**Sets  the angle value on the GENERAL tab of the View Style Dialog 
             <br>  @deprecated Deprecated in NX11.0.0.  Use @link NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting@endlink  instead. <br>  

             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NX_DEPRECATED("Deprecated in NX11.0.0.  Use NXOpen::Drawings::ViewStyleGeneralBuilder::AngleSetting instead.") void SetAngleValue
            (
                double angleValue /** Sets a new angle value on the general sub-builder */
            );
            /**Returns  the angle value on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::AssociativeAngleBuilder * AngleSetting
            (
            );
            /**Returns  the scale definition on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewScaleBuilder * Scale
            (
            );
            /** Gets the render sets on the GENERAL tab of the View Style Dialog  @return  Returns the render sets that are on the general sub-builder 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Drawings::RenderSet *> GetRenderSet
            (
            );
            /** Sets the render sets on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetRenderSet
            (
                const std::vector<NXOpen::Drawings::RenderSet *> & renderSets /** Sets new render sets on the general sub-builder */
            );
            /**Returns  the extracted edges option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralExtractedEdgesOption ExtractedEdges
            (
            );
            /**Sets  the extracted edges option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetExtractedEdges
            (
                NXOpen::Preferences::GeneralExtractedEdgesOption extractedEdgesOption /** Sets a new extracted edges option on the general sub-builder */
            );
            /**Returns  the wireframe color source option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralWireframeColorSourceOption WireframeColorSource
            (
            );
            /**Sets  the wireframe color source option on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetWireframeColorSource
            (
                NXOpen::Preferences::GeneralWireframeColorSourceOption wireframeColorSourceOption /** Sets a new wireframe color source option on the general sub-builder */
            );
            /**Returns  the display identifier option on the GENERAL tab of the View Style Dialog, it controls whether
                        the orientation or the name of the view is displayed in the graphic window
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::GeneralDisplayIdOption DisplayId
            (
            );
            /**Sets  the display identifier option on the GENERAL tab of the View Style Dialog, it controls whether
                        the orientation or the name of the view is displayed in the graphic window
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetDisplayId
            (
                NXOpen::Preferences::GeneralDisplayIdOption option /** Sets a new display id option on the general sub-builder */
            );
            /**Returns  the horizontal framebar toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool FramebarHorizontal
            (
            );
            /**Sets  the horizontal framebar toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetFramebarHorizontal
            (
                bool framebarHorizontalToggle /** Sets a new horizontal framebar toggle value on the general sub-builder */
            );
            /**Returns  the vertical framebar toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool FramebarVertical
            (
            );
            /**Sets  the vertical framebar toggle on the GENERAL tab of the View Style Dialog 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetFramebarVertical
            (
                bool framebarVerticalToggle /** Sets a new vertical framebar toggle value on the general sub-builder */
            );
            /**Returns  the precision to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int AnglePrecision
            (
            );
            /**Sets  the precision to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAnglePrecision
            (
                int anglePrecision /** angleprecision */ 
            );
            /**Returns  the format to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::AngleFormat AngleFormat
            (
            );
            /**Sets  the format to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAngleFormat
            (
                NXOpen::Preferences::AngleFormat angleFormat /** angleformat */ 
            );
            /**Returns  the status of leading zeros display in view angle. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool AngleShowLeadingZeros
            (
            );
            /**Sets  the status of leading zeros display in view angle. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAngleShowLeadingZeros
            (
                bool showLeadingZeros /** showleadingzeros */ 
            );
            /**Returns  the status of trailing zeros display in view angle. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool AngleShowTrailingZeros
            (
            );
            /**Sets  the status of trailing zeros display in view angle. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAngleShowTrailingZeros
            (
                bool showTrailingZeros /** showtrailingzeros */ 
            );
            /**Returns  the decimal point character to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::DecimalPointCharacter AngleDecimalPointCharacter
            (
            );
            /**Sets  the decimal point character to use for view angle display. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAngleDecimalPointCharacter
            (
                NXOpen::Preferences::DecimalPointCharacter decimalPointCharacter /** decimalpointcharacter */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
