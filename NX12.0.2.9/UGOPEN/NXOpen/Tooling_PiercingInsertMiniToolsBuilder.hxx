#ifndef NXOpen_TOOLING_PIERCINGINSERTMINITOOLSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_PIERCINGINSERTMINITOOLSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_PiercingInsertMiniToolsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class PiercingInsertMiniToolsBuilder;
    }
    class Builder;
    class SelectBodyList;
    class SelectFaceList;
    namespace Tooling
    {
        class _PiercingInsertMiniToolsBuilderBuilder;
        class PiercingInsertMiniToolsBuilderImpl;
        /** Represents piercing insert mini tools builder.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreatePiercingInsertMiniToolsBuilder  NXOpen::Tooling::ProgressiveDieManager::CreatePiercingInsertMiniToolsBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        AssociationTool </td> <td> 
         
        AddintoList </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  PiercingInsertMiniToolsBuilder : public NXOpen::Builder
        {
            /** Specifies the association tool operation option. */
            public: enum AssociationToolItems
            {
                AssociationToolItemsAddintoList/** addinto list */ ,
                AssociationToolItemsRemovefromList/** removefrom list */ 
            };

            private: PiercingInsertMiniToolsBuilderImpl * m_piercinginsertminitoolsbuilder_impl;
            private: friend class  _PiercingInsertMiniToolsBuilderBuilder;
            protected: PiercingInsertMiniToolsBuilder();
            public: ~PiercingInsertMiniToolsBuilder();
            /** Update piercing inserts position when clicking the update piercing inserts button 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void UpdatePosition
            (
            );
            /**Returns  the inserts to delete. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * InsertsToDelete
            (
            );
            /** Delete piercing inserts which are selected. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void DeletePiercingInsert
            (
            );
            /**Returns  the selection of the scrap to create association. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectAssociationScrap
            (
            );
            /**Returns  the selection of the inserts to create association. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectAssociationInsert
            (
            );
            /**Returns  the select scrap or insert for association update. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * SelectScrapOrInsert
            (
            );
            /**Returns  the association tool type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::PiercingInsertMiniToolsBuilder::AssociationToolItems AssociationTool
            (
            );
            /**Sets  the association tool type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetAssociationTool
            (
                NXOpen::Tooling::PiercingInsertMiniToolsBuilder::AssociationToolItems associationTool /** associationtool */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
