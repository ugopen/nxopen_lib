#ifndef NXOpen_CAE_MORPHREVOLVEDMESHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MORPHREVOLVEDMESHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MorphRevolvedMeshBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MorphRevolvedMeshBuilder;
    }
    class Axis;
    class Builder;
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    class Point;
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _MorphRevolvedMeshBuilderBuilder;
        class MorphRevolvedMeshBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::MorphRevolvedMeshBuilder NXOpen::CAE::MorphRevolvedMeshBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateMorphRevolvedMeshBuilder  NXOpen::CAE::NodeElementManager::CreateMorphRevolvedMeshBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MorphRevolvedMeshBuilder : public NXOpen::Builder
        {
            /** the type of curve to be used as reference curve for morphing */
            public: enum CurveType
            {
                CurveTypeEdgeCurve/** edge or curve */,
                CurveTypeLine/** line segment */
            };

            private: MorphRevolvedMeshBuilderImpl * m_morphrevolvedmeshbuilder_impl;
            private: friend class  _MorphRevolvedMeshBuilderBuilder;
            protected: MorphRevolvedMeshBuilder();
            public: ~MorphRevolvedMeshBuilder();
            /**Returns  the elements 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * Elements
            (
            );
            /**Returns  the axis of revolution 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Axis * Axis
            (
            );
            /**Sets  the axis of revolution 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetAxis
            (
                NXOpen::Axis * axis /** axis */ 
            );
            /**Returns  the source nodes 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * SourceNodes
            (
            );
            /**Returns  the fixed nodes 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectFENodeList * FixedNodes
            (
            );
            /**Returns  the curve type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::MorphRevolvedMeshBuilder::CurveType TargetCurveType
            (
            );
            /**Sets  the curve type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTargetCurveType
            (
                NXOpen::CAE::MorphRevolvedMeshBuilder::CurveType targetCurveType /** targetcurvetype */ 
            );
            /**Returns  the curve 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * TargetCurves
            (
            );
            /**Returns  the line start 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TargetLineStart
            (
            );
            /**Sets  the line start 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTargetLineStart
            (
                NXOpen::Point * targetLineStart /** targetlinestart */ 
            );
            /**Returns  the line end 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TargetLineEnd
            (
            );
            /**Sets  the line end 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTargetLineEnd
            (
                NXOpen::Point * targetLineEnd /** targetlineend */ 
            );
            /** Get point mapped to the given node  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * GetNodeMappedPoint
            (
                NXOpen::CAE::FENode * node /** node */ 
            );
            /** Add or modify node to point mapping 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void AddOrModifyNodeMap
            (
                NXOpen::CAE::FENode * node /** node */ ,
                NXOpen::Point * point /** point */ 
            );
            /** Remove node from node to point mapping 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void RemoveNodeMap
            (
                NXOpen::CAE::FENode * node /** node */ 
            );
            /** Replace old node mapping with new node to point mapping 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void ReplaceNodeMap
            (
                NXOpen::CAE::FENode * oldNode /** oldnode */ ,
                NXOpen::CAE::FENode * newNode /** newnode */ ,
                NXOpen::Point * newPoint /** newpoint */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
