#ifndef NXOpen_MECHATRONICS_RACKPINIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_RACKPINIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_RackPinionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_CouplingBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class RackPinionBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class CouplingBuilder;
    }
    class Point;
    namespace Mechatronics
    {
        class _RackPinionBuilderBuilder;
        class RackPinionBuilderImpl;
        /**  @brief Represents a @link Mechatronics::RackPinion Mechatronics::RackPinion@endlink  builder 

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::RackPinionCollection::CreateRackPinionBuilder  NXOpen::Mechatronics::RackPinionCollection::CreateRackPinionBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  RackPinionBuilder : public NXOpen::Mechatronics::CouplingBuilder
        {
            private: RackPinionBuilderImpl * m_rackpinionbuilder_impl;
            private: friend class  _RackPinionBuilderBuilder;
            protected: RackPinionBuilder();
            public: ~RackPinionBuilder();
            /**Returns   @brief  a value that indicates the contact point value.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ContactPoint
            (
            );
            /**Sets   @brief  a value that indicates the contact point value.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetContactPoint
            (
                NXOpen::Point * contactPoint /** contactpoint */ 
            );
            /**Returns   @brief  a value that indicates radius value for the pinion.  

              
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Radius
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
