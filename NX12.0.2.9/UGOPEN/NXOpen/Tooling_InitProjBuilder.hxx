#ifndef NXOpen_TOOLING_INITPROJBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_INITPROJBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_InitProjBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class InitProjBuilder;
    }
    class Builder;
    class ScCollector;
    namespace Tooling
    {
        class _InitProjBuilderBuilder;
        class InitProjBuilderImpl;
        /**
            Represents a @link NXOpen::Tooling::InitProjBuilder NXOpen::Tooling::InitProjBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::Tooling::InitProjCollection::CreateInitProjBuilder  NXOpen::Tooling::InitProjCollection::CreateInitProjBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        InsertStripTog </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PartThickReal </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ProjTempOpt </td> <td> 
         
        Default </td> </tr> 

        <tr><td> 
         
        RenameDiaTog </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        UseSmfeatTog </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  InitProjBuilder : public NXOpen::Builder
        {
            /** Represents the project template option of InitProj, 
                        defines the pre-defined project template. this template will be used as the basic assembly structure for this new project */
            public: enum ProjTempOption
            {
                ProjTempOptionDefault/** Indicates that the project template is 'Default'. The members of enum are changed in opening dialog */
            };

            private: InitProjBuilderImpl * m_initprojbuilder_impl;
            private: friend class  _InitProjBuilderBuilder;
            protected: InitProjBuilder();
            public: ~InitProjBuilder();
            /**Returns  the planar faces assigned as stationary face of strip 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * StationaryFace
            (
            );
            /** Pop up File Selection dialog box to define the project path 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void ProjPathButton
            (
            );
            /**Returns  the project path for a new project 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ProjPathStr
            (
            );
            /**Sets  the project path for a new project 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetProjPathStr
            (
                const NXString & projPathStr /** projpathstr */ 
            );
            /**Sets  the project path for a new project 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetProjPathStr
            (
                const char * projPathStr /** projpathstr */ 
            );
            /**Returns  the units of the sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PartUnitStr
            (
            );
            /**Sets  the units of the sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartUnitStr
            (
                const NXString & partUnitStr /** partunitstr */ 
            );
            /**Sets  the units of the sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetPartUnitStr
            (
                const char * partUnitStr /** partunitstr */ 
            );
            /**Returns  the sheet metal part thickness 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double PartThickReal
            (
            );
            /**Sets  the sheet metal part thickness 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartThickReal
            (
                double partThickReal /** partthickreal */ 
            );
            /**Returns  the material type of sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PartMatStr
            (
            );
            /**Sets  the material type of sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartMatStr
            (
                const NXString & partMatStr /** partmatstr */ 
            );
            /**Sets  the material type of sheet metal part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetPartMatStr
            (
                const char * partMatStr /** partmatstr */ 
            );
            /** Pop up material library speadsheet file 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void MatLibButton
            (
            );
            /**Returns  the project template option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::InitProjBuilder::ProjTempOption ProjTempOpt
            (
            );
            /**Sets  the project template option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetProjTempOpt
            (
                NXOpen::Tooling::InitProjBuilder::ProjTempOption projTempOpt /** projtempopt */ 
            );
            /** Pop up project template configuration spreadsheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void ProjTempBut
            (
            );
            /**Returns  the option to use SMD features 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseSmfeatTog
            (
            );
            /**Sets  the option to use SMD features 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUseSmfeatTog
            (
                bool useSmfeatTog /** usesmfeattog */ 
            );
            /**Returns  the option to rename parts in project 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameDiaTog
            (
            );
            /**Sets  the option to rename parts in project 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRenameDiaTog
            (
                bool renameDiaTog /** renamediatog */ 
            );
            /**Returns  the option to insert strip in project 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: bool InsertStripTog
            (
            );
            /**Sets  the option to insert strip in project 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: void SetInsertStripTog
            (
                bool insertStripTog /** insertstriptog */ 
            );
            /** Initialize new project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void InitNewProject
            (
                const NXString & templateName /** templatename */ 
            );
            /** Initialize new project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void InitNewProject
            (
                const char * templateName /** templatename */ 
            );
            /** Initialize to insert parts to project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void InitInsertPartsToProject
            (
                std::vector<NXString> & partNames /** partnames */ ,
                int radId /** radid */ 
            );
            /** Change material while opening an existing project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void OpenChangeMaterial
            (
            );
            /** Change thickness while opening an existing project 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void OpenChangeThickness
            (
            );
            /** Blank original parts 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void HideOriginalParts
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
