#ifndef NXOpen_MFG_MLP_WORKPIECE_HXX_INCLUDED
#define NXOpen_MFG_MLP_WORKPIECE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_Mlp_Workpiece.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/libmfgmlpopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace Mlp
        {
            class Workpiece;
        }
    }
    class DisplayableObject;
    class INXObject;
    namespace Mfg
    {
        namespace Mlp
        {
            class MachiningFeature;
        }
    }
    namespace Mfg
    {
        namespace Mlp
        {
            class ProcessSetup;
        }
    }
    namespace Mfg
    {
        namespace Mlp
        {
            class Product;
        }
    }
    namespace Mfg
    {
        namespace Mlp
        {
            class _WorkpieceBuilder;
            class WorkpieceImpl;
            /** Represents a Machining Line Planner workpiece  <br> To obtain an instance of this class, use GetWorkpiece of MachiningFeature or GetWorkpieces of ProcessSetup or Product.  <br> 
             <br>  Created in NX11.0.1.  <br>  
            */
            class MFGMLPOPENCPPEXPORT  Workpiece : public NXOpen::DisplayableObject
            {
                private: WorkpieceImpl * m_workpiece_impl;
                private: friend class  _WorkpieceBuilder;
                protected: Workpiece();
                public: ~Workpiece();
                /** Get the Setup  @return  
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::Mlp::ProcessSetup * GetSetup
                (
                );
                /** Get the Machining Features  @return  
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Mfg::Mlp::MachiningFeature *> GetMachiningFeatures
                (
                );
                /** Get the Product  @return  
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::Mlp::Product * GetProduct
                (
                );
                /** Finds the @link  Mfg::Mlp::MachiningFeature   Mfg::Mlp::MachiningFeature @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  Object found, or null if no such machining feature exists.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::INXObject * FindObject
                (
                    const NXString & journalIdentifier /** Name of the machining feature to be found */
                );
                /** Finds the @link  Mfg::Mlp::MachiningFeature   Mfg::Mlp::MachiningFeature @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  Object found, or null if no such machining feature exists.
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::INXObject * FindObject
                (
                    const char * journalIdentifier /** Name of the machining feature to be found */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
