#ifndef NXOpen_FEATURES_CUSTOMFEATUREDATA_HXX_INCLUDED
#define NXOpen_FEATURES_CUSTOMFEATUREDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_CustomFeatureData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_CustomAttribute.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class CustomFeatureData;
    }
    namespace Features
    {
        class CustomAttribute;
    }
    namespace Features
    {
        class CustomDoubleArrayAttribute;
    }
    namespace Features
    {
        class CustomDoubleAttribute;
    }
    namespace Features
    {
        class CustomExpressionArrayAttribute;
    }
    namespace Features
    {
        class CustomExpressionAttribute;
    }
    namespace Features
    {
        class CustomIntegerArrayAttribute;
    }
    namespace Features
    {
        class CustomIntegerAttribute;
    }
    namespace Features
    {
        class CustomLogicalArrayAttribute;
    }
    namespace Features
    {
        class CustomLogicalAttribute;
    }
    namespace Features
    {
        class CustomStringArrayAttribute;
    }
    namespace Features
    {
        class CustomStringAttribute;
    }
    namespace Features
    {
        class CustomTagArrayAttribute;
    }
    namespace Features
    {
        class CustomTagAttribute;
    }
    namespace Features
    {
    }
    namespace Features
    {
        class CustomFeatureDataImpl;
        /** Represents the collection of attributes for a custom feature.  <br> An instance of this class can be obtained from @link NXOpen::Features::CustomFeatureDataCollection::CreateData NXOpen::Features::CustomFeatureDataCollection::CreateData@endlink   <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  CustomFeatureData : public NXOpen::TransientObject
        {
            private: CustomFeatureDataImpl * m_customfeaturedata_impl;
            /// \cond NX_NO_DOC 
            public: explicit CustomFeatureData(void *ptr);
            /// \endcond 
            /** Frees the memory associated with this object. After invocation of this method, the object is no longer valid.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~CustomFeatureData();
            /**Returns  the custom feature class name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXString ClassName
            (
            );
            /** Get the custom feature attribute name and types
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void GetAllCustomAttributeNameAndTypes
            (
                std::vector<NXString> & attributeNames /** attributenames */ ,
                std::vector<NXOpen::Features::CustomAttribute::Type> & attributeType /** attributetype */ 
            );
            /** Set the custom feature attributes 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void AddCustomAttributes
            (
                const std::vector<NXOpen::Features::CustomAttribute *> & attributes /** attributes */ 
            );
            /** Get the custom feature tag attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomTagAttribute * CustomTagAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature tag attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomTagAttribute * CustomTagAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature tag array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomTagArrayAttribute * CustomTagArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature tag array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomTagArrayAttribute * CustomTagArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature string attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomStringAttribute * CustomStringAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature string attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomStringAttribute * CustomStringAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature string array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomStringArrayAttribute * CustomStringArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature string array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomStringArrayAttribute * CustomStringArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature logical attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomLogicalAttribute * CustomLogicalAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature logical attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomLogicalAttribute * CustomLogicalAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature logical array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomLogicalArrayAttribute * CustomLogicalArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature logical array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomLogicalArrayAttribute * CustomLogicalArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature integer attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomIntegerAttribute * CustomIntegerAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature integer attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomIntegerAttribute * CustomIntegerAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature integer array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomIntegerArrayAttribute * CustomIntegerArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature integer array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomIntegerArrayAttribute * CustomIntegerArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature expression attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomExpressionAttribute * CustomExpressionAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature expression attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomExpressionAttribute * CustomExpressionAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature expression array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomExpressionArrayAttribute * CustomExpressionArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature expression array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomExpressionArrayAttribute * CustomExpressionArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature double attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomDoubleAttribute * CustomDoubleAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature double attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomDoubleAttribute * CustomDoubleAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Get the custom feature double array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::CustomDoubleArrayAttribute * CustomDoubleArrayAttributeByName
            (
                const NXString & attributeName /** attributename */ 
            );
            /** Get the custom feature double array attribute of given name  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            NXOpen::Features::CustomDoubleArrayAttribute * CustomDoubleArrayAttributeByName
            (
                const char * attributeName /** attributename */ 
            );
            /** Checks if the custom feature attribute of given name and type exists @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool HasCustomAttribute
            (
                const NXString & attributeName /** attributename */ ,
                NXOpen::Features::CustomAttribute::Type type /** type */ 
            );
            /** Checks if the custom feature attribute of given name and type exists @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            bool HasCustomAttribute
            (
                const char * attributeName /** attributename */ ,
                NXOpen::Features::CustomAttribute::Type type /** type */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
