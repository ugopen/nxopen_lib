#ifndef NXOpen_ROUTING_STOCKOFFSETPOINTBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_STOCKOFFSETPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_StockOffsetPointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class StockOffsetPointBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class SelectNXObject;
    class TaggedObject;
    namespace Routing
    {
        class _StockOffsetPointBuilderBuilder;
        class StockOffsetPointBuilderImpl;
        /** Applies Assemblies Constraints to a selected @link NXOpen::Point NXOpen::Point@endlink  or 
                @link NXOpen::Routing::ControlPoint NXOpen::Routing::ControlPoint@endlink  to mimic the update/move behavior of
                the input smart @link NXOpen::Point NXOpen::Point@endlink .    The smart point may be a Routing
                stock offset point (see @link NXOpen::PointCollection::CreateStockOffsetPoint NXOpen::PointCollection::CreateStockOffsetPoint@endlink ) or
                any of the points created using the @link NXOpen::PointCollection NXOpen::PointCollection@endlink  class.  
             <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateStockOffsetPointBuilder  NXOpen::Routing::RouteManager::CreateStockOffsetPointBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  StockOffsetPointBuilder : public NXOpen::Builder
        {
            /** Point Type */
            public: enum PointType
            {
                PointTypeNormal/** Normal smart point. */,
                PointTypeStockOffset/** Routing stock offset point. */
            };

            private: StockOffsetPointBuilderImpl * m_stockoffsetpointbuilder_impl;
            private: friend class  _StockOffsetPointBuilderBuilder;
            protected: StockOffsetPointBuilder();
            public: ~StockOffsetPointBuilder();
            /**Returns  the point selection.  Stores the point or Routing control point selected by the user. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::SelectNXObject * PointSelection
            (
            );
            /** Gets the stock offset data from the currently selected point or routing
                        control point. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void GetPointData
            (
                NXOpen::Routing::StockOffsetPointBuilder::PointType* pointType /** Type of point currently defined. */,
                NXOpen::Point ** basePoint /** Base point for stock offset points, NULL for
                @link Routing::StockOffsetPointBuilder::PointTypeNormal Routing::StockOffsetPointBuilder::PointTypeNormal@endlink  points. */,
                NXOpen::Direction ** offsetDir /** Offset direction for stock offset points, NULL for
                @link Routing::StockOffsetPointBuilder::PointTypeNormal Routing::StockOffsetPointBuilder::PointTypeNormal@endlink  points. */,
                NXString* offsetExpression /** Offset expression for stock offset points, NULL for
                @link Routing::StockOffsetPointBuilder::PointTypeNormal Routing::StockOffsetPointBuilder::PointTypeNormal@endlink  points. */
            );
            /** Gets the object on which a Stock Offset Point was based.
                        Returns NULL if the point is not a Stock Offset Point or if the 
                        Stock Offset Point was not offset from another object.  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::TaggedObject * GetStockOffsetPointObject
            (
            );
            /**Returns  the point that defines the location of the selected point.  On commit, this
                        point is used for determining the set of Assemblies Constraints to apply to the
                        selected point (or Routing control point).  The input point itself is not used
                        after the commit method.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: NXOpen::Point * ConstraintPoint
            (
            );
            /**Sets  the point that defines the location of the selected point.  On commit, this
                        point is used for determining the set of Assemblies Constraints to apply to the
                        selected point (or Routing control point).  The input point itself is not used
                        after the commit method.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : routing_advanced ("Routing Advanced"), routing_base ("Routing Basic") */
            public: void SetConstraintPoint
            (
                NXOpen::Point * point /** point */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
