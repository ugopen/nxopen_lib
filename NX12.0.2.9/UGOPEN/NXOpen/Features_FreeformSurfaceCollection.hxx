#ifndef NXOpen_FEATURES_FREEFORMSURFACECOLLECTION_HXX_INCLUDED
#define NXOpen_FEATURES_FREEFORMSURFACECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FreeformSurfaceCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FreeformSurfaceCollection;
    }
    namespace Features
    {
        class FeatureCollection;
    }
    namespace Features
    {
        class BlendCorner;
    }
    namespace Features
    {
        class BlendCornerBuilder;
    }
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class FillHole;
    }
    namespace Features
    {
        class FillHoleBuilder;
    }
    namespace Features
    {
        class FlatteningAndForming;
    }
    namespace Features
    {
        class FlatteningAndFormingBuilder;
    }
    namespace Features
    {
        class FlatteningAndFormingBuilderEx;
    }
    namespace Features
    {
        class StudioSurfaceBuilderEx;
    }
    namespace Features
    {
        class FreeformSurfaceCollectionImpl;
        /** Collection of freeform surface based features.  <br> To obtain an instance of this class, refer to @link NXOpen::Features::FeatureCollection  NXOpen::Features::FeatureCollection @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FreeformSurfaceCollection
        {
            private: FreeformSurfaceCollectionImpl * m_freeformsurfacecollection_impl;
            private: NXOpen::Features::FeatureCollection* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit FreeformSurfaceCollection(NXOpen::Features::FeatureCollection *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~FreeformSurfaceCollection();
            /** Creates a @link NXOpen::Features::BlendCornerBuilder NXOpen::Features::BlendCornerBuilder@endlink   @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::BlendCornerBuilder * CreateBlendCornerBuilder
            (
                NXOpen::Features::BlendCorner * cornerBlend /** @link NXOpen::Features::BlendCorner NXOpen::Features::BlendCorner@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::FillHoleBuilder NXOpen::Features::FillHoleBuilder@endlink   @return  FillHoleBuilder object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::FillHoleBuilder * CreateFillHoleBuilder
            (
                NXOpen::Features::FillHole * fillHole /** @link NXOpen::Features::FillHole NXOpen::Features::FillHole@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::FlatteningAndFormingBuilder NXOpen::Features::FlatteningAndFormingBuilder@endlink   @return  FlatteningAndFormingBuilder object 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::FlatteningAndFormingBuilder * CreateFlatteningAndFormingBuilder
            (
                NXOpen::Features::FlatteningAndForming * flatteningAndForming /** @link NXOpen::Features::FlatteningAndForming NXOpen::Features::FlatteningAndForming@endlink  to be edited */
            );
            /** Creates a @link Features::StudioSurfaceBuilderEx Features::StudioSurfaceBuilderEx@endlink   @return  StudioSurfaceBuilderEx object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::StudioSurfaceBuilderEx * CreateStudioSurfaceBuilderEx
            (
                NXOpen::Features::Feature * studioSurface /** @link Features::StudioSurfaceEx Features::StudioSurfaceEx@endlink  to be edited */
            );
            /** Creates a @link NXOpen::Features::FlatteningAndFormingBuilderEx NXOpen::Features::FlatteningAndFormingBuilderEx@endlink   @return  FlatteningAndFormingBuilderEx object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::FlatteningAndFormingBuilderEx * CreateFlatteningAndFormingBuilderEx
            (
                NXOpen::Features::FlatteningAndForming * flatteningAndForming /** @link NXOpen::Features::FlatteningAndForming NXOpen::Features::FlatteningAndForming@endlink  to be edited */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
