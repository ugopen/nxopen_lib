#ifndef NXOpen_ACISEXPORTER_HXX_INCLUDED
#define NXOpen_ACISEXPORTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AcisExporter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectSelector.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class AcisExporter;
    class Builder;
    class ObjectSelector;
    class _AcisExporterBuilder;
    class AcisExporterImpl;
    /**
        Represents a @link AcisExporter AcisExporter@endlink  to be used when importing the Acis Data
        This class is created using @link DexManager DexManager@endlink .
        NULL object will be returned from Commit()  <br> To create a new instance of this class, use @link NXOpen::DexManager::CreateAcisExporter  NXOpen::DexManager::CreateAcisExporter @endlink  <br> 
    Default values.
    <table border="1"> 
     
    <tr><th> 
    Property</th>  <th> 
    Value</th> </tr>
    <tr><td> 
     
    AcisVersion </td> <td> 
     
    R18 </td> </tr> 

    </table>  

     <br>  Created in NX11.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  AcisExporter : public NXOpen::Builder
    {
        /** ACIS Version options */
        public: enum AcisVersionOption
        {
            AcisVersionOptionR26/** r26 */ ,
            AcisVersionOptionR25/** r25 */ ,
            AcisVersionOptionR24/** r24 */ ,
            AcisVersionOptionR23/** r23 */ ,
            AcisVersionOptionR22/** r22 */ ,
            AcisVersionOptionR21/** r21 */ ,
            AcisVersionOptionR20/** r20 */ ,
            AcisVersionOptionR19/** r19 */ ,
            AcisVersionOptionR18/** r18 */ 
        };

        private: AcisExporterImpl * m_acisexporter_impl;
        private: friend class  _AcisExporterBuilder;
        protected: AcisExporter();
        public: ~AcisExporter();
        /** Save the settings - this will save the settings to a file sepcified
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SaveSettings
        (
            const NXString & filename /** filename */ 
        );
        /** Save the settings - this will save the settings to a file sepcified
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SaveSettings
        (
            const char * filename /** filename */ 
        );
        /**Returns  the export selection block - the object selection will be done by this block. 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::ObjectSelector * ExportSelectionBlock
        (
        );
        /**Returns  the output file - the exported data will be written to file specified 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString OutputFile
        (
        );
        /**Sets  the output file - the exported data will be written to file specified 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetOutputFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the output file - the exported data will be written to file specified 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetOutputFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the settings file - The definition file to read default options 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString SettingsFile
        (
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetSettingsFile
        (
            const NXString & filename /** filename */ 
        );
        /**Sets  the settings file - The definition file to read default options 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetSettingsFile
        (
            const char * filename /** filename */ 
        );
        /**Returns  the Acis version - The version of ACIS file to be exported 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::AcisExporter::AcisVersionOption AcisVersion
        (
        );
        /**Sets  the Acis version - The version of ACIS file to be exported 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAcisVersion
        (
            NXOpen::AcisExporter::AcisVersionOption acisVersion /** acisversion */ 
        );
        /**Returns  the file save flag - this should be set to false if doing File Export 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool FileSaveFlag
        (
        );
        /**Sets  the file save flag - this should be set to false if doing File Export 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFileSaveFlag
        (
            bool doingFileSave /** doingfilesave */ 
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
