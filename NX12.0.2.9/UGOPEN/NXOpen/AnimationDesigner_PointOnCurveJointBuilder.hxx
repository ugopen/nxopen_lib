#ifndef NXOpen_ANIMATIONDESIGNER_POINTONCURVEJOINTBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_POINTONCURVEJOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_PointOnCurveJointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AnimationDesigner_PhysicsJointBuilder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class PointOnCurveJointBuilder;
    }
    namespace AnimationDesigner
    {
        class PhysicsJointBuilder;
    }
    class Direction;
    class NXObject;
    class Point;
    namespace AnimationDesigner
    {
        class _PointOnCurveJointBuilderBuilder;
        class PointOnCurveJointBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::PointOnCurveJoint NXOpen::AnimationDesigner::PointOnCurveJoint@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::PointOnCurveJointCollection::CreatePointOnCurveJointBuilder  NXOpen::AnimationDesigner::PointOnCurveJointCollection::CreatePointOnCurveJointBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  PointOnCurveJointBuilder : public NXOpen::AnimationDesigner::PhysicsJointBuilder
        {
            private: PointOnCurveJointBuilderImpl * m_pointoncurvejointbuilder_impl;
            private: friend class  _PointOnCurveJointBuilderBuilder;
            protected: PointOnCurveJointBuilder();
            public: ~PointOnCurveJointBuilder();
            /** Gets the connected curves which the attachment will move along.  @return  curve or edge 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: std::vector<NXOpen::NXObject *> GetConnectedCurves
            (
            );
            /** Sets the connected curves which the attachment will move along. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetConnectedCurves
            (
                const std::vector<NXOpen::NXObject *> & curves /** curve or edge */
            );
            /**Returns  the selected point on curve. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Point * PointOnCurve
            (
            );
            /**Sets  the selected point on curve. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetPointOnCurve
            (
                NXOpen::Point * pointOnCurve /** pointoncurve */ 
            );
            /**Returns  the axis vector which is tangent to the connected curve at the selected point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Direction * AxisVector
            (
            );
            /**Sets  the axis vector which is tangent to the connected curve at the selected point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetAxisVector
            (
                NXOpen::Direction * axisVector /** axisvector */ 
            );
            /** Evaluates the path. If there is no path, create it, otherwise evaluate it. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void EvaluatePath
            (
                const std::vector<NXOpen::NXObject *> & curves /** curve or edge*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
