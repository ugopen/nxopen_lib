#ifndef NXOpen_CAE_QUALITYAUDIT_ACTION_HXX_INCLUDED
#define NXOpen_CAE_QUALITYAUDIT_ACTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_QualityAudit_Action.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_QualityAudit_ActionSettings.hxx>
#include <NXOpen/CAE_QualityAudit_Result.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace QualityAudit
        {
            class Action;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class ActionSettings;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class Result;
        }
    }
    class NXObject;
    namespace CAE
    {
        namespace QualityAudit
        {
            class _ActionBuilder;
            class ActionImpl;
            /**  @brief  The Quality Audit Action is a base class that performs actions on a list of objects. Results of the action are also stored here. 

               <br> To obtain all the actions see @link CAE::QualityAudit::ActionList CAE::QualityAudit::ActionList@endlink .  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Action : public NXOpen::NXObject
            {
                /** Action ids. Each action can be identified through an unique id. */
                public: enum Id
                {
                    IdListAllConnections/** the action that lists all connections. Available in the global actions */,
                    IdListNonModeledConnections/** the action that list all non modeled connections. Available in the global actions */,
                    IdCheckComponentConnectivity/** the action analyzing component connectivity. Available in the global actions */,
                    IdCheckComponentSynthesis/** the action listing components and their direct connections. Available in the global actions */,
                    IdCheckDiameterRange/** the action checking diameter bounds. Available in the connection related actions */,
                    IdObjectLevelCheckProjection/** the action listing projection errors at object level. Available in the connection related actions */,
                    IdMeshLevelCheckProjection/** the action listing projection errors at mesh level. Available in the connection related actions */,
                    IdCheckDistanceBetweenConnectionPoints/** the action verifying distance between the points of the same connection. Available in the connection related actions */,
                    IdCheckDistanceBetweenConnections/** the action checking the distance between connections. Available in the connection related actions */,
                    IdCheckFreeEdgeDistance/** the action checking for near edge connections. Available in the connection related actions */,
                    IdCheckTargetSequence/** the action verifying the support order. Available in the connection related actions */
                };

                private: ActionImpl * m_action_impl;
                private: friend class  _ActionBuilder;
                protected: Action();
                public: ~Action();
                /**Returns  the action description
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Description
                (
                );
                /**Returns  the action settings
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::QualityAudit::ActionSettings * Settings
                (
                );
                /** Performs the action on the given object list.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void Perform
                (
                    const std::vector<NXOpen::NXObject *> & objects /** objects */ 
                );
                /** Get the @link CAE::QualityAudit::Result CAE::QualityAudit::Result@endlink  list obtained from the latest check
                              @return  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::QualityAudit::Result *> GetResults
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
