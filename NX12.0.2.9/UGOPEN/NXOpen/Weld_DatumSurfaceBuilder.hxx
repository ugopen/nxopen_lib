#ifndef NXOpen_WELD_DATUMSURFACEBUILDER_HXX_INCLUDED
#define NXOpen_WELD_DATUMSURFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_DatumSurfaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Weld_DatumCommonBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class DatumSurfaceBuilder;
    }
    class Plane;
    class ScCollector;
    namespace Weld
    {
        class DatumCommonBuilder;
    }
    namespace Weld
    {
        class SelectDatumSurface;
    }
    namespace Weld
    {
        class _DatumSurfaceBuilderBuilder;
        class DatumSurfaceBuilderImpl;
        /** Used to create or edit a @link NXOpen::Weld::DatumSurface NXOpen::Weld::DatumSurface@endlink  feature.  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateDatumSurfaceBuilder  NXOpen::Weld::WeldManager::CreateDatumSurfaceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ControlMethod </td> <td> 
         
        PrincipalAxis </td> </tr> 

        <tr><td> 
         
        CreateDirectionVector </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CreatePlane </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        CreatePoint </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        Derived </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        DirectionLength </td> <td> 
         
        20 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        GridSnapTolerance </td> <td> 
         
        1 (millimeters part), 0.05 (inches part) </td> </tr> 

        <tr><td> 
         
        ModelingTolerance </td> <td> 
         
        0.0254 </td> </tr> 

        <tr><td> 
         
        PlaneHeight </td> <td> 
         
        20 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        PlaneWidth </td> <td> 
         
        20 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        PrincipalAxisX </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PrincipalAxisY </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PrincipalAxisZ </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ProjectAlongDirection </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SnapPointToGrid </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        XCoordinate </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        YCoordinate </td> <td> 
         
        0.0 </td> </tr> 

        <tr><td> 
         
        ZCoordinate </td> <td> 
         
        0.0 </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  DatumSurfaceBuilder : public NXOpen::Weld::DatumCommonBuilder
        {
            /** Settings to indicate the construction type used for the datum surface. */
            public: enum Types
            {
                TypesDirect/** direct location */,
                TypesMirror/** mirror location */
            };

            private: DatumSurfaceBuilderImpl * m_datumsurfacebuilder_impl;
            private: friend class  _DatumSurfaceBuilderBuilder;
            protected: DatumSurfaceBuilder();
            public: ~DatumSurfaceBuilder();
            /**Returns  the resting face 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * RestingFace
            (
            );
            /** Moves a point to the nearest location on the resting face 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void MoveMinimumDistance
            (
            );
            /**Returns  the snap point to grid option. Specified locations will be adjusted based on the grid snap tolerance  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool SnapPointToGrid
            (
            );
            /**Sets  the snap point to grid option. Specified locations will be adjusted based on the grid snap tolerance  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetSnapPointToGrid
            (
                bool snapPointToGrid /** snappointtogrid */ 
            );
            /**Returns  the grid snap tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double GridSnapTolerance
            (
            );
            /**Sets  the grid snap tolerance 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetGridSnapTolerance
            (
                double gridSnapTolerance /** gridsnaptolerance */ 
            );
            /**Returns  the x coordinate position for the surface datum location. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double XCoordinate
            (
            );
            /**Sets  the x coordinate position for the surface datum location. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetXCoordinate
            (
                double xCoordinate /** xcoordinate */ 
            );
            /**Returns  the y coordinate position for the surface datum location 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double YCoordinate
            (
            );
            /**Sets  the y coordinate position for the surface datum location 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetYCoordinate
            (
                double yCoordinate /** ycoordinate */ 
            );
            /**Returns  the z coordinate position for the datum surface location 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: double ZCoordinate
            (
            );
            /**Sets  the z coordinate position for the datum surface location 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetZCoordinate
            (
                double zCoordinate /** zcoordinate */ 
            );
            /** Update the axis origin to a point specified, and direction to closest principal axis to face normal.  The point will be adjusted by snapping to a grid. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void InitializeAxis
            (
                const NXOpen::Point3d & approximatePoint /** approximatepoint */ 
            );
            /** Updates data related to the axis. The origin will be adjusted based on grid snapping, and projection direction.   In addition the control direction information will be updated.  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void UpdateAxisData
            (
            );
            /**Returns  the derived datum 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::SelectDatumSurface * DerivedDatum
            (
            );
            /**Returns  the plane used for mirroring a reference surface locator. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * MirrorPlane
            (
            );
            /**Sets  the plane used for mirroring a reference surface locator. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetMirrorPlane
            (
                NXOpen::Plane * mirrorPlane /** mirrorplane */ 
            );
            /**Returns  the construction type used to create the datum surface. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::DatumSurfaceBuilder::Types Type
            (
            );
            /**Sets  the construction type used to create the datum surface. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetType
            (
                NXOpen::Weld::DatumSurfaceBuilder::Types type /** type */ 
            );
            /** Initialize the builder with the inputs from an existing datum surface locator. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void UpdateWithReferenceDatum
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
