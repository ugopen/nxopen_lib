#ifndef NXOpen_FEATURES_ASSEMBLYCUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_ASSEMBLYCUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_AssemblyCutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ErrorList.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class AssemblyCutBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class ErrorList;
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBodyList;
    namespace Features
    {
        class _AssemblyCutBuilderBuilder;
        class AssemblyCutBuilderImpl;
        /**
                Represents a @link NXOpen::Features::AssemblyCut NXOpen::Features::AssemblyCut@endlink  builder. Input to this class can be PSM facet objects.
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateAssemblyCutBuilder  NXOpen::Features::FeatureCollection::CreateAssemblyCutBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        HideToolBodyFlag </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  AssemblyCutBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: AssemblyCutBuilderImpl * m_assemblycutbuilder_impl;
            private: friend class  _AssemblyCutBuilderBuilder;
            protected: AssemblyCutBuilder();
            public: ~AssemblyCutBuilder();
            /**Returns  the target body 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * TargetBody
            (
            );
            /**Returns  the tool body 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * ToolBody
            (
            );
            /**Returns  the hide tool body flag 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool HideToolBodyFlag
            (
            );
            /**Sets  the hide tool body flag 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetHideToolBodyFlag
            (
                bool hideToolBodyFlag /** hidetoolbodyflag */ 
            );
            /** Gets the list of errors encountered in the Assembly cut operation.
                        Caller needs to dispose the error list after processing it.  @return  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ErrorList * GetOperationFailures
            (
            );
            /**Returns  the context component for the assembly cut operation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Component * ContextComponent
            (
            );
            /**Sets  the context component for the assembly cut operation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetContextComponent
            (
                NXOpen::Assemblies::Component * workOccTag /** workocctag */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
