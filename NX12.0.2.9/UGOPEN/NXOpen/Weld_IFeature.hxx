#ifndef NXOpen_WELD_IFEATURE_HXX_INCLUDED
#define NXOpen_WELD_IFEATURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_IFeature.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class IFeature;
    }
    class INXObject;
    class ReferenceSet;
    namespace Weld
    {
        /** Represents a Weld Assistant or Structure Welding created feature 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  IFeature : public virtual NXOpen::INXObject
        {
            public: virtual ~IFeature() {}
            /** Returns the feature diagnostic information, warning, or error codes. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void GetFeatureDiagnostics
            (
                std::vector<int> & diagnosticCodes /** the information, warning, or error codes for this feature. */
            ) = 0;
            /** Gets the feature icon name.  @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXString GetFeatureIconName
            (
            ) = 0;
            /** Gets the feature layer.  @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual int GetFeatureLayer
            (
            ) = 0;
            /** Gets the feature color.  @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual int GetFeatureObjectColor
            (
            ) = 0;
            /** Gets all the reference sets that this feature is a member of. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void GetFeatureReferenceSets
            (
                std::vector<NXOpen::ReferenceSet *> & refSet /** refset */ 
            ) = 0;
            /** Gets all the reference sets that this feature is a member of. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: virtual void GetFeatureReferenceSetStrings
            (
                std::vector<NXString> & refSet /** refset */ 
            ) = 0;
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
