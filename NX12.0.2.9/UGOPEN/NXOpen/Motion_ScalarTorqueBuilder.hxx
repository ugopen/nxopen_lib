#ifndef NXOpen_MOTION_SCALARTORQUEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SCALARTORQUEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_ScalarTorqueBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class ScalarTorqueBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    class CoordinateSystem;
    class Expression;
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectFieldData;
    }
    namespace Motion
    {
        class SelectJoint;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class Point;
    namespace Motion
    {
        class _ScalarTorqueBuilderBuilder;
        class ScalarTorqueBuilderImpl;
        /**Represents a @link NXOpen::Motion::ScalarTorqueBuilder NXOpen::Motion::ScalarTorqueBuilder@endlink  <br> To create a new instance of this class, use @link NXOpen::Motion::ScalarTorqueCollection::CreateScalarTorqueBuilder  NXOpen::Motion::ScalarTorqueCollection::CreateScalarTorqueBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  ScalarTorqueBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** the torque type*/
            public: enum ScalarTorqueType
            {
                ScalarTorqueTypeJoint/** Scalar Torque Type Joint. Requires a Joint as input. */,
                ScalarTorqueTypeLink/** Scalar Torque Type Link. Requires an action and base link attachment. */
            };

            /** the direction */
            public: enum DirectionType
            {
                DirectionTypeX/** Direction X*/,
                DirectionTypeY/** Direction Y*/,
                DirectionTypeZ/** Direction Z*/
            };

            /** the application type */
            public: enum AppType
            {
                AppTypeActionReaction/** Action-Reaction*/,
                AppTypeActionOnly/** ActionOnly*/
            };

            private: ScalarTorqueBuilderImpl * m_scalartorquebuilder_impl;
            private: friend class  _ScalarTorqueBuilderBuilder;
            protected: ScalarTorqueBuilder();
            public: ~ScalarTorqueBuilder();
            /**Returns  the joint 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectJoint * Joint
            (
            );
            /**Returns  the action link attachment. Required in type if Torque is Link.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * ActionLink
            (
            );
            /**Returns  the action point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * ActionPoint
            (
            );
            /**Sets  the action point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionPoint
            (
                NXOpen::Point * actionPointTag /** actionpointtag */ 
            );
            /**Returns  the action csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * ActionCsys
            (
            );
            /**Sets  the action csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionCsys
            (
                NXOpen::CoordinateSystem * actionCsysTag /** actioncsystag */ 
            );
            /**Returns  the base link attachment. Optional in type if Torque is Link.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectLink * BaseLink
            (
            );
            /**Returns  the base point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * BasePoint
            (
            );
            /**Sets  the base point 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBasePoint
            (
                NXOpen::Point * basePointTag /** basepointtag */ 
            );
            /**Returns  the base csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::CoordinateSystem * BaseCsys
            (
            );
            /**Sets  the base csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBaseCsys
            (
                NXOpen::CoordinateSystem * baseCsysTag /** basecsystag */ 
            );
            /**Returns  the value type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ForceValueTypes ValueType
            (
            );
            /**Sets  the value type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetValueType
            (
                NXOpen::Motion::ForceValueTypes valueType /** valuetype */ 
            );
            /**Returns  the function  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * Function
            (
            );
            /**Sets  the function  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the type. Default type is Link. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ScalarTorqueBuilder::ScalarTorqueType TorqueType
            (
            );
            /**Sets  the type. Default type is Link. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTorqueType
            (
                NXOpen::Motion::ScalarTorqueBuilder::ScalarTorqueType torqueType /** torquetype */ 
            );
            /**Returns  the scalar torque application type. Default Type is Action-Reaction. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ScalarTorqueBuilder::AppType ApplicationType
            (
            );
            /**Sets  the scalar torque application type. Default Type is Action-Reaction. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetApplicationType
            (
                NXOpen::Motion::ScalarTorqueBuilder::AppType appType /** apptype */ 
            );
            /**Returns  the control Output Variable direction. Default Control Output Variable Direction is Z direction.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ScalarTorqueBuilder::DirectionType Direction
            (
            );
            /**Sets  the control Output Variable direction. Default Control Output Variable Direction is Z direction.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDirection
            (
                NXOpen::Motion::ScalarTorqueBuilder::DirectionType direction /** direction */ 
            );
            /**Returns  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the value expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ValueExpression
            (
            );
            /**Returns  the profile 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectFieldData * Profile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
