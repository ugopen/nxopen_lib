#ifndef NXOpen_CAE_CONNECTIONS_NODALTARGETSPIDER_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_NODALTARGETSPIDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_NodalTargetSpider.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Connections_INodalTargetCenter.hxx>
#include <NXOpen/CAE_Connections_INodalTargetLegs.hxx>
#include <NXOpen/CAE_Connections_NodalTarget.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class NodalTargetSpider;
        }
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace CAE
    {
        namespace Connections
        {
            class INodalTargetCenter;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class INodalTargetLegs;
        }
    }
    namespace CAE
    {
        namespace Connections
        {
            class NodalTarget;
        }
    }
    class INXObject;
    class TaggedObject;
    namespace CAE
    {
        namespace Connections
        {
            class _NodalTargetSpiderBuilder;
            class NodalTargetSpiderImpl;
            /**  @brief  Group of Points Target. Use this interface to set/get parameters of the Group of Points Target type.  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  NodalTargetSpider : public NXOpen::CAE::Connections::NodalTarget, public virtual NXOpen::CAE::Connections::INodalTargetLegs, public virtual NXOpen::CAE::Connections::INodalTargetCenter
            {
                private: NodalTargetSpiderImpl * m_nodaltargetspider_impl;
                private: friend class  _NodalTargetSpiderBuilder;
                protected: NodalTargetSpider();
                public: ~NodalTargetSpider();
                /** Gets entities from target's group of points. 
                            These can be any combination of CAD (point, edge, face, body) or FE (node, edge, face, element and mesh) 
                            objects able to return nodes.  @return  Legs entities 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual std::vector<NXOpen::TaggedObject *> GetLegsEntities
                (
                );
                /** Add entities to target's group of points. 
                            Changes are not applied till an update is performed by calling @link Update::DoUpdate Update::DoUpdate@endlink  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void AddLegsEntities
                (
                    const std::vector<NXOpen::TaggedObject *> & entities /** Legs entities */
                );
                /** Remove entities from target's group of points. 
                            Changes are not applied till an update is performed by calling @link Update::DoUpdate Update::DoUpdate@endlink  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void RemoveLegsEntities
                (
                    const std::vector<NXOpen::TaggedObject *> & entities /** Legs entities */
                );
                /**Returns  the target center 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::TaggedObject * TargetCenter
                (
                );
                /**Sets  the target center 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") */
                public: virtual void SetTargetCenter
                (
                    NXOpen::TaggedObject * center /** center */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
