#ifndef NXOpen_FEATURES_TRIMCORNERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRIMCORNERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TrimCornerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class TrimCornerBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectObject;
    namespace Features
    {
        class _TrimCornerBuilderBuilder;
        class TrimCornerBuilderImpl;
        /**
            Represents a builder for non-associative trim corner operation.
             <br> To create a new instance of this class, use @link NXOpen::Features::BaseFeatureCollection::CreateTrimCornerBuilder  NXOpen::Features::BaseFeatureCollection::CreateTrimCornerBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  TrimCornerBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: TrimCornerBuilderImpl * m_trimcornerbuilder_impl;
            private: friend class  _TrimCornerBuilderBuilder;
            protected: TrimCornerBuilder();
            public: ~TrimCornerBuilder();
            /**Returns  the curve1 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectObject * Curve1
            (
            );
            /**Returns  the curve2 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectObject * Curve2
            (
            );
            /** Returns the reference point  @return  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d GetReferencePoint
            (
            );
            /** Sets the reference point 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetReferencePoint
            (
                const NXOpen::Point3d & referencePoint /** reference point */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
