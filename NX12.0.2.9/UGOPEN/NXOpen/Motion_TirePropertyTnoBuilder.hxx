#ifndef NXOpen_MOTION_TIREPROPERTYTNOBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_TIREPROPERTYTNOBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_TirePropertyTnoBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_TirePropertyBuilder.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class TirePropertyTnoBuilder;
    }
    class Expression;
    namespace Motion
    {
        class TirePropertyBuilder;
    }
    namespace Motion
    {
        class _TirePropertyTnoBuilderBuilder;
        class TirePropertyTnoBuilderImpl;
        /** Represents a Builder for Motion TNO Tire Property.  <br> To create a new instance of this class, use @link NXOpen::Motion::TirePropertyTnoCollection::CreateTirePropertyTnoBuilder  NXOpen::Motion::TirePropertyTnoCollection::CreateTirePropertyTnoBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ContactMethod </td> <td> 
         
        SmoothRoad </td> </tr> 

        <tr><td> 
         
        Dynamics </td> <td> 
         
        SteadyState </td> </tr> 

        <tr><td> 
         
        Iswitch.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        IswitchDefinition </td> <td> 
         
        Detailed </td> </tr> 

        <tr><td> 
         
        Lkx.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Lky.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Lkyc.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Lkzc.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Lmux.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Lmuy.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        Ltr.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        SlipForces </td> <td> 
         
        NoMagicFormula </td> </tr> 

        <tr><td> 
         
        StaticHold </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        StaticRadius.Value </td> <td> 
         
        0.0 (millimeters part), 0.0 (inches part) </td> </tr> 

        <tr><td> 
         
        StaticVerticalStiffness.Value </td> <td> 
         
        0.0 (millimeters part), 0.0 (inches part) </td> </tr> 

        <tr><td> 
         
        TireSide </td> <td> 
         
        Left </td> </tr> 

        <tr><td> 
         
        TrackSide </td> <td> 
         
        Left </td> </tr> 

        <tr><td> 
         
        VerticalDamping.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        <tr><td> 
         
        VerticalStiffness.Value </td> <td> 
         
        1.0 (millimeters part), 1.0 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  TirePropertyTnoBuilder : public NXOpen::Motion::TirePropertyBuilder
        {
            /** The Track Side type. */
            public: enum TrackSideType
            {
                TrackSideTypeLeft/** left */ ,
                TrackSideTypeRight/** right */ 
            };

            /** The Iswitch Definition type. */
            public: enum IswitchDefinitionType
            {
                IswitchDefinitionTypeDetailed/** detailed */ ,
                IswitchDefinitionTypeInteger/** integer */ 
            };

            /** The Tire Side type. */
            public: enum TireSideType
            {
                TireSideTypeLeft/** left */ ,
                TireSideTypeRight/** right */ ,
                TireSideTypeSymmetric/** symmetric */ ,
                TireSideTypeMirrored/** mirrored */ 
            };

            /** The Slip Forces type. */
            public: enum SlipForcesType
            {
                SlipForcesTypeNoMagicFormula/** no magic formula */ ,
                SlipForcesTypeLongitudinal/** longitudinal */ ,
                SlipForcesTypeLateral/** lateral */ ,
                SlipForcesTypeUncombined/** uncombined */ ,
                SlipForcesTypeCombined/** combined */ ,
                SlipForcesTypeTurnSlip/** turn slip */ 
            };

            /** The Dynamics type. */
            public: enum DynamicsType
            {
                DynamicsTypeSteadyState/** steady state */ ,
                DynamicsTypeRelaxationLinear/** relaxation linear */ ,
                DynamicsTypeRelaxationNonLinear/** relaxation non linear */ ,
                DynamicsTypeRigidRing/** rigid ring */ ,
                DynamicsTypeRigidRingWithInitStatics/** rigid ring with init statics */ 
            };

            /** The Contact Method type. */
            public: enum ContactMethodType
            {
                ContactMethodTypeSmoothRoad/** smooth road */ ,
                ContactMethodTypeCircularCrossSection/** circular cross section */ ,
                ContactMethodTypeMovingRoad/** moving road */ ,
                ContactMethodTypeRoad2D/** road2d */ ,
                ContactMethodTypeRoad3D/** road3d */ 
            };

            private: TirePropertyTnoBuilderImpl * m_tirepropertytnobuilder_impl;
            private: friend class  _TirePropertyTnoBuilderBuilder;
            protected: TirePropertyTnoBuilder();
            public: ~TirePropertyTnoBuilder();
            /**Returns  the TNO file.
                        This is a file containing information describing the TNO tire.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString TnoFile
            (
            );
            /**Sets  the TNO file.
                        This is a file containing information describing the TNO tire.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTnoFile
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the TNO file.
                        This is a file containing information describing the TNO tire.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetTnoFile
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the track side. Only used in combination with a 'Road Profile' Road Element
                        that specifies road height vs. traveled distance. The *.rdf road profile file
                        contains 2 tracks, a left track for left wheels and a right track for right wheels. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::TrackSideType TrackSide
            (
            );
            /**Sets  the track side. Only used in combination with a 'Road Profile' Road Element
                        that specifies road height vs. traveled distance. The *.rdf road profile file
                        contains 2 tracks, a left track for left wheels and a right track for right wheels. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTrackSide
            (
                NXOpen::Motion::TirePropertyTnoBuilder::TrackSideType trackSide /** trackside */ 
            );
            /**Returns  the iswitch definition. If set to Detailed, 4 parameters are used to specify iswitch:
                        Tire Side, Slip Forces, Dynamics, and Contact Method. Otherwise it is specified
                        as an integer value. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::IswitchDefinitionType IswitchDefinition
            (
            );
            /**Sets  the iswitch definition. If set to Detailed, 4 parameters are used to specify iswitch:
                        Tire Side, Slip Forces, Dynamics, and Contact Method. Otherwise it is specified
                        as an integer value. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetIswitchDefinition
            (
                NXOpen::Motion::TirePropertyTnoBuilder::IswitchDefinitionType iswitchDef /** iswitchdef */ 
            );
            /**Returns  the Iswitch.
                        It is a Tire model usage flag. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Iswitch
            (
            );
            /**Returns  the tire side. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::TireSideType TireSide
            (
            );
            /**Sets  the tire side. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTireSide
            (
                NXOpen::Motion::TirePropertyTnoBuilder::TireSideType tireSide /** tireside */ 
            );
            /**Returns  the slip forces type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::SlipForcesType SlipForces
            (
            );
            /**Sets  the slip forces type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSlipForces
            (
                NXOpen::Motion::TirePropertyTnoBuilder::SlipForcesType slipForces /** slipforces */ 
            );
            /**Returns  the dynamics type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::DynamicsType Dynamics
            (
            );
            /**Sets  the dynamics type. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDynamics
            (
                NXOpen::Motion::TirePropertyTnoBuilder::DynamicsType dynamics /** dynamics */ 
            );
            /**Returns  the contact method. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::TirePropertyTnoBuilder::ContactMethodType ContactMethod
            (
            );
            /**Sets  the contact method. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetContactMethod
            (
                NXOpen::Motion::TirePropertyTnoBuilder::ContactMethodType contactMethod /** contactmethod */ 
            );
            /**Returns  the Vertical Stiffness scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * VerticalStiffness
            (
            );
            /**Returns  the Vertical Damping scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * VerticalDamping
            (
            );
            /**Returns  the LMUX scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lmux
            (
            );
            /**Returns  the LMUY scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lmuy
            (
            );
            /**Returns  the LKX scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lkx
            (
            );
            /**Returns  the LKY scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lky
            (
            );
            /**Returns  the LTR scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Ltr
            (
            );
            /**Returns  the LKZC scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lkzc
            (
            );
            /**Returns  the LKYC scaling coefficient.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Lkyc
            (
            );
            /**Returns  the Static Radius. It is used for static analysis only. 
                        Specifies the tire radius only used in static equilibrating force calculations. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * StaticRadius
            (
            );
            /**Returns  the static vertical stiffness.
                        It specifies the vertical stiffness only used in static equilibrating force calculations.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * StaticVerticalStiffness
            (
            );
            /**Returns  the static hold. It is ussed for static analysis only.
                        If set to true, holds the tire in position. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool StaticHold
            (
            );
            /**Sets  the static hold. It is ussed for static analysis only.
                        If set to true, holds the tire in position. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStaticHold
            (
                bool staticHold /** statichold */ 
            );
            /**Returns  the name.
                        It is a uniqe name within tire properties.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the name.
                        It is a uniqe name within tire properties.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name.
                        It is a uniqe name within tire properties.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
