#ifndef NXOpen_CAM_FBM_FEATUREGEOMETRY_HXX_INCLUDED
#define NXOpen_CAM_FBM_FEATUREGEOMETRY_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_FBM_FeatureGeometry.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FBM_FeatureSet.hxx>
#include <NXOpen/CAM_Geometry.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        namespace FBM
        {
            class FeatureGeometry;
        }
    }
    namespace CAM
    {
        class CAMFeature;
    }
    namespace CAM
    {
        namespace FBM
        {
            class Feature;
        }
    }
    namespace CAM
    {
        namespace FBM
        {
            class FeatureSet;
        }
    }
    namespace CAM
    {
        class Geometry;
    }
    class NXObject;
    namespace CAM
    {
        namespace FBM
        {
            class _FeatureGeometryBuilder;
            class FeatureGeometryImpl;
            /** Represents a feature geometry builder  <br> This is an abstract class and cannot be instantiated.  <br> 
             <br>  Created in NX9.0.1.  <br>  
            */
            class NXOPENCPP_CAMEXPORT  FeatureGeometry : public NXOpen::CAM::Geometry
            {
                /** the optimization types 
                 <br>  Created in NX9.0.1.  <br>  
                */
                public: enum SortOrder
                {
                    SortOrderClosest/** Sort order: Closet */,
                    SortOrderShortestPath/** Sort order: Shortest Path */,
                    SortOrderPrimaryDirection/** Sort order: Primary Direction */
                };

                /** the direction types 
                 <br>  Created in NX9.0.2.  <br>  
                */
                public: enum SequenceDirectionType
                {
                    SequenceDirectionTypeXm/** Direction: XM */,
                    SequenceDirectionTypeYm/** Direction: YM */,
                    SequenceDirectionTypeZm/** Direction: ZM */,
                    SequenceDirectionTypeVector/** Direction: Vector */
                };

                /** the pattern types 
                 <br>  Created in NX9.0.2.  <br>  
                */
                public: enum SequencePatternType
                {
                    SequencePatternTypeZig/** Pattern: Zig */,
                    SequencePatternTypeZigZag/** Pattern: Zig Zag */
                };

                private: FeatureGeometryImpl * m_featuregeometry_impl;
                private: friend class  _FeatureGeometryBuilder;
                protected: FeatureGeometry();
                public: ~FeatureGeometry();
                /** Create a new empty feature editor @return  the new in process feature set 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: NXOpen::CAM::FBM::FeatureSet * CreateFeatureSet
                (
                );
                /** Creates a feature geometry set  @return  the new in process feature set 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: NXOpen::CAM::FBM::FeatureSet * AddFeatureSet
                (
                    NXOpen::CAM::CAMFeature * tagMachiningFeature /** the machining feature */,
                    const NXString & featureType /** the in process feature type */
                );
                /** Creates a feature geometry set  @return  the new in process feature set 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                NXOpen::CAM::FBM::FeatureSet * AddFeatureSet
                (
                    NXOpen::CAM::CAMFeature * tagMachiningFeature /** the machining feature */,
                    const char * featureType /** the in process feature type */
                );
                /** Get the in process feature editor at the specified index  @return  the in process feature set 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: NXOpen::CAM::FBM::FeatureSet * GetFeatureSet
                (
                    int nIndex /** the index of the feature set editor */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetDefaultAttribute
                (
                    const NXString & attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetDefaultAttribute
                (
                    const char * attributeName /** the attribute name */,
                    double dValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetDefaultAttribute
                (
                    const NXString & attributeName /** the attribute name */,
                    const NXString & strValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetDefaultAttribute
                (
                    const char * attributeName /** the attribute name */,
                    const char * strValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetDefaultAttribute
                (
                    const NXString & attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetDefaultAttribute
                (
                    const char * attributeName /** the attribute name */,
                    int nValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetDefaultAttribute
                (
                    const NXString & attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Sets a default attribute value 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetDefaultAttribute
                (
                    const char * attributeName /** the attribute name */,
                    bool bValue /** the attribute value */
                );
                /** Reorders the features according to a predefined algorithm 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ReorderFeatures
                (
                    NXOpen::CAM::FBM::FeatureGeometry::SortOrder sortType /** sorttype */ 
                );
                /** Reorders the features according to primary direction 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ReorderFeaturesByDirection
                (
                    NXOpen::CAM::FBM::FeatureGeometry::SequenceDirectionType direction /** direction */ ,
                    NXOpen::CAM::FBM::FeatureGeometry::SequencePatternType pattern /** pattern */ ,
                    const NXOpen::Vector3d & vecValue /** vecvalue */ 
                );
                /** Reorders the features according to primary direction with band width 
                 <br>  Created in NX9.0.3.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ReorderFeaturesByDirection
                (
                    NXOpen::CAM::FBM::FeatureGeometry::SequenceDirectionType direction /** direction */ ,
                    NXOpen::CAM::FBM::FeatureGeometry::SequencePatternType pattern /** pattern */ ,
                    const NXOpen::Vector3d & vecValue /** vecvalue */ ,
                    double bandWidth /** bandwidth */ 
                );
                /** Reverse the features 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ReverseFeatures
                (
                );
                /** Reload list from parent 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void ReloadList
                (
                );
                /** Change machining area 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetMachiningArea
                (
                    const NXString & machiningArea /** the machining area */
                );
                /** Change machining area 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                void SetMachiningArea
                (
                    const char * machiningArea /** the machining area */
                );
                /** Returns the machining area  @return  the machining area 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXString GetMachiningArea
                (
                );
                /**Sets  the use model depth flag 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: void SetUseModelDepth
                (
                    bool flag /** flag */ 
                );
                /**Returns  the use model depth flag 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : None */
                public: bool UseModelDepth
                (
                );
                /** Create a series of (in process) features. Depending on the input objects feature recognition is performed. When
                                no known features can be recognized, tagged features are created of type featureType  @return  
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                public: std::vector<NXOpen::CAM::FBM::Feature *> CreateFeatures
                (
                    const std::vector<NXOpen::NXObject *> & objects /** the geometry objects, can also be machining features */,
                    const NXString & featureType /** the machining feature type of the implictly created features when feature recognition fails */
                );
                /** Create a series of (in process) features. Depending on the input objects feature recognition is performed. When
                                no known features can be recognized, tagged features are created of type featureType  @return  
                 <br>  Created in NX10.0.3.  <br>  
                 <br> License requirements : cam_base ("CAM BASE") */
                std::vector<NXOpen::CAM::FBM::Feature *> CreateFeatures
                (
                    const std::vector<NXOpen::NXObject *> & objects /** the geometry objects, can also be machining features */,
                    const char * featureType /** the machining feature type of the implictly created features when feature recognition fails */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
