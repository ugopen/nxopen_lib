#ifndef NXOpen_CAE_DURSPECIALISTLOADPROVIDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTLOADPROVIDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistLoadProvider.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistLoadProvider;
    }
    class NXObject;
    namespace CAE
    {
        class _DurSpecialistLoadProviderBuilder;
        class DurSpecialistLoadProviderImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::DurSpecialistLoadProvider NXOpen::CAE::DurSpecialistLoadProvider@endlink    <br> To create or edit an instance of this class, use @link NXOpen::CAE::DurSpecialistLoadProviderBuilder  NXOpen::CAE::DurSpecialistLoadProviderBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistLoadProvider : public NXOpen::NXObject
        {
            private: DurSpecialistLoadProviderImpl * m_durspecialistloadprovider_impl;
            private: friend class  _DurSpecialistLoadProviderBuilder;
            protected: DurSpecialistLoadProvider();
            public: ~DurSpecialistLoadProvider();

            /// \cond NX_NO_DOC 
            /** Rename the LoadProvider 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void Rename
            (
                const NXString & title /** new LoadProvider name */
            );
            /** Rename the LoadProvider 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            void Rename
            (
                const char * title /** new LoadProvider name */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Clone the LoadProvider  @return  Cloned DurSpecialist LoadProvider 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: NXOpen::CAE::DurSpecialistLoadProvider * CloneLoadProvider
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Opens the Information window. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void InformationWindow
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
