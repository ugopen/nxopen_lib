#ifndef NXOpen_ASSEMBLIES_REFLECTCOMPONENTBUILDER_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_REFLECTCOMPONENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_ReflectComponentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_assemblies_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Assemblies
    {
        class ReflectComponentBuilder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class Builder;
    class Plane;
    namespace Assemblies
    {
        class _ReflectComponentBuilderBuilder;
        class ReflectComponentBuilderImpl;
        /**
            Represents a builder class that creates reflected component
             <br> To create a new instance of this class, use @link NXOpen::Assemblies::AssemblyManager::CreateReflectComponentBuilder  NXOpen::Assemblies::AssemblyManager::CreateReflectComponentBuilder @endlink  <br> 
         <br>  Created in NX12.0.2.  <br>  
        */
        class NXOPENCPP_ASSEMBLIESEXPORT  ReflectComponentBuilder : public NXOpen::Builder
        {
            private: ReflectComponentBuilderImpl * m_reflectcomponentbuilder_impl;
            private: friend class  _ReflectComponentBuilderBuilder;
            protected: ReflectComponentBuilder();
            public: ~ReflectComponentBuilder();
            /** Returns the components to be used for creating reflected components
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: void GetComponentsToReflect
            (
                std::vector<NXOpen::Assemblies::Component *> & componentsToReflect /** componentstoreflect */ 
            );
            /** Sets the components to be used for creating reflected components
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetComponentsToReflect
            (
                const std::vector<NXOpen::Assemblies::Component *> & componentsToReflect /** componentstoreflect */ 
            );
            /** Returns the reflection plane to be used for creating reflected components @return  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * GetReflectionPlane
            (
            );
            /** Sets the reflection plane to be used for creating reflected components
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetReflectionPlane
            (
                NXOpen::Plane * reflectionPlane /** reflectionplane */ 
            );
            /** Returns the reflected components
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: void GetReflectedComponents
            (
                std::vector<NXOpen::Assemblies::Component *> & reflectedComponents /** reflectedcomponents */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
