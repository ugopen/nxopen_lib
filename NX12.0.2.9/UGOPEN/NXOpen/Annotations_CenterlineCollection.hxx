#ifndef NXOpen_ANNOTATIONS_CENTERLINECOLLECTION_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CENTERLINECOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CenterlineCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <iterator>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_AutomaticCenterlineBuilder.hxx>
#include <NXOpen/Annotations_BoltCircleCenterlineBuilder.hxx>
#include <NXOpen/Annotations_CenterMarkBuilder.hxx>
#include <NXOpen/Annotations_Centerline2dBuilder.hxx>
#include <NXOpen/Annotations_Centerline3dBuilder.hxx>
#include <NXOpen/Annotations_CircularCenterlineBuilder.hxx>
#include <NXOpen/Annotations_PmiBoltCircleCenterlineBuilder.hxx>
#include <NXOpen/Annotations_PmiCenterMarkBuilder.hxx>
#include <NXOpen/Annotations_PmiCenterline3dBuilder.hxx>
#include <NXOpen/Annotations_SymmetricalCenterlineBuilder.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class CenterlineCollection;
    }
    namespace Annotations
    {
        class AnnotationManager;
    }
    namespace Annotations
    {
        class Centerline;
    }
    namespace Annotations
    {
        class AutomaticCenterlineBuilder;
    }
    namespace Annotations
    {
        class BoltCircleCenterline;
    }
    namespace Annotations
    {
        class BoltCircleCenterlineBuilder;
    }
    namespace Annotations
    {
        class CenterMark;
    }
    namespace Annotations
    {
        class CenterMarkBuilder;
    }
    namespace Annotations
    {
        class Centerline2d;
    }
    namespace Annotations
    {
        class Centerline2dBuilder;
    }
    namespace Annotations
    {
        class Centerline3d;
    }
    namespace Annotations
    {
        class Centerline3dBuilder;
    }
    namespace Annotations
    {
        class CircularCenterline;
    }
    namespace Annotations
    {
        class CircularCenterlineBuilder;
    }
    namespace Annotations
    {
        class PmiBoltCircleCenterline;
    }
    namespace Annotations
    {
        class PmiBoltCircleCenterlineBuilder;
    }
    namespace Annotations
    {
        class PmiCenterMark;
    }
    namespace Annotations
    {
        class PmiCenterMarkBuilder;
    }
    namespace Annotations
    {
        class PmiCenterline3d;
    }
    namespace Annotations
    {
        class PmiCenterline3dBuilder;
    }
    namespace Annotations
    {
        class SymmetricalCenterline;
    }
    namespace Annotations
    {
        class SymmetricalCenterlineBuilder;
    }
    namespace Annotations
    {
        class CenterlineCollectionImpl;
        /** Represents a collection of @link NXOpen::Annotations::Centerline NXOpen::Annotations::Centerline@endlink  objects  <br> To obtain an instance of this class, refer to @link NXOpen::Annotations::AnnotationManager  NXOpen::Annotations::AnnotationManager @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  CenterlineCollection : public NXOpen::TaggedObjectCollection
        {
            private: CenterlineCollectionImpl * m_centerlinecollection_impl;
            private: NXOpen::Annotations::AnnotationManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit CenterlineCollection(NXOpen::Annotations::AnnotationManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~CenterlineCollection();
            /** Iterator for accessing the contents of the collection. */
            //lint -sem(NXOpen::Annotations::CenterlineCollection::iterator::copy,initializer)
            class iterator : public std::iterator<std::forward_iterator_tag, NXOpen::Annotations::Centerline *>
            {
            public:
                /** Default constructor */
                iterator() : m_context(NULL), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                } //lint !e1401 m_state is not initialized
                /// \cond NX_NO_DOC
                explicit iterator(NXOpen::Annotations::CenterlineCollection *context) : m_context(context), m_current(NULL_TAG)
                {
                    // coverity[uninit_member]
                }//lint !e1401 m_state is not initialized
                /// \endcond
                /** Copy constructor */
                iterator(const iterator &other): m_context(NULL), m_current(NULL_TAG)
                {
                    copy(other);
                }
                /** Copy constructor */
                iterator &operator =(const iterator &other)
                {
                    if (&other != this)
                        copy(other);
                    return *this;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                bool operator ==(const iterator &other) const
                {
                    return m_current == other.m_current && m_context == other.m_context;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                bool operator !=(const iterator &other) const
                {
                    return !operator == (other);
                }
                /** Return the element currently pointed to by the iterator. */
                NXOPENCPP_ANNOTATIONSEXPORT  value_type operator * ();
                /** Points the iterator to next element. */
                iterator & operator ++()
                {
                    next();
                    return *this;
                }
                /** Points the iterator to next element. */
                iterator operator ++(int)
                {
                    iterator tmp(*this);
                    ++*this;
                    return tmp;
                }
            private:
                void copy(const iterator &other)
                {
                    m_context = other.m_context;
                    m_current = other.m_current;
                    for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                         m_state[i] = other.m_state[i];
                }
                NXOPENCPP_ANNOTATIONSEXPORT  void next();
                NXOpen::Annotations::CenterlineCollection *m_context;
                tag_t m_current;
                unsigned int m_state[8];
            };
            /** Returns an iterator addressing the first element. */
            iterator begin();
            /** Returns an iterator addressing one past the last element. */
            iterator end()
            {
                return iterator(this);
            }
            /** Creates the Symmetrical Centerline builder  @return  SymmetricalCenterlineBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::SymmetricalCenterlineBuilder * CreateSymmetricalCenterlineBuilder
            (
                NXOpen::Annotations::SymmetricalCenterline * centerline /** @link NXOpen::Annotations::SymmetricalCenterline NXOpen::Annotations::SymmetricalCenterline@endlink  to be edited, if NULL then create a new one */
            );
            /** Creates the BoltCircleCenterline builder  @return  BoltCircleCenterlineBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::BoltCircleCenterlineBuilder * CreateBoltCircleCenterlineBuilder
            (
                NXOpen::Annotations::BoltCircleCenterline * centerline /** @link NXOpen::Annotations::BoltCircleCenterline NXOpen::Annotations::BoltCircleCenterline@endlink  to be edited, if NULL then create a new one */
            );
            /** Creates the CircularCenterline builder  @return  CircularCenterlineBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CircularCenterlineBuilder * CreateCircularCenterlineBuilder
            (
                NXOpen::Annotations::CircularCenterline * centerline /** @link NXOpen::Annotations::CircularCenterline NXOpen::Annotations::CircularCenterline@endlink  to be edited, if NULL then create a new one  */
            );
            /** Creates the CenterMark Builder  @return  CenterMarkBuilder Object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CenterMarkBuilder * CreateCenterMarkBuilder
            (
                NXOpen::Annotations::CenterMark * centerline /** @link NXOpen::Annotations::CenterMark NXOpen::Annotations::CenterMark@endlink  to be edited, if NULL then create a new one */
            );
            /** Creates the Pmi CenterMark Builder  @return  PmiCenterMarkBuilder Object 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiCenterMarkBuilder * CreatePmiCenterMarkBuilder
            (
                NXOpen::Annotations::PmiCenterMark * centerline /** @link NXOpen::Annotations::PmiCenterMark NXOpen::Annotations::PmiCenterMark@endlink  to be edited, if NULL then create a new one */
            );
            /** Creates the 2D Centerline builder  @return  Centerline2dBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Centerline2dBuilder * CreateCenterline2dBuilder
            (
                NXOpen::Annotations::Centerline2d * cline /** @link NXOpen::Annotations::Centerline2d NXOpen::Annotations::Centerline2d@endlink  to be edited */
            );
            /** Finds the Centerline with the given name.  An exception will be 
                    thrown if no object can be found with given name  @return  Centerline with this identifier 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Centerline * FindObject
            (
                const NXString & journalIdentifier /** Identifier of the centerline to be found */
            );
            /** Finds the Centerline with the given name.  An exception will be 
                    thrown if no object can be found with given name  @return  Centerline with this identifier 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Annotations::Centerline * FindObject
            (
                const char * journalIdentifier /** Identifier of the centerline to be found */
            );
            /** Creates the AutomaticCenterlineBuilder  @return  AutomaticCenterlineBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::AutomaticCenterlineBuilder * CreateAutomaticCenterlineBuilder
            (
            );
            /** Creates the 3D Centerline builder  @return  Annotations.Centerline3dBuilder object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::Centerline3dBuilder * CreateCenterline3dBuilder
            (
                NXOpen::Annotations::Centerline3d * cline /** @link NXOpen::Annotations::Centerline3d NXOpen::Annotations::Centerline3d@endlink  to be edited */
            );
            /** Creates the Pmi 3D Centerline builder  @return  PmiCenterline3dBuilder object 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiCenterline3dBuilder * CreatePmiCenterline3dBuilder
            (
                NXOpen::Annotations::PmiCenterline3d * cline /** @link NXOpen::Annotations::PmiCenterline3d NXOpen::Annotations::PmiCenterline3d@endlink  to be edited */
            );
            /** Creates the PMI BoltCircleCenterline builder  @return  PmiBoltCircleCenterlineBuilder object 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::PmiBoltCircleCenterlineBuilder * CreatePmiBoltCircleCenterlineBuilder
            (
                NXOpen::Annotations::PmiBoltCircleCenterline * centerline /** @link NXOpen::Annotations::PmiBoltCircleCenterline NXOpen::Annotations::PmiBoltCircleCenterline@endlink  to be edited, if NULL then create a new one */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
