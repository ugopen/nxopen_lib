#ifndef NXOpen_AME_PROJECTENGINEERINGOBJECTBUILDER_HXX_INCLUDED
#define NXOpen_AME_PROJECTENGINEERINGOBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ProjectEngineeringObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AspectDetailsBuilder.hxx>
#include <NXOpen/AME_EOAttributeHolder.hxx>
#include <NXOpen/AME_EODefAttributeHolder.hxx>
#include <NXOpen/AME_ObjectNameIndexBuilder.hxx>
#include <NXOpen/AME_PageObject.hxx>
#include <NXOpen/AME_ProductDefAttributeHolder.hxx>
#include <NXOpen/AME_SelectMountingInterfaceLocationBuilder.hxx>
#include <NXOpen/AME_EngineeringObjectBaseBuilder.hxx>
#include <NXOpen/Tooling_SelectReuseLibraryItemBuilder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ProjectEngineeringObjectBuilder;
    }
    namespace AME
    {
        class AspectDetailsBuilder;
    }
    namespace AME
    {
        class EOAttributeHolder;
    }
    namespace AME
    {
        class EODefAttributeHolder;
    }
    namespace AME
    {
        class EngineeringObjectBaseBuilder;
    }
    namespace AME
    {
        class ObjectNameIndexBuilder;
    }
    namespace AME
    {
        class PageObject;
    }
    namespace AME
    {
        class ProductDefAttributeHolder;
    }
    namespace AME
    {
        class SelectMountingInterfaceLocationBuilder;
    }
    namespace Tooling
    {
        class SelectReuseLibraryItemBuilder;
    }
    namespace AME
    {
        class _ProjectEngineeringObjectBuilderBuilder;
        class ProjectEngineeringObjectBuilderImpl;
        /** JA class for the insert Project Eng object dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateProjectEngineeringObjectBuilder  NXOpen::AME::AMEManager::CreateProjectEngineeringObjectBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ProjectEngineeringObjectBuilder : public NXOpen::AME::EngineeringObjectBaseBuilder
        {
            private: ProjectEngineeringObjectBuilderImpl * m_projectengineeringobjectbuilder_impl;
            private: friend class  _ProjectEngineeringObjectBuilderBuilder;
            protected: ProjectEngineeringObjectBuilder();
            public: ~ProjectEngineeringObjectBuilder();
            /**Returns  the aspect detail ui block
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AspectDetailsBuilder * AspectDetails
            (
            );
            /**Returns  the eo name index and description ui block
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ObjectNameIndexBuilder * EoNameIndex
            (
            );
            /**Returns  the select eo symbol
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::Tooling::SelectReuseLibraryItemBuilder * SelectSymbolDefinition
            (
            );
            /**Returns  the select mounting interface location builder 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::SelectMountingInterfaceLocationBuilder * SelectMountingInterfaceLocation
            (
            );
            /**Sets  the select mounting interface location builder 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectMountingInterfaceLocation
            (
                NXOpen::AME::SelectMountingInterfaceLocationBuilder * mountingInterfaceLocation /** mountinginterfacelocation */ 
            );
            /**Returns  the EO definition attribute holder 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::EODefAttributeHolder * EoDefAttributeHolder
            (
            );
            /**Returns  the Product definition attribute holder 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ProductDefAttributeHolder * ProductDefAttributeHolder
            (
            );
            /**Returns  the container for definition holders 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::EOAttributeHolder * EOAttributeHolder
            (
            );
            /** The preview node location on page. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PreviewNodeLocation
            (
                NXOpen::AME::PageObject * owningPage /** owningpage */ ,
                double locationX /** locationx */ ,
                double locationY /** locationy */ ,
                bool isNodePlaced /** isnodeplaced */ ,
                int index /** Index of the Product and it's Product components */
            );
            /** Set the Object Name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetObjectName
            (
                const NXString & objectName /** objectname */ 
            );
            /** Set the Object Name. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetObjectName
            (
                const char * objectName /** objectname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
