#ifndef NXOpen_FEATURES_SHIPDESIGN_PLATESTOCKBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PLATESTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PlateStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PlateStockBuilder;
        }
    }
    class Builder;
    class Expression;
    namespace Features
    {
        namespace ShipDesign
        {
            class _PlateStockBuilderBuilder;
            class PlateStockBuilderImpl;
            /** This builder allows you to define the stock information for plate system features in ship design. 
                    It represents @link NXOpen::Features::ShipDesign::PlateStockBuilder NXOpen::Features::ShipDesign::PlateStockBuilder@endlink   <br> This class is sub-object of another builder, and cannot be directly instantiated.  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            KnuckleRatio </td> <td> 
             
            3.0 </td> </tr> 

            <tr><td> 
             
            KnuckleSmoothAngle </td> <td> 
             
            3.0 </td> </tr> 

            <tr><td> 
             
            MaterialOption </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            OppositeThickness.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            RestrictThicknessToMaterial </td> <td> 
             
            true </td> </tr> 

            <tr><td> 
             
            ThickenOption </td> <td> 
             
            SingleSided </td> </tr> 

            <tr><td> 
             
            Thickness.Value </td> <td> 
             
            10 (millimeters part), 0.5 (inches part) </td> </tr> 

            <tr><td> 
             
            ThicknessSourceOption </td> <td> 
             
            List </td> </tr> 

            </table>  

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PlateStockBuilder : public NXOpen::Builder
            {
                /** Settings to indicate how to apply the thickness to the mold face or offset mold face . 
                            The front side of the offset mold face is defined by the client class using  @link NXOpen::Features::ShipDesign::PlateStockBuilder NXOpen::Features::ShipDesign::PlateStockBuilder@endlink . */
                public: enum ThickenOptions
                {
                    ThickenOptionsSingleSided/** Thickness is applied to only the front side of the offset mold face. */,
                    ThickenOptionsTwoSided/** The opposite thickness is applied to the back side of the offset mold face, thickness minus the opposite thickness is applied to the front side of the offset mold face. */,
                    ThickenOptionsSymmetric/** Half of the thickness is applied to back and front sides of the offset mold face. */
                };

                /** Settings to indicate where the material thickness source resides. */
                public: enum ThicknessSourceOptions
                {
                    ThicknessSourceOptionsFile/** The thickness is defined by a table of standard thicknesses for different material and material grades in CSV file. */,
                    ThicknessSourceOptionsList/** The thickness is defined by a list of standard thicknesses for different material and material grades. */
                };

                private: PlateStockBuilderImpl * m_platestockbuilder_impl;
                private: friend class  _PlateStockBuilderBuilder;
                protected: PlateStockBuilder();
                public: ~PlateStockBuilder();
                /**Returns  the flag that indicates if thickness specification should be restricted to that defined in the material data base.
                             true indicates it should be restricted, false indicates it is not restricted.
                            
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool RestrictThicknessToMaterial
                (
                );
                /**Sets  the flag that indicates if thickness specification should be restricted to that defined in the material data base.
                             true indicates it should be restricted, false indicates it is not restricted.
                            
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetRestrictThicknessToMaterial
                (
                    bool restrictThicknessToMaterial /** restrictthicknesstomaterial */ 
                );
                /**Returns  the thickness source option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PlateStockBuilder::ThicknessSourceOptions ThicknessSourceOption
                (
                );
                /**Sets  the thickness source option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetThicknessSourceOption
                (
                    NXOpen::Features::ShipDesign::PlateStockBuilder::ThicknessSourceOptions thicknessSourceOption /** thicknesssourceoption */ 
                );
                /**Returns  the material option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaterialOption
                (
                );
                /**Sets  the material option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetMaterialOption
                (
                    int materialOption /** materialoption */ 
                );
                /**Returns  the material grade option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int MaterialGradeOption
                (
                );
                /**Sets  the material grade option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetMaterialGradeOption
                (
                    int materialGradeOption /** materialgradeoption */ 
                );
                /**Returns  the thickness option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int ThicknessOption
                (
                );
                /**Sets  the thickness option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetThicknessOption
                (
                    int thicknessOption /** thicknessoption */ 
                );
                /**Returns  the thickness. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Thickness
                (
                );
                /**Returns  the thicken option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PlateStockBuilder::ThickenOptions ThickenOption
                (
                );
                /**Sets  the thicken option. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetThickenOption
                (
                    NXOpen::Features::ShipDesign::PlateStockBuilder::ThickenOptions thickenOption /** thickenoption */ 
                );
                /**Returns  the opposite thickness. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * OppositeThickness
                (
                );
                /**Sets  the material name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetMaterialName
                (
                    const NXString & materialName /** materialname */ 
                );
                /**Sets  the material name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetMaterialName
                (
                    const char * materialName /** materialname */ 
                );
                /**Returns  the material name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString MaterialName
                (
                );
                /**Sets  the material grade name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetMaterialGradeName
                (
                    const NXString & materiaGradelName /** materiagradelname */ 
                );
                /**Sets  the material grade name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetMaterialGradeName
                (
                    const char * materiaGradelName /** materiagradelname */ 
                );
                /**Returns  the material grade name. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString MaterialGradeName
                (
                );
                /**Returns  the material mass density. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MassDensity
                (
                );
                /**Returns  the weight rating, which is defined together with material data and has one to one relationship to the thickness. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: NXString WeightRating
                (
                );
                /**Sets  the weight rating, which is defined together with material data and has one to one relationship to the thickness. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                public: void SetWeightRating
                (
                    const NXString & weightRating /** weightrating */ 
                );
                /**Sets  the weight rating, which is defined together with material data and has one to one relationship to the thickness. 
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
                void SetWeightRating
                (
                    const char * weightRating /** weightrating */ 
                );
                /**Returns  the knuckle ratio, which is used to calcuate the knuckle bend radius by multiplying the plate thickness by the ratio.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double KnuckleRatio
                (
                );
                /**Sets  the knuckle ratio, which is used to calcuate the knuckle bend radius by multiplying the plate thickness by the ratio.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetKnuckleRatio
                (
                    double knuckleRatio /** knuckleratio */ 
                );
                /**Returns  the knuckle smooth angle, which is used to determine whether a edge is knuckle edge or not.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double KnuckleSmoothAngle
                (
                );
                /**Sets  the knuckle smooth angle, which is used to determine whether a edge is knuckle edge or not.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetKnuckleSmoothAngle
                (
                    double knuckleSmoothAngle /** knucklesmoothangle */ 
                );
                /**Sets  the thickness in string format. 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetThicknessStr
                (
                    const NXString & thicknessStr /** thicknessstr */ 
                );
                /**Sets  the thickness in string format. 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                void SetThicknessStr
                (
                    const char * thicknessStr /** thicknessstr */ 
                );
                /**Returns  the thickness in string format. 
                 <br>  Created in NX10.0.1.  <br>  
                 <br> License requirements : None */
                public: NXString ThicknessStr
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
