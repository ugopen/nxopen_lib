#ifndef NXOpen_FEATURES_SHIPDESIGN_STEELDISTRIBUTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_STEELDISTRIBUTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_SteelDistributionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelDistributionBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class SelectBodyList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _SteelDistributionBuilderBuilder;
            class SteelDistributionBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::SteelDistribution NXOpen::Features::ShipDesign::SteelDistribution@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateSteelDistributionBuilder  NXOpen::Features::ShipCollection::CreateSteelDistributionBuilder @endlink  <br> 
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SteelDistributionBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Sa Name */
                public: enum SaName
                {
                    SaNameFirstValue/** first value */ 
                };

                /** Sa Type */
                public: enum SaType
                {
                    SaTypeFirstValue/** first value */ 
                };

                /** Sa Size */
                public: enum SaSize
                {
                    SaSizeFirstValue/** first value */ 
                };

                /** Sa Material */
                public: enum SaMaterial
                {
                    SaMaterialFirstValue/** first value */ 
                };

                /** Sa Form */
                public: enum SaForm
                {
                    SaFormFirstValue/** first value */ 
                };

                private: SteelDistributionBuilderImpl * m_steeldistributionbuilder_impl;
                private: friend class  _SteelDistributionBuilderBuilder;
                protected: SteelDistributionBuilder();
                public: ~SteelDistributionBuilder();
                /**Returns  the assembly part 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString AssemblyPart
                (
                );
                /**Sets  the assembly part 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetAssemblyPart
                (
                    const NXString & assemblyPart /** assemblypart */ 
                );
                /**Sets  the assembly part 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetAssemblyPart
                (
                    const char * assemblyPart /** assemblypart */ 
                );
                /**Returns  the Template Category Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString TemplateCategoryName
                (
                );
                /**Sets  the Template Category Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetTemplateCategoryName
                (
                    const NXString & templateCategoryName /** templatecategoryname */ 
                );
                /**Sets  the Template Category Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetTemplateCategoryName
                (
                    const char * templateCategoryName /** templatecategoryname */ 
                );
                /**Returns  the Template Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString TemplateName
                (
                );
                /**Sets  the Template Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetTemplateName
                (
                    const NXString & templateName /** templatename */ 
                );
                /**Sets  the Template Name. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetTemplateName
                (
                    const char * templateName /** templatename */ 
                );
                /**Returns  the Item Type. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ItemType
                (
                );
                /**Sets  the Item Type. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetItemType
                (
                    const NXString & itemType /** itemtype */ 
                );
                /**Sets  the Item Type. Only used in managed mode, ignored in native mode. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetItemType
                (
                    const char * itemType /** itemtype */ 
                );
                /**Returns  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString FeatureName
                (
                );
                /**Sets  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetFeatureName
                (
                    const NXString & featureName /** featurename */ 
                );
                /**Sets  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetFeatureName
                (
                    const char * featureName /** featurename */ 
                );
                /**Returns  the get subcomponent 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SubComponent
                (
                );
                /**Sets  the get subcomponent 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetSubComponent
                (
                    bool subComponent /** subcomponent */ 
                );
                /**Returns  the steel bodies 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBodyList * SteelBodies
                (
                );
                /**Returns  the name 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaName Name
                (
                );
                /**Sets  the name 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetName
                (
                    NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaName name /** name */ 
                );
                /**Returns  the type 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaType Type
                (
                );
                /**Sets  the type 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetType
                (
                    NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaType type /** type */ 
                );
                /**Returns  the size 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaSize Size
                (
                );
                /**Sets  the size 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetSize
                (
                    NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaSize size /** size */ 
                );
                /**Returns  the material 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaMaterial Material
                (
                );
                /**Sets  the material 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetMaterial
                (
                    NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaMaterial material /** material */ 
                );
                /**Returns  the form 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaForm Form
                (
                );
                /**Sets  the form 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetForm
                (
                    NXOpen::Features::ShipDesign::SteelDistributionBuilder::SaForm form /** form */ 
                );
                /**Returns  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Description
                (
                );
                /**Sets  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetDescription
                (
                    const NXString & description /** description */ 
                );
                /**Sets  the description 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetDescription
                (
                    const char * description /** description */ 
                );
                /**Returns  the section number 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString SectionNumber
                (
                );
                /**Sets  the section number 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetSectionNumber
                (
                    const NXString & sectionNumber /** sectionnumber */ 
                );
                /**Sets  the section number 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetSectionNumber
                (
                    const char * sectionNumber /** sectionnumber */ 
                );
                /**Returns  the sa project 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString SaProject
                (
                );
                /**Sets  the sa project 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetSaProject
                (
                    const NXString & saProject /** saproject */ 
                );
                /**Sets  the sa project 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                void SetSaProject
                (
                    const char * saProject /** saproject */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
