#ifndef NXOpen_MFG_AM_APPLICATIONMANAGER_HXX_INCLUDED
#define NXOpen_MFG_AM_APPLICATIONMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_ApplicationManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Mfg_AM_AttributeClipboard.hxx>
#include <NXOpen/Mfg_AM_ProfileLibrary.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class ApplicationManager;
        }
    }
    class Session;
    namespace Mfg
    {
        namespace AM
        {
            class AttributeClipboard;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class BuildTray;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class Nester3D;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class ProfileLibrary;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class Support;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class SupportBuilder;
        }
    }
    class Part;
    namespace Mfg
    {
        namespace AM
        {
            class ApplicationManagerImpl;
            /** Represents the Additive Manufacturing application  <br> Use the static method in this class to obtain an instance.  <br> 
             <br>  Created in NX11.0.1.  <br>  
            */
            class MFGAMOPENCPPEXPORT  ApplicationManager
            {
                private: ApplicationManagerImpl * m_applicationmanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit ApplicationManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static ApplicationManager* theApplicationManager;
                /** Returns the ApplicationManager object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static ApplicationManager* GetApplicationManager(NXOpen::Session *owner);
                public: ~ApplicationManager();
                /** Retrieves the Mfg.AM.BuildTray  @return   the build tray 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::BuildTray * GetBuildTray
                (
                    NXOpen::Part * part /** the part to retrieve the build tray from */
                );
                /** Creates a build tray in a file  @return   the build tray 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: NXOpen::Mfg::AM::BuildTray * CreateBuildTray
                (
                    NXOpen::Part * part /** the part to which the build tray is added*/
                );
                /** Retrieves the 3D Nester object  @return   the 3D Nester 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : am_pb_mtls_nest_3d_2 ("Advanced NX Powder Bed Additive 3D Nesting") OR am_pb_mtls_nest_3d_1 ("Basic NX Powder Bed Additive 3D Nesting") */
                public: NXOpen::Mfg::AM::Nester3D * Get3DNester
                (
                );
                /** Retrieves the support builder object  @return   the support builder 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : am_pb_mtls_sg_2 ("Advanced NX Additive Support Geometry") OR am_pb_mtls_sg_1 ("Basic NX Additive Support Geometry") */
                public: NXOpen::Mfg::AM::SupportBuilder * GetSupportBuilder
                (
                    NXOpen::Mfg::AM::Support * tagSupport /** the support */
                );
                /** Gets the Root Node of Profile Library  @return  profile root 
                 <br>  Created in NX11.0.2.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: NXOpen::Mfg::AM::ProfileLibrary * GetProfileLibrary
                (
                );
                /** Retrieves the Mfg.AM.AttributeClipboard  @return  AttributeClipboard 
                 <br>  Created in NX12.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::AttributeClipboard * GetAttributeClipboard
                (
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
