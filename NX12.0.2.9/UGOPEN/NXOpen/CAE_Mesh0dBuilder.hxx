#ifndef NXOpen_CAE_MESH0DBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MESH0DBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Mesh0dBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ElementTypeBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class Mesh0dBuilder;
    }
    class Builder;
    namespace CAE
    {
        class ElementTypeBuilder;
    }
    namespace CAE
    {
        class Mesh;
    }
    namespace CAE
    {
        class PropertyTable;
    }
    class CoordinateSystem;
    class Expression;
    class SelectDisplayableObjectList;
    namespace CAE
    {
        class _Mesh0dBuilderBuilder;
        class Mesh0dBuilderImpl;
        /** Represents 0D Mesh
             *  Used to create a @link NXOpen::CAE::Mesh0d NXOpen::CAE::Mesh0d@endlink 
              <br> To create a new instance of this class, use @link NXOpen::CAE::MeshManager::CreateMesh0dBuilder  NXOpen::CAE::MeshManager::CreateMesh0dBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  Mesh0dBuilder : public NXOpen::Builder
        {
            /** the 0d mesh creation option */
            public: enum MeshCreationType
            {
                MeshCreationTypeMesh0d/**create 0d Mesh on selected geometry */,
                MeshCreationTypeLumpedMass/**create lumped mass element at the CG of selected geometry */
            };

            private: Mesh0dBuilderImpl * m_mesh0dbuilder_impl;
            private: friend class  _Mesh0dBuilderBuilder;
            protected: Mesh0dBuilder();
            public: ~Mesh0dBuilder();
            /**Returns  the selection objects 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * SelectionList
            (
            );
            /**Returns  the element type builder.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::ElementTypeBuilder * ElementType
            (
            );
            /**Returns  the property table associated with the mesh. 
                        The property table contains the parameters needed for the generation
                        of the mesh.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PropertyTable * PropertyTable
            (
            );
            /** Commits the creation of the 
                                     @link NXOpen::CAE::Mesh0d NXOpen::CAE::Mesh0d@endlink 
                      @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: std::vector<NXOpen::CAE::Mesh *> CommitMesh
            (
            );
            /**Returns  the selection objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * LmEntitySelList
            (
            );
            /**Returns  the mesh creation option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Mesh0dBuilder::MeshCreationType MeshCreateOption
            (
            );
            /**Sets  the mesh creation option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMeshCreateOption
            (
                NXOpen::CAE::Mesh0dBuilder::MeshCreationType meshCreationOption /** meshcreationoption */ 
            );
            /**Returns  the combine body option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool CombineBody
            (
            );
            /**Sets  the combine body option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCombineBody
            (
                bool isCombineBody /** iscombinebody */ 
            );
            /**Returns  the point selection for element creation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::SelectDisplayableObjectList * LmPointSelection
            (
            );
            /**Returns  the mass expression of the lumped mass element 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * ExpressionMass
            (
            );
            /**Returns  the x-offset from cg of the lumped mass element  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * XOffset
            (
            );
            /**Returns  the y-offset from cg of the lumped mass element 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * YOffset
            (
            );
            /**Returns  the z-offset from cg of the lumped mass element 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * ZOffset
            (
            );
            /**Returns  the csys of lumped mass element 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys of lumped mass element 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the method to be used for translating the selected elements 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int CsysOption
            (
            );
            /**Sets  the method to be used for translating the selected elements 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetCsysOption
            (
                int csysOption /** csysoption */ 
            );
            /**Returns  the use total mass option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool TotalMass
            (
            );
            /**Sets  the use total mass option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTotalMass
            (
                bool isTotalMass /** istotalmass */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
