#ifndef NXOpen_DIAGRAMMING_TABLES_CELLBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_TABLES_CELLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_Tables_CellBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_FormattedStringBuilder.hxx>
#include <NXOpen/Diagramming_RenderingPropertiesBuilder.hxx>
#include <NXOpen/Diagramming_Tables_CellSettingsBuilder.hxx>
#include <NXOpen/Diagramming_Tables_Types.hxx>
#include <NXOpen/Diagramming_BaseTaggedObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        namespace Tables
        {
            class CellBuilder;
        }
    }
    namespace Diagramming
    {
        class BaseTaggedObjectBuilder;
    }
    namespace Diagramming
    {
        class FormattedStringBuilder;
    }
    namespace Diagramming
    {
        class RenderingPropertiesBuilder;
    }
    namespace Diagramming
    {
        namespace Tables
        {
            class CellSettingsBuilder;
        }
    }
    class TaggedObject;
    namespace Diagramming
    {
        namespace Tables
        {
            class _CellBuilderBuilder;
            class CellBuilderImpl;
            /**
                    Represents a CellBuilder.
                     <br> This is a sub-builder class and cannot be directly instantiated  <br> 
             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_DIAGRAMMINGEXPORT  CellBuilder : public NXOpen::Diagramming::BaseTaggedObjectBuilder
            {
                private: CellBuilderImpl * m_cellbuilder_impl;
                private: friend class  _CellBuilderBuilder;
                protected: CellBuilder();
                public: ~CellBuilder();
                /** Gets cell settings.  @return  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::Tables::CellSettingsBuilder * GetCellSettings
                (
                );
                /**Returns  the text on cell. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXString Text
                (
                );
                /**Sets  the text on cell. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetText
                (
                    const NXString & strValue /** strvalue */ 
                );
                /**Sets  the text on cell. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                void SetText
                (
                    const char * strValue /** strvalue */ 
                );
                /** Sets cell image file location. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetImageFileLocation
                (
                    const NXString & fileName /** filename */ 
                );
                /** Sets cell image file location. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                void SetImageFileLocation
                (
                    const char * fileName /** filename */ 
                );
                /** Delete cell contents. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void DeleteContent
                (
                );
                /** Gets cell content.  @return  
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Diagramming::Tables::SizedSymbol> GetContent
                (
                );
                /** Sets cell content. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetContent
                (
                    const std::vector<NXOpen::Diagramming::Tables::SizedSymbol> & symbols /** symbols */ 
                );
                /**Returns  the locked flag. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool Locked
                (
                );
                /**Sets  the locked flag. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLocked
                (
                    bool locked /** locked */ 
                );
                /**Returns  the bottom border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::RenderingPropertiesBuilder * BottomBorder
                (
                );
                /**Sets  the bottom border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBottomBorder
                (
                    NXOpen::Diagramming::RenderingPropertiesBuilder * properties /** properties */ 
                );
                /**Returns  the left border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::RenderingPropertiesBuilder * LeftBorder
                (
                );
                /**Sets  the left border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetLeftBorder
                (
                    NXOpen::Diagramming::RenderingPropertiesBuilder * properties /** properties */ 
                );
                /**Returns  the right border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::RenderingPropertiesBuilder * RightBorder
                (
                );
                /**Sets  the right border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetRightBorder
                (
                    NXOpen::Diagramming::RenderingPropertiesBuilder * properties /** properties */ 
                );
                /**Returns  the top border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::RenderingPropertiesBuilder * TopBorder
                (
                );
                /**Sets  the top border line rendering properties. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetTopBorder
                (
                    NXOpen::Diagramming::RenderingPropertiesBuilder * properties /** properties */ 
                );
                /**Returns  the formatted string of the text. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::FormattedStringBuilder * FormattedStringBuilder
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
