#ifndef NXOpen_OPENXML_TABLEDOCUMENTDATA_HXX_INCLUDED
#define NXOpen_OPENXML_TABLEDOCUMENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     OpenXml_TableDocumentData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/OpenXml_DocumentData.hxx>
#include <NXOpen/OpenXml_TableCellData.hxx>
#include <NXOpen/libnxopencpp_openxml_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace OpenXml
    {
        class TableDocumentData;
    }
    namespace OpenXml
    {
        class DocumentData;
    }
    namespace OpenXml
    {
        class TableCellData;
    }
    namespace OpenXml
    {
    }
    namespace OpenXml
    {
        class TableDocumentDataImpl;
        /** Represents the table to be exported to the speific Open XML file. 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_OPENXMLEXPORT  TableDocumentData : public NXOpen::OpenXml::DocumentData
        {
            /** the location of the caption for table data*/
            public: enum CaptionPosition
            {
                CaptionPositionAbove/** the above position */,
                CaptionPositionBellow/** the bellow position*/
            };

            private: TableDocumentDataImpl * m_tabledocumentdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit TableDocumentData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~TableDocumentData();
            /** Gets the column count of table data @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetColumnCount
            (
            );
            /** Gets the row count of table data @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetRowCount
            (
            );
            /** Gets the caption of the table data @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetCaption
            (
                NXOpen::OpenXml::TableDocumentData::CaptionPosition* position /** position */ 
            );
            /** Sets the caption of the table data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCaption
            (
                NXOpen::OpenXml::TableDocumentData::CaptionPosition position /** position */ ,
                const NXString & caption /** caption */ 
            );
            /** Sets the caption of the table data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetCaption
            (
                NXOpen::OpenXml::TableDocumentData::CaptionPosition position /** position */ ,
                const char * caption /** caption */ 
            );
            /** Gets the width array of the columns  @return  the column width array 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetColumnWidths
            (
            );
            /** Sets the width array of the columns 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetColumnWidths
            (
                const std::vector<double> & widths /** the column width array */
            );
            /** Gets the height array of the rows  @return  the column width array 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetRowHeigths
            (
            );
            /** Sets the height array of the rows 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRowHeigths
            (
                const std::vector<double> & heigths /** the column width array */
            );
            /** Creates a new @link NXOpen::OpenXml::TableCellData NXOpen::OpenXml::TableCellData@endlink  object.
                    Does not to free this object, it will be free while deleting 
                    @link NXOpen::OpenXml::TableDocumentData NXOpen::OpenXml::TableDocumentData@endlink  object @return  the table cell data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::TableCellData * AddCellData
            (
                const std::vector<int> & grids /** the grid IDs to be mergered into the cell data*/
            );
            /** Gets the number of table cells  @return  number of table cells
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetCellsCount
            (
            );
            /** Gets the nth table cell data @return  the table cell data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::TableCellData * GetNthCell
            (
                int index /** the index of table cell data*/
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
