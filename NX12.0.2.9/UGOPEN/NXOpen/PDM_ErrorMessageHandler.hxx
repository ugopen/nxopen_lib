#ifndef NXOpen_PDM_ERRORMESSAGEHANDLER_HXX_INCLUDED
#define NXOpen_PDM_ERRORMESSAGEHANDLER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_ErrorMessageHandler.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/ErrorList.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class ErrorMessageHandler;
    }
    class ErrorList;
    namespace PDM
    {
        class ErrorMessageHandlerImpl;
        /**
                Represents the class that contains ErrorObjects and Failed Logical Objects.
            
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  ErrorMessageHandler : public NXOpen::TransientObject
        {
            private: ErrorMessageHandlerImpl * m_errormessagehandler_impl;
            /// \cond NX_NO_DOC 
            public: explicit ErrorMessageHandler(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ErrorMessageHandler();
            /** Returns ERROR_LIST_s  @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ErrorList * GetErrorList
            (
            );
            /** Returns Error Messages  @return  Error Messages  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetErrorMessages
            (
            );
            /** Returns Warning Messages  @return  Warning Messages  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetWarningMessages
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
