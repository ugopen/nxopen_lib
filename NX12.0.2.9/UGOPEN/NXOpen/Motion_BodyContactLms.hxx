#ifndef NXOpen_MOTION_BODYCONTACTLMS_HXX_INCLUDED
#define NXOpen_MOTION_BODYCONTACTLMS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_BodyContactLms.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class BodyContactLms;
    }
    class Expression;
    class NXObject;
    namespace Motion
    {
        class _BodyContactLmsBuilder;
        class BodyContactLmsImpl;
        /** Represents a @link NXOpen::Motion::BodyContactLms NXOpen::Motion::BodyContactLms@endlink  
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  BodyContactLms : public NXOpen::NXObject
        {
            /** the enum for friction option of 3D contact */
            public: enum CoulombFriction
            {
                CoulombFrictionOff/** off */ ,
                CoulombFrictionOn/** on */ 
            };

            /** the enum for force model of 3D contact */
            public: enum ForceModelType
            {
                ForceModelTypeAuto/** auto */ ,
                ForceModelTypeProjectedVertex/** projected vertex */ ,
                ForceModelTypeMidplane/** midplane */ 
            };

            private: BodyContactLmsImpl * m_bodycontactlms_impl;
            private: friend class  _BodyContactLmsBuilder;
            protected: BodyContactLms();
            public: ~BodyContactLms();
            /**Returns  the stiffness 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Stiffness
            (
            );
            /**Returns  the material damping 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaterialDamping
            (
            );
            /**Returns  the max penetration depth 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxPenetrationDepth
            (
            );
            /**Returns  the force exponent 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForceExponent
            (
            );
            /**Returns  the coulomb friction option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactLms::CoulombFriction CoulombFrictionOption
            (
            );
            /**Sets  the coulomb friction option 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCoulombFrictionOption
            (
                NXOpen::Motion::BodyContactLms::CoulombFriction coulombFrictionOption /** coulombfrictionoption */ 
            );
            /**Returns  the static coefficient 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StaticCoefficient
            (
            );
            /**Returns  the stiction velocity 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StictionVelocity
            (
            );
            /**Returns  the dynamic coefficient 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DynamicCoefficient
            (
            );
            /**Returns  the friction velocity 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrictionVelocity
            (
            );
            /**Returns  the action distance tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ActionDistanceTolerance
            (
            );
            /**Returns  the action angle tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ActionAngleTolerance
            (
            );
            /**Returns  the action enable max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool ActionEnableMaxFacetSize
            (
            );
            /**Sets  the action enable max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionEnableMaxFacetSize
            (
                bool actionEnableMaxFacetSize /** actionenablemaxfacetsize */ 
            );
            /**Returns  the action max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ActionMaxFacetSize
            (
            );
            /**Returns  the action tessellation file option
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ActionUseTessellationFile
            (
            );
            /**Sets  the action tessellation file option
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionUseTessellationFile
            (
                bool fileOption /** fileoption */ 
            );
            /**Returns  the action tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString ActionTessellationFile
            (
            );
            /**Sets  the action tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionTessellationFile
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the action tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetActionTessellationFile
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the base distance tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BaseDistanceTolerance
            (
            );
            /**Returns  the base angle tolerance 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BaseAngleTolerance
            (
            );
            /**Returns  the base enable max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool BaseEnableMaxFacetSize
            (
            );
            /**Sets  the base enable max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBaseEnableMaxFacetSize
            (
                bool baseEnableMaxFacetSize /** baseenablemaxfacetsize */ 
            );
            /**Returns  the base max facet size 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BaseMaxFacetSize
            (
            );
            /**Returns  the base tessellation file option
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool BaseUseTessellationFile
            (
            );
            /**Sets  the base tessellation file option
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBaseUseTessellationFile
            (
                bool fileOption /** fileoption */ 
            );
            /**Returns  the base tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString BaseTessellationFile
            (
            );
            /**Sets  the base tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBaseTessellationFile
            (
                const NXString & fileName /** filename */ 
            );
            /**Sets  the base tessellation  file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetBaseTessellationFile
            (
                const char * fileName /** filename */ 
            );
            /**Returns  the force model 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::BodyContactLms::ForceModelType ForceModel
            (
            );
            /**Sets  the force model 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetForceModel
            (
                NXOpen::Motion::BodyContactLms::ForceModelType model /** model */ 
            );
            /**Returns  the force model tolerance 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForceModelTolerance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
