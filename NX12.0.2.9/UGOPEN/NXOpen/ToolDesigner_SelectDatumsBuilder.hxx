#ifndef NXOpen_TOOLDESIGNER_SELECTDATUMSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLDESIGNER_SELECTDATUMSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ToolDesigner_SelectDatumsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libtooldesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ToolDesigner
    {
        class SelectDatumsBuilder;
    }
    class Builder;
    class SelectTaggedObject;
    class SelectTaggedObjectList;
    class TaggedObject;
    namespace ToolDesigner
    {
        class _SelectDatumsBuilderBuilder;
        class SelectDatumsBuilderImpl;
        /** SelectDatumsBuilder   <br> To create a new instance of this class, use @link NXOpen::ToolDesigner::ToolDesignerManager::CreateSelectDatumsBuilder  NXOpen::ToolDesigner::ToolDesignerManager::CreateSelectDatumsBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        XSumInteger </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        YSumInteger </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ZSumInteger </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX10.0.0.  <br>  
        */
        class TOOLDESIGNEROPENCPPEXPORT  SelectDatumsBuilder : public NXOpen::Builder
        {
            /** Represents the attribute to clean options */
            public: enum DatumCleanAPINames
            {
                DatumCleanAPINamesAvailable/** available */ ,
                DatumCleanAPINamesAssaignedPro/** assaigned pro */ ,
                DatumCleanAPINamesAssaignedStation/** assaigned station */ 
            };

            /**Represents the cones direction options */
            public: enum ConesDir
            {
                ConesDirXDir/** xdir */ ,
                ConesDirYDir/** ydir */ ,
                ConesDirZDir/** zdir */ 
            };

            /**Represents search options */
            public: enum SearchOption
            {
                SearchOptionStationID/** station id */ ,
                SearchOptionStationName/** station name */ ,
                SearchOptionOriginalProduct/** original product */ ,
                SearchOptionSpecificProduct/** specific product */ ,
                SearchOptionVolumeScope/** volume scope */ 
            };

            /** SEARCH TYPES Names */
            public: enum Type
            {
                TypeId/** id */ ,
                TypeName/** name */ 
            };

            private: SelectDatumsBuilderImpl * m_selectdatumsbuilder_impl;
            private: friend class  _SelectDatumsBuilderBuilder;
            protected: SelectDatumsBuilder();
            public: ~SelectDatumsBuilder();
            /**Returns  the product selection 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: NXOpen::SelectTaggedObject * ProductSelection
            (
            );
            /** Set the product selection 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetProductSelection
            (
                NXOpen::TaggedObject * productSelection /** productselection */ 
            );
            /** The product selection clear function 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void ClearProductSelection
            (
            );
            /**Returns  the search by specific product selection 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: NXOpen::SelectTaggedObjectList * SearchByProductSelection
            (
            );
            /** Set the search by product selection 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetSearchByProductSelection
            (
                NXOpen::TaggedObject * productSelection /** productselection */ 
            );
            /** The product selection clear function 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void ClearSearchByProductSelection
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void AddDatumsButton
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void RemoveDatumsButton
            (
            );
            /**Returns  the x sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: int XSumInteger
            (
            );
            /**Sets  the x sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetXSumInteger
            (
                int xSumInteger /** xsuminteger */ 
            );
            /**Returns  the y sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: int YSumInteger
            (
            );
            /**Sets  the y sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetYSumInteger
            (
                int ySumInteger /** ysuminteger */ 
            );
            /**The create cones for datum by direction 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void CreateConesForDatumByDirection
            (
                NXOpen::TaggedObject * dfDatum /** dfdatum */ ,
                NXOpen::ToolDesigner::SelectDatumsBuilder::ConesDir number /** number */ 
            );
            /**The builder populate un selected datums list 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void PopulateUnselectedDatumsList
            (
            );
            /**The init assaigned datums for product 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void InitAssaignedDatumsForProductList
            (
                std::vector<NXOpen::TaggedObject *> & datums /** datums */ 
            );
            /**The init assaigned datums for product 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void GetAvaiableDatums
            (
                std::vector<NXOpen::TaggedObject *> & datums /** datums */ 
            );
            /**The update after assigned 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void Assign
            (
                const std::vector<NXOpen::TaggedObject *> & selections /** selections */ 
            );
            /**The update after un assigned 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void UnAssign
            (
                const std::vector<NXOpen::TaggedObject *> & selections /** selections */ 
            );
            /**Returns  the z sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: int ZSumInteger
            (
            );
            /**Sets  the z sum integer 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetZSumInteger
            (
                int zSumInteger /** zsuminteger */ 
            );
            /** Remove all unselected datums from their subset 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void RemoveDatumsFromSession
            (
                bool removeAssignDatums /** removeassigndatums */ 
            );
            /** Search for all the datums inside a certain box
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void VolumeSearch
            (
                const NXOpen::Point3d & bottomVertex /** bottomvertex */ ,
                const NXOpen::Point3d & upperVertex /** uppervertex */ ,
                NXOpen::TaggedObject * selectedObject /** selectedobject */ 
            );
            /**Returns  the SearchOptions 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: NXOpen::ToolDesigner::SelectDatumsBuilder::SearchOption SearchTypes
            (
            );
            /**Sets  the SearchOptions 
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SetSearchTypes
            (
                NXOpen::ToolDesigner::SelectDatumsBuilder::SearchOption val /** val */ 
            );
            /** Search for a station by property and gets its assigned datums
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            public: void SearchDatumsInStationByProperty
            (
                NXOpen::ToolDesigner::SelectDatumsBuilder::Type enum0 /** enum0 */ ,
                const NXString & searchValue /** searchvalue */ 
            );
            /** Search for a station by property and gets its assigned datums
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : fp_fixture_planner ("FULL FIXTURE PLANNER") */
            void SearchDatumsInStationByProperty
            (
                NXOpen::ToolDesigner::SelectDatumsBuilder::Type enum0 /** enum0 */ ,
                const char * searchValue /** searchvalue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
