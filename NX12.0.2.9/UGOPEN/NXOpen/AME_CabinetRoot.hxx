#ifndef NXOpen_AME_CABINETROOT_HXX_INCLUDED
#define NXOpen_AME_CABINETROOT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_CabinetRoot.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AMEEngObject.hxx>
#include <NXOpen/AME_CabinetNode.hxx>
#include <NXOpen/AME_AMEBaseNode.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class CabinetRoot;
    }
    namespace AME
    {
        class AMEBaseNode;
    }
    namespace AME
    {
        class AMEEngObject;
    }
    namespace AME
    {
        class CabinetNode;
    }
    class NXObject;
    namespace AME
    {
        class _CabinetRootBuilder;
        class CabinetRootImpl;
        /** Cabinet Root Node class  <br> This object does not need a creator.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  CabinetRoot : public NXOpen::AME::AMEBaseNode
        {
            /** Represents cabinet state */
            public: enum CabinetState
            {
                CabinetStateActive/** active */ ,
                CabinetStateInactive/** inactive */ 
            };

            private: CabinetRootImpl * m_cabinetroot_impl;
            private: friend class  _CabinetRootBuilder;
            protected: CabinetRoot();
            public: ~CabinetRoot();
            /** Updates the cabinet according to its new state 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCabinetState
            (
                NXOpen::AME::CabinetNode * cabinetNode /** cabinetnode */ ,
                NXOpen::AME::CabinetRoot::CabinetState state /** state */ 
            );
            /** Places the product in active cabinet 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PlaceProductInActiveCabinet
            (
                const NXString & product3DModelFileName /** product3dmodelfilename */ ,
                const NXOpen::Point3d & location /** location */ ,
                NXOpen::AME::AMEEngObject * parentEngObj /** parentengobj */ ,
                NXOpen::NXObject * receptacleObject /** receptacleobject */ 
            );
            /** Places the product in active cabinet 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void PlaceProductInActiveCabinet
            (
                const char * product3DModelFileName /** product3dmodelfilename */ ,
                const NXOpen::Point3d & location /** location */ ,
                NXOpen::AME::AMEEngObject * parentEngObj /** parentengobj */ ,
                NXOpen::NXObject * receptacleObject /** receptacleobject */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
