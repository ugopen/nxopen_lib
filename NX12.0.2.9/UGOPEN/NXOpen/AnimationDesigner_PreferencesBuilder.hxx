#ifndef NXOpen_ANIMATIONDESIGNER_PREFERENCESBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_PREFERENCESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_PreferencesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class PreferencesBuilder;
    }
    class Builder;
    class Expression;
    namespace AnimationDesigner
    {
        class _PreferencesBuilderBuilder;
        class PreferencesBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::PreferencesBuilder NXOpen::AnimationDesigner::PreferencesBuilder@endlink  builder.  <br> Use the static method in @link NXOpen::AnimationDesigner::AnimationDesignerManager NXOpen::AnimationDesigner::AnimationDesignerManager@endlink  to obtain an instance.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  PreferencesBuilder : public NXOpen::Builder
        {
            private: PreferencesBuilderImpl * m_preferencesbuilder_impl;
            private: friend class  _PreferencesBuilderBuilder;
            protected: PreferencesBuilder();
            public: ~PreferencesBuilder();
            /**Returns  the step time expression. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * StepIncrementTime
            (
            );

            /// \cond NX_NO_DOC 
            /**Returns  the gravity direction. 0 - Gx, 1 - Gy, 2 - Gz, 3 - None.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: int GravityDirection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the gravity direction. 0 - Gx, 1 - Gy, 2 - Gz, 3 - None.
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetGravityDirection
            (
                int direction /** direction */ 
            );

            /// \endcond 
            /**Returns  the color for non rigid group body. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: int NonRigidGroupColor
            (
            );
            /**Sets  the color for non rigid group body. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetNonRigidGroupColor
            (
                int color /** color */ 
            );
            /**Returns  the color for contact face. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: int ContactColor
            (
            );
            /**Sets  the color for contact face. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetContactColor
            (
                int color /** color */ 
            );
            /**Returns  the delay solve flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool DelaySolve
            (
            );
            /**Sets  the delay solve flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetDelaySolve
            (
                bool delaySolve /** delay solve */ 
            );
            /**Returns  the only simulate active display part flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool OnlySimulateActiveDisplayPart
            (
            );
            /**Sets  the only simulate active display part flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetOnlySimulateActiveDisplayPart
            (
                bool bOnly /** bonly */ 
            );
            /**Returns  the smooth curve flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool CurveSmoothing
            (
            );
            /**Sets  the smooth curve flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetCurveSmoothing
            (
                bool isSoomth /** issoomth */ 
            );
            /**Returns  the hide measure ruler flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool HideMeasureRuler
            (
            );
            /**Sets  the hide measure ruler flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetHideMeasureRuler
            (
                bool hide /** hide */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
