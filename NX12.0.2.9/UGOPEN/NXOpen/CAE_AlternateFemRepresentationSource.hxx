#ifndef NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCE_HXX_INCLUDED
#define NXOpen_CAE_ALTERNATEFEMREPRESENTATIONSOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AlternateFemRepresentationSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AlternateFemRepresentationSource;
    }
    namespace CAE
    {
        class _AlternateFemRepresentationSourceBuilder;
        class AlternateFemRepresentationSourceImpl;
        /**  @brief  This is the class representing a Alternate Fem Representation Source.  

           <br> Not support KF.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AlternateFemRepresentationSource : public NXOpen::TaggedObject
        {
            /** Create mesh options */
            public: enum CreateMeshMode
            {
                CreateMeshModeAllElements/** create all elements */,
                CreateMeshModeDataElements/** create data elements */,
                CreateMeshModeVisualizationElements/** create visualization elements only */
            };

            private: AlternateFemRepresentationSourceImpl * m_alternatefemrepresentationsource_impl;
            private: friend class  _AlternateFemRepresentationSourceBuilder;
            protected: AlternateFemRepresentationSource();
            public: ~AlternateFemRepresentationSource();
            /** Set the name of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Rename
            (
                const NXString & name /** Name of the Alternate Fem Representation Source. */
            );
            /** Set the name of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void Rename
            (
                const char * name /** Name of the Alternate Fem Representation Source. */
            );
            /** Force update of the Alternate Fem Representation Source 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void ForceUpdate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
