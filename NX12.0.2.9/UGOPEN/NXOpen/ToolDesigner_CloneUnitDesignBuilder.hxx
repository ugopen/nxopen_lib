#ifndef NXOpen_TOOLDESIGNER_CLONEUNITDESIGNBUILDER_HXX_INCLUDED
#define NXOpen_TOOLDESIGNER_CLONEUNITDESIGNBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ToolDesigner_CloneUnitDesignBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libtooldesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ToolDesigner
    {
        class CloneUnitDesignBuilder;
    }
    class Builder;
    namespace ToolDesigner
    {
        class _CloneUnitDesignBuilderBuilder;
        class CloneUnitDesignBuilderImpl;
        /** A class that used for clone unit design <br> To create a new instance of this class, use @link NXOpen::ToolDesigner::ToolDesignerManager::CreateCloneUnitDesignBuilder  NXOpen::ToolDesigner::ToolDesignerManager::CreateCloneUnitDesignBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class TOOLDESIGNEROPENCPPEXPORT  CloneUnitDesignBuilder : public NXOpen::Builder
        {
            private: CloneUnitDesignBuilderImpl * m_cloneunitdesignbuilder_impl;
            private: friend class  _CloneUnitDesignBuilderBuilder;
            protected: CloneUnitDesignBuilder();
            public: ~CloneUnitDesignBuilder();
            /**Returns  the id 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Id
            (
            );
            /**Sets  the id 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetId
            (
                const NXString & id /** id */ 
            );
            /**Sets  the id 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            void SetId
            (
                const char * id /** id */ 
            );
            /**Returns  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
