#ifndef NXOpen_FACET_FACETEDEDGE_HXX_INCLUDED
#define NXOpen_FACET_FACETEDEDGE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_FacetedEdge.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/IBaseCurve.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class FacetedEdge;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    class DisplayableObject;
    namespace Facet
    {
        class FacetedBody;
    }
    namespace Facet
    {
        class FacetedFace;
    }
    class IBaseCurve;
    class INXObject;
    namespace Facet
    {
        class _FacetedEdgeBuilder;
        class FacetedEdgeImpl;
        /** Represents a faceted edge. Instances of this class may be
                generated when recording a journal, but they cannot be created
                directly. 
            
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  FacetedEdge : public NXOpen::DisplayableObject, public virtual NXOpen::IBaseCurve
        {
            /** Facet Edge type
             <br>  Created in NX8.5.1.  <br>  
            */
            public: enum FacetededgeType
            {
                FacetededgeTypeUndefined/** undefined */ ,
                FacetededgeTypeLinear/** Linear edge */,
                FacetededgeTypeCircular/** Circular edge */,
                FacetededgeTypeElliptical/** Elliptical edge */,
                FacetededgeTypeIntersection/** Intersection edge */,
                FacetededgeTypeSpline/** Spline edge */
            };

            private: FacetedEdgeImpl * m_facetededge_impl;
            private: friend class  _FacetedEdgeBuilder;
            protected: FacetedEdge();
            public: ~FacetedEdge();
            /**Returns  the type of the facet edge 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FacetedEdge::FacetededgeType EdgeType
            (
            );
            /** Returns the faces connected to the edge  @return  
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Facet::FacetedFace *> GetFaces
            (
            );
            /** Returns the vertices of the edge. If the edge is closed, the second vertex is the same as the first. 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: void GetVertices
            (
                NXOpen::Point3d* vertex1 /** First vertex in the edge */,
                NXOpen::Point3d* vertex2 /** Second vertex in the edge */
            );
            /** Returns the body containing this edge  @return  
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::FacetedBody * GetBody
            (
            );
            /** Returns the curve information for the facet edge

                       Parameter description
                       faceted_edge           : The input edge tag for which curve information is required.
                       PNT3_p_t position      : Line: Position on Line 
                                                Circle/Ellipse: Center Point
                                                Spline/Intersection-Curve: Start Point of Curve.
                       PNT3_p_t dir_or_end_pt : Line : Direction of the Line
                                                Circle: Normal to Plane Axis.
                                                Ellipse: Major Axis
                                                Spline/Intersection-Curve: End Point.
                       PNT3_p_t x_axis         : Circle: Axis from Center to Start Point,
                                                Ellipse: Minor Axis
                                                Not valid for other types.
                   
                       double* radius         : Circle: Radius
                                                Ellipse: Major Radius
                                                Not valid for other types.

                       double* minor_radius   : Ellipse: Minor Radius
                                                Not valid for other types.

                    
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: void GetCurveData
            (
                NXOpen::Point3d* position /** position */ ,
                NXOpen::Point3d* dirOrEndPt /** dir or end pt */ ,
                NXOpen::Point3d* xAxis /** x axis */ ,
                double* radius /** radius */ ,
                double* minorRadius /** minor radius */ 
            );
            /** Returns the length of the object  @return  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual double GetLength
            (
            );
            /**Returns  the reference state of a curve 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: virtual bool IsReference
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
