#ifndef NXOpen_CAE_DURSPECIALISTMANAGER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistManager;
    }
    namespace CAE
    {
        class SimSimulation;
    }
    namespace CAE
    {
        class DurSpecialistAnalysisTypeCollection;
    }
    namespace CAE
    {
        class DurSpecialistLoadProviderCollection;
    }
    namespace CAE
    {
        class DurSpecialistParameterObjectCollection;
    }
    namespace CAE
    {
        class DurSpecialistSolutionCollection;
    }
    namespace CAE
    {
        class DurSpecialistManagerImpl;

        /// \cond NX_NO_DOC 
        /** Represents the durability specialist manager that contains all durability specialist objects.  <br> To obtain an instance of this class, refer to @link NXOpen::CAE::SimSimulation  NXOpen::CAE::SimSimulation @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistManager
        {
            private: DurSpecialistManagerImpl * m_durspecialistmanager_impl;
            private: NXOpen::CAE::SimSimulation* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit DurSpecialistManager(NXOpen::CAE::SimSimulation *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~DurSpecialistManager();


            /** Returns the @link NXOpen::CAE::DurSpecialistSolutionCollection NXOpen::CAE::DurSpecialistSolutionCollection@endlink  belonging to this sim part. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistSolutionCollection *Solutions();
            /** Returns the @link NXOpen::CAE::DurSpecialistAnalysisTypeCollection NXOpen::CAE::DurSpecialistAnalysisTypeCollection@endlink  belonging to this sim part. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistAnalysisTypeCollection *AnalysisTypes();
            /** Returns the @link NXOpen::CAE::DurSpecialistParameterObjectCollection NXOpen::CAE::DurSpecialistParameterObjectCollection@endlink  belonging to this sim part. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistParameterObjectCollection *ParameterObjects();
            /** Returns the durability specialist load provider collection belonging to this sim part. 
             <br>  Created in NX12.0.0.  <br>  
            */
            public: NXOpen::CAE::DurSpecialistLoadProviderCollection *LoadProviders();
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
