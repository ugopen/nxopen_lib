#ifndef NXOpen_TOOLING_WIREHOLEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_WIREHOLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_WireHoleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class WireHoleBuilder;
    }
    class Builder;
    class Direction;
    class Point;
    class ScCollector;
    class SelectEdgeList;
    namespace Tooling
    {
        class _WireHoleBuilderBuilder;
        class WireHoleBuilderImpl;
        /**
             Represents a @link NXOpen::Tooling::WireHoleBuilder NXOpen::Tooling::WireHoleBuilder@endlink 
             This class is for Wire Hole Design UI
             <br> To create a new instance of this class, use @link NXOpen::Tooling::WireHoleCollection::CreateWireHoleBuilder  NXOpen::Tooling::WireHoleCollection::CreateWireHoleBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DistanceToEdgeMidpoint </td> <td> 
         
        3 </td> </tr> 

        <tr><td> 
         
        HoleDiameter </td> <td> 
         
        3 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  WireHoleBuilder : public NXOpen::Builder
        {
            /** the plane to create wire hole sketch */
            public: enum Types
            {
                TypesSpecifyPoint/** specify point */ ,
                TypesSelectEdge/** select edge */ 
            };

            private: WireHoleBuilderImpl * m_wireholebuilder_impl;
            private: friend class  _WireHoleBuilderBuilder;
            protected: WireHoleBuilder();
            public: ~WireHoleBuilder();
            /**Returns  the plane to create wire hole sketch 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SketchPlane
            (
            );
            /**Returns  the orientation to create wire hole sketch 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * SketchOrientation
            (
            );
            /**Sets  the orientation to create wire hole sketch 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSketchOrientation
            (
                NXOpen::Direction * sketchOrientation /** Sets the orientation to create wire hole sketch */
            );
            /**Returns  the diameter to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double HoleDiameter
            (
            );
            /**Sets  the diameter to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHoleDiameter
            (
                double holeDiameter /** Sets the diameter to create wire hole */
            );
            /**Returns  the depth of wire hole. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double HoleDepth
            (
            );
            /**Sets  the depth of wire hole. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetHoleDepth
            (
                double holeDepth /** Sets the depth of wire hole. */
            );
            /**Returns  the centerline length to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CenterlineLength
            (
            );
            /**Sets  the centerline length to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCenterlineLength
            (
                const NXString & centerlineLength /** Sets the centerline length to create wire hole */
            );
            /**Sets  the centerline length to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            void SetCenterlineLength
            (
                const char * centerlineLength /** Sets the centerline length to create wire hole */
            );
            /**Returns  the circle center to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * CircleCenter
            (
            );
            /**Sets  the circle center to create wire hole 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCircleCenter
            (
                NXOpen::Point * circleCenter /** Sets the circle center to create wire hole */
            );
            /**Returns  the select edge 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectEdgeList * SelectEdge
            (
            );
            /**Returns  the distance to edge midpoint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceToEdgeMidpoint
            (
            );
            /**Sets  the distance to edge midpoint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDistanceToEdgeMidpoint
            (
                double distanceToEdgeMidpoint /** distancetoedgemidpoint */ 
            );
            /**Returns  the type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::WireHoleBuilder::Types Type
            (
            );
            /**Sets  the type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetType
            (
                NXOpen::Tooling::WireHoleBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
