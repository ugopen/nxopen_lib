#ifndef NXOpen_PRESSLINESIMULATION_MACHINEADJUSTMENTBUILDER_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_MACHINEADJUSTMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_MachineAdjustmentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class MachineAdjustmentBuilder;
    }
    class Builder;
    namespace PressLineSimulation
    {
        class _MachineAdjustmentBuilderBuilder;
        class MachineAdjustmentBuilderImpl;
        /** Use this class to configure the machine adjustment axes of the press model.  <br> Use @link PressLineSimulation::MachineAdjustmentBuilderListBuilder PressLineSimulation::MachineAdjustmentBuilderListBuilder@endlink  to obtain a list of MachineAdjustmentBuilder objects.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  MachineAdjustmentBuilder : public NXOpen::Builder
        {
            private: MachineAdjustmentBuilderImpl * m_machineadjustmentbuilder_impl;
            private: friend class  _MachineAdjustmentBuilderBuilder;
            protected: MachineAdjustmentBuilder();
            public: ~MachineAdjustmentBuilder();
            /** Returns the name of the adjustment object.  @return  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetAdjustmentName
            (
            );
            /**Returns  the value of the adjustment. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double AdjustmentValue
            (
            );
            /**Sets  the value of the adjustment. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void SetAdjustmentValue
            (
                double adjustmentValue /** adjustmentvalue */ 
            );
            /** Resets the adjustment to its default. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") */
            public: void Reset
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
