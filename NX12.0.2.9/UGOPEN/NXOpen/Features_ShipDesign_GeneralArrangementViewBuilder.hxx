#ifndef NXOpen_FEATURES_SHIPDESIGN_GENERALARRANGEMENTVIEWBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_GENERALARRANGEMENTVIEWBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_GeneralArrangementViewBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewPlacementBuilder.hxx>
#include <NXOpen/Features_ShipDesign_DeckListBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SelectStructuresBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class GeneralArrangementViewBuilder;
        }
    }
    class Builder;
    namespace Drawings
    {
        class DrawingSheet;
    }
    namespace Drawings
    {
        class ViewPlacementBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class DeckListBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SelectStructuresBuilder;
        }
    }
    class NXObject;
    class SelectModelingViewList;
    class TaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _GeneralArrangementViewBuilderBuilder;
            class GeneralArrangementViewBuilderImpl;
            /** This builder allows you to define the general arrangement view information. 
                        It represents @link NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder@endlink .
                        This builder creates one Ship General Arrangement View and return it. 
                      <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateGeneralArrangementViewBuilder  NXOpen::Features::ShipCollection::CreateGeneralArrangementViewBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            Placement.AlignmentMethod </td> <td> 
             
            Infer </td> </tr> 

            <tr><td> 
             
            Placement.AlignmentOption </td> <td> 
             
            ToView </td> </tr> 

            </table>  

             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  GeneralArrangementViewBuilder : public NXOpen::Builder
            {
                /** Settings to indicate the view direction type */
                public: enum ViewDirectionType
                {
                    ViewDirectionTypeXPositive/** xpositive */ ,
                    ViewDirectionTypeXNegative/** xnegative */ ,
                    ViewDirectionTypeYPositive/** ypositive */ ,
                    ViewDirectionTypeYNegative/** ynegative */ ,
                    ViewDirectionTypeZPositive/** zpositive */ ,
                    ViewDirectionTypeZNegative/** znegative */ ,
                    ViewDirectionTypeDeck/** deck */ 
                };

                /** Settings to indicate the view type when view direction is X */
                public: enum ViewCreationType
                {
                    ViewCreationTypeProjectView/** project view */ ,
                    ViewCreationTypeSectionView/** section view */ 
                };

                /** Settings to indicate the Inherited PMI source type */
                public: enum InheritedPMISourceOption
                {
                    InheritedPMISourceOptionNoChange/** do nothing about PMI, this option only work when edit genearl arrangement view */,
                    InheritedPMISourceOptionNone/** none */ ,
                    InheritedPMISourceOptionFromGARoot/** Copy PMI label from General Arrangement Root part */,
                    InheritedPMISourceOptionFromGAContainer/** Copy PMI label from General Arrangement Deck Container */,
                    InheritedPMISourceOptionFromGADrawing/** Copy PMI label from General Arrangement Drawing Root part */,
                    InheritedPMISourceOptionFromSourcePart/** Copy PMI label from the selected source part*/
                };

                private: GeneralArrangementViewBuilderImpl * m_generalarrangementviewbuilder_impl;
                private: friend class  _GeneralArrangementViewBuilderBuilder;
                protected: GeneralArrangementViewBuilder();
                public: ~GeneralArrangementViewBuilder();
                /**Returns  the view type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ViewType
                (
                );
                /**Sets  the view type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetViewType
                (
                    const NXString & viewType /** viewtype */ 
                );
                /**Sets  the view type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void SetViewType
                (
                    const char * viewType /** viewtype */ 
                );
                /**Returns  the view direction 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::ViewDirectionType ViewDirection
                (
                );
                /**Sets  the view direction 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetViewDirection
                (
                    NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::ViewDirectionType viewDirection /** viewdirection */ 
                );
                /**Returns  the view creation type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::ViewCreationType ViewCreation
                (
                );
                /**Sets  the view creation type 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetViewCreation
                (
                    NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::ViewCreationType viewCreation /** viewcreation */ 
                );
                /**Returns  the start frame 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXObject * StartFrame
                (
                );
                /**Sets  the start frame 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetStartFrame
                (
                    NXOpen::NXObject * startFrame /** startframe */ 
                );
                /**Returns  the end frame 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXObject * EndFrame
                (
                );
                /**Sets  the end frame 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetEndFrame
                (
                    NXOpen::NXObject * endFrame /** endframe */ 
                );
                /**Returns  the decks 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: NXOpen::Features::ShipDesign::DeckListBuilder * Decks
                (
                );
                /**Returns  the inherited source 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::InheritedPMISourceOption InheritedPMISource
                (
                );
                /**Sets  the inherited source 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetInheritedPMISource
                (
                    NXOpen::Features::ShipDesign::GeneralArrangementViewBuilder::InheritedPMISourceOption inheritedPMISource /** inheritedpmisource */ 
                );
                /**Returns  the source part
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::TaggedObject * SourcePart
                (
                );
                /**Sets  the source part
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetSourcePart
                (
                    NXOpen::TaggedObject * sourcePart /** sourcepart */ 
                );
                /**Returns  the list of selected Model View which are the source of PMI 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: NXOpen::SelectModelingViewList * SelectedModelView
                (
                );
                /**Returns  the selected structure 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: NXOpen::Features::ShipDesign::SelectStructuresBuilder * SelectStructures
                (
                );
                /**Returns  the view name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ViewName
                (
                );
                /**Sets  the view name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetViewName
                (
                    const NXString & viewName /** viewname */ 
                );
                /**Sets  the view name 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                void SetViewName
                (
                    const char * viewName /** viewname */ 
                );
                /**Returns  the drawing sheet which the view on 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Drawings::DrawingSheet * DrawingSheet
                (
                );
                /**Sets  the drawing sheet which the view on 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetDrawingSheet
                (
                    NXOpen::Drawings::DrawingSheet * drawingSheet /** drawingsheet */ 
                );
                /**Returns  the view Scale
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double Scale
                (
                );
                /**Sets  the view Scale
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetScale
                (
                    double scale /** scale */ 
                );
                /** Sets the view position on the drawing 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetViewPosition
                (
                    double xPosition /** xposition */ ,
                    double yPosition /** yposition */ 
                );
                /**Returns  the view placement 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Drawings::ViewPlacementBuilder * Placement
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
