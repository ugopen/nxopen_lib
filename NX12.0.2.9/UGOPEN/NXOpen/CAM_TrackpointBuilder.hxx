#ifndef NXOpen_CAM_TRACKPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TRACKPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TrackpointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TrackpointBuilder;
    }
    class Builder;
    namespace CAM
    {
        class _TrackpointBuilderBuilder;
        class TrackpointBuilderImpl;
        /** Represents a Trackpoint Builder  <br> This is an abstract class and can not be instantiated  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TrackpointBuilder : public NXOpen::Builder
        {
            private: TrackpointBuilderImpl * m_trackpointbuilder_impl;
            private: friend class  _TrackpointBuilderBuilder;
            protected: TrackpointBuilder();
            public: ~TrackpointBuilder();
            /**Returns  the Tracking Point name value
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXString TrackingName
            (
            );
            /**Sets  the Tracking Point name value
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTrackingName
            (
                const NXString & nameValue /** the name value */
            );
            /**Sets  the Tracking Point name value
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetTrackingName
            (
                const char * nameValue /** the name value */
            );
            /**Returns  the adjust register 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int TlAdjReg
            (
            );
            /**Sets  the adjust register 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTlAdjReg
            (
                int tlAdjReg /**  The adjust register */
            );
            /**Returns  the cutcom register  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int TlCutcomReg
            (
            );
            /**Sets  the cutcom register  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTlCutcomReg
            (
                int tlCutcomReg /**  The cutcom register  */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
