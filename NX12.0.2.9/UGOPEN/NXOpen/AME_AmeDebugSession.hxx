#ifndef NXOpen_AME_AMEDEBUGSESSION_HXX_INCLUDED
#define NXOpen_AME_AMEDEBUGSESSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_AmeDebugSession.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class AmeDebugSession;
    }
    class Session;
    class Part;
    namespace AME
    {
        class AmeDebugSessionImpl;

        /// \cond NX_NO_DOC 
        /** Represents a class that is used for AME testing.  This class shouldn't be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  AmeDebugSession
        {
            /** Represents type of the object*/
            public: enum ObjectType
            {
                ObjectTypeProject/** Represents @link NXOpen::AME::Project NXOpen::AME::Project@endlink   */,
                ObjectTypePageObject/** Represents @link NXOpen::AME::PageObject NXOpen::AME::PageObject@endlink   */
            };

            /** Represents type of the navigator*/
            public: enum NavigatorType
            {
                NavigatorTypeFunction/** Function Aspect Navigator  */,
                NavigatorTypeLocation/** Location Aspect Navigator  */,
                NavigatorTypeProduct/** Product Aspect Navigator   */,
                NavigatorTypeAutomation/** Automation Navigator       */,
                NavigatorTypeDocument/** Document Navigator         */,
                NavigatorTypeBulkEngineering/** Bulk Engineering Navigator */,
                NavigatorTypeUpstreamData/** Upstream Data Navigator    */,
                NavigatorTypeEClass/** eCl@ss Navigator           */,
                NavigatorTypeCabinet/** Cabinet Navigator          */,
                NavigatorTypeProductStructure/** Product Structure Navigator*/,
                NavigatorTypeSymbolStructure/** Symbol Structure Navigator */
            };

            private: AmeDebugSessionImpl * m_amedebugsession_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AmeDebugSession(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AmeDebugSession* theAmeDebugSession;
            /** Returns the AmeDebugSession object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AmeDebugSession* GetAmeDebugSession(NXOpen::Session *owner);
            public: ~AmeDebugSession();
            /** Prints navigator infomation 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintNavigatorInformation
            (
            );
            /** Prints structure of input @link NXOpen::AME::AmeDebugSession::NavigatorType NXOpen::AME::AmeDebugSession::NavigatorType@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintNavigatorInformation
            (
                NXOpen::AME::AmeDebugSession::NavigatorType navigator /** navigator */ 
            );
            /** Prints information of input @link NXOpen::AME::AmeDebugSession::ObjectType NXOpen::AME::AmeDebugSession::ObjectType@endlink . 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintObjectInformation
            (
                NXOpen::AME::AmeDebugSession::ObjectType objectType /** objecttype */ 
            );
            /** Prints sw specific information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintSoftwareInformation
            (
            );
            /** A dummy function to cause the Session object to be includded 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void Dummy
            (
                NXOpen::Part * part /** part */ 
            );
            /** Prints hw specific information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintHardwareInformation
            (
            );
            /** Prints sw specific object information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintPouInformation
            (
            );
            /** Prints validation information for all objects
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateAllObjects
            (
            );
            /** Prints PlcSymbol information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PlcSymbolInformation
            (
            );
            /** Prints PlcUserConstants information
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PlcUserConstantInformation
            (
            );
            /** Prints EO Attributes information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void EoAttributesInformation
            (
            );
            /** Prints Query Object Attributes information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void QueryobjectInformation
            (
                bool printResults /** printresults */ 
            );
            /** Prints External Object information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ExternalObjectInformation
            (
            );
            /** Prints Ports information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PortsInformation
            (
            );
            /** Prints EPLAN Macros information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void EplanMacrosInformation
            (
            );
            /** Prints Stations information
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void HardwareObjectsAttributeInformation
            (
            );
            /** Prints Stations information
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintStationsInformation
            (
            );
            /** Prints sw code content 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintPouContent
            (
            );
            /** Prints sw code content 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintEplanProjectSettings
            (
            );
            /** Prints ad expression information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintAdExpressions
            (
            );
            /** Prints ad evaluator data 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintAdEvaluatorData
            (
            );
            /** Prints sw data model
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintPouData
            (
            );
            /** Prints eplan project generation request 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintEplanProjectGenerationRequest
            (
            );
            /** Prints eplan project template info
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintEplanProjectTemplateData
            (
            );
            /** Prints schematic symbol information 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintSchematicSymbolProperties
            (
            );
            /** Prints connection properties settings 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintConnectionPropertiesSettings
            (
            );
            /** Prints connection annotation settings 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintConnectionAnnotationSettings
            (
            );
            /** Prints schematic symbol assignment information 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintSchematicSymbolAssignmentToTypeInfo
            (
            );
            /** Prints grid settings
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintGridSettings
            (
            );
            /** Prints eclass mappings
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintEclassMappingInfo
            (
            );
            /** Prints connection properties 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintConnectionProperties
            (
            );
            /** Prints EODef Attributes information
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintEodefAttributesInformation
            (
            );
            /** Prints structure of input @link NXOpen::AME::AmeDebugSession::NavigatorType NXOpen::AME::AmeDebugSession::NavigatorType@endlink . 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintNavigatorNodeInformation
            (
                NXOpen::AME::AmeDebugSession::NavigatorType navigator /** navigator */ 
            );
            /** Prints Product Definition properties
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintProductDefinitionProperties
            (
            );
            /** Prints Product Component properties
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintProductComponentsProperties
            (
            );
            /** Prints FormSheet properties
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintFormsheetProperties
            (
            );
            /** Prints Cabinet Design information
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintCabinetInformation
            (
            );
            /** Prints Memory Area information
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void PrintMemoryAreaInformation
            (
            );
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
