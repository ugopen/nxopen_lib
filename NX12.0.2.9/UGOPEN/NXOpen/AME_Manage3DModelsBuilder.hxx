#ifndef NXOpen_AME_MANAGE3DMODELSBUILDER_HXX_INCLUDED
#define NXOpen_AME_MANAGE3DMODELSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_Manage3DModelsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class Manage3DModelsBuilder;
    }
    namespace AME
    {
        class SelectAMEBaseNode;
    }
    class Builder;
    namespace AME
    {
        class _Manage3DModelsBuilderBuilder;
        class Manage3DModelsBuilderImpl;
        /** Represents the builder that is used to assign 3D models to a @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink   
             <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateManage3dmodelsBuilder  NXOpen::AME::AMEManager::CreateManage3dmodelsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  Manage3DModelsBuilder : public NXOpen::Builder
        {
            private: Manage3DModelsBuilderImpl * m_manage3dmodelsbuilder_impl;
            private: friend class  _Manage3DModelsBuilderBuilder;
            protected: Manage3DModelsBuilder();
            public: ~Manage3DModelsBuilder();
            /**  Assigns the given 3d model to the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void Add3dModel
            (
                const NXString & fileNameString /** filenamestring */ 
            );
            /**  Assigns the given 3d model to the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void Add3dModel
            (
                const char * fileNameString /** filenamestring */ 
            );
            /**  Removes the given 3D Model from the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void Remove3dModel
            (
                const NXString & fileNameString /** filenamestring */ 
            );
            /**  Removes the given 3D Model from the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void Remove3dModel
            (
                const char * fileNameString /** filenamestring */ 
            );
            /** Sets the given 3d model as default to the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDefaultModel
            (
                const NXString & fileNameString /** filenamestring */ 
            );
            /** Sets the given 3d model as default to the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetDefaultModel
            (
                const char * fileNameString /** filenamestring */ 
            );
            /** Gets the default 3d model from the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink   @return  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetDefaultModel
            (
            );
            /**Returns  the selected @link NXOpen::AME::AspectNode NXOpen::AME::AspectNode@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::AME::SelectAMEBaseNode * SelectedProduct
            (
            );
            /** Reset the default 3d model from the associated @link NXOpen::AME::ProductDefinition NXOpen::AME::ProductDefinition@endlink  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void ResetDefaultModel
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
