#ifndef NXOpen_GEOMETRICUTILITIES_CURVELENGTHBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_CURVELENGTHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_CurveLengthBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class CurveLengthBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectDisplayableObjectList;
    namespace GeometricUtilities
    {
        class _CurveLengthBuilderBuilder;
        class CurveLengthBuilderImpl;
        /**
            Represents a @link NXOpen::GeometricUtilities::CurveLengthBuilder NXOpen::GeometricUtilities::CurveLengthBuilder@endlink  builder
            
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  CurveLengthBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** This attribute represents end type */
            public: enum EndObjectType
            {
                EndObjectTypeValue/** value */ ,
                EndObjectTypeFromSelected/** from selected */ 
            };

            private: CurveLengthBuilderImpl * m_curvelengthbuilder_impl;
            private: friend class  _CurveLengthBuilderBuilder;
            protected: CurveLengthBuilder();
            public: ~CurveLengthBuilder();
            /**Returns  the end 1 type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveLengthBuilder::EndObjectType EndType0
            (
            );
            /**Sets  the end 1 type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndType0
            (
                NXOpen::GeometricUtilities::CurveLengthBuilder::EndObjectType endType0 /** endtype0 */ 
            );
            /**Returns  the select object for end 1 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * EndSelection0
            (
            );
            /**Returns  the end 1 length 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EndOffset0
            (
            );
            /**Returns  the reverse endOffset0 direction flag. Indicates whether the endOffset0 direction has been flipped from its initial inferred direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseEndOffset0Direction
            (
            );
            /**Sets  the reverse endOffset0 direction flag. Indicates whether the endOffset0 direction has been flipped from its initial inferred direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReverseEndOffset0Direction
            (
                bool reverseEndOffset0Direction /** reverseendoffset0direction */ 
            );
            /**Returns  the end 2 type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveLengthBuilder::EndObjectType EndType1
            (
            );
            /**Sets  the end 2 type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndType1
            (
                NXOpen::GeometricUtilities::CurveLengthBuilder::EndObjectType endType1 /** endtype1 */ 
            );
            /**Returns the select object for end 2
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * EndSelection1
            (
            );
            /**Returns  the end 2 length 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EndOffset1
            (
            );
            /**Returns  the reverse endOffset1 direction flag. Indicates whether the endOffset1 direction has been flipped from its initial inferred direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseEndOffset1Direction
            (
            );
            /**Sets  the reverse endOffset1 direction flag. Indicates whether the endOffset1 direction has been flipped from its initial inferred direction 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReverseEndOffset1Direction
            (
                bool reverseEndOffset1Direction /** reverseendoffset1direction */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
