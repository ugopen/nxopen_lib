#ifndef NXOpen_DRAWINGS_SHEETMARGINSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_SHEETMARGINSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_SheetMarginSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/LineColorFontWidthBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class SheetMarginSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class LineColorFontWidthBuilder;
    namespace Drawings
    {
        class _SheetMarginSettingsBuilderBuilder;
        class SheetMarginSettingsBuilderImpl;
        /** Represents the Drawing Sheet Margins Style Builder.
            
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  SheetMarginSettingsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: SheetMarginSettingsBuilderImpl * m_sheetmarginsettingsbuilder_impl;
            private: friend class  _SheetMarginSettingsBuilderBuilder;
            protected: SheetMarginSettingsBuilder();
            public: ~SheetMarginSettingsBuilder();
            /**Returns  the top margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double TopTrimmedMargin
            (
            );
            /**Sets  the top margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetTopTrimmedMargin
            (
                double topMargin /** topmargin */ 
            );
            /**Returns  the bottom margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double BottomTrimmedMargin
            (
            );
            /**Sets  the bottom margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBottomTrimmedMargin
            (
                double bottomTrimmedMargin /** bottomtrimmedmargin */ 
            );
            /**Returns  the left margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double LeftTrimmedMargin
            (
            );
            /**Sets  the left margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLeftTrimmedMargin
            (
                double leftTrimmedMargin /** lefttrimmedmargin */ 
            );
            /**Returns  the right margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double RightTrimmedMargin
            (
            );
            /**Sets  the right margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetRightTrimmedMargin
            (
                double rightTrimmedMargin /** righttrimmedmargin */ 
            );
            /**Returns  the margin line color, font and width 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineColorFontWidthBuilder * MarginLineColorFontWidth
            (
            );
            /**Returns  the top untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double TopUntrimmedMargin
            (
            );
            /**Sets  the top untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetTopUntrimmedMargin
            (
                double topUntrimmedMargin /** topuntrimmedmargin */ 
            );
            /**Returns  the bottom untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double BottomUntrimmedMargin
            (
            );
            /**Sets  the bottom untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBottomUntrimmedMargin
            (
                double bottomUntrimmedMargin /** bottomuntrimmedmargin */ 
            );
            /**Returns  the left untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double LeftUntrimmedMargin
            (
            );
            /**Sets  the left untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLeftUntrimmedMargin
            (
                double leftUntrimmedMargin /** leftuntrimmedmargin */ 
            );
            /**Returns  the right untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double RightUntrimmedMargin
            (
            );
            /**Sets  the right untrimmed margin 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetRightUntrimmedMargin
            (
                double rightUntrimmedMargin /** rightuntrimmedmargin */ 
            );
            /**Returns  the create untrimmed margins 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateUntrimmedMargins
            (
            );
            /**Sets  the create untrimmed margins 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCreateUntrimmedMargins
            (
                bool createUntrimmedMargins /** createuntrimmedmargins */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
