#ifndef NXOpen_CAM_AREAMILLINGNONSTEEPCONTAINMENT_HXX_INCLUDED
#define NXOpen_CAM_AREAMILLINGNONSTEEPCONTAINMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_AreaMillingNonSteepContainment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_AreaMillingContainment.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class AreaMillingNonSteepContainment;
    }
    namespace CAM
    {
        class AreaMillingContainment;
    }
    namespace CAM
    {
        class CutAngle;
    }
    namespace CAM
    {
        class InheritableIntBuilder;
    }
    class Point;
    namespace CAM
    {
        class _AreaMillingNonSteepContainmentBuilder;
        class AreaMillingNonSteepContainmentImpl;
        /** Represents a NonSteep Containment Builder 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  AreaMillingNonSteepContainment : public NXOpen::CAM::AreaMillingContainment
        {
            /** Available types for Pattern Direction in Area Milling  */
            public: enum PatternDirectionTypes
            {
                PatternDirectionTypesOutward/**Outward*/,
                PatternDirectionTypesInward/**Inward*/
            };

            /** Available types for Area Milling Pocketing Direction in FASurfaceContour */
            public: enum AmPocketDirTypes
            {
                AmPocketDirTypesOutward/** Outward */,
                AmPocketDirTypesInward/** Inward */
            };

            /** Available types for area milling Auto Pattern Center*/
            public: enum AutoPatCenterTypes
            {
                AutoPatCenterTypesAutomatic/** Automatic */,
                AutoPatCenterTypesSpecify/** Specify */
            };

            private: AreaMillingNonSteepContainmentImpl * m_areamillingnonsteepcontainment_impl;
            private: friend class  _AreaMillingNonSteepContainmentBuilder;
            protected: AreaMillingNonSteepContainment();
            public: ~AreaMillingNonSteepContainment();
            /**Returns  the Area Milling Auto Pattern Center
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::AreaMillingNonSteepContainment::AutoPatCenterTypes AmAutoPatCenter
            (
            );
            /**Sets  the Area Milling Auto Pattern Center
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAmAutoPatCenter
            (
                NXOpen::CAM::AreaMillingNonSteepContainment::AutoPatCenterTypes autoPatCenter /** autopatcenter */ 
            );
            /**Returns  the Pattern Center Point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PatternCenterPoint
            (
            );
            /**Sets  the Pattern Center Point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPatternCenterPoint
            (
                NXOpen::Point * centerPoint /** centerpoint */ 
            );
            /**Returns  the pattern direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::AreaMillingNonSteepContainment::PatternDirectionTypes PatternDirection
            (
            );
            /**Sets  the pattern direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPatternDirection
            (
                NXOpen::CAM::AreaMillingNonSteepContainment::PatternDirectionTypes propValue /** the Pattern Direction value */
            );
            /**Returns  the Pocketing Direction value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::AreaMillingNonSteepContainment::AmPocketDirTypes AmPocketDir
            (
            );
            /**Sets  the Pocketing Direction value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAmPocketDir
            (
                NXOpen::CAM::AreaMillingNonSteepContainment::AmPocketDirTypes pocketDirValue /** the Pocketing Direction value */
            );
            /**Returns  the number of stepovers per side builder (inheritable int) 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableIntBuilder * NumberOfStepoversPerSide
            (
            );
            /**Returns  the Additional Passes 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: int AmAddPasses
            (
            );
            /**Sets  the Additional Passes 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAmAddPasses
            (
                int addPassesValue /** the Additional Passes value */
            );
            /**Returns  the cut angle 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutAngle * CutAngleBuilder
            (
            );
            /**Returns  the add center passes flag
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: bool AddCenterPasses
            (
            );
            /**Sets  the add center passes flag
             <br>  Created in NX9.0.3.  <br>  
             <br> License requirements : None */
            public: void SetAddCenterPasses
            (
                bool midPass /** the add center passes flag  */
            );
            /**Returns  the Pattern Smooth flag
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool PatternSmooth
            (
            );
            /**Sets  the Pattern Smooth flag
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetPatternSmooth
            (
                bool patternSmooth /** the Pattern Smooth flag  */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
