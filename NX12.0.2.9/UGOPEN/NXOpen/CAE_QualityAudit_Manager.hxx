#ifndef NXOpen_CAE_QUALITYAUDIT_MANAGER_HXX_INCLUDED
#define NXOpen_CAE_QUALITYAUDIT_MANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_QualityAudit_Manager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_QualityAudit_Action.hxx>
#include <NXOpen/CAE_QualityAudit_ActionList.hxx>
#include <NXOpen/CAE_QualityAudit_InputList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace QualityAudit
        {
            class Manager;
        }
    }
    namespace CAE
    {
        class CaeSession;
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class Action;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class ActionList;
        }
    }
    namespace CAE
    {
        namespace QualityAudit
        {
            class InputList;
        }
    }
    class INXObject;
    class NXObject;
    namespace CAE
    {
        namespace QualityAudit
        {
            class ManagerImpl;
            /**  @brief  The Quality Audit Manager class offers means to check for errors at assembly level  

               <br> To obtain an instance of this class use @link NXOpen::CAE::CaeSession::QualityAuditManager NXOpen::CAE::CaeSession::QualityAuditManager@endlink .  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  Manager
            {
                /** Action type to be used in the quality audit process. Based on this action type the input and action list changes. */
                public: enum ActionType
                {
                    ActionTypeGlobal/** Global action types */,
                    ActionTypeConnection/** Connection related actions */
                };

                private: ManagerImpl * m_manager_impl;
                private: NXOpen::CAE::CaeSession* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit Manager(NXOpen::CAE::CaeSession *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~Manager();
                /**Returns  the current quality audit action type.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::QualityAudit::Manager::ActionType CurrentActionType
                (
                );
                /**Sets  the current quality audit action type.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void SetCurrentActionType
                (
                    NXOpen::CAE::QualityAudit::Manager::ActionType actionType /** actiontype */ 
                );
                /**Returns  the quality audit action list.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::QualityAudit::ActionList * ActionList
                (
                );
                /**Returns  the quality audit input list.
                             
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::QualityAudit::InputList * InputList
                (
                );
                /** Finds the @link  NXOpen::INXObject   NXOpen::INXObject @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  An object matching the journal identifier 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::INXObject * FindObject
                (
                    const NXString & journalIdentifier /** Journal identifier of the object */
                );
                /** Finds the @link  NXOpen::INXObject   NXOpen::INXObject @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  An object matching the journal identifier 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::INXObject * FindObject
                (
                    const char * journalIdentifier /** Journal identifier of the object */
                );
                /** This method performs checks on the selected objects. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
                public: void PerformActions
                (
                    const std::vector<NXOpen::CAE::QualityAudit::Action *> & inputActions /** The @link CAE::QualityAudit::Action CAE::QualityAudit::Action@endlink  array of actions to be performed. */,
                    const std::vector<NXOpen::NXObject *> & pObjects /** The objects to be used by the actions. */
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
