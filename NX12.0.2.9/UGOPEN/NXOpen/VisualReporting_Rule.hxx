#ifndef NXOpen_VISUALREPORTING_RULE_HXX_INCLUDED
#define NXOpen_VISUALREPORTING_RULE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     VisualReporting_Rule.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/VisualReporting_Classifier.hxx>
#include <NXOpen/VisualReporting_Condition.hxx>
#include <NXOpen/libnxopencpp_visualreporting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace VisualReporting
    {
        class Rule;
    }
    class NXObject;
    namespace VisualReporting
    {
        class Classifier;
    }
    namespace VisualReporting
    {
        class Condition;
    }
    namespace VisualReporting
    {
        class _RuleBuilder;
        class RuleImpl;
        /** A rule within a @link NXOpen::VisualReporting::VisualReport NXOpen::VisualReporting::VisualReport@endlink .
            
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_VISUALREPORTINGEXPORT  Rule : public NXOpen::NXObject
        {
            private: RuleImpl * m_rule_impl;
            private: friend class  _RuleBuilder;
            protected: Rule();
            public: ~Rule();
            /**Returns  the filter @link NXOpen::VisualReporting::Condition NXOpen::VisualReporting::Condition@endlink  from this @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink . 
                    
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::Condition * FilterCondition
            (
            );
            /**Sets  the filter @link NXOpen::VisualReporting::Condition NXOpen::VisualReporting::Condition@endlink  from this @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink . 
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetFilterCondition
            (
                NXOpen::VisualReporting::Condition * filterCondition /** filtercondition */ 
            );
            /** Returns the @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink s associated with this @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink .
                     @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::VisualReporting::Classifier *> GetClassifiers
            (
            );
            /**Returns  the active @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink  in this @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink 
                        for a multiple properties report.
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::VisualReporting::Classifier * ActiveClassifier
            (
            );
            /**Sets  the active @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink  in this @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink 
                        for a multiple properties report.
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetActiveClassifier
            (
                NXOpen::VisualReporting::Classifier * activeClassifier /** activeclassifier */ 
            );
            /** The @link NXOpen::VisualReporting::Classifier::DateGroupMethodOption NXOpen::VisualReporting::Classifier::DateGroupMethodOption@endlink  in this @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink  
                        in the @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink  will be determined by the overall date range of all reported objects.
                        
                        For example, if the date range spans over 18 monthes, group by year will be used, otherwise if it is over 3 months, group by month will be used.
                        If the date range is small, within 2 weeks, group by day will be used. 

                        Only valid for a @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink  whose @link NXOpen::VisualReporting::Classifier::GroupingMethodOption NXOpen::VisualReporting::Classifier::GroupingMethodOption@endlink 
                        is @link NXOpen::VisualReporting::Classifier::GroupingMethodOptionAutomatic NXOpen::VisualReporting::Classifier::GroupingMethodOptionAutomatic@endlink  or
                        @link NXOpen::VisualReporting::Classifier::GroupingMethodOptionSemiAutomatic NXOpen::VisualReporting::Classifier::GroupingMethodOptionSemiAutomatic@endlink  and the
                        @link NXOpen::VisualReporting::Property::DatatypeOption NXOpen::VisualReporting::Property::DatatypeOption@endlink  on the @link NXOpen::VisualReporting::Property NXOpen::VisualReporting::Property@endlink 
                        is @link NXOpen::VisualReporting::Property::DatatypeOptionDate NXOpen::VisualReporting::Property::DatatypeOptionDate@endlink .
                     @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetIsSmartGroupDateEnabled
            (
                NXOpen::VisualReporting::Classifier * classifier /** classifier */ 
            );
            /** The @link NXOpen::VisualReporting::Classifier::DateGroupMethodOption NXOpen::VisualReporting::Classifier::DateGroupMethodOption@endlink  in this @link NXOpen::VisualReporting::Classifier NXOpen::VisualReporting::Classifier@endlink  
                        in the @link NXOpen::VisualReporting::Rule NXOpen::VisualReporting::Rule@endlink  will be determined by the overall date range of all reported objects.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_visual_reporting ("Visual Reporting") */
            public: void SetIsSmartGroupDateEnabled
            (
                NXOpen::VisualReporting::Classifier * classifier /** classifier */ ,
                bool isSmartGroupDateEnabled /** issmartgroupdateenabled */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
