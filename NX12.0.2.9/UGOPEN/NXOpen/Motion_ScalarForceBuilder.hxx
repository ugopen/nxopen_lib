#ifndef NXOpen_MOTION_SCALARFORCEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_SCALARFORCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_ScalarForceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class ScalarForceBuilder;
    }
    namespace CAE
    {
        class Function;
    }
    class CoordinateSystem;
    class Expression;
    namespace Motion
    {
        class MotionBuilder;
    }
    namespace Motion
    {
        class SelectFieldData;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class Point;
    namespace Motion
    {
        class _ScalarForceBuilderBuilder;
        class ScalarForceBuilderImpl;
        /**Represents a @link NXOpen::Motion::ScalarForceBuilder NXOpen::Motion::ScalarForceBuilder@endlink  <br> To create a new instance of this class, use @link NXOpen::Motion::ScalarForceCollection::CreateScalarForceBuilder  NXOpen::Motion::ScalarForceCollection::CreateScalarForceBuilder @endlink  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  ScalarForceBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** the application type. Each application type has a specific application associated. A Scalar Force is invalid without the type of application
                    Warning: This enum creates ambiguity in NXOpen VB API so we use apply_type instead
                    
             <br>  @deprecated Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use @link NXOpen::Motion::ScalarForceBuilder::ApplyType NXOpen::Motion::ScalarForceBuilder::ApplyType@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use NXOpen::Motion::ScalarForceBuilder::ApplyType instead.") ApplicationType
            {
                ApplicationTypeActionReaction/** for Action-Reaction Appplication type        */,
                ApplicationTypeActionOnly/** for Action Only Appplication type             */
            };

            /** the Direction type.
                    Each direction type has a specific direction associated. A Scalar Force is invalid without a direction associated.
                    */
            public: enum DirectionType
            {
                DirectionTypeTranslational/** for Translational direction        */,
                DirectionTypeX/** for X direction             */,
                DirectionTypeY/** for Y dircetion          */,
                DirectionTypeZ/** for Z direction           */
            };

            /** the apply type. Each application type has a specific application associated. A Scalar Force is invalid without the type of application*/
            public: enum ApplyType
            {
                ApplyTypeActionReaction/** for Action-Reaction Apply type        */,
                ApplyTypeActionOnly/** for Action Only Apply type             */
            };

            private: ScalarForceBuilderImpl * m_scalarforcebuilder_impl;
            private: friend class  _ScalarForceBuilderBuilder;
            protected: ScalarForceBuilder();
            public: ~ScalarForceBuilder();
            /**Returns  the action link 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectLink * ActionLink
            (
            );
            /**Returns  the action point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ActionPoint
            (
            );
            /**Sets  the action point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionPoint
            (
                NXOpen::Point * actionPoint /** actionpoint */ 
            );
            /**Returns  the action csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ActionCsys
            (
            );
            /**Sets  the action csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetActionCsys
            (
                NXOpen::CoordinateSystem * actionCsys /** actioncsys */ 
            );
            /**Returns  the reaction link 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectLink * ReactionLink
            (
            );
            /**Returns  the reaction point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ReactionPoint
            (
            );
            /**Sets  the reaction point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReactionPoint
            (
                NXOpen::Point * reactionPoint /** reactionpoint */ 
            );
            /**Returns  the reaction csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * ReactionCsys
            (
            );
            /**Sets  the reaction csys 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReactionCsys
            (
                NXOpen::CoordinateSystem * reactionCsys /** reactioncsys */ 
            );
            /**Returns  the value type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ForceValueTypes ValueType
            (
            );
            /**Sets  the value type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetValueType
            (
                NXOpen::Motion::ForceValueTypes valueType /** valuetype */ 
            );
            /**Returns  the function  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::Function * Function
            (
            );
            /**Sets  the function  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFunction
            (
                NXOpen::CAE::Function * function /** function */ 
            );
            /**Returns  the direction  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::ScalarForceBuilder::DirectionType Direction
            (
            );
            /**Sets  the direction  
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDirection
            (
                NXOpen::Motion::ScalarForceBuilder::DirectionType type /** type */ 
            );
            /**Returns  the applicationtype 
             <br>  @deprecated Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use @link NXOpen::Motion::ScalarForceBuilder::Apptype NXOpen::Motion::ScalarForceBuilder::Apptype@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use NXOpen::Motion::ScalarForceBuilder::Apptype instead.") NXOpen::Motion::ScalarForceBuilder::ApplicationType Applicationtype
            (
            );
            /**Sets  the applicationtype 
             <br>  @deprecated Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use @link NXOpen::Motion::ScalarForceBuilder::Apptype NXOpen::Motion::ScalarForceBuilder::Apptype@endlink  instead. <br>  

             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NX_DEPRECATED("Deprecated in NX12.0.2.  Does not work with NXOpen VB Language Bindings. Use NXOpen::Motion::ScalarForceBuilder::Apptype instead.") void SetApplicationtype
            (
                NXOpen::Motion::ScalarForceBuilder::ApplicationType type /** type */ 
            );
            /**Returns  the apptype  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ScalarForceBuilder::ApplyType Apptype
            (
            );
            /**Sets  the apptype  
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetApptype
            (
                NXOpen::Motion::ScalarForceBuilder::ApplyType type /** type */ 
            );
            /**Returns  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the value expression 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ValueExpression
            (
            );
            /**Returns  the profile 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectFieldData * Profile
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
