#ifndef NXOpen_MOTION_LINKCOUPLERCOUPLEBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_LINKCOUPLERCOUPLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_LinkCouplerCoupleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_LinkAttachmentData.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class LinkCouplerCoupleBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Motion
    {
        class LinkAttachmentData;
    }
    namespace Motion
    {
        class MotionFunction;
    }
    namespace Motion
    {
        class SelectFieldData;
    }
    namespace Motion
    {
        class _LinkCouplerCoupleBuilderBuilder;
        class LinkCouplerCoupleBuilderImpl;
        /** Represents a @link NXOpen::Motion::LinkCouplerCoupleBuilder NXOpen::Motion::LinkCouplerCoupleBuilder@endlink  
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  LinkCouplerCoupleBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** the Measurement type.
                      */
            public: enum MeasurementChoices
            {
                MeasurementChoicesTranslation/** Translation  */,
                MeasurementChoicesRotation/** Rotation  */,
                MeasurementChoicesDistance/** Distance  */
            };

            /** the Scale type.
                      */
            public: enum ScaleChoices
            {
                ScaleChoicesExpression/** Expression  */,
                ScaleChoicesFunction/** Function  */,
                ScaleChoicesProfile/** Profile  */
            };

            private: LinkCouplerCoupleBuilderImpl * m_linkcouplercouplebuilder_impl;
            private: friend class  _LinkCouplerCoupleBuilderBuilder;
            protected: LinkCouplerCoupleBuilder();
            public: ~LinkCouplerCoupleBuilder();
            /**Returns  the measurement type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkCouplerCoupleBuilder::MeasurementChoices MeasurementType
            (
            );
            /**Sets  the measurement type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetMeasurementType
            (
                NXOpen::Motion::LinkCouplerCoupleBuilder::MeasurementChoices type /** type */ 
            );
            /**Returns  the Action Link Attachment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * ActionLinkAttachment
            (
            );
            /**Returns  the Base Link Attachment 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * BaseLinkAttachment
            (
            );
            /**Returns  the scale type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkCouplerCoupleBuilder::ScaleChoices ScaleType
            (
            );
            /**Sets  the scale type 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetScaleType
            (
                NXOpen::Motion::LinkCouplerCoupleBuilder::ScaleChoices type /** type */ 
            );
            /**Returns  the scale expression 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * ScaleExpression
            (
            );
            /**Returns  the scale spline curve 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::MotionFunction * ScaleFunction
            (
            );
            /**Sets  the scale spline curve 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetScaleFunction
            (
                NXOpen::Motion::MotionFunction * spline /** spline */ 
            );
            /**Returns  the profile 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::SelectFieldData * ScaleProfile
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
