#ifndef NXOpen_AME_REPORTTEMPLATEBUILDER_HXX_INCLUDED
#define NXOpen_AME_REPORTTEMPLATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ReportTemplateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_PageBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ReportTemplateBuilder;
    }
    class Builder;
    namespace AME
    {
        class _ReportTemplateBuilderBuilder;
        class ReportTemplateBuilderImpl;
        /** Class to create Report Template and assign the ReportQuery and Report Layout to them  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateReportTemplateBuilder  NXOpen::AME::AMEManager::CreateReportTemplateBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ReportTemplateBuilder : public NXOpen::Builder
        {
            private: ReportTemplateBuilderImpl * m_reporttemplatebuilder_impl;
            private: friend class  _ReportTemplateBuilderBuilder;
            protected: ReportTemplateBuilder();
            public: ~ReportTemplateBuilder();
            /**Returns  the enum report type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::PageBuilder::Types ReportType
            (
            );
            /**Sets  the enum report type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetReportType
            (
                NXOpen::AME::PageBuilder::Types reportType /** reporttype */ 
            );
            /**Returns  the ja function to set the layoutFileName
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LayoutFileName
            (
            );
            /**Sets  the ja function to set the layoutFileName
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLayoutFileName
            (
                const NXString & layoutFileName /** layoutfilename */ 
            );
            /**Sets  the ja function to set the layoutFileName
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetLayoutFileName
            (
                const char * layoutFileName /** layoutfilename */ 
            );
            /**Returns  the ja function to set the report query
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXString QueryFileName
            (
            );
            /**Sets  the ja function to set the report query
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetQueryFileName
            (
                const NXString & queryFileName /** queryfilename */ 
            );
            /**Sets  the ja function to set the report query
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            void SetQueryFileName
            (
                const char * queryFileName /** queryfilename */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
