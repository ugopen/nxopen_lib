#ifndef NXOpen_SIM_NCPROGRAMSOURCE_HXX_INCLUDED
#define NXOpen_SIM_NCPROGRAMSOURCE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_NcProgramSource.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SIM_NcProgram.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class NcProgramSource;
    }
    namespace SIM
    {
        class NcProgram;
    }
    namespace SIM
    {
        class _NcProgramSourceBuilder;
        class NcProgramSourceImpl;
        /**  @brief  Represents the NcProgramSource class object  

            <br> This object is created by NX.  <br> 
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  NcProgramSource : public NXOpen::TaggedObject
        {
            private: NcProgramSourceImpl * m_ncprogramsource_impl;
            private: friend class  _NcProgramSourceBuilder;
            protected: NcProgramSource();
            public: ~NcProgramSource();
            /** Add a Main program to this source.
                        This is only allowed on the External File Source.
                        This can be requested with @link SIM::NcProgramManagerBuilder::GetExternalFileSource SIM::NcProgramManagerBuilder::GetExternalFileSource@endlink .  @return  The added program. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NXOpen::SIM::NcProgram * AddMainProgram
            (
                const NXString & channel /** The channel name */,
                const NXString & file /** The file to be assigned */
            );
            /** Add a Main program to this source.
                        This is only allowed on the External File Source.
                        This can be requested with @link SIM::NcProgramManagerBuilder::GetExternalFileSource SIM::NcProgramManagerBuilder::GetExternalFileSource@endlink .  @return  The added program. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            NXOpen::SIM::NcProgram * AddMainProgram
            (
                const char * channel /** The channel name */,
                const char * file /** The file to be assigned */
            );
            /** Add a Subprogram to this source.  @return  The added program. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            public: NXOpen::SIM::NcProgram * AddSubprogram
            (
                const NXString & file /** The file to be assigned */
            );
            /** Add a Subprogram to this source.  @return  The added program. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") */
            NXOpen::SIM::NcProgram * AddSubprogram
            (
                const char * file /** The file to be assigned */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
