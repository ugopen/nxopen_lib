#ifndef NXOpen_ANNOTATIONS_USERSYMBOLPREFERENCES_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_USERSYMBOLPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_UserSymbolPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class UserSymbolPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class UserSymbolPreferencesImpl;
        /** Represents preferences related to user-defined symbols 
         <br>  Created in NX3.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  UserSymbolPreferences : public TransientObject
        {
            /** Specifies whether length and height or scale and aspect ratio is used
                    in specifying the size of the symbol */
            public: enum SizeType
            {
                SizeTypeLengthHeight/** length and height */,
                SizeTypeScaleAspectRatio/** scale and aspect ratio */
            };

            private: UserSymbolPreferencesImpl * m_usersymbolpreferences_impl;
            /// \cond NX_NO_DOC 
            public: explicit UserSymbolPreferences(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~UserSymbolPreferences();
            /** Gets the size preference 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSize
            (
                NXOpen::Annotations::UserSymbolPreferences::SizeType* sizeType /** Specifies whether length and height or scale and aspect ratio is used */,
                double* lengthOrScale /** Length or scale */,
                double* heightOrAspectRatio /** Height or aspect ratio */
            );
            /** Sets the scale and aspect ratio 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetScaleAndAspectRatio
            (
                double scale /** scale */ ,
                double aspectRatio /** aspect ratio */ 
            );
            /** Sets the length and height 
             <br>  Created in NX3.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLengthAndHeight
            (
                double length /** length */ ,
                double height /** height */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
