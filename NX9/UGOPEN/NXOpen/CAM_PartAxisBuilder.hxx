#ifndef NXOpen_CAM_PARTAXISBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PARTAXISBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PartAxisBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PartAxisBuilder;
    }
    class Point;
    class SmartObject;
    namespace CAM
    {
        class _PartAxisBuilderBuilder;
        class PartAxisBuilderImpl;
        /** Represents a part axis builder. 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PartAxisBuilder : public TaggedObject
        {
            /** The types for part axis of rotation */
            public: enum PartAxisOfRotationTypes
            {
                PartAxisOfRotationTypesXm/** +XM */,
                PartAxisOfRotationTypesYm/** +YM */,
                PartAxisOfRotationTypesZm/** +ZM */,
                PartAxisOfRotationTypesSpecify/** Specify */
            };

            private: PartAxisBuilderImpl * m_partaxisbuilder_impl;
            private: friend class  _PartAxisBuilderBuilder;
            protected: PartAxisBuilder();
            public: ~PartAxisBuilder();
            /**Returns  the axis of rotation type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PartAxisBuilder::PartAxisOfRotationTypes AxisOfRotation
            (
            );
            /**Sets  the axis of rotation type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAxisOfRotation
            (
                NXOpen::CAM::PartAxisBuilder::PartAxisOfRotationTypes axis /** the axis of rotation mode */
            );
            /**Returns  the part axis vector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SmartObject * PartAxisVector
            (
            );
            /**Sets  the part axis vector 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPartAxisVector
            (
                NXOpen::SmartObject * vector /** the part axis vector */
            );
            /**Returns  the part axis point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PartAxisPoint
            (
            );
            /**Sets  the part axis point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPartAxisPoint
            (
                NXOpen::Point * point /** the part axis point */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
