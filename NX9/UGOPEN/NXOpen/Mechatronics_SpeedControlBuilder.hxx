#ifndef NXOpen_MECHATRONICS_SPEEDCONTROLBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SPEEDCONTROLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SpeedControlBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_PhysicsConstraintBuilder.hxx>
#include <NXOpen/Mechatronics_SpeedControlBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class SpeedControlBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class PhysicsConstraintBuilder;
    }
    namespace Mechatronics
    {
        class SelectPhysicsJoint;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _SpeedControlBuilderBuilder;
        class SpeedControlBuilderImpl;
        /** Represents a @link Mechatronics::SpeedControl Mechatronics::SpeedControl@endlink  builder.  <br> To create a new instance of this class, use @link Mechatronics::SpeedControlCollection::CreateSpeedControlBuilder  Mechatronics::SpeedControlCollection::CreateSpeedControlBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  SpeedControlBuilder : public Mechatronics::PhysicsConstraintBuilder
        {
            /** the Axis Joint types. */
            public: enum AxisJointType
            {
                AxisJointTypeAngular/** Angular */,
                AxisJointTypeLinear/** Linear  */
            };

            private: SpeedControlBuilderImpl * m_speedcontrolbuilder_impl;
            private: friend class  _SpeedControlBuilderBuilder;
            protected: SpeedControlBuilder();
            public: ~SpeedControlBuilder();
            /**Returns  the joint select. This can be a @link HingeJoint HingeJoint@endlink , @link SlidingJoint SlidingJoint@endlink  
                    and @link CylindricalJoint CylindricalJoint@endlink .
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SelectPhysicsJoint * AxisJoint
            (
            );
            /** Sets the joint. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAxisJoint
            (
                NXOpen::NXObject * axisJoint /** axis joint */ 
            );
            /**Returns  the axis joint type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::SpeedControlBuilder::AxisJointType AxisType
            (
            );
            /**Sets  the axis joint type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAxisType
            (
                NXOpen::Mechatronics::SpeedControlBuilder::AxisJointType axisType /** axistype */ 
            );
            /**Returns  the speed. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Speed
            (
            );
            /**Returns  the use acceleration flag, which is used to control if the speed control includes acceleration data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseAcceleration
            (
            );
            /**Sets  the use acceleration flag, which is used to control if the speed control includes acceleration data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetUseAcceleration
            (
                bool useAcceleration /** useacceleration */ 
            );
            /**Returns  the max acceleration, which is used to set the maximum acceleration for speed control. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxAcceleration
            (
            );
            /**Returns  the limit jerk flag, which is used to control if the speed control includes jerk data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool LimitJerk
            (
            );
            /**Sets  the limit jerk flag, which is used to control if the speed control includes jerk data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetLimitJerk
            (
                bool limitJerk /** limitjerk */ 
            );
            /**Returns  the max jerk, which is used to set the maximum jerk for speed control. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxJerk
            (
            );
            /**Returns  whether or not to enable the limit force. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: bool EnableLimitForce
            (
            );
            /**Sets  whether or not to enable the limit force. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetEnableLimitForce
            (
                bool enable /** enable */ 
            );
            /**Returns  the forward force that speed control can apply. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForwardForce
            (
            );
            /**Returns  the min force that speed control can apply. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReverseForce
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
