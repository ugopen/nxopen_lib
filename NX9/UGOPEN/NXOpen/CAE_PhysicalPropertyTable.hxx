#ifndef NXOpen_CAE_PHYSICALPROPERTYTABLE_HXX_INCLUDED
#define NXOpen_CAE_PHYSICALPROPERTYTABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PhysicalPropertyTable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_IExportableFEEntity.hxx>
#include <NXOpen/CAE_NamedPropertyTable.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PhysicalPropertyTable;
    }
    namespace CAE
    {
        class IExportableFEEntity;
    }
    namespace CAE
    {
        class NamedPropertyTable;
    }
    namespace CAE
    {
        class _PhysicalPropertyTableBuilder;
        class PhysicalPropertyTableImpl;
        /** Represents a Physical Property Table

                For more information, refer to the Solver language documentation 
                in the <a href="../opencae/Solvers.html"> Solver language documentation </a>.

            
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PhysicalPropertyTable : public CAE::NamedPropertyTable, public virtual CAE::IExportableFEEntity
        {
            private: PhysicalPropertyTableImpl * m_physicalpropertytable_impl;
            private: friend class  _PhysicalPropertyTableBuilder;
            protected: PhysicalPropertyTable();
            public: ~PhysicalPropertyTable();
            /** Returns the solver card syntax strings for this entity.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXString> GetSolverCardSyntax
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
