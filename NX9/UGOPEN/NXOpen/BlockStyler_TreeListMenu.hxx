#ifndef NXOpen_BLOCKSTYLER_TREELISTMENU_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_TREELISTMENU_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_TreeListMenu.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_TreeListMenu.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class TreeListMenu;
    }
    namespace BlockStyler
    {
        class TreeListMenuImpl;
        /** Represents a menu class utilized by @link BlockStyler::Tree BlockStyler::Tree@endlink .
        Refer to @link BlockStyler::Tree::CreateMenu BlockStyler::Tree::CreateMenu@endlink  to create the menu.

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  TreeListMenu : public TransientObject
        {
            private: TreeListMenuImpl * m_treelistmenu_impl;
            /// \cond NX_NO_DOC 
            public: explicit TreeListMenu(void *ptr);
            /// \endcond 
            /** Adds single menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddMenuItem
            (
                int menuItemID /** Unique identifier for the menu item being added */,
                const NXString & menuItemText /** Display text for menu item being added*/
            );
            /** Adds single menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void AddMenuItem
            (
                int menuItemID /** Unique identifier for the menu item being added */,
                const char * menuItemText /** Display text for menu item being added*/
            );
            /** Adds single menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddMenuItem
            (
                int menuItemID /** Unique identifier for the menu item being added */,
                const NXString & menuItemText /** Display text for menu item being added*/,
                const NXString & icon /** Icon for menu item being added*/
            );
            /** Adds single menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void AddMenuItem
            (
                int menuItemID /** Unique identifier for the menu item being added */,
                const char * menuItemText /** Display text for menu item being added*/,
                const char * icon /** Icon for menu item being added*/
            );
            /** Adds a seperator 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void AddSeperator
            (
            );
            /** Sets a submenu. 
                    Submenu can be created using @link BlockStyler::Tree::CreateMenu BlockStyler::Tree::CreateMenu@endlink  method
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSubMenu
            (
                int menuItemID /** Menu Item ID of menu item on which submenu is supposed to be set.*/,
                NXOpen::BlockStyler::TreeListMenu * subMenu /** Menu to be added as submenu */
            );
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: virtual ~TreeListMenu();
            /**Gets the checked status for given menu item  @return  Status 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetItemChecked
            (
                int menuItemID /** Menu-item ID  */
            );
            /**Sets the checked status for given menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemChecked
            (
                int menuItemID /** Menu-item ID  */,
                bool checkedStatusStatus /** Status */
            );
            /**Gets the flag indicating whether the given menu item is disabled  @return  Status 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetItemDisable
            (
                int menuItemID /** Menu-item ID  */
            );
            /**Sets the flag indicating whether the given menu item is disabled 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemDisable
            (
                int menuItemID /** Menu-item ID  */,
                bool disableStatus /** Status */
            );
            /**Gets the flag indicating whether the given menu item is default  @return  Status 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetItemDefault
            (
                int menuItemID /** Menu-item ID  */
            );
            /**Sets the flag indicating whether the given menu item is default 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemDefault
            (
                int menuItemID /** Menu-item ID  */,
                bool defaultStatus /** Status */
            );
            /**Gets the flag indicating whether the given menu item is hidden  @return  Status 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetItemHidden
            (
                int menuItemID /** Menu-item ID  */
            );
            /**Sets the flag indicating whether the given menu item is hidden 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemHidden
            (
                int menuItemID /** Menu-item ID  */,
                bool hiddenStatus /** Status */
            );
            /**Gets the flag indicating whether the given menu item is dialog lanching  @return  Status 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GetItemDialogLaunching
            (
                int menuItemID /** Menu-item ID  */
            );
            /**Sets the flag indicating whether the given menu item is dialog lanching 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemDialogLaunching
            (
                int menuItemID /** Menu-item ID  */,
                bool dialogLaunchingStaus /** Status */
            );
            /** Gets the icon for given menu item  @return  Display text 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString GetItemIcon
            (
                int menuItemID /** Menu-item ID */
            );
            /** Sets the icon for given menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemIcon
            (
                int menuItemID /** Menu-item ID */,
                const NXString & icon /** Display text */
            );
            /** Sets the icon for given menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetItemIcon
            (
                int menuItemID /** Menu-item ID */,
                const char * icon /** Display text */
            );
            /** Gets the display text for given menu item  @return  Display text 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXString GetItemText
            (
                int menuItemID /** Menu-item ID */
            );
            /** Sets the display text for given menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetItemText
            (
                int menuItemID /** Menu-item ID */,
                const NXString & text /** Display text */
            );
            /** Sets the display text for given menu item 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            void SetItemText
            (
                int menuItemID /** Menu-item ID */,
                const char * text /** Display text */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
