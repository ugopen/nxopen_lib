#ifndef NXOpen_CAM_HOLEDRILLINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_HOLEDRILLINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_HoleDrillingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_HoleMachiningBuilder.hxx>
#include <NXOpen/CAM_FeedsBuilder.hxx>
#include <NXOpen/CAM_HoleDrillingBuilder.hxx>
#include <NXOpen/CAM_HoleDrillingCutParameters.hxx>
#include <NXOpen/CAM_NcmHoleMachining.hxx>
#include <NXOpen/CAM_OppositeDirection.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class HoleDrillingBuilder;
    }
    namespace CAM
    {
        class FeedsBuilder;
    }
    namespace CAM
    {
        class HoleDrillingCutParameters;
    }
    namespace CAM
    {
        class HoleMachiningBuilder;
    }
    namespace CAM
    {
        class NcmHoleMachining;
    }
    namespace CAM
    {
        class OppositeDirection;
    }
    namespace CAM
    {
        class _HoleDrillingBuilderBuilder;
        class HoleDrillingBuilderImpl;
        /** Represents a HoleDrillingBuilder Builder  <br> To create a new instance of this class, use @link CAM::OperationCollection::CreateHoleDrillingBuilder  CAM::OperationCollection::CreateHoleDrillingBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  HoleDrillingBuilder : public CAM::HoleMachiningBuilder
        {
            private: HoleDrillingBuilderImpl * m_holedrillingbuilder_impl;
            private: friend class  _HoleDrillingBuilderBuilder;
            protected: HoleDrillingBuilder();
            public: ~HoleDrillingBuilder();
            /**Returns  the non-cutting moves  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmHoleMachining * NonCuttingBuilder
            (
            );
            /**Returns  the Hole Drilling Cut Parameters 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::HoleDrillingCutParameters * CutParameters
            (
            );
            /**Returns  the opposite direction  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::OppositeDirection * OppositeDirection
            (
            );
            /**Returns  the feeds and speeds 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::FeedsBuilder * FeedsBuilder
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
