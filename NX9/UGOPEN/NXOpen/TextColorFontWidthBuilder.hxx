#ifndef NXOpen_TEXTCOLORFONTWIDTHBUILDER_HXX_INCLUDED
#define NXOpen_TEXTCOLORFONTWIDTHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     TextColorFontWidthBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/TextColorFontWidthBuilder.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class TextColorFontWidthBuilder;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXColor;
    class _TextColorFontWidthBuilderBuilder;
    class TextColorFontWidthBuilderImpl;
    /** 
    Represent a @link TextColorFontWidthBuilder TextColorFontWidthBuilder@endlink 
     <br> This is a sub-builder class and cannot be directly instantiated  <br> 
     <br>  Created in NX9.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  TextColorFontWidthBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
    {
        private: TextColorFontWidthBuilderImpl * m_textcolorfontwidthbuilder_impl;
        private: friend class  _TextColorFontWidthBuilderBuilder;
        protected: TextColorFontWidthBuilder();
        public: ~TextColorFontWidthBuilder();
        /**Returns  the text color
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::NXColor * TextColor
        (
        );
        /**Sets  the text color
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTextColor
        (
            NXOpen::NXColor * textColor /** textcolor */ 
        );
        /**Returns  the text font
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXString TextFont
        (
        );
        /**Sets  the text font
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTextFont
        (
            const NXString & textFont /** textfont */ 
        );
        /**Sets  the text font
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetTextFont
        (
            const char * textFont /** textfont */ 
        );
        /**Returns  the text width
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXString TextWidth
        (
        );
        /**Sets  the text width
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTextWidth
        (
            const NXString & textWidth /** textwidth */ 
        );
        /**Sets  the text width
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetTextWidth
        (
            const char * textWidth /** textwidth */ 
        );
        /**Returns  the text style
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: NXString TextStyle
        (
        );
        /**Sets  the text style
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTextStyle
        (
            const NXString & textStyle /** textstyle */ 
        );
        /**Sets  the text style
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetTextStyle
        (
            const char * textStyle /** textstyle */ 
        );
        /** Validate whether the inputs to the component are sufficient for 
                    commit to be called.  If the component is not in a state to commit
                    then an exception is thrown.  For example, if the component requires
                    you to set some property, this method will throw an exception if
                    you haven't set it.  This method throws a not-yet-implemented
                    NXException for some components.
                 @return  Was self validation successful 
         <br>  Created in NX3.0.1.  <br>  
         <br> License requirements : None */
        public: virtual bool Validate
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
