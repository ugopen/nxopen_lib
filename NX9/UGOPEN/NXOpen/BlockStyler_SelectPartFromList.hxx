#ifndef NXOpen_BLOCKSTYLER_SELECTPARTFROMLIST_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_SELECTPARTFROMLIST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_SelectPartFromList.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_SelectPartFromList.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class SelectPartFromList;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    class TaggedObject;
    namespace BlockStyler
    {
        class _SelectPartFromListBuilder;
        class SelectPartFromListImpl;
        /** Represents a Select Part From List block
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  SelectPartFromList : public BlockStyler::UIBlock
        {
            private: SelectPartFromListImpl * m_selectpartfromlist_impl;
            private: friend class  _SelectPartFromListBuilder;
            protected: SelectPartFromList();
            public: ~SelectPartFromList();
            /** Gets the SelectedObjects @return Value to get from the property
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetSelectedObjects
            (
            );
            /** Sets the SelectedObjects
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedObjects
            (
                const std::vector<NXOpen::TaggedObject *> & objectVector /**Value to set for the property*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
