#ifndef NXOpen_FEATURES_SHIPDESIGN_PILLARBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PILLARBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PillarBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_ShipDesign_BuiltUpBlockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_EndCutBuilder.hxx>
#include <NXOpen/Features_ShipDesign_PillarBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PillarBuilder;
        }
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class BuiltUpBlockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class EndCutBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    class Plane;
    class SelectTaggedObject;
    namespace Features
    {
        namespace ShipDesign
        {
            class _PillarBuilderBuilder;
            class PillarBuilderImpl;
            /**
                    Represents a @link Features::ShipDesign::Pillar Features::ShipDesign::Pillar@endlink  builder
                     <br> To create a new instance of this class, use @link Features::ShipCollection::CreatePillarBuilder  Features::ShipCollection::CreatePillarBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            AngleTolerance </td> <td> 
             
            0.5 (millimeters part), 0.5 (inches part) </td> </tr> 

            <tr><td> 
             
            AngularDim.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            DistanceTolerance </td> <td> 
             
            0.0254 (millimeters part), 0.001 (inches part) </td> </tr> 

            <tr><td> 
             
            EndCapThickness.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            EndCutType </td> <td> 
             
            None </td> </tr> 

            <tr><td> 
             
            EndEndCut.ConnectionType </td> <td> 
             
            Connected </td> </tr> 

            <tr><td> 
             
            EndEndCut.DraftAngle.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            EndEndCut.DraftOffset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            EndEndCut.DraftType </td> <td> 
             
            Trim </td> </tr> 

            <tr><td> 
             
            EndEndCut.LimitType </td> <td> 
             
            Value </td> </tr> 

            <tr><td> 
             
            EndEndCut.Offset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            EndEndCut.SelectionType </td> <td> 
             
            FacesWithAttributes </td> </tr> 

            <tr><td> 
             
            EndEndCut.ShearAngle.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            EndEndCut.TiltAngle.Value </td> <td> 
             
            0 </td> </tr> 

            <tr><td> 
             
            EndOffset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            Line1Offset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            Line2Offset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            PlacementMethod </td> <td> 
             
            TwoPlanesandLines </td> </tr> 

            <tr><td> 
             
            SectionType </td> <td> 
             
            Profile </td> </tr> 

            <tr><td> 
             
            StartCapThickness.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            StartOffset.Value </td> <td> 
             
            0 (millimeters part), 0 (inches part) </td> </tr> 

            <tr><td> 
             
            SupportCapOptions </td> <td> 
             
            None </td> </tr> 

            </table>  

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PillarBuilder : public Features::FeatureBuilder
            {
                /** SpreadSheet Type  Profile or BuiltUp */
                public: enum StockSectionType
                {
                    StockSectionTypeProfile/** Profile Stock */,
                    StockSectionTypeBuiltUp/** Built Up Stock */
                };

                /** Method used to create the support feature. */
                public: enum CreationMethod
                {
                    CreationMethodTwoPlanesandLines/** two planesand lines */ ,
                    CreationMethodSpecifyLine/** specify line */ ,
                    CreationMethodSpecifyCsys/** specify csys */ ,
                    CreationMethodAdoption/** adoption */ 
                };

                /** Settings to indicate how the cap is designed. */
                public: enum CapOptions
                {
                    CapOptionsNone/** none */ ,
                    CapOptionsTwoSided/** two sided */ ,
                    CapOptionsSymmetric/** symmetric */ 
                };

                /** this specifies end type option */
                public: enum EndTypeOptions
                {
                    EndTypeOptionsNone/** No end cuts are applied */,
                    EndTypeOptionsEndcut/** The same end cut is applied to both ends */,
                    EndTypeOptionsCap/** Each end has different end cuts */
                };

                /** this specifies how the end cuts are applied */
                public: enum EndCutTypes
                {
                    EndCutTypesNone/** No end cuts are applied */,
                    EndCutTypesSymmetric/** The same end cut is applied to both ends */,
                    EndCutTypesTwoSided/** Each end has different end cuts */
                };

                private: PillarBuilderImpl * m_pillarbuilder_impl;
                private: friend class  _PillarBuilderBuilder;
                protected: PillarBuilder();
                public: ~PillarBuilder();
                /**Returns  the section type (profile or plate) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::StockSectionType SectionType
                (
                );
                /**Sets  the section type (profile or plate) 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetSectionType
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::StockSectionType sectionType /** sectiontype */ 
                );
                /**Returns  the placement method used to locate the pillar. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::CreationMethod PlacementMethod
                (
                );
                /**Sets  the placement method used to locate the pillar. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetPlacementMethod
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::CreationMethod placementMethod /** placementmethod */ 
                );
                /**Returns  the start plane (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * StartPlane
                (
                );
                /**Sets  the start plane (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetStartPlane
                (
                    NXOpen::Plane * startPlane /** startplane */ 
                );
                /**Returns  the select guide curve (only used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * GuideCurve
                (
                );
                /**Returns  the first line (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * Line1
                (
                );
                /**Returns  the second line (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * Line2
                (
                );
                /**Returns  the end plane (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * EndPlane
                (
                );
                /**Sets  the end plane (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEndPlane
                (
                    NXOpen::Plane * endPlane /** endplane */ 
                );
                /**Returns  the coord system (only used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * CoordSystem
                (
                );
                /**Sets  the coord system (only used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetCoordSystem
                (
                    NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
                );
                /**Returns  the orientation line (only used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * OrientationLine
                (
                );
                /**Returns  the adoption body (only used with "JA_PILLAR_BUILDER_CreationMethod_AdoptionBody" creation method). 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObject * AdoptionBody
                (
                );
                /**Returns  the angle that the pillar stock will be rotated about its path from its initial location. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AngularDim
                (
                );
                /**Returns  the first line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Line1Offset
                (
                );
                /**Returns  the reverse first line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseLine1Offset
                (
                );
                /**Sets  the reverse first line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseLine1Offset
                (
                    bool reverseLine1Offset /** reverseline1offset */ 
                );
                /**Returns  the second line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Line2Offset
                (
                );
                /**Returns  the reverse second line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseLine2Offset
                (
                );
                /**Sets  the reverse second line offset (only used with "JA_PILLAR_BUILDER_CreationMethod_TwoPlanesandLines" creation method). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseLine2Offset
                (
                    bool reverseLine2Offset /** reverseline2offset */ 
                );
                /**Returns  the offset used to determine where the support starts (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StartOffset
                (
                );
                /**Returns  the reverse start offset (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseStartOffset
                (
                );
                /**Sets  the reverse start offset (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseStartOffset
                (
                    bool reverseStartOffset /** reversestartoffset */ 
                );
                /**Returns  the offset used to determine where the support ends (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * EndOffset
                (
                );
                /**Returns  the reverse end offset (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseEndOffset
                (
                );
                /**Sets  the reverse end offset (used with "JA_PILLAR_BUILDER_CreationMethod_SpecifyLine" and "JA_PILLAR_BUILDER_CreationMethod_SpecifyCsys" creation methods). 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReverseEndOffset
                (
                    bool reverseEndOffset /** reverseendoffset */ 
                );
                /**Returns  the support cap options. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::CapOptions SupportCapOptions
                (
                );
                /**Sets  the support cap options. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetSupportCapOptions
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::CapOptions supportCapOptions /** supportcapoptions */ 
                );
                /**Returns  the stock used to build the pillar from. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * MainStock
                (
                );
                /**Returns  the list of Seams 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::BuiltUpBlockBuilder * BuiltUpBlock
                (
                );
                /**Returns  the list of available material attributes. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * StartCapStock
                (
                );
                /**Returns  the start cap thickness. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StartCapThickness
                (
                );
                /**Returns  the list of available material attributes. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * EndCapStock
                (
                );
                /**Returns  the end cap thickness. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * EndCapThickness
                (
                );
                /**Returns  the end type Option 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::EndTypeOptions EndTypeOption
                (
                );
                /**Sets  the end type Option 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEndTypeOption
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::EndTypeOptions endTypeOption /** endtypeoption */ 
                );
                /**Returns  the end cut type Symmetric or TwoSided 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PillarBuilder::EndCutTypes EndCutType
                (
                );
                /**Sets  the end cut type Symmetric or TwoSided 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEndCutType
                (
                    NXOpen::Features::ShipDesign::PillarBuilder::EndCutTypes endcutType /** endcuttype */ 
                );
                /**Returns  the start end cut 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * StartEndCut
                (
                );
                /**Returns  the end end cut 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * EndEndCut
                (
                );
                /**Returns  the distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the angle tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngleTolerance
                (
                );
                /**Sets  the angle tolerance. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAngleTolerance
                (
                    double angleTolerance /** angletolerance */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
