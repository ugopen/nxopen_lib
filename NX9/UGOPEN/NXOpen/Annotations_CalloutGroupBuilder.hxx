#ifndef NXOpen_ANNOTATIONS_CALLOUTGROUPBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_CALLOUTGROUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_CalloutGroupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_CalloutGroupBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class CalloutGroupBuilder;
    }
    namespace Annotations
    {
        class IdSymbol;
    }
    class Builder;
    class SelectDisplayableObjectList;
    namespace Annotations
    {
        class _CalloutGroupBuilderBuilder;
        class CalloutGroupBuilderImpl;
        /** Represents a @link Annotations::CalloutGroupBuilder Annotations::CalloutGroupBuilder@endlink   <br> To create a new instance of this class, use @link Annotations::IdSymbolCollection::CreateCalloutGroupBuilder  Annotations::IdSymbolCollection::CreateCalloutGroupBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  CalloutGroupBuilder : public Builder
        {
            /** Represents group layout */
            public: enum Layout
            {
                LayoutHorizontal/** Horizontal        */,
                LayoutVertical/** Vertical          */
            };

            /** Represents Group or Ungroup mode. Use the correct mode before builder commit operation. */
            public: enum Mode
            {
                ModeGroup/**     Group          */,
                ModeUngroup/**     Ungroup        */
            };

            /** Represents leader attachment for vertical callout groups. */
            public: enum VerticalGroupLeaderAttachment
            {
                VerticalGroupLeaderAttachmentTop/** Top		*/,
                VerticalGroupLeaderAttachmentBottom/** Bottom	*/
            };

            private: CalloutGroupBuilderImpl * m_calloutgroupbuilder_impl;
            private: friend class  _CalloutGroupBuilderBuilder;
            protected: CalloutGroupBuilder();
            public: ~CalloutGroupBuilder();
            /**Returns  the selected callout 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * SelectCallout
            (
            );
            /**Returns  the layout type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CalloutGroupBuilder::Layout LayoutType
            (
            );
            /**Sets  the layout type 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetLayoutType
            (
                NXOpen::Annotations::CalloutGroupBuilder::Layout layout /** layout */ 
            );
            /**Returns  the mode 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CalloutGroupBuilder::Mode CalloutModeType
            (
            );
            /**Sets  the mode 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCalloutModeType
            (
                NXOpen::Annotations::CalloutGroupBuilder::Mode mode /** mode */ 
            );
            /**Gets the symbols which are grouped @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::IdSymbol *> GetGroupSymbols
            (
            );
            /** Groups or UnGroups the symbols based on @link Annotations::CalloutGroupBuilder::Mode Annotations::CalloutGroupBuilder::Mode@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetGroupSymbols
            (
                const std::vector<NXOpen::Annotations::IdSymbol *> & symbols /** symbols */ 
            );
            /**Returns  the leader attachment to vertical callout groups 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::CalloutGroupBuilder::VerticalGroupLeaderAttachment VerticalLeaderAttachment
            (
            );
            /**Sets  the leader attachment to vertical callout groups 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVerticalLeaderAttachment
            (
                NXOpen::Annotations::CalloutGroupBuilder::VerticalGroupLeaderAttachment position /** position */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
