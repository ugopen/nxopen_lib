#ifndef NXOpen_MECHATRONICS_MOTIONPROFILEBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_MOTIONPROFILEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_MotionProfileBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_MotionProfileBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class MotionProfileBuilder;
    }
    class Builder;
    class Expression;
    class NXObject;
    namespace Mechatronics
    {
        class _MotionProfileBuilderBuilder;
        class MotionProfileBuilderImpl;
        /** Represents a @link Mechatronics::MotionProfile Mechatronics::MotionProfile@endlink  builder.  <br> To create a new instance of this class, use @link Mechatronics::MotionProfileCollection::CreateMotionProfileBuilder  Mechatronics::MotionProfileCollection::CreateMotionProfileBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  MotionProfileBuilder : public Builder
        {
            /** the Master Unit types */
            public: enum MasterValueUnit
            {
                MasterValueUnitLinear/** Linear */,
                MasterValueUnitRotary/** Rotary */,
                MasterValueUnitTime/** Time   */
            };

            /** the Slave Unit types */
            public: enum SlaveValueUnit
            {
                SlaveValueUnitLinearPosition/** Linear Position */,
                SlaveValueUnitRotaryPosition/** Rotary Position */,
                SlaveValueUnitLinearSpeed/** Linear Speed    */,
                SlaveValueUnitRotarySpeed/** Rotary Speed    */
            };

            /** Indicates which cyclic type should be take.The type of Cam Profile can be switched between non-cyclic,
                     cyclic and relative cyclic. */
            public: enum ProfileCyclicType
            {
                ProfileCyclicTypeRelativeCyclic/** Relative Cyclic*/,
                ProfileCyclicTypeCyclic/** Cyclic         */,
                ProfileCyclicTypeNonCyclic/** Non-cyclic     */
            };

            private: MotionProfileBuilderImpl * m_motionprofilebuilder_impl;
            private: friend class  _MotionProfileBuilderBuilder;
            protected: MotionProfileBuilder();
            public: ~MotionProfileBuilder();
            /**Returns  the name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the masterMin. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * MasterMinimum
            (
            );
            /**Returns  the masterMax. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * MasterMaximum
            (
            );
            /**Returns  the masterUnit. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::MotionProfileBuilder::MasterValueUnit MasterUnit
            (
            );
            /**Sets  the masterUnit. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetMasterUnit
            (
                NXOpen::Mechatronics::MotionProfileBuilder::MasterValueUnit masterUnit /** masterunit */ 
            );
            /**Returns  the slaveMin. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * SlaveMinimum
            (
            );
            /**Returns  the slaveMax. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Expression * SlaveMaximum
            (
            );
            /**Returns  the slaveUnit. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::MotionProfileBuilder::SlaveValueUnit SlaveUnit
            (
            );
            /**Sets  the slaveUnit. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSlaveUnit
            (
                NXOpen::Mechatronics::MotionProfileBuilder::SlaveValueUnit slaveUnit /** slaveunit */ 
            );
            /** Add element to builder. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void AddElement
            (
                NXOpen::NXObject * part /** part */ ,
                const NXString & name /** name */ ,
                double masterPos /** masterpos */ ,
                double slavePos /** slavepos */ ,
                double vin /** vin */ ,
                double vout /** vout */ ,
                double ain /** ain */ ,
                double aout /** aout */ ,
                bool vinEqVout /** vineqvout */ ,
                bool ainEqAout /** aineqaout */ ,
                bool constantSpeed /** constantspeed */ 
            );
            /** Add element to builder. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void AddElement
            (
                NXOpen::NXObject * part /** part */ ,
                const char * name /** name */ ,
                double masterPos /** masterpos */ ,
                double slavePos /** slavepos */ ,
                double vin /** vin */ ,
                double vout /** vout */ ,
                double ain /** ain */ ,
                double aout /** aout */ ,
                bool vinEqVout /** vineqvout */ ,
                bool ainEqAout /** aineqaout */ ,
                bool constantSpeed /** constantspeed */ 
            );
            /**Returns  the cyclic type of a cam profile 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::MotionProfileBuilder::ProfileCyclicType CyclicType
            (
            );
            /**Sets  the cyclic type of a cam profile 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetCyclicType
            (
                NXOpen::Mechatronics::MotionProfileBuilder::ProfileCyclicType cyclicType /** cyclictype */ 
            );
            /**Returns  the indicator that a motion profile is designed for a electronic cam
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsForElecCam
            (
            );
            /**Sets  the indicator that a motion profile is designed for a electronic cam
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetForElecCam
            (
                bool isForElecCam /** isforeleccam */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
