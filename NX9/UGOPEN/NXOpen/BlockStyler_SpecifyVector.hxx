#ifndef NXOpen_BLOCKSTYLER_SPECIFYVECTOR_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_SPECIFYVECTOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_SpecifyVector.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_SpecifyVector.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class SpecifyVector;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    class TaggedObject;
    namespace BlockStyler
    {
        class _SpecifyVectorBuilder;
        class SpecifyVectorImpl;
        /** Represents Specify Vector block
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  SpecifyVector : public BlockStyler::UIBlock
        {
            private: SpecifyVectorImpl * m_specifyvector_impl;
            private: friend class  _SpecifyVectorBuilder;
            protected: SpecifyVector();
            public: ~SpecifyVector();
            /**Returns  the AutomaticProgression
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool AutomaticProgression
            (
            );
            /**Sets  the AutomaticProgression
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAutomaticProgression
            (
                bool automaticProgression /** automaticprogression */ 
            );
            /**Returns  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipImage
            (
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipImage
            (
                const NXString & imageString /** image string */ 
            );
            /**Sets  the BalloonTooltipImage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipImage
            (
                const char * imageString /** image string */ 
            );
            /**Returns  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipLayoutAsString
            (
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipLayoutAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the BalloonTooltipLayout as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipLayoutAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the BalloonTooltipLayout members  @return Value to get from the property. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetBalloonTooltipLayoutMembers
            (
            );
            /**Returns  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString BalloonTooltipText
            (
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetBalloonTooltipText
            (
                const NXString & balloonTooltipText /** balloon tooltip text */ 
            );
            /**Sets  the BalloonTooltipText
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetBalloonTooltipText
            (
                const char * balloonTooltipText /** balloon tooltip text */ 
            );
            /**Returns  the CreateInterpartLink
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool CreateInterpartLink
            (
            );
            /**Sets  the CreateInterpartLink
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetCreateInterpartLink
            (
                bool createLink /** createlink */ 
            );
            /**Returns  the InterpartSelection as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString InterpartSelectionAsString
            (
            );
            /**Sets  the InterpartSelection as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetInterpartSelectionAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the InterpartSelection as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetInterpartSelectionAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the InterpartSelection members @return Value to get from the property
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetInterpartSelectionMembers
            (
            );
            /** Gets the SelectedObjects @return Value to get from the property
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetSelectedObjects
            (
            );
            /** Sets the SelectedObjects
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedObjects
            (
                const std::vector<NXOpen::TaggedObject *> & objectVector /**Value to set for the property*/
            );
            /**Returns  the StepStatus as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString StepStatusAsString
            (
            );
            /**Sets  the StepStatus as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetStepStatusAsString
            (
                const NXString & enumString /** enumstring */ 
            );
            /**Sets  the StepStatus as string
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetStepStatusAsString
            (
                const char * enumString /** enumstring */ 
            );
            /** Gets the StepStatus @return Value to get from the property
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetStepStatusMembers
            (
            );
            /**Returns  the EnableFacetSelection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool EnableFacetSelection
            (
            );
            /**Sets  the EnableFacetSelection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableFacetSelection
            (
                bool enableSelection /** enableselection */ 
            );
            /**Returns  the Point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d Point
            (
            );
            /**Sets  the Point
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPoint
            (
                const NXOpen::Point3d & point /** point */ 
            );
            /**Returns  the ShowShortcuts
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool ShowShortcuts
            (
            );
            /**Sets  the ShowShortcuts
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetShowShortcuts
            (
                bool show /** show */ 
            );
            /**Returns  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int SnapPointTypesOnByDefault
            (
            );
            /**Sets  the SnapPointTypesOnByDefault
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSnapPointTypesOnByDefault
            (
                int snapTypesByDefault /** snaptypesbydefault */ 
            );
            /**Returns  the DoubleSide
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool DoubleSide
            (
            );
            /**Sets  the DoubleSide
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetDoubleSide
            (
                bool doubleSide /** doubleside */ 
            );
            /**Returns  the EnableReverseDirection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool EnableReverseDirection
            (
            );
            /**Sets  the EnableReverseDirection
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEnableReverseDirection
            (
                bool enableReverse /** enablereverse */ 
            );
            /**Returns  the Is2DMode. If true, vector is created in 2D space.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Is2DMode
            (
            );
            /**Sets  the Is2DMode. If true, vector is created in 2D space.
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetIs2DMode
            (
                bool is2DMode /** is2dmode */ 
            );
            /**Returns  the Vector
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vector3d Vector
            (
            );
            /**Sets  the Vector
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetVector
            (
                const NXOpen::Vector3d & vector /** vector */ 
            );
            /**Returns  the LabelString
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXString LabelString
            (
            );
            /**Sets  the LabelString
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetLabelString
            (
                const NXString & labelString /** labelstring */ 
            );
            /**Sets  the LabelString
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            void SetLabelString
            (
                const char * labelString /** labelstring */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
