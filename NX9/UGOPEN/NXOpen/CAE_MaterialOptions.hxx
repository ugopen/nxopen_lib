#ifndef NXOpen_CAE_MATERIALOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_MATERIALOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_MaterialOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class MaterialOptions;
    }
    class PhysicalMaterial;
    namespace CAE
    {
        class MaterialOptionsImpl;
        /**  @brief  Represents the material options to be used when assigning a material to cae part  

           <br> To create a new instance of this class, use @link CAE::CaePart::NewMaterialOptions  CAE::CaePart::NewMaterialOptions @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  MaterialOptions : public TransientObject
        {
            private: MaterialOptionsImpl * m_materialoptions_impl;
            /// \cond NX_NO_DOC 
            public: explicit MaterialOptions(void *ptr);
            /// \endcond 
            /**Sets  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMaterialInherited
            (
                bool bInherited /** binherited */ 
            );
            /**Returns  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool MaterialInherited
            (
            );
            /**Sets  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMaterial
            (
                NXOpen::PhysicalMaterial * material /** material */ 
            );
            /**Returns  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PhysicalMaterial * Material
            (
            );
            /** Destroys the object 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~MaterialOptions();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
