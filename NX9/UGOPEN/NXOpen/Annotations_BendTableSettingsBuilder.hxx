#ifndef NXOpen_ANNOTATIONS_BENDTABLESETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_BENDTABLESETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_BendTableSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_BendTableSettingsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class BendTableSettingsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _BendTableSettingsBuilderBuilder;
        class BendTableSettingsBuilderImpl;
        /** Represents a @link Annotations::BendTableSettingsBuilder Annotations::BendTableSettingsBuilder@endlink  
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  BendTableSettingsBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the type of the column in the bend table */
            public: enum ColumnType
            {
                ColumnTypeBendID/** Bend ID */,
                ColumnTypeBendName/** Bend Name */,
                ColumnTypeBendRadius/** Bend Radius */,
                ColumnTypeBendAngle/** Bend Angle */,
                ColumnTypeBendDirection/** Bend Direction */,
                ColumnTypeIncludedAngle/** Included Angle */
            };

            private: BendTableSettingsBuilderImpl * m_bendtablesettingsbuilder_impl;
            private: friend class  _BendTableSettingsBuilderBuilder;
            protected: BendTableSettingsBuilder();
            public: ~BendTableSettingsBuilder();
            /**Returns  the automatic update option
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: bool AutomaticUpdate
            (
            );
            /**Sets  the automatic update option
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetAutomaticUpdate
            (
                bool automaticUpdate /** automaticupdate */ 
            );
            /**Returns  the sort on update option
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: bool SortOnUpdate
            (
            );
            /**Sets  the sort on update option
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSortOnUpdate
            (
                bool sortOnUpdate /** sortonupdate */ 
            );
            /**Returns  the column that is used to sort the bend table
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: NXOpen::Annotations::BendTableSettingsBuilder::ColumnType SortColumn
            (
            );
            /**Sets  the column that is used to sort the bend table
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSortColumn
            (
                NXOpen::Annotations::BendTableSettingsBuilder::ColumnType sortColumn /** sortcolumn */ 
            );
            /** Returns the order of the columns in the bend table  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: std::vector<NXOpen::Annotations::BendTableSettingsBuilder::ColumnType> GetColumnOrder
            (
            );
            /** Sets the order of the columns in the bend table 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetColumnOrder
            (
                const std::vector<NXOpen::Annotations::BendTableSettingsBuilder::ColumnType> & columnOrder /** columnorder */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
