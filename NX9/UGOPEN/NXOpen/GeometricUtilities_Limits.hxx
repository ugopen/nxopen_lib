#ifndef NXOpen_GEOMETRICUTILITIES_LIMITS_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_LIMITS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_Limits.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class Limits;
    }
    namespace GeometricUtilities
    {
        class Extend;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _LimitsBuilder;
        class LimitsImpl;
        /** Represents a limits data. 
            
         <br>  Created in NX3.0.1.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  Limits : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: LimitsImpl * m_limits_impl;
            private: friend class  _LimitsBuilder;
            protected: Limits();
            public: ~Limits();
            /**Returns  the start extend builder 
                    
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Extend * StartExtend
            (
            );
            /**Returns  the end extend builder 
                    
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Extend * EndExtend
            (
            );
            /**Sets  the symmetric option
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSymmetricOption
            (
                bool symmetricOption /** symmetric option */ 
            );
            /**Returns  the symmetric option
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: bool SymmetricOption
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
