#ifndef NXOpen_GEOMETRICUTILITIES_BLENDSETBACKBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BLENDSETBACKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BlendSetbackBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_BlendSetbackBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BlendSetbackBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Plane;
    class Point;
    class ScCollector;
    namespace GeometricUtilities
    {
        class _BlendSetbackBuilderBuilder;
        class BlendSetbackBuilderImpl;
        /**
                This class provides ability to define a setback curve on a blend face.
             <br> To create a new instance of this class, use @link Part::CreateEmptyBlendSetbackBuilder  Part::CreateEmptyBlendSetbackBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  BlendSetbackBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Setback direction options */
            public: enum Directions
            {
                DirectionsU/** setback curve is an iso-u parameter curve */,
                DirectionsV/** setback curve is an iso-v parameter curve */,
                DirectionsPlane/** setback curve is the intersection curve between a plane and faces */
            };

            private: BlendSetbackBuilderImpl * m_blendsetbackbuilder_impl;
            private: friend class  _BlendSetbackBuilderBuilder;
            protected: BlendSetbackBuilder();
            public: ~BlendSetbackBuilder();
            /**Returns  the blend face collector. The collector can include faces from different blends. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Face
            (
            );
            /**Returns  the direction type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BlendSetbackBuilder::Directions Direction
            (
            );
            /**Sets  the direction type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::GeometricUtilities::BlendSetbackBuilder::Directions direction /** direction */ 
            );
            /**Returns  the setback point for u/v direction. This point is optional. 
                        If specified, it will replace the handle point and establish the associativity 
                        between the point and the setback curve. 
                        Once the handle point is changed through dragging, the associativity will be lost. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SetbackPoint
            (
            );
            /**Sets  the setback point for u/v direction. This point is optional. 
                        If specified, it will replace the handle point and establish the associativity 
                        between the point and the setback curve. 
                        Once the handle point is changed through dragging, the associativity will be lost. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSetbackPoint
            (
                NXOpen::Point * setbackPoint /** setbackpoint */ 
            );
            /**Returns  the handle point for u/v direction. The setback curve will pass through the handle point. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * HandlePoint
            (
            );
            /**Sets  the handle point for u/v direction. The setback curve will pass through the handle point. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetHandlePoint
            (
                NXOpen::Point * handlePoint /** handlepoint */ 
            );
            /**Returns  the setback plane. The setback curve will be the intersection curve between plane and face collector. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the setback plane. The setback curve will be the intersection curve between plane and face collector. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the flag indicating if the setback curve direction is flipped. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsDirectionFlipped
            (
            );
            /**Sets  the flag indicating if the setback curve direction is flipped. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirectionFlipped
            (
                bool flipDirection /** flipdirection */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
