#ifndef NXOpen_ASSEMBLIES_ORDER_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_ORDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_Order.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_assemblies_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Assemblies
    {
        class Order;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class ComponentAssembly;
    }
    class NXObject;
    namespace Assemblies
    {
        class _OrderBuilder;
        class OrderImpl;
        /** Represents base class for all Order classes. It is an abstract class and
                cannot be instantiated on its own. All Order classes should inherit from this class. <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ASSEMBLIESEXPORT  Order : public NXObject
        {
            /** Represents whether an order is saved or not*/
            public: enum State
            {
                StateUnSaved/** Order is unsaved */,
                StateSaved/** Order is saved */
            };

            /** Represents the type of an order*/
            public: enum Type
            {
                TypeUserDefinedComponent/** User defined component order*/,
                TypeSequentialComponent/** System defined sequential component order */,
                TypeChronologicalComponent/** System defined chronological component order */,
                TypeAlphanumericComponent/** System defined alphanumeric component order */,
                TypeAlphabeticComponent/** System defined alphabetic component order */
            };

            private: OrderImpl * m_order_impl;
            private: friend class  _OrderBuilder;
            protected: Order();
            public: ~Order();
            /**Returns  the state of @link Assemblies::Order Assemblies::Order@endlink . An order can be in one of the 
                        @link Assemblies::Order::State Assemblies::Order::State@endlink .
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Order::State OrderState
            (
            );
            /**Returns  the type of @link Assemblies::Order Assemblies::Order@endlink . An order can be of
                        @link Assemblies::Order::Type Assemblies::Order::Type@endlink  
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::Order::Type OrderType
            (
            );
            /** Gets the reverse state of the @link Assemblies::Order Assemblies::Order@endlink  @return  True if order is reversed else False 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetReversed
            (
            );
            /** Sets the reverse state of the @link Assemblies::Order Assemblies::Order@endlink 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void SetReversed
            (
                bool isReversed /** isreversed */ 
            );
            /** Applies this order
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void Activate
            (
            );
            /** Deletes an order 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Delete
            (
            );
            /** Saves an order
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Save
            (
            );
            /** Creates a copy of the order, and gives the copy a new name.
                    Each @link Assemblies::ComponentAssembly Assemblies::ComponentAssembly@endlink  contains a set of system defined orders,
                    which could be queried using @link Assemblies::ComponentAssembly::GetComponentOrders Assemblies::ComponentAssembly::GetComponentOrders@endlink  method.
                    A new @link Assemblies::Order::Type::UserDefinedComponent Assemblies::Order::Type::UserDefinedComponent@endlink  order can only be created using this method.
                     @return  The new Order 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::Assemblies::Order * SaveAs
            (
                const NXString & newName /** newname */ 
            );
            /** Creates a copy of the order, and gives the copy a new name.
                    Each @link Assemblies::ComponentAssembly Assemblies::ComponentAssembly@endlink  contains a set of system defined orders,
                    which could be queried using @link Assemblies::ComponentAssembly::GetComponentOrders Assemblies::ComponentAssembly::GetComponentOrders@endlink  method.
                    A new @link Assemblies::Order::Type::UserDefinedComponent Assemblies::Order::Type::UserDefinedComponent@endlink  order can only be created using this method.
                     @return  The new Order 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            NXOpen::Assemblies::Order * SaveAs
            (
                const char * newName /** newname */ 
            );
            /** Returns immediate children of input @link Assemblies::ComponentAssembly Assemblies::ComponentAssembly@endlink 
                    as they are ordered in this @link Assemblies::ComponentOrder Assemblies::ComponentOrder@endlink  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void GetChildrenOrder
            (
                NXOpen::Assemblies::ComponentAssembly * parent /** parent */ ,
                std::vector<NXOpen::Assemblies::Component *> & children /** Returns children in order */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
