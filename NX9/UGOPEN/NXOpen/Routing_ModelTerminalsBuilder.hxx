#ifndef NXOpen_ROUTING_MODELTERMINALSBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_MODELTERMINALSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_ModelTerminalsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/Routing_ModelTerminalsBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class ModelTerminalsBuilder;
    }
    class Builder;
    class NXObject;
    namespace Routing
    {
        class SelectPort;
    }
    class TaggedObjectList;
    namespace Routing
    {
        class _ModelTerminalsBuilderBuilder;
        class ModelTerminalsBuilderImpl;
        /** The Builder to Model/UnModel the Terminals  <br> To create a new instance of this class, use @link Routing::RouteManager::ModelTerminalsBuilder  Routing::RouteManager::ModelTerminalsBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CutbackOption </td> <td> 
         
        FromCharacteristic </td> </tr> 

        <tr><td> 
         
        ExtensionOption </td> <td> 
         
        FromCharacteristic </td> </tr> 

        <tr><td> 
         
        PreviewToggle </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  ModelTerminalsBuilder : public Builder
        {
            /** The Enum for selecting the CutBack Option */
            public: enum CutBackLocationOption
            {
                CutBackLocationOptionFromCharacteristic/** FromCharacteristic */,
                CutBackLocationOptionUniformValue/** UniformValue */,
                CutBackLocationOptionIndividualCutbacks/** IndividualValue */
            };

            /** The Enum for selecting the ExtensionValue Option */
            public: enum ExtensionValueOption
            {
                ExtensionValueOptionFromCharacteristic/** FromCharacteristic */,
                ExtensionValueOptionUniformValue/** UniformValue */,
                ExtensionValueOptionIndividualExtensions/** IndividualValue */
            };

            private: ModelTerminalsBuilderImpl * m_modelterminalsbuilder_impl;
            private: friend class  _ModelTerminalsBuilderBuilder;
            protected: ModelTerminalsBuilder();
            public: ~ModelTerminalsBuilder();
            /**Returns  the port selection 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Routing::SelectPort * PortSelection
            (
            );
            /**Returns  the cutback option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Routing::ModelTerminalsBuilder::CutBackLocationOption CutbackOption
            (
            );
            /**Sets  the cutback option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetCutbackOption
            (
                NXOpen::Routing::ModelTerminalsBuilder::CutBackLocationOption cutbackOption /** cutbackoption */ 
            );
            /**Returns  the extension option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Routing::ModelTerminalsBuilder::ExtensionValueOption ExtensionOption
            (
            );
            /**Sets  the extension option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetExtensionOption
            (
                NXOpen::Routing::ModelTerminalsBuilder::ExtensionValueOption extensionOption /** extensionoption */ 
            );
            /**Returns  the List Containing the Terminals and their properties.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::TaggedObjectList * List
            (
            );
            /**Returns  the preview 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: bool PreviewToggle
            (
            );
            /**Sets  the preview 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetPreviewToggle
            (
                bool preview /** preview */ 
            );
            /** The Model the selected Terminals  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void Model
            (
            );
            /** The UnModel the selected terminals 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void UnModel
            (
            );
            /** The Model all the terminals 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void ModelAll
            (
            );
            /** Unmodel all of the terminals 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void UnModelAll
            (
            );
            /**Returns  the MultiPort of the selected object
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::NXObject * MultiPort
            (
            );
            /**Sets  the MultiPort of the selected object
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetMultiPort
            (
                NXOpen::NXObject * port /** Routing Port */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
