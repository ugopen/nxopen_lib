#ifndef NXOpen_GEOMETRICUTILITIES_REFERENCEPATTERN_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_REFERENCEPATTERN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ReferencePattern.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_ReferencePattern.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ReferencePattern;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectNXObject;
    namespace GeometricUtilities
    {
        class _ReferencePatternBuilder;
        class ReferencePatternImpl;
        /** the reference pattern definition. 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ReferencePattern : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: ReferencePatternImpl * m_referencepattern_impl;
            private: friend class  _ReferencePatternBuilder;
            protected: ReferencePattern();
            public: ~ReferencePattern();
            /**Returns  the referenced pattern object.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * ReferencedPattern
            (
            );
            /** Set the base instance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetBaseInstance
            (
                int firstIndex /** firstindex */ ,
                int secondIndex /** secondindex */ 
            );
            /** Reset the base instance indices to an "undefined" state. The base instance will be reset
                        so that the indices do not correspond to indices from any instance of the referenced 
                        pattern selected. The base instance indices must be set after this call before commit. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void ResetBaseInstance
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
