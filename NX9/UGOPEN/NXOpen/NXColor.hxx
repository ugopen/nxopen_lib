#ifndef NXOpen_NXCOLOR_HXX_INCLUDED
#define NXOpen_NXCOLOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NXColor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class NXColor;
    class NXColorImpl;
    /** Represents a standard NX color.
        The RGB values and name for a particular NXColor object depend on
        the part.  Hence, if you look up an NXColor object in one part and use it in another
        part, the object may have different RGB values in the other part. 
     
     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  NXColor
    {
         /** RGB values */
        public:
        struct  Rgb
        {
            public: /** red value */double R;
            public: /** green value */double G;
            public: /** blue value */double B;
            public: Rgb() :
                R(),
                G(),
                B()
            {
            }
            /** Constructor for the Rgb struct. */ 
            public: Rgb(double rInitial /** red value */, 
                    double gInitial /** green value */, 
                    double bInitial /** blue value */) :
                R(rInitial),
                G(gInitial),
                B(bInitial)
            {
            }
        };

        private: NXColorImpl * m_nxcolor_impl;
        /// \cond NX_NO_DOC 
        /** This class exists only to aid NX internally.
         This class should be considered "private" to the NX internal implementation.
         This class is subject to change at any time without notice */ 
        public: struct NXOPENCPPEXPORT  Factory { static NXColor* _Get(int handle); };
        friend struct Factory;
        private: explicit NXColor(int handle) : m_nxcolor_impl(NULL) , m_handle(handle) {}
        /** Returns an integer identifier for this object. This identifier can be used in methods that require an integer representation of this object, such as User Function methods. */
        public: int Handle() const {return m_handle;}
        private: int m_handle;
        /// \endcond 
        public: ~NXColor();
        /** Gets the RGB values in the display part  @return  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::NXColor::Rgb GetRgb
        (
        );
        /**Returns  the label in the display part 
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Label
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
