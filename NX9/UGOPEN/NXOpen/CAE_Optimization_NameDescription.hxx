#ifndef NXOpen_CAE_OPTIMIZATION_NAMEDESCRIPTION_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_NAMEDESCRIPTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_NameDescription.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_NameDescription.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class NameDescription;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class _NameDescriptionBuilder;
            class NameDescriptionImpl;
            /** 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  NameDescription : public TaggedObject
            {
                private: NameDescriptionImpl * m_namedescription_impl;
                private: friend class  _NameDescriptionBuilder;
                protected: NameDescription();
                public: ~NameDescription();
                /**Returns  the name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString Name
                (
                );
                /**Sets  the name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /** Returns the description  @return  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetDescription
                (
                );
                /** Sets the description 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetDescription
                (
                    const std::vector<NXString> & description /** description */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
