#ifndef NXOpen_FEATURES_EMBOSSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_EMBOSSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_EmbossBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_EmbossRegion.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class EmbossBuilder;
    }
    namespace Features
    {
        class EmbossRegion;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _EmbossBuilderBuilder;
        class EmbossBuilderImpl;
        /** Represents an emboss feature builder that creates or edits an emboss feature.
                 <br> 
                This class provides methods to set and get the multiple region subobjects and tolerance. 
                 <br> 
                 <br> 
                The following is default value:
                 <br> 

                 <br> 
                <b>Tolerance</b>    Distance tolerance    0.001/0.0254[in/mm]
                 <br> 
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateEmbossBuilder  Features::FeatureCollection::CreateEmbossBuilder @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  EmbossBuilder : public Features::FeatureBuilder
        {
            private: EmbossBuilderImpl * m_embossbuilder_impl;
            private: friend class  _EmbossBuilderBuilder;
            protected: EmbossBuilder();
            public: ~EmbossBuilder();
            /** 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetRegions
            (
                const std::vector<NXOpen::Features::EmbossRegion *> & regions /**Array of emboss region objects. In NX4, only one region is supported.*/
            );
            /** The emboss regions  @return Array of emboss region objects. In NX4, only one region is supported.
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Features::EmbossRegion *> GetRegions
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /**distance tolerance */
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /** Set the parent sketch internalization status for use during emboss feature creation 
             <br>  Created in NX4.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void MakeParentSketchInternal
            (
                bool internalizeParentSketch /** If true, internalize the parent sketch, else the sketch will remain external. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
