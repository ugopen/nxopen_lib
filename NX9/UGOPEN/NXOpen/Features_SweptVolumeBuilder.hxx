#ifndef NXOpen_FEATURES_SWEPTVOLUMEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SWEPTVOLUMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SweptVolumeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_SweptVolumeBuilder.hxx>
#include <NXOpen/GeometricUtilities_BooleanOperation.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class SweptVolumeBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    class Point;
    class ScCollector;
    class Section;
    namespace Features
    {
        class _SweptVolumeBuilderBuilder;
        class SweptVolumeBuilderImpl;
        /**
            Represents a @link Features::SweptVolume Features::SweptVolume@endlink  builder
             <br> To create a new instance of this class, use @link Features::SweepFeatureCollection::CreateSweptVolumeBuilder  Features::SweepFeatureCollection::CreateSweptVolumeBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        OrientationType </td> <td> 
         
        UserDefined </td> </tr> 

        <tr><td> 
         
        StartOrientation </td> <td> 
         
        OriginalPosition </td> </tr> 

        <tr><td> 
         
        SweepOrientation </td> <td> 
         
        ForcedDirection </td> </tr> 

        <tr><td> 
         
        ToolPenetration.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  SweptVolumeBuilder : public Features::FeatureBuilder
        {
            /** These represent the start tool body Orientation options for Swept Volume */
            public: enum StartOrient
            {
                StartOrientOriginalPosition/** Original Position */,
                StartOrientUserDefined/** User-Defined */
            };

            /** These represent the tool body Orientation options for Swept Volume */
            public: enum SweepOrient
            {
                SweepOrientFollowPath/** Follow Path */,
                SweepOrientForcedDirection/** Forced Direction */
            };

            /** These represent the type of Swept Volume feature to be created */
            public: enum OrientType
            {
                OrientTypeNormaltoPath/** Normal To Path */,
                OrientTypeUserDefined/** User-Defined */
            };

            private: SweptVolumeBuilderImpl * m_sweptvolumebuilder_impl;
            private: friend class  _SweptVolumeBuilderBuilder;
            protected: SweptVolumeBuilder();
            public: ~SweptVolumeBuilder();
            /**Returns  the tool body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ToolBody
            (
            );
            /**Sets  the tool body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToolBody
            (
                NXOpen::ScCollector * toolBody /** toolbody */ 
            );
            /**Returns  the reverse tool body axis 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseToolBodyAxis
            (
            );
            /**Sets  the reverse tool body axis 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseToolBodyAxis
            (
                bool reverseToolBodyAxis /** reversetoolbodyaxis */ 
            );
            /**Returns  the tool path 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ToolPath
            (
            );
            /**Returns  the start orientation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SweptVolumeBuilder::StartOrient StartOrientation
            (
            );
            /**Sets  the start orientation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStartOrientation
            (
                NXOpen::Features::SweptVolumeBuilder::StartOrient startOrientation /** startorientation */ 
            );
            /**Returns  the sweep orientation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SweptVolumeBuilder::SweepOrient SweepOrientation
            (
            );
            /**Sets  the sweep orientation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSweepOrientation
            (
                NXOpen::Features::SweptVolumeBuilder::SweepOrient sweepOrientation /** sweeporientation */ 
            );
            /**Returns  the orientation type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SweptVolumeBuilder::OrientType OrientationType
            (
            );
            /**Sets  the orientation type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOrientationType
            (
                NXOpen::Features::SweptVolumeBuilder::OrientType orientationType /** orientationtype */ 
            );
            /**Returns  the start point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * StartPoint
            (
            );
            /**Sets  the start point 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStartPoint
            (
                NXOpen::Point * startPoint /** startpoint */ 
            );
            /**Returns  the direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Direction
            (
            );
            /**Sets  the direction 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /**Returns  the penetration 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ToolPenetration
            (
            );
            /**Returns  the boolean data 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
