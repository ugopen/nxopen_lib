#ifndef NXOpen_LAYOUT2D_COMPONENTSETTINGSBLOCKBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_COMPONENTSETTINGSBLOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_ComponentSettingsBlockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/Layout2d_ComponentSettingsBlockBuilder.hxx>
#include <NXOpen/Layout2d_ComponentSettingsBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class ComponentSettingsBlockBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Layout2d
    {
        class ComponentSettingsBuilder;
    }
    class NXObject;
    namespace Layout2d
    {
        class _ComponentSettingsBlockBuilderBuilder;
        class ComponentSettingsBlockBuilderImpl;
        /** Represents the Component Settings Button (Layout2d.ComponentSettingsBlockBuilder)
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  ComponentSettingsBlockBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: ComponentSettingsBlockBuilderImpl * m_componentsettingsblockbuilder_impl;
            private: friend class  _ComponentSettingsBlockBuilderBuilder;
            protected: ComponentSettingsBlockBuilder();
            public: ~ComponentSettingsBlockBuilder();
            /**Returns  the Component settings builder which stores the component settings 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Layout2d::ComponentSettingsBuilder * ComponentSettings
            (
            );
            /** Inherit Settings From Selected Objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_drafting_plus ("DraftingPlus") */
            public: void InheritSettingsFromSelectedObject
            (
                NXOpen::NXObject * selectedObject /** The selected 2d component object. 
                                                                                        NULL is not allowed. */
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_drafting_plus ("DraftingPlus") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_drafting_plus ("DraftingPlus") */
            public: void InheritSettingsFromPreferences
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
