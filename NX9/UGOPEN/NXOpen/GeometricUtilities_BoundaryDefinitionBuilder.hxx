#ifndef NXOpen_GEOMETRICUTILITIES_BOUNDARYDEFINITIONBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BOUNDARYDEFINITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BoundaryDefinitionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_BoundaryDefinitionBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BoundaryDefinitionBuilder;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _BoundaryDefinitionBuilderBuilder;
        class BoundaryDefinitionBuilderImpl;
        /** Represents a @link GeometricUtilities::BoundaryDefinitionBuilder GeometricUtilities::BoundaryDefinitionBuilder@endlink .
                A boundary definition is a collection of ordered points which can be imagined to be
                connected by a polyline indicating a boundary. Any point in the collection can be 
                marked as a key point. Marking some points as key points helps to delete part of the 
                boundary efficiently. All the points in a boundary definition are co-planar. 
                A depth value can be specified to define a 3D boundary equivalent to an extrusion. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  BoundaryDefinitionBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: BoundaryDefinitionBuilderImpl * m_boundarydefinitionbuilder_impl;
            private: friend class  _BoundaryDefinitionBuilderBuilder;
            protected: BoundaryDefinitionBuilder();
            public: ~BoundaryDefinitionBuilder();
            /** Appends a point to the boundary definition 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void AppendPoint
            (
                const NXOpen::Point3d & point /** Point to append */,
                bool isKeyPoint /** Flag indicating if point is a key point */
            );
            /** Closes the boundary by appending start point at the end of boundary definition  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: bool Close
            (
            );
            /** Deletes all the points in the boundary definition 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void DeleteAll
            (
            );
            /** Deletes last key point and all the points from last key point up to and excluding its previous key point 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void DeleteLastKeyPoint
            (
            );
            /** Queries all the boundary definition points  @return  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: std::vector<NXOpen::Point3d> GetPoints
            (
            );
            /** Sets normal of the plane in which boundary is defined 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void SetPlaneNormal
            (
                const NXOpen::Vector3d & direction /** direction */ 
            );
            /**Returns  the region depth 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Depth
            (
            );
            /** Translates the boundary from its current position using the direction and the magnitude of a vector. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") */
            public: void Translate
            (
                const NXOpen::Vector3d & vector /** vector */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
