#ifndef NXOpen_UISTYLER_ATTACHMENT_HXX_INCLUDED
#define NXOpen_UISTYLER_ATTACHMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     UIStyler_Attachment.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace UIStyler
    {
        class Attachment;
    }
    namespace UIStyler
    {
    }
    namespace UIStyler
    {
        class AttachmentImpl;
        /** Represents an Attachment for UI Styler 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  Attachment : public TransientObject
        {
            /** Represents alignment option for Styler Item */
            public: enum AttachType
            {
                AttachTypeDialog/** Dialog type */,
                AttachTypeDefault/** Default type  */,
                AttachTypeNone/** None type */,
                AttachTypeNoChange/** No change type */,
                AttachTypeItem/** Item type */
            };

            private: AttachmentImpl * m_attachment_impl;
            /// \cond NX_NO_DOC 
            public: explicit Attachment(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. 
                 After this method is called, it is illegal to use the object.  
                 In .NET or Java, this method is automatically called when 
                 the object is deleted by the garbage collector. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~Attachment();
            /** Sets whether the dialog item is at the center
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCenter
            (
                bool isCenter /** center*/
            );
            /** Sets the attach type top
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAttachTypeTop
            (
                NXOpen::UIStyler::Attachment::AttachType attachTypeTop /** attach_type_top */
            );
            /** Sets the attach type left
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAttachTypeLeft
            (
                NXOpen::UIStyler::Attachment::AttachType attachTypeLeft /** attach type left */ 
            );
            /** Sets the attach type right
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAttachTypeRight
            (
                NXOpen::UIStyler::Attachment::AttachType attachTypeRight /** attach type right */ 
            );
            /** Sets the top offset
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTopOffset
            (
                int offsetTop /** offset top */ 
            );
            /** Sets the left offset
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLeftOffset
            (
                int offsetLeft /** offset left */ 
            );
            /** Sets the right offset
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRightOffset
            (
                int offsetRight /** offset right */ 
            );
            /** Sets the top dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTopDialogItem
            (
                const NXString & topItemIdentifire /** Top item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the top dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetTopDialogItem
            (
                const char * topItemIdentifire /** Top item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the left dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLeftDialogItem
            (
                const NXString & leftItemIdentifire /** Left item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the left dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetLeftDialogItem
            (
                const char * leftItemIdentifire /** Left item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the right dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRightDialogItem
            (
                const NXString & rightItemIdentifire /** Right item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the right dialog item
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            void SetRightDialogItem
            (
                const char * rightItemIdentifire /** Right item identifier   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
