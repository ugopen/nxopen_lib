#ifndef NXOpen_GEOMETRICUTILITIES_EXTRUDEREVOLVETOOLBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_EXTRUDEREVOLVETOOLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_ExtrudeRevolveToolBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_ExtrudeRevolveToolBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class ExtrudeRevolveToolBuilder;
    }
    class Axis;
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Section;
    namespace GeometricUtilities
    {
        class _ExtrudeRevolveToolBuilderBuilder;
        class ExtrudeRevolveToolBuilderImpl;
        /** a class which is a sub-component of BooleanTool. It provides other two basic tools
              * creation methods by creating extrude or revolve bodies on the fly. Given a
              * super section with non-intersecting loops and a certain direction,
              * it will create a revolve tool or an extrude tool to do the boolean operation.
              
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  ExtrudeRevolveToolBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: ExtrudeRevolveToolBuilderImpl * m_extruderevolvetoolbuilder_impl;
            private: friend class  _ExtrudeRevolveToolBuilderBuilder;
            protected: ExtrudeRevolveToolBuilder();
            public: ~ExtrudeRevolveToolBuilder();
            /**Returns  the tool super section 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ToolSection
            (
            );
            /**Returns  the tool direction used for doing extrude 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * ToolDirection
            (
            );
            /**Sets  the tool direction used for doing extrude 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolDirection
            (
                NXOpen::Direction * toolDirection /** tooldirection */ 
            );
            /**Returns  the tool axis used for doing revolve
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Axis * ToolAxis
            (
            );
            /**Sets  the tool axis used for doing revolve
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetToolAxis
            (
                NXOpen::Axis * toolAxis /** toolaxis */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
