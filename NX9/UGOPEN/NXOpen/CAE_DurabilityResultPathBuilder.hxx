#ifndef NXOpen_CAE_DURABILITYRESULTPATHBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURABILITYRESULTPATHBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurabilityResultPathBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurabilityExcitationBuilder.hxx>
#include <NXOpen/CAE_DurabilityResultPathBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurabilityResultPathBuilder;
    }
    namespace CAE
    {
        class DurabilityExcitationBuilder;
    }
    namespace CAE
    {
        class _DurabilityResultPathBuilderBuilder;
        class DurabilityResultPathBuilderImpl;
        /** Represents a @link CAE::DurabilityResultPath CAE::DurabilityResultPath@endlink  builder.  <br> There is no kf creator for this.  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurabilityResultPathBuilder : public CAE::DurabilityExcitationBuilder
        {
            private: DurabilityResultPathBuilderImpl * m_durabilityresultpathbuilder_impl;
            private: friend class  _DurabilityResultPathBuilderBuilder;
            protected: DurabilityResultPathBuilder();
            public: ~DurabilityResultPathBuilder();
            /** Adds a loadcase. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void AddLoadcase
            (
                int loadcase /** loadcase */ 
            );
            /** Adds an iteration. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void AddIteration
            (
                int iteration /** iteration */ 
            );
            /** Sets the scale for a loadcase by index. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void SetScale
            (
                int index /** index */ ,
                double scale /** scale */ 
            );
            /** Moves a loadcase up by index. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void MoveLoadcaseUp
            (
                int index /** index */ 
            );
            /** Moves a loadcase down by index. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void MoveLoadcaseDown
            (
                int index /** index */ 
            );
            /** Removes a loadcase by index. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_adv_durability ("NX Advanced Durability") */
            public: void RemoveLoadcase
            (
                int index /** index */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
