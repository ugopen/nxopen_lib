#ifndef NXOpen_WELD_EXPORTWELDJOINTBUILDER_HXX_INCLUDED
#define NXOpen_WELD_EXPORTWELDJOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_ExportWeldJointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Weld_ExportWeldBuilder.hxx>
#include <NXOpen/Weld_ExportWeldJointBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class ExportWeldJointBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Weld
    {
        class ExportWeldBuilder;
    }
    namespace Weld
    {
        class _ExportWeldJointBuilderBuilder;
        class ExportWeldJointBuilderImpl;
        /** Represents exporting weld joints.  <br> To create a new instance of this class, use @link Weld::WeldManager::CreateExportWeldJointBuilder  Weld::WeldManager::CreateExportWeldJointBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ChordalTolerance.Value </td> <td> 
         
        2.54 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        Output </td> <td> 
         
        IntermediateFile </td> </tr> 

        </table>  

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  ExportWeldJointBuilder : public Weld::ExportWeldBuilder
        {
            private: ExportWeldJointBuilderImpl * m_exportweldjointbuilder_impl;
            private: friend class  _ExportWeldJointBuilderBuilder;
            protected: ExportWeldJointBuilder();
            public: ~ExportWeldJointBuilder();
            /**Returns  the local coordinate system used to calculate the output points on welding joint. 
                        If no coordinate system is provided, the points will be calculated in terms of the global coordinate system. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * WorkCoordinateSystem
            (
            );
            /**Sets  the local coordinate system used to calculate the output points on welding joint. 
                        If no coordinate system is provided, the points will be calculated in terms of the global coordinate system. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetWorkCoordinateSystem
            (
                NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
            );
            /**Returns  the minimum chordal length used to create a discrete version of the weld path, points along it will be output into 
                        xml file to represent the weld path 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ChordalTolerance
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
