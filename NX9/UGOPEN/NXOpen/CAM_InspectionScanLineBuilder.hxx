#ifndef NXOpen_CAM_INSPECTIONSCANLINEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONSCANLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionScanLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/CAM_InspectionMethodBuilder.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/CAM_InspectionScanLineBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionScanLineBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InspectionMoveBuilder;
    }
    class NXObject;
    namespace CAM
    {
        class _InspectionScanLineBuilderBuilder;
        class InspectionScanLineBuilderImpl;
        /** Represents the builder for the CMM Inspection sub-operation Scan Line.  <br> To create a new instance of this class, use @link CAM::InspectionMoveCollection::CreateInspectionScanLineBuilder  CAM::InspectionMoveCollection::CreateInspectionScanLineBuilder @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionScanLineBuilder : public CAM::InspectionMoveBuilder
        {
            private: InspectionScanLineBuilderImpl * m_inspectionscanlinebuilder_impl;
            private: friend class  _InspectionScanLineBuilderBuilder;
            protected: InspectionScanLineBuilder();
            public: ~InspectionScanLineBuilder();
            /**Returns  the line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Line
            (
            );
            /**Sets  the line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLine
            (
                NXOpen::NXObject * line /** line */ 
            );
            /**Returns  the Reverse Direction flag on the line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: bool Reversedirection
            (
            );
            /**Sets  the Reverse Direction flag on the line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReversedirection
            (
                bool reversedir /** reversedir */ 
            );
            /**Returns  the Start Distance of the Scan Line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double StartDistance
            (
            );
            /**Sets  the Start Distance of the Scan Line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStartDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the End Distance of the Scan Line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: double EndDistance
            (
            );
            /**Sets  the End Distance of the Scan Line 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEndDistance
            (
                double distance /** distance */ 
            );
            /**Returns  the Start Distance of the Scan Line 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StartDistanceBuilder
            (
            );
            /**Returns  the End Distance of the Scan Line 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * EndDistanceBuilder
            (
            );
            /**Returns  the 3,5 axis mode type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::ScanModeTypes ScanModeType
            (
            );
            /**Sets  the 3,5 axis mode type 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetScanModeType
            (
                NXOpen::CAM::InspectionMethodBuilder::ScanModeTypes modeType /** modetype */ 
            );
            /**Returns  the Start Percentage of the Scan Line 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * StartPercentage
            (
            );
            /**Returns  the End Percentage of the Scan Line 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * EndPercentage
            (
            );
            /**Returns  the start/end mode 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMethodBuilder::UVModeTypes StartEndMode
            (
            );
            /**Sets  the start/end mode 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetStartEndMode
            (
                NXOpen::CAM::InspectionMethodBuilder::UVModeTypes startEndMode /** startendmode */ 
            );
            /**Returns  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes DepthMethod
            (
            );
            /**Sets  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthMethod
            (
                NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes method /** method */ 
            );
            /**Returns  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DepthDistance
            (
            );
            /**Sets  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthDistance
            (
                double distance /** distance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
