#ifndef NXOpen_CAE_OPTIMIZATION_TBSCASTCONDITION_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSCASTCONDITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSCastCondition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSCastCondition.hxx>
#include <NXOpen/CAE_Optimization_TBSGroupDefinition.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSCastCondition;
        }
    }
    namespace CAE
    {
        namespace Optimization
        {
            class TBSGroupDefinition;
        }
    }
    class CoordinateSystem;
    class Direction;
    class Expression;
    class Point;
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSCastConditionBuilder;
            class TBSCastConditionImpl;
            /** Represents the manufacturing restrictions of @link CAE::Optimization::TBSTopologyRestrictArea CAE::Optimization::TBSTopologyRestrictArea@endlink 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSCastCondition : public TaggedObject
            {
                /** Defines the middle plane type */
                public: enum MiddlePlaneType
                {
                    MiddlePlaneTypeNone/** No definition of a central plane */,
                    MiddlePlaneTypeAutomatic/** Automatica determinaton of the central plane */,
                    MiddlePlaneTypeAutomaticTight/** No holes are generated in the central plane */,
                    MiddlePlaneTypePoint/** A point within the central plane from which the deformation vector is positioned perpendicular to*/,
                    MiddlePlaneTypeSurface/** The elements are demolded at the actual surface of the restrict area */,
                    MiddlePlaneTypeStamp/** The element group is demolded keeping a stampable structure */
                };

                private: TBSCastConditionImpl * m_tbscastcondition_impl;
                private: friend class  _TBSCastConditionBuilder;
                protected: TBSCastCondition();
                public: ~TBSCastCondition();
                /**Returns  the element group that is used for checking collision of the removed elements 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSGroupDefinition * CheckingGroup
                (
                );
                /**Returns  the pull direction for the element groups in the form of a vector with global coordinate system 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * PullDirection
                (
                );
                /**Sets  the pull direction for the element groups in the form of a vector with global coordinate system 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetPullDirection
                (
                    NXOpen::Direction * pullDirection /** pulldirection */ 
                );
                /**Returns  the coordinate system for the definition of the pull direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * PullCoordinateSystem
                (
                );
                /**Sets  the coordinate system for the definition of the pull direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetPullCoordinateSystem
                (
                    NXOpen::CoordinateSystem * pullCsys /** pullcsys */ 
                );
                /**Returns  the middle plane 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSCastCondition::MiddlePlaneType MiddlePlane
                (
                );
                /**Sets  the middle plane 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetMiddlePlane
                (
                    NXOpen::CAE::Optimization::TBSCastCondition::MiddlePlaneType middlePlane /** middleplane */ 
                );
                /**Returns  the point within the central plane, only available when @link CAE::Optimization::TBSCastCondition::MiddlePlane CAE::Optimization::TBSCastCondition::MiddlePlane@endlink  is 
                        @link CAE::Optimization::TBSCastCondition::MiddlePlaneTypePoint CAE::Optimization::TBSCastCondition::MiddlePlaneTypePoint@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * MiddlePlanePoint
                (
                );
                /**Sets  the point within the central plane, only available when @link CAE::Optimization::TBSCastCondition::MiddlePlane CAE::Optimization::TBSCastCondition::MiddlePlane@endlink  is 
                        @link CAE::Optimization::TBSCastCondition::MiddlePlaneTypePoint CAE::Optimization::TBSCastCondition::MiddlePlaneTypePoint@endlink  
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetMiddlePlanePoint
                (
                    NXOpen::Point * middlePlanePoint /** middleplanepoint */ 
                );
                /**Returns  the draft angle 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * DraftAngle
                (
                );
                /**Returns  the radius value that is used internaly for the collision check during the removal of the elements 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Radius
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
