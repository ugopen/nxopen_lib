#ifndef NXOpen_CAM_TURNFEATUREGEOMBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNFEATUREGEOMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnFeatureGeomBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_FeatureGeomBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TurnFeatureGeomBuilder;
    }
    namespace CAM
    {
        class FeatureGeomBuilder;
    }
    namespace CAM
    {
        class TrimPlane;
    }
    namespace CAM
    {
        class TrimPoint;
    }
    class Point;
    namespace CAM
    {
        class _TurnFeatureGeomBuilderBuilder;
        class TurnFeatureGeomBuilderImpl;
        /** Represents a TurnFeatureGeom Builder  <br> To create a new instance of this class, use @link CAM::NCGroupCollection::CreateTurnFeatureGeomBuilder  CAM::NCGroupCollection::CreateTurnFeatureGeomBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TurnFeatureGeomBuilder : public CAM::FeatureGeomBuilder
        {
            /** the surface sensitivity options 
             <br>  Created in NX6.0.0.  <br>  
            */
            public: enum SurfaceSensitivityModes
            {
                SurfaceSensitivityModesNone/** Surface sensitivity is inactive. */,
                SurfaceSensitivityModesDistance/** Surface sensitivity is active. */
            };

            /** the tolerance_offset options */
            public: enum ToleranceOffsetModes
            {
                ToleranceOffsetModesAfterContainment/** Tolerance offset after containment. */,
                ToleranceOffsetModesBeforeContainment/** Tolerance offset before containment. */
            };

            /** the cut region selection options */
            public: enum CutRegionSelectionModes
            {
                CutRegionSelectionModesAutomatic/** Automatic cut region selection. */,
                CutRegionSelectionModesManual/** Manual cut region selection. */
            };

            private: TurnFeatureGeomBuilderImpl * m_turnfeaturegeombuilder_impl;
            private: friend class  _TurnFeatureGeomBuilderBuilder;
            protected: TurnFeatureGeomBuilder();
            public: ~TurnFeatureGeomBuilder();
            /**Returns  the radial trim plane 1 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPlane * RadialTrimPlane1Builder
            (
            );
            /**Returns  the radial trim plane 2 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPlane * RadialTrimPlane2Builder
            (
            );
            /**Returns  the axial trim plane 1 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPlane * AxialTrimPlane1Builder
            (
            );
            /**Returns  the axial trim plane 2 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPlane * AxialTrimPlane2Builder
            (
            );
            /**Returns  the trim point 1 options 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPoint * TrimPoint1Builder
            (
            );
            /**Returns  the trim point 2 mode options 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TrimPoint * TrimPoint2Builder
            (
            );
            /**Returns  the surface sensitivity mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TurnFeatureGeomBuilder::SurfaceSensitivityModes SurfaceSensitivityMode
            (
            );
            /**Sets  the surface sensitivity mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfaceSensitivityMode
            (
                NXOpen::CAM::TurnFeatureGeomBuilder::SurfaceSensitivityModes surfaceSensitivityMode /** the surface sensitivity mode value */
            );
            /**Returns  the surface sensitivity tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: double SurfaceSensitivityTolerance
            (
            );
            /**Sets  the surface sensitivity tolerance 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSurfaceSensitivityTolerance
            (
                double surfaceSensitivityTolerance /** the surface sensitivity tolerance value */
            );
            /**Returns  the tolerance_offset mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TurnFeatureGeomBuilder::ToleranceOffsetModes ToleranceOffsetMode
            (
            );
            /**Sets  the tolerance_offset mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetToleranceOffsetMode
            (
                NXOpen::CAM::TurnFeatureGeomBuilder::ToleranceOffsetModes toleranceOffsetMode /** the tolerance offset mode value */
            );
            /**Returns  the cut region selection mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::TurnFeatureGeomBuilder::CutRegionSelectionModes CutRegionSelectionMode
            (
            );
            /**Sets  the cut region selection mode 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutRegionSelectionMode
            (
                NXOpen::CAM::TurnFeatureGeomBuilder::CutRegionSelectionModes cutRegionSelectionMode /** the cut region selection mode value */
            );
            /**Returns  the cut region selection point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::Point * CutRegionSelectionPoint
            (
            );
            /**Sets  the cut region selection point 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutRegionSelectionPoint
            (
                NXOpen::Point * cutRegionSelectionPoint /** the cut region selection point value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
