#ifndef NXOpen_CAE_CAEREGION_HXX_INCLUDED
#define NXOpen_CAE_CAEREGION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CaeRegion.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_IExportableFEEntity.hxx>
#include <NXOpen/CAE_NamedPropTableWithTargetSet.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CaeRegion;
    }
    namespace CAE
    {
        class IExportableFEEntity;
    }
    namespace CAE
    {
        class NamedPropTableWithTargetSet;
    }
    namespace CAE
    {
        class _CaeRegionBuilder;
        class CaeRegionImpl;
        /**  @brief  Represents a cae region object  

         

                For more information, refer to the Solver language documentation 
                in the <a href="../opencae/Solvers.html"> Solver language documentation </a>.

            
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CaeRegion : public CAE::NamedPropTableWithTargetSet, public virtual CAE::IExportableFEEntity
        {
            private: CaeRegionImpl * m_caeregion_impl;
            private: friend class  _CaeRegionBuilder;
            protected: CaeRegion();
            public: ~CaeRegion();
            /**Returns  the name of the region descriptor 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString DescriptorName
            (
            );
            /** Prints information for a @link CAE::CaeRegion CAE::CaeRegion@endlink  
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Information
            (
            );
            /** Returns the solver card syntax strings for this entity.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXString> GetSolverCardSyntax
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
