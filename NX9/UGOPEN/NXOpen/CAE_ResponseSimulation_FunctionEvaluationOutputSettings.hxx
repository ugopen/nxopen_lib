#ifndef NXOpen_CAE_RESPONSESIMULATION_FUNCTIONEVALUATIONOUTPUTSETTINGS_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_FUNCTIONEVALUATIONOUTPUTSETTINGS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_FunctionEvaluationOutputSettings.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class FunctionEvaluationOutputSettings;
        }
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _FunctionEvaluationOutputSettingsBuilder;
            class FunctionEvaluationOutputSettingsImpl;
            /** Represents the output setting for function response evaluation
             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  FunctionEvaluationOutputSettings : public TaggedObject
            {
                private: FunctionEvaluationOutputSettingsImpl * m_functionevaluationoutputsettings_impl;
                private: friend class  _FunctionEvaluationOutputSettingsBuilder;
                protected: FunctionEvaluationOutputSettings();
                public: ~FunctionEvaluationOutputSettings();
                /**Returns  the store option. If true, the evaluation results will be stored on disk 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool StoreOption
                (
                );
                /**Sets  the store option. If true, the evaluation results will be stored on disk 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetStoreOption
                (
                    bool storeOption /** store option */ 
                );
                /**Returns  the option of show plot. If true, the evaluation results will be displayed on screen 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool ShowPlot
                (
                );
                /**Sets  the option of show plot. If true, the evaluation results will be displayed on screen 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetShowPlot
                (
                    bool showPlot /** show plot */ 
                );
                /**Returns  the prefix of evaluation results record name 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXString RecordPrefix
                (
                );
                /**Sets  the prefix of evaluation results record name 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetRecordPrefix
                (
                    const NXString & recordPrefix /** record prefix */ 
                );
                /**Sets  the prefix of evaluation results record name 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                void SetRecordPrefix
                (
                    const char * recordPrefix /** record prefix */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
