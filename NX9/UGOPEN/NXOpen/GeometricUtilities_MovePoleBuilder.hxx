#ifndef NXOpen_GEOMETRICUTILITIES_MOVEPOLEBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_MOVEPOLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_MovePoleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_ControlPoleManagerData.hxx>
#include <NXOpen/GeometricUtilities_DegreesAndSegmentsOrPatchesBuilder.hxx>
#include <NXOpen/GeometricUtilities_MovePoleBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class MovePoleBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class ControlPoleManagerData;
    }
    namespace GeometricUtilities
    {
        class DegreesAndSegmentsOrPatchesBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    class Plane;
    namespace GeometricUtilities
    {
        class _MovePoleBuilderBuilder;
        class MovePoleBuilderImpl;
        /**
               This class manages the control poles movements for a surface or curve.
            
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  MovePoleBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Move Pole types */
            public: enum MoveMethodType
            {
                MoveMethodTypeWcs/** wcs */ ,
                MoveMethodTypeView/** view */ ,
                MoveMethodTypeVector/** vector */ ,
                MoveMethodTypePlane/** plane */ ,
                MoveMethodTypeNormal/** normal */ ,
                MoveMethodTypePolygon/** polygon */ 
            };

            /** WCS direction */
            public: enum WCSDirectionType
            {
                WCSDirectionTypeX/** x */ ,
                WCSDirectionTypeY/** y */ ,
                WCSDirectionTypeZ/** z */ ,
                WCSDirectionTypeYZ/** yz */ ,
                WCSDirectionTypeXZ/** xz */ ,
                WCSDirectionTypeXY/** xy */ 
            };

            private: MovePoleBuilderImpl * m_movepolebuilder_impl;
            private: friend class  _MovePoleBuilderBuilder;
            protected: MovePoleBuilder();
            public: ~MovePoleBuilder();
            /**Returns  the control pole manager 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ControlPoleManagerData * ControlPoleManager
            (
            );
            /**Returns  the degrees and patches 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::DegreesAndSegmentsOrPatchesBuilder * DegreesAndPatches
            (
            );
            /**Returns  the control pole move method 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::MovePoleBuilder::MoveMethodType MoveMethod
            (
            );
            /**Sets  the control pole move method 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetMoveMethod
            (
                NXOpen::GeometricUtilities::MovePoleBuilder::MoveMethodType moveMethod /** movemethod */ 
            );
            /**Returns  the fixed direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::MovePoleBuilder::WCSDirectionType WCSDirection
            (
            );
            /**Sets  the fixed direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetWCSDirection
            (
                NXOpen::GeometricUtilities::MovePoleBuilder::WCSDirectionType wcsDirection /** wcsdirection */ 
            );
            /**Returns  the vector 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the plane 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the plane 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the entity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Entity
            (
            );
            /**Sets  the entity 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetEntity
            (
                NXOpen::NXObject * entity /** entity */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
