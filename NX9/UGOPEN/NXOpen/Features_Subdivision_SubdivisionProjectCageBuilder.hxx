#ifndef NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONPROJECTCAGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_SUBDIVISIONPROJECTCAGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_SubdivisionProjectCageBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_Subdivision_SelectCageObjectData.hxx>
#include <NXOpen/Features_Subdivision_SubdivisionProjectCageBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class SubdivisionProjectCageBuilder;
        }
    }
    class Builder;
    namespace Features
    {
        namespace Subdivision
        {
            class SelectCageObjectData;
        }
    }
    class SelectDisplayableObject;
    namespace Features
    {
        namespace Subdivision
        {
            class _SubdivisionProjectCageBuilderBuilder;
            class SubdivisionProjectCageBuilderImpl;
            /** Represents a @link Features::Subdivision::SubdivisionProjectCageBuilder Features::Subdivision::SubdivisionProjectCageBuilder@endlink  builder  <br> To create a new instance of this class, use @link Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionProjectCageBuilder  Features::Subdivision::SubdivisionBodyCollection::CreateSubdivisionProjectCageBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            Mode </td> <td> 
             
            Planar </td> </tr> 

            <tr><td> 
             
            TargetType </td> <td> 
             
            InferredPlane </td> </tr> 

            </table>  

             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SubdivisionProjectCageBuilder : public Builder
            {
                /** The type of projection */
                public: enum Types
                {
                    TypesToTarget/** Project on target */,
                    TypesToAverage/** Project using best fit plane or axis */
                };

                /** Target types */
                public: enum TargetTypes
                {
                    TargetTypesInferredPlane/** inferred plane */ ,
                    TargetTypesInferredAxis/** inferred axis */ ,
                    TargetTypesYcZcPlane/** yc zc plane */ ,
                    TargetTypesXcZcPlane/** xc zc plane */ ,
                    TargetTypesXcYcPlane/** xc yc plane */ ,
                    TargetTypesXcAxis/** xc axis */ ,
                    TargetTypesYcAxis/** yc axis */ ,
                    TargetTypesZcAxis/** zc axis */ ,
                    TargetTypesObject/** object */ 
                };

                /** Best fit mode */
                public: enum ModeOptions
                {
                    ModeOptionsLinear/** Fit a line */,
                    ModeOptionsPlanar/** Fit a plane */
                };

                private: SubdivisionProjectCageBuilderImpl * m_subdivisionprojectcagebuilder_impl;
                private: friend class  _SubdivisionProjectCageBuilderBuilder;
                protected: SubdivisionProjectCageBuilder();
                public: ~SubdivisionProjectCageBuilder();
                /**Returns  the target type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::TargetTypes TargetType
                (
                );
                /**Sets  the target type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetTargetType
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::TargetTypes targetType /** targettype */ 
                );
                /**Returns  the target cage objects to infer a plane or axis from 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * TargetCageObjects
                (
                );
                /**Returns  the target 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObject * Target
                (
                );
                /**Returns  the mode 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::ModeOptions Mode
                (
                );
                /**Sets  the mode 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetMode
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::ModeOptions mode /** mode */ 
                );
                /**Returns  the objects to project 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SelectCageObjectData * ObjectsToProject
                (
                );
                /**Returns  the type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::Types Type
                (
                );
                /**Sets  the type 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetType
                (
                    NXOpen::Features::Subdivision::SubdivisionProjectCageBuilder::Types type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
