#ifndef NXOpen_GEOMETRICUTILITIES_PATTERNSPACING_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_PATTERNSPACING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PatternSpacing.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_PatternSpacing.hxx>
#include <NXOpen/GeometricUtilities_PatternSpacingsList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PatternSpacing;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class PatternSpacingsList;
    }
    namespace GeometricUtilities
    {
        class _PatternSpacingBuilder;
        class PatternSpacingImpl;
        /** defines the various ways pattern instances can be 
                spaced within the pattern, particularly in the context of the
                PatternDefinition class. 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PatternSpacing : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** defines the type of spacing instances can have within a pattern. */
            public: enum SpacingType
            {
                SpacingTypeOffset/** Specify distance from the origin of one instance to the origin of the next instance. */,
                SpacingTypeSpan/** Specify a distance for which all instances should occupy. */,
                SpacingTypePitchAndSpan/** Specify distance between instances and distance for all instances, number of copies is calculated. */,
                SpacingTypePitch/** This is for pattern fill case. Count is calculated based on the pitch and fill boundary box. */,
                SpacingTypeList/** Specify offsets with a list. */,
                SpacingTypePolygonCountPerSide/** This is for Polygon type. Specify number of count per side. */,
                SpacingTypePolygonPitchAlongSide/** This is for Polygon type. Specify a pitch distance along one side. */
            };

            private: PatternSpacingImpl * m_patternspacing_impl;
            private: friend class  _PatternSpacingBuilder;
            protected: PatternSpacing();
            public: ~PatternSpacing();
            /**Returns  the type of spacing to be used by the pattern 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternSpacing::SpacingType SpaceType
            (
            );
            /**Sets  the type of spacing to be used by the pattern 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetSpaceType
            (
                NXOpen::GeometricUtilities::PatternSpacing::SpacingType spaceType /** spacetype */ 
            );
            /**Returns  the number of copies the pattern will generated in this direction 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NCopies
            (
            );
            /**Returns  the list of spacings (Expression or OnPathDimBuilder) to be used in this direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PatternSpacingsList * SpacingsList
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
