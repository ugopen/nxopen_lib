#ifndef NXOpen_FEATURES_RPODIMENSION_HXX_INCLUDED
#define NXOpen_FEATURES_RPODIMENSION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RPODimension.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_RPOAssociativityType.hxx>
#include <NXOpen/PositioningDimension.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RPODimension;
    }
    class Expression;
    class NXObject;
    namespace Features
    {
        class RPODimensionImpl;
        /** 
         Represents a RPO Dimension.
         <br> To create a new instance of this class, use @link Features::RPOBuilder::CreateDimension  Features::RPOBuilder::CreateDimension @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RPODimension : public TransientObject
        {
            private: RPODimensionImpl * m_rpodimension_impl;
            /// \cond NX_NO_DOC 
            public: explicit RPODimension(void *ptr);
            /// \endcond 
            /**Returns  the subtype of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PositioningDimension::Subtype Subtype
            (
            );
            /**Sets  the subtype of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSubtype
            (
                NXOpen::PositioningDimension::Subtype subtype /** Subtype of the dimension */
            );
            /**Returns  the target point of dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d TargetPoint
            (
            );
            /**Sets  the target point of dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetPoint
            (
                const NXOpen::Point3d & referencePoint1 /** target point of dimension */
            );
            /**Returns  the tool point of dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d ToolPoint
            (
            );
            /**Sets  the tool point of dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToolPoint
            (
                const NXOpen::Point3d & referencePoint2 /** tool point of dimension */
            );
            /**Returns  the targe of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Target
            (
            );
            /**Sets  the targe of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTarget
            (
                NXOpen::NXObject * target /** target of dimension */
            );
            /**Returns  the target associativity. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::AssociativityType TargetAssociativity
            (
            );
            /**Sets  the target associativity. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetAssociativity
            (
                NXOpen::Features::AssociativityType targetAssociativity /** target associativity */
            );
            /**Returns  the tool of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Tool
            (
            );
            /**Sets  the tool of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTool
            (
                NXOpen::NXObject * tool /** tool of dimension */
            );
            /**Returns  the tool associativity. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::AssociativityType ToolAssociativity
            (
            );
            /**Sets  the tool associativity. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToolAssociativity
            (
                NXOpen::Features::AssociativityType toolAssociativity /** tool associativity */
            );
            /**Returns  the expression of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Expression
            (
            );
            /** Sets the expression of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetExpression
            (
                const NXString & expression /** expression of dimension   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the expression of the dimension. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetExpression
            (
                const char * expression /** expression of dimension   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Frees the object from memory.  After this method is called,
                it is illegal to use the object.  In .NET, this method is automatically
                called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~RPODimension();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
