#ifndef NXOpen_CAE_FEELEMENTLABELMAP_HXX_INCLUDED
#define NXOpen_CAE_FEELEMENTLABELMAP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FEElementLabelMap.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FEElementLabelMap;
    }
    namespace CAE
    {
        class FEElement;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class FEElementLabelMapImpl;
        /**  @brief  Represents a Elementl Label to an @link CAE::FEElement CAE::FEElement@endlink  map, it can be used to quickly convert
                          a @link CAE::FEElement CAE::FEElement@endlink  label, which is generally used in solver input files and results 
                          files, in the element object itself @link CAE::FEElement CAE::FEElement@endlink     
                 

           <br> This is an abstract class  <br> 
         <br>  Created in NX6.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FEElementLabelMap : public TransientObject
        {
            private: FEElementLabelMapImpl * m_feelementlabelmap_impl;
            /// \cond NX_NO_DOC 
            public: explicit FEElementLabelMap(void *ptr);
            /// \endcond 
            /** Returns @link CAE::FEElement CAE::FEElement@endlink  given a @link CAE::FEElement CAE::FEElement@endlink  label @return  @link CAE::FEElement CAE::FEElement@endlink   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::FEElement * GetElement
            (
                int elementlabel /** @link CAE::FEElement CAE::FEElement@endlink  Label */
            );
            /**Returns  the number of @link CAE::FEElement CAE::FEElement@endlink  
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int NumElements
            (
            );
            /** Returns the next @link CAE::FEElement CAE::FEElement@endlink  label from the input put label.    @return  next @link CAE::FEElement CAE::FEElement@endlink  Label   
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: int AskNextElementLabel
            (
                int elementlabel /** @link CAE::FEElement CAE::FEElement@endlink  Label, for first element label input 0 */
            );
            /** Destroys the object 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~FEElementLabelMap();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
