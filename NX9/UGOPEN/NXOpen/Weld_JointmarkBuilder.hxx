#ifndef NXOpen_WELD_JOINTMARKBUILDER_HXX_INCLUDED
#define NXOpen_WELD_JOINTMARKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_JointmarkBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Weld_CharacteristicsBuilder.hxx>
#include <NXOpen/Weld_JointmarkBuilder.hxx>
#include <NXOpen/Weld_JointmarkFaceSetsBuilder.hxx>
#include <NXOpen/Weld_JointmarkGuideBuilder.hxx>
#include <NXOpen/Weld_JointmarkPointsBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class JointmarkBuilder;
    }
    class Curve;
    class Direction;
    class Edge;
    namespace Features
    {
        class Feature;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class Plane;
    class SelectPointList;
    class SelectTaggedObjectList;
    namespace Weld
    {
        class CharacteristicsBuilder;
    }
    namespace Weld
    {
        class JointmarkFaceSetsBuilder;
    }
    namespace Weld
    {
        class JointmarkFaceSetsBuilderList;
    }
    namespace Weld
    {
        class JointmarkGuideBuilder;
    }
    namespace Weld
    {
        class JointmarkGuideBuilderList;
    }
    namespace Weld
    {
        class JointmarkPointsBuilder;
    }
    namespace Weld
    {
        class JointmarkPointsBuilderList;
    }
    namespace Weld
    {
        class _JointmarkBuilderBuilder;
        class JointmarkBuilderImpl;
        /** Represents a @link Weld::Jointmark Weld::Jointmark@endlink  builder  <br> To create a new instance of this class, use @link Weld::WeldManager::CreateJointmarkBuilder  Weld::WeldManager::CreateJointmarkBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        Associativity </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ConnectPart </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        ConstructionMethod </td> <td> 
         
        GuideCurve </td> </tr> 

        <tr><td> 
         
        DistanceTolerance </td> <td> 
         
        0.0254 </td> </tr> 

        <tr><td> 
         
        ReferenceSheetType </td> <td> 
         
        Overlap </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  JointmarkBuilder : public Features::FeatureBuilder
        {
            /** The type of construction method for creating Jointmark */
            public: enum Method
            {
                MethodGuideCurve/** Guide Curve */,
                MethodMirror/** Mirror      */,
                MethodPoints/** Points      */
            };

            /** The type of sheets to create */
            public: enum ReferenceSheetTypes
            {
                ReferenceSheetTypesOverlap/** Overlap */,
                ReferenceSheetTypesTop/** Top     */
            };

            private: JointmarkBuilderImpl * m_jointmarkbuilder_impl;
            private: friend class  _JointmarkBuilderBuilder;
            protected: JointmarkBuilder();
            public: ~JointmarkBuilder();
            /**Returns  the construction method for creating Jointmark 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkBuilder::Method ConstructionMethod
            (
            );
            /**Sets  the construction method for creating Jointmark 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetConstructionMethod
            (
                NXOpen::Weld::JointmarkBuilder::Method method /** method */ 
            );
            /**Returns  the automatic update option also known as associativity. If true, the curve representing the Jointmark feature will change its location if the guide curve is updated
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: bool Associativity
            (
            );
            /**Sets  the automatic update option also known as associativity. If true, the curve representing the Jointmark feature will change its location if the guide curve is updated
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetAssociativity
            (
                bool associativity /** associativity */ 
            );
            /**Returns  the selected objects for mirror. These objects can be features or curves representing Jointmark 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::SelectTaggedObjectList * SelectMirrorObject
            (
            );
            /**Returns  the plane used for mirror
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Plane * Plane
            (
            );
            /**Sets  the plane used for mirror
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the option of connecting only one part. If true, Jointmark feature is created on a single component.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: bool ConnectPart
            (
            );
            /**Sets  the option of connecting only one part. If true, Jointmark feature is created on a single component.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetConnectPart
            (
                bool connectPart /** connectpart */ 
            );
            /**Returns  the type of reference sheet
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkBuilder::ReferenceSheetTypes ReferenceSheetType
            (
            );
            /**Sets  the type of reference sheet
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetReferenceSheetType
            (
                NXOpen::Weld::JointmarkBuilder::ReferenceSheetTypes refSheet /** refsheet */ 
            );
            /**Returns  the list of face sets  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkFaceSetsBuilderList * FaceSetsList
            (
            );
            /**Returns  the list of guide curves 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkGuideBuilderList * GuideCurvesList
            (
            );
            /**Returns  the selected objects for Points 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::SelectPointList * SelectPointsObject
            (
            );
            /**Returns  the vector which points to Y axis 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector which points to Y axis 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /** Updates all the items on the points list based on the construction method and related inputs. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void UpdateFeatures
            (
            );
            /**Returns  the list of points
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkPointsBuilderList * PointList
            (
            );
            /**Returns  the characteristics 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::CharacteristicsBuilder * Characteristics
            (
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /** Creates a @link Weld::JointmarkGuideBuilder Weld::JointmarkGuideBuilder@endlink  object.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkGuideBuilder * NewGuide
            (
            );
            /** Creates a @link Weld::JointmarkFaceSetsBuilder Weld::JointmarkFaceSetsBuilder@endlink  object.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkFaceSetsBuilder * NewFaceSets
            (
            );
            /** Creates a @link Weld::JointmarkPointsBuilder Weld::JointmarkPointsBuilder@endlink  object.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Weld::JointmarkPointsBuilder * NewPoints
            (
            );
            /** Prepares a Reference Sheet for placing Jointmark features. If the sheet is suppressed, it will be unsuppressed.  @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Features::Feature * UpdateReferenceSheet
            (
                bool facesModified /** Indicates if Reference Sheet needs to be updated. */
            );
            /** Returns the Reference Sheet feature @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Features::Feature * GetReferenceSheet
            (
            );
            /** Edges of created sheet 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void GetSheetEdges
            (
                std::vector<NXOpen::Edge *> & edges /** edges */ 
            );
            /** Create curve From PMI symbol  @return  Curve from symbol 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: NXOpen::Curve * CreateSymbolCurve
            (
                const NXString & path /** Symbol path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Create curve From PMI symbol  @return  Curve from symbol 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            NXOpen::Curve * CreateSymbolCurve
            (
                const char * path /** Symbol path   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Creates a list of points on the overlap sheet. In addition, a curve selected by the user will be placed at these points. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ugweld ("UG WELD") */
            public: void AppendPoints
            (
                bool mode /** Create or Edit */,
                NXOpen::Curve * curve /** Curve to place at these points*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
