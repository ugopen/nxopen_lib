#ifndef NXOpen_CAE_SIMLBCFOLDER_HXX_INCLUDED
#define NXOpen_CAE_SIMLBCFOLDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimLbcFolder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_IFolder.hxx>
#include <NXOpen/CAE_SimLbcFolder.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimLbcFolder;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace CAE
    {
        class IFolder;
    }
    namespace CAE
    {
        class SimBC;
    }
    class INXObject;
    class NXObject;
    namespace CAE
    {
        class _SimLbcFolderBuilder;
        class SimLbcFolderImpl;
        /**  @brief  Represents a folder object in the .sim files  

           <br> To create a new instance of this class, use @link CAE::SimLbcFolderCollection::CreateFolder  CAE::SimLbcFolderCollection::CreateFolder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimLbcFolder : public NXObject, public virtual CAE::IFolder
        {
            /** Defines type of Lbc Folder */
            public: enum Type
            {
                TypeNone/** No folder type */,
                TypeLoad/** Load type folder */,
                TypeConstraint/** Constraint type folder */,
                TypeSimulationObject/** Simulation object type folder */
            };

            private: SimLbcFolderImpl * m_simlbcfolder_impl;
            private: friend class  _SimLbcFolderBuilder;
            protected: SimLbcFolder();
            public: ~SimLbcFolder();
            /**Returns  the folder type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimLbcFolder::Type FolderType
            (
            );
            /**Returns  the parent folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimLbcFolder * Parent
            (
            );
            /**  Add a child folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddSubfolder
            (
                NXOpen::CAE::SimLbcFolder * folder /** child folder*/
            );
            /**  Remove a child folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveSubfolder
            (
                NXOpen::CAE::SimLbcFolder * folder /** child folder*/
            );
            /**  Add a child folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void AddBc
            (
                NXOpen::CAE::SimBC * bc /** child object*/
            );
            /**  Remove a child folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void RemoveBc
            (
                NXOpen::CAE::SimBC * bc /** child object*/
            );
            /** Clones a folder
                      @return  cloned folder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimLbcFolder * CloneFolder
            (
            );
            /** Get the parent  @return  parent folder
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: virtual NXOpen::CAE::IFolder * GetParent
            (
            );
            /**  Get the children  @return  child folders
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: virtual std::vector<NXOpen::CAE::IFolder *> GetChildren
            (
            );
            /** Get the members @return  members of object 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: virtual std::vector<NXOpen::NXObject *> GetMembers
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
