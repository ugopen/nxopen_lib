#ifndef NXOpen_CAM_NCMTRANSFER_HXX_INCLUDED
#define NXOpen_CAM_NCMTRANSFER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_NcmTransfer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_NcmTransfer.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class NcmTransfer;
    }
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class _NcmTransferBuilder;
        class NcmTransferImpl;
        /**
            Represents a @link CAM::NcmTransfer CAM::NcmTransfer@endlink 
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  NcmTransfer : public TaggedObject
        {
            /** Available types for transfer between regions in planar milling */
            public: enum TransferTypes
            {
                TransferTypesClearance/** tool axis to clearance */,
                TransferTypesPrevPlane/** previous plane */,
                TransferTypesDirect/** direct */,
                TransferTypesLowestSafeZ/** lowest safe z */,
                TransferTypesBlankPlane/** Blank Plane */,
                TransferTypesShortestToClearance/** shortest to clearance */,
                TransferTypesCutPlaneToClearance/** cut plane to clearance */
            };

            private: NcmTransferImpl * m_ncmtransfer_impl;
            private: friend class  _NcmTransferBuilder;
            protected: NcmTransfer();
            public: ~NcmTransfer();
            /**Returns  the transfer between levels type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmTransfer::TransferTypes Type
            (
            );
            /**Sets  the transfer between levels type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetType
            (
                NXOpen::CAM::NcmTransfer::TransferTypes transferType /** transfertype */ 
            );
            /**Returns  the transfer between regions safe distance builder (inheritable tool dep) 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * SafeDistanceBuilder
            (
            );
            /**Returns  the max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double MaxToolAxisChange
            (
            );
            /**Sets  the max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMaxToolAxisChange
            (
                double newValue /** newvalue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
