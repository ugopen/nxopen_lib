#ifndef NXOpen_BLOCKSTYLER_TABCONTROL_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_TABCONTROL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_TabControl.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_TabControl.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class TabControl;
    }
    namespace BlockStyler
    {
        class PropertyList;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    namespace BlockStyler
    {
        class _TabControlBuilder;
        class TabControlImpl;
        /** Represents a Tab Control layout
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENUICPPEXPORT  TabControl : public BlockStyler::UIBlock
        {
            private: TabControlImpl * m_tabcontrol_impl;
            private: friend class  _TabControlBuilder;
            protected: TabControl();
            public: ~TabControl();
            /**Returns  the ActivePage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int ActivePage
            (
            );
            /**Sets  the ActivePage
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetActivePage
            (
                int pageIndex /** pageindex */ 
            );
            /**Returns  the HighQualityBitmap
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool HighQualityBitmap
            (
            );
            /**Sets  the HighQualityBitmap
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetHighQualityBitmap
            (
                bool highQuality /** highquality */ 
            );
            /**Returns  the Localize
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool Localize
            (
            );
            /**Sets  the Localize
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetLocalize
            (
                bool localize /** localize */ 
            );
            /**Returns  the Members
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::BlockStyler::PropertyList * Members
            (
            );
            /**Returns  the RetainValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: bool RetainValue
            (
            );
            /**Sets  the RetainValue
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRetainValue
            (
                bool retain /** retain */ 
            );
            /**Returns  the TabsPerRow
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int TabsPerRow
            (
            );
            /**Sets  the TabsPerRow
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTabsPerRow
            (
                int numTabs /** numtabs */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
