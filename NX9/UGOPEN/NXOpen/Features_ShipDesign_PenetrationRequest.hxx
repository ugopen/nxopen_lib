#ifndef NXOpen_FEATURES_SHIPDESIGN_PENETRATIONREQUEST_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PENETRATIONREQUEST_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PenetrationRequest.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Issue_IssueContent.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationRequest;
        }
    }
    namespace Issue
    {
        class IssueContent;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _PenetrationRequestBuilder;
            class PenetrationRequestImpl;
            /** Represents the Penetration Request object.  <br> Not support KF.  <br> 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PenetrationRequest : public Issue::IssueContent
            {
                /** Represents the request type */
                public: enum RequestType
                {
                    RequestTypeSingle/** single */ ,
                    RequestTypeMultiple/** multiple */ 
                };

                /** Represents the penetration type */
                public: enum PenetrationType
                {
                    PenetrationTypePenetratingObject/** penetrating object */ ,
                    PenetrationTypePenetratingPoint/** penetrating point */ 
                };

                /** Represents the Coutout type */
                public: enum CoutoutType
                {
                    CoutoutTypeCircular/** circular */ ,
                    CoutoutTypeRectangular/** rectangular */ ,
                    CoutoutTypeFlatOval/** flat oval */ ,
                    CoutoutTypeUserDefined/** user defined */ ,
                    CoutoutTypeExistingSketch/** existing sketch */ ,
                    CoutoutTypeNewSketch/** new sketch */ ,
                    CoutoutTypeNone/** none */ 
                };

                /** Represents the Direction type */
                public: enum DirectionType
                {
                    DirectionTypePerpendiculartoStructure/** perpendicularto structure */ ,
                    DirectionTypeParalleltoRoute/** parallelto route */ ,
                    DirectionTypeUserDefined/** user defined */ 
                };

                /** Represents the Compensation type */
                public: enum CompensationType
                {
                    CompensationTypeNotRequired/** not required */ ,
                    CompensationTypeStandard/** standard */ ,
                    CompensationTypeNonStandard/** non standard */ 
                };

                private: PenetrationRequestImpl * m_penetrationrequest_impl;
                private: friend class  _PenetrationRequestBuilder;
                protected: PenetrationRequest();
                public: ~PenetrationRequest();
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
