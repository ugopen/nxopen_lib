#ifndef NXOpen_GEOMETRICUTILITIES_POLYGONPATTERN_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_POLYGONPATTERN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_PolygonPattern.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_DistancePatternSpacing.hxx>
#include <NXOpen/GeometricUtilities_HorizontalReference.hxx>
#include <NXOpen/GeometricUtilities_PolygonPattern.hxx>
#include <NXOpen/GeometricUtilities_PolygonPatternSpacing.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class PolygonPattern;
    }
    class Axis;
    class Expression;
    namespace GeometricUtilities
    {
        class DistancePatternSpacing;
    }
    namespace GeometricUtilities
    {
        class HorizontalReference;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class PolygonPatternSpacing;
    }
    class Point;
    namespace GeometricUtilities
    {
        class _PolygonPatternBuilder;
        class PolygonPatternImpl;
        /** the polygon pattern definition.  Allows specification along
                both the angular and radial directions. 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  PolygonPattern : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** defines polygon size options for polygon type pattern.   */
            public: enum SizeOptions
            {
                SizeOptionsInscribed/** use inscribed circle to define a polygon */,
                SizeOptionsCircumscribed/** use circumscribed circle to define a polygon */
            };

            private: PolygonPatternImpl * m_polygonpattern_impl;
            private: friend class  _PolygonPatternBuilder;
            protected: PolygonPattern();
            public: ~PolygonPattern();
            /**Returns  the rotation axis for the pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Axis * RotationAxis
            (
            );
            /**Sets  the rotation axis for the pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationAxis
            (
                NXOpen::Axis * rotationAxis /** rotationaxis */ 
            );
            /**Returns  the rotation center for the 2d pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * RotationCenter
            (
            );
            /**Sets  the rotation center for the 2d pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRotationCenter
            (
                NXOpen::Point * rotationCenter /** rotationcenter */ 
            );
            /**Returns  the radial spacing of the instances of the pattern 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::DistancePatternSpacing * RadialSpacing
            (
            );
            /**Returns  the flip object for 2D mode.  This function gets the flip attribute of the 2D pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool Flip
            (
            );
            /**Sets  the flip object for 2D mode.  This function gets the flip attribute of the 2D pattern. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFlip
            (
                bool enabled /** enabled */ 
            );
            /**Returns  the UseRadialDirection toggle attribute. This function gets the UseRadialDirection toggle value 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseRadialDirectionToggle
            (
            );
            /**Sets  the UseRadialDirection toggle attribute. This function gets the UseRadialDirection toggle value 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUseRadialDirectionToggle
            (
                bool toggle /** toggle */ 
            );
            /**Returns  the polygon spacing of the instances of the pattern
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PolygonPatternSpacing * PolygonSpacing
            (
            );
            /**Returns  the polygon size option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::PolygonPattern::SizeOptions PolygonSizeOption
            (
            );
            /**Sets  the polygon size option 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPolygonSizeOption
            (
                NXOpen::GeometricUtilities::PolygonPattern::SizeOptions option /** option */ 
            );
            /**Returns  the number of sides for the polygon type pattern will generated in this direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NumberOfSides
            (
            );
            /**Returns  the horizontal reference 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::HorizontalReference * HorizontalRef
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
