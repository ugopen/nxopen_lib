#ifndef NXOpen_DIE_PRESSMODEL_HXX_INCLUDED
#define NXOpen_DIE_PRESSMODEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_PressModel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class PressModel;
    }
    namespace Die
    {
    }
    namespace Die
    {
        class PressModelImpl;
        /** Represents a Die Simulation - Press Model 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  PressModel : public TransientObject
        {
            private: PressModelImpl * m_pressmodel_impl;
            /// \cond NX_NO_DOC 
            public: explicit PressModel(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
               it is illegal to use the object.  In .NET, this method is automatically
               called when the object is deleted by the garbage collector.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PressModel();
            /** Get number of operations  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: int GetNumOperations
            (
            );
            /** Set operation slide height 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOperationSlideHeight
            (
                int operation /** Operation of the slide */,
                double slideHeight /** Slide height */
            );
            /** Set operation cushion values 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOperationCushionSettings
            (
                int operation /** Operation of the cushion */,
                double liftStartAngle /** Lift start angle */,
                double liftStopAngle /** Lift stop angle */,
                double liftToDist /** Distance to lift to */,
                double lockAtDist /** Distance where lock happens */
            );
            /** Set values of the User Defined transport curve set, for given operation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOperationUserTransportCurves
            (
                int operation /** Operation of the transport devices */,
                const std::vector<double> & vals /** The curve set values */
            );
            /** Tell the press model which transport curve set to use in the given operation 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetOperationTransportCurveSet
            (
                int operation /** Operation of the transport devices */,
                int curveSet /** Index of the curve set */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
