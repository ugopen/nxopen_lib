#ifndef NXOpen_CAM_INSPECTIONLINEARMOVETOPOINTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_INSPECTIONLINEARMOVETOPOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_InspectionLinearMoveToPointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/CAM_InspectionLinearMoveToPointBuilder.hxx>
#include <NXOpen/CAM_InspectionMoveBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class InspectionLinearMoveToPointBuilder;
    }
    namespace CAM
    {
        class InspectionMoveBuilder;
    }
    class Point;
    class SelectPoint;
    namespace CAM
    {
        class _InspectionLinearMoveToPointBuilderBuilder;
        class InspectionLinearMoveToPointBuilderImpl;
        /** Represents the builder for the CMM Inspection sub-operation Linear Move To Point.  <br> To create a new instance of this class, use @link CAM::InspectionMoveCollection::CreateInspectionLinearMoveToPointBuilder  CAM::InspectionMoveCollection::CreateInspectionLinearMoveToPointBuilder @endlink  <br> 
         <br>  Created in NX7.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  InspectionLinearMoveToPointBuilder : public CAM::InspectionMoveBuilder
        {
            /** specifies the method used to define a point */
            public: enum PointTypeEnums
            {
                PointTypeEnumsExistingPoint/** Select an existing point */,
                PointTypeEnumsDeltaXYZ/** Enter in a delta value from a point */,
                PointTypeEnumsPointConstructor/** Use the Point Constructor */
            };

            private: InspectionLinearMoveToPointBuilderImpl * m_inspectionlinearmovetopointbuilder_impl;
            private: friend class  _InspectionLinearMoveToPointBuilderBuilder;
            protected: InspectionLinearMoveToPointBuilder();
            public: ~InspectionLinearMoveToPointBuilder();
            /**Returns  the point type enum 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionLinearMoveToPointBuilder::PointTypeEnums PointTypeEnum
            (
            );
            /**Sets  the point type enum 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointTypeEnum
            (
                NXOpen::CAM::InspectionLinearMoveToPointBuilder::PointTypeEnums pointTypeEnum /** pointtypeenum */ 
            );
            /**Returns  the point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * TargetPoint
            (
            );
            /**Sets  the point 
             <br>  Created in NX7.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the select existing point 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectPoint * SelectExistingPoint
            (
            );
            /**Returns  the point X coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double PointX
            (
            );
            /**Sets  the point X coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointX
            (
                double pointX /** pointx */ 
            );
            /**Returns  the point Y coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double PointY
            (
            );
            /**Sets  the point Y coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointY
            (
                double pointY /** pointy */ 
            );
            /**Returns  the point Z coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double PointZ
            (
            );
            /**Sets  the point Z coordinate 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetPointZ
            (
                double pointZ /** pointz */ 
            );
            /**Returns  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes DepthMethod
            (
            );
            /**Sets  the depth method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthMethod
            (
                NXOpen::CAM::InspectionMoveBuilder::DepthMethodTypes method /** method */ 
            );
            /**Returns  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DepthDistance
            (
            );
            /**Sets  the depth distance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetDepthDistance
            (
                double distance /** distance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
