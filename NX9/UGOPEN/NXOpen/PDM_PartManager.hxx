#ifndef NXOpen_PDM_PARTMANAGER_HXX_INCLUDED
#define NXOpen_PDM_PARTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PartManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/PDM_CaeCloneManager.hxx>
#include <NXOpen/PDM_PartFromPartBuilder.hxx>
#include <NXOpen/PDM_PartFromTemplateBuilder.hxx>
#include <NXOpen/PDM_PendingComponentsManager.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class PartManager;
    }
    class PartCollection;
    class BasePart;
    namespace PDM
    {
        class CaeCloneManager;
    }
    namespace PDM
    {
        class PartFromPartBuilder;
    }
    namespace PDM
    {
        class PartFromTemplateBuilder;
    }
    namespace PDM
    {
        class PendingComponentsManager;
    }
    namespace PDM
    {
        class PartManagerImpl;
        /** This class contains methods to create and manage parts in NX Manager mode.
             <br> Use @link PartCollection::PDMPartManager PartCollection::PDMPartManager@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  PartManager
        {
            private: PartManagerImpl * m_partmanager_impl;
            private: NXOpen::PartCollection* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PartManager(NXOpen::PartCollection *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartManager();
            /** Create an instance of a part builder that creates a new part from a template part.
                        This is analagous to a File New operation in NX Manager mode.
                    
                         <br> This method will throw an error if the session is not running in
                        NX Manager mode.  <br> 

                         <br> @link PDM::PartFromTemplateBuilder PDM::PartFromTemplateBuilder@endlink  is a singleton
                        meaning only one instance of it can exist at one time. Calling this method
                        will destroy the builder if one already exists and return a new instance. <br> 
                     @return  the part builder 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartFromTemplateBuilder * NewPartFromTemplateBuilder
            (
            );
            /** Create an instance of a part builder that creates a new part from an existing part.
                        This is analagous to a File SaveAs operation in NX Manager mode.
                    
                         <br> This method will throw an error if the session is not running in
                        NX Manager mode. <br> 

                         <br> @link PDM::PartFromTemplateBuilder PDM::PartFromTemplateBuilder@endlink  is a singleton
                        meaning only one instance of it can exist at one time. Calling this method
                        will destroy the builder if one already exists and return a new instance. <br> 
                     @return  the part builder 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PartFromPartBuilder * NewPartFromPartBuilder
            (
            );
            /** Creates a pending component manager for a given part. Pending components
                        are ones that have been added from Teamcenter, but are not yet present in NX.
                     @return  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::PendingComponentsManager * NewPendingComponentsManager
            (
                NXOpen::BasePart * part /** the part */
            );
            /** Create or get a Clone Manager that can execute a CAE Clone process for a Simulation File or a FeModel File.  
                    Creates a Clone Manager for a Simulation tag or a FeModel tag, if it does not already exist.
                    Creates part from part builder @link PDM::PartFromPartBuilder PDM::PartFromPartBuilder@endlink  objects for cloning a Simulation File or a FeModel File.
                    If called for a FeModel tag, the function will create Part Builders for FeModel Part , associated Idealized Part and CAD master part.
                    If called for a Simulation tag, the function will create Part Builders for Simulation Part, associated FeModel Part, Idealized Part and CAD master part.
                     @return  the clone manager 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::PDM::CaeCloneManager * GetCaeCloneManager
            (
                NXOpen::BasePart * part /** the part */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
