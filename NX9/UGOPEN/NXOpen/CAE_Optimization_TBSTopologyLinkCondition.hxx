#ifndef NXOpen_CAE_OPTIMIZATION_TBSTOPOLOGYLINKCONDITION_HXX_INCLUDED
#define NXOpen_CAE_OPTIMIZATION_TBSTOPOLOGYLINKCONDITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Optimization_TBSTopologyLinkCondition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Optimization_TBSTopologyLinkCondition.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Optimization
        {
            class TBSTopologyLinkCondition;
        }
    }
    class CoordinateSystem;
    namespace CAE
    {
        namespace Optimization
        {
            class _TBSTopologyLinkConditionBuilder;
            class TBSTopologyLinkConditionImpl;
            /** Represents the definition of symmetry and link conditions for topology optimization 
             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TBSTopologyLinkCondition : public TaggedObject
            {
                /** Defines the type of link condition */
                public: enum SymmetryOption
                {
                    SymmetryOptionPlaneSymmetry/** Plane symmetry referring to the plane which lies 
                                                                                         perpendicular to the given axis of the coordinate system*/,
                    SymmetryOptionCyclicSymmetry/** Cyclic symmetry definition */
                };

                /** Represents the axis of the symmetry coordinate system*/
                public: enum AxisType
                {
                    AxisTypeX/** Represents X axis */,
                    AxisTypeY/** Represents Y axis */,
                    AxisTypeZ/** Represents Z axis */
                };

                private: TBSTopologyLinkConditionImpl * m_tbstopologylinkcondition_impl;
                private: friend class  _TBSTopologyLinkConditionBuilder;
                protected: TBSTopologyLinkCondition();
                public: ~TBSTopologyLinkCondition();
                /**Returns  the symmetry link condition type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSTopologyLinkCondition::SymmetryOption SymmetryType
                (
                );
                /**Sets  the symmetry link condition type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetSymmetryType
                (
                    NXOpen::CAE::Optimization::TBSTopologyLinkCondition::SymmetryOption symmetryType /** symmetrytype */ 
                );
                /**Returns  the axis of symmetry coordinate system 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Optimization::TBSTopologyLinkCondition::AxisType Axis
                (
                );
                /**Sets  the axis of symmetry coordinate system 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetAxis
                (
                    NXOpen::CAE::Optimization::TBSTopologyLinkCondition::AxisType axis /** axis */ 
                );
                /**Returns  the referenced coordinate system used for the link condition 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * ReferenceCoordinateSystem
                (
                );
                /**Sets  the referenced coordinate system used for the link condition 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetReferenceCoordinateSystem
                (
                    NXOpen::CoordinateSystem * refCsys /** refcsys */ 
                );
                /**Returns  the choice whether the frozen elements should be excluded from the link definitions 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IgnoreFrozen
                (
                );
                /**Sets  the choice whether the frozen elements should be excluded from the link definitions 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetIgnoreFrozen
                (
                    bool ignoreFrozen /** ignorefrozen */ 
                );
                /**Returns  the translation amount for the segments, only available when @link 
                        CAE::Optimization::TBSTopologyLinkCondition::SymmetryType 
                        CAE::Optimization::TBSTopologyLinkCondition::SymmetryType@endlink  is 
                        @link CAE::Optimization::TBSTopologyLinkCondition::SymmetryOptionCyclicSymmetry CAE::Optimization::TBSTopologyLinkCondition::SymmetryOptionCyclicSymmetry@endlink 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: int TranslationAmount
                (
                );
                /**Sets  the translation amount for the segments, only available when @link 
                        CAE::Optimization::TBSTopologyLinkCondition::SymmetryType 
                        CAE::Optimization::TBSTopologyLinkCondition::SymmetryType@endlink  is 
                        @link CAE::Optimization::TBSTopologyLinkCondition::SymmetryOptionCyclicSymmetry CAE::Optimization::TBSTopologyLinkCondition::SymmetryOptionCyclicSymmetry@endlink 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : cae_opt_topo ("NX Topology Optimization") OR cae_opt_topobead ("NX Bead Optimization") OR cae_opt_toposhape ("NX Shape Optimization") */
                public: void SetTranslationAmount
                (
                    int translationAmount /** translationamount */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
