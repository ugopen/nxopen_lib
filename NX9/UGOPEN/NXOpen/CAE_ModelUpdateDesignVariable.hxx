#ifndef NXOpen_CAE_MODELUPDATEDESIGNVARIABLE_HXX_INCLUDED
#define NXOpen_CAE_MODELUPDATEDESIGNVARIABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelUpdateDesignVariable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelUpdateDesignVariable;
    }
    namespace CAE
    {
        class ModelingObjectPropertyTable;
    }
    class NXObject;
    namespace CAE
    {
        class _ModelUpdateDesignVariableBuilder;
        class ModelUpdateDesignVariableImpl;
        /** Represents a @link CAE::ModelUpdateDesignVariable CAE::ModelUpdateDesignVariable@endlink , which is a meta-solution used to update finite element models to match real life test data 
         <br>  Created in NX8.0.1.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelUpdateDesignVariable : public NXObject
        {
            private: ModelUpdateDesignVariableImpl * m_modelupdatedesignvariable_impl;
            private: friend class  _ModelUpdateDesignVariableBuilder;
            protected: ModelUpdateDesignVariable();
            public: ~ModelUpdateDesignVariable();
            /** Gets the design variable modeling object  @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModelingObjectPropertyTable * GetDesignVariableModelingObject
            (
            );
            /** Gets activity status  @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: bool GetActivityStatus
            (
            );
            /** Sets activity status 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetActivityStatus
            (
                bool active /** active */ 
            );
            /** Gets weight @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: double GetWeight
            (
            );
            /** Sets weight 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetWeight
            (
                double weight /** weight */ 
            );
            /** Gets lower bound @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: double GetLowerBound
            (
            );
            /** Sets lower bound 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetLowerBound
            (
                double lowerBound /** lower bound */ 
            );
            /** Gets upper bound @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: double GetUpperBound
            (
            );
            /** Sets upper bound 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetUpperBound
            (
                double upperBound /** upper bound */ 
            );
            /** Gets value @return  
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: double GetValue
            (
            );
            /** Sets value
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : nx_correl_update ("FE Model Update") */
            public: void SetValue
            (
                double value /** value */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
