#ifndef NXOpen_CAE_XYPLOT_XYPLOTMANAGER_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_XYPLOTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_XYPlotManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/CAE_Xyplot_BaseTemplateManager.hxx>
#include <NXOpen/CAE_Xyplot_OverlayParameters.hxx>
#include <NXOpen/CAE_Xyplot_Plot.hxx>
#include <NXOpen/CAE_Xyplot_PlotParameters.hxx>
#include <NXOpen/CAE_Xyplot_Preference.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class XYPlotManager;
        }
    }
    class Session;
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseTemplateManager;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class OverlayParameters;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Plot;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class PlotParameters;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Preference;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class WindowManager;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class XYPlotManagerImpl;
            /** XYPlot function manager  <br> To obtain an instance of this class use @link Session::XYPlotManager Session::XYPlotManager@endlink .  <br> 
             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  XYPlotManager
            {
                private: XYPlotManagerImpl * m_xyplotmanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit XYPlotManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                public: ~XYPlotManager();
                /** Creates plot on a specified view for given records  @return  Created plot 
                 <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::Xyplot::XYPlotManager::PlotRecords CAE::Xyplot::XYPlotManager::PlotRecords@endlink  instead. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::Xyplot::XYPlotManager::PlotRecords instead.") NXOpen::CAE::Xyplot::Plot * PlotRecords
                (
                    const std::vector<NXOpen::CAE::FTK::BaseRecord *> & records /** Records */,
                    int viewIndex /** View index */
                );
                /** Overlay records on the specific view  @return  Overlayed plot 
                 <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::Xyplot::XYPlotManager::OverlayRecords CAE::Xyplot::XYPlotManager::OverlayRecords@endlink  instead. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::Xyplot::XYPlotManager::OverlayRecords instead.") NXOpen::CAE::Xyplot::Plot * OverlayRecords
                (
                    const std::vector<NXOpen::CAE::FTK::BaseRecord *> & records /** Records */,
                    int viewIndex /** View index */
                );
                /** Creates plot with given parameters  @return  Created plot 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * PlotRecords
                (
                    NXOpen::CAE::Xyplot::PlotParameters * plotParameters /** the plot parameters */
                );
                /** Overlay records with given parameters  @return  Overlayed plot 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * OverlayRecords
                (
                    NXOpen::CAE::Xyplot::OverlayParameters * overlayParameters /** the overlay parameters */
                );
                /** Gets the current plot on the specific view  @return  Current plot 
                 <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::Xyplot::XYPlotManager::GetCurrentPlot CAE::Xyplot::XYPlotManager::GetCurrentPlot@endlink  instead. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::Xyplot::XYPlotManager::GetCurrentPlot instead.") NXOpen::CAE::Xyplot::Plot * GetCurrentPlot
                (
                    int viewIndex /** View index */
                );
                /** Gets the current plot on the view port of specific device  @return  Current plot 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Plot * GetCurrentPlot
                (
                    int deviceIndex /** Device index */,
                    int viewIndex /** View index */
                );
                /** Shows the next plot on the view port of specific device 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void ShowNextPlot
                (
                    int deviceIndex /** Device index */,
                    int viewIndex /** View index */
                );
                /** Shows the previous plot on the view port of specific device 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void ShowPreviousPlot
                (
                    int deviceIndex /** Device index */,
                    int viewIndex /** View index */
                );
                /** Gets the 2D template manager  @return  2D template manager 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BaseTemplateManager * GetTemplateManager2d
                (
                );

                /// \cond NX_NO_DOC 
                /** Gets the 3D template manager  @return  3D template manager 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::BaseTemplateManager * GetTemplateManager3d
                (
                );

                /// \endcond 
                /**Returns  the preference 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::Preference * Preference
                (
                );
                /** Creates a @link  CAE::Xyplot::PlotParameters   CAE::Xyplot::PlotParameters @endlink   @return  the plot parameters object created 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::PlotParameters * NewPlotParameters
                (
                );
                /** Creates a @link  CAE::Xyplot::PlotParameters   CAE::Xyplot::PlotParameters @endlink   @return  the overlay parameters object created 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: NXOpen::CAE::Xyplot::OverlayParameters * NewOverlayParameters
                (
                );
                /** Gets all window devices on which XY graph could be plotted  @return  Available Plot Winodw Devices 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: std::vector<int> GetAvailableWindowDevices
                (
                );
                /** Gets view count and views for specified window device  @return  the views on window device
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: std::vector<int> GetWindowDevicesViews
                (
                    int windowDevice /**  window index  */
                );
                /** Gets all plots on a view of specified window device  @return  Plots      
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: std::vector<NXOpen::CAE::Xyplot::Plot *> GetPlots
                (
                    int windowDevice /**  Plot index */,
                    int view /**  View index */
                );


                /** Returns the @link CAE::Xyplot::WindowManager CAE::Xyplot::WindowManager@endlink  belonging.
                                This class is restricted to being called from a program running during an interactive NX session.
                                If run from a non-interactive session it will return NULL. 
                 <br>  Created in NX9.0.0.  <br>  
                */
                public: NXOpen::CAE::Xyplot::WindowManager *WindowManager();
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
