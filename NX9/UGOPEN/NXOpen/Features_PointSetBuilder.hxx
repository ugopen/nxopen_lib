#ifndef NXOpen_FEATURES_POINTSETBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_POINTSETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_PointSetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_PointSetBuilder.hxx>
#include <NXOpen/Features_PointSetFacePercentageBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class PointSetBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class PointSetFacePercentageBuilder;
    }
    namespace Features
    {
        class PointSetFacePercentageBuilderList;
    }
    class NXObjectList;
    class Point;
    class PointList;
    class ScCollector;
    class Section;
    class SelectDisplayableObjectList;
    class SelectFace;
    namespace Features
    {
        class _PointSetBuilderBuilder;
        class PointSetBuilderImpl;
        /**
            Represents a @link Features::PointSetBuilder Features::PointSetBuilder@endlink . This builder is used to
            create and edit Point Set features. The Point Set feature allows you to create points 
            on curves, edges or faces.
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreatePointSetBuilder  Features::FeatureCollection::CreatePointSetBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ArcLength.Value </td> <td> 
         
        1 (millimeters part), 0.01 (inches part) </td> </tr> 

        <tr><td> 
         
        Associative </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        ChordalTolerance.Value </td> <td> 
         
        2.54 (millimeters part), 0.1 (inches part) </td> </tr> 

        <tr><td> 
         
        CurvePointsBy </td> <td> 
         
        EqualArcLength </td> </tr> 

        <tr><td> 
         
        EndPercentage.Value </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        FacePointsBy </td> <td> 
         
        Pattern </td> </tr> 

        <tr><td> 
         
        NumberOfPointsExpression.Value </td> <td> 
         
        2 </td> </tr> 

        <tr><td> 
         
        NumberOfPointsInUDirectionExpression.Value </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        NumberOfPointsInVDirectionExpression.Value </td> <td> 
         
        10 </td> </tr> 

        <tr><td> 
         
        PatternLimitsBy </td> <td> 
         
        Percentages </td> </tr> 

        <tr><td> 
         
        PatternLimitsEndingUValue.Value </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        PatternLimitsEndingVValue.Value </td> <td> 
         
        100 </td> </tr> 

        <tr><td> 
         
        PatternLimitsStartingUValue.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        PatternLimitsStartingVValue.Value </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Ratio.Value </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        SplinePointsBy </td> <td> 
         
        DefiningPoints </td> </tr> 

        <tr><td> 
         
        StartPercentage.Value </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  PointSetBuilder : public Features::FeatureBuilder
        {
            /** The settings for the type of Point Set feature. */
            public: enum Types
            {
                TypesCurvePoints/** Create points along curve. */,
                TypesSplinePoints/** Create points along spline. */,
                TypesFacePoints/** Create points on face */,
                TypesIntersectionPoints/** Create intersection points*/
            };

            /** The settings for the curve points definition. */
            public: enum CurvePointsType
            {
                CurvePointsTypeEqualArcLength/** Points will be created at equal arc length along curve. */,
                CurvePointsTypeEqualParameters/** Points will be created at equal parameter spacing along curve. */,
                CurvePointsTypeGeometricProgression/** Points will be created with a geometric progression along curve. */,
                CurvePointsTypeChordalTolerance/** Points will be created based on the chordal deviation of curve. */,
                CurvePointsTypeIncrementalArcLength/** A point will be created at the arc length spacing input. */,
                CurvePointsTypeSpecifiedProjectionPoints/** Points will be created at minimum distance to curve. */,
                CurvePointsTypeCurvePercentage/** A point will be created at given curve percentage. */
            };

            /** The settings for the spline points definition. */
            public: enum SplinePointsType
            {
                SplinePointsTypeDefiningPoints/** Points will be created at spline defining points. */,
                SplinePointsTypeKnots/** Points will be created at spline knot points. */,
                SplinePointsTypePoles/** Points will be created at spline pole points. */
            };

            /** The settings for the face points definition. */
            public: enum FacePointsType
            {
                FacePointsTypePattern/** Points will be created based on a defined pattern. */,
                FacePointsTypeFacePercentage/** A point will be created at given face percentages. */,
                FacePointsTypeBSurfacePoles/** Points will be created at surface poles. */
            };

            /** The settings for the pattern limit definition. */
            public: enum PatternLimitsType
            {
                PatternLimitsTypeDiagonalPoints/** The pattern limit is defined by two points. */,
                PatternLimitsTypePercentages/** The pattern limit is defined by surface U and V values. */
            };

            private: PointSetBuilderImpl * m_pointsetbuilder_impl;
            private: friend class  _PointSetBuilderBuilder;
            protected: PointSetBuilder();
            public: ~PointSetBuilder();
            /**Returns  the curve points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetBuilder::CurvePointsType CurvePointsBy
            (
            );
            /**Sets  the curve points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCurvePointsBy
            (
                NXOpen::Features::PointSetBuilder::CurvePointsType curvePointsBy /** curvepointsby */ 
            );
            /**Returns  the spline points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesSplinePoints Features::PointSetBuilder::TypesSplinePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetBuilder::SplinePointsType SplinePointsBy
            (
            );
            /**Sets  the spline points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesSplinePoints Features::PointSetBuilder::TypesSplinePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSplinePointsBy
            (
                NXOpen::Features::PointSetBuilder::SplinePointsType splinePointsBy /** splinepointsby */ 
            );
            /**Returns  the face points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetBuilder::FacePointsType FacePointsBy
            (
            );
            /**Sets  the face points definition setting. 
                        Only used when type is 
                        @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink . 
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetFacePointsBy
            (
                NXOpen::Features::PointSetBuilder::FacePointsType facePointsBy /** facepointsby */ 
            );
            /**Returns  the collector that is used to hold a single curve or edge definition. 
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink ,
                        @link Features::PointSetBuilder::CurvePointsTypeChordalTolerance Features::PointSetBuilder::CurvePointsTypeChordalTolerance@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SingleCurveOrEdgeCollector
            (
            );
            /**Returns  the collector that is used to hold multiple curves or edges. 
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeSpecifiedProjectionPoints Features::PointSetBuilder::CurvePointsTypeSpecifiedProjectionPoints@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * MultipleCurveOrEdgeCollector
            (
            );
            /**Returns  the collector that is used to hold a spline.
                        Only used when type is @link Features::PointSetBuilder::TypesSplinePoints Features::PointSetBuilder::TypesSplinePoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SplineCollector
            (
            );
            /**Returns  the select object that is used to hold the face.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFace * SingleFaceObject
            (
            );
            /**Returns  the collector that is used to hold faces.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypeFacePercentage Features::PointSetBuilder::FacePointsTypeFacePercentage@endlink , or
                        @link Features::PointSetBuilder::FacePointsTypeBSurfacePoles Features::PointSetBuilder::FacePointsTypeBSurfacePoles@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * MultipleFaceCollector
            (
            );
            /**Returns  the number of points that will be created along curve.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NumberOfPointsExpression
            (
            );
            /**Returns  the percentage of the curve at which to start creating points.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StartPercentage
            (
            );
            /**Returns  a section containing an object (curve, edge, or point) that will be used to 
                        determine an intersection with the 
                        curves/edges selected for setting the StartPercentage
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * StartPercentageSection
            (
            );
            /**Returns  the percentage of the curve at which to stop creating points.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * EndPercentage
            (
            );
            /**Returns  a section containing an object (curve, edge, or point) that will be used to 
                        determine an intersection with the 
                        curves/edges selected for setting the EndPercentage
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualArcLength Features::PointSetBuilder::CurvePointsTypeEqualArcLength@endlink , 
                        @link Features::PointSetBuilder::CurvePointsTypeEqualParameters Features::PointSetBuilder::CurvePointsTypeEqualParameters@endlink , or
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * EndPercentageSection
            (
            );
            /**Returns  the ratio of geometric progression.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeGeometricProgression Features::PointSetBuilder::CurvePointsTypeGeometricProgression@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Ratio
            (
            );
            /**Returns  the chordal tolerance used in creating points.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeChordalTolerance Features::PointSetBuilder::CurvePointsTypeChordalTolerance@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ChordalTolerance
            (
            );
            /**Returns  the arc length of the curve at which a point is to be created.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength Features::PointSetBuilder::CurvePointsTypeIncrementalArcLength@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ArcLength
            (
            );
            /**Returns  the projection point list.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeSpecifiedProjectionPoints Features::PointSetBuilder::CurvePointsTypeSpecifiedProjectionPoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PointList * ProjectionPointList
            (
            );
            /**Returns  the curve percentage list.
                        Only used when type is @link Features::PointSetBuilder::TypesCurvePoints Features::PointSetBuilder::TypesCurvePoints@endlink ,
                        and when @link Features::PointSetBuilder::CurvePointsBy Features::PointSetBuilder::CurvePointsBy@endlink  is 
                        @link Features::PointSetBuilder::CurvePointsTypeCurvePercentage Features::PointSetBuilder::CurvePointsTypeCurvePercentage@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObjectList * CurvePercentageList
            (
            );
            /**Returns  the number of points to be created in the u direction.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NumberOfPointsInUDirectionExpression
            (
            );
            /**Returns  the number of points to be created in the v direction.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * NumberOfPointsInVDirectionExpression
            (
            );
            /**Returns  the pattern limits definition setting.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetBuilder::PatternLimitsType PatternLimitsBy
            (
            );
            /**Sets  the pattern limits definition setting.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPatternLimitsBy
            (
                NXOpen::Features::PointSetBuilder::PatternLimitsType patternLimitsBy /** patternlimitsby */ 
            );
            /**Returns  the starting diagonal point of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PatternLimitsStartPoint
            (
            );
            /**Sets  the starting diagonal point of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPatternLimitsStartPoint
            (
                NXOpen::Point * patternLimitsStartPoint /** patternlimitsstartpoint */ 
            );
            /**Returns  the ending diagonal point of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PatternLimitsEndPoint
            (
            );
            /**Sets  the ending diagonal point of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints Features::PointSetBuilder::PatternLimitsTypeDiagonalPoints@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetPatternLimitsEndPoint
            (
                NXOpen::Point * patternLimitsEndPoint /** patternlimitsendpoint */ 
            );
            /**Returns  the starting u value of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypePercentages Features::PointSetBuilder::PatternLimitsTypePercentages@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PatternLimitsStartingUValue
            (
            );
            /**Returns  the ending u value of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypePercentages Features::PointSetBuilder::PatternLimitsTypePercentages@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PatternLimitsEndingUValue
            (
            );
            /**Returns  the starting v value of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypePercentages Features::PointSetBuilder::PatternLimitsTypePercentages@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PatternLimitsStartingVValue
            (
            );
            /**Returns  the ending v value of the pattern.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypePattern Features::PointSetBuilder::FacePointsTypePattern@endlink ,
                        and when @link Features::PointSetBuilder::PatternLimitsBy Features::PointSetBuilder::PatternLimitsBy@endlink  is
                        @link Features::PointSetBuilder::PatternLimitsTypePercentages Features::PointSetBuilder::PatternLimitsTypePercentages@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PatternLimitsEndingVValue
            (
            );
            /**Returns  the face percentage list.
                        Only used when type is @link Features::PointSetBuilder::TypesFacePoints Features::PointSetBuilder::TypesFacePoints@endlink ,
                        and when @link Features::PointSetBuilder::FacePointsBy Features::PointSetBuilder::FacePointsBy@endlink  is 
                        @link Features::PointSetBuilder::FacePointsTypeFacePercentage Features::PointSetBuilder::FacePointsTypeFacePercentage@endlink .
                    
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetFacePercentageBuilderList * FacePercentageList
            (
            );
            /** Create an entry for the face percentage list.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: NXOpen::Features::PointSetFacePercentageBuilder * CreateFacePercentageListItem
            (
            );
            /**Returns  the intersection selected objects.
                        This is used only, when @link Features::PointSetBuilder::Types Features::PointSetBuilder::Types@endlink 
                        is @link Features::PointSetBuilder::TypesIntersectionPoints Features::PointSetBuilder::TypesIntersectionPoints@endlink .
                        Only @link Section Section@endlink  or @link ScCollector ScCollector@endlink  are 
                        allowed as intersection selected objects.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * IntersectionSelectedObjects
            (
            );
            /**Returns  the intersection Section.
                        This is used only, when @link Features::PointSetBuilder::Types Features::PointSetBuilder::Types@endlink 
                        is @link Features::PointSetBuilder::TypesIntersectionPoints Features::PointSetBuilder::TypesIntersectionPoints@endlink   
                    
             <br>  @deprecated Deprecated in NX9.0.0.  Please use @link  Features::PointSetBuilder::IntersectionSelectedObjectsSecond   Features::PointSetBuilder::IntersectionSelectedObjectsSecond @endlink  instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Please use  Features::PointSetBuilder::IntersectionSelectedObjectsSecond  instead.") NXOpen::Section * IntersectionSection
            (
            );
            /**Returns  the intersection selected objects second.
                        This is used only, when @link Features::PointSetBuilder::Types Features::PointSetBuilder::Types@endlink 
                        is @link Features::PointSetBuilder::TypesIntersectionPoints Features::PointSetBuilder::TypesIntersectionPoints@endlink   
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * IntersectionSelectedObjectsSecond
            (
            );
            /**Returns  the associative setting. true indicates a feature will be created, 
                        false indicates just points will be created 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  the associative setting. true indicates a feature will be created, 
                        false indicates just points will be created 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the group points setting. true indicates a points will be grouped together.
                        This setting is applicable only when associative is false. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool GroupPoints
            (
            );
            /**Sets  the group points setting. true indicates a points will be grouped together.
                        This setting is applicable only when associative is false. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetGroupPoints
            (
                bool groupPoints /** grouppoints */ 
            );
            /**Returns  the distance tolerance. Used in combining curves when needed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance. Used in combining curves when needed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /**Returns  the angle tolerance. Used in determining curve tangency when needed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance. Used in determining curve tangency when needed. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angletolerance */ 
            );
            /**Returns  the type setting. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PointSetBuilder::Types Type
            (
            );
            /**Sets  the type setting. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::PointSetBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
