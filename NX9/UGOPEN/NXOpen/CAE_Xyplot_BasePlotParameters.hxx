#ifndef NXOpen_CAE_XYPLOT_BASEPLOTPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_BASEPLOTPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_BasePlotParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_FTK_BaseRecord.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class BasePlotParameters;
        }
    }
    namespace CAE
    {
        namespace FTK
        {
            class BaseRecord;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BasePlotParametersImpl;
            /** Represents the parameters passed to create or modify a plot.  <br> This is an abstract class  <br> 
             <br>  Created in NX9.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  BasePlotParameters : public TransientObject
            {
                private: BasePlotParametersImpl * m_baseplotparameters_impl;
                /// \cond NX_NO_DOC 
                public: explicit BasePlotParameters(void *ptr);
                /// \endcond 
                /** Gets the records to be plotted  @return  Records 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::CAE::FTK::BaseRecord *> GetRecords
                (
                );
                /** Sets the records to be plotted 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetRecords
                (
                    const std::vector<NXOpen::CAE::FTK::BaseRecord *> & records /** Records */
                );
                /**Returns  the index of device on which plot graph will be shown.
                                A value of 1 represents the main graphic window,
                                a value greater than 2 represents separate graphic window. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int DeviceIndex
                (
                );
                /**Sets  the index of device on which plot graph will be shown.
                                A value of 1 represents the main graphic window,
                                a value greater than 2 represents separate graphic window. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetDeviceIndex
                (
                    int deviceIndex /** deviceindex */ 
                );
                /**Returns  the index of a view port on main graphic window, on which plot graph will be shown.
                                Only available when @link CAE::Xyplot::BasePlotParameters::DeviceIndex CAE::Xyplot::BasePlotParameters::DeviceIndex @endlink and @link CAE::Xyplot::BasePlotParameters::SetDeviceIndex CAE::Xyplot::BasePlotParameters::SetDeviceIndex @endlink  is 1. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: int ViewPortIndex
                (
                );
                /**Sets  the index of a view port on main graphic window, on which plot graph will be shown.
                                Only available when @link CAE::Xyplot::BasePlotParameters::DeviceIndex CAE::Xyplot::BasePlotParameters::DeviceIndex @endlink and @link CAE::Xyplot::BasePlotParameters::SetDeviceIndex CAE::Xyplot::BasePlotParameters::SetDeviceIndex @endlink  is 1. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ftk ("NX Advanced Graphing") */
                public: void SetViewPortIndex
                (
                    int viewIndex /** viewindex */ 
                );
                /** Destroys the object 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~BasePlotParameters();
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
