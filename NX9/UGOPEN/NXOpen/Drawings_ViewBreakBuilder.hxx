#ifndef NXOpen_DRAWINGS_VIEWBREAKBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_VIEWBREAKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_ViewBreakBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewBreakBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/LineColorFontWidthBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class ViewBreakBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class LineColorFontWidthBuilder;
    namespace Drawings
    {
        class _ViewBreakBuilderBuilder;
        class ViewBreakBuilderImpl;
        /** Represents a @link Drawings::ViewBreakBuilder Drawings::ViewBreakBuilder@endlink   <br> This is a sub-builder class and cannot be directly instantiated  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  ViewBreakBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** style for view break line */
            public: enum Viewbreaklinestyle
            {
                ViewbreaklinestyleSimple/** simple */ ,
                ViewbreaklinestyleStraight/** straight */ ,
                ViewbreaklinestyleSawtooth/** sawtooth */ ,
                ViewbreaklinestyleLongBreak/** long break */ ,
                ViewbreaklinestyleTubular/** tubular */ ,
                ViewbreaklinestyleSolidTubular/** solid tubular */ ,
                ViewbreaklinestyleSolidRod/** solid rod */ ,
                ViewbreaklinestyleJigsaw/** jigsaw */ ,
                ViewbreaklinestyleWood/** wood */ ,
                ViewbreaklinestyleCopyCurve/** copy curve */ ,
                ViewbreaklinestyleTemplateCurve/** template curve */ 
            };

            private: ViewBreakBuilderImpl * m_viewbreakbuilder_impl;
            private: friend class  _ViewBreakBuilderBuilder;
            protected: ViewBreakBuilder();
            public: ~ViewBreakBuilder();
            /**Returns  the show break lines 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowBreakLines
            (
            );
            /**Sets  the show break lines 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetShowBreakLines
            (
                bool showBreakLines /** showbreaklines */ 
            );
            /**Returns  the break line style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewBreakBuilder::Viewbreaklinestyle BreakLineStyle
            (
            );
            /**Sets  the break line style 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBreakLineStyle
            (
                NXOpen::Drawings::ViewBreakBuilder::Viewbreaklinestyle breakLineStyle /** breaklinestyle */ 
            );
            /**Returns  the break line amplitude 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double BreakLineAmplitude
            (
            );
            /**Sets  the break line amplitude 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBreakLineAmplitude
            (
                double breakLineAmplitude /** breaklineamplitude */ 
            );
            /**Returns  the break line extension 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double BreakLineExtension
            (
            );
            /**Sets  the break line extension 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBreakLineExtension
            (
                double breakLineExtension /** breaklineextension */ 
            );
            /**Returns  the break gap 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double BreakGap
            (
            );
            /**Sets  the break gap 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetBreakGap
            (
                double breakGap /** breakgap */ 
            );
            /**Returns  the break line color width 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::LineColorFontWidthBuilder * BreakLineColorWidth
            (
            );
            /**Returns  the propagate view break 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool PropagateViewBreak
            (
            );
            /**Sets  the propagate view break 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetPropagateViewBreak
            (
                bool propagateViewBreak /** propagateviewbreak */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
