#ifndef NXOpen_PREFERENCES_HIDDENLINESVIEWPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_HIDDENLINESVIEWPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_HiddenLinesViewPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_IHiddenLinesViewPreferences.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class HiddenLinesViewPreferences;
    }
    namespace Preferences
    {
        class ViewPreferences;
    }
    namespace Preferences
    {
        class IHiddenLinesViewPreferences;
    }
    namespace Preferences
    {
        class HiddenLinesViewPreferencesImpl;
        /** Represents set of Hidden Lines View Preferences applicable to drafting views. 
                Hidden Lines allows access to the hidden line display preferences for all 
                views added to the drawing.
              <br> To obtain an instance of this class use @link Preferences::ViewPreferences::HiddenLines Preferences::ViewPreferences::HiddenLines@endlink   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  HiddenLinesViewPreferences: public virtual Preferences::IHiddenLinesViewPreferences
        {
            private: HiddenLinesViewPreferencesImpl * m_hiddenlinesviewpreferences_impl;
            private: NXOpen::Preferences::ViewPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit HiddenLinesViewPreferences(NXOpen::Preferences::ViewPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~HiddenLinesViewPreferences();
            /**Sets  the status of hiddenline. The status affects the appearance of lines in a member view.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenline
            (
                bool hiddenline /** hiddenline */ 
            );
            /**Returns  the status of hiddenline. The status affects the appearance of lines in a member view.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool Hiddenline
            (
            );
            /**Sets  the color of hidden line. The value should be between 1 and 216. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenlineColor
            (
                int color /** color */ 
            );
            /**Returns  the color of hidden line. The value should be between 1 and 216. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int HiddenlineColor
            (
            );
            /**Sets  the font type of hidden line.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenlineFont
            (
                NXOpen::Preferences::Font font /** font */ 
            );
            /**Returns  the font type of hidden line.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Font HiddenlineFont
            (
            );
            /**Sets  the width of hidden line or edges. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenlineWidth
            (
                NXOpen::Preferences::Width width /** width */ 
            );
            /**Returns  the width of hidden line or edges. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Width HiddenlineWidth
            (
            );
            /**Sets  the status of reference edges only.This controls the rendering of hidden edges with 
                        annotation. If True, only hidden edges referencing annotations are rendered.
                        Hidden edges not referenced by annotation are not rendered.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetReferenceEdgesOnly
            (
                bool referenceEdgesOnly /** reference edges only */ 
            );
            /**Returns  the status of reference edges only.This controls the rendering of hidden edges with 
                        annotation. If True, only hidden edges referencing annotations are rendered.
                        Hidden edges not referenced by annotation are not rendered.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReferenceEdgesOnly
            (
            );
            /**Sets  the staus of edges hidden by edges. This allows to control the display of edges 
                        which are hidden by other overlapping edges.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetEdgesHiddenByEdges
            (
                bool edgesHiddenByEdges /** edges hidden by edges */ 
            );
            /**Returns  the staus of edges hidden by edges. This allows to control the display of edges 
                        which are hidden by other overlapping edges.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool EdgesHiddenByEdges
            (
            );
            /**Sets  the status of interfering solids. This allows the correct rendering of hidden lines 
                        in a drawing member view with interfering solids.
                     
             <br>  @deprecated Deprecated in NX6.0.0.  Use @link Preferences::HiddenLinesViewPreferences::SetInterferingSolidsOption Preferences::HiddenLinesViewPreferences::SetInterferingSolidsOption@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0.  Use Preferences::HiddenLinesViewPreferences::SetInterferingSolidsOption instead.") void SetInterferingSolids
            (
                bool interferingSolids /** interfering solids */ 
            );
            /**Sets  the status of interfering solids. This allows the correct rendering of hidden lines 
                        in a drawing member view with interfering solids.
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetInterferingSolidsOption
            (
                NXOpen::Preferences::HiddenLineInterferingSolidsOption interferingSolids /** interfering solids */ 
            );
            /**Returns  the status of interfering solids. This allows the correct rendering of hidden lines 
                        in a drawing member view with interfering solids.
                     
             <br>  @deprecated Deprecated in NX6.0.0.  Use @link Preferences::HiddenLinesViewPreferences::InterferingSolidsOption Preferences::HiddenLinesViewPreferences::InterferingSolidsOption@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public:  NX_DEPRECATED("Deprecated in NX6.0.0.  Use Preferences::HiddenLinesViewPreferences::InterferingSolidsOption instead.") bool InterferingSolids
            (
            );
            /**Returns  the status of interfering solids. This allows the correct rendering of hidden lines 
                        in a drawing member view with interfering solids.
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::HiddenLineInterferingSolidsOption InterferingSolidsOption
            (
            );
            /**Sets  the status of self hidden. This allows the rendering of edges hidden by 
                        their own solid in the selected hidden line color, font, and width settings. If False, 
                        the hidden line processing only processes the lines hidden by other solids.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSelfHidden
            (
                bool selfHidden /** self hidden */ 
            );
            /**Returns  the status of self hidden. This allows the rendering of edges hidden by 
                        their own solid in the selected hidden line color, font, and width settings. If False, 
                        the hidden line processing only processes the lines hidden by other solids.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool SelfHidden
            (
            );
            /**Sets  the status of include model curves. This allows the modeling curves 
                        in drawing views to participate in hidden line processing. Most useful where 
                        drawing are produced with wireframe curves or 2D sketch curves.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetIncludeModelCurves
            (
                bool includeModelCurves /** include model curves */ 
            );
            /**Returns  the status of include model curves. This allows the modeling curves 
                        in drawing views to participate in hidden line processing. Most useful where 
                        drawing are produced with wireframe curves or 2D sketch curves.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeModelCurves
            (
            );
            /**Sets  the small feature option. This allows the simplification or removal of rendering of small features 
                        in large scale assembly drawings. Not all small features are considered for simplified rendering. 
                        Only if the boundary of a small feature lies completely within a face of the model is the small 
                        feature's display modified.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSmallFeature
            (
                NXOpen::Preferences::HiddenLineSmallFeatureOption smallFeature /** small feature */ 
            );
            /**Returns  the small feature option. This allows the simplification or removal of rendering of small features 
                        in large scale assembly drawings. Not all small features are considered for simplified rendering. 
                        Only if the boundary of a small feature lies completely within a face of the model is the small 
                        feature's display modified.
                     
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::HiddenLineSmallFeatureOption SmallFeature
            (
            );
            /**Sets  the value of small features tolerance.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetSmallFeaturesTolerance
            (
                double smallFeaturesTolerance /** small features tolerance */ 
            );
            /**Returns  the value of small features tolerance.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double SmallFeaturesTolerance
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
