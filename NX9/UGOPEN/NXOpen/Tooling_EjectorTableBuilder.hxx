#ifndef NXOpen_TOOLING_EJECTORTABLEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_EJECTORTABLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_EjectorTableBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_EjectorTableBuilder.hxx>
#include <NXOpen/Tooling_EjectorTableData.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class EjectorTableBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    class NXObject;
    namespace Tooling
    {
        class EjectorTableData;
    }
    namespace Tooling
    {
        class _EjectorTableBuilderBuilder;
        class EjectorTableBuilderImpl;
        /** Represens a ejector table builder.  <br> To create a new instance of this class, use @link Tooling::MoldwizardManager::CreateEjectorTableBuilder  Tooling::MoldwizardManager::CreateEjectorTableBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        EjectorDrawingType </td> <td> 
         
        MasterModel </td> </tr> 

        <tr><td> 
         
        EjectorPinType </td> <td> 
         
        All </td> </tr> 

        <tr><td> 
         
        RenameComponent </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  EjectorTableBuilder : public Builder
        {
            /** The types of the ejector drawing. */
            public: enum DrawingType
            {
                DrawingTypeMasterModel/** master model drawing */,
                DrawingTypeSelfContained/** self contained drawing */
            };

            /** The types of ejectors. */
            public: enum EjectorType
            {
                EjectorTypeAll/** all ejectors */,
                EjectorTypeStraight/** straight ejectors */,
                EjectorTypeShoulder/** shoulder ejectors */,
                EjectorTypeBlade/** blade ejectors */,
                EjectorTypeSleeve/** sleeve ejectors */,
                EjectorTypeOther/** other */ 
            };

            private: EjectorTableBuilderImpl * m_ejectortablebuilder_impl;
            private: friend class  _EjectorTableBuilderBuilder;
            protected: EjectorTableBuilder();
            public: ~EjectorTableBuilder();
            /**Returns  the drawing type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::EjectorTableBuilder::DrawingType EjectorDrawingType
            (
            );
            /**Sets  the drawing type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetEjectorDrawingType
            (
                NXOpen::Tooling::EjectorTableBuilder::DrawingType ejectorDrawingType /** ejectordrawingtype */ 
            );
            /**Returns  the ejector pin type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::EjectorTableBuilder::EjectorType EjectorPinType
            (
            );
            /**Sets  the ejector pin type. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetEjectorPinType
            (
                NXOpen::Tooling::EjectorTableBuilder::EjectorType ejectorPinType /** ejectorpintype */ 
            );
            /**Returns  the ejector pins. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Assemblies::SelectComponentList * EjectorPins
            (
            );
            /** Assigns the specified type on ejector pins. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void AssignEjectorType
            (
            );
            /** Deletes the specified type from ejector pins. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveEjectorType
            (
            );
            /**Returns  the drawing template name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString TemplateName
            (
            );
            /**Sets  the drawing template name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetTemplateName
            (
                const NXString & templateName /** templatename */ 
            );
            /**Sets  the drawing template name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetTemplateName
            (
                const char * templateName /** templatename */ 
            );
            /**Returns  the option to define the part name in Part Name Management. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameComponent
            (
            );
            /**Sets  the option to define the part name in Part Name Management. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetRenameComponent
            (
                bool renameComponent /** renamecomponent */ 
            );
            /**Returns  the destination folder which the master model part will be created in. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DestinationFolder
            (
            );
            /**Sets  the destination folder which the master model part will be created in. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDestinationFolder
            (
                const NXString & destinationFolder /** destinationfolder */ 
            );
            /**Sets  the destination folder which the master model part will be created in. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetDestinationFolder
            (
                const char * destinationFolder /** destinationfolder */ 
            );
            /**Returns  the name to create a master model part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MasterModelPartName
            (
            );
            /**Sets  the name to create a master model part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetMasterModelPartName
            (
                const NXString & masterModelPartName /** mastermodelpartname */ 
            );
            /**Sets  the name to create a master model part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetMasterModelPartName
            (
                const char * masterModelPartName /** mastermodelpartname */ 
            );
            /**Returns  the name rule to generate the master model part name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString NameRule
            (
            );
            /**Sets  the name rule to generate the master model part name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetNameRule
            (
                const NXString & nameRule /** namerule */ 
            );
            /**Sets  the name rule to generate the master model part name. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetNameRule
            (
                const char * nameRule /** namerule */ 
            );
            /**Returns  the part where a self contained drawing will be created or the part to be added into the master model drawing part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * WorkingPart
            (
            );
            /**Sets  the part where a self contained drawing will be created or the part to be added into the master model drawing part. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetWorkingPart
            (
                NXOpen::NXObject * workingPart /** workingpart */ 
            );
            /** Creates an ejector table transient object data.  @return  Allocated ejector table data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::EjectorTableData * NewEjectorTableData
            (
            );
            /** Gets an ejector table transient object data.  @return  Allocated ejector table data. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::EjectorTableData * GetEjectorTableData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
