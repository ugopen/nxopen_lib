#ifndef NXOpen_CAM_NCMSMOOTHINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_NCMSMOOTHINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_NcmSmoothingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class NcmSmoothingBuilder;
    }
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class _NcmSmoothingBuilderBuilder;
        class NcmSmoothingBuilderImpl;
        /**
            Represents a @link CAM::NcmSmoothingBuilder CAM::NcmSmoothingBuilder@endlink 
            
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  NcmSmoothingBuilder : public TaggedObject
        {
            /** Available tolerance types for smoothing */
            public: enum SmoothToleranceSources
            {
                SmoothToleranceSourcesMinimizePoints/** minimize points tolerance type */,
                SmoothToleranceSourcesCutting/** use cutting tolerance type */,
                SmoothToleranceSourcesSpecify/** specify tolerance type */
            };

            private: NcmSmoothingBuilderImpl * m_ncmsmoothingbuilder_impl;
            private: friend class  _NcmSmoothingBuilderBuilder;
            protected: NcmSmoothingBuilder();
            public: ~NcmSmoothingBuilder();
            /**Returns  the override with smooth connections check activation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool OverrideWithSmoothConnections
            (
            );
            /**Sets  the override with smooth connections check activation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOverrideWithSmoothConnections
            (
                bool newValue /** newvalue */ 
            );
            /**Returns  the smooth length 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * SmoothLength
            (
            );
            /**Returns  the smooth height 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * SmoothHeight
            (
            );
            /**Returns  the max stepover distance builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * MaxStepoverDistance
            (
            );
            /**Returns  the engage/retract tolerance source 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmSmoothingBuilder::SmoothToleranceSources EngRetToleranceSource
            (
            );
            /**Sets  the engage/retract tolerance source 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEngRetToleranceSource
            (
                NXOpen::CAM::NcmSmoothingBuilder::SmoothToleranceSources newValue /** newvalue */ 
            );
            /**Returns  the engage/retract tolerance value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double EngRetTolerance
            (
            );
            /**Sets  the engage/retract tolerance value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEngRetTolerance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the engage/retract max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double EngRetMaxToolAxisChange
            (
            );
            /**Sets  the engage/retract max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEngRetMaxToolAxisChange
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the apply corners smoothing check activation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ApplyCornersSmoothing
            (
            );
            /**Sets  the apply corners smoothing check activation 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetApplyCornersSmoothing
            (
                bool newValue /** newvalue */ 
            );
            /**Returns  the smoothing radius settings 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * SmoothingRadius
            (
            );
            /**Returns  the transfer/rapid tolerance type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::NcmSmoothingBuilder::SmoothToleranceSources TransferToleranceSource
            (
            );
            /**Sets  the transfer/rapid tolerance type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTransferToleranceSource
            (
                NXOpen::CAM::NcmSmoothingBuilder::SmoothToleranceSources newValue /** newvalue */ 
            );
            /**Returns  the transfer/rapid tolerance value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double TransferTolerance
            (
            );
            /**Sets  the transfer/rapid tolerance value 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTransferTolerance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the transfer/rapid max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double TransferMaxToolAxisChange
            (
            );
            /**Sets  the transfer/rapid max tool axis change 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTransferMaxToolAxisChange
            (
                double newValue /** newvalue */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
