#ifndef NXOpen_TOOLING_SPECIFYCIRCUITBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SPECIFYCIRCUITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SpecifyCircuitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_CoolingFittingData.hxx>
#include <NXOpen/Tooling_SpecifyCircuitBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SpecifyCircuitBuilder;
    }
    class Body;
    class Builder;
    class NXColor;
    class SelectBody;
    class SelectBodyList;
    namespace Tooling
    {
        class CoolingFittingData;
    }
    namespace Tooling
    {
        class _SpecifyCircuitBuilderBuilder;
        class SpecifyCircuitBuilderImpl;
        /** Represents a builder to be used to create specify circuit.  <br> To create a new instance of this class, use @link Tooling::SpecifyCircuitCollection::CreateBuilder  Tooling::SpecifyCircuitCollection::CreateBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        KeepCircuit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        Layer </td> <td> 
         
        251 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SpecifyCircuitBuilder : public Builder
        {
            private: SpecifyCircuitBuilderImpl * m_specifycircuitbuilder_impl;
            private: friend class  _SpecifyCircuitBuilderBuilder;
            protected: SpecifyCircuitBuilder();
            public: ~SpecifyCircuitBuilder();
            /**Returns  the inlet channel. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::SelectBodyList * InletChannel
            (
            );
            /**Returns  the outlet channel. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::SelectBody * OutletChannel
            (
            );
            /** Check whether cooling circuit is finished or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void CheckStatus
            (
            );
            /**Returns  the option whether to keep the circuit displayed body.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: bool KeepCircuit
            (
            );
            /**Sets  the option whether to keep the circuit displayed body.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetKeepCircuit
            (
                bool keepCircuit /** keepcircuit */ 
            );
            /**Returns  the circuit channel body color. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::NXColor * CircuitColor
            (
            );
            /**Sets  the circuit channel body color. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetCircuitColor
            (
                NXOpen::NXColor * circuitColor /** circuitcolor */ 
            );
            /**Returns  the layer value for the selected channels. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: int Layer
            (
            );
            /**Sets  the layer value for the selected channels. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetLayer
            (
                int layer /** layer */ 
            );
            /** Returns the circuit channel body color.  @return  Array of 3 RGB values, each between 0 and 1 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: std::vector<double> GetCircuitColor
            (
            );
            /** Sets the circuit color. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetCircuitColor
            (
                const std::vector<double> & circuitColor /** Array of 3 RGB values, each between 0 and 1 */
            );
            /** Gets intersect cooling list value. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void GetOneCircuit
            (
                const std::vector<NXOpen::Body *> & channels /** the cooling body*/
            );
            /** Initializes the circuit set data. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void InitializeCircuitSetData
            (
            );
            /** Creates the cooling fitting data object.  @return  the new @link Tooling::CoolingFittingData Tooling::CoolingFittingData@endlink  instance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CoolingFittingData * CreateCoolingFittingData
            (
            );
            /** Gets the Cooling Fitting Data object.  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::CoolingFittingData * GetCoolingFittingData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
