#ifndef NXOpen_FACET_SEWFACETBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_SEWFACETBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_SewFacetBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Facet_SewFacetBodyBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class SewFacetBodyBuilder;
    }
    class Builder;
    class Expression;
    namespace Facet
    {
        class SelectFacetedBody;
    }
    class Point;
    namespace Facet
    {
        class _SewFacetBodyBuilderBuilder;
        class SewFacetBodyBuilderImpl;
        /**
            Represents a @link Facet::SewFacetBodyBuilder Facet::SewFacetBodyBuilder@endlink 
            It sews two touching NX facet bodies. User need to specify the range on one of input body.
            The range on the other body is calculated automatically by choosing the closest vertex.
            It retruns a new mergered NX facet body. The two input bodies can be kept, deleted or hidden.
             <br> To create a new instance of this class, use @link Facet::FacetedBodyCollection::CreateSewFacetBodyBuilder  Facet::FacetedBodyCollection::CreateSewFacetBodyBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        DeformDistance.Value </td> <td> 
         
        0.5 (millimeters part), 0.05 (inches part) </td> </tr> 

        <tr><td> 
         
        InputStatus </td> <td> 
         
        Keep </td> </tr> 

        </table>  

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  SewFacetBodyBuilder : public Builder
        {
            /** Represents the option for keeping, deleting or hiding input two facet bodies after builder committing */
            public: enum Input
            {
                InputKeep/** Keep the input facet body after builder committing */,
                InputDelete/** Delete the input facet body after builder committing */,
                InputHide/** Hide the input facet body after builder committing */
            };

            private: SewFacetBodyBuilderImpl * m_sewfacetbodybuilder_impl;
            private: friend class  _SewFacetBodyBuilderBuilder;
            protected: SewFacetBodyBuilder();
            public: ~SewFacetBodyBuilder();
            /**Returns  the target body to be sewed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SelectFacetedBody * TargetBody
            (
            );
            /**Returns  the deform body to be sewed 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SelectFacetedBody * DeformBody
            (
            );
            /**Returns  the first vertex used to define the range 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Vertex1
            (
            );
            /**Sets  the first vertex used to define the range 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") OR die_engineering ("DIE ENGINEERING") */
            public: void SetVertex1
            (
                NXOpen::Point * vertexPoint1 /** vertexpoint1 */ 
            );
            /**Returns  the second vertex used to define the range 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Vertex2
            (
            );
            /**Sets  the second vertex used to define the range 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") OR die_engineering ("DIE ENGINEERING") */
            public: void SetVertex2
            (
                NXOpen::Point * vertexPoint2 /** vertexpoint2 */ 
            );
            /** Flip the range between the first and second vertex 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void FlipRange
            (
            );
            /**Returns  the distance to control the deform area on the deform body 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DeformDistance
            (
            );
            /**Returns  the option to specify how to deal with the input two facet bodies: keep, delete or hide 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::SewFacetBodyBuilder::Input InputStatus
            (
            );
            /**Sets  the option to specify how to deal with the input two facet bodies: keep, delete or hide 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : studio_free_form ("STUDIO FREE FORM") OR die_engineering ("DIE ENGINEERING") */
            public: void SetInputStatus
            (
                NXOpen::Facet::SewFacetBodyBuilder::Input inputStatus /** inputstatus */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
