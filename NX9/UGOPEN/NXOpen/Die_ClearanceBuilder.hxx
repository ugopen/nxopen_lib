#ifndef NXOpen_DIE_CLEARANCEBUILDER_HXX_INCLUDED
#define NXOpen_DIE_CLEARANCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_ClearanceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_ClearanceBuilder.hxx>
#include <NXOpen/Die_DieAttributesBuilder.hxx>
#include <NXOpen/Die_DieDirectionBuilder.hxx>
#include <NXOpen/Die_DiePlaneBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class ClearanceBuilder;
    }
    namespace Die
    {
        class DieAttributesBuilder;
    }
    namespace Die
    {
        class DieDirectionBuilder;
    }
    namespace Die
    {
        class DiePlaneBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Section;
    class SelectBody;
    class SelectBodyList;
    namespace Die
    {
        class _ClearanceBuilderBuilder;
        class ClearanceBuilderImpl;
        /**
            Represents a builder that is used to create or edit a @link Die::Clearance Die::Clearance@endlink  feature.
             <br> To create a new instance of this class, use @link Die::DieCollection::CreateClearanceBuilder  Die::DieCollection::CreateClearanceBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        ClearanceGeometryType </td> <td> 
         
        Solid </td> </tr> 

        <tr><td> 
         
        Distance.Value </td> <td> 
         
        0 (millimeters part), 0 (inches part) </td> </tr> 

        <tr><td> 
         
        Offset.Value </td> <td> 
         
        5 (millimeters part), 0.2 (inches part) </td> </tr> 

        </table>  

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  ClearanceBuilder : public Features::FeatureBuilder
        {
            /** Identifies which clearance type is being created in the casting. */
            public: enum Types
            {
                TypesGage/** Clearance will be provided encompassing gage solids. */,
                TypesGripper/** Clearance will be provided encompassing gripper, or transfer, machinery solids. */,
                TypesLifter/** Clearance will be provided encompassing interior casting lifting solids. */
            };

            /** Identifies which type of input defines the clearance. */
            public: enum ClearanceGeometryTypes
            {
                ClearanceGeometryTypesSolid/** The input is solids. */,
                ClearanceGeometryTypesSection/** The input is closed profiles. */
            };

            private: ClearanceBuilderImpl * m_clearancebuilder_impl;
            private: friend class  _ClearanceBuilderBuilder;
            protected: ClearanceBuilder();
            public: ~ClearanceBuilder();
            /**Returns  the target solid the clearance will be subtracted from. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * Target
            (
            );
            /**Returns  the input type of the clearance geometry. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::ClearanceBuilder::ClearanceGeometryTypes ClearanceGeometryType
            (
            );
            /**Sets  the input type of the clearance geometry. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetClearanceGeometryType
            (
                NXOpen::Die::ClearanceBuilder::ClearanceGeometryTypes clearanceGeometryType /** clearancegeometrytype */ 
            );
            /**Returns  the solid to use for the basis of the clearance area. Only valid when type is @link Die::ClearanceBuilder::ClearanceGeometryTypesSolid Die::ClearanceBuilder::ClearanceGeometryTypesSolid@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * Geometry
            (
            );
            /**Returns  the closed profile sections to use for the basis of the clearance area. Only valid when type is @link Die::ClearanceBuilder::ClearanceGeometryTypesSection Die::ClearanceBuilder::ClearanceGeometryTypesSection@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * Section
            (
            );
            /**Returns  the projection plane for the closed profiles to define the clearance areas. Only valid when type is @link Die::ClearanceBuilder::ClearanceGeometryTypesSection Die::ClearanceBuilder::ClearanceGeometryTypesSection@endlink . 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DiePlaneBuilder * Orientation
            (
            );
            /**Returns  the direction to use when extruding to create the clearance areas. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DieDirectionBuilder * ClearanceDirection
            (
            );
            /**Returns  the expression containing the distance value for extrusions when defining the clearance area.
                        If the value is 0.0, then a value will be generated from the target solid. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  the expression containing the offset value to apply to create a clearance area around the solid or closed profile definitions. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Offset
            (
            );
            /**Returns  the attribute title, value and face color to apply to the clearance faces. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::DieAttributesBuilder * Attributes
            (
            );
            /**Returns  the distance tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDistanceTolerance
            (
                double distanceTolerance /** distancetolerance */ 
            );
            /**Returns  the angle tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double AngleTolerance
            (
            );
            /**Sets  the angle tolerance. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetAngleTolerance
            (
                double angleTolerance /** angletolerance */ 
            );
            /**Returns  the identification of the clearance type (@link Die::ClearanceBuilder::TypesGage Die::ClearanceBuilder::TypesGage@endlink , @link Die::ClearanceBuilder::TypesGripper Die::ClearanceBuilder::TypesGripper@endlink , 
                        or @link Die::ClearanceBuilder::TypesLifter Die::ClearanceBuilder::TypesLifter@endlink ) to create in the target solid. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::ClearanceBuilder::Types Type
            (
            );
            /**Sets  the identification of the clearance type (@link Die::ClearanceBuilder::TypesGage Die::ClearanceBuilder::TypesGage@endlink , @link Die::ClearanceBuilder::TypesGripper Die::ClearanceBuilder::TypesGripper@endlink , 
                        or @link Die::ClearanceBuilder::TypesLifter Die::ClearanceBuilder::TypesLifter@endlink ) to create in the target solid. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetType
            (
                NXOpen::Die::ClearanceBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
