#ifndef NXOpen_ANNOTATIONS_TITLEBLOCKCOLLECTION_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_TITLEBLOCKCOLLECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_TitleBlockCollection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DefineTitleBlockBuilder.hxx>
#include <NXOpen/Annotations_EditTitleBlockBuilder.hxx>
#include <NXOpen/Annotations_TitleBlock.hxx>
#include <NXOpen/Annotations_TitleBlockCellBuilder.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/TaggedObjectCollection.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class TitleBlockCollection;
    }
    namespace Drafting
    {
        class DraftingApplicationManager;
    }
    namespace Annotations
    {
        class TitleBlock;
    }
    namespace Annotations
    {
        class DefineTitleBlockBuilder;
    }
    namespace Annotations
    {
        class EditTitleBlockBuilder;
    }
    namespace Annotations
    {
        class TitleBlockCellBuilder;
    }
    class DisplayableObject;
    namespace Annotations
    {
        class TitleBlockCollectionImpl;
        /** Represents a collection of @link Annotations::TitleBlock Annotations::TitleBlock@endlink .  <br> To obtain an instance of this class, refer to @link Drafting::DraftingApplicationManager  Drafting::DraftingApplicationManager @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  TitleBlockCollection : public TaggedObjectCollection
        {
            private: TitleBlockCollectionImpl * m_titleblockcollection_impl;
            private: NXOpen::Drafting::DraftingApplicationManager* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit TitleBlockCollection(NXOpen::Drafting::DraftingApplicationManager *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~TitleBlockCollection();
            /** Iterator for accessing the contents of the collection. */
            //lint -sem(NXOpen::Annotations::TitleBlockCollection::iterator::copy,initializer)
            class iterator
            {
            public:
                /** Value type associated with iterator*/ 

                typedef Annotations::TitleBlock * value_type;
                /** Default constructor */
                iterator() : m_context(NULL), m_current(NULL_TAG)
                { // coverity[uninit_member]
                } //lint !e1401 m_state is not initialized
                /// \cond NX_NO_DOC
                explicit iterator(NXOpen::Annotations::TitleBlockCollection *context) : m_context(context), m_current(NULL_TAG)
                { // coverity[uninit_member]
                }//lint !e1401 m_state is not initialized
                /// \endcond
                /** Copy constructor */
                iterator(const iterator &other): m_context(NULL), m_current(NULL_TAG)
                {
                    copy(other);
                }
                /** Copy constructor */
                iterator &operator =(const iterator &other)
                {
                    if (&other != this)
                        copy(other);
                    return *this;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are equal. */
                bool operator ==(const iterator &other) const
                {
                    return m_current == other.m_current && m_context == other.m_context;
                }
                /** Tests if the iterator objects on the left side and the right side of the operator are not equal. */
                bool operator !=(const iterator &other) const
                {
                    return !operator == (other);
                }
                /** Return the element currently pointed to by the iterator. */
                NXOPENCPP_ANNOTATIONSEXPORT  value_type operator * ();
                /** Points the iterator to next element. */
                iterator & operator ++()
                {
                    next();
                    return *this;
                }
                /** Points the iterator to next element. */
                iterator operator ++(int)
                {
                    iterator tmp(*this);
                    ++*this;
                    return tmp;
                }
            private:
                void copy(const iterator &other)
                {
                    m_context = other.m_context;
                    m_current = other.m_current;
                    for (int i = 0; i < sizeof(m_state)/sizeof(m_state[0]); i++)
                         m_state[i] = other.m_state[i];
                }
                NXOPENCPP_ANNOTATIONSEXPORT  void next();
                NXOpen::Annotations::TitleBlockCollection *m_context;
                tag_t m_current;
                unsigned int m_state[8];
            };
            /** Returns an iterator addressing the first element. */
            iterator begin();
            /** Returns an iterator addressing one past the last element. */
            iterator end()
            {
                return iterator(this);
            }
            /** Creates a @link Annotations::EditTitleBlockBuilder Annotations::EditTitleBlockBuilder@endlink .
                        This builder provides functions for editing values of unlocked cells in one 
                        or more title blocks. 
                        If you want to create a new title block from tabular notes 
                        or add/remove tabular notes from existing title block, please use 
                        @link Annotations::DefineTitleBlockBuilder Annotations::DefineTitleBlockBuilder@endlink .  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::EditTitleBlockBuilder * CreateEditTitleBlockBuilder
            (
                const std::vector<NXOpen::Annotations::TitleBlock *> & titleBlocks /** titleblocks */ 
            );
            /** Creates a @link Annotations::DefineTitleBlockBuilder Annotations::DefineTitleBlockBuilder@endlink .
                        This builder provides functions to create a new title block from 
                        tabular notes or add/remove tabular notes from existing title block. 
                        It also permits user to edit label and lock status of cells. 
                        If you want to edit values of cells in existing 
                        title block, please use @link Annotations::EditTitleBlockBuilder Annotations::EditTitleBlockBuilder@endlink .  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::DefineTitleBlockBuilder * CreateDefineTitleBlockBuilder
            (
                NXOpen::Annotations::TitleBlock * titleblock /** titleblock */ 
            );
            /** Creates a cell builder  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::TitleBlockCellBuilder * CreateCellBuilder
            (
                NXOpen::DisplayableObject * object /** object */ ,
                bool isLocked /** islocked */ ,
                int contentType /** contenttype */ ,
                const NXString & value /** value */ ,
                const NXString & label /** label */ ,
                bool canLockStatusChange /** canlockstatuschange */ 
            );
            /** Creates a cell builder  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::Annotations::TitleBlockCellBuilder * CreateCellBuilder
            (
                NXOpen::DisplayableObject * object /** object */ ,
                bool isLocked /** islocked */ ,
                int contentType /** contenttype */ ,
                const char * value /** value */ ,
                const char * label /** label */ ,
                bool canLockStatusChange /** canlockstatuschange */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
