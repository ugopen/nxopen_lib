#ifndef NXOpen_CAM_MANAGETOOLPARTBUILDER_HXX_INCLUDED
#define NXOpen_CAM_MANAGETOOLPARTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ManageToolPartBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class ManageToolPartBuilder;
    }
    class Builder;
    class NXObject;
    namespace CAM
    {
        class _ManageToolPartBuilderBuilder;
        class ManageToolPartBuilderImpl;
        /** Represents an Export Tool Part Builder  <br> This is an abstract class, and cannot be instantiated.  <br> 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  ManageToolPartBuilder : public Builder
        {
            private: ManageToolPartBuilderImpl * m_managetoolpartbuilder_impl;
            private: friend class  _ManageToolPartBuilderBuilder;
            protected: ManageToolPartBuilder();
            public: ~ManageToolPartBuilder();
            /**Returns  the export tool part toggle state 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool ExportToggleState
            (
            );
            /**Sets  the export tool part toggle state 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetExportToggleState
            (
                bool state /** if true export also tool part on export, otherwise don't */
            );
            /**Returns  the tool mounting junction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * ToolMountingJunction
            (
            );
            /**Sets  the tool mounting junction 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToolMountingJunction
            (
                NXOpen::NXObject * toolMountingJunction /** tool mounting junction */ 
            );
            /** The r1 tool tip junction, applies for turning tools only 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void AskR1ToolTipJunction
            (
                NXOpen::NXObject ** r1ToolTipJunction /** The Tool Tip Junction at radius R1*/,
                int* r1ToolTipTrackingPoint /** The tracking point (1..9) where the junction origin is located */
            );
            /** Updates the r1 tool tip junction and related tracking point (1..9)
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateR1ToolTipJunction
            (
                NXOpen::NXObject * r1ToolTipJunction /** The tool tip junction at radius R1*/,
                int r1ToolTipTrackingPoint /** The tracking point (1..9) where the junction origin is located */
            );
            /** The tool_tip_tracking_point, tool_tip_radius_id parameters apply for turning tools only.
                        Otherwise they are set to zero 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void AskToolTipJunction
            (
                NXOpen::NXObject ** toolTipJunction /** The Tool Tip Junction at radius R1*/,
                int* toolTipTrackingPoint /** The tracking point (1..9) where the junction origin is located */,
                int* toolTipRadiusId /** The radius id where the junction origin is located */
            );
            /** Updates the tool tip junction. 
                        The tool_tip_tracking_point, tool_tip_radius_id parameters apply for turning tools only. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void UpdateToolTipJunction
            (
                NXOpen::NXObject * r1ToolTipJunction /** The tool tip junction at radius R1*/,
                int toolTipTrackingPoint /** The tracking point (1..9) where the junction origin is located */,
                int toolTipRadiusId /** The radius id (1,2,3..) where the junction origin is located */
            );
            /** Sets the geometry objects for the tool's cutter 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetToolCutter
            (
                const std::vector<NXOpen::NXObject *> & tagArray /** Array holding the cutter objects */
            );
            /** Get the tool's cuttre geometry objects 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void GetToolCutter
            (
                std::vector<NXOpen::NXObject *> & tagArray /** Array with the cutter objects */
            );
            /** Get the number of tool cutter objects  @return  Number of cutter objects 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int GetNumToolCutter
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
