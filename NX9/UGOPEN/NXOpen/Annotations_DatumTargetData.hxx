#ifndef NXOpen_ANNOTATIONS_DATUMTARGETDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_DATUMTARGETDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_DatumTargetData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_SimpleDraftingAidPreferences.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class DatumTargetData;
    }
    namespace Annotations
    {
        class SimpleDraftingAidPreferences;
    }
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class DatumTargetDataImpl;
        /** Represents datum target data 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  DatumTargetData : public TransientObject
        {
            private: DatumTargetDataImpl * m_datumtargetdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit DatumTargetData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~DatumTargetData();
            /**Returns  the datum label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DatumLabel
            (
            );
            /**Sets  the datum label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDatumLabel
            (
                const NXString & datumLabel /** New datum label */
            );
            /**Sets  the datum label.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            void SetDatumLabel
            (
                const char * datumLabel /** New datum label */
            );
            /**Returns  the target index.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int Index
            (
            );
            /**Sets  the target index.

                        NOTE: The set method should not be used to edit a read-only object such as a Mirrored PMI object.
                              If it is, the changes will be overridden when the part is updated. 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetIndex
            (
                int index /** New target index */
            );
            /** Returns the SimpleDraftingAidPreferences object  @return  Datum target preferences 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::SimpleDraftingAidPreferences * GetSimpleDraftingAidPreferences
            (
            );
            /** Sets the SimpleDraftingAidPreferences object 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSimpleDraftingAidPreferences
            (
                NXOpen::Annotations::SimpleDraftingAidPreferences * preferences /** New datum target preferences */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
