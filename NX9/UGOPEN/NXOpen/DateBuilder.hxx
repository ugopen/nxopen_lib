#ifndef NXOpen_DATEBUILDER_HXX_INCLUDED
#define NXOpen_DATEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DateBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DateBuilder.hxx>
#include <NXOpen/DateItemBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DateBuilder;
    class DateItemBuilder;
    class DateItemBuilderList;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class _DateBuilderBuilder;
    class DateBuilderImpl;
    /** The DateBuilder class allows a date and/or time to be input or output via the DateItem builder.
            
            The FromDateItem and ToDateItem builders allow a From and To date to be input and output.  The
            class does not verify that the From date is earlier than the To date.
            
            The DateBuilder is also used to create a @link DateItemBuilder DateItemBuilder@endlink  object that is
            contained in the DateItemBuilderList.
        
     <br>  Created in NX8.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  DateBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
    {
        private: DateBuilderImpl * m_datebuilder_impl;
        private: friend class  _DateBuilderBuilder;
        protected: DateBuilder();
        public: ~DateBuilder();
        /** Create a @link DateItemBuilder DateItemBuilder@endlink  object that can be stored in
                    the DateItemList.
                 @return  New DateItemBuilder object 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DateItemBuilder * CreateDateItemBuilder
        (
        );
        /**Returns  a @link DateItemBuilder DateItemBuilder@endlink  object used for simple date and time storage. 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DateItemBuilder * DateItem
        (
        );
        /**Returns  a @link DateItemBuilder DateItemBuilder@endlink  object used for simple date and time storage. This is
                    the From date in a From-To range.
                 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DateItemBuilder * FromDateItem
        (
        );
        /**Returns  a @link DateItemBuilder DateItemBuilder@endlink  object used for simple date and time storage. This is
                    the To date in a From-To range.
                 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DateItemBuilder * ToDateItem
        (
        );
        /**Returns  a list of @link DateItemBuilder DateItemBuilder@endlink  objects used to store a list of dates and times.
                 
         <br>  Created in NX8.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::DateItemBuilderList * DateItemList
        (
        );
        /** Validate whether the inputs to the component are sufficient for 
                    commit to be called.  If the component is not in a state to commit
                    then an exception is thrown.  For example, if the component requires
                    you to set some property, this method will throw an exception if
                    you haven't set it.  This method throws a not-yet-implemented
                    NXException for some components.
                 @return  Was self validation successful 
         <br>  Created in NX3.0.1.  <br>  
         <br> License requirements : None */
        public: virtual bool Validate
        (
        );
    };
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
