#ifndef NXOpen_ANNOTATIONS_HOLETABLESETTINGSLABELBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_HOLETABLESETTINGSLABELBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_HoleTableSettingsLabelBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_HoleTableSettingsLabelBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class HoleTableSettingsLabelBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Annotations
    {
        class _HoleTableSettingsLabelBuilderBuilder;
        class HoleTableSettingsLabelBuilderImpl;
        /** Represents a @link Annotations::HoleTableSettingsLabelBuilder Annotations::HoleTableSettingsLabelBuilder@endlink  
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  HoleTableSettingsLabelBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents Index Options */
            public: enum IndexType
            {
                IndexTypeHoleTypeSymbolAndNumber/** Hole Type Symbol and Number */,
                IndexTypeNumber/** Number */,
                IndexTypeLetterAndNumber/** Letter and Number */
            };

            /** Represents Relative Location Options */
            public: enum RelativeLocationType
            {
                RelativeLocationTypeTopLeft/** Top Left      */,
                RelativeLocationTypeTopMiddle/** Top Middle    */,
                RelativeLocationTypeTopRight/** Top Right     */,
                RelativeLocationTypeCenterLeft/** Center Left   */,
                RelativeLocationTypeCenter/** Center        */,
                RelativeLocationTypeCenterRight/** Center Right  */,
                RelativeLocationTypeBottomLeft/** Bottom Left   */,
                RelativeLocationTypeBottomMiddle/** Bottom Middle */,
                RelativeLocationTypeBottomRight/** Bottom Right  */
            };

            private: HoleTableSettingsLabelBuilderImpl * m_holetablesettingslabelbuilder_impl;
            private: friend class  _HoleTableSettingsLabelBuilderBuilder;
            protected: HoleTableSettingsLabelBuilder();
            public: ~HoleTableSettingsLabelBuilder();
            /**Returns  the index format of hole label 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::HoleTableSettingsLabelBuilder::IndexType IndexFormat
            (
            );
            /**Sets  the index format of hole label 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetIndexFormat
            (
                NXOpen::Annotations::HoleTableSettingsLabelBuilder::IndexType indexFormat /** indexformat */ 
            );
            /**Returns  the show hole label with leader 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowLabelWithLeader
            (
            );
            /**Sets  the show hole label with leader 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetShowLabelWithLeader
            (
                bool showLabelWithLeader /** showlabelwithleader */ 
            );
            /**Returns  the relative location of hole label 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::HoleTableSettingsLabelBuilder::RelativeLocationType RelativeLocation
            (
            );
            /**Sets  the relative location of hole label 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetRelativeLocation
            (
                NXOpen::Annotations::HoleTableSettingsLabelBuilder::RelativeLocationType relativeLocation /** relativelocation */ 
            );
            /**Returns  the characters to skip 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CharactersToSkip
            (
            );
            /**Sets  the characters to skip 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCharactersToSkip
            (
                const NXString & charactersToSkip /** characterstoskip */ 
            );
            /**Sets  the characters to skip 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            void SetCharactersToSkip
            (
                const char * charactersToSkip /** characterstoskip */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
