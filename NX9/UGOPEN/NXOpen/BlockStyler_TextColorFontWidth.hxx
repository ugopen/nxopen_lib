#ifndef NXOpen_BLOCKSTYLER_TEXTCOLORFONTWIDTH_HXX_INCLUDED
#define NXOpen_BLOCKSTYLER_TEXTCOLORFONTWIDTH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     BlockStyler_TextColorFontWidth.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BlockStyler_UIBlock.hxx>
#include <NXOpen/BlockStyler_TextColorFontWidth.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace BlockStyler
    {
        class TextColorFontWidth;
    }
    namespace BlockStyler
    {
        class UIBlock;
    }
    namespace BlockStyler
    {
        class _TextColorFontWidthBuilder;
        class TextColorFontWidthImpl;
        /** Represents a Line Width block
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  TextColorFontWidth : public BlockStyler::UIBlock
        {
            private: TextColorFontWidthImpl * m_textcolorfontwidth_impl;
            private: friend class  _TextColorFontWidthBuilder;
            protected: TextColorFontWidth();
            public: ~TextColorFontWidth();
            /**Returns  the available font types.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString AvailableFontTypesAsString
            (
            );
            /**Sets  the available font types.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAvailableFontTypesAsString
            (
                const NXString & availableFontTypes /** availablefonttypes */ 
            );
            /**Sets  the available font types.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetAvailableFontTypesAsString
            (
                const char * availableFontTypes /** availablefonttypes */ 
            );
            /**Returns  the layout.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString LayoutAsString
            (
            );
            /**Sets  the layout.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLayoutAsString
            (
                const NXString & layoutString /** layoutstring */ 
            );
            /**Sets  the layout.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetLayoutAsString
            (
                const char * layoutString /** layoutstring */ 
            );
            /** Gets text color values @return color values to get from the property
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<int> GetColorValue
            (
            );
            /** Sets text color values
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetColorValue
            (
                const std::vector<int> & colorValueVector /**color values to set for the property. */
            );
            /**Returns  the font value
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FontValue
            (
            );
            /**Sets  the font value
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFontValue
            (
                const NXString & fontValue /** fontvalue */ 
            );
            /**Sets  the font value
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetFontValue
            (
                const char * fontValue /** fontvalue */ 
            );
            /**Returns  the width value.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString WidthValueAsString
            (
            );
            /**Sets  the width value.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetWidthValueAsString
            (
                const NXString & widthValueString /** widthvaluestring */ 
            );
            /**Sets  the width value.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetWidthValueAsString
            (
                const char * widthValueString /** widthvaluestring */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
