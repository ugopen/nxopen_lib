#ifndef NXOpen_CAE_EDGEPATHMETHOD_HXX_INCLUDED
#define NXOpen_CAE_EDGEPATHMETHOD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_EdgePathMethod.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/SelectionMethod.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class EdgePathMethod;
    }
    namespace CAE
    {
        class CAEEdge;
    }
    namespace CAE
    {
        class CAEVertex;
    }
    class SelectionMethod;
    namespace CAE
    {
    }
    namespace CAE
    {
        class EdgePathMethodImpl;
        /**
            Represents a @link CAE::EdgePathMethod CAE::EdgePathMethod@endlink .  The edge path method is 
            used by other objects to define a start point (@link CAE::CAEVertex CAE::CAEVertex@endlink ) and a path defined 
            by connected CAE edges (@link CAE::CAEEdge CAE::CAEEdge@endlink ).  The path is defined by adding seed edges
            which are each defined by a start point (@link CAE::CAEVertex CAE::CAEVertex@endlink ) and a an edge 
            (@link CAE::CAEEdge CAE::CAEEdge@endlink ).  The path object uses these seeds as input to an algorithm which 
            will determine the complete, coninuous, path.  If the resultant path is not the one desired, this
            indicates that too few seeds were specified.  The path class does not allow a curve to be used more than 
            once in a path.
            Calling @link CAE::EdgePathMethod::FlipPath CAE::EdgePathMethod::FlipPath@endlink 
            will flip the direction of the path definition, such that subsequent calls to 
            @link CAE::EdgePathMethod::GetSeedEdges CAE::EdgePathMethod::GetSeedEdges@endlink  or 
            @link CAE::EdgePathMethod::GetPathEdges CAE::EdgePathMethod::GetPathEdges@endlink  will return seed or path edges in 
            the new, flipped, order along with correspondingly updated start vertices.
             <br> To obtain an instance of this class use CAE::SmartSelectionManager  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  EdgePathMethod : public SelectionMethod
        {
            private: EdgePathMethodImpl * m_edgepathmethod_impl;
            /// \cond NX_NO_DOC 
            public: explicit EdgePathMethod(void *ptr);
            /// \endcond 
            /** Add seed (start vertex and edge) to the end of the path.  The vertex defines the start point
                    along the edge.  If the addition of the seed would result in an invalid path, the seed
                    will not be added and the function will return an error. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void AddSeedEdge
            (
                NXOpen::CAE::CAEVertex * seedStartVertex /** seed vertex */,
                NXOpen::CAE::CAEEdge * seedEdge /** seed edge */
            );
            /** Remove seed (start vertex and edge) from the path.  If the removal of the seed would 
                    result in an invalid path, the seed will not be added and the function will return 
                    an error. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void RemoveSeedEdge
            (
                NXOpen::CAE::CAEEdge * seedEdge /** seed edge */
            );
            /** Flip the path start and end.  This changes the definition of the path
                    such that subsequent calls to @link CAE::EdgePathMethod::GetSeedEdges CAE::EdgePathMethod::GetSeedEdges@endlink  or 
                    @link CAE::EdgePathMethod::GetPathEdges CAE::EdgePathMethod::GetPathEdges@endlink  will return seed or path edges in 
                    the new, flipped, order along with correspondingly updated start vertices. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void FlipPath
            (
            );
            /** Returns the seed start vertices and edges which define the path.  The path object uses these
                    seeds as input to an algorithm which will determine the complete, coninuous, path.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSeedEdges
            (
                std::vector<NXOpen::CAE::CAEVertex *> & seedStartVertices /** seed start vertices */,
                std::vector<NXOpen::CAE::CAEEdge *> & seedEdges /** seed edges */
            );
            /** Returns the resultant start vertics and edges of the path.  These define a path which is 
                    continuous from start to end.  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void GetPathEdges
            (
                std::vector<NXOpen::CAE::CAEVertex *> & pathStartVertices /** resultant start vertices */,
                std::vector<NXOpen::CAE::CAEEdge *> & pathEdges /** resultant edges */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
