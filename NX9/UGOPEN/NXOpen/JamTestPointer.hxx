#ifndef NXOpen_JAMTESTPOINTER_HXX_INCLUDED
#define NXOpen_JAMTESTPOINTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     JamTestPointer.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenjamtestcpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class JamTestPointer;
    class JamTestPointerImpl;
    /**
    Represents a JamTestPointer.  This is for internal testing only.

     <br>  Created in NX3.0.0.  <br>  
    */
    class NXOPENJAMTESTCPPEXPORT  JamTestPointer : public TransientObject
    {
        private: JamTestPointerImpl * m_jamtestpointer_impl;
        /// \cond NX_NO_DOC 
        public: explicit JamTestPointer(void *ptr);
        /// \endcond 
        /**Returns  
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: NXString Name
        (
        );
        /** 
         <br>  Created in NX3.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~JamTestPointer();
        /**The Jax pre call with API_THIS argument 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAttributeAPIThis
        (
            const NXString & title /** title */ ,
            int value /** value */ 
        );
        /**The Jax pre call with API_THIS argument 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetAttributeAPIThis
        (
            const char * title /** title */ ,
            int value /** value */ 
        );
        /** The Jax pre call with specified argument 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAttributeSpecifiedArgs
        (
            const NXString & title /** title */ ,
            int value /** value */ 
        );
        /** The Jax pre call with specified argument 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetAttributeSpecifiedArgs
        (
            const char * title /** title */ ,
            int value /** value */ 
        );
        /** The  no args 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAttributeNoArgs
        (
            const NXString & title /** title */ ,
            int value /** value */ 
        );
        /** The  no args 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetAttributeNoArgs
        (
            const char * title /** title */ ,
            int value /** value */ 
        );
        /** The  no args error
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void SetAttributeNoArgsError
        (
            const NXString & title /** title */ ,
            int value /** value */ 
        );
        /** The  no args error
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        void SetAttributeNoArgsError
        (
            const char * title /** title */ ,
            int value /** value */ 
        );
        /** Reset Pre-Call Status 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void ResetPreCallStatus
        (
        );
        /**Returns  the reset Pre-Call Status 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: bool PreCallStatus
        (
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
