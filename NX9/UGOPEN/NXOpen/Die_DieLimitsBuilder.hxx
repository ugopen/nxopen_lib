#ifndef NXOpen_DIE_DIELIMITSBUILDER_HXX_INCLUDED
#define NXOpen_DIE_DIELIMITSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_DieLimitsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_DieLimitsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class DieLimitsBuilder;
    }
    class Curve;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class NXObject;
    class ScCollector;
    namespace Die
    {
        class _DieLimitsBuilderBuilder;
        class DieLimitsBuilderImpl;
        /** Limits a path to a segment of the path.  <br> To create a new instance of this class, use @link Die::DieCollection::CreateDieLimits  Die::DieCollection::CreateDieLimits @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  DieLimitsBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            private: DieLimitsBuilderImpl * m_dielimitsbuilder_impl;
            private: friend class  _DieLimitsBuilderBuilder;
            protected: DieLimitsBuilder();
            public: ~DieLimitsBuilder();
            /**Returns  the curve used to set the limits.  The string will be combined into a single curve and the endpoints of
                        the combined curve will be used to set the first and last limit points.
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * Curve
            (
            );
            /**Returns  the first limit point. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * Point1
            (
            );
            /**Returns  the last limit point. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * Point2
            (
            );
            /** Get the objects used to create the path. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void GetPathObjects
            (
                std::vector<NXOpen::NXObject *> & objectArray /** The opening objects that were used to create the path. */
            );
            /** Set the objects used to create the path. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetPathObjects
            (
                const std::vector<NXOpen::NXObject *> & objectArray /** The opening objects that were used to create the path. */
            );
            /**Returns  the indication that limit points should be reversed. Setting of 1 indicates to reverse. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int Reverse
            (
            );
            /**Sets  the indication that limit points should be reversed. Setting of 1 indicates to reverse. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetReverse
            (
                int reverse /** reverse */ 
            );
            /**Returns  the indication that limit points are being removed. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: bool RemoveLimitPoints
            (
            );
            /**Sets  the indication that limit points are being removed. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetRemoveLimitPoints
            (
                bool remove /** remove */ 
            );
            /** Set the path used for the limits. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPath
            (
                NXOpen::Curve * path /** Path curve */
            );
            /** Set the limits from the endpoints of the input curve. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLimitsFromCurve
            (
                NXOpen::Curve * curve /** Curve to set limits */
            );
            /** Get the path used for the limits.  @return  
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Curve * GetPath
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
