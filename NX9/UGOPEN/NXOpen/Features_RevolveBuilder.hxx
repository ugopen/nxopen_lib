#ifndef NXOpen_FEATURES_REVOLVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_REVOLVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RevolveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Features_RevolveBuilder.hxx>
#include <NXOpen/GeometricUtilities_SmartVolumeProfileBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RevolveBuilder;
    }
    class Axis;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class BooleanOperation;
    }
    namespace GeometricUtilities
    {
        class FeatureOffset;
    }
    namespace GeometricUtilities
    {
        class FeatureOptions;
    }
    namespace GeometricUtilities
    {
        class Limits;
    }
    namespace GeometricUtilities
    {
        class SmartVolumeProfileBuilder;
    }
    class Section;
    namespace Features
    {
        class _RevolveBuilderBuilder;
        class RevolveBuilderImpl;
        /** Represents a revolve builder. 
             <br> To create a new instance of this class, use @link Features::FeatureCollection::CreateRevolveBuilder  Features::FeatureCollection::CreateRevolveBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        SmartVolumeProfile.OpenProfileSmartVolumeOption </td> <td> 
         
        0 </td> </tr> 

        </table>  

         <br>  Created in NX3.0.1.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RevolveBuilder : public Features::FeatureBuilder
        {
            private: RevolveBuilderImpl * m_revolvebuilder_impl;
            private: friend class  _RevolveBuilderBuilder;
            protected: RevolveBuilder();
            public: ~RevolveBuilder();
            /**Sets  the section
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSection
            (
                NXOpen::Section * section /** This parameter may not be NULL.*/
            );
            /**Returns  the section
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * Section
            (
            );
            /**Sets  the revolve axis
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAxis
            (
                NXOpen::Axis * axis /** axis */ 
            );
            /**Returns  the revolve axis
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Axis * Axis
            (
            );
            /**Returns  the revolve offset
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOffset * Offset
            (
            );
            /**Returns  the revolve boolean
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BooleanOperation * BooleanOperation
            (
            );
            /**Returns  the revolve tolerance
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: double Tolerance
            (
            );
            /**Sets  the revolve tolerance
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the limit data
                
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Limits * Limits
            (
            );
            /**Returns  the smart volume profile
                
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::SmartVolumeProfileBuilder * SmartVolumeProfile
            (
            );
            /**Returns  the feature options
                
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FeatureOptions * FeatureOptions
            (
            );
            /** If until selected option is used for start limit and the selected entity intersects the revolve
                    multiple times, this point (in parasolid units) will help the system determine which intersection to select.
                
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetStartLimitHelperPoint
            (
                const std::vector<double> & startHelperPoint /**If given start trim limit intersects with revolve multiple times, solution closest to this point will be used.*/
            );
            /** If until selected option is used for end limit and the selected entity intersects the revolve
                    multiple times, this point (in parasolid units) will help the system determine which intersection to select.
                
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetEndLimitHelperPoint
            (
                const std::vector<double> & endHelperPoint /**If given end trim limit intersects with revolve multiple times, solution closest to this point will be used.*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
