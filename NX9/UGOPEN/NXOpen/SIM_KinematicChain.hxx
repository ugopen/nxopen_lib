#ifndef NXOpen_SIM_KINEMATICCHAIN_HXX_INCLUDED
#define NXOpen_SIM_KINEMATICCHAIN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_KinematicChain.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SIM_KinematicChain.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class KinematicChain;
    }
    class Builder;
    namespace SIM
    {
        class _KinematicChainBuilder;
        class KinematicChainImpl;
        /** This class is used for add kinematic chain to the list.
                Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
             <br> To create a new instance of this class, use @link SIM::KinematicConfigurator::CreateKinematicChain  SIM::KinematicConfigurator::CreateKinematicChain @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  KinematicChain : public Builder
        {
            /** Represents the kinematic chain type */
            public: enum Types
            {
                TypesUnknown = -1/** Unknown */,
                TypesMilling/** Milling */,
                TypesTurning/** Turning */,
                TypesPolar/** Polar   */
            };

            /** Represents the coordinate plane type */
            public: enum CoordinatePlaneTypes
            {
                CoordinatePlaneTypesZx/** ZX */,
                CoordinatePlaneTypesXy/** XY */
            };

            private: KinematicChainImpl * m_kinematicchain_impl;
            private: friend class  _KinematicChainBuilder;
            protected: KinematicChain();
            public: ~KinematicChain();
            /**Returns  the name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetName
            (
                const NXString & name /** the chain's new name */
            );
            /**Sets  the name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetName
            (
                const char * name /** the chain's new name */
            );
            /**Returns  the type of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::KinematicChain::Types Type
            (
            );
            /**Sets  the type of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetType
            (
                NXOpen::SIM::KinematicChain::Types chainType /** the chain type */
            );
            /**Returns  the device component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Device
            (
            );
            /**Sets  the device component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetDevice
            (
                const NXString & device /** the chain device */
            );
            /**Sets  the device component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetDevice
            (
                const char * device /** the chain device */
            );
            /**Returns  the reference point junction of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ReferencePointJunction
            (
            );
            /**Sets  the reference point junction of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetReferencePointJunction
            (
                const NXString & refPointJunction /** the reference point junction */
            );
            /**Sets  the reference point junction of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetReferencePointJunction
            (
                const char * refPointJunction /** the reference point junction */
            );
            /**Returns  the setup component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Setup
            (
            );
            /**Sets  the setup component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetSetup
            (
                const NXString & setup /** the chain setup */
            );
            /**Sets  the setup component of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetSetup
            (
                const char * setup /** the chain setup */
            );
            /**Returns  the coordinate plane type of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SIM::KinematicChain::CoordinatePlaneTypes CoordinatePlane
            (
            );
            /**Sets  the coordinate plane type of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetCoordinatePlane
            (
                NXOpen::SIM::KinematicChain::CoordinatePlaneTypes type /** the coordinate plane type */
            );
            /**Returns  the X axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString X
            (
            );
            /**Sets  the X axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetX
            (
                const NXString & xAxis /** the x axis */
            );
            /**Sets  the X axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetX
            (
                const char * xAxis /** the x axis */
            );
            /**Returns  the Y axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Y
            (
            );
            /**Sets  the Y axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetY
            (
                const NXString & yAxis /** the Y axis */
            );
            /**Sets  the Y axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetY
            (
                const char * yAxis /** the Y axis */
            );
            /**Returns  the Z axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Z
            (
            );
            /**Sets  the Z axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetZ
            (
                const NXString & zAxis /** the z axis */
            );
            /**Sets  the Z axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetZ
            (
                const char * zAxis /** the z axis */
            );
            /**Returns  the rotary1 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Rotary1
            (
            );
            /**Sets  the rotary1 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetRotary1
            (
                const NXString & rotary1 /** the rotary1 */
            );
            /**Sets  the rotary1 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetRotary1
            (
                const char * rotary1 /** the rotary1 */
            );
            /**Returns  the rotary2 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Rotary2
            (
            );
            /**Sets  the rotary2 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetRotary2
            (
                const NXString & rotary2 /** the rotary2 */
            );
            /**Sets  the rotary2 axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetRotary2
            (
                const char * rotary2 /** the rotary2 */
            );
            /**Returns  the axial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Axial
            (
            );
            /**Sets  the axial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetAxial
            (
                const NXString & axis /** the axial axis */
            );
            /**Sets  the axial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetAxial
            (
                const char * axis /** the axial axis */
            );
            /**Returns  the radial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Radial
            (
            );
            /**Sets  the radial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetRadial
            (
                const NXString & axis /** the radial axis */
            );
            /**Sets  the radial axis of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetRadial
            (
                const char * axis /** the radial axis */
            );
            /**Returns  the coordinate axes name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CoordinateAxes
            (
            );
            /**Sets  the coordinate axes name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetCoordinateAxes
            (
                const NXString & axis /** the coordinate axes */
            );
            /**Sets  the coordinate axes name of the kinematic chain 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetCoordinateAxes
            (
                const char * axis /** the coordinate axes */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
