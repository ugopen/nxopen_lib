#ifndef NXOpen_ASSEMBLIES_COMPONENTPATTERN_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_COMPONENTPATTERN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_ComponentPattern.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Assemblies_ComponentPattern.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/PartLoadStatus.hxx>
#include <NXOpen/libnxopencpp_assemblies_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Assemblies
    {
        class ComponentPattern;
    }
    namespace Assemblies
    {
        class Component;
    }
    namespace Assemblies
    {
        class PatternMember;
    }
    class NXObject;
    class PartLoadStatus;
    namespace Assemblies
    {
        class _ComponentPatternBuilder;
        class ComponentPatternImpl;
        /** 
              Represents the object for component pattern.
             <br> To create or edit an instance of this class, use @link Assemblies::ComponentPatternBuilder  Assemblies::ComponentPatternBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ASSEMBLIESEXPORT  ComponentPattern : public NXObject
        {
            private: ComponentPatternImpl * m_componentpattern_impl;
            private: friend class  _ComponentPatternBuilder;
            protected: ComponentPattern();
            public: ~ComponentPattern();
            /** The method to delete the component pattern.
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Delete
            (
                bool deleteComponents /** deletecomponents */ 
            );
            /** The method to suppress the component pattern.
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Suppress
            (
            );
            /** The method to unsuppress the component pattern.
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: void Unsuppress
            (
            );
            /** Display information of the component pattern.
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void DisplayInformation
            (
            );
            /** Loads parts containing data referenced by this pattern, 
                        including the parts that are patterned and parts containing 
                        the objects that define the pattern parameters.
                     @return  Error information for any part that could not be loaded. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : assemblies ("ASSEMBLIES MODULE") */
            public: NXOpen::PartLoadStatus * LoadRelatedGeometry
            (
            );
            /** The component pattern name.
                     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetPatternName
            (
            );
            /** The suppressed status of the component pattern. 
                     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetPatternSuppressedStatus
            (
            );
            /**  The deferred status of the component pattern.
                     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetPatternDeferredStatus
            (
            );
            /** Returns all the pattern members.
                     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Assemblies::PatternMember *> GetAllPatternMembers
            (
            );
            /** Get all the components that are selected for pattern.
                     @return  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Assemblies::Component *> GetComponentsToPattern
            (
            );
            /** Change the template component of reference pattern to a pattern member at indices (firstBaseInstanceIndex, secondBaseInstanceIndex).
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void ChangeReferencePatternTemplate
            (
                int firstBaseInstanceIndex /** firstbaseinstanceindex */ ,
                int secondBaseInstanceIndex /** secondbaseinstanceindex */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
