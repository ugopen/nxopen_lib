#ifndef NXOpen_MENUBAR_MENUBUTTON_HXX_INCLUDED
#define NXOpen_MENUBAR_MENUBUTTON_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MenuBar_MenuButton.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MenuBar
    {
        class MenuButton;
    }
    namespace MenuBar
    {
    }
    namespace MenuBar
    {
        class MenuButtonImpl;
        /** Implements the Object for Menu Buttons 
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENUICPPEXPORT  MenuButton : public TransientObject
        {
            /** Available button types */
            public: enum Type
            {
                TypeCascadeButton/** cascade button */ ,
                TypePushButton/** push button */ ,
                TypeToggleButton/** toggle button */ ,
                TypeSeparator/** separator */ ,
                TypeApplicationButton/** application button */ ,
                TypeNullButton/** null button */ 
            };

            /** Sensitivity Status */
            public: enum SensitivityStatus
            {
                SensitivityStatusSensitive/** The button is sensitive. */,
                SensitivityStatusInsensitive/** The button is insensitive. */
            };

            /** Toggle Status */
            public: enum Toggle
            {
                ToggleOn/** The toggle is on. */,
                ToggleOff/** The toggle is off. */
            };

            private: MenuButtonImpl * m_menubutton_impl;
            /// \cond NX_NO_DOC 
            public: explicit MenuButton(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is
                        called, it is illegal to use the object.  In .NET and Java,
                        his method is automatically called when the object is
                        deleted by the garbage collector.  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~MenuButton();
            /**Returns  the name of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ButtonName
            (
            );
            /**Returns  the identifier of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int ButtonId
            (
            );
            /**Returns  the type of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MenuBar::MenuButton::Type ButtonType
            (
            );
            /**Returns  the type name of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ButtonTypeName
            (
            );
            /**Returns  the sensitivity of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MenuBar::MenuButton::SensitivityStatus ButtonSensitivity
            (
            );
            /**Sets  the sensitivity of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetButtonSensitivity
            (
                NXOpen::MenuBar::MenuButton::SensitivityStatus sensitivity /** sensitivity */ 
            );
            /**Returns  the toggle status of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MenuBar::MenuButton::Toggle ToggleStatus
            (
            );
            /**Sets  the toggle status of the button. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetToggleStatus
            (
                NXOpen::MenuBar::MenuButton::Toggle toggleStatus /** toggle status */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
