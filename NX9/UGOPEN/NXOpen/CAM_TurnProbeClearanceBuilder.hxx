#ifndef NXOpen_CAM_TURNPROBECLEARANCEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_TURNPROBECLEARANCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnProbeClearanceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_MoveBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TurnProbeClearanceBuilder;
    }
    namespace CAM
    {
        class MoveBuilder;
    }
    class Point;
    namespace CAM
    {
        class _TurnProbeClearanceBuilderBuilder;
        class TurnProbeClearanceBuilderImpl;
        /** Represents an probe start of engage Builder  <br> To create a new instance of this class, use @link CAM::MoveCollection::CreateTurnProbeClearanceBuilder  CAM::MoveCollection::CreateTurnProbeClearanceBuilder @endlink  <br> 
         <br>  Created in NX8.5.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TurnProbeClearanceBuilder : public CAM::MoveBuilder
        {
            /** The radial plane mode options 
             <br>  Created in NX8.5.1.  <br>  
            */
            public: enum RadialPlaneModes
            {
                RadialPlaneModesNone/** Plane is inactive. */,
                RadialPlaneModesPoint/** Plane is defined by point. */,
                RadialPlaneModesDistance/** Plane is defined by distance value. */
            };

            /** The axial plane mode options 
             <br>  Created in NX8.5.1.  <br>  
            */
            public: enum AxialPlaneModes
            {
                AxialPlaneModesNone/** Plane is inactive. */,
                AxialPlaneModesPoint/** Plane is defined by point. */,
                AxialPlaneModesDistance/** Plane is defined by distance value. */
            };

            private: TurnProbeClearanceBuilderImpl * m_turnprobeclearancebuilder_impl;
            private: friend class  _TurnProbeClearanceBuilderBuilder;
            protected: TurnProbeClearanceBuilder();
            public: ~TurnProbeClearanceBuilder();
            /**Returns  the radial plane mode 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnProbeClearanceBuilder::RadialPlaneModes RadialPlaneMode
            (
            );
            /**Sets  the radial plane mode 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRadialPlaneMode
            (
                NXOpen::CAM::TurnProbeClearanceBuilder::RadialPlaneModes radialPlaneMode /** the radial plane mode value */
            );
            /**Returns  the radial plane point 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * RadialPlanePoint
            (
            );
            /**Sets  the radial plane point 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRadialPlanePoint
            (
                NXOpen::Point * radialPlanePoint /** the radial plane point value */
            );
            /**Returns  the radial plane value 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: double RadialPlaneValue
            (
            );
            /**Sets  the radial plane value 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRadialPlaneValue
            (
                double radialPlaneValue /** the radial plane value value */
            );
            /**Returns  the axial plane mode 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnProbeClearanceBuilder::AxialPlaneModes AxialPlaneMode
            (
            );
            /**Sets  the axial plane mode 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAxialPlaneMode
            (
                NXOpen::CAM::TurnProbeClearanceBuilder::AxialPlaneModes axialPlaneMode /** the axial plane mode value */
            );
            /**Returns  the axial plane point 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * AxialPlanePoint
            (
            );
            /**Sets  the axial plane point 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAxialPlanePoint
            (
                NXOpen::Point * axialPlanePoint /** the axial plane point value */
            );
            /**Returns  the axial plane value 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : None */
            public: double AxialPlaneValue
            (
            );
            /**Sets  the axial plane value 
             <br>  Created in NX8.5.1.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAxialPlaneValue
            (
                double axialPlaneValue /** the axial plane value value */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
