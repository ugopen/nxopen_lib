#ifndef NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTDIRECTION_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_VELOCITYIMPACTDIRECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_VelocityImpactDirection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_VelocityImpactDirection.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class VelocityImpactDirection;
        }
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _VelocityImpactDirectionBuilder;
            class VelocityImpactDirectionImpl;
            /**
                Represents a @link CAE::ResponseSimulation::VelocityImpactDirection CAE::ResponseSimulation::VelocityImpactDirection@endlink 
                
             <br>  Created in NX6.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  VelocityImpactDirection : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
            {
                /** the direction options for impact */
                public: enum DirectionType
                {
                    DirectionTypeNodalComponent/** nodal component */ ,
                    DirectionTypeUserDefined/** user defined */ 
                };

                /** the types of nodal component */
                public: enum NodalComponentType
                {
                    NodalComponentTypeDof1/** dof1 */ ,
                    NodalComponentTypeDof2/** dof2 */ ,
                    NodalComponentTypeDof3/** dof3 */ 
                };

                private: VelocityImpactDirectionImpl * m_velocityimpactdirection_impl;
                private: friend class  _VelocityImpactDirectionBuilder;
                protected: VelocityImpactDirection();
                public: ~VelocityImpactDirection();
                /**Returns  the direction option 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::DirectionType DirectionOption
                (
                );
                /**Sets  the direction option 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetDirectionOption
                (
                    NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::DirectionType mDirectionOption /** mdirectionoption */ 
                );
                /**Returns  the user-defined direction
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * UserDefinedDirection
                (
                );
                /**Sets  the user-defined direction
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetUserDefinedDirection
                (
                    NXOpen::Direction * userDefinedDirection /** userdefineddirection */ 
                );
                /**Returns  the selected nodal component 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::NodalComponentType NodalComponent
                (
                );
                /**Sets  the selected nodal component 
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetNodalComponent
                (
                    NXOpen::CAE::ResponseSimulation::VelocityImpactDirection::NodalComponentType nodalComponent /** nodalcomponent */ 
                );
                /**Returns  the option to reverse direction of nodal component or not. Only valid when direction option is
                        @link CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent@endlink  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection
                (
                );
                /**Sets  the option to reverse direction of nodal component or not. Only valid when direction option is
                        @link CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent CAE::ResponseSimulation::VelocityImpactDirection::DirectionTypeNodalComponent@endlink  
                 <br>  Created in NX6.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetReverseDirection
                (
                    bool reverseDirection /** reversedirection */ 
                );
                /** Validate whether the inputs to the component are sufficient for 
                            commit to be called.  If the component is not in a state to commit
                            then an exception is thrown.  For example, if the component requires
                            you to set some property, this method will throw an exception if
                            you haven't set it.  This method throws a not-yet-implemented
                            NXException for some components.
                         @return  Was self validation successful 
                 <br>  Created in NX3.0.1.  <br>  
                 <br> License requirements : None */
                public: virtual bool Validate
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
