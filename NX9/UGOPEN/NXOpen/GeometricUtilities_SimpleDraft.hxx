#ifndef NXOpen_GEOMETRICUTILITIES_SIMPLEDRAFT_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_SIMPLEDRAFT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_SimpleDraft.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class SimpleDraft;
    }
    class Expression;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace GeometricUtilities
    {
        class _SimpleDraftBuilder;
        class SimpleDraftImpl;
        /** Represents an Offset . 
            
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  SimpleDraft : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** This enum represents the kind of simple_draft */
            public: enum SimpleDraftType
            {
                SimpleDraftTypeNoDraft/** No draft */,
                SimpleDraftTypeSimpleFromStart/** Draft using the start limit as the reference */,
                SimpleDraftTypeSimpleFromProfile/** Draft using the profile as the reference */,
                SimpleDraftTypeSymmetric/** Draft on both sides of the profile using the same angle */,
                SimpleDraftTypeMatchedEnds/** Draft on both sides of the profile such that the end profiles match in areas */,
                SimpleDraftTypeAsymmetric/** Draft on both sides of the profile using the not same angle */
            };

            private: SimpleDraftImpl * m_simpledraft_impl;
            private: friend class  _SimpleDraftBuilder;
            protected: SimpleDraft();
            public: ~SimpleDraft();
            /**Sets   the simple draft type
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDraftType
            (
                NXOpen::GeometricUtilities::SimpleDraft::SimpleDraftType type /** type */ 
            );
            /**Returns   the simple draft type
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::SimpleDraft::SimpleDraftType DraftType
            (
            );
            /** Sets the draft angle 
             <br>  @deprecated Deprecated in NX5.0.0.  To set the value of the expression modify the expression directly using @link GeometricUtilities::SimpleDraft::DraftAngle GeometricUtilities::SimpleDraft::DraftAngle@endlink  and @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink . <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public:  NX_DEPRECATED("Deprecated in NX5.0.0.  To set the value of the expression modify the expression directly using GeometricUtilities::SimpleDraft::DraftAngle and Expression::SetRightHandSide.") void SetDraftAngle
            (
                const NXString & draftAngle /** Draft angle   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Sets the draft angle 
             <br>  @deprecated Deprecated in NX5.0.0.  To set the value of the expression modify the expression directly using @link GeometricUtilities::SimpleDraft::DraftAngle GeometricUtilities::SimpleDraft::DraftAngle@endlink  and @link Expression::SetRightHandSide Expression::SetRightHandSide@endlink . <br>  

             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            void SetDraftAngle
            (
                const char * draftAngle /** Draft angle   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the draft angle
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DraftAngle
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
