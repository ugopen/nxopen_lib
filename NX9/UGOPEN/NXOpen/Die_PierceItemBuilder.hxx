#ifndef NXOpen_DIE_PIERCEITEMBUILDER_HXX_INCLUDED
#define NXOpen_DIE_PIERCEITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Die_PierceItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Die_PierceItemBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_die_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Die
    {
        class PierceItemBuilder;
    }
    class Expression;
    class ILocation;
    class IProfile;
    class NXObject;
    namespace Die
    {
        class _PierceItemBuilderBuilder;
        class PierceItemBuilderImpl;
        /**
            Represents a @link Die::PierceItemBuilder Die::PierceItemBuilder@endlink 
            
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_DIEEXPORT  PierceItemBuilder : public NXObject
        {
            /** Settings for the sizing method of individual pierces. */
            public: enum SizingMethodOption
            {
                SizingMethodOptionAuto/** Will calculate size at creation and during update */,
                SizingMethodOptionManual/** Will use size specified */
            };

            /** Settings for the hole shape of individual pierces. */
            public: enum HoleShapeType
            {
                HoleShapeTypeCircular/** Circular shaped hole */,
                HoleShapeTypeOblong/** Oblong shaped hole */,
                HoleShapeTypeSquare/** Square shaped hole */,
                HoleShapeTypeRectangular/** Rectangular shaped hole */,
                HoleShapeTypeRoundedRectangular/** Rouned Rectangular shaped hole */,
                HoleShapeTypeChordRectangular/** Chord Rectangular hole */,
                HoleShapeTypeHexagonal/** Hexagonal shaped hole */,
                HoleShapeTypeOther/** Not a standard shape */
            };

            private: PierceItemBuilderImpl * m_pierceitembuilder_impl;
            private: friend class  _PierceItemBuilderBuilder;
            protected: PierceItemBuilder();
            public: ~PierceItemBuilder();
            /** Sets the objects making up the hole to be pierced. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetPierceObjects
            (
                const std::vector<NXOpen::IProfile *> & objects /** Objects that make up the hole to be pierced */
            );
            /** Gets the objects making up the hole to be pierced.  @return  Objects that make up the hole to be pierced 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: std::vector<NXOpen::IProfile *> GetPierceObjects
            (
            );
            /**Returns  the sizing method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::PierceItemBuilder::SizingMethodOption SizingMethod
            (
            );
            /**Sets  the sizing method 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetSizingMethod
            (
                NXOpen::Die::PierceItemBuilder::SizingMethodOption sizingMethod /** sizingmethod */ 
            );
            /**Returns  the hole shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Die::PierceItemBuilder::HoleShapeType HoleShape
            (
            );
            /**Sets  the hole shape 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetHoleShape
            (
                NXOpen::Die::PierceItemBuilder::HoleShapeType holeShape /** holeshape */ 
            );
            /**Returns  the punch radius 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PunchDiameter
            (
            );
            /**Returns  the punch length 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PunchLength
            (
            );
            /**Returns  the punch width 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PunchWidth
            (
            );
            /**Returns  the punch radius 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PunchRadius
            (
            );
            /**Returns  the reference direction of the hole 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::ILocation * ReferenceVector
            (
            );
            /**Sets  the reference direction of the hole 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetReferenceVector
            (
                NXOpen::ILocation * refVector /** ref vector */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
