#ifndef NXOpen_TOOLING_MWMOLDEDPARTVALIDATIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MWMOLDEDPARTVALIDATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MWMoldedPartValidationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/Tooling_MWMoldedPartValidationBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class MWMoldedPartValidationBuilder;
    }
    class Builder;
    class Direction;
    class NXColor;
    class SelectBody;
    class SelectFace;
    class SelectFaceList;
    namespace Tooling
    {
        class _MWMoldedPartValidationBuilderBuilder;
        class MWMoldedPartValidationBuilderImpl;
        /** Represents a builder to be used to perform Molded Part Validation analysis.  <br> To create a new instance of this class, use @link Tooling::MWMoldedPartValidationManager::CreateMWMoldedPartValidationBuilder  Tooling::MWMoldedPartValidationManager::CreateMWMoldedPartValidationBuilder @endlink  <br> 
        Default values.
        <table border="1"> 
         
        <tr><th> 
        Property</th>  <th> 
        Value</th> </tr>
        <tr><td> 
         
        CalculationOption </td> <td> 
         
        KeepExisting </td> </tr> 

        <tr><td> 
         
        FaceDraftAngleLimit </td> <td> 
         
        3 </td> </tr> 

        <tr><td> 
         
        FaceHighlightSelectedFaces </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        FaceNonSelectedFacesTranslucency </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectAllFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectCrossoverFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectNegativeFaces1 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectNegativeFaces2 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectPositiveFaces1 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectPositiveFaces2 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectUndercutAreas </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectUndercutEdges </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectVerticalFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        FaceSelectedFacesTranslucency </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationCheckScope </td> <td> 
         
        FaceProperties </td> </tr> 

        <tr><td> 
         
        InformationLowerLimit </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR01 </td> <td> 
         
        5.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR02 </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR03 </td> <td> 
         
        4.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR04 </td> <td> 
         
        4 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR05 </td> <td> 
         
        3.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR06 </td> <td> 
         
        3 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR07 </td> <td> 
         
        2.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR08 </td> <td> 
         
        2 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR09 </td> <td> 
         
        1.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR10 </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR11 </td> <td> 
         
        0.5 </td> </tr> 

        <tr><td> 
         
        InformationLowerLimitR12 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationRangeType </td> <td> 
         
        Uniform </td> </tr> 

        <tr><td> 
         
        InformationSharpAngleLimit </td> <td> 
         
        6 </td> </tr> 

        <tr><td> 
         
        InformationShowBoundaryEdges </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR01 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR02 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR03 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR04 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR05 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR06 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR07 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR08 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR09 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR10 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR11 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowRangeR12 </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationShowSharpEdges </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimit </td> <td> 
         
        6 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR01 </td> <td> 
         
        6 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR02 </td> <td> 
         
        5.5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR03 </td> <td> 
         
        5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR04 </td> <td> 
         
        4.5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR05 </td> <td> 
         
        4 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR06 </td> <td> 
         
        3.5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR07 </td> <td> 
         
        3 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR08 </td> <td> 
         
        2.5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR09 </td> <td> 
         
        2 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR10 </td> <td> 
         
        0.5 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR11 </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        InformationUpperLimitR12 </td> <td> 
         
        0.5 </td> </tr> 

        <tr><td> 
         
        InformationUseSingleTolerance </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionAssignToRegionOption </td> <td> 
         
        CavityRegion </td> </tr> 

        <tr><td> 
         
        RegionCavityRegionTranslucency </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionCoreRegionTranslucency </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionSelectCrossoverRegionFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionSelectCrossoverVerticalFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionSelectUnknownFaces </td> <td> 
         
        0 </td> </tr> 

        <tr><td> 
         
        RegionShowIncompleteLoops </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        RegionShowInternalLoops </td> <td> 
         
        1 </td> </tr> 

        <tr><td> 
         
        RegionShowPartingEdges </td> <td> 
         
        1 </td> </tr> 

        </table>  

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  MWMoldedPartValidationBuilder : public Builder
        {
            /** Calculation options */
            public: enum CalculateOption
            {
                CalculateOptionKeepExisting/** calculate and keep existing properties on the faces */,
                CalculateOptionEditRegionsOnly/** edit properties of region faces only */,
                CalculateOptionResetAll/** calculate and replace all properties for region faces */
            };

            /** Options for assigning faces to the Cavity or Core region */
            public: enum AssignToRegion
            {
                AssignToRegionCavityRegion/** assign selected region faces to the Cavity region */,
                AssignToRegionCoreRegion/** assign selected region faces to the Core region */
            };

            /** Check scope for information */
            public: enum CheckScope
            {
                CheckScopeFaceProperties/** face properties */,
                CheckScopeModelProperties/** model properties */,
                CheckScopeSharpCorners/** sharp corners */
            };

            /** Range type for displaying small corner radius faces */
            public: enum RangeType
            {
                RangeTypeUniform/** uniform range limit values */,
                RangeTypeRange/** user-defined range limit values */,
                RangeTypePlain/** range limit values defined by tolerances */
            };

            private: MWMoldedPartValidationBuilderImpl * m_mwmoldedpartvalidationbuilder_impl;
            private: friend class  _MWMoldedPartValidationBuilderBuilder;
            protected: MWMoldedPartValidationBuilder();
            public: ~MWMoldedPartValidationBuilder();
            /**Returns  the product body to be analyzed on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::SelectBody * CalculationProductBody
            (
            );
            /**Returns  the draw direction on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Direction * CalculationDrawDirection
            (
            );
            /**Sets  the draw direction on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetCalculationDrawDirection
            (
                NXOpen::Direction * calculationDrawDirection /** calculationdrawdirection */ 
            );
            /**Returns  the calculation option on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Tooling::MWMoldedPartValidationBuilder::CalculateOption CalculationOption
            (
            );
            /**Sets  the calculation option on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetCalculationOption
            (
                NXOpen::Tooling::MWMoldedPartValidationBuilder::CalculateOption calculationOption /** calculationoption */ 
            );
            /** Calculate button on the Calculate Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void Calculate
            (
            );
            /**Returns  the option for highlighting the selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceHighlightSelectedFaces
            (
            );
            /**Sets  the option for highlighting the selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceHighlightSelectedFaces
            (
                bool faceHighlightSelectedFaces /** facehighlightselectedfaces */ 
            );
            /**Returns  the draft angle limit on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double FaceDraftAngleLimit
            (
            );
            /**Sets  the draft angle limit on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceDraftAngleLimit
            (
                double faceDraftAngleLimit /** facedraftanglelimit */ 
            );
            /**Returns  the option for turning on/off the selection of all faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectAllFaces
            (
            );
            /**Sets  the option for turning on/off the selection of all faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectAllFaces
            (
                bool faceSelectAllFaces /** faceselectallfaces */ 
            );
            /**Returns  the color for applying to all faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceAllFacesColor
            (
            );
            /**Sets  the color for applying to all faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceAllFacesColor
            (
                NXOpen::NXColor * faceAllFacesColor /** faceallfacescolor */ 
            );
            /**Returns  the option for turning on/off the highlight of the positive faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectPositiveFaces1
            (
            );
            /**Sets  the option for turning on/off the highlight of the positive faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectPositiveFaces1
            (
                bool faceSelectPositiveFaces1 /** faceselectpositivefaces1 */ 
            );
            /**Returns  the color for applying to the positive faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FacePositiveFacesColor1
            (
            );
            /**Sets  the color for applying to the positive faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFacePositiveFacesColor1
            (
                NXOpen::NXColor * facePositiveFacesColor1 /** facepositivefacescolor1 */ 
            );
            /**Returns  the option for turning on/off the highlight of the positive small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectPositiveFaces2
            (
            );
            /**Sets  the option for turning on/off the highlight of the positive small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectPositiveFaces2
            (
                bool faceSelectPositiveFaces2 /** faceselectpositivefaces2 */ 
            );
            /**Returns  the color for applying to the positive small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FacePositiveFacesColor2
            (
            );
            /**Sets  the color for applying to the positive small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFacePositiveFacesColor2
            (
                NXOpen::NXColor * facePositiveFacesColor2 /** facepositivefacescolor2 */ 
            );
            /**Returns  the option for turning on/off the highlight of the vertical faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectVerticalFaces
            (
            );
            /**Sets  the option for turning on/off the highlight of the vertical faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectVerticalFaces
            (
                bool faceSelectVerticalFaces /** faceselectverticalfaces */ 
            );
            /**Returns  the color for applying to the vertical faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceVerticalFacesColor
            (
            );
            /**Sets  the color for applying to the vertical faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceVerticalFacesColor
            (
                NXOpen::NXColor * faceVerticalFacesColor /** faceverticalfacescolor */ 
            );
            /**Returns  the option for turning on/off the highlight of the negative small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectNegativeFaces1
            (
            );
            /**Sets  the option for turning on/off the highlight of the negative small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectNegativeFaces1
            (
                bool faceSelectNegativeFaces1 /** faceselectnegativefaces1 */ 
            );
            /**Returns  the color for applying to the negative small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceNegativeFacesColor1
            (
            );
            /**Sets  the color for applying to the negative small radius faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceNegativeFacesColor1
            (
                NXOpen::NXColor * faceNegativeFacesColor1 /** facenegativefacescolor1 */ 
            );
            /**Returns  the option for turning on/off the highlight of the negative faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectNegativeFaces2
            (
            );
            /**Sets  the option for turning on/off the highlight of the negative faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectNegativeFaces2
            (
                bool faceSelectNegativeFaces2 /** faceselectnegativefaces2 */ 
            );
            /**Returns  the color for applying to the negative faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceNegativeFacesColor2
            (
            );
            /**Sets  the color for applying to the negative faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceNegativeFacesColor2
            (
                NXOpen::NXColor * faceNegativeFacesColor2 /** facenegativefacescolor2 */ 
            );
            /** Action button for setting color on all faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void FaceSetAllFacesColor
            (
            );
            /**Returns  the option for turning on/off the highlight of the crossover faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectCrossoverFaces
            (
            );
            /**Sets  the option for turning on/off the highlight of the crossover faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectCrossoverFaces
            (
                bool faceSelectCrossoverFaces /** faceselectcrossoverfaces */ 
            );
            /**Returns  the color for applying to the crossover faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceCrossoverFacesColor
            (
            );
            /**Sets  the color for applying to the crossover faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceCrossoverFacesColor
            (
                NXOpen::NXColor * faceCrossoverFacesColor /** facecrossoverfacescolor */ 
            );
            /**Returns  the option for turning on/off the highlight of the undercut area faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectUndercutAreas
            (
            );
            /**Sets  the option for turning on/off the highlight of the undercut area faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectUndercutAreas
            (
                bool faceSelectUndercutAreas /** faceselectundercutareas */ 
            );
            /**Returns  the color for applying to the undercut area faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceUndercutAreasColor
            (
            );
            /**Sets  the color for applying to the undercut area faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceUndercutAreasColor
            (
                NXOpen::NXColor * faceUndercutAreasColor /** faceundercutareascolor */ 
            );
            /**Returns  the option for turning on/off the highlight of the undercut edges on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool FaceSelectUndercutEdges
            (
            );
            /**Sets  the option for turning on/off the highlight of the undercut edges on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectUndercutEdges
            (
                bool faceSelectUndercutEdges /** faceselectundercutedges */ 
            );
            /**Returns  the color for applying to the undercut edges on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * FaceUndercutEdgesColor
            (
            );
            /**Sets  the color for applying to the undercut edges on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceUndercutEdgesColor
            (
                NXOpen::NXColor * faceUndercutEdgesColor /** faceundercutedgescolor */ 
            );
            /**Returns  the translucency for the selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int FaceSelectedFacesTranslucency
            (
            );
            /**Sets  the translucency for the selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceSelectedFacesTranslucency
            (
                int faceSelectedFacesTranslucency /** faceselectedfacestranslucency */ 
            );
            /**Returns  the translucency for the non-selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int FaceNonSelectedFacesTranslucency
            (
            );
            /**Sets  the translucency for the non-selected faces on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetFaceNonSelectedFacesTranslucency
            (
                int faceNonSelectedFacesTranslucency /** facenonselectedfacestranslucency */ 
            );
            /** Action button for invoking the Split Face command on the Face Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void ProcessFaceSplit
            (
            );
            /**Returns  the faces selected for assigning to the cavity or core region. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::SelectFaceList * RegionFaces
            (
            );
            /**Returns  the color for applying to the cavity region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * RegionCavityRegionColor
            (
            );
            /**Sets  the color for applying to the cavity region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionCavityRegionColor
            (
                NXOpen::NXColor * regionCavityRegionColor /** regioncavityregioncolor */ 
            );
            /**Returns  the translucency for applying to the cavity region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int RegionCavityRegionTranslucency
            (
            );
            /**Sets  the translucency for applying to the cavity region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionCavityRegionTranslucency
            (
                int regionCavityRegionTranslucency /** regioncavityregiontranslucency */ 
            );
            /**Returns  the color for applying to the core region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * RegionCoreRegionColor
            (
            );
            /**Sets  the color for applying to the core region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionCoreRegionColor
            (
                NXOpen::NXColor * regionCoreRegionColor /** regioncoreregioncolor */ 
            );
            /**Returns  the translucency for applying to the core region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int RegionCoreRegionTranslucency
            (
            );
            /**Sets  the translucency for applying to the core region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionCoreRegionTranslucency
            (
                int regionCoreRegionTranslucency /** regioncoreregiontranslucency */ 
            );
            /**Returns  the color for applying to the undefined region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * RegionUndefinedRegionColor
            (
            );
            /**Sets  the color for applying to the undefined region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionUndefinedRegionColor
            (
                NXOpen::NXColor * regionUndefinedRegionColor /** regionundefinedregioncolor */ 
            );
            /** Action button for setting color on the cavity, core and undefined region faces on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void RegionSetRegionsColor
            (
            );
            /**Returns  the option for including or removing the crossover region faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionSelectCrossoverRegionFaces
            (
            );
            /**Sets  the option for including or removing the crossover region faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionSelectCrossoverRegionFaces
            (
                bool regionSelectCrossoverRegionFaces /** regionselectcrossoverregionfaces */ 
            );
            /**Returns  the option for including or removing the crossover vertical faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionSelectCrossoverVerticalFaces
            (
            );
            /**Sets  the option for including or removing the crossover vertical faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionSelectCrossoverVerticalFaces
            (
                bool regionSelectCrossoverVerticalFaces /** regionselectcrossoververticalfaces */ 
            );
            /**Returns  the option for including or removing the unknown faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionSelectUnknownFaces
            (
            );
            /**Sets  the option for including or removing the unknown faces in the selection on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionSelectUnknownFaces
            (
                bool regionSelectUnknownFaces /** regionselectunknownfaces */ 
            );
            /**Returns  the option for assigning the selected region faces to the cavity or core region on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Tooling::MWMoldedPartValidationBuilder::AssignToRegion RegionAssignToRegionOption
            (
            );
            /**Sets  the option for assigning the selected region faces to the cavity or core region on the Region Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionAssignToRegionOption
            (
                NXOpen::Tooling::MWMoldedPartValidationBuilder::AssignToRegion regionAssignToRegionOption /** regionassigntoregionoption */ 
            );
            /**Returns  the option for turning on/off the highlight of the internal loop edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionShowInternalLoops
            (
            );
            /**Sets  the option for turning on/off the highlight of the internal loop edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionShowInternalLoops
            (
                bool regionShowInternalLoops /** regionshowinternalloops */ 
            );
            /**Returns  the option for turning on/off the highlight of the parting edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionShowPartingEdges
            (
            );
            /**Sets  the option for turning on/off the highlight of the parting edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionShowPartingEdges
            (
                bool regionShowPartingEdges /** regionshowpartingedges */ 
            );
            /**Returns  the option for turning on/off the highlight of the incomplete loop edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool RegionShowIncompleteLoops
            (
            );
            /**Sets  the option for turning on/off the highlight of the incomplete loop edges. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetRegionShowIncompleteLoops
            (
                bool regionShowIncompleteLoops /** regionshowincompleteloops */ 
            );
            /**Returns  the check scope on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Tooling::MWMoldedPartValidationBuilder::CheckScope InformationCheckScope
            (
            );
            /**Sets  the check scope on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationCheckScope
            (
                NXOpen::Tooling::MWMoldedPartValidationBuilder::CheckScope informationCheckScope /** informationcheckscope */ 
            );
            /**Returns  the face selected face for displaying the face properties. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::SelectFace * InformationInspectFace
            (
            );
            /**Returns  the option for turning on/off the highlight of the boundary edges of the sheet body on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowBoundaryEdges
            (
            );
            /**Sets  the option for turning on/off the highlight of the boundary edges of the sheet body on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowBoundaryEdges
            (
                bool informationShowBoundaryEdges /** informationshowboundaryedges */ 
            );
            /**Returns  the sharp angle limit on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationSharpAngleLimit
            (
            );
            /**Sets  the sharp angle limit on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationSharpAngleLimit
            (
                double informationSharpAngleLimit /** informationsharpanglelimit */ 
            );
            /**Returns  the option for turning on/off the highlight of the sharp edges of the sheet body on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowSharpEdges
            (
            );
            /**Sets  the option for turning on/off the highlight of the sharp edges of the sheet body on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowSharpEdges
            (
                bool informationShowSharpEdges /** informationshowsharpedges */ 
            );
            /**Returns  the range type on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::Tooling::MWMoldedPartValidationBuilder::RangeType InformationRangeType
            (
            );
            /**Sets  the range type on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationRangeType
            (
                NXOpen::Tooling::MWMoldedPartValidationBuilder::RangeType informationRangeType /** informationrangetype */ 
            );
            /**Returns  the upper limit on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimit
            (
            );
            /**Sets  the upper limit on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimit
            (
                double informationUpperLimit /** informationupperlimit */ 
            );
            /**Returns  the option for using a single tolerance for defining the range limit values on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationUseSingleTolerance
            (
            );
            /**Sets  the option for using a single tolerance for defining the range limit values on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUseSingleTolerance
            (
                bool informationUseSingleTolerance /** informationusesingletolerance */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 1 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR01
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 1 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR01
            (
                bool informationShowRangeR01 /** informationshowranger01 */ 
            );
            /**Returns  the lower limit of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR01
            (
            );
            /**Sets  the lower limit of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR01
            (
                double informationLowerLimitR01 /** informationlowerlimitr01 */ 
            );
            /**Returns  the upper limit of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR01
            (
            );
            /**Sets  the upper limit of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR01
            (
                double informationUpperLimitR01 /** informationupperlimitr01 */ 
            );
            /**Returns  the color of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR01
            (
            );
            /**Sets  the color of row 1 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR01
            (
                NXOpen::NXColor * informationColorR01 /** informationcolorr01 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 2 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR02
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 2 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR02
            (
                bool informationShowRangeR02 /** informationshowranger02 */ 
            );
            /**Returns  the lower limit of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR02
            (
            );
            /**Sets  the lower limit of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR02
            (
                double informationLowerLimitR02 /** informationlowerlimitr02 */ 
            );
            /**Returns  the upper limit of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR02
            (
            );
            /**Sets  the upper limit of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR02
            (
                double informationUpperLimitR02 /** informationupperlimitr02 */ 
            );
            /**Returns  the color of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR02
            (
            );
            /**Sets  the color of row 2 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR02
            (
                NXOpen::NXColor * informationColorR02 /** informationcolorr02 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 3 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR03
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 3 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR03
            (
                bool informationShowRangeR03 /** informationshowranger03 */ 
            );
            /**Returns  the lower limit of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR03
            (
            );
            /**Sets  the lower limit of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR03
            (
                double informationLowerLimitR03 /** informationlowerlimitr03 */ 
            );
            /**Returns  the upper limit of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR03
            (
            );
            /**Sets  the upper limit of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR03
            (
                double informationUpperLimitR03 /** informationupperlimitr03 */ 
            );
            /**Returns  the color of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR03
            (
            );
            /**Sets  the color of row 3 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR03
            (
                NXOpen::NXColor * informationColorR03 /** informationcolorr03 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 4 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR04
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 4 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR04
            (
                bool informationShowRangeR04 /** informationshowranger04 */ 
            );
            /**Returns  the lower limit of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR04
            (
            );
            /**Sets  the lower limit of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR04
            (
                double informationLowerLimitR04 /** informationlowerlimitr04 */ 
            );
            /**Returns  the upper limit of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR04
            (
            );
            /**Sets  the upper limit of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR04
            (
                double informationUpperLimitR04 /** informationupperlimitr04 */ 
            );
            /**Returns  the color of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR04
            (
            );
            /**Sets  the color of row 4 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR04
            (
                NXOpen::NXColor * informationColorR04 /** informationcolorr04 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 5 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR05
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 5 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR05
            (
                bool informationShowRangeR05 /** informationshowranger05 */ 
            );
            /**Returns  the lower limit of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR05
            (
            );
            /**Sets  the lower limit of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR05
            (
                double informationLowerLimitR05 /** informationlowerlimitr05 */ 
            );
            /**Returns  the upper limit of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR05
            (
            );
            /**Sets  the upper limit of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR05
            (
                double informationUpperLimitR05 /** informationupperlimitr05 */ 
            );
            /**Returns  the color of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR05
            (
            );
            /**Sets  the color of row 5 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR05
            (
                NXOpen::NXColor * informationColorR05 /** informationcolorr05 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 6 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR06
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 6 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR06
            (
                bool informationShowRangeR06 /** informationshowranger06 */ 
            );
            /**Returns  the lower limit of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR06
            (
            );
            /**Sets  the lower limit of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR06
            (
                double informationLowerLimitR06 /** informationlowerlimitr06 */ 
            );
            /**Returns  the upper limit of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR06
            (
            );
            /**Sets  the upper limit of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR06
            (
                double informationUpperLimitR06 /** informationupperlimitr06 */ 
            );
            /**Returns  the color of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR06
            (
            );
            /**Sets  the color of row 6 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR06
            (
                NXOpen::NXColor * informationColorR06 /** informationcolorr06 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 7 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR07
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 7 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR07
            (
                bool informationShowRangeR07 /** informationshowranger07 */ 
            );
            /**Returns  the lower limit of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR07
            (
            );
            /**Sets  the lower limit of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR07
            (
                double informationLowerLimitR07 /** informationlowerlimitr07 */ 
            );
            /**Returns  the upper limit of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR07
            (
            );
            /**Sets  the upper limit of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR07
            (
                double informationUpperLimitR07 /** informationupperlimitr07 */ 
            );
            /**Returns  the color of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR07
            (
            );
            /**Sets  the color of row 7 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR07
            (
                NXOpen::NXColor * informationColorR07 /** informationcolorr07 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 8 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR08
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 8 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR08
            (
                bool informationShowRangeR08 /** informationshowranger08 */ 
            );
            /**Returns  the lower limit of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR08
            (
            );
            /**Sets  the lower limit of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR08
            (
                double informationLowerLimitR08 /** informationlowerlimitr08 */ 
            );
            /**Returns  the upper limit of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR08
            (
            );
            /**Sets  the upper limit of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR08
            (
                double informationUpperLimitR08 /** informationupperlimitr08 */ 
            );
            /**Returns  the color of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR08
            (
            );
            /**Sets  the color of row 8 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR08
            (
                NXOpen::NXColor * informationColorR08 /** informationcolorr08 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 9 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR09
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 9 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR09
            (
                bool informationShowRangeR09 /** informationshowranger09 */ 
            );
            /**Returns  the lower limit of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR09
            (
            );
            /**Sets  the lower limit of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR09
            (
                double informationLowerLimitR09 /** informationlowerlimitr09 */ 
            );
            /**Returns  the upper limit of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR09
            (
            );
            /**Sets  the upper limit of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR09
            (
                double informationUpperLimitR09 /** informationupperlimitr09 */ 
            );
            /**Returns  the color of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR09
            (
            );
            /**Sets  the color of row 9 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR09
            (
                NXOpen::NXColor * informationColorR09 /** informationcolorr09 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 10 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR10
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 10 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR10
            (
                bool informationShowRangeR10 /** informationshowranger10 */ 
            );
            /**Returns  the lower limit of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR10
            (
            );
            /**Sets  the lower limit of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR10
            (
                double informationLowerLimitR10 /** informationlowerlimitr10 */ 
            );
            /**Returns  the upper limit of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR10
            (
            );
            /**Sets  the upper limit of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR10
            (
                double informationUpperLimitR10 /** informationupperlimitr10 */ 
            );
            /**Returns  the color of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR10
            (
            );
            /**Sets  the color of row 10 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR10
            (
                NXOpen::NXColor * informationColorR10 /** informationcolorr10 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 11 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR11
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 11 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR11
            (
                bool informationShowRangeR11 /** informationshowranger11 */ 
            );
            /**Returns  the lower limit of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR11
            (
            );
            /**Sets  the lower limit of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR11
            (
                double informationLowerLimitR11 /** informationlowerlimitr11 */ 
            );
            /**Returns  the upper limit of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR11
            (
            );
            /**Sets  the upper limit of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR11
            (
                double informationUpperLimitR11 /** informationupperlimitr11 */ 
            );
            /**Returns  the color of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR11
            (
            );
            /**Sets  the color of row 11 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR11
            (
                NXOpen::NXColor * informationColorR11 /** informationcolorr11 */ 
            );
            /**Returns  the option of selecting the small radius faces within the range limit values of row 12 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: bool InformationShowRangeR12
            (
            );
            /**Sets  the option of selecting the small radius faces within the range limit values of row 12 on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationShowRangeR12
            (
                bool informationShowRangeR12 /** informationshowranger12 */ 
            );
            /**Returns  the lower limit of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimitR12
            (
            );
            /**Sets  the lower limit of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimitR12
            (
                double informationLowerLimitR12 /** informationlowerlimitr12 */ 
            );
            /**Returns  the upper limit of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationUpperLimitR12
            (
            );
            /**Sets  the upper limit of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationUpperLimitR12
            (
                double informationUpperLimitR12 /** informationupperlimitr12 */ 
            );
            /**Returns  the color of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: NXOpen::NXColor * InformationColorR12
            (
            );
            /**Sets  the color of row 12 for the small radius faces on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationColorR12
            (
                NXOpen::NXColor * informationColorR12 /** informationcolorr12 */ 
            );
            /**Returns  the lower limit of the range limit values on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: double InformationLowerLimit
            (
            );
            /**Sets  the lower limit of the range limit values on the Information Tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInformationLowerLimit
            (
                double informationLowerLimit /** informationlowerlimit */ 
            );
            /**Returns  the flag that indicates the Apply status of the command, needed only in the interactive environment. 0: "Apply" has not been done before; 1: "Apply" has been done before. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int InApplyStatus
            (
            );
            /**Sets  the flag that indicates the Apply status of the command, needed only in the interactive environment. 0: "Apply" has not been done before; 1: "Apply" has been done before. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetInApplyStatus
            (
                int inApplyStatus /** inapplystatus */ 
            );
            /**Returns  the active tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: int ActiveTabPage
            (
            );
            /**Sets  the active tab page. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void SetActiveTabPage
            (
                int activeTabPage /** activetabpage */ 
            );
            /** Update the eject direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void UpdateEjectDirection
            (
            );
            /** Initialize the MPV data for performing analysis in Molded Part Validation. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void InitMpvData
            (
                int changeBody /** 0: No change in the selected body; 1: Change in the selected body; 2: Change in direction for the selected body. */
            );
            /** Update the MPV data used in performing analysis in Molded Part Validation whenever there are changes in data on dialog. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void UpdateMpvData
            (
            );
            /** Perform model properties calculation if the calculation has not been performed before. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void PerformModelPropertiesCalculation
            (
            );
            /** Perform the sharp corners calculation if the calculation has not been performed before. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void PerformSharpCornersCalculation
            (
            );
            /** Update the sharp edges information based on the new sharp angle limit which has been changed by the user. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void UpdateSharpEdgesInformation
            (
            );
            /** Update the small radius faces information based on the new range limits of the radius which has been changed by the user. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR ug_prod_des_advisor ("Product Design Advisor") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") */
            public: void UpdateSmallRadiusFacesInformation
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
