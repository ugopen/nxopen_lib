#ifndef NXOpen_GEOMETRICUTILITIES_BOUNDINGOBJECTBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_BOUNDINGOBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_BoundingObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/GeometricUtilities_BoundingObjectBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class BoundingObjectBuilder;
    }
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Plane;
    class Point;
    class SelectDisplayableObject;
    namespace GeometricUtilities
    {
        class _BoundingObjectBuilderBuilder;
        class BoundingObjectBuilderImpl;
        /**
            Represents a @link GeometricUtilities::BoundingObjectBuilder GeometricUtilities::BoundingObjectBuilder@endlink 
            
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  BoundingObjectBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** Represents Bounding Object option types. */
            public: enum Method
            {
                MethodExistingCurve/** Existing Curve */,
                MethodProjectPoint/** Project Point */,
                MethodLineBy2Points/** Line by 2 Points */,
                MethodPointAndVector/** Point and Vector */,
                MethodByPlane/** By Plane */
            };

            private: BoundingObjectBuilderImpl * m_boundingobjectbuilder_impl;
            private: friend class  _BoundingObjectBuilderBuilder;
            protected: BoundingObjectBuilder();
            public: ~BoundingObjectBuilder();
            /**Returns  the bounding object method 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::BoundingObjectBuilder::Method BoundingObjectMethod
            (
            );
            /**Sets  the bounding object method 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingObjectMethod
            (
                NXOpen::GeometricUtilities::BoundingObjectBuilder::Method boundingObjectMethod /** boundingobjectmethod */ 
            );
            /**Returns  the existing bounding curve. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodExistingCurve  GeometricUtilities::BoundingObjectBuilder::MethodExistingCurve@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObject * BoundingCurve
            (
            );
            /**Returns  the bounding project point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodProjectPoint  GeometricUtilities::BoundingObjectBuilder::MethodProjectPoint@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundingProjectPoint
            (
            );
            /**Sets  the bounding project point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodProjectPoint  GeometricUtilities::BoundingObjectBuilder::MethodProjectPoint@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingProjectPoint
            (
                NXOpen::Point * projectPoint /** projectpoint */ 
            );
            /**Returns  the bounding point1. This represents first bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundingPoint1
            (
            );
            /**Sets  the bounding point1. This represents first bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingPoint1
            (
                NXOpen::Point * point1 /** point1 */ 
            );
            /**Returns  the bounding point2. This represents second bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundingPoint2
            (
            );
            /**Sets  the bounding point2. This represents second bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points  GeometricUtilities::BoundingObjectBuilder::MethodLineBy2Points@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingPoint2
            (
                NXOpen::Point * point2 /** point2 */ 
            );
            /**Returns  the bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * BoundingPoint
            (
            );
            /**Sets  the bounding point. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the bounding vector. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * BoundingVector
            (
            );
            /**Sets  the bounding vector. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector  GeometricUtilities::BoundingObjectBuilder::MethodPointAndVector@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the bounding plane. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodByPlane  GeometricUtilities::BoundingObjectBuilder::MethodByPlane@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * BoundingPlane
            (
            );
            /**Sets  the bounding plane. This is applicable for @link  GeometricUtilities::BoundingObjectBuilder::MethodByPlane  GeometricUtilities::BoundingObjectBuilder::MethodByPlane@endlink  
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetBoundingPlane
            (
                NXOpen::Plane * plane /** plane */ 
            );
            /**Returns  the intersection reference 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * IntersectionReference
            (
            );
            /**Sets  the intersection reference 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR drafting ("DRAFTING") */
            public: void SetIntersectionReference
            (
                NXOpen::Point * intersectionReference /** intersectionreference */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
