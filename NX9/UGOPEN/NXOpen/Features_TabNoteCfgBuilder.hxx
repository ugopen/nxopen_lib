#ifndef NXOpen_FEATURES_TABNOTECFGBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TABNOTECFGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TabNoteCfgBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_TabNoteCfgBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class TabNoteCfgBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace Features
    {
        class _TabNoteCfgBuilderBuilder;
        class TabNoteCfgBuilderImpl;
        /**
            Represents a @link Features::TabNoteCfgBuilder Features::TabNoteCfgBuilder@endlink 
            
         <br>  Created in NX5.0.3.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  TabNoteCfgBuilder : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** the reference plane type.
                    */
            public: enum Refplane
            {
                RefplaneXy/** 0 : Xc-Yc plane */,
                RefplaneYz/** 1 : Yc-Zc plane */,
                RefplaneZx/** 2 : Zc-Xc plane */,
                RefplaneNegXy/** 3 : - Xc-Yc plane */,
                RefplaneNegYz/** 4 : - Yc-Zc plane */,
                RefplaneNegZx/** 5 : - Zc-Xc plane */
            };

            private: TabNoteCfgBuilderImpl * m_tabnotecfgbuilder_impl;
            private: friend class  _TabNoteCfgBuilderBuilder;
            protected: TabNoteCfgBuilder();
            public: ~TabNoteCfgBuilder();
            /**Returns  the reference plane 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::TabNoteCfgBuilder::Refplane ReferencePlane
            (
            );
            /**Sets  the reference plane 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetReferencePlane
            (
                NXOpen::Features::TabNoteCfgBuilder::Refplane referencePlane /** referenceplane */ 
            );
            /**Returns  the insertion point 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * InsertionPoint
            (
            );
            /**Sets  the insertion point 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetInsertionPoint
            (
                NXOpen::Point * insertionPoint /** insertionpoint */ 
            );
            /**Returns  the block offset 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : None */
            public: double BlockOffset
            (
            );
            /**Sets  the block offset 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetBlockOffset
            (
                double blockOffset /** blockoffset */ 
            );
            /**Returns  the number of rows 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : None */
            public: int NumberOfRows
            (
            );
            /**Sets  the number of rows 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetNumberOfRows
            (
                int numberOfRows /** numberofrows */ 
            );
            /**Returns  the delete previous diagrams 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : None */
            public: bool DeletePreviousDiagrams
            (
            );
            /**Sets  the delete previous diagrams 
             <br>  Created in NX5.0.3.  <br>  
             <br> License requirements : nx_ship_concept ("Ship Concept") */
            public: void SetDeletePreviousDiagrams
            (
                bool deletePreviousDiagrams /** deletepreviousdiagrams */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
