#ifndef NXOpen_PREFERENCES_TRACELINESVIEWPREFERENCES_HXX_INCLUDED
#define NXOpen_PREFERENCES_TRACELINESVIEWPREFERENCES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_TraceLinesViewPreferences.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Preferences_ITraceLinesViewPreferences.hxx>
#include <NXOpen/Preferences_ViewStylePreferencesData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class TraceLinesViewPreferences;
    }
    namespace Preferences
    {
        class ViewPreferences;
    }
    namespace Preferences
    {
        class ITraceLinesViewPreferences;
    }
    namespace Preferences
    {
        class TraceLinesViewPreferencesImpl;
        /** Represents set of Trace Lines View Preferences applicable to drafting views.  <br> To obtain an instance of this class use @link Preferences::ViewPreferences::TraceLines Preferences::ViewPreferences::TraceLines@endlink   <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  TraceLinesViewPreferences: public virtual Preferences::ITraceLinesViewPreferences
        {
            private: TraceLinesViewPreferencesImpl * m_tracelinesviewpreferences_impl;
            private: NXOpen::Preferences::ViewPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit TraceLinesViewPreferences(NXOpen::Preferences::ViewPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~TraceLinesViewPreferences();
            /**Returns  the visible color. The value should be between 1 and 216. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int VisibleColor
            (
            );
            /**Sets  the visible color. The value should be between 1 and 216. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleColor
            (
                int visibleColor /** visible color */ 
            );
            /**Returns  the visible font 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Font VisibleFont
            (
            );
            /**Sets  the visible font 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleFont
            (
                NXOpen::Preferences::Font visibleFont /** visible font */ 
            );
            /**Returns  the visible width 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Width VisibleWidth
            (
            );
            /**Sets  the visible width 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetVisibleWidth
            (
                NXOpen::Preferences::Width visibleWidth /** visible width */ 
            );
            /**Returns  the hidden color. The value should be between 1 and 216.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: int HiddenColor
            (
            );
            /**Sets  the hidden color. The value should be between 1 and 216.
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenColor
            (
                int hiddenColor /** hidden color */ 
            );
            /**Returns  the hidden font 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Font HiddenFont
            (
            );
            /**Sets  the hidden font 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenFont
            (
                NXOpen::Preferences::Font hiddenFont /** hidden font */ 
            );
            /**Returns  the hidden width 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Preferences::Width HiddenWidth
            (
            );
            /**Sets  the hidden width 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetHiddenWidth
            (
                NXOpen::Preferences::Width hiddenWidth /** hidden width */ 
            );
            /**Returns  the status of create gaps 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: bool CreateGapsStatus
            (
            );
            /**Sets  the status of create gaps 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetCreateGapsStatus
            (
                bool createGaps /** create gaps */ 
            );
            /**Returns  the gap size. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double GapSize
            (
            );
            /**Sets  the gap size. 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void SetGapSize
            (
                double gapSize /** gap size */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
