#ifndef NXOpen_CAM_STEPPARAMSBUILDER_HXX_INCLUDED
#define NXOpen_CAM_STEPPARAMSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_StepParamsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class StepParamsBuilder;
    }
    namespace CAM
    {
        class _StepParamsBuilderBuilder;
        class StepParamsBuilderImpl;
        /** Represents a StepParams Builder 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  StepParamsBuilder : public TaggedObject
        {
            private: StepParamsBuilderImpl * m_stepparamsbuilder_impl;
            private: friend class  _StepParamsBuilderBuilder;
            protected: StepParamsBuilder();
            public: ~StepParamsBuilder();
            /** Create a new step params item  @return  the outputted new created item actual position,if error happens, output will be -1 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int Add
            (
                int inputIndex /** the inputted new created item position */,
                double diameter /** the diameter */,
                double length /** the length */,
                double angle /** the angle */,
                double radius /** the radius */
            );
            /** Modify an existing step params item 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Modify
            (
                int nodeIndex /** the index of modified step params */,
                double diameter /** the diameter */,
                double length /** the length */,
                double angle /** the angle */,
                double radius /** the radius */
            );
            /** Delete an existing step params item 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Delete
            (
                int nodeIndex /** the selected entry indx in list */
            );
            /** Move up a step params item 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void MoveUp
            (
                int index /** the index of item which should be moved up*/
            );
            /** Move down a step params item 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void MoveDown
            (
                int index /** the index of item which should be moved down*/
            );
            /** Get the values of an existing step params item 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void Get
            (
                int step /** the step */,
                double* diameter /** the diameter */,
                double* length /** the length */,
                double* angle /** the angle */,
                double* cornerRadius /** the corner radius */
            );
            /**Returns  the number of step params 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: int NumberOfSteps
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
