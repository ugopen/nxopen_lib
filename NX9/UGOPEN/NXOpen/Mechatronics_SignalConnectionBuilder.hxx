#ifndef NXOpen_MECHATRONICS_SIGNALCONNECTIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_SIGNALCONNECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_SignalConnectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Mechatronics_OPCClientBuilder.hxx>
#include <NXOpen/Mechatronics_SignalConnectionBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class SignalConnectionBuilder;
    }
    class Builder;
    namespace Mechatronics
    {
        class SignalAdapter;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _SignalConnectionBuilderBuilder;
        class SignalConnectionBuilderImpl;
        /** Represents a @link Mechatronics::SignalConnectionBuilder Mechatronics::SignalConnectionBuilder@endlink   <br> To create a new instance of this class, use @link Mechatronics::SignalConnectionCollection::CreateSignalConnectionBuilder  Mechatronics::SignalConnectionCollection::CreateSignalConnectionBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  SignalConnectionBuilder : public Builder
        {
            /** Represents the OPC signal data type. */
            public: enum DataType
            {
                DataTypeUnknown/** unknown */,
                DataTypeInteger/** integer */,
                DataTypeFloat/** float   */,
                DataTypeBoolean/** boolean */,
                DataTypeString/** string  */
            };

            private: SignalConnectionBuilderImpl * m_signalconnectionbuilder_impl;
            private: friend class  _SignalConnectionBuilderBuilder;
            protected: SignalConnectionBuilder();
            public: ~SignalConnectionBuilder();
            /**Returns  the adapter object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SignalAdapter * AdapterTag
            (
            );
            /**Sets  the adapter object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetAdapterTag
            (
                NXOpen::Mechatronics::SignalAdapter * adapterTag /** adaptertag */ 
            );
            /**Returns  the signal object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::NXObject * SignalTag
            (
            );
            /**Sets  the signal object. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetSignalTag
            (
                NXOpen::NXObject * signalTag /** signaltag */ 
            );
            /**Returns  the OPC signal name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString OPCSignalName
            (
            );
            /**Sets  the OPC signal name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOPCSignalName
            (
                const NXString & oPCsignalName /** opcsignalname */ 
            );
            /**Sets  the OPC signal name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetOPCSignalName
            (
                const char * oPCsignalName /** opcsignalname */ 
            );
            /**Returns  the OPC signal type. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::SignalConnectionBuilder::DataType OPCSignalType
            (
            );
            /**Sets  the OPC signal type. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOPCSignalType
            (
                NXOpen::Mechatronics::SignalConnectionBuilder::DataType oPCSignalType /** opcsignaltype */ 
            );
            /**Returns  the OPC access previlege type. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXOpen::Mechatronics::OPCClientBuilder::TagAccess OPCSignalAccess
            (
            );
            /**Sets  the OPC access previlege type. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetOPCSignalAccess
            (
                NXOpen::Mechatronics::OPCClientBuilder::TagAccess oPCSignalAccess /** opcsignalaccess */ 
            );
            /**Returns  the mapping result name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: NXString ResultName
            (
            );
            /**Sets  the mapping result name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetResultName
            (
                const NXString & resultName /** resultname */ 
            );
            /**Sets  the mapping result name. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            void SetResultName
            (
                const char * resultName /** resultname */ 
            );
            /**Returns  the mapping direction. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: int StreamIO
            (
            );
            /**Sets  the mapping direction. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_mcd_core ("MECHATRONICS CONCEPT DESIGNER") */
            public: void SetStreamIO
            (
                int streamIO /** streamio */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
