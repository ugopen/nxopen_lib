#ifndef NXOpen_CAM_TURNROUGHFINISHTESTCUT_HXX_INCLUDED
#define NXOpen_CAM_TURNROUGHFINISHTESTCUT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_TurnRoughFinishTestCut.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_TurnRoughFinishTestCut.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class TurnRoughFinishTestCut;
    }
    namespace CAM
    {
        class PostEventsCiBuilder;
    }
    class Point;
    namespace CAM
    {
        class _TurnRoughFinishTestCutBuilder;
        class TurnRoughFinishTestCutImpl;
        /** Represents a test cut builder 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  TurnRoughFinishTestCut : public TaggedObject
        {
            /** the test cut sequence options */
            public: enum SequenceTypes
            {
                SequenceTypesNone/** Test Cut Sequence: None */,
                SequenceTypesTestCutAndFinish/** Test Cut Sequence: Test Cut and Finish */,
                SequenceTypesTestCutOnly/** Test Cut Sequence: Test Cut Only */
            };

            /** the secondary test cut sequence options */
            public: enum SecondarySequenceTypes
            {
                SecondarySequenceTypesNone/** Secondary Test Cut Sequence: None */,
                SecondarySequenceTypesDiameter/** Secondary Test Cut Sequence: Diameter */,
                SecondarySequenceTypesFace/** Secondary Test Cut Sequence: Face */
            };

            /** the test cut type options */
            public: enum CutTypes
            {
                CutTypesAxial/** Test Cut Type: Axial */,
                CutTypesContour/** Test Cut Type: Contour */
            };

            /** the test cut direction options */
            public: enum DirectionTypes
            {
                DirectionTypesReverse/** Test Direction: Reverse */,
                DirectionTypesForward/** Test Direction: Forward */
            };

            /** the test cut measuring position options */
            public: enum MeasuringPositionTypes
            {
                MeasuringPositionTypesAutomatic/** Test Cut Measuring Position: Automatic */,
                MeasuringPositionTypesPoint/** Test Cut Measuring Position: Point */,
                MeasuringPositionTypesSameAsFirstTestCut/** Test Cut Measuring Position: Same as First Test Cut */
            };

            /** the test cut stock mode options */
            public: enum StockModeTypes
            {
                StockModeTypesAutomatic/** Test Cut Stock Mode: Automatic */,
                StockModeTypesSpecify/** Test Cut Stock Mode: Specify */,
                StockModeTypesSameAsFirstTestCut/** Test Cut Stock Mode: Same as First Test Cut */
            };

            /** the test cut stop position options */
            public: enum StopPositionTypes
            {
                StopPositionTypesAutomatic/** Test Cut Stop Position: Automatic */,
                StopPositionTypesPoint/** Test Cut Stop Position: Point */,
                StopPositionTypesLength/** Test Cut Stop Position: Length */,
                StopPositionTypesPercent/** Test Cut Stop Position: Percent of Finish Cut */,
                StopPositionTypesSameAsFirstTestCut/** Test Cut Stop Position: Same as First Test Cut */
            };

            /** the test cut feed in options */
            public: enum FeedInTypes
            {
                FeedInTypesNone/** Test Cut Feed In: None */,
                FeedInTypesLinear/** Test Cut Feed In: Linear */,
                FeedInTypesSameAsProfileEngage/** Test Cut Feed In: Same as Profile eEgange */,
                FeedInTypesSameAsFirstTestCut/** Test Cut Feed In: Same as First Test Cut */
            };

            /** the test cut feed out options */
            public: enum FeedOutTypes
            {
                FeedOutTypesNone/** Test Cut Feed Out: None */,
                FeedOutTypesLinear/** Test Cut Feed Out: Linear */,
                FeedOutTypesSameAsProfileRetract/** Test Cut Feed Out: Same as Profile Retract */,
                FeedOutTypesSameAsFirstTestCut/** Test Cut Feed Out: Same as First Test Cut */
            };

            /** the test cut return move options */
            public: enum ReturnMoveTypes
            {
                ReturnMoveTypesDirect/** Test Cut Return Move: Direct */,
                ReturnMoveTypesRadialAxial/** Test Cut Return Move: Radial -> Axial */,
                ReturnMoveTypesAxialRadial/** Test Cut Return Move: Axial -> Radial */,
                ReturnMoveTypesSameAsFirstTestCut/** Test Cut Return Move: Same as First Test Cut */
            };

            private: TurnRoughFinishTestCutImpl * m_turnroughfinishtestcut_impl;
            private: friend class  _TurnRoughFinishTestCutBuilder;
            protected: TurnRoughFinishTestCut();
            public: ~TurnRoughFinishTestCut();
            /**Returns  the test cut sequence 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::SequenceTypes Sequence
            (
            );
            /**Sets  the test cut sequence 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSequence
            (
                NXOpen::CAM::TurnRoughFinishTestCut::SequenceTypes sequence /** the test cut sequence */
            );
            /**Returns  the secondary test cut sequence 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::SecondarySequenceTypes SecondarySequence
            (
            );
            /**Sets  the secondary test cut sequence 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetSecondarySequence
            (
                NXOpen::CAM::TurnRoughFinishTestCut::SecondarySequenceTypes secondarySequence /** the sequence test cut sequence */
            );
            /**Returns  the test cut type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::CutTypes CutType
            (
            );
            /**Sets  the test cut type 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCutType
            (
                NXOpen::CAM::TurnRoughFinishTestCut::CutTypes cutType /** the test cut type */
            );
            /**Returns  the test cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::DirectionTypes Direction
            (
            );
            /**Sets  the test cut direction 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDirection
            (
                NXOpen::CAM::TurnRoughFinishTestCut::DirectionTypes direction /** the test cut direction */
            );
            /**Returns  the test cut measuring position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::MeasuringPositionTypes MeasuringPosition
            (
            );
            /**Sets  the test cut measuring position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMeasuringPosition
            (
                NXOpen::CAM::TurnRoughFinishTestCut::MeasuringPositionTypes measuringPosition /** the test cut measuring position */
            );
            /**Returns  the test cut measuring point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * MeasuringPoint
            (
            );
            /**Sets  the test cut measuring point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMeasuringPoint
            (
                NXOpen::Point * measuringPoint /** the test cut measuring point */
            );
            /**Returns  the test cut number of passes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: int NumberOfPasses
            (
            );
            /**Sets  the test cut number of passes 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumberOfPasses
            (
                int numberOfPasses /** the test cut number of passes */
            );
            /**Returns  the test cut stock mode 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::StockModeTypes StockMode
            (
            );
            /**Sets  the test cut stock mode 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStockMode
            (
                NXOpen::CAM::TurnRoughFinishTestCut::StockModeTypes stockMode /** the test cut stock mode */
            );
            /**Returns  the test cut stock 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double Stock
            (
            );
            /**Sets  the test cut stock 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStock
            (
                double stock /** the test cut stock */
            );
            /**Returns  the test cut stop position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::StopPositionTypes StopPosition
            (
            );
            /**Sets  the test cut stop position 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopPosition
            (
                NXOpen::CAM::TurnRoughFinishTestCut::StopPositionTypes stopPosition /** the test cut stop position */
            );
            /**Returns  the test cut stop point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * StopPoint
            (
            );
            /**Sets  the test cut stop point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopPoint
            (
                NXOpen::Point * stopPoint /** the test cut stop point */
            );
            /**Returns  the test cut stop distance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double StopDistance
            (
            );
            /**Sets  the test cut stop distance 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopDistance
            (
                double stopDistance /** the test cut stop distance */
            );
            /**Returns  the test cut stop percentage 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double StopPercentage
            (
            );
            /**Sets  the test cut stop percentage 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStopPercentage
            (
                double stopPercentage /** the test cut stop percentage */
            );
            /**Returns  the test cut feed in 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::FeedInTypes FeedIn
            (
            );
            /**Sets  the test cut feed in 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedIn
            (
                NXOpen::CAM::TurnRoughFinishTestCut::FeedInTypes feedIn /** the test cut feed in */
            );
            /**Returns  the test cut feed in angle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double FeedInAngle
            (
            );
            /**Sets  the test cut feed in angle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedInAngle
            (
                double feedInAngle /** the test cut feed in angle */
            );
            /**Returns  the test cut feed in length 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double FeedInLength
            (
            );
            /**Sets  the test cut feed in length 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedInLength
            (
                double feedInLength /** the test cut feed in length */
            );
            /**Returns  the test cut feed out 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::FeedOutTypes FeedOut
            (
            );
            /**Sets  the test cut feed out 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedOut
            (
                NXOpen::CAM::TurnRoughFinishTestCut::FeedOutTypes feedOut /** the test cut feed out */
            );
            /**Returns  the test cut feed out angle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double FeedOutAngle
            (
            );
            /**Sets  the test cut feed out angle 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedOutAngle
            (
                double feedOutAngle /** the test cut feed out angle */
            );
            /**Returns  the test cut feed out length 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double FeedOutLength
            (
            );
            /**Sets  the test cut feed out length 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeedOutLength
            (
                double feedOutLength /** the test cut feed out length */
            );
            /**Returns  the test cut return move 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::TurnRoughFinishTestCut::ReturnMoveTypes ReturnMoveOption
            (
            );
            /**Sets  the test cut return move 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetReturnMoveOption
            (
                NXOpen::CAM::TurnRoughFinishTestCut::ReturnMoveTypes returnMove /** the test cut return move */
            );
            /**Returns  the test cut return move point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ReturnMovePoint
            (
            );
            /**Sets  the test cut return move point 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetReturnMovePoint
            (
                NXOpen::Point * returnMovePoint /** the test cut return move point */
            );
            /**Returns  the start of test cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * StartOfTestCut
            (
            );
            /**Returns  the end of test cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * EndOfTestCut
            (
            );
            /**Returns  the measuring stop 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * MeasuringStop
            (
            );
            /**Returns  the start of finish pass 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * StartOfFinishPass
            (
            );
            /**Returns  the secondary start of test cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * SecondaryStartOfTestCut
            (
            );
            /**Returns  the secondary end of test cut 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * SecondaryEndOfTestCut
            (
            );
            /**Returns  the secondary measuring stop 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: NXOpen::CAM::PostEventsCiBuilder * SecondaryMeasuringStop
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
