#ifndef NXOpen_ASSEMBLIES_PRODUCTINTERFACE_OBJECTBUILDER_HXX_INCLUDED
#define NXOpen_ASSEMBLIES_PRODUCTINTERFACE_OBJECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Assemblies_ProductInterface_ObjectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Features_PartGeometryCopyBuilder.hxx>
#include <NXOpen/libnxopencpp_assemblies_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Assemblies
    {
        namespace ProductInterface
        {
            class ObjectBuilder;
        }
    }
    namespace Assemblies
    {
        namespace ProductInterface
        {
            class InterfaceObject;
        }
    }
    class Builder;
    namespace Features
    {
        class PartGeometryCopyBuilder;
    }
    class NXObject;
    namespace Assemblies
    {
        namespace ProductInterface
        {
            class _ObjectBuilderBuilder;
            class ObjectBuilderImpl;
            /** Represents a Product Interface Object Builder. It creates a set of product interface objects  <br> To create a new instance of this class, use @link Assemblies::ProductInterface::Collection::CreateObjectBuilder  Assemblies::ProductInterface::Collection::CreateObjectBuilder @endlink  <br> 
            Default values.
            <table border="1"> 
             
            <tr><th> 
            Property</th>  <th> 
            Value</th> </tr>
            <tr><td> 
             
            PartGeometryCopy.ObjectType </td> <td> 
             
            BodyCollector </td> </tr> 

            </table>  

             <br>  Created in NX5.0.0.  <br>  
            */
            class NXOPENCPP_ASSEMBLIESEXPORT  ObjectBuilder : public Builder
            {
                /** Version number of product interface builder */
                public: enum BuilderVersion
                {
                    BuilderVersionOriginal/** linked feature cannot select the product interface item */,
                    BuilderVersionOne/** linked feature can directly select the product interface item */
                };

                /** An enum representing settings available for rule checking during creation of WAVE geomtery and interpart expressions  */
                public: enum Wave
                {
                    WaveNoCheck/** no checking for product interface objects */,
                    WaveWarn/** warn user while using non product interface objects */,
                    WavePrevent/** restrict user from using non product interface objects */
                };

                /** An enum representing the settings available for rule checking during creation of mating conditions  */
                public: enum Mate
                {
                    MateNoCheck/** no checking for product interface objects */,
                    MateWarn/** warn user while using non product interface objects */,
                    MatePrevent/** restrict user from using non product interface objects */
                };

                private: ObjectBuilderImpl * m_objectbuilder_impl;
                private: friend class  _ObjectBuilderBuilder;
                protected: ObjectBuilder();
                public: ~ObjectBuilder();
                /**Returns  the part geometry copy 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::PartGeometryCopyBuilder * PartGeometryCopy
                (
                );
                /** Adds an object to the product interface; currently supported types are expressions and geometry   @return  the product interface object created 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::InterfaceObject * AddProductInterfaceObject1
                (
                    NXOpen::NXObject * nxObject /** Selected object to add */,
                    const NXString & name /** User defined name of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & description /** User comments of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool reverseDirection /** Flag to specify whether to reverse the direction of the source object */
                );
                /** Adds an object to the product interface; currently supported types are expressions and geometry   @return  the product interface object created 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::Assemblies::ProductInterface::InterfaceObject * AddProductInterfaceObject1
                (
                    NXOpen::NXObject * nxObject /** Selected object to add */,
                    const char * name /** User defined name of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * description /** User comments of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool reverseDirection /** Flag to specify whether to reverse the direction of the source object */
                );
                /** Edits a product interface object  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void EditProductInterfaceObject
                (
                    NXOpen::Assemblies::ProductInterface::InterfaceObject * productInterface /** Product interface object to be edited */,
                    NXOpen::NXObject * nxObject /** Selected object to add */,
                    const NXString & name /** User defined name of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const NXString & description /** User comments of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool reverseDirection /** Flag to specify whether to reverse the direction of the source object */
                );
                /** Edits a product interface object  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                void EditProductInterfaceObject
                (
                    NXOpen::Assemblies::ProductInterface::InterfaceObject * productInterface /** Product interface object to be edited */,
                    NXOpen::NXObject * nxObject /** Selected object to add */,
                    const char * name /** User defined name of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    const char * description /** User comments of selected object   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                    bool reverseDirection /** Flag to specify whether to reverse the direction of the source object */
                );
                /** Gets the version of this builder.  @return  
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::ObjectBuilder::BuilderVersion GetBuilderVersion
                (
                );
                /** Sets the version of this builder. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetBuilderVersion
                (
                    NXOpen::Assemblies::ProductInterface::ObjectBuilder::BuilderVersion version /** version */ 
                );
                /**Returns  the current rule setting for use during creation of WAVE geomtery and interpart expressions 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::ObjectBuilder::Wave WaveSetting
                (
                );
                /**Sets  the current rule setting for use during creation of WAVE geomtery and interpart expressions 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetWaveSetting
                (
                    NXOpen::Assemblies::ProductInterface::ObjectBuilder::Wave waveSetting /** wave setting */ 
                );
                /**Returns  the current rule setting for use during creation of mating conditions 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::ObjectBuilder::Mate MateSetting
                (
                );
                /**Sets  the current rule setting for use during creation of mating conditions 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetMateSetting
                (
                    NXOpen::Assemblies::ProductInterface::ObjectBuilder::Mate mateSetting /** mate setting */ 
                );
                /** Adds an object to the product interface; currently supported types are expressions and geometry   @return  the product interface object created 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::InterfaceObject * AddProductInterfaceObject
                (
                    NXOpen::NXObject * nxItem /** nx item to be added to the product interface */
                );
                /** Adds an object to the product interface; currently supported types are expressions and geometry. If the object already exists, it becomes active.   @return  the product interface object created or modified 
                 <br>  Created in NX8.5.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::ProductInterface::InterfaceObject * AddProductInterface
                (
                    NXOpen::NXObject * nxItem /** nx item to be added to the product interface */,
                    bool* alreadyExisted /** alreadyexisted */ 
                );
                /** Removes an object from the product interface; currently supported types are expressions and geometry  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void RemoveProductInterfaceObject
                (
                    NXOpen::Assemblies::ProductInterface::InterfaceObject * prodIntItem /** product interface object to be removed from the product interface set*/
                );
                /** Returns a list of product interface objects in the part  @return  objects in the product interface 
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXOpen::Assemblies::ProductInterface::InterfaceObject *> QueryProductInterfaceObjects
                (
                    NXOpen::NXObject * part /** part whose product interface objects have to be queried */
                );
                /** Sets the user comments on the product interface item passed in  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetUserComments
                (
                    NXOpen::Assemblies::ProductInterface::InterfaceObject * prodIntItem /** product interface item on which the user comments have to set */,
                    const NXString & userComments /** user comments to be set on specified product interface item   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Sets the user comments on the product interface item passed in  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                void SetUserComments
                (
                    NXOpen::Assemblies::ProductInterface::InterfaceObject * prodIntItem /** product interface item on which the user comments have to set */,
                    const char * userComments /** user comments to be set on specified product interface item   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
                );
                /** Updates the attributes of the product interface items in the part  
                 <br>  Created in NX5.0.0.  <br>  
                 <br> License requirements : None */
                public: void UpdateAttributesFromPart
                (
                    NXOpen::NXObject * part /** part, product interface objects of which need to have their  attributes updated */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
