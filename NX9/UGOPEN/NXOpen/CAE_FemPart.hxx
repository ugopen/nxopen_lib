#ifndef NXOpen_CAE_FEMPART_HXX_INCLUDED
#define NXOpen_CAE_FEMPART_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_FemPart.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BaseFemPart.hxx>
#include <NXOpen/CAE_BaseFemPart.hxx>
#include <NXOpen/CAE_EdgeSticherBuilder.hxx>
#include <NXOpen/CAE_FemSynchronizeOptions.hxx>
#include <NXOpen/CAE_UnStitchEdgeBuilder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class FemPart;
    }
    class Body;
    namespace CAE
    {
        class BaseFemPart;
    }
    namespace CAE
    {
        class CADModeling;
    }
    namespace CAE
    {
        class CAEBody;
    }
    namespace CAE
    {
        class EdgeSticherBuilder;
    }
    namespace CAE
    {
        class FemSynchronizeOptions;
    }
    namespace CAE
    {
        class MeshPointCollection;
    }
    namespace CAE
    {
        class UnStitchEdgeBuilder;
    }
    class NXColor;
    class Part;
    namespace CAE
    {
        class _FemPartBuilder;
        class FemPartImpl;
        /**  @brief  Represents an NX part of type .fem.  

           <br> Use the @link PartCollection PartCollection@endlink  class to load or create a part.  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  FemPart : public CAE::BaseFemPart
        {
            /** Used to specify the option of specifying bodies to use from the CAD Part 
                        while creating the FEMMain object. */
            public: enum UseBodiesOption
            {
                UseBodiesOptionSelectedBodies/** Use selected bodies from the cad part */,
                UseBodiesOptionVisibleBodies/** Use all visible bodies from the cad part */,
                UseBodiesOptionAllBodies/** Use all bodies from the cad part */
            };

            private: FemPartImpl * m_fempart_impl;
            private: friend class  _FemPartBuilder;
            protected: FemPart();
            public: ~FemPart();
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error. Axisymmtric abstraction 
                        type is set internally on the data model using pre-nx9 techniques
                        based on solver name and analysis type. 
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::FemPart::FinalizeCreation CAE::FemPart::FinalizeCreation@endlink  that includes abstraction type instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::FemPart::FinalizeCreation that includes abstraction type instead.") void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const NXString & idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating
                                                                                          the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error. Axisymmtric abstraction 
                        type is set internally on the data model using pre-nx9 techniques
                        based on solver name and analysis type. 
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::FemPart::FinalizeCreation CAE::FemPart::FinalizeCreation@endlink  that includes abstraction type instead. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const char * idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating
                                                                                          the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const char * solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const NXString & idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating
                                                                                          the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::BaseFemPart::AxisymAbstractionType abstractionType /** the axisymmetric abstraction type. Refer to NX help for more information */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each sim part file. The second call to the
                        method will raise an error. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FinalizeCreation
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part*/,
                const char * idealizedPartName /** the name of the idealized part to be created   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating
                                                                                          the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const char * solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::BaseFemPart::AxisymAbstractionType abstractionType /** the axisymmetric abstraction type. Refer to NX help for more information */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each fem part file. The second call to the
                        method will raise an error. The new method
                        signature is for managed mode (Teamcenter). 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void FinalizeCreationManaged
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part */,
                bool createIdealPart /** idealized part created if true */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::BaseFemPart::AxisymAbstractionType abstractionType /** the axisymmetric abstraction type. Refer to NX help for more information */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each fem part file. The second call to the
                        method will raise an error. The new method
                        signature is for managed mode (Teamcenter). 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FinalizeCreationManaged
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part */,
                bool createIdealPart /** idealized part created if true */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const char * solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                NXOpen::CAE::BaseFemPart::AxisymAbstractionType abstractionType /** the axisymmetric abstraction type. Refer to NX help for more information */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each fem part file. The second call to the
                        method will raise an error. The new method
                        signature is for managed mode (Teamcenter). 
                        Axisymmtric abstraction type is set internally 
                        on the data model using pre-nx9 techniques
                        based on solver name and analysis type.
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::FemPart::FinalizeCreationManaged CAE::FemPart::FinalizeCreationManaged@endlink  that includes abstraction type instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::FemPart::FinalizeCreationManaged that includes abstraction type instead.") void FinalizeCreationManaged
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part */,
                bool createIdealPart /** idealized part created if true */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const NXString & solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const NXString & analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /** Finalizes the creation of the fem part file.
                        This method should be called immediately after
                        creating the fem part file.
                        This method should be called only once for
                        each fem part file. The second call to the
                        method will raise an error. The new method
                        signature is for managed mode (Teamcenter). 
                        Axisymmtric abstraction type is set internally 
                        on the data model using pre-nx9 techniques
                        based on solver name and analysis type.
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::FemPart::FinalizeCreationManaged CAE::FemPart::FinalizeCreationManaged@endlink  that includes abstraction type instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void FinalizeCreationManaged
            (
                NXOpen::Part * cadPart /** the cad part to be associated with the fem part */,
                bool createIdealPart /** idealized part created if true */,
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** The option to specify bodies to use from the cad part while creating the fem part */,
                const std::vector<NXOpen::Body *> & bodies /** the bodies to be used */,
                NXOpen::CAE::FemSynchronizeOptions * geometrySyncOptions /** geometry sync options */,
                const char * solverTypeName /** the name of the solver. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                const char * analysisTypeType /** the name of the analysis type. Refer to NX help for more information   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */,
                std::vector<NXString> & description /** description   <br>  NOTE: The full Unicode character set is not supported for this parameter.  <br> */
            );
            /**Returns  the idealized part associated with the fem part
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Part * IdealizedPart
            (
            );
            /**Returns  the master cad part associated with the fem part
                    
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Part * MasterCadPart
            (
            );
            /** Creates a @link  CAE::FemSynchronizeOptions   CAE::FemSynchronizeOptions @endlink 
                     @return  the syncrhonize options object created 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::FemSynchronizeOptions * NewFemSynchronizeOptions
            (
            );
            /** Creates a @link CAE::EdgeSticherBuilder CAE::EdgeSticherBuilder@endlink  
                     @return   
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::EdgeSticherBuilder * CreateEdgeSticherBuilder
            (
            );
            /** Creates a @link CAE::UnStitchEdgeBuilder CAE::UnStitchEdgeBuilder@endlink  
                     @return   
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::UnStitchEdgeBuilder * CreateUnStitchEdgeBuilder
            (
            );
            /** Gets geometry data associated with the fem part
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetGeometryData
            (
                NXOpen::CAE::FemPart::UseBodiesOption* useBodiesOption /** Flag if all were selected */,
                std::vector<NXOpen::Body *> & listOfBodies /** Array of tags of selected bodies */,
                NXOpen::CAE::FemSynchronizeOptions ** psyncData /** Syncrhonize options object */
            );
            /** Sets the geometry data associated with the fem part
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetGeometryData
            (
                NXOpen::CAE::FemPart::UseBodiesOption useBodiesOption /** Flag if all were selected */,
                const std::vector<NXOpen::Body *> & listOfBodies /** Array of tags of selected bodies */,
                NXOpen::CAE::FemSynchronizeOptions * psyncData /** Syncrhonize options object */
            );
            /** Sets the mesh preferences data associated with the fem part
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetMeshPreferences
            (
                NXOpen::NXColor * tinyEdgeColor /** Tiny edge color */,
                double snapTolerance /** Snap Tolerance */,
                int projectNodesToCadOption /** Project nodes to CAD */,
                double projectionTolerance /** Projection tolerance */,
                int refineTessellation /** Refine tessellation 0 or 1*/
            );
            /** Returns the mesh preferences data associated with the fem part
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetMeshPreferences
            (
                NXOpen::NXColor ** tinyEdgeColor /** Tiny edge color */,
                double* snapTolerance /** Snap Tolerance */,
                int* projectNodesToCadOption /** Project nodes to CAD */,
                double* projectionTolerance /** Projection tolerance */,
                int* refineTessellation /** Refine tessellation 0 or 1*/
            );
            /** RECREATE NEW on polygon body
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void BodyRecreateNew
            (
                NXOpen::Body * body /** body */ 
            );
            /** DELETE on polygon body given an underlying solid body
                    
             <br>  @deprecated Deprecated in NX9.0.0.  Use @link CAE::FemPart::PolygonBodyDelete CAE::FemPart::PolygonBodyDelete@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public:  NX_DEPRECATED("Deprecated in NX9.0.0.  Use CAE::FemPart::PolygonBodyDelete instead.") void BodyDelete
            (
                NXOpen::Body * body /** body */ 
            );
            /** DELETE on polygon body
                    
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void PolygonBodyDelete
            (
                NXOpen::CAE::CAEBody * body /** body */ 
            );
            /** RECREATE UPDATE on polygon body
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void BodyRecreateUpdate
            (
                NXOpen::Body * body /** body */ 
            );
            /** CREATE POLYGON BODY on excluded ug tag
                    
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void CreatePolygonBody
            (
                NXOpen::Body * body /** body */ 
            );
            /**Returns  the cad part associated with the fem part.
                        Returns nothing if the fem is not associated to cad or that cad is not loaded.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Part * AssociatedCadPart
            (
            );
            /** Sets the cad part associated with the fem as work.
                        This method expects the fem to be current displayed part.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetAssociatedCadAsWork
            (
                NXOpen::Part * cadPart /** CAD part associated to the fem part */
            );
            /** Sets the fem as work, if associated cad is the current work.
                        This method expects the fem to be current displayed part.
                    
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFemAsWork
            (
            );


            /** Returns the CADModeling instance belonging to this part 
             <br>  Created in NX8.5.0.  <br>  
            */
            public: NXOpen::CAE::CADModeling *CadModeling();
            /** Returns the meshpoint collector collection belonging to the part 
             <br>  Created in NX3.0.0.  <br>  
            */
            public: NXOpen::CAE::MeshPointCollection *MeshPoints();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
