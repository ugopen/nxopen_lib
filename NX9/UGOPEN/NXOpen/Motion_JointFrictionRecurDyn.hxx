#ifndef NXOpen_MOTION_JOINTFRICTIONRECURDYN_HXX_INCLUDED
#define NXOpen_MOTION_JOINTFRICTIONRECURDYN_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_JointFrictionRecurDyn.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class JointFrictionRecurDyn;
    }
    class Expression;
    namespace Motion
    {
        class _JointFrictionRecurDynBuilder;
        class JointFrictionRecurDynImpl;
        /** Represents a recurdyn joint friction object 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  JointFrictionRecurDyn : public TaggedObject
        {
            /** Joint friction effect */
            public: enum FrictionEffect
            {
                FrictionEffectAll/** all */ ,
                FrictionEffectStiction/** stiction */ ,
                FrictionEffectSliding/** sliding */ 
            };

            /** Joint friction yoke type */
            public: enum FrictionYokeType
            {
                FrictionYokeTypeI/** i */ ,
                FrictionYokeTypeJ/** j */ 
            };

            /** Joint friction overlap_delta */
            public: enum FrictionOverlapDelta
            {
                FrictionOverlapDeltaConstant/** constant */ ,
                FrictionOverlapDeltaIncrease/** increase */ ,
                FrictionOverlapDeltaDecrease/** decrease */ 
            };

            private: JointFrictionRecurDynImpl * m_jointfrictionrecurdyn_impl;
            private: friend class  _JointFrictionRecurDynBuilder;
            protected: JointFrictionRecurDyn();
            public: ~JointFrictionRecurDyn();
            /**Returns  the mu static 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MuStaticExpression Motion::JointFrictionRecurDyn::MuStaticExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MuStaticExpression to query or edit it.") double MuStatic
            (
            );
            /**Sets  the mu static 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MuStaticExpression Motion::JointFrictionRecurDyn::MuStaticExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MuStaticExpression to query or edit it.") void SetMuStatic
            (
                double muStatic /** mu static */ 
            );
            /**Returns  the mu dynamic 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MuDynamicExpression Motion::JointFrictionRecurDyn::MuDynamicExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MuDynamicExpression to query or edit it.") double MuDynamic
            (
            );
            /**Sets  the mu dynamic 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MuDynamicExpression Motion::JointFrictionRecurDyn::MuDynamicExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MuDynamicExpression to query or edit it.") void SetMuDynamic
            (
                double muDynamic /** mu dynamic */ 
            );
            /**Returns  the stiction transition velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression to query or edit it.") double StictionTransitionVelocity
            (
            );
            /**Sets  the stiction transition velocity 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::StictionTransitionVelocityExpression to query or edit it.") void SetStictionTransitionVelocity
            (
                double stictionTransitionVelocity /** stiction transition velocity */ 
            );
            /**Returns  the max stiction deformation 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression to query or edit it.") double MaxStictionDeformation
            (
            );
            /**Sets  the max stiction deformation 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxStictionDeformationExpression to query or edit it.") void SetMaxStictionDeformation
            (
                double maxStictionDeformation /** max stiction deformation */ 
            );
            /**Returns  the effect 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::JointFrictionRecurDyn::FrictionEffect Effect
            (
            );
            /**Sets  the effect 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetEffect
            (
                NXOpen::Motion::JointFrictionRecurDyn::FrictionEffect effect /** effect */ 
            );
            /**Returns  the preload 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool Preload
            (
            );
            /**Sets  the preload 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPreload
            (
                bool preload /** preload */ 
            );
            /**Returns  the reaction force 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool ReactionForce
            (
            );
            /**Sets  the reaction force 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetReactionForce
            (
                bool reactionForce /** reaction force */ 
            );
            /**Returns  the bend moment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool BendMoment
            (
            );
            /**Sets  the bend moment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetBendMoment
            (
                bool bendMoment /** bend moment */ 
            );
            /**Returns  the torsional moment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool TorsionalMoment
            (
            );
            /**Sets  the torsional moment 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTorsionalMoment
            (
                bool torsionalMoment /** torsional moment */ 
            );
            /**Returns  the static equ 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool StaticEqu
            (
            );
            /**Sets  the static equ 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetStaticEqu
            (
                bool staticEqu /** static equ */ 
            );
            /**Returns  the yoke type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::JointFrictionRecurDyn::FrictionYokeType YokeType
            (
            );
            /**Sets  the yoke type 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetYokeType
            (
                NXOpen::Motion::JointFrictionRecurDyn::FrictionYokeType yokeType /** yoke type */ 
            );
            /**Returns  the ball radius 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::BallRadiusExpression Motion::JointFrictionRecurDyn::BallRadiusExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::BallRadiusExpression to query or edit it.") double BallRadius
            (
            );
            /**Sets  the ball radius 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::BallRadiusExpression Motion::JointFrictionRecurDyn::BallRadiusExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::BallRadiusExpression to query or edit it.") void SetBallRadius
            (
                double ballRadius /** ball radius */ 
            );
            /**Returns  the pin radius 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::PinRadiusExpression Motion::JointFrictionRecurDyn::PinRadiusExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::PinRadiusExpression to query or edit it.") double PinRadius
            (
            );
            /**Sets  the pin radius 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::PinRadiusExpression Motion::JointFrictionRecurDyn::PinRadiusExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::PinRadiusExpression to query or edit it.") void SetPinRadius
            (
                double pinRadius /** pin radius */ 
            );
            /**Returns  the bending arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::BendingArmExpression Motion::JointFrictionRecurDyn::BendingArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::BendingArmExpression to query or edit it.") double BendingArm
            (
            );
            /**Sets  the bending arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::BendingArmExpression Motion::JointFrictionRecurDyn::BendingArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::BendingArmExpression to query or edit it.") void SetBendingArm
            (
                double bendingArm /** bending arm */ 
            );
            /**Returns  the friction arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::FrictionArmExpression Motion::JointFrictionRecurDyn::FrictionArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::FrictionArmExpression to query or edit it.") double FrictionArm
            (
            );
            /**Sets  the friction arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::FrictionArmExpression Motion::JointFrictionRecurDyn::FrictionArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::FrictionArmExpression to query or edit it.") void SetFrictionArm
            (
                double frictionArm /** friction arm */ 
            );
            /**Returns  the reaction arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::ReactionArmExpression Motion::JointFrictionRecurDyn::ReactionArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::ReactionArmExpression to query or edit it.") double ReactionArm
            (
            );
            /**Sets  the reaction arm 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::ReactionArmExpression Motion::JointFrictionRecurDyn::ReactionArmExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::ReactionArmExpression to query or edit it.") void SetReactionArm
            (
                double reactionArm /** reaction arm */ 
            );
            /**Returns  the initial overlap 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::InitialOverlapExpression Motion::JointFrictionRecurDyn::InitialOverlapExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::InitialOverlapExpression to query or edit it.") double InitialOverlap
            (
            );
            /**Sets  the initial overlap 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::InitialOverlapExpression Motion::JointFrictionRecurDyn::InitialOverlapExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::InitialOverlapExpression to query or edit it.") void SetInitialOverlap
            (
                double initialOverlap /** initial overlap */ 
            );
            /**Returns  the force preload 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::ForcePreloadExpression Motion::JointFrictionRecurDyn::ForcePreloadExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::ForcePreloadExpression to query or edit it.") double ForcePreload
            (
            );
            /**Sets  the force preload 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::ForcePreloadExpression Motion::JointFrictionRecurDyn::ForcePreloadExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::ForcePreloadExpression to query or edit it.") void SetForcePreload
            (
                double forcePreload /** force preload */ 
            );
            /**Returns  the torque preload 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::TorquePreloadExpression Motion::JointFrictionRecurDyn::TorquePreloadExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::TorquePreloadExpression to query or edit it.") double TorquePreload
            (
            );
            /**Sets  the torque preload 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::TorquePreloadExpression Motion::JointFrictionRecurDyn::TorquePreloadExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::TorquePreloadExpression to query or edit it.") void SetTorquePreload
            (
                double torquePreload /** torque preload */ 
            );
            /**Returns  the overlap delta 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::JointFrictionRecurDyn::FrictionOverlapDelta OverlapDelta
            (
            );
            /**Sets  the overlap delta 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOverlapDelta
            (
                NXOpen::Motion::JointFrictionRecurDyn::FrictionOverlapDelta overlapDelta /** overlap delta */ 
            );
            /**Returns  the max friction force 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxFrictionForceExpression Motion::JointFrictionRecurDyn::MaxFrictionForceExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxFrictionForceExpression to query or edit it.") double MaxFrictionForce
            (
            );
            /**Sets  the max friction force 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxFrictionForceExpression Motion::JointFrictionRecurDyn::MaxFrictionForceExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxFrictionForceExpression to query or edit it.") void SetMaxFrictionForce
            (
                double maxFrictionForce /** max friction force */ 
            );
            /**Returns  the enable force 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool EnableForce
            (
            );
            /**Sets  the enable force 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetEnableForce
            (
                bool enableForce /** enable force */ 
            );
            /**Returns  the max friction torque 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression to query or edit it.") double MaxFrictionTorque
            (
            );
            /**Sets  the max friction torque 
             <br>  @deprecated Deprecated in NX8.0.0.  Obtain the expression using @link Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression@endlink  to query or edit it. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public:  NX_DEPRECATED("Deprecated in NX8.0.0.  Obtain the expression using Motion::JointFrictionRecurDyn::MaxFrictionTorqueExpression to query or edit it.") void SetMaxFrictionTorque
            (
                double maxFrictionTorque /** max friction torque */ 
            );
            /**Returns  the enable torque 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool EnableTorque
            (
            );
            /**Sets  the enable torque 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetEnableTorque
            (
                bool enableTorque /** enable torque */ 
            );
            /**Returns  the mu static expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MuStaticExpression
            (
            );
            /**Returns  the mu dynamic expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MuDynamicExpression
            (
            );
            /**Returns  the stiction transition_velocity expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * StictionTransitionVelocityExpression
            (
            );
            /**Returns  the max stiction deformation expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxStictionDeformationExpression
            (
            );
            /**Returns  the ball radius expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BallRadiusExpression
            (
            );
            /**Returns  the pin radius expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PinRadiusExpression
            (
            );
            /**Returns  the bending arm expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * BendingArmExpression
            (
            );
            /**Returns  the friction arm expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FrictionArmExpression
            (
            );
            /**Returns  the reaction arm expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ReactionArmExpression
            (
            );
            /**Returns  the initial overlap expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * InitialOverlapExpression
            (
            );
            /**Returns  the force preload expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ForcePreloadExpression
            (
            );
            /**Returns  the torque preload expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * TorquePreloadExpression
            (
            );
            /**Returns  the max friction force expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxFrictionForceExpression
            (
            );
            /**Returns  the max friction torque expression
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaxFrictionTorqueExpression
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
