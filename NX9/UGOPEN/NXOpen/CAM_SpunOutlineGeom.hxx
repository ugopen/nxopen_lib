#ifndef NXOpen_CAM_SPUNOUTLINEGEOM_HXX_INCLUDED
#define NXOpen_CAM_SPUNOUTLINEGEOM_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_SpunOutlineGeom.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_SpunOutlineGeom.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class SpunOutlineGeom;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace CAM
    {
        class _SpunOutlineGeomBuilder;
        class SpunOutlineGeomImpl;
        /** Represents a spun outline geometry object for turning boundary 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  SpunOutlineGeom : public TaggedObject, public virtual GeometricUtilities::IComponentBuilder
        {
            /** the creation methods */
            public: enum CreationTypes
            {
                CreationTypesAutomatic/** spun outline created automatically */,
                CreationTypesPlanesAtAngles/** spun outline created by specifying planes at angles */,
                CreationTypesPlanesThroughPoints/** spun outline created by specifying planes through points */,
                CreationTypesSameAsPart/** spun outline created by the same method as part */,
                CreationTypesNone/** no spun outline */
            };

            private: SpunOutlineGeomImpl * m_spunoutlinegeom_impl;
            private: friend class  _SpunOutlineGeomBuilder;
            protected: SpunOutlineGeom();
            public: ~SpunOutlineGeom();
            /**Returns  the creation method 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::SpunOutlineGeom::CreationTypes CreationMethod
            (
            );
            /**Sets  the creation method 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetCreationMethod
            (
                NXOpen::CAM::SpunOutlineGeom::CreationTypes newValue /** the creation method */
            );
            /** Define the section planes at angles 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPlanesAtAngles
            (
                const std::vector<double> & startAngle /** array of start angles for each set */,
                const std::vector<double> & incrementAngle /** array of angle increments for each set */,
                const std::vector<int> & numberOfPlanes /** array of plane numbers for each set */
            );
            /** Define the section planes through points 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPlanesThroughPoints
            (
                const std::vector<NXOpen::Point *> & points /** array of start points for each set */,
                const std::vector<double> & incrementAngle /** array of angle increments for each set */,
                const std::vector<int> & numberOfPlanes /** array of plane numbers for each set */
            );
            /** Get the sets of the section planes at angles 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void GetPlanesAtAngles
            (
                std::vector<double> & startAngle /** array of start angles for each set */,
                std::vector<double> & incrementAngle /** array of angle increments for each set */,
                std::vector<int> & numberOfPlanes /** array of plane numbers for each set */
            );
            /** Get the sets of the section planes through points 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void GetPlanesThroughPoints
            (
                std::vector<NXOpen::Point *> & points /** array of start points for each set */,
                std::vector<double> & incrementAngle /** array of angle increments for each set */,
                std::vector<int> & numberOfPlanes /** array of plane numbers for each set */
            );
            /** Generate the spun outline  @return  the flag if generated successfully 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: bool Generate
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
