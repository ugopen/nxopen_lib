#ifndef NXOpen_CAE_AEROSTRUCTURES_TABLEPARAMVALUE_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_TABLEPARAMVALUE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_TableParamValue.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_LaminateQuery.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class TableParamValue;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LaminateQuery;
        }
    }
    class Expression;
    class NXObject;
    class TaggedObject;
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _TableParamValueBuilder;
            class TableParamValueImpl;
            /**  @brief  Represents a proper table parameter value  

               <br> No support for KF  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  TableParamValue : public NXOpen::NXObject
            {
                private: TableParamValueImpl * m_tableparamvalue_impl;
                private: friend class  _TableParamValueBuilder;
                protected: TableParamValue();
                public: ~TableParamValue();
                /** Sets the validated status 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetIsValidated
                (
                    bool isValidated /** isvalidated */ 
                );
                /** Sets a int column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetIntColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    const std::vector<int> & columnValues /** the list of column values */
                );
                /** Sets a int column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetIntColumnValue
                (
                    const char * columnId /** columnid */ ,
                    const std::vector<int> & columnValues /** the list of column values */
                );
                /** Sets a string column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetStringColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    std::vector<NXString> & columnValues /** the list of column values */
                );
                /** Sets a string column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetStringColumnValue
                (
                    const char * columnId /** columnid */ ,
                    std::vector<NXString> & columnValues /** the list of column values */
                );
                /** Sets a bool column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetBoolColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    const std::vector<bool> & columnValues /** the list of column values */
                );
                /** Sets a bool column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetBoolColumnValue
                (
                    const char * columnId /** columnid */ ,
                    const std::vector<bool> & columnValues /** the list of column values */
                );
                /** Sets a scalar column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetScalarColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    NXOpen::Unit * unit /** Unit in which the column values are expressed. */,
                    const std::vector<double> & columnValues /** the list of column values */
                );
                /** Sets a scalar column value list 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetScalarColumnValue
                (
                    const char * columnId /** columnid */ ,
                    NXOpen::Unit * unit /** Unit in which the column values are expressed. */,
                    const std::vector<double> & columnValues /** the list of column values */
                );
                /** Update an expression column value list with the expression array passed as input
                                Adjust its length and delete previous expressions if necessary 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void UpdateExpressionColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    NXOpen::Unit * unit /** Unit of the expressions. */,
                    const std::vector<NXOpen::Expression *> & columnValues /** the list of column values */
                );
                /** Update an expression column value list with the expression array passed as input
                                Adjust its length and delete previous expressions if necessary 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void UpdateExpressionColumnValue
                (
                    const char * columnId /** columnid */ ,
                    NXOpen::Unit * unit /** Unit of the expressions. */,
                    const std::vector<NXOpen::Expression *> & columnValues /** the list of column values */
                );
                /** Gets the expression from expression column at a certain row  @return  the expression at columnId,rowId
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Expression * GetExpression
                (
                    const NXString & columnId /** columnid */ ,
                    int rowId /** rowid */ 
                );
                /** Gets the expression from expression column at a certain row  @return  the expression at columnId,rowId
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Expression * GetExpression
                (
                    const char * columnId /** columnid */ ,
                    int rowId /** rowid */ 
                );
                /** Update a laminate column value list with the laminate array passed as input
                                Adjust its length and delete previous laminates if necessary 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void UpdateLaminateColumnValue
                (
                    const NXString & columnId /** columnid */ ,
                    const std::vector<NXOpen::CAE::AeroStructures::LaminateQuery *> & columnValues /** the list of column values */
                );
                /** Update a laminate column value list with the laminate array passed as input
                                Adjust its length and delete previous laminates if necessary 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void UpdateLaminateColumnValue
                (
                    const char * columnId /** columnid */ ,
                    const std::vector<NXOpen::CAE::AeroStructures::LaminateQuery *> & columnValues /** the list of column values */
                );
                /** Gets the laminate query from a laminate column at a certain row 
                                If no laminate exists for that row or the row is outside the current table size a new laminate is created and returned.
                                This new laminate is registered with the laminate query manager of margin calculation owning the property table
                                It is inteded to be stored in a laminate column using @link TableParamValue::UpdateLaminateColumnValue TableParamValue::UpdateLaminateColumnValue@endlink 
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::LaminateQuery * GetLaminate
                (
                    const NXString & columnId /** columnid */ ,
                    int rowId /** rowid */ ,
                    NXOpen::TaggedObject * propTable /** property table required to create laminate query object */
                );
                /** Gets the laminate query from a laminate column at a certain row 
                                If no laminate exists for that row or the row is outside the current table size a new laminate is created and returned.
                                This new laminate is registered with the laminate query manager of margin calculation owning the property table
                                It is inteded to be stored in a laminate column using @link TableParamValue::UpdateLaminateColumnValue TableParamValue::UpdateLaminateColumnValue@endlink 
                            
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::CAE::AeroStructures::LaminateQuery * GetLaminate
                (
                    const char * columnId /** columnid */ ,
                    int rowId /** rowid */ ,
                    NXOpen::TaggedObject * propTable /** property table required to create laminate query object */
                );
                /** Changes the length of the columns
                            
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void ChangeColumnsLength
                (
                    int rowId /** rowid */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
