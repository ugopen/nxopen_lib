#ifndef NXOpen_CAE_ATTACHELEMENTSBUILDER_HXX_INCLUDED
#define NXOpen_CAE_ATTACHELEMENTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AttachElementsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AttachElementsBuilder;
    }
    class Builder;
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    class Expression;
    class Point;
    class SelectDisplayableObjectList;
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _AttachElementsBuilderBuilder;
        class AttachElementsBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::AttachElementsBuilder NXOpen::CAE::AttachElementsBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateAttachElementsBuilder  NXOpen::CAE::NodeElementManager::CreateAttachElementsBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AttachElementsBuilder : public NXOpen::Builder
        {
            /** attach types */
            public: enum AttachOption
            {
                AttachOptionSplitAndAttach/**split and attach */,
                AttachOptionSplitOnly/**split only */
            };

            /** split line types */
            public: enum SplitLineOption
            {
                SplitLineOptionElementEdge/**split by element edge */,
                SplitLineOptionTwoPoints/**split by two points */,
                SplitLineOptionEdge/**split by edge/curve */
            };

            private: AttachElementsBuilderImpl * m_attachelementsbuilder_impl;
            private: friend class  _AttachElementsBuilderBuilder;
            protected: AttachElementsBuilder();
            public: ~AttachElementsBuilder();
            /**Returns  an attach option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AttachElementsBuilder::AttachOption AttachType
            (
            );
            /**Sets  an attach option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetAttachType
            (
                NXOpen::CAE::AttachElementsBuilder::AttachOption attachmentType /** attachmenttype */ 
            );
            /**Returns  the selected mesh 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectTaggedObjectList * MeshSelection
            (
            );
            /**Returns  a split line option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AttachElementsBuilder::SplitLineOption SplitLineType
            (
            );
            /**Sets  a split line option 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSplitLineType
            (
                NXOpen::CAE::AttachElementsBuilder::SplitLineOption lineType /** linetype */ 
            );
            /**Returns  a start point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PointStart
            (
            );
            /**Sets  a start point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPointStart
            (
                NXOpen::Point * startPoint /** startpoint */ 
            );
            /**Returns  an end point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * PointEnd
            (
            );
            /**Sets  an end point 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPointEnd
            (
                NXOpen::Point * endPoint /** endpoint */ 
            );
            /**Returns  the element edges
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SelectElementsBuilder * ElementEdges
            (
            );
            /**Returns  the curve 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectDisplayableObjectList * EdgeCurve
            (
            );
            /**Returns  the split size 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SplitSize
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
