#ifndef NXOpen_FEATURES_SUBDIVISION_DRAWCAGEDATA_HXX_INCLUDED
#define NXOpen_FEATURES_SUBDIVISION_DRAWCAGEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_Subdivision_DrawCageData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_Subdivision_CageManipulatorData.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace Subdivision
        {
            class DrawCageData;
        }
    }
    class Builder;
    namespace Features
    {
        namespace Subdivision
        {
            class CageManipulatorData;
        }
    }
    class NXObject;
    namespace Features
    {
        namespace Subdivision
        {
            class _DrawCageDataBuilder;
            class DrawCageDataImpl;
            /** Represents a @link NXOpen::Features::Subdivision::DrawCageData NXOpen::Features::Subdivision::DrawCageData@endlink  data.  <br> To create a new instance of this class, use @link NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateDrawCageData  NXOpen::Features::Subdivision::SubdivisionBodyCollection::CreateDrawCageData @endlink  <br> 
             <br>  Created in NX1872.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  DrawCageData : public NXOpen::Builder
            {
                /** The face shape type */
                public: enum FaceShapeType
                {
                    FaceShapeTypeQuad/** Quadrilateral shape */,
                    FaceShapeTypePolygon/** General polygon */
                };

                 /** Contains object selection information to be used to create a patch. 
                 <br>  Created in NX1872.0.0.  <br>  
                */
                public:
                struct SelectionData
                {
                    public: /** The selected or snapped object, can be an existing vertex or a point */NXOpen::NXObject * SnappedObject;
                    public: /** The point at which object is selected or snapped. */NXOpen::Point3d SnappedPosition;
                    public: /** Flag indicating if inferring is paused. */bool IsInferringPaused;
                    public: SelectionData() :
                        SnappedObject(),
                        SnappedPosition(),
                        IsInferringPaused()
                    {
                    }
                    /** Constructor for the SelectionData struct. */ 
                    public: SelectionData(NXOpen::NXObject * snappedObjectInitial /** The selected or snapped object, can be an existing vertex or a point */, 
                            const NXOpen::Point3d &snappedPositionInitial /** The point at which object is selected or snapped. */, 
                            bool isInferringPausedInitial /** Flag indicating if inferring is paused. */) :
                        SnappedObject(snappedObjectInitial),
                        SnappedPosition(snappedPositionInitial),
                        IsInferringPaused(isInferringPausedInitial)
                    {
                    }
                };

                private: DrawCageDataImpl * m_drawcagedata_impl;
                private: friend class  _DrawCageDataBuilder;
                protected: DrawCageData();
                public: ~DrawCageData();
                /**Returns  the face shape. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::DrawCageData::FaceShapeType FaceShape
                (
                );
                /**Sets  the face shape. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void SetFaceShape
                (
                    NXOpen::Features::Subdivision::DrawCageData::FaceShapeType shape /** shape */ 
                );
                /**Returns  the cage manipulation data. Cage manipulator helps create new and edit existing vertices. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::Subdivision::CageManipulatorData * CageManipulator
                (
                );
                /** Adds a vertex and creates a patch if possible. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void AddVertex
                (
                    const NXOpen::Features::Subdivision::DrawCageData::SelectionData & selectionData /** selectiondata */ 
                );
                /** Closes the polygon and creates a patch. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void ClosePolygon
                (
                );
                /** Discards the current polygon and restarts new. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : nx_subdivision (" NX SUBDIVISION") */
                public: void ResetStartPoint
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
