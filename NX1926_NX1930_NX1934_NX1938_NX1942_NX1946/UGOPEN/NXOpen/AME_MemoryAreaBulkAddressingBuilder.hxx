#ifndef NXOpen_AME_MEMORYAREABULKADDRESSINGBUILDER_HXX_INCLUDED
#define NXOpen_AME_MEMORYAREABULKADDRESSINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_MemoryAreaBulkAddressingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_MultipleObjectsBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class MemoryAreaBulkAddressingBuilder;
    }
    namespace AME
    {
        class MultipleObjectsBuilder;
    }
    class SelectNXObjectList;
    namespace AME
    {
        class _MemoryAreaBulkAddressingBuilderBuilder;
        class MemoryAreaBulkAddressingBuilderImpl;
        /** JA class for MemoryAreaBulkAddressing dialog <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateMemoryAreaBulkAddressingBuilder  NXOpen::AME::AMEManager::CreateMemoryAreaBulkAddressingBuilder @endlink  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  MemoryAreaBulkAddressingBuilder : public NXOpen::AME::MultipleObjectsBuilder
        {
            private: MemoryAreaBulkAddressingBuilderImpl * m_memoryareabulkaddressingbuilder_impl;
            private: friend class  _MemoryAreaBulkAddressingBuilderBuilder;
            protected: MemoryAreaBulkAddressingBuilder();
            public: ~MemoryAreaBulkAddressingBuilder();
            /**Returns  the selected object whose start address will be changed. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::SelectNXObjectList * SelectionObject
            (
            );
            /**Returns  the first start address 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: int StartAddress
            (
            );
            /**Sets  the first start address 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetStartAddress
            (
                int startAddress /** startaddress */ 
            );
            /**Returns  the Synchonize modules
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: bool SyncAddress
            (
            );
            /**Sets  the Synchonize modules
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSyncAddress
            (
                bool syncAddress /** syncaddress */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
