#ifndef NXOpen_MFG_AM_SIMAPPLICATIONMANAGER_HXX_INCLUDED
#define NXOpen_MFG_AM_SIMAPPLICATIONMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_SimApplicationManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class SimApplicationManager;
        }
    }
    class Session;
    namespace Mfg
    {
        namespace AM
        {
            class SimSupportBuilder;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class SimulationSupport;
        }
    }
    namespace Mfg
    {
        namespace AM
        {
            class SimApplicationManagerImpl;

            /// \cond NX_NO_DOC 
            /** Represents the Additive Manufacturing Simulation application  <br> Use the static method in this class to obtain an instance.  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class MFGAMOPENCPPEXPORT  SimApplicationManager
            {
                private: SimApplicationManagerImpl * m_simapplicationmanager_impl;
                private: NXOpen::Session* m_owner;
                /// \cond NX_NO_DOC 
                public: explicit SimApplicationManager(NXOpen::Session *owner);


                /// \endcond 
                public: 
                /**Returns the tag of this object.  */
                tag_t Tag() const; 
                private: static SimApplicationManager* theSimApplicationManager;
                /** Returns the SimApplicationManager object for the running session which serves as the 'gateway' class for the application API.  
                    References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                    Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
                */
                public: static SimApplicationManager* GetSimApplicationManager(NXOpen::Session *owner);
                public: ~SimApplicationManager();
                /** Creates Builder which allows for Creating Simulation Supports 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SimSupportBuilder * CreateSupportBuilder
                (
                );
                /** Retrieves the simulation support builder object  @return   the simulation support builder 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Mfg::AM::SimSupportBuilder * GetSupportBuilder
                (
                    NXOpen::Mfg::AM::SimulationSupport * tagSupport /** the simulation support */
                );
            }; //lint !e1712 default constructor not defined for class  


            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
