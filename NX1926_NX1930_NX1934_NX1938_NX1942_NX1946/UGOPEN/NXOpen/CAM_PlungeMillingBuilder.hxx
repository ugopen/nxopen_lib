#ifndef NXOpen_CAM_PLUNGEMILLINGBUILDER_HXX_INCLUDED
#define NXOpen_CAM_PLUNGEMILLINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_PlungeMillingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_Boundary.hxx>
#include <NXOpen/CAM_Geometry.hxx>
#include <NXOpen/CAM_PlanarOperationBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class PlungeMillingBuilder;
    }
    namespace CAM
    {
        class Boundary;
    }
    namespace CAM
    {
        class CutLevel;
    }
    namespace CAM
    {
        class Geometry;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class InheritableToolDepBuilder;
    }
    namespace CAM
    {
        class PlanarOperationBuilder;
    }
    namespace CAM
    {
        class StepUpBuilder;
    }
    namespace CAM
    {
        class _PlungeMillingBuilderBuilder;
        class PlungeMillingBuilderImpl;
        /** Represents a PlungeMilling Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::OperationCollection::CreatePlungeMillingBuilder  NXOpen::CAM::OperationCollection::CreatePlungeMillingBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  PlungeMillingBuilder : public NXOpen::CAM::PlanarOperationBuilder
        {
            /** Available types for transfer method type in planar mill operation */
            public: enum TransferMethodTypes
            {
                TransferMethodTypesClearancePlane/** Clearance Plane */,
                TransferMethodTypesAutomaticPlane/** Previous Plane/Automatic */
            };

            private: PlungeMillingBuilderImpl * m_plungemillingbuilder_impl;
            private: friend class  _PlungeMillingBuilderBuilder;
            protected: PlungeMillingBuilder();
            public: ~PlungeMillingBuilder();
            /**Returns  the max cut width distance builder (InheritableToolDepBuilder) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * MaxCutWidth
            (
            );
            /**Returns  the step ahead distance builder (inheritable tool dependent double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableToolDepBuilder * StepAhead
            (
            );
            /**Returns  the Retract Out Angle builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * RetractAngle
            (
            );
            /**Returns  the transfer Method  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::PlungeMillingBuilder::TransferMethodTypes TransferMethod
            (
            );
            /**Sets  the transfer Method  
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetTransferMethod
            (
                NXOpen::CAM::PlungeMillingBuilder::TransferMethodTypes transferMthd /** the transfer Method */
            );
            /**Returns  the clearance vertical builder (inheritable double) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * VerticalClearance
            (
            );
            /**Returns  the clearance minimum builder (inheritable double) 
             <br>  @deprecated Deprecated in NX8.0.0.  Use @link CAM::CutParameters::HolderClearance CAM::CutParameters::HolderClearance@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.0.0.  Use CAM::CutParameters::HolderClearance instead.") NXOpen::CAM::InheritableDoubleBuilder * MinClearance
            (
            );
            /**Returns  the step up customizable item builder 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::StepUpBuilder * StepUp
            (
            );
            /**Returns  the cut level builder 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::CutLevel * CutLevel
            (
            );
            /**Returns  the blank geometry builder
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::Geometry * BlankGeometry
            (
            );
            /**Returns  the trim boundary 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::Boundary * TrimBoundary
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
