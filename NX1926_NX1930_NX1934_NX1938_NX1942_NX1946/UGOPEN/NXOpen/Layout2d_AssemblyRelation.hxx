#ifndef NXOpen_LAYOUT2D_ASSEMBLYRELATION_HXX_INCLUDED
#define NXOpen_LAYOUT2D_ASSEMBLYRELATION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_AssemblyRelation.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class AssemblyRelation;
    }
    class NXObject;
    namespace Layout2d
    {
        class _AssemblyRelationBuilder;
        class AssemblyRelationImpl;
        /** Represents Assembly::Relation object <br> Instances of this class can be accessed through AssociativeAssemblyBuilder  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  AssemblyRelation : public NXOpen::NXObject
        {
            private: AssemblyRelationImpl * m_assemblyrelation_impl;
            private: friend class  _AssemblyRelationBuilder;
            protected: AssemblyRelation();
            public: ~AssemblyRelation();
            /**Returns  a flag indicating associativity state 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool Associative
            (
            );
            /**Sets  a flag indicating associativity state 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  a flag indicating whether the prototype structure will be syncronized 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SyncStructure
            (
            );
            /**Sets  a flag indicating whether the prototype structure will be syncronized 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSyncStructure
            (
                bool syncStructure /** syncstructure */ 
            );
            /**Returns  a flag indicating whether the prototype content will be syncronized 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool SyncContent
            (
            );
            /**Sets  a flag indicating whether the prototype content will be syncronized 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSyncContent
            (
                bool syncContent /** synccontent */ 
            );
            /** Returns the flag indicating whether the prototype is inferred from 2D component 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetPrototypeInferred
            (
            );
            /**Returns  the prototype file spec 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString PrototypeFileSpec
            (
            );
            /**Sets  the prototype file spec 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPrototypeFileSpec
            (
                const NXString & fileSpec /** filespec */ 
            );
            /**Sets  the prototype file spec 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            void SetPrototypeFileSpec
            (
                const char * fileSpec /** filespec */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
