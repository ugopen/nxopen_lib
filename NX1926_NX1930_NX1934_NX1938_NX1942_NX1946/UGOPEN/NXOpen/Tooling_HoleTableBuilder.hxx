#ifndef NXOpen_TOOLING_HOLETABLEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_HOLETABLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_HoleTableBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_HoleTableBuilder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class HoleTableBuilder;
    }
    namespace Annotations
    {
        class HoleTableBuilder;
    }
    namespace Tooling
    {
        class _HoleTableBuilderBuilder;
        class HoleTableBuilderImpl;
        /** Represents a @link NXOpen::Tooling::HoleTableBuilder NXOpen::Tooling::HoleTableBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Tooling::HoleTableCollection::CreateHoleTableBuilder  NXOpen::Tooling::HoleTableCollection::CreateHoleTableBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  HoleTableBuilder : public NXOpen::Annotations::HoleTableBuilder
        {
            private: HoleTableBuilderImpl * m_holetablebuilder_impl;
            private: friend class  _HoleTableBuilderBuilder;
            protected: HoleTableBuilder();
            public: ~HoleTableBuilder();
            /**Returns  the use custom type symbol toggle, which specifies whether to use custom type symbol 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool UseCustomTypeSymbol
            (
            );
            /**Sets  the use custom type symbol toggle, which specifies whether to use custom type symbol 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR nx_electrode_wizard ("NX Electrode Wizard") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") */
            public: void SetUseCustomTypeSymbol
            (
                bool useCustomTypeSymbol /** usecustomtypesymbol */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
