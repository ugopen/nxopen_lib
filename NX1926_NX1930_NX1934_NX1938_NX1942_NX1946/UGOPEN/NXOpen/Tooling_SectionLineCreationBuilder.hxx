#ifndef NXOpen_TOOLING_SECTIONLINECREATIONBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SECTIONLINECREATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SectionLineCreationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SectionLineCreationBuilder;
    }
    class Builder;
    class Direction;
    class Line;
    class Point;
    namespace Tooling
    {
        class _SectionLineCreationBuilderBuilder;
        class SectionLineCreationBuilderImpl;
        /**
              Represents a @link NXOpen::Tooling::SectionLineCreationBuilder NXOpen::Tooling::SectionLineCreationBuilder@endlink  which is 
              used to create or edit the section line creation.
             <br> To create a new instance of this class, use @link NXOpen::Tooling::ToolingDrawingCollection::CreateSectionLineCreationBuilder  NXOpen::Tooling::ToolingDrawingCollection::CreateSectionLineCreationBuilder @endlink  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SectionLineCreationBuilder : public NXOpen::Builder
        {
            private: SectionLineCreationBuilderImpl * m_sectionlinecreationbuilder_impl;
            private: friend class  _SectionLineCreationBuilderBuilder;
            protected: SectionLineCreationBuilder();
            public: ~SectionLineCreationBuilder();
            /** Reverse vector direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void ReverseVector
            (
            );
            /**Returns  the vector direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * VectorDefineDirection
            (
            );
            /**Sets  the vector direction 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetVectorDefineDirection
            (
                NXOpen::Direction * vectorDefineDirection /** vectordefinedirection */ 
            );
            /**Returns  the pnt select point 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * SelectPoint
            (
            );
            /**Sets  the pnt select point 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSelectPoint
            (
                NXOpen::Point * pntSelectPoint /** pntselectpoint */ 
            );
            /** Define the cut segment position 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void PointSubFunction
            (
            );
            /** Remove the last cut segment 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void RemoveLast
            (
                NXOpen::Line * curveTag /** curvetag */ 
            );
            /** Remove all cut segments 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void RemoveAll
            (
                const std::vector<NXOpen::Line *> & curveList /** curvelist */ 
            );
            /** Create temporary line 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") */
            public: NXOpen::Line * CreateTemporaryLine
            (
                const NXOpen::Point3d & pointData /** pointdata */ ,
                const NXOpen::Vector3d & direction /** direction */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
