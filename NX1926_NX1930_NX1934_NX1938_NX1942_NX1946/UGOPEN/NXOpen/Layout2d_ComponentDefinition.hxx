#ifndef NXOpen_LAYOUT2D_COMPONENTDEFINITION_HXX_INCLUDED
#define NXOpen_LAYOUT2D_COMPONENTDEFINITION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_ComponentDefinition.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layout2d_Types.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class ComponentDefinition;
    }
    class DisplayableObject;
    class NXObject;
    namespace Layout2d
    {
        class _ComponentDefinitionBuilder;
        class ComponentDefinitionImpl;
        /** Represents a component definition. The definition contains sketch curves, sketch dimensions
                and drafting annotations representing a two dimensional reusable sketch component. <br>   <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  ComponentDefinition : public NXOpen::NXObject
        {
            private: ComponentDefinitionImpl * m_componentdefinition_impl;
            private: friend class  _ComponentDefinitionBuilder;
            protected: ComponentDefinition();
            public: ~ComponentDefinition();
            /** Renames definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void Rename
            (
                const NXString & definitionPath /** Path of the definition to rename */,
                const NXString & newName /** New definition name */
            );
            /** Renames definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void Rename
            (
                const char * definitionPath /** Path of the definition to rename */,
                const char * newName /** New definition name */
            );
            /** Deletes definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void Delete
            (
                const NXString & definitionPath /** Path of the definition to delete */
            );
            /** Deletes definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void Delete
            (
                const char * definitionPath /** Path of the definition to delete */
            );
            /** Updates definition preview 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void UpdateImage
            (
                const NXString & definitionPath /** Path of the definition to rename */,
                const NXString & imagePath /** Path of the image file used to update definition preview */
            );
            /** Updates definition preview 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void UpdateImage
            (
                const char * definitionPath /** Path of the definition to rename */,
                const char * imagePath /** Path of the image file used to update definition preview */
            );
            /** Returns an array of specified members in this component definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void GetMembers
            (
                NXOpen::Layout2d::Layout2dComponentMemberType memberType /** membertype */ ,
                std::vector<NXOpen::DisplayableObject *> & members /** members */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
