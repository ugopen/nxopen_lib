#ifndef NXOpen_LINEDESIGNER_UINODEUTILS_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_UINODEUTILS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_UINodeUtils.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/LineDesigner_MountBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class UINodeUtils;
    }
    class Session;
    namespace Assemblies
    {
        class Partition;
    }
    namespace LineDesigner
    {
        class ModelProductionUnit;
    }
    namespace LineDesigner
    {
        class MountBuilder;
    }
    class NXObject;
    namespace PDM
    {
        class AttributeGroup;
    }
    class Part;
    namespace LineDesigner
    {
        class UINodeUtilsImpl;
        /** Represents a utils of line designer for journaling uinode methods  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  UINodeUtils
        {
            private: UINodeUtilsImpl * m_uinodeutils_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit UINodeUtils(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static UINodeUtils* theUINodeUtils;
            /** Returns the UINodeUtils object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static UINodeUtils* GetUINodeUtils(NXOpen::Session *owner);
            public: ~UINodeUtils();
            /** To calculate and set attribute group name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void CalculateAndSetNameOfAGAttr
            (
                NXOpen::PDM::AttributeGroup * attributeGroup /** attributegroup */ ,
                const NXString & subAGName /** subagname */ ,
                const NXString & resourceName /** resourcename */ 
            );
            /** To calculate and set attribute group name 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void CalculateAndSetNameOfAGAttr
            (
                NXOpen::PDM::AttributeGroup * attributeGroup /** attributegroup */ ,
                const char * subAGName /** subagname */ ,
                const char * resourceName /** resourcename */ 
            );
            /** To rename partition 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void Rename
            (
                NXOpen::LineDesigner::ModelProductionUnit * objtg /** objtg */ ,
                const NXString & newName /** newname */ 
            );
            /** To rename partition 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void Rename
            (
                NXOpen::LineDesigner::ModelProductionUnit * objtg /** objtg */ ,
                const char * newName /** newname */ 
            );
            /** To rename partition in new PLNAV 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void RenamePartition
            (
                NXOpen::Assemblies::Partition * objtg /** objtg */ ,
                const NXString & newName /** newname */ 
            );
            /** To rename partition in new PLNAV 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void RenamePartition
            (
                NXOpen::Assemblies::Partition * objtg /** objtg */ ,
                const char * newName /** newname */ 
            );
            /** To get item revision name 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString GetItemRevisionName
            (
                NXOpen::Part * partTag /** parttag */ 
            );
            /** To set item revision name 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetItemRevisionName
            (
                NXOpen::Part * partTag /** parttag */ ,
                const NXString & itemRevName /** itemrevname */ 
            );
            /** To set item revision name 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetItemRevisionName
            (
                NXOpen::Part * partTag /** parttag */ ,
                const char * itemRevName /** itemrevname */ 
            );
            /** To move connectors while DnD of assembly 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void MoveConnectors
            (
                NXOpen::NXObject * partOccTag /** partocctag */ ,
                NXOpen::NXObject * targ /** targ */ ,
                double value /** value */ ,
                bool isNotBondConstraint /** isnotbondconstraint */ ,
                bool isPropogationAllowed /** ispropogationallowed */ 
            );
            /** To get occurence name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXString GetOccurrenceName
            (
                NXOpen::NXObject * instanceTag /** instancetag */ 
            );
            /** To set occurence name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetOccurrenceName
            (
                NXOpen::NXObject * instanceTag /** instancetag */ ,
                const NXString & occurrenceName /** occurrencename */ 
            );
            /** To set occurence name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetOccurrenceName
            (
                NXOpen::NXObject * instanceTag /** instancetag */ ,
                const char * occurrenceName /** occurrencename */ 
            );
            /** To delete constraint 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void DeleteConstraint
            (
                NXOpen::NXObject * constraintTag /** constrainttag */ 
            );
            /** Set Target Production Unit 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetProductionUnitAsWorkPart
            (
                NXOpen::NXObject * constraintTag /** constrainttag */ 
            );
            /** Save final tool transformation parameters 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SaveFinalTransformedToolConnectorDetailsAfterMoveAndMount
            (
                NXOpen::LineDesigner::MountBuilder * builderTag /** buildertag */ ,
                const NXOpen::Point3d & finalTransformedToolConnectorPointAfterMoveAndMount /** finaltransformedtoolconnectorpointaftermoveandmount */ ,
                const NXOpen::Vector3d & finalTransformedToolConnectorXDirAfterMoveAndMount /** finaltransformedtoolconnectorxdiraftermoveandmount */ ,
                const NXOpen::Vector3d & finalTransformedToolConnectorYDirAfterMoveAndMount /** finaltransformedtoolconnectorydiraftermoveandmount */ 
            );
            /** Retreive final tool transformation parameters 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void RetreiveFinalTransformedToolConnectorDetailsAfterMoveAndMount
            (
                NXOpen::LineDesigner::MountBuilder * builderTag /** buildertag */ ,
                NXOpen::Point3d* finalTransformedToolConnectorPointAfterMoveAndMount /** finaltransformedtoolconnectorpointaftermoveandmount */ ,
                NXOpen::Vector3d* finalTransformedToolConnectorXDirAfterMoveAndMount /** finaltransformedtoolconnectorxdiraftermoveandmount */ ,
                NXOpen::Vector3d* finalTransformedToolConnectorYDirAfterMoveAndMount /** finaltransformedtoolconnectorydiraftermoveandmount */ 
            );
            /** Move Tool to Robot and orient as per connector 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void MoveToolToRobotAndOrientAsPerConnector
            (
                NXOpen::LineDesigner::MountBuilder * mountBuilder /** mountbuilder */ 
            );
            /** Move Tool to original position 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void MoveToolToOriginalPosition
            (
                NXOpen::LineDesigner::MountBuilder * mountBuilder /** mountbuilder */ ,
                NXOpen::NXObject * toolBaseConnectorTag /** toolbaseconnectortag */ 
            );
            /** Set column occurrence type For Edit In Cell 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetColumnOccurrenceType
            (
                NXOpen::NXObject * partOcc /** partocc */ ,
                const NXString & newPropertyValu /** newpropertyvalu */ 
            );
            /** Set column occurrence type For Edit In Cell 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            void SetColumnOccurrenceType
            (
                NXOpen::NXObject * partOcc /** partocc */ ,
                const char * newPropertyValu /** newpropertyvalu */ 
            );
            /** To Expand/Collaps End Item
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void ExpandCollapsEndItem
            (
                const std::vector<NXOpen::NXObject *> & selectedEndItem /** selectedenditem */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
