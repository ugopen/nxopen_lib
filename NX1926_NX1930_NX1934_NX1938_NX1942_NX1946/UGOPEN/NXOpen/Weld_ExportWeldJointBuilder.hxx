#ifndef NXOpen_WELD_EXPORTWELDJOINTBUILDER_HXX_INCLUDED
#define NXOpen_WELD_EXPORTWELDJOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Weld_ExportWeldJointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Weld_ExportWeldBuilder.hxx>
#include <NXOpen/libnxopencpp_weld_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Weld
    {
        class ExportWeldJointBuilder;
    }
    class CoordinateSystem;
    class Expression;
    namespace Weld
    {
        class ExportWeldBuilder;
    }
    namespace Weld
    {
        class _ExportWeldJointBuilderBuilder;
        class ExportWeldJointBuilderImpl;
        /** Represents exporting weld joints.  <br> To create a new instance of this class, use @link NXOpen::Weld::WeldManager::CreateExportWeldJointBuilder  NXOpen::Weld::WeldManager::CreateExportWeldJointBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AttributeOrigin </term> <description> 
         
        Object </description> </item> 

        <item><term> 
         
        ChordalTolerance.Value </term> <description> 
         
        2.54 (millimeters part), 0.1 (inches part) </description> </item> 

        <item><term> 
         
        Output </term> <description> 
         
        IntermediateFile </description> </item> 

        </list> 

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_WELDEXPORT  ExportWeldJointBuilder : public NXOpen::Weld::ExportWeldBuilder
        {
            /** The output face info types */
            public: enum OutputFaceInfoTypes
            {
                OutputFaceInfoTypesNone/** No face normals output */,
                OutputFaceInfoTypesForFilletsOnly/** Will output face normals at each point along the joint curve if leg lengths are defined. Will also output a separate record if leg lengths are defined for the opposite side */,
                OutputFaceInfoTypesAll/** Will output face normals at each point along the joint curve. Will also output a separate record for the opposite side */
            };

            private: ExportWeldJointBuilderImpl * m_exportweldjointbuilder_impl;
            private: friend class  _ExportWeldJointBuilderBuilder;
            protected: ExportWeldJointBuilder();
            public: ~ExportWeldJointBuilder();
            /**Returns  the local coordinate system used to calculate the output points on welding joint. 
                        If no coordinate system is provided, the points will be calculated in terms of the global coordinate system. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * WorkCoordinateSystem
            (
            );
            /**Sets  the local coordinate system used to calculate the output points on welding joint. 
                        If no coordinate system is provided, the points will be calculated in terms of the global coordinate system. 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetWorkCoordinateSystem
            (
                NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
            );
            /**Returns  the minimum chordal length used to create a discrete version of the weld path, points along it will be output into 
                        xml file to represent the weld path 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ChordalTolerance
            (
            );
            /**Returns  the indication to output face normals at each point if leg lengths are defined. Will also output a separate record if leg lengths are defined for the opposite side 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputFilletFaceInfo
            (
            );
            /**Sets  the indication to output face normals at each point if leg lengths are defined. Will also output a separate record if leg lengths are defined for the opposite side 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetOutputFilletFaceInfo
            (
                bool status /** status */ 
            );
            /**Returns  the indication to project opposite side points onto target faces if the point is not located on the target face. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ProjectToTarget
            (
            );
            /**Sets  the indication to project opposite side points onto target faces if the point is not located on the target face. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetProjectToTarget
            (
                bool projectStatus /** projectstatus */ 
            );
            /**Returns  the indication to include attributes from the managed attribute associated to a design feature, if present. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool IncludeAttributesFromMAG
            (
            );
            /**Sets  the indication to include attributes from the managed attribute associated to a design feature, if present. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetIncludeAttributesFromMAG
            (
                bool status /** status */ 
            );
            /**Returns  the indication to output face normals at each point of the welding joint and opposite side 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Weld::ExportWeldJointBuilder::OutputFaceInfoTypes OutputFaceInfo
            (
            );
            /**Sets  the indication to output face normals at each point of the welding joint and opposite side 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : structure_weld ("STRUCTURE WELD") */
            public: void SetOutputFaceInfo
            (
                NXOpen::Weld::ExportWeldJointBuilder::OutputFaceInfoTypes outputType /** outputtype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
