#ifndef NXOpen_MECHATRONICS_CAMPROFILEDOCUMENTATIONBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_CAMPROFILEDOCUMENTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_CamProfileDocumentationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class CamProfileDocumentationBuilder;
    }
    class Builder;
    class Expression;
    class NXColor;
    class NXObject;
    class Part;
    class Point;
    namespace Mechatronics
    {
        class _CamProfileDocumentationBuilderBuilder;
        class CamProfileDocumentationBuilderImpl;
        /**
            Represents a @link NXOpen::Mechatronics::CamProfileDocumentationBuilder NXOpen::Mechatronics::CamProfileDocumentationBuilder@endlink .
             <br> To create a new instance of this class, use @link NXOpen::Mechatronics::PhysicsManager::CreateCamProfileDocumentationBuilder  NXOpen::Mechatronics::PhysicsManager::CreateCamProfileDocumentationBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  CamProfileDocumentationBuilder : public NXOpen::Builder
        {
            /** the cam curve type option. */
            public: enum CurveTypes
            {
                CurveTypesStandard2D/** 2D Standard */,
                CurveTypesRadial2D/** 2D Radial */,
                CurveTypesRadial3D/** 3D Radial */
            };

            /** Represents the document part option. */
            public: enum PartTypes
            {
                PartTypesWorkPart/** Work Part */,
                PartTypesNewAssembly/** New Assembly */
            };

            private: CamProfileDocumentationBuilderImpl * m_camprofiledocumentationbuilder_impl;
            private: friend class  _CamProfileDocumentationBuilderBuilder;
            protected: CamProfileDocumentationBuilder();
            public: ~CamProfileDocumentationBuilder();
            /** Adds selected parts 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddSelectedParts
            (
                const std::vector<NXOpen::Part *> & parts /** the parts used to add to find cam profile. */
            );
            /**Returns  the document part option . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::CamProfileDocumentationBuilder::PartTypes DocumentPartType
            (
            );
            /**Sets  the document part option . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetDocumentPartType
            (
                NXOpen::Mechatronics::CamProfileDocumentationBuilder::PartTypes partOption /** partoption */ 
            );
            /**Returns  the cam curve type . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::CamProfileDocumentationBuilder::CurveTypes CamCurveType
            (
            );
            /**Sets  the cam curve type . 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCamCurveType
            (
                NXOpen::Mechatronics::CamProfileDocumentationBuilder::CurveTypes curveType /** curvetype */ 
            );
            /**Returns  the radial curve base radius. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * RadialCurveBaseRadius
            (
            );
            /**Returns  the option to show points. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool ShowPoints
            (
            );
            /**Sets  the option to show points. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetShowPoints
            (
                bool pointOption /** pointoption */ 
            );
            /**Returns  the option to create axis. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool CreateXYAxis
            (
            );
            /**Sets  the option to create axis. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCreateXYAxis
            (
                bool axisOption /** axisoption */ 
            );
            /**Returns  the x axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString XAxisLabel
            (
            );
            /**Sets  the x axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetXAxisLabel
            (
                const NXString & xLabel /** xlabel */ 
            );
            /**Sets  the x axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetXAxisLabel
            (
                const char * xLabel /** xlabel */ 
            );
            /**Returns  the y axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString YAxisLabel
            (
            );
            /**Sets  the y axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetYAxisLabel
            (
                const NXString & yLabel /** ylabel */ 
            );
            /**Sets  the y axis label. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetYAxisLabel
            (
                const char * yLabel /** ylabel */ 
            );
            /**Returns  the option to show axis scale. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool ShowAxisScale
            (
            );
            /**Sets  the option to show axis scale. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetShowAxisScale
            (
                bool scaleOption /** scaleoption */ 
            );
            /**Returns  the option to show segment data. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool ShowSegmentData
            (
            );
            /**Sets  the option to show segment data. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetShowSegmentData
            (
                bool dataOption /** dataoption */ 
            );
            /**Returns  the point. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPoint
            (
                NXOpen::Point * pointTag /** pointtag */ 
            );
            /** Inserts a new row. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void InsertRow
            (
                int pos /** pos */ ,
                NXOpen::NXObject * objectTag /** objecttag */ 
            );
            /** Deletes a row. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void DeleteRow
            (
                int index /** index */ 
            );
            /** Sets row state. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetRowState
            (
                int index /** index */ ,
                bool state /** state */ 
            );
            /** Gets row state. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool GetRowState
            (
                int index /** index */ 
            );
            /** Sets row color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetRowColor
            (
                int index /** index */ ,
                NXOpen::NXColor * color /** color */ 
            );
            /** Gets row color. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::NXColor * GetRowColor
            (
                int index /** index */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
