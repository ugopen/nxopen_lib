#ifndef NXOpen_DIAGRAMMINGLIBRARYAUTHOR_PIPESTOCKBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMINGLIBRARYAUTHOR_PIPESTOCKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DiagrammingLibraryAuthor_PipeStockBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_diagramminglibraryauthor_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace DiagrammingLibraryAuthor
    {
        class PipeStockBuilder;
    }
    namespace DiagrammingLibraryAuthor
    {
        class AttributeHolder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace DiagrammingLibraryAuthor
    {
        class _PipeStockBuilderBuilder;
        class PipeStockBuilderImpl;
        /**  @brief  Represents a PipeStockBuilder.  

          
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGLIBRARYAUTHOREXPORT  PipeStockBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: PipeStockBuilderImpl * m_pipestockbuilder_impl;
            private: friend class  _PipeStockBuilderBuilder;
            protected: PipeStockBuilder();
            public: ~PipeStockBuilder();
            /** Selects the pipe stock folder by the class ID 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SelectFolder
            (
                const NXString & classId /** classid */ 
            );
            /** Selects the pipe stock folder by the class ID 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SelectFolder
            (
                const char * classId /** classid */ 
            );
            /** Selects one pipe stock by the symbol ID 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SelectPipeStock
            (
                const NXString & symbolId /** symbolid */ 
            );
            /** Selects one pipe stock by the symbol ID 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SelectPipeStock
            (
                const char * symbolId /** symbolid */ 
            );
            /** Gets the pipe stock objects which have user attributes of the pipe stock. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void GetPipeStockObjects
            (
                std::vector<NXOpen::DiagrammingLibraryAuthor::AttributeHolder *> & pipeStockObjects /** the pipe stock objects */
            );
            /** Creates a new pipe stock  @return  the pipe stock object 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::DiagrammingLibraryAuthor::AttributeHolder * CreatePipeStock
            (
                const NXString & instanceId /** instanceid */ ,
                const NXString & partId /** partid */ ,
                const NXString & partName /** partname */ ,
                const NXString & numberName /** numbername */ 
            );
            /** Creates a new pipe stock  @return  the pipe stock object 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            NXOpen::DiagrammingLibraryAuthor::AttributeHolder * CreatePipeStock
            (
                const char * instanceId /** instanceid */ ,
                const char * partId /** partid */ ,
                const char * partName /** partname */ ,
                const char * numberName /** numbername */ 
            );
            /** Deletes the pipe stock which is new created 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void DeletePipeStock
            (
                NXOpen::DiagrammingLibraryAuthor::AttributeHolder * pipeStockObject /** the pipe stock object,
                                only accept the object which is got by @link NXOpen::DiagrammingLibraryAuthor::PipeStockBuilder::CreatePipeStock NXOpen::DiagrammingLibraryAuthor::PipeStockBuilder::CreatePipeStock@endlink  */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
