#ifndef NXOpen_ANNOTATIONS_COMPONENTDATA_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_COMPONENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_ComponentData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_ArcComponent.hxx>
#include <NXOpen/Annotations_ArrowComponent.hxx>
#include <NXOpen/Annotations_LineComponent.hxx>
#include <NXOpen/Annotations_TextComponent.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class ComponentData;
    }
    namespace Annotations
    {
        class ArcComponent;
    }
    namespace Annotations
    {
        class ArrowComponent;
    }
    namespace Annotations
    {
        class LineComponent;
    }
    namespace Annotations
    {
        class TextComponent;
    }
    class DisplayableObject;
    namespace Annotations
    {
    }
    namespace Annotations
    {
        class ComponentDataImpl;
        /** A ComponentData object can be used to query the components of an annotation.  
                These components include line components, arrow components, arc components,
                and text components.  These components can then be queried for type
                specific information about the object.  
         <br>  Created in NX6.0.2.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  ComponentData : public NXOpen::TransientObject
        {
            private: ComponentDataImpl * m_componentdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit ComponentData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: virtual ~ComponentData();
            /** Queries the line components, (@link NXOpen::Annotations::LineComponent NXOpen::Annotations::LineComponent@endlink ), in an annotation.  
                        Each line component can be queried for line specific information.  @return  All of the lines components that exist in the annotation 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::LineComponent *> GetLineComponents
            (
            );
            /** Queries the arrow components, (@link NXOpen::Annotations::ArrowComponent NXOpen::Annotations::ArrowComponent@endlink ), in an annotation.  
                        Each arrow component can be queried for arrow specific information.  @return  All of the arrow components that exist in the annotation 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::ArrowComponent *> GetArrowComponents
            (
            );
            /** Queries the arc components, (@link NXOpen::Annotations::ArcComponent NXOpen::Annotations::ArcComponent@endlink ), in an annotation.  
                        Each arc component can be queried for arc specific information.  @return  All of the arc components that exist in the annotation 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::ArcComponent *> GetArcComponents
            (
            );
            /** Queries the text components, (@link NXOpen::Annotations::TextComponent NXOpen::Annotations::TextComponent@endlink ), in an annotation.  
                        Each text component can be queried for text specific information.  @return  All of the text components that exist in the annotation 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::TextComponent *> GetTextComponents
            (
            );
            /** Returns the entities that an annotation contains. These entities are NX objects such as @link NXOpen::Line NXOpen::Line@endlink  and @link NXOpen::Annotations::Annotation NXOpen::Annotations::Annotation@endlink .
                        Appropriate query APIs can be used for these entities to get details such as geometric data.
                         <br> 
                        This method can be used for container objects such as Custom Symbol @link NXOpen::Annotations::CustomSymbol NXOpen::Annotations::CustomSymbol@endlink  to get entities that the custom
                        sybmols is made of.                                     
                         <br>             
                         <br> 
                        Note that this method will not return components of an annotation such as arrow or crosshatch lines. To query component information, you can use
                        component classes such as @link NXOpen::Annotations::ArrowComponent NXOpen::Annotations::ArrowComponent@endlink  and @link NXOpen::Annotations::LineComponent NXOpen::Annotations::LineComponent@endlink .
                         <br> 
                     @return  List of entities that display the annotation.
                                                      It is the caller's responsibility to delete these objects. 
             <br>  Created in NX6.0.2.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DisplayableObject *> GetEntities
            (
            );
            /** Returns the entities that an annotation contains. These entities are NX objects such as @link NXOpen::Line NXOpen::Line@endlink  and @link NXOpen::Annotations::Annotation NXOpen::Annotations::Annotation@endlink .
                        Appropriate query APIs can be used for these entities to get details such as geometric data.
                         <br> 
                        This method can be used for container objects such as Custom Symbol @link NXOpen::Annotations::CustomSymbol NXOpen::Annotations::CustomSymbol@endlink  to get entities that the custom
                        sybmols is made of.                                     
                         <br>             
                         <br> 
                        Note that to query components of an annotation such as arrow or crosshatch lines, you can use component classes such as 
                        @link NXOpen::Annotations::ArrowComponent NXOpen::Annotations::ArrowComponent@endlink  and @link NXOpen::Annotations::LineComponent NXOpen::Annotations::LineComponent@endlink .
                         <br> 
                         <br> 
                        These entites will be deleted when this object is deleted. 
                         <br> 
                         @return  List of entities that display the annotation.
                                                      These entities will be deleted when the ComponentData object is deleted. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::DisplayableObject *> GetEntitiesAutodelete
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
