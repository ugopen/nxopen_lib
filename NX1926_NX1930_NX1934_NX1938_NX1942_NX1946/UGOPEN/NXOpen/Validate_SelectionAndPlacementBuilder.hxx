#ifndef NXOpen_VALIDATE_SELECTIONANDPLACEMENTBUILDER_HXX_INCLUDED
#define NXOpen_VALIDATE_SELECTIONANDPLACEMENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Validate_SelectionAndPlacementBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_validate_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Validate
    {
        class SelectionAndPlacementBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class TaggedObject;
    namespace Validate
    {
        class _SelectionAndPlacementBuilderBuilder;
        class SelectionAndPlacementBuilderImpl;
        /** Represents a Selection And Placement builder 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_VALIDATEEXPORT  SelectionAndPlacementBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: SelectionAndPlacementBuilderImpl * m_selectionandplacementbuilder_impl;
            private: friend class  _SelectionAndPlacementBuilderBuilder;
            protected: SelectionAndPlacementBuilder();
            public: ~SelectionAndPlacementBuilder();
            /** Returns the selected Bodies or Parts  @return  The targets should be of NXOpen::Body or NXOpen::Part 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetTargets
            (
            );
            /** Set the Bodies or Parts 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTargets
            (
                const std::vector<NXOpen::TaggedObject *> & targets /** The targets should be of NXOpen::Body or NXOpen::Part */
            );
            /**Returns  the draw origin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d DrawOrigin
            (
            );
            /**Sets  the draw origin 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDrawOrigin
            (
                const NXOpen::Point3d & drawOrigin /** draworigin */ 
            );
            /**Returns  the draw orientation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Matrix3x3 DrawOrientation
            (
            );
            /**Sets  the draw orientation 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDrawOrientation
            (
                const NXOpen::Matrix3x3 & drawOrientation /** draworientation */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
