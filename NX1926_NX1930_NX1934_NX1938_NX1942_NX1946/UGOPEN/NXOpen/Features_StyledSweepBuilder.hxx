#ifndef NXOpen_FEATURES_STYLEDSWEEPBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STYLEDSWEEPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StyledSweepBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_Rebuild.hxx>
#include <NXOpen/GeometricUtilities_RotationSetBuilder.hxx>
#include <NXOpen/GeometricUtilities_ScalingSetBuilder.hxx>
#include <NXOpen/GeometricUtilities_StyledSweepDoubleOnPathDimBuilder.hxx>
#include <NXOpen/GeometricUtilities_StyledSweepReferenceMethodBuilder.hxx>
#include <NXOpen/GeometricUtilities_SurfaceRangeBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class StyledSweepBuilder;
    }
    class Curve;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class Rebuild;
    }
    namespace GeometricUtilities
    {
        class RotationSetBuilder;
    }
    namespace GeometricUtilities
    {
        class RotationSetBuilderList;
    }
    namespace GeometricUtilities
    {
        class ScalingSetBuilder;
    }
    namespace GeometricUtilities
    {
        class ScalingSetBuilderList;
    }
    namespace GeometricUtilities
    {
        class StyledSweepDoubleOnPathDimBuilder;
    }
    namespace GeometricUtilities
    {
        class StyledSweepDoubleOnPathDimBuilderList;
    }
    namespace GeometricUtilities
    {
        class StyledSweepReferenceMethodBuilder;
    }
    namespace GeometricUtilities
    {
        class SurfaceRangeBuilder;
    }
    class Section;
    class SectionList;
    namespace Features
    {
        class _StyledSweepBuilderBuilder;
        class StyledSweepBuilderImpl;
        /**
            Represents a @link NXOpen::Features::StyledSweep NXOpen::Features::StyledSweep@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateStyledSweepBuilder  NXOpen::Features::FeatureCollection::CreateStyledSweepBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        FixedStringOption </term> <description> 
         
        Guide </description> </item> 

        <item><term> 
         
        GuideRebuildData.Degree </term> <description> 
         
        3 </description> </item> 

        <item><term> 
         
        GuideRebuildData.RebuildType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        ReferenceMethod.ReferenceOption </term> <description> 
         
        ToGuide </description> </item> 

        <item><term> 
         
        ScalingMethodOption </term> <description> 
         
        Uniform </description> </item> 

        <item><term> 
         
        SectionOrientationOption </term> <description> 
         
        KeepAngle </description> </item> 

        <item><term> 
         
        SectionRebuildData.Degree </term> <description> 
         
        3 </description> </item> 

        <item><term> 
         
        SectionRebuildData.RebuildType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        SurfaceRange.AnchorPosition </term> <description> 
         
        Vertex1 </description> </item> 

        <item><term> 
         
        TransitionOption </term> <description> 
         
        Blend </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  StyledSweepBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** This enum represents the sweep type option (Number of Guides) */
            public: enum Types
            {
                TypesOneGuide/** 1 Guide */,
                TypesOneGuideOneTouch/** 1 Guide 1 Touch */,
                TypesOneGuideOneOrientation/** 1 Guide 1 Orientation */,
                TypesTwoGuides/** 2 Guides */
            };

            /** This enum represents the Transition option */
            public: enum TransitionOptions
            {
                TransitionOptionsLinear/** Linear */,
                TransitionOptionsCubic/** Cubic */,
                TransitionOptionsBlend/** Blend */
            };

            /** This enum represents the Fixed String option */
            public: enum FixedStringOptions
            {
                FixedStringOptionsGuide/** Guide */,
                FixedStringOptionsSection/** Section */,
                FixedStringOptionsGuideAndSection/** Guide and Section */
            };

            /** This enum represents the Section Orientation option */
            public: enum SectionOrientationOptions
            {
                SectionOrientationOptionsTranslate/** Translate */,
                SectionOrientationOptionsKeepAngle/** Keep Angle */,
                SectionOrientationOptionsMakeNormal/** Make Normal */,
                SectionOrientationOptionsUserDefined/** User Defined */,
                SectionOrientationOptionsArcLength/** Arc Length */
            };

            /** This enum represents the Scaling Method option */
            public: enum ScalingMethodOptions
            {
                ScalingMethodOptionsUniform/** Uniform */,
                ScalingMethodOptionsNonuniform/** Non-Uniform */,
                ScalingMethodOptionsScalingCurve/** Scaling Curve */
            };

            private: StyledSweepBuilderImpl * m_styledsweepbuilder_impl;
            private: friend class  _StyledSweepBuilderBuilder;
            protected: StyledSweepBuilder();
            public: ~StyledSweepBuilder();
            /**Returns  the sweep type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StyledSweepBuilder::Types Type
            (
            );
            /**Sets  the sweep type 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetType
            (
                NXOpen::Features::StyledSweepBuilder::Types type /** type */ 
            );
            /**Returns  the list of sections. At least 1 section is required. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * SectionList
            (
            );
            /**Returns  the first guide 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * FirstGuide
            (
            );
            /**Returns  the second guide 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SecondGuide
            (
            );
            /**Returns  the list of inserted sections 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SectionList * InsertedSectionList
            (
            );
            /**Returns  the transition option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StyledSweepBuilder::TransitionOptions TransitionOption
            (
            );
            /**Sets  the transition option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetTransitionOption
            (
                NXOpen::Features::StyledSweepBuilder::TransitionOptions transitionOption /** transitionoption */ 
            );
            /**Returns  the fixed string option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StyledSweepBuilder::FixedStringOptions FixedStringOption
            (
            );
            /**Sets  the fixed string option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetFixedStringOption
            (
                NXOpen::Features::StyledSweepBuilder::FixedStringOptions fixedStringOption /** fixedstringoption */ 
            );
            /**Returns  the section orientation option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StyledSweepBuilder::SectionOrientationOptions SectionOrientationOption
            (
            );
            /**Sets  the section orientation option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetSectionOrientationOption
            (
                NXOpen::Features::StyledSweepBuilder::SectionOrientationOptions sectionOrientationOption /** sectionorientationoption */ 
            );
            /**Returns  the reference method 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::StyledSweepReferenceMethodBuilder * ReferenceMethod
            (
            );
            /**Returns  the alternate solution. This property can be used only when Type is being set to 1 Guide/1 Guide 1 Touch/1 Guide 1 Orientation and 
                    orientation method is set to user_defined. For now, alternateSolution = 1, means automatically initial orientation, = 0,  means no 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: int AlternateSolution
            (
            );
            /**Sets  the alternate solution. This property can be used only when Type is being set to 1 Guide/1 Guide 1 Touch/1 Guide 1 Orientation and 
                    orientation method is set to user_defined. For now, alternateSolution = 1, means automatically initial orientation, = 0,  means no 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetAlternateSolution
            (
                int alternateSolution /** alternatesolution */ 
            );
            /**Returns  the list of pivot sets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::StyledSweepDoubleOnPathDimBuilderList * PivotSetList
            (
            );
            /**Returns  the list of rotation sets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::RotationSetBuilderList * RotationSetList
            (
            );
            /**Returns  the scaling method option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::StyledSweepBuilder::ScalingMethodOptions ScalingMethodOption
            (
            );
            /**Sets  the scaling method option 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetScalingMethodOption
            (
                NXOpen::Features::StyledSweepBuilder::ScalingMethodOptions scalingMethodOption /** scalingmethodoption */ 
            );
            /**Returns  the scaling curve 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * ScalingCurve
            (
            );
            /**Returns  the list of scaling sets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ScalingSetBuilderList * ScalingSetList
            (
            );
            /**Returns  the surface range 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::SurfaceRangeBuilder * SurfaceRange
            (
            );
            /**Returns  the section rebuild data 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Rebuild * SectionRebuildData
            (
            );
            /**Returns  the guide rebuild data 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::Rebuild * GuideRebuildData
            (
            );
            /**Returns  the G0 (Position) tolerance. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double G0Tolerance
            (
            );
            /**Sets  the G0 (Position) tolerance. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetG0Tolerance
            (
                double g0Tolerance /** g0tolerance */ 
            );
            /**Returns  the G1 (Tangent) tolerance. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double G1Tolerance
            (
            );
            /**Sets  the G1 (Tangent) tolerance. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void SetG1Tolerance
            (
                double g1Tolerance /** g1tolerance */ 
            );
            /** Creates a new pivot set  @return  StyledSweepDoubleOnPathDimBuilder Object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::StyledSweepDoubleOnPathDimBuilder * CreatePivotSet
            (
                double value1 /** Point on section */,
                double value2 /** Point on guide */,
                NXOpen::Curve * path1 /** The path of point on section */,
                NXOpen::Curve * path2 /** The path of point on guide */
            );
            /** Creates a new rotation set  @return  RotationSetBuilder Object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::RotationSetBuilder * CreateRotationSet
            (
                double value /** Rotation angle */,
                double pathPar /** Rotation position */,
                NXOpen::Curve * path /** The path of on path dim */
            );
            /** Creates a new scaling set  @return  ScalingSetBuilder Object 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: NXOpen::GeometricUtilities::ScalingSetBuilder * CreateScalingSet
            (
                double valuePar /** Scaling value */,
                double depthPar /** Depth value */,
                double pathPar /** Depth position */,
                NXOpen::Curve * path /** The path of on path dim */
            );
            /** Starts inserting section. The client should call this API whenever he starts inserting a section.
                    According to the insert point, the application automatically computes the closed point on the current surface, 
                    then extracts an iso curve to create a UG curve and add this curve into the section.
                    Note: After the client calls this API, he needs to create a pivot set, a rotation set, a scaling set 
                    and a Section in turn, then he needs to insert them to the corresponding set list separately. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void StartInsertingSection
            (
                const std::vector<double> & insertPnt /** Insert point - the point on guide curve is better */
            );
            /** Ends inserting section. The client should call this API whenever he finishes inserting a section. 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR studio_free_form ("STUDIO FREE FORM") */
            public: void EndInsertingSection
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
