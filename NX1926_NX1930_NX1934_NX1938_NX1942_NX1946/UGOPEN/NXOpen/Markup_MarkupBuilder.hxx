#ifndef NXOpen_MARKUP_MARKUPBUILDER_HXX_INCLUDED
#define NXOpen_MARKUP_MARKUPBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Markup_MarkupBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_markup_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Markup
    {
        class MarkupBuilder;
    }
    class Builder;
    namespace Markup
    {
        class _MarkupBuilderBuilder;
        class MarkupBuilderImpl;
        /** The @link NXOpen::Markup::MarkupBuilder NXOpen::Markup::MarkupBuilder@endlink  which is used to edit properties of or create @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  <br> To create a new instance of this class, use @link NXOpen::Markup::MarkupCollection::CreateMarkupBuilder  NXOpen::Markup::MarkupCollection::CreateMarkupBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_MARKUPEXPORT  MarkupBuilder : public NXOpen::Builder
        {
            private: MarkupBuilderImpl * m_markupbuilder_impl;
            private: friend class  _MarkupBuilderBuilder;
            protected: MarkupBuilder();
            public: ~MarkupBuilder();
            /**Returns   @brief  the active status of the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool Active
            (
            );
            /**Sets   @brief  the active status of the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  

             
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetActive
            (
                bool active /** active */ 
            );
            /**Returns   @brief  a value that, if true, indicates that the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink  will capture current view.  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool CaptureView
            (
            );
            /**Sets   @brief  a value that, if true, indicates that the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink  will capture current view.  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            public: void SetCaptureView
            (
                bool captureView /** captureview */ 
            );
            /**Returns   @brief  the name of the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString MarkupName
            (
            );
            /**Sets   @brief  the name of the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            public: void SetMarkupName
            (
                const NXString & markupName /** markupname */ 
            );
            /**Sets   @brief  the name of the @link NXOpen::Markup::Markup NXOpen::Markup::Markup@endlink .  

              
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : dmu_markup ("License to expose DMU functionality in NX desktop") */
            void SetMarkupName
            (
                const char * markupName /** markupname */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
