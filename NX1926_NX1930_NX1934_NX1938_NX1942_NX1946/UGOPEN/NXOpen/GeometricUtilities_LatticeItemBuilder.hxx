#ifndef NXOpen_GEOMETRICUTILITIES_LATTICEITEMBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICUTILITIES_LATTICEITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricUtilities_LatticeItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_geometricutilities_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricUtilities
    {
        class LatticeItemBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class SelectBodyList;
    namespace GeometricUtilities
    {
        class _LatticeItemBuilderBuilder;
        class LatticeItemBuilderImpl;
        /** This object contains each 3MF export option within the LatticeItemList.  <br> To create a new instance of this class, use @link NXOpen::GeometricUtilities::LatticeItemListBuilder::CreateLatticeItemBuilder  NXOpen::GeometricUtilities::LatticeItemListBuilder::CreateLatticeItemBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICUTILITIESEXPORT  LatticeItemBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** @brief This enum represents what will be exported to the 3MF file from the lattice. 

              */
            public: enum ExportTypes
            {
                ExportTypesGraphOnly/** graph only */ ,
                ExportTypesGraphandBody/** graphand body */ 
            };

            /** @brief This enum represents the clipping mode that will be used for the lattice. 

              */
            public: enum ClippingModeTypes
            {
                ClippingModeTypesNone/** none */ ,
                ClippingModeTypesInside/** inside */ ,
                ClippingModeTypesOutside/** outside */ 
            };

            private: LatticeItemBuilderImpl * m_latticeitembuilder_impl;
            private: friend class  _LatticeItemBuilderBuilder;
            protected: LatticeItemBuilder();
            public: ~LatticeItemBuilder();
            /**Returns  @brief  This object contains the lattice bodies within the list  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * LatticeBodies
            (
            );
            /**Returns   @brief  The export mode for the lattice body in 3MF export. Can be graph or graph and body.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::LatticeItemBuilder::ExportTypes ExportMode
            (
            );
            /**Sets   @brief  The export mode for the lattice body in 3MF export. Can be graph or graph and body.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_additive_design (" NX Additive Design") */
            public: void SetExportMode
            (
                NXOpen::GeometricUtilities::LatticeItemBuilder::ExportTypes exportMode /** exportmode */ 
            );
            /**Returns  @brief  The clipping mode option for the lattice body in 3MF export. Can be none, inside or outside.  

             
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::LatticeItemBuilder::ClippingModeTypes ClippingMode
            (
            );
            /**Sets  @brief  The clipping mode option for the lattice body in 3MF export. Can be none, inside or outside.  

             
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_additive_design (" NX Additive Design") */
            public: void SetClippingMode
            (
                NXOpen::GeometricUtilities::LatticeItemBuilder::ClippingModeTypes clippingMode /** clippingmode */ 
            );
            /**Returns  @brief  The body being clipped with 3MF Export.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * ClippingBody
            (
            );
            /** @brief  Destroys this GeometricUtilities.LatticeItemBuilder  

             
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_additive_design (" NX Additive Design") */
            public: void Destroy
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
