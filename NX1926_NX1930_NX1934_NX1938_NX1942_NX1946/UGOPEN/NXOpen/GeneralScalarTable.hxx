#ifndef NXOpen_GENERALSCALARTABLE_HXX_INCLUDED
#define NXOpen_GENERALSCALARTABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeneralScalarTable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class GeneralScalarTable;
    class Unit;
    class GeneralScalarTableImpl;
    /**  @brief  Represents a General M x N table of scalar (real) values.   

       <br> This is an abstract class  <br> 
     <br>  Created in NX6.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  GeneralScalarTable : public NXOpen::TransientObject
    {
        private: GeneralScalarTableImpl * m_generalscalartable_impl;
        /// \cond NX_NO_DOC 
        public: explicit GeneralScalarTable(void *ptr);
        /// \endcond 
        /** Sets the table size 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetTableSize
        (
            int nRows /** Number of Rows */,
            int nCols /** Number of Columns */,
            double dDefaultValue /** Default Value */
        );
        /** Sets the number of rows 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNumberOfRows
        (
            int nRows /** Number of Rows */,
            double dDefaultValue /** Default Value */
        );
        /**Returns  the number of rows 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: int NumRows
        (
        );
        /**Returns  the numuber of columns
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: int NumCols
        (
        );
        /** Returns the cell value  @return  
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: double GetCellValue
        (
            int iRow /** Row Index       */,
            int iCol /** Column Index    */
        );
        /** Sets cell value 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCellValue
        (
            int iRow /** Row Index                    */,
            int iCol /** Column Index                 */,
            double cellValue /** Value to store in the cell   */
        );
        /** Sets cell value 
         <br>  Created in NX10.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCellValue
        (
            int iRow /** Row Index                    */,
            int iCol /** Column Index                 */,
            int cellValue /** Value to store in the cell   */
        );
        /** Sets cell as having no value 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetCellNoValue
        (
            int iRow /** Row Index                    */,
            int iCol /** Column Index                 */
        );
        /** Sets the entire Nth row of values. Input array must be as long as
                the number of columns @link GeneralScalarTable::NumCols GeneralScalarTable::NumCols@endlink      
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNthRow
        (
            int iRow /** Row Index   */,
            const std::vector<double> & rowValues /** Row Values */
        );
        /** Returns the entire Nth row of values. Output array will be as long as 
                the number of columns @link GeneralScalarTable::NumCols GeneralScalarTable::NumCols@endlink       @return  Row Values  
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<double> GetNthRow
        (
            int iRow /** Row Index   */
        );
        /** Sets the entire Nth column of values. Input array must be as long as 
                the number of rows @link GeneralScalarTable::NumRows GeneralScalarTable::NumRows@endlink       
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNthColumn
        (
            int iCol /** Column Index    */,
            const std::vector<double> & columnValues /** Column values   */
        );
        /** Returns the entire Nth column of values. Output array will be as long as 
                the number of rows @link GeneralScalarTable::NumRows GeneralScalarTable::NumRows@endlink         @return  Column Values   
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: std::vector<double> GetNthColumn
        (
            int iCol /** Column Index    */
        );
        /** Sets the entire Nth column of values. Input array must be as long as
                the number of rows  @link GeneralScalarTable::NumRows GeneralScalarTable::NumRows@endlink      
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: void SetNthColumnUnits
        (
            int iCol /** Column Index */,
            NXOpen::Unit * unitType /** Unit type for the column */
        );
        /** Returns the entire Nth column of values. Output array will be as long as
                the number of rows  @link GeneralScalarTable::NumRows GeneralScalarTable::NumRows@endlink       @return  Unit type for the column NULL if the Column has no units 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::Unit * GetNthColumnUnits
        (
            int iCol /** Column Index*/
        );
        /** Destroys the object 
         <br>  Created in NX6.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~GeneralScalarTable();
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
