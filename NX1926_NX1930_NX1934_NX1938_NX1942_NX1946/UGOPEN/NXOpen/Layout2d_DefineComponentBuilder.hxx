#ifndef NXOpen_LAYOUT2D_DEFINECOMPONENTBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_DEFINECOMPONENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_DefineComponentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Gateway_ImageCaptureBuilder.hxx>
#include <NXOpen/Layout2d_ComponentNameBuilder.hxx>
#include <NXOpen/Layout2d_Types.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class DefineComponentBuilder;
    }
    class Builder;
    namespace Gateway
    {
        class ImageCaptureBuilder;
    }
    namespace Layout2d
    {
        class ComponentNameBuilder;
    }
    class Point;
    class SelectNXObjectList;
    namespace Layout2d
    {
        class _DefineComponentBuilderBuilder;
        class DefineComponentBuilderImpl;
        /** Represents a Builder for Define 2D component functionality which will define
             *  a 2D Component and stores its definition in the Reuse Library              <br> To create a new instance of this class, use @link NXOpen::Layout2d::ComponentCollection::CreateDefineComponentBuilder  NXOpen::Layout2d::ComponentCollection::CreateDefineComponentBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ImageCapture.CaptureMethod </term> <description> 
         
        GraphicsArea </description> </item> 

        <item><term> 
         
        ImageCapture.Format </term> <description> 
         
        Bmp </description> </item> 

        <item><term> 
         
        ImageCapture.Size </term> <description> 
         
        Pixels64 </description> </item> 

        </list> 

         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  DefineComponentBuilder : public NXOpen::Builder
        {
            private: DefineComponentBuilderImpl * m_definecomponentbuilder_impl;
            private: friend class  _DefineComponentBuilderBuilder;
            protected: DefineComponentBuilder();
            public: ~DefineComponentBuilder();
            /**Returns  the select objects to create a 2D Component definition
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * Contents
            (
            );
            /**Returns  the anchor point to define the 2D Component
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * AnchorPoint
            (
            );
            /**Sets  the anchor point to define the 2D Component
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetAnchorPoint
            (
                NXOpen::Point * anchorPoint /** anchorpoint */ 
            );
            /**Returns  the 2D Component Name defines the name for the new created definition 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Layout2d::ComponentNameBuilder * ComponentName
            (
            );
            /**Returns  the 2D Component image name for the new created definition 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ImageName
            (
            );
            /**Sets  the 2D Component image name for the new created definition 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetImageName
            (
                const NXString & imageName /** imagename */ 
            );
            /**Sets  the 2D Component image name for the new created definition 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void SetImageName
            (
                const char * imageName /** imagename */ 
            );
            /**Returns  the image capture builder used to create an image for the definition 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Gateway::ImageCaptureBuilder * ImageCapture
            (
            );
            /** Sets the path to store the 2D Component 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetPath
            (
                const NXString & path /** location of component */
            );
            /** Sets the path to store the 2D Component 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void SetPath
            (
                const char * path /** location of component */
            );
            /** Sets the location type of the component indicating local, native or team center
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetLocation
            (
                NXOpen::Layout2d::Layout2dDefinitionLocation locationType /** locationtype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
