#ifndef NXOpen_TOOLING_DIEDESDRAWDIEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIEDESDRAWDIEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DieDesDrawDieBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DieDesDrawDieBuilder;
    }
    class Builder;
    namespace Features
    {
        class Feature;
    }
    class Plane;
    class SelectBody;
    class SelectNXObjectList;
    namespace Tooling
    {
        class _DieDesDrawDieBuilderBuilder;
        class DieDesDrawDieBuilderImpl;
        /** Represents the Die Design draw die management builder, which is to create a draw die by selected 
            sheet body, curve and base plane. <br> To create a new instance of this class, use @link NXOpen::Tooling::AutoDieCollection::CreateDieDesDrawDieBuilder  NXOpen::Tooling::AutoDieCollection::CreateDieDesDrawDieBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DieDesDrawDieBuilder : public NXOpen::Builder
        {
            private: DieDesDrawDieBuilderImpl * m_diedesdrawdiebuilder_impl;
            private: friend class  _DieDesDrawDieBuilderBuilder;
            protected: DieDesDrawDieBuilder();
            public: ~DieDesDrawDieBuilder();
            /**Returns  the sheet body, which is used to trim the die top face. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBody * SheetBody
            (
            );
            /**Returns  the punch curve, which is used for extrusion. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * PunchCurve
            (
            );
            /**Returns  the blank curve, which is used for extrusion. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * BlankCurve
            (
            );
            /**Returns  the flange curve, which is used for extrusion. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FlangeCurve
            (
            );
            /**Returns  the base plane, which is used for define the base of the die.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Plane * BasePlane
            (
            );
            /**Sets  the base plane, which is used for define the base of the die.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBasePlane
            (
                NXOpen::Plane * basePlane /** baseplane */ 
            );
            /**Returns  the deck thickness, which is used for define the deck thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double DeckThickness
            (
            );
            /**Sets  the deck thickness, which is used for define the deck thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDeckThickness
            (
                double deckThickness /** deckthickness */ 
            );
            /**Returns  the binder edge offset, which is used for define the binder edge offset value of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double BinderEdgeOffset
            (
            );
            /**Sets  the binder edge offset, which is used for define the binder edge offset value of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBinderEdgeOffset
            (
                double binderEdgeOffset /** binderedgeoffset */ 
            );
            /**Returns  the deck edge offset, which is used for define the deck edge offset value of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double DeckEdgeOffset
            (
            );
            /**Sets  the deck edge offset, which is used for define the deck edge offset value of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDeckEdgeOffset
            (
                double deckEdgeOffset /** deckedgeoffset */ 
            );
            /**Returns  the deck flange thickness, which is used for define the flange thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double DeckFlangeThickness
            (
            );
            /**Sets  the deck flange thickness, which is used for define the flange thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetDeckFlangeThickness
            (
                double deckFlangeThickness /** deckflangethickness */ 
            );
            /**Returns  the wall thickness, which is used for define the wall thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double WallThickness
            (
            );
            /**Sets  the wall thickness, which is used for define the wall thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetWallThickness
            (
                double wallThickness /** wallthickness */ 
            );
            /**Returns  the base thickness, which is used for define the base thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double BaseThickness
            (
            );
            /**Sets  the base thickness, which is used for define the base thickness of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetBaseThickness
            (
                double baseThickness /** basethickness */ 
            );
            /**Returns  the flange offset, which is the offset value from projected blank curve to flange curve. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double FlangeOffset
            (
            );
            /**Sets  the flange offset, which is the offset value from projected blank curve to flange curve. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetFlangeOffset
            (
                double flangeOffset /** flangeoffset */ 
            );
            /**Returns  the option to indicate whether to use approximate sheet metal. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ApproximateSheetbodyOption
            (
            );
            /**Sets  the option to indicate whether to use approximate sheet metal. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetApproximateSheetbodyOption
            (
                bool approximateSheetbodyOption /** approximatesheetbodyoption */ 
            );
            /**Returns  the option to indicate whether to use exact sheet body. This function has been obsoleted, use
                        @link Tooling::DieDesDrawDieBuilder::ApproximateSheetbodyOption Tooling::DieDesDrawDieBuilder::ApproximateSheetbodyOption@endlink  
                        for substitution.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool ExactSheetbodyOption
            (
            );
            /**Sets  the option to indicate whether to use exact sheet body. This function has been obsoleted, use
                        @link Tooling::DieDesDrawDieBuilder::ApproximateSheetbodyOption Tooling::DieDesDrawDieBuilder::ApproximateSheetbodyOption@endlink  
                        for substitution.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetExactSheetbodyOption
            (
                bool exactSheetbodyOption /** exactsheetbodyoption */ 
            );
            /**Returns  the option to indicate whether to create core draw die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: bool CoreDrawDieOption
            (
            );
            /**Sets  the option to indicate whether to create core draw die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetCoreDrawDieOption
            (
                bool coreDrawDieOption /** coredrawdieoption */ 
            );
            /**Returns  the machining allowance, which is used for define the user machining allowance of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : None */
            public: double MachiningAllowance
            (
            );
            /**Sets  the machining allowance, which is used for define the user machining allowance of the die. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetMachiningAllowance
            (
                double machiningAllowance /** machiningallowance */ 
            );
            /**Returns  the feature set tag.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: NXOpen::Features::Feature * TfeatureSet
            (
            );
            /**Sets  the feature set tag.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_die_design ("Die Design") */
            public: void SetTfeatureSet
            (
                NXOpen::Features::Feature * tFeatureSet /** tfeatureset */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
