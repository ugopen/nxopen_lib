#ifndef NXOpen_FACET_REMESHFACETBODYBUILDER_HXX_INCLUDED
#define NXOpen_FACET_REMESHFACETBODYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Facet_RemeshFacetBodyBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/FacetCollector.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_facet_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Facet
    {
        class RemeshFacetBodyBuilder;
    }
    class Builder;
    class Expression;
    class FacetCollector;
    namespace Facet
    {
        class _RemeshFacetBodyBuilderBuilder;
        class RemeshFacetBodyBuilderImpl;
        /** Represents a @link NXOpen::Facet::RemeshFacetBodyBuilder NXOpen::Facet::RemeshFacetBodyBuilder@endlink .
                This class remeshes selected facet regions to specified density. <br> To create a new instance of this class, use @link NXOpen::Facet::FacetModelingCollection::CreateRemeshFacetBodyBuilder  NXOpen::Facet::FacetModelingCollection::CreateRemeshFacetBodyBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AngularThreshold </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        AverageSize.Value </term> <description> 
         
        5 (millimeters part), 0.2 (inches part) </description> </item> 

        <item><term> 
         
        ChordalTolerance </term> <description> 
         
        0.1 (millimeters part), 0.004 (inches part) </description> </item> 

        <item><term> 
         
        IsEditCopy </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsLockBoundary </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        IsShowDeviationPlot </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        MaximumSize.Value </term> <description> 
         
        5 (millimeters part), 0.2 (inches part) </description> </item> 

        <item><term> 
         
        RemeshMode </term> <description> 
         
        Constant </description> </item> 

        <item><term> 
         
        SharpEdgesLockOption </term> <description> 
         
        NoLock </description> </item> 

        </list> 

         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_FACETEXPORT  RemeshFacetBodyBuilder : public NXOpen::Builder
        {
            /**  Remesh mode definitions */
            public: enum RemeshModeType
            {
                RemeshModeTypeConstant/** constant */ ,
                RemeshModeTypeVariable/** variable */ 
            };

            /**  Sharp Edges lock definitions */
            public: enum SharpEdgesLockType
            {
                SharpEdgesLockTypeNoLock/** no lock */ ,
                SharpEdgesLockTypeSoftLock/** soft lock */ ,
                SharpEdgesLockTypeHardLock/** hard lock */ 
            };

            private: RemeshFacetBodyBuilderImpl * m_remeshfacetbodybuilder_impl;
            private: friend class  _RemeshFacetBodyBuilderBuilder;
            protected: RemeshFacetBodyBuilder();
            public: ~RemeshFacetBodyBuilder();
            /**Returns  the facets to be remeshed 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::FacetCollector * FacetRegion
            (
            );
            /**Returns  the Mode for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::RemeshFacetBodyBuilder::RemeshModeType RemeshMode
            (
            );
            /**Sets  the Mode for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetRemeshMode
            (
                NXOpen::Facet::RemeshFacetBodyBuilder::RemeshModeType remeshMode /** remeshmode */ 
            );
            /**Returns  the AverageSize for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AverageSize
            (
            );
            /**Returns  the MaximumSize for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * MaximumSize
            (
            );
            /**Returns  the ChordalTolerance for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double ChordalTolerance
            (
            );
            /**Sets  the ChordalTolerance for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetChordalTolerance
            (
                double chordalTolerance /** chordaltolerance */ 
            );
            /**Returns  the Option for sharp edges lock type
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Facet::RemeshFacetBodyBuilder::SharpEdgesLockType SharpEdgesLockOption
            (
            );
            /**Sets  the Option for sharp edges lock type
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetSharpEdgesLockOption
            (
                NXOpen::Facet::RemeshFacetBodyBuilder::SharpEdgesLockType sharpEdgesLockType /** sharpedgeslocktype */ 
            );
            /**Returns  the AngularThreshold for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double AngularThreshold
            (
            );
            /**Sets  the AngularThreshold for remesh
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetAngularThreshold
            (
                double angularThreshold /** angularthreshold */ 
            );
            /**Returns  the option to lock boundary of remesh regions 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsLockBoundary
            (
            );
            /**Sets  the option to lock boundary of remesh regions 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetLockBoundary
            (
                bool isLockBoundary /** islockboundary */ 
            );
            /**Returns  the option to create a non-associative copy of the selected body and edit that copy 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsEditCopy
            (
            );
            /**Sets  the option to create a non-associative copy of the selected body and edit that copy 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetEditCopy
            (
                bool isEditCopy /** iseditcopy */ 
            );
            /**Returns  the option to show deviation plot 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsShowDeviationPlot
            (
            );
            /**Sets  the option to show deviation plot 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_polygon_modeling (" NX Polygon Modeling") */
            public: void SetShowDeviationPlot
            (
                bool isShowDeviationPlot /** isshowdeviationplot */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
