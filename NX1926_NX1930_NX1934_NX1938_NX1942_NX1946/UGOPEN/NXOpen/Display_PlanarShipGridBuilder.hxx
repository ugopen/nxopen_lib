#ifndef NXOpen_DISPLAY_PLANARSHIPGRIDBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_PLANARSHIPGRIDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_PlanarShipGridBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/DisplayableObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class PlanarShipGridBuilder;
    }
    class Builder;
    class DatumPlane;
    class NXColor;
    class TaggedObject;
    namespace Display
    {
        class _PlanarShipGridBuilderBuilder;
        class PlanarShipGridBuilderImpl;
        /** Represents a @link NXOpen::Display::PlanarShipGrid NXOpen::Display::PlanarShipGrid@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Display::GridCollection::CreatePlanarShipGridBuilder  NXOpen::Display::GridCollection::CreatePlanarShipGridBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        IntersectType </term> <description> 
         
        Everything </description> </item> 

        <item><term> 
         
        LabelDisplayType </term> <description> 
         
        ShowAll </description> </item> 

        <item><term> 
         
        LabelSettingInheritted </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LineFontType </term> <description> 
         
        Solid </description> </item> 

        <item><term> 
         
        LineSettingInheritted </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        LineWidthType </term> <description> 
         
        Normal </description> </item> 

        </list> 

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  PlanarShipGridBuilder : public NXOpen::Builder
        {
            /** Settings that indicate how to search for objects that intersect the plane. */
            public: enum IntersectOption
            {
                IntersectOptionEverything/** all objects will be searched for intersections with the plane */,
                IntersectOptionSelectedObjects/** only the selected objects will be searched for intersections with the plane */,
                IntersectOptionShipGridAndSelected/** intersect the ship grid and selected objects with the plane */
            };

            /** Settings that indicate what grid lines should be labelled. */
            public: enum LabelDisplayOption
            {
                LabelDisplayOptionShowAll/** Display label for every grid line */,
                LabelDisplayOptionShowEveryOther/** Display label for every other grid line */,
                LabelDisplayOptionShowEveryThird/** Display label for every third grid line */,
                LabelDisplayOptionShowEveryFourth/** Display label for every fourth grid line */,
                LabelDisplayOptionHideAll/** Hide label for all grid lines */
            };

            private: PlanarShipGridBuilderImpl * m_planarshipgridbuilder_impl;
            private: friend class  _PlanarShipGridBuilderBuilder;
            protected: PlanarShipGridBuilder();
            public: ~PlanarShipGridBuilder();
            /**Returns  the base plane where the planar ship grid is created. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::DatumPlane * BasePlane
            (
            );
            /**Sets  the base plane where the planar ship grid is created. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetBasePlane
            (
                NXOpen::DatumPlane * basePlane /** baseplane */ 
            );
            /**
                      Get corner points of the grid extent. The extent is a rectangle.
                      The four points: point1, point2, point3, point4 are in clockwise 
                      or counterclockwise direction.
                      @return  Flag indicating whether the corner points are valid 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: bool GetExtent
            (
                NXOpen::Point3d* point1 /** First corner point */,
                NXOpen::Point3d* point2 /** Second corner point */,
                NXOpen::Point3d* point3 /** Third corner point */,
                NXOpen::Point3d* point4 /** Fourth corner point */
            );
            /**
                      Set corner points for the grid extent. The extent is a rectangle.
                      The four points: point1, point2, point3, point4 should be in
                      clockwise or counterclockwise direction.
                      @return  Flag indicating whether the corner points are valid 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: bool SetExtent
            (
                const NXOpen::Point3d & point1 /** First corner point */,
                const NXOpen::Point3d & point2 /** Second corner point */,
                const NXOpen::Point3d & point3 /** Third corner point */,
                const NXOpen::Point3d & point4 /** Fourth corner point */
            );
            /**Returns  the value that determines how to find objects that intersect the plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::Display::PlanarShipGridBuilder::IntersectOption IntersectType
            (
            );
            /**Sets  the value that determines how to find objects that intersect the plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetIntersectType
            (
                NXOpen::Display::PlanarShipGridBuilder::IntersectOption intersectType /** intersecttype */ 
            );
            /** Get the objects that were searched to find intersections with the plane.  @return  Array of intersected objects 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: std::vector<NXOpen::TaggedObject *> GetIntersectedObjects
            (
            );
            /** Set the objects that are to be searched to find intersections with the plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetIntersectedObjects
            (
                const std::vector<NXOpen::TaggedObject *> & intersectedObjects /** Array of intersected objects */
            );
            /**Returns  the setting that indicates whether the grid line will inherit the intersected plane's color/font/width. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: bool LineSettingInheritted
            (
            );
            /**Sets  the setting that indicates whether the grid line will inherit the intersected plane's color/font/width. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLineSettingInheritted
            (
                bool lineSettingInheritted /** linesettinginheritted */ 
            );
            /**Returns  the grid line color. Only used if the color is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::NXColor * LineColor
            (
            );
            /**Sets  the grid line color. Only used if the color is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLineColor
            (
                NXOpen::NXColor * lineColor /** linecolor */ 
            );
            /**Returns  the grid line width. Only used if the width is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::DisplayableObject::ObjectWidth LineWidthType
            (
            );
            /**Sets  the grid line width. Only used if the width is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLineWidthType
            (
                NXOpen::DisplayableObject::ObjectWidth lineWidthType /** linewidthtype */ 
            );
            /**Returns  the grid line font. Only used if the font is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::DisplayableObject::ObjectFont LineFontType
            (
            );
            /**Sets  the grid line font. Only used if the font is not inherited from the intersected plane. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLineFontType
            (
                NXOpen::DisplayableObject::ObjectFont lineFontType /** linefonttype */ 
            );
            /**Returns  the setting that indicates what grid lines are to be labelled. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::Display::PlanarShipGridBuilder::LabelDisplayOption LabelDisplayType
            (
            );
            /**Sets  the setting that indicates what grid lines are to be labelled. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLabelDisplayType
            (
                NXOpen::Display::PlanarShipGridBuilder::LabelDisplayOption labelDisplayType /** labeldisplaytype */ 
            );
            /**Returns  the setting that indicates whether the grid line label will inherit the intersected plane's color 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: bool LabelSettingInheritted
            (
            );
            /**Sets  the setting that indicates whether the grid line label will inherit the intersected plane's color 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLabelSettingInheritted
            (
                bool labelSettingInheritted /** labelsettinginheritted */ 
            );
            /**Returns  the grid line label color. Only used if the color is not inherited from the intersected plane.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: NXOpen::NXColor * LabelColor
            (
            );
            /**Sets  the grid line label color. Only used if the color is not inherited from the intersected plane.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SetLabelColor
            (
                NXOpen::NXColor * labelColor /** labelcolor */ 
            );
            /** Switch label location in X direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SwitchLabelLocationX
            (
            );
            /** Switch label location in Y direction.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SwitchLabelLocationY
            (
            );
            /** Switch label location in Z direction. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_basic ("Ship Basic Design") */
            public: void SwitchLabelLocationZ
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
