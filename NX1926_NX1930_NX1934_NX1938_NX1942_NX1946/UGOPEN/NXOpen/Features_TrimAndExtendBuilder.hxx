#ifndef NXOpen_FEATURES_TRIMANDEXTENDBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TRIMANDEXTENDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TrimAndExtendBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_ExtendSheetBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class TrimAndExtendBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    namespace Features
    {
        class _TrimAndExtendBuilderBuilder;
        class TrimAndExtendBuilderImpl;
        /**
            Represents a @link NXOpen::Features::TrimAndExtend NXOpen::Features::TrimAndExtend@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::TrimFeatureCollection::CreateTrimAndExtendBuilder  NXOpen::Features::TrimFeatureCollection::CreateTrimAndExtendBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ArrowSideOption </term> <description> 
         
        Retain </description> </item> 

        <item><term> 
         
        BodyOutputOption </term> <description> 
         
        ExtendOriginalSheet </description> </item> 

        <item><term> 
         
        CombineOption </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        CopyOriginalOption </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        Operation </term> <description> 
         
        UntilSelected </description> </item> 

        <item><term> 
         
        SurfaceShapeOption </term> <description> 
         
        NaturalCurvature </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  TrimAndExtendBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Trim or Extend operation type. */
            public: enum OperationType
            {
                OperationTypeUntilSelected/** until selected */ ,
                OperationTypeMakeCorner/** make corner */ 
            };

            /** Trim or Extend Arrow Side Results type. */
            public: enum ArrowSideType
            {
                ArrowSideTypeRetain/** retain */ ,
                ArrowSideTypeDelete/** delete */ 
            };

            private: TrimAndExtendBuilderImpl * m_trimandextendbuilder_impl;
            private: friend class  _TrimAndExtendBuilderBuilder;
            protected: TrimAndExtendBuilder();
            public: ~TrimAndExtendBuilder();
            /**Returns  the trim extend type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::TrimAndExtendBuilder::OperationType Operation
            (
            );
            /**Sets  the trim extend type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetOperation
            (
                NXOpen::Features::TrimAndExtendBuilder::OperationType operation /** operation */ 
            );
            /**Returns  the trim extend desired result type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::TrimAndExtendBuilder::ArrowSideType ArrowSideOption
            (
            );
            /**Sets  the trim extend desired result type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetArrowSideOption
            (
                NXOpen::Features::TrimAndExtendBuilder::ArrowSideType arrowSideType /** arrowsidetype */ 
            );
            /**Returns  the target collector which contains either edge or face 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * TargetSelection
            (
            );
            /**Returns  the target reverse side flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseTarget
            (
            );
            /**Sets  the target reverse side flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseTarget
            (
                bool reverseTarget /** reversetarget */ 
            );
            /**Returns  the tool collector which contains either edges or faces 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * ToolSelection
            (
            );
            /**Returns  the tool reverse side flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseTool
            (
            );
            /**Sets  the tool reverse side flag 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseTool
            (
                bool reverseTool /** reversetool */ 
            );
            /**Returns  the extension method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::SurfaceShape SurfaceShapeOption
            (
            );
            /**Sets  the extension method 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetSurfaceShapeOption
            (
                NXOpen::Features::ExtendSheetBuilder::SurfaceShape surfaceShapeOption /** surfaceshapeoption */ 
            );
            /**Returns  the body output type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ExtendSheetBuilder::BodyOutput BodyOutputOption
            (
            );
            /**Sets  the body output type 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetBodyOutputOption
            (
                NXOpen::Features::ExtendSheetBuilder::BodyOutput bodyOutputOption /** bodyoutputoption */ 
            );
            /**Returns  the copy original logical determines if the original body is modified or if a copy of the original is modified. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CopyOriginalOption
            (
            );
            /**Sets  the copy original logical determines if the original body is modified or if a copy of the original is modified. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCopyOriginalOption
            (
                bool copyOriginal /** copyoriginal */ 
            );
            /**Returns  the combine option determines if two bodies that make a corner are combined into one body. Applicable only for TrimExtendType of MakeCorner. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool CombineOption
            (
            );
            /**Sets  the combine option determines if two bodies that make a corner are combined into one body. Applicable only for TrimExtendType of MakeCorner. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetCombineOption
            (
                bool combine /** combine */ 
            );
            /**Returns  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DistanceTolerance
            (
            );
            /**Sets  the distance tolerance 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetDistanceTolerance
            (
                double tolerance /** tolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
