#ifndef NXOpen_CAM_BOUNDARYTURNMEMBEROFFSET_HXX_INCLUDED
#define NXOpen_CAM_BOUNDARYTURNMEMBEROFFSET_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BoundaryTurnMemberOffset.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BoundaryTurnVariableStock.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BoundaryTurnMemberOffset;
    }
    class Builder;
    namespace CAM
    {
        class BoundaryTurnVariableStock;
    }
    class NXObject;
    namespace CAM
    {
        class _BoundaryTurnMemberOffsetBuilder;
        class BoundaryTurnMemberOffsetImpl;
        /**
            Represents a @link NXOpen::CAM::BoundaryTurnMemberOffset NXOpen::CAM::BoundaryTurnMemberOffset@endlink 
             <br> This builder cannot be instantiated separately.  <br> 
         <br>  Created in NX9.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BoundaryTurnMemberOffset : public NXOpen::Builder
        {
            /** the types available for member offset mode */
            public: enum ModeType
            {
                ModeTypeNone/** none */ ,
                ModeTypeGeneral/** general */ ,
                ModeTypeTolerance/** tolerance */ ,
                ModeTypeLegacy/** legacy */ 
            };

            /** the types available for member offset method */
            public: enum MethodType
            {
                MethodTypeConstant/** constant */ ,
                MethodTypeAxial/** axial */ ,
                MethodTypeVector/** vector */ ,
                MethodTypeConical/** conical */ ,
                MethodTypeVariable/** variable */ 
            };

            /** the types available for member distance */
            public: enum DistanceTypeMode
            {
                DistanceTypeModeNominal/** nominal */ ,
                DistanceTypeModeDiameter/** diameter */ 
            };

            private: BoundaryTurnMemberOffsetImpl * m_boundaryturnmemberoffset_impl;
            private: friend class  _BoundaryTurnMemberOffsetBuilder;
            protected: BoundaryTurnMemberOffset();
            public: ~BoundaryTurnMemberOffset();
            /**Returns  the offset mode 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberOffset::ModeType Mode
            (
            );
            /**Sets  the offset mode 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMode
            (
                NXOpen::CAM::BoundaryTurnMemberOffset::ModeType newValue /** newvalue */ 
            );
            /**Returns  the offset method 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberOffset::MethodType Method
            (
            );
            /**Sets  the offset method 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetMethod
            (
                NXOpen::CAM::BoundaryTurnMemberOffset::MethodType newValue /** newvalue */ 
            );
            /**Returns  the offset distance (general and legacy) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double Distance
            (
            );
            /**Sets  the offset distance (general and legacy) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the offset distance type (general and legacy) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnMemberOffset::DistanceTypeMode DistanceType
            (
            );
            /**Sets  the offset distance type (general and legacy) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDistanceType
            (
                NXOpen::CAM::BoundaryTurnMemberOffset::DistanceTypeMode newValue /** newvalue */ 
            );
            /**Returns  the offset axial distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double AxialDistance
            (
            );
            /**Sets  the offset axial distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetAxialDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the offset radial distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double RadialDistance
            (
            );
            /**Sets  the offset radial distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRadialDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the offset start distance (conical) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double StartDistance
            (
            );
            /**Sets  the offset start distance (conical) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetStartDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the offset end distance (conical) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double EndDistance
            (
            );
            /**Sets  the offset end distance (conical) 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetEndDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the offset vector 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXObject * Vector
            (
            );
            /**Sets  the offset vector 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVector
            (
                NXOpen::NXObject * newValue /** vector */
            );
            /**Returns  the offset vecot distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : None */
            public: double VectorDistance
            (
            );
            /**Sets  the offset vecot distance 
             <br>  Created in NX9.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetVectorDistance
            (
                double newValue /** newvalue */ 
            );
            /**Returns  the variable stock 
             <br>  Created in NX10.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BoundaryTurnVariableStock * VariableStock
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
