#ifndef NXOpen_FEATURES_SHIPDESIGN_CUSTOMBRACKETBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_CUSTOMBRACKETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_CustomBracketBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SketchExpressionModifierBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class CustomBracketBuilder;
        }
    }
    class CoordinateSystem;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Plane;
    class Point;
    class ScCollector;
    class SketchExpressionModifierBuilder;
    namespace Features
    {
        namespace ShipDesign
        {
            class _CustomBracketBuilderBuilder;
            class CustomBracketBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::CustomBracket NXOpen::Features::ShipDesign::CustomBracket@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateCustomBracketBuilder  NXOpen::Features::ShipCollection::CreateCustomBracketBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            SketchBlock.Exp1.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp10.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp11.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp12.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp2.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp3.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp4.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp5.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp6.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp7.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp8.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Exp9.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            SketchBlock.Sketches </term> <description> 
             
            EndCut1 </description> </item> 

            </list> 

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  CustomBracketBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Creation method used to define the placement of the bracket */
                public: enum CreationMethod
                {
                    CreationMethodPlanesAndPoint/** planes and point */ ,
                    CreationMethodSpecifyCSYS/** specify csys */ 
                };

                private: CustomBracketBuilderImpl * m_custombracketbuilder_impl;
                private: friend class  _CustomBracketBuilderBuilder;
                protected: CustomBracketBuilder();
                public: ~CustomBracketBuilder();
                /**Returns  the placement plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * PlacementPlane
                (
                );
                /**Sets  the placement plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetPlacementPlane
                (
                    NXOpen::Plane * placementPlane /** placementplane */ 
                );
                /**Returns  the toggle which allows re-use of the previous placement plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepPlacementPlane
                (
                );
                /**Sets  the toggle which allows re-use of the previous placement plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepPlacementPlane
                (
                    bool keepPlacementPlane /** keepplacementplane */ 
                );
                /**Returns  the reference plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * ReferencePlane
                (
                );
                /**Sets  the reference plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetReferencePlane
                (
                    NXOpen::Plane * referencePlane /** referenceplane */ 
                );
                /**Returns  the toggle which allows re-use of the previous reference plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepReferencePlane
                (
                );
                /**Sets  the toggle which allows re-use of the previous reference plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepReferencePlane
                (
                    bool keepReferencePlane /** keepreferenceplane */ 
                );
                /**Returns  the heel point 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * HeelPoint
                (
                );
                /**Sets  the heel point 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetHeelPoint
                (
                    NXOpen::Point * heelPoint /** heelpoint */ 
                );
                /**Returns  the toggle which allows re-use of the previous heel point 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepHeelPoint
                (
                );
                /**Sets  the toggle which allows re-use of the previous heel point 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepHeelPoint
                (
                    bool keepHeelPoint /** keepheelpoint */ 
                );
                /**Returns  the select trim face.
                            Specifies the face(s) to cut holes in. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * SelectTrimFace
                (
                );
                /**Returns  the keep select trim face
                            A toggle used to remember the selected object(s) on apply. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepSelectTrimFace
                (
                );
                /**Sets  the keep select trim face
                            A toggle used to remember the selected object(s) on apply. 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepSelectTrimFace
                (
                    bool keepSelectTrimFace /** keepselecttrimface */ 
                );
                /**Returns  the heel offset 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * HeelOffset
                (
                );
                /**Returns  the thickness of the bracket 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Thickness
                (
                );
                /**Returns  the sketch block 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SketchExpressionModifierBuilder * SketchBlock
                (
                );
                /**Returns  the method used to define the placement of the bracket 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::CustomBracketBuilder::CreationMethod PlacementType
                (
                );
                /**Sets  the method used to define the placement of the bracket 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetPlacementType
                (
                    NXOpen::Features::ShipDesign::CustomBracketBuilder::CreationMethod placementType /** placementtype */ 
                );
                /**Returns  the placement csys of the bracket 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CoordinateSystem * CoordSystem
                (
                );
                /**Sets  the placement csys of the bracket 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetCoordSystem
                (
                    NXOpen::CoordinateSystem * coordSystem /** coordsystem */ 
                );
                /**Returns  the toggle which allows re-use of the previous coordinate system 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepCoordSystem
                (
                );
                /**Sets  the toggle which allows re-use of the previous coordinate system 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepCoordSystem
                (
                    bool keepCoordSystem /** keepcoordsystem */ 
                );
                /**Returns  the flip direction toggle for the extrude direction 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection
                (
                );
                /**Sets  the flip direction toggle for the extrude direction 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetReverseDirection
                (
                    bool reverseDirection /** reversedirection */ 
                );
                /**Returns  the toggle which allows re-use of the previous flip direction toggle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool KeepReverseDirection
                (
                );
                /**Sets  the toggle which allows re-use of the previous flip direction toggle 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetKeepReverseDirection
                (
                    bool keepReverseDirection /** keepreversedirection */ 
                );
                /**Returns  the name attribute value 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int AttributeName
                (
                );
                /**Sets  the name attribute value 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetAttributeName
                (
                    int name /** name */ 
                );
                /** Returns the list of available name attributes  @return  Array of available attribute names.
                                                                              These names are specified in the customer
                                                                              defaults file.  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetAvailableAttributeNames
                (
                );
                /**Returns  the material attribute 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int AttributeMaterial
                (
                );
                /**Sets  the material attribute 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") */
                public: void SetAttributeMaterial
                (
                    int material /** material */ 
                );
                /** Returns the list of available material attributes  @return  Array of available attribute materials.
                                                                              These materials are specified in the customer
                                                                              defaults file.  
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetAvailableAttributeMaterials
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
