#ifndef NXOpen_SIM_POSTCONFIGURATOR_ADDLAYERBUILDER_HXX_INCLUDED
#define NXOpen_SIM_POSTCONFIGURATOR_ADDLAYERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_PostConfigurator_AddLayerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        namespace PostConfigurator
        {
            class AddLayerBuilder;
        }
    }
    class Builder;
    namespace SIM
    {
        namespace PostConfigurator
        {
            class _AddLayerBuilderBuilder;
            class AddLayerBuilderImpl;
            /** This class is used to create a new layer.
                        Calling @link Builder::Commit Builder::Commit@endlink  on this builder will only return NULL.
                     <br> This is an abstract class, and cannot be instantiated.  <br> 
             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_SIMEXPORT  AddLayerBuilder : public NXOpen::Builder
            {
                private: AddLayerBuilderImpl * m_addlayerbuilder_impl;
                private: friend class  _AddLayerBuilderBuilder;
                protected: AddLayerBuilder();
                public: ~AddLayerBuilder();
                /**Returns  the layer name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString LayerName
                (
                );
                /**Sets  the layer name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetLayerName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the layer name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetLayerName
                (
                    const char * name /** name */ 
                );
                /**Returns  the layer file name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString LayerFileName
                (
                );
                /**Sets  the layer file name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetLayerFileName
                (
                    const NXString & fileName /** filename */ 
                );
                /**Sets  the layer file name 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                void SetLayerFileName
                (
                    const char * fileName /** filename */ 
                );
                /**Returns  the flag of create tcl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateDirectoryForLayer
                (
                );
                /**Sets  the flag of create tcl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetCreateDirectoryForLayer
                (
                    bool createFolder /** createfolder */ 
                );
                /**Returns  the flag of create tcl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateTclFile
                (
                );
                /**Sets  the flag of create tcl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetCreateTclFile
                (
                    bool createTclFile /** createtclfile */ 
                );
                /**Returns  the flag of create def file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateDefinitionFile
                (
                );
                /**Sets  the flag of create def file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetCreateDefinitionFile
                (
                    bool createDefFile /** createdeffile */ 
                );
                /**Returns  the flag of create cdl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool CreateUserDefinedEventFile
                (
                );
                /**Sets  the flag of create cdl file 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_post_config_full ("NX Post Configurator") OR nx_post_config_adv ("NX Post Configurator") */
                public: void SetCreateUserDefinedEventFile
                (
                    bool createCdlFile /** createcdlfile */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
