#ifndef NXOpen_MOLDCOOLING_MANAGER_HXX_INCLUDED
#define NXOpen_MOLDCOOLING_MANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MoldCooling_Manager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MoldCooling_AnalysisParams.hxx>
#include <NXOpen/MoldCooling_AnalysisParamsBuilder.hxx>
#include <NXOpen/MoldCooling_Circuit.hxx>
#include <NXOpen/MoldCooling_CircuitBuilder.hxx>
#include <NXOpen/MoldCooling_CircuitParams.hxx>
#include <NXOpen/MoldCooling_CircuitParamsBuilder.hxx>
#include <NXOpen/MoldCooling_MoldBody.hxx>
#include <NXOpen/MoldCooling_MoldBodyBuilder.hxx>
#include <NXOpen/MoldCooling_SolverOptions.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_moldcooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MoldCooling
    {
        class Manager;
    }
    class Session;
    namespace MoldCooling
    {
        class AnalysisParams;
    }
    namespace MoldCooling
    {
        class AnalysisParamsBuilder;
    }
    namespace MoldCooling
    {
        class Circuit;
    }
    namespace MoldCooling
    {
        class CircuitBuilder;
    }
    namespace MoldCooling
    {
        class CircuitCollection;
    }
    namespace MoldCooling
    {
        class CircuitParams;
    }
    namespace MoldCooling
    {
        class CircuitParamsBuilder;
    }
    namespace MoldCooling
    {
        class CircuitParamsCollection;
    }
    namespace MoldCooling
    {
        class MoldBody;
    }
    namespace MoldCooling
    {
        class MoldBodyBuilder;
    }
    namespace MoldCooling
    {
        class SolverOptions;
    }
    class Part;
    namespace MoldCooling
    {
        class ManagerImpl;
        /**  Manager class for the mold cooling application. This is the main entry point to access and create mold cooling objects.  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_MOLDCOOLINGEXPORT  Manager
        {
            private: ManagerImpl * m_manager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit Manager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static Manager* theManager;
            /** Returns the Manager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static Manager* GetManager(NXOpen::Session *owner);
            public: ~Manager();
            /** Finds the @link NXOpen::MoldCooling::MoldBody NXOpen::MoldCooling::MoldBody@endlink  stored in the part, or NULL if it hasn't been created yet. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MoldCooling::MoldBody * FindMoldBody
            (
                NXOpen::Part * part /** part */ 
            );
            /** Finds the @link NXOpen::MoldCooling::AnalysisParams NXOpen::MoldCooling::AnalysisParams@endlink  stored in the part, or NULL if it hasn't been created yet. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MoldCooling::AnalysisParams * FindAnalysisParams
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a @link NXOpen::MoldCooling::MoldBodyBuilder NXOpen::MoldCooling::MoldBodyBuilder@endlink . 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: NXOpen::MoldCooling::MoldBodyBuilder * CreateMoldBodyBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::MoldBody * mold /** mold */ 
            );
            /** Creates a @link NXOpen::MoldCooling::AnalysisParamsBuilder NXOpen::MoldCooling::AnalysisParamsBuilder@endlink . 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: NXOpen::MoldCooling::AnalysisParamsBuilder * CreateAnalysisParamsBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::AnalysisParams * params /** params */ 
            );
            /** Runs the mold cooling thermal simulation. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void RunSimulation
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a @link NXOpen::MoldCooling::CircuitParamsBuilder NXOpen::MoldCooling::CircuitParamsBuilder@endlink . 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: NXOpen::MoldCooling::CircuitParamsBuilder * CreateCircuitParamsBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::CircuitParams * params /** params */ 
            );
            /** Import mold wizard cooling circuits 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void ImportMoldWizardCircuits
            (
                NXOpen::Part * part /** part */ 
            );
            /** Creates a @link NXOpen::MoldCooling::CircuitBuilder NXOpen::MoldCooling::CircuitBuilder@endlink . 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: NXOpen::MoldCooling::CircuitBuilder * CreateCircuitBuilder
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::Circuit * circuit /** circuit */ 
            );
            /** Deletes the selected cooling circuit 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void DeleteCircuit
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::Circuit * circuit /** circuit */ 
            );
            /** Deletes the selected cooling circuit fluid parameters 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void DeleteCircuitParams
            (
                NXOpen::Part * part /** part */ ,
                NXOpen::MoldCooling::CircuitParams * params /** params */ 
            );
            /** Finds the @link NXOpen::MoldCooling::SolverOptions NXOpen::MoldCooling::SolverOptions@endlink  stored in the part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MoldCooling::SolverOptions * FindSolverOptions
            (
                NXOpen::Part * part /** part */ 
            );


            /** Returns cooling circuits collection 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::MoldCooling::CircuitCollection *Circuits();
            /** Returns cooling circuits collection 
             <br>  Created in NX1926.0.0.  <br>  
            */
            public: NXOpen::MoldCooling::CircuitParamsCollection *CircuitFluidParams();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
