#ifndef NXOpen_MOTION_CURVECONTACTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_CURVECONTACTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_CurveContactBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class CurveContactBuilder;
    }
    class Builder;
    namespace Motion
    {
        class CurveContactAdams;
    }
    namespace Motion
    {
        class CurveContactRecurdyn;
    }
    class SelectNXObjectList;
    namespace Motion
    {
        class _CurveContactBuilderBuilder;
        class CurveContactBuilderImpl;
        /** Represents a @link NXOpen::Motion::CurveContactBuilder NXOpen::Motion::CurveContactBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Motion::CurveContactCollection::CreateCurveContactBuilder  NXOpen::Motion::CurveContactCollection::CreateCurveContactBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AdamsParameters.DynamicCoefficientExpression.Value </term> <description> 
         
        0.05 </description> </item> 

        <item><term> 
         
        AdamsParameters.ForceExponentExpression.Value </term> <description> 
         
        1.2 </description> </item> 

        <item><term> 
         
        AdamsParameters.MaterialDampingExpression.Value </term> <description> 
         
        100000.0 (millimeters part), 570.993 (inches part) </description> </item> 

        <item><term> 
         
        AdamsParameters.PenetrationDepthExpression.Value </term> <description> 
         
        0.001 (millimeters part), 0.00003937 (inches part) </description> </item> 

        <item><term> 
         
        AdamsParameters.SlipVelocityExpression.Value </term> <description> 
         
        0.1 (millimeters part), 0.003937 (inches part) </description> </item> 

        <item><term> 
         
        AdamsParameters.StaticCoefficientExpression.Value </term> <description> 
         
        0.08 </description> </item> 

        <item><term> 
         
        AdamsParameters.StiffnessExpression.Value </term> <description> 
         
        100000000000.0 (millimeters part), 570993141.98628 (inches part) </description> </item> 

        <item><term> 
         
        AdamsParameters.TransitionVelocityExpression.Value </term> <description> 
         
        1.0 (millimeters part), 0.03937 (inches part) </description> </item> 

        <item><term> 
         
        DisplayScale </term> <description> 
         
        1.0 </description> </item> 

        <item><term> 
         
        RecurdynParameters.BufferRadiusFactorExpression.Value </term> <description> 
         
        1.2 </description> </item> 

        <item><term> 
         
        RecurdynParameters.CurveToleranceFactorExpression.Value </term> <description> 
         
        10.0 </description> </item> 

        <item><term> 
         
        RecurdynParameters.DynamicCoefficientExpression.Value </term> <description> 
         
        0.05 </description> </item> 

        <item><term> 
         
        RecurdynParameters.FirstCurveMaximumPenetrationExpression.Value </term> <description> 
         
        10.0 (millimeters part), 0.3937 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.ForceExponentExpression.Value </term> <description> 
         
        1.2 </description> </item> 

        <item><term> 
         
        RecurdynParameters.MaterialDampingExpression.Value </term> <description> 
         
        100000.0 (millimeters part), 570.993 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.MaximumStepSizeFactorExpression.Value </term> <description> 
         
        2.0 </description> </item> 

        <item><term> 
         
        RecurdynParameters.PenetrationDepthExpression.Value </term> <description> 
         
        0.001 (millimeters part), 0.00003937 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.SecondCurveMaximumPenetrationExpression.Value </term> <description> 
         
        10.0 (millimeters part), 0.3937 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.SlipVelocityExpression.Value </term> <description> 
         
        0.1 (millimeters part), 0.003937 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.StaticCoefficientExpression.Value </term> <description> 
         
        0.08 </description> </item> 

        <item><term> 
         
        RecurdynParameters.StiffnessExpression.Value </term> <description> 
         
        100000000000.0 (millimeters part), 570993141.98628 (inches part) </description> </item> 

        <item><term> 
         
        RecurdynParameters.TransitionVelocityExpression.Value </term> <description> 
         
        1.0 (millimeters part), 0.03937 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  CurveContactBuilder : public NXOpen::Builder
        {
            /** the enum for the materia side direction of the selected geometry*/
            public: enum GeometryMaterialSide
            {
                GeometryMaterialSideDirection/** direction */ ,
                GeometryMaterialSideDirectionReverse/** direction reverse */ 
            };

            private: CurveContactBuilderImpl * m_curvecontactbuilder_impl;
            private: friend class  _CurveContactBuilderBuilder;
            protected: CurveContactBuilder();
            public: ~CurveContactBuilder();
            /**Returns  the selection of the first contact curve 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * FirstContactCurve
            (
            );
            /**Returns  the selection of the second contact curve 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObjectList * SecondContactCurve
            (
            );
            /**Returns  the contact name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ContactName
            (
            );
            /**Sets  the contact name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetContactName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the contact name 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetContactName
            (
                const char * name /** name */ 
            );
            /**Returns  the display scale 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: double DisplayScale
            (
            );
            /**Sets  the display scale 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetDisplayScale
            (
                double displayScale /** display scale */ 
            );
            /**Returns  the first geometry materia side direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide FirstGeometryMaterialDirection
            (
            );
            /**Sets  the first geometry materia side direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetFirstGeometryMaterialDirection
            (
                NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide sideDirection /** side direction */ 
            );
            /**Returns  the second geometry materia side direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide SecondGeometryMaterialDirection
            (
            );
            /**Sets  the second geometry materia side direction 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSecondGeometryMaterialDirection
            (
                NXOpen::Motion::CurveContactBuilder::GeometryMaterialSide sideDirection /** side direction */ 
            );
            /**Returns  the 2D CurveContact's subobject (the adams parameters) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::CurveContactAdams * AdamsParameters
            (
            );
            /**Returns  the 2D CurveContact's subobject (the recurdyn parameters) 
             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::CurveContactRecurdyn * RecurdynParameters
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
