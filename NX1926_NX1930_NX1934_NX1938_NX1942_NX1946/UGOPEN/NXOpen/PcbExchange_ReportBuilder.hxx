#ifndef NXOpen_PCBEXCHANGE_REPORTBUILDER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_REPORTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_ReportBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class ReportBuilder;
    }
    class Builder;
    namespace PcbExchange
    {
        class _ReportBuilderBuilder;
        class ReportBuilderImpl;
        /** Represents a @link NXOpen::PcbExchange::ReportBuilder NXOpen::PcbExchange::ReportBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::PcbExchange::Manager::CreateReportBuilder  NXOpen::PcbExchange::Manager::CreateReportBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  ReportBuilder : public NXOpen::Builder
        {
            /** This enum defines the report types. */
            public: enum TypeEnum
            {
                TypeEnumValidation/** validation */ ,
                TypeEnumLightweightValidation/** lightweight validation */ ,
                TypeEnumComponent/** component */ ,
                TypeEnumThermalDatabase/** thermal database */ 
            };

            private: ReportBuilderImpl * m_reportbuilder_impl;
            private: friend class  _ReportBuilderBuilder;
            protected: ReportBuilder();
            public: ~ReportBuilder();
            /**Returns  the report type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: NXOpen::PcbExchange::ReportBuilder::TypeEnum ReportType
            (
            );
            /**Sets  the report type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void SetReportType
            (
                NXOpen::PcbExchange::ReportBuilder::TypeEnum type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
