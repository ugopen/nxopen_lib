#ifndef NXOpen_ANIMATIONDESIGNER_ANIMATEDCAMERABUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_ANIMATEDCAMERABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_AnimatedCameraBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class AnimatedCameraBuilder;
    }
    class Builder;
    class Expression;
    namespace AnimationDesigner
    {
        class _AnimatedCameraBuilderBuilder;
        class AnimatedCameraBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::AnimatedCameraBuilder NXOpen::AnimationDesigner::AnimatedCameraBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::AnimatedCameraCollection::CreateAnimatedCameraBuilder  NXOpen::AnimationDesigner::AnimatedCameraCollection::CreateAnimatedCameraBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  AnimatedCameraBuilder : public NXOpen::Builder
        {
            /**  @brief  the camera mode types.  

              */
            public: enum CameraModeTypes
            {
                CameraModeTypesUserDefined/** User Defined */,
                CameraModeTypesTurntable/** Turntable */
            };

            /**  @brief  the camera axis types.  

              */
            public: enum CameraAxisTypes
            {
                CameraAxisTypesX/** X */,
                CameraAxisTypesY/** Y */,
                CameraAxisTypesZ/** Z */
            };

            private: AnimatedCameraBuilderImpl * m_animatedcamerabuilder_impl;
            private: friend class  _AnimatedCameraBuilderBuilder;
            protected: AnimatedCameraBuilder();
            public: ~AnimatedCameraBuilder();
            /**Returns   @brief  the mode type.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::AnimatedCameraBuilder::CameraModeTypes CameraModeType
            (
            );
            /**Sets   @brief  the mode type.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetCameraModeType
            (
                NXOpen::AnimationDesigner::AnimatedCameraBuilder::CameraModeTypes modeType /** modetype */ 
            );
            /**Returns   @brief  the axis type.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::AnimatedCameraBuilder::CameraAxisTypes CameraAxisType
            (
            );
            /**Sets   @brief  the axis type.  

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetCameraAxisType
            (
                NXOpen::AnimationDesigner::AnimatedCameraBuilder::CameraAxisTypes axisType /** axistype */ 
            );
            /**Returns  the camera angle. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * CameraAngle
            (
            );
            /**Returns  the rotational speed. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * RotationSpeed
            (
            );
            /** Creates a new pov. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void CreatePOV
            (
                double currentTime /** currenttime */ 
            );
            /** Updates a pov 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void UpdatePOV
            (
                int pos /** pos */ 
            );
            /** Deletes the povs. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void DeletePOVs
            (
                const std::vector<int> & povs /** povs */ 
            );
            /** Sets the pov name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetPOVName
            (
                int pos /** pos */ ,
                const NXString & name /** name */ 
            );
            /** Sets the pov name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetPOVName
            (
                int pos /** pos */ ,
                const char * name /** name */ 
            );
            /** Sets the pov start time. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetPOVStartTime
            (
                int pos /** pos */ ,
                double startTime /** start time */ 
            );
            /** Sets the pov step count. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetPOVStepNumber
            (
                int pos /** pos */ ,
                int stepNum /** step num */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
