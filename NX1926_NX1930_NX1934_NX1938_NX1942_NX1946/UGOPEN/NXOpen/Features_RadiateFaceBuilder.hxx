#ifndef NXOpen_FEATURES_RADIATEFACEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_RADIATEFACEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_RadiateFaceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FaceRecognitionBuilder.hxx>
#include <NXOpen/GeometricUtilities_FaceChangeOverflowBehavior.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class RadiateFaceBuilder;
    }
    class Expression;
    namespace Features
    {
        class FaceRecognitionBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class FaceChangeOverflowBehavior;
    }
    class SelectFace;
    namespace Features
    {
        class _RadiateFaceBuilderBuilder;
        class RadiateFaceBuilderImpl;
        /** Represents a @link NXOpen::Features::RadiateFace NXOpen::Features::RadiateFace@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateRadiateFaceBuilder  NXOpen::Features::FeatureCollection::CreateRadiateFaceBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DimensionType </term> <description> 
         
        Offset </description> </item> 

        <item><term> 
         
        Distance.Value </term> <description> 
         
        0.0 (millimeters part), 0.0 (inches part) </description> </item> 

        <item><term> 
         
        FaceToRadiate.CoaxialEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.CoplanarAxesEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.CoplanarEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.EqualDiameterEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.OffsetEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.ParallelEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.PerpendicularEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.SameOrbitEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.SymmetricEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.TangentEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.ThicknessChainEnabled </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FaceToRadiate.UseFaceBrowse </term> <description> 
         
        1 </description> </item> 

        </list> 

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  RadiateFaceBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** Represents the radiate face dimension type */
            public: enum DimensionTypes
            {
                DimensionTypesOffset/** Adds radiate face with a delta radius value.*/,
                DimensionTypesDiameter/** Adds radiate face with an absolute diameter value.*/,
                DimensionTypesRadius/** Adds radiate face with an absolute radius value.*/
            };

            private: RadiateFaceBuilderImpl * m_radiatefacebuilder_impl;
            private: friend class  _RadiateFaceBuilderBuilder;
            protected: RadiateFaceBuilder();
            public: ~RadiateFaceBuilder();
            /**Returns  the radiate face dimension type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::RadiateFaceBuilder::DimensionTypes DimensionType
            (
            );
            /**Sets  the radiate face dimension type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionType
            (
                NXOpen::Features::RadiateFaceBuilder::DimensionTypes type /** type */ 
            );
            /**Returns  the face to radiate 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::FaceRecognitionBuilder * FaceToRadiate
            (
            );
            /**Returns  the offset distance 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Distance
            (
            );
            /**Returns  the reverse offset direction 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseDirection
            (
            );
            /**Sets  the reverse offset direction 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") OR cam_base ("CAM BASE") OR insp_programming ("INSPECTION PROGRAMMING") */
            public: void SetReverseDirection
            (
                bool reverseDirection /** the flag of reverse direction */
            );
            /**Returns  the referenced face or edge 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFace * Reference
            (
            );
            /**Returns  the axial face 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFace * AxisSel
            (
            );
            /**Returns  the diameter 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Diameter
            (
            );
            /**Returns  the radius 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Radius
            (
            );
            /**Returns  the face change overflow behavior. Please refer @link NXOpen::GeometricUtilities::FaceChangeOverflowBehavior NXOpen::GeometricUtilities::FaceChangeOverflowBehavior@endlink  for details. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::FaceChangeOverflowBehavior * FaceChangeOverflowBehavior
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
