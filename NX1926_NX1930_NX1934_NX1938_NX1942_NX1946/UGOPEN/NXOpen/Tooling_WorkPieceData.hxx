#ifndef NXOpen_TOOLING_WORKPIECEDATA_HXX_INCLUDED
#define NXOpen_TOOLING_WORKPIECEDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_WorkPieceData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class WorkPieceData;
    }
    namespace Tooling
    {
        class WorkPieceDataImpl;
        /** Represents the workpiece data in Workpiece Builder. <br> To create an instance of this object use @link Tooling::WorkpieceBuilder::CreateWorkPieceData Tooling::WorkpieceBuilder::CreateWorkPieceData@endlink   <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  WorkPieceData : public NXOpen::TransientObject
        {
            private: WorkPieceDataImpl * m_workpiecedata_impl;
            /// \cond NX_NO_DOC 
            public: explicit WorkPieceData(void *ptr);
            /// \endcond 
            /** Dispose the workpiece data. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~WorkPieceData();
            /** Delays the update of geometry and expressions. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetSessionDelay
            (
                bool isDelay /** isdelay */ 
            );
            /** Sets the dimension of the product body one by one. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetOneProdDim
            (
                int num /** Product body dimension number, the value which corresponds will be set*/,
                double dimension /** Product body dimension */
            );
            /** Sets distance offset value.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDimOffset
            (
                const std::vector<double> & dimOffset /** The minus and plus value of the distance offset */
            );
            /** Sets distance offset value one by one.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetOneDimOffset
            (
                int num /** Distance offset number, the value which corresponds will be set */,
                double dimOffset /** The distance offset */
            );
            /** Sets the workpiece total length.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDim
            (
                const std::vector<double> & dimension /** The total length of the workpiece */
            );
            /** Sets the workpiece total length one by one .
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetOneDim
            (
                int num /** Dimension number, the value which corresponds will be set */,
                double dimension /** The length of the workpiece */
            );
            /** Sets the value of the reference point. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetOriginPointCoord
            (
                int num /** Origin point number,the value which corresponds will be set */,
                double originPoint /** Origin point coordinate */
            );
            /** Records workpiece data changed or not. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetDataChanged
            (
                bool isChanged /** ischanged */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
