#ifndef NXOpen_MECHATRONICS_JOINTJOGGERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_JOINTJOGGERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_JointJoggerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class JointJoggerBuilder;
    }
    class Builder;
    class NXObject;
    namespace Mechatronics
    {
        class _JointJoggerBuilderBuilder;
        class JointJoggerBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::JointJoggerBuilder NXOpen::Mechatronics::JointJoggerBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::JointJoggerCollection::CreateJointJoggerBuilder  NXOpen::Mechatronics::JointJoggerCollection::CreateJointJoggerBuilder @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  JointJoggerBuilder : public NXOpen::Builder
        {
            private: JointJoggerBuilderImpl * m_jointjoggerbuilder_impl;
            private: friend class  _JointJoggerBuilderBuilder;
            protected: JointJoggerBuilder();
            public: ~JointJoggerBuilder();
            /** Adds the joint data. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void AddJointData
            (
                NXOpen::NXObject * joint /** RevoluteJoint or SliderJoint or CylindricalJoint or ScrewJoint */
            );
            /** Removes the joint data. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void RemoveJointData
            (
                NXOpen::NXObject * joint /** RevoluteJoint or SliderJoint or CylindricalJoint or ScrewJoint */
            );
            /** Edits the joint angle. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditJointAngle
            (
                NXOpen::NXObject * joint /** RevoluteJoint or CylindricalJoint */,
                double angleValue /** anglevalue */ 
            );
            /** Edits the joint distance. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void EditJointDistance
            (
                NXOpen::NXObject * joint /** SliderJoint or CylindricalJoint or ScrewJoint */,
                double distanceValue /** distancevalue */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
