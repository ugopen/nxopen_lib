#ifndef NXOpen_CAE_POSTENTITIESSELECTION_HXX_INCLUDED
#define NXOpen_CAE_POSTENTITIESSELECTION_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostEntitiesSelection.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostEntitiesSelection;
    }
    class TaggedObject;
    namespace CAE
    {
        class _PostEntitiesSelectionBuilder;
        class PostEntitiesSelectionImpl;

        /// \cond NX_NO_DOC 
        /** Represents a @link NXOpen::CAE::PostEntitiesSelection NXOpen::CAE::PostEntitiesSelection@endlink   <br> This is a sub object  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostEntitiesSelection : public NXOpen::TaggedObject
        {
            /** Selection Entity Type */
            public: enum Type
            {
                TypeFullResultModel/** retrieve nodes and elements from result model */,
                TypeNodes/** nodes */ ,
                TypeElements/** elements */ ,
                TypeGroups/** groups */ ,
                TypeSelectionRecipes/** selection recipes */ 
            };

            /** Result Model Type */
            public: enum ResultModelType
            {
                ResultModelTypeFirstResult/** always retrieve nodes and elements from the first result model */
            };

            private: PostEntitiesSelectionImpl * m_postentitiesselection_impl;
            private: friend class  _PostEntitiesSelectionBuilder;
            protected: PostEntitiesSelection();
            public: ~PostEntitiesSelection();
            /**Returns  the selection entity type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::PostEntitiesSelection::Type SelectionEntityType
            (
            );
            /**Sets  the selection entity type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetSelectionEntityType
            (
                NXOpen::CAE::PostEntitiesSelection::Type entityType /** entitytype */ 
            );
            /**Returns  the full result model type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: NXOpen::CAE::PostEntitiesSelection::ResultModelType FullResultModelType
            (
            );
            /**Sets  the full result model type 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetFullResultModelType
            (
                NXOpen::CAE::PostEntitiesSelection::ResultModelType resultModelType /** resultmodeltype */ 
            );
            /** Gets the entities.
                    
                    The entities could be nodes, or elements, or groups, or selection recipes.
                    They must be matched to the selection entity type.
                    
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void GetSelectedEntities
            (
                std::vector<NXOpen::TaggedObject *> & entities /** entities */ 
            );
            /** Sets the entities.
                    
                    The entities could be nodes, or elements, or groups, or selection recipes.
                    They must be matched to the selection entity type.
                    
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") OR sc_results_viewer (" Simcenter Results Viewer") */
            public: void SetSelectedEntities
            (
                const std::vector<NXOpen::TaggedObject *> & entities /** entities */ 
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
