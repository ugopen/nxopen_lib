#ifndef NXOpen_NXTRANSLATORSAUTOTESTPRINT_HXX_INCLUDED
#define NXOpen_NXTRANSLATORSAUTOTESTPRINT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NXTranslatorsAutotestPrint.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebugsessioncpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class NXTranslatorsAutotestPrint;
    class DebugSession;
    class NXTranslatorsAutotestPrintImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used for NX testing.  This class should not
    be made available to customers  <br> To obtain an instance of this class, refer to @link NXOpen::DebugSession  NXOpen::DebugSession @endlink  <br> 
     <br>  Created in NX1847.0.0.  <br>  
    */
    class NXOPENDEBUGSESSIONCPPEXPORT  NXTranslatorsAutotestPrint
    {
         /** Dataset information */
        public:
        struct DatasetInfo
        {
            public: /** item */ NXString Item;
            public: /** revision */ NXString Revision;
            public: /** relation */ NXString Relation;
            public: /** datasettype */ NXString DatasetType;
            public: /** namedreftype */ NXString NamedRefType;
            public: /** datasetname */ NXString DatasetName;
            public: DatasetInfo() :
                Item(),
                Revision(),
                Relation(),
                DatasetType(),
                NamedRefType(),
                DatasetName()
            {
            }
            /** Constructor for the DatasetInfo struct. */ 
            public: DatasetInfo(const NXString &itemInitial /** item */ , 
                    const NXString &revisionInitial /** revision */ , 
                    const NXString &relationInitial /** relation */ , 
                    const NXString &datasetTypeInitial /** datasettype */ , 
                    const NXString &namedRefTypeInitial /** namedreftype */ , 
                    const NXString &datasetNameInitial /** datasetname */ ) :
                Item(itemInitial),
                Revision(revisionInitial),
                Relation(relationInitial),
                DatasetType(datasetTypeInitial),
                NamedRefType(namedRefTypeInitial),
                DatasetName(datasetNameInitial)
            {
            }
        };

        private: NXTranslatorsAutotestPrintImpl * m_nxtranslatorsautotestprint_impl;
        private: NXOpen::DebugSession* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit NXTranslatorsAutotestPrint(NXOpen::DebugSession *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~NXTranslatorsAutotestPrint();
        /** Call JT compare for file->export workflow
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void JtCompare
        (
        );
        /** Call JT compare for ugtopv.exe
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        public: void JtCompareUgtopv
        (
            const NXString & inputPart /** inputpart */ ,
            const NXString & structureOptions /** structure options */ ,
            const NXString & configFile /** config file */ 
        );
        /** Call JT compare for ugtopv.exe
         <br>  Created in NX1847.0.0.  <br>  
         <br> License requirements : None */
        void JtCompareUgtopv
        (
            const char * inputPart /** inputpart */ ,
            const char * structureOptions /** structure options */ ,
            const char * configFile /** config file */ 
        );
        /** Managed mode JT compare
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void JtSaveManaged
        (
        );
        /** Downloads Jt file from Teamcenter when provided with jt named ref
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        public: void DownloadJtFileFromTeamcenter
        (
            const NXString & datasetName /** dataset name */ ,
            const NXString & managedJtName /** managed jt name */ 
        );
        /** Downloads Jt file from Teamcenter when provided with jt named ref
         <br>  Created in NX1872.0.0.  <br>  
         <br> License requirements : None */
        void DownloadJtFileFromTeamcenter
        (
            const char * datasetName /** dataset name */ ,
            const char * managedJtName /** managed jt name */ 
        );
        /** Downloads any file from Teamcenter when provided with named ref @return Out path 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: NXString DownloadFileFromTeamcenter
        (
            const NXString & sManagedmodeFilepath /**Part spec */
        );
        /** Downloads any file from Teamcenter when provided with named ref @return Out path 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        NXString DownloadFileFromTeamcenter
        (
            const char * sManagedmodeFilepath /**Part spec */
        );
        /** Downloads all named ref files from Teamcenter when provided with dataset info @return Output filenae 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: NXString DownloadNamedRefs
        (
            const NXOpen::NXTranslatorsAutotestPrint::DatasetInfo & datasetInfo /**Dataset info */
        );
        /** Extract zip archive 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        public: void ExtractZip
        (
            const NXString & sArchivePath /** Zip path */
        );
        /** Extract zip archive 
         <br>  Created in NX1899.0.0.  <br>  
         <br> License requirements : None */
        void ExtractZip
        (
            const char * sArchivePath /** Zip path */
        );
    }; //lint !e1712 default constructor not defined for class  


    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
