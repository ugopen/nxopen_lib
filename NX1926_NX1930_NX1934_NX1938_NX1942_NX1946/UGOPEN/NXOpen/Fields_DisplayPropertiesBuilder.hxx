#ifndef NXOpen_FIELDS_DISPLAYPROPERTIESBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_DISPLAYPROPERTIESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_DisplayPropertiesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class DisplayPropertiesBuilder;
    }
    class Builder;
    class Expression;
    class NXColor;
    namespace Fields
    {
        class _DisplayPropertiesBuilderBuilder;
        class DisplayPropertiesBuilderImpl;
        /**  @brief  Represents a builder class for editing display properties of a @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink   

         
             <br> Used to edit a @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink  display properties. <br> 
             <br> To create a new instance of this class, use @link NXOpen::Fields::FieldManager::CreateDisplayPropertiesBuilder  NXOpen::Fields::FieldManager::CreateDisplayPropertiesBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DepCalcSymblSize </term> <description> 
         
        0.1 </description> </item> 

        <item><term> 
         
        DepDispType </term> <description> 
         
        Symbol </description> </item> 

        <item><term> 
         
        DepDomColor </term> <description> 
         
        Inherit </description> </item> 

        <item><term> 
         
        DepLabelValues </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        DepRangeMax </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DepRangeMin </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DisplayResolution </term> <description> 
         
        Standard </description> </item> 

        <item><term> 
         
        FaceAnalysis </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        FieldQuantity </term> <description> 
         
        Type0 </description> </item> 

        <item><term> 
         
        HeteroTblDispOption </term> <description> 
         
        ShowAverageValue </description> </item> 

        <item><term> 
         
        IndepDispType </term> <description> 
         
        Hide </description> </item> 

        <item><term> 
         
        Layer </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        LegendPosition </term> <description> 
         
        Left </description> </item> 

        <item><term> 
         
        LineFont </term> <description> 
         
        Solid </description> </item> 

        <item><term> 
         
        LineWidth </term> <description> 
         
        Normal </description> </item> 

        <item><term> 
         
        PartiallyShaded </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        PrimaryVar.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        Range </term> <description> 
         
        Auto </description> </item> 

        <item><term> 
         
        RangeMax </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        RangeMin </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ShowAxis </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowDefaultVal </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowDescription </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowLabels </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowMapTopo </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowName </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowOverflowValues </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowSrcTblVals </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ShowUndefValues </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ShowUnderflowValues </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        SpectrumLevels </term> <description> 
         
        3 </description> </item> 

        <item><term> 
         
        SurfaceOffset </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        TblDepPtType (deprecated) </term> <description> 
         
        Hide </description> </item> 

        <item><term> 
         
        TblIndepPtType (deprecated) </term> <description> 
         
        Hide </description> </item> 

        <item><term> 
         
        Translucency </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        XMax.Value </term> <description> 
         
        0 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        XMin.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        XNum </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        YMax.Value </term> <description> 
         
        0 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        YMin.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        YNum </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ZMax.Value </term> <description> 
         
        0 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        ZMin.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        ZNum </term> <description> 
         
        1 </description> </item> 

        </list> 

         <br>  Created in NX6.0.1.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  DisplayPropertiesBuilder : public NXOpen::Builder
        {
            /** Field Line Display Fonts */
            public: enum LineFontEnum
            {
                LineFontEnumSolid/** Solid */,
                LineFontEnumDashed/** Dashed */,
                LineFontEnumPhantom/** Phantom */,
                LineFontEnumCenterline/** Centerline */,
                LineFontEnumDotted/** Dotted */,
                LineFontEnumLongDashed/** LongDashed */,
                LineFontEnumDottedDashed/** DottedDashed */,
                LineFontEnumEight/** LongDashedDoubleDotted*/,
                LineFontEnumNine/** LongDashedDotted for OOTB Fonts and Undulating for shipbuilding fonts */,
                LineFontEnumTen/** LongDashedTriplicateDotted for OOTB fonts and Zigzag for shipbuilding fonts */,
                LineFontEnumEleven/** LongDashedDoubleShortDashed for OOTB fonts and Railway for shipbuilding fonts */
            };

            /** Field Line Widths */
            public: enum LineWidthEnum
            {
                LineWidthEnumNormal/** normal */ ,
                LineWidthEnumThick/** thick */ ,
                LineWidthEnumThin/** thin */ ,
                LineWidthEnumOne/** one */  = 5,
                LineWidthEnumTwo/** two */ ,
                LineWidthEnumThree/** three */ ,
                LineWidthEnumFour/** four */ ,
                LineWidthEnumFive/** five */ ,
                LineWidthEnumSix/** six */ ,
                LineWidthEnumSeven/** seven */ ,
                LineWidthEnumEight/** eight */ ,
                LineWidthEnumNine/** nine */ 
            };

            /** Field Indep Dom Disp */
            public: enum IndepDomDispType
            {
                IndepDomDispTypeNormal/** normal */ ,
                IndepDomDispTypePoint/** point */ ,
                IndepDomDispTypePlusSign/** plus sign */ ,
                IndepDomDispTypeAsterisk/** asterisk */ ,
                IndepDomDispTypeCircle/** circle */ ,
                IndepDomDispTypePoundSign/** pound sign */ ,
                IndepDomDispTypeCross/** cross */ ,
                IndepDomDispTypeSquare/** square */ ,
                IndepDomDispTypeTriangle/** triangle */ ,
                IndepDomDispTypeDiamond/** diamond */ ,
                IndepDomDispTypeCenterline/** centerline */ ,
                IndepDomDispTypeHide/** hide */ 
            };

            /** Field Disp Resolution */
            public: enum DispResolutionEnum
            {
                DispResolutionEnumCoarse/** coarse */ ,
                DispResolutionEnumStandard/** standard */ ,
                DispResolutionEnumFine/** fine */ ,
                DispResolutionEnumExtraFine/** extra fine */ ,
                DispResolutionEnumSuperFine/** super fine */ ,
                DispResolutionEnumUltraFine/** ultra fine */ ,
                DispResolutionEnumUserSpecified/** user specified */ 
            };

            /** Field Table Heterogeneous Values Display Option */
            public: enum HeteroTblDispOptionEnum
            {
                HeteroTblDispOptionEnumShowAverageValue/** show average value */ ,
                HeteroTblDispOptionEnumPrimaryVarValues/** primary var values */ ,
                HeteroTblDispOptionEnumShow1StValue/** show1st value */ ,
                HeteroTblDispOptionEnumShowLastValue/** show last value */ ,
                HeteroTblDispOptionEnumShowMinimumValue/** show minimum value */ ,
                HeteroTblDispOptionEnumShowMaximumValue/** show maximum value */ ,
                HeteroTblDispOptionEnumHide/** hide */ 
            };

            /** Field Dep Label Value */
            public: enum DepLabelValueEnum
            {
                DepLabelValueEnumNone/** none */ ,
                DepLabelValueEnumMinimumMaximum/** minimum maximum */ ,
                DepLabelValueEnumMaximum/** maximum */ ,
                DepLabelValueEnumMinimum/** minimum */ ,
                DepLabelValueEnumAll/** all */ 
            };

            /** Field Dep Disp Type */
            public: enum DepDispTypeEnum
            {
                DepDispTypeEnumSymbol/** symbol */ ,
                DepDispTypeEnumSurface/** surface */ ,
                DepDispTypeEnumSurfaceEdges/** surface edges */ ,
                DepDispTypeEnumHide/** hide */ 
            };

            /** Field Dep Dom Color */
            public: enum DepDomColorEnum
            {
                DepDomColorEnumInherit/** inherit */ ,
                DepDomColorEnumSpecified/** specified */ ,
                DepDomColorEnumSpectrum/** spectrum */ 
            };

            /** Field Values */
            public: enum ValuesEnum
            {
                ValuesEnumHide/** hide */ ,
                ValuesEnumPoint/** point */ ,
                ValuesEnumPlusSign/** plus sign */ ,
                ValuesEnumAsterisk/** asterisk */ ,
                ValuesEnumCircle/** circle */ ,
                ValuesEnumPoundSign/** pound sign */ ,
                ValuesEnumCross/** cross */ ,
                ValuesEnumSquare/** square */ ,
                ValuesEnumTriangle/** triangle */ ,
                ValuesEnumDiamond/** diamond */ ,
                ValuesEnumCenterline/** centerline */ 
            };

            /** Field Tbl Point Type */
            public: enum TblPointTypeEnum
            {
                TblPointTypeEnumHide/** hide */ ,
                TblPointTypeEnumShow/** show */ 
            };

            /** range for contour plots */
            public: enum ValueRange
            {
                ValueRangeAuto/** auto */ ,
                ValueRangeSpecified/** specified */ 
            };

            /** Scalar Field Type */
            public: enum ScalarType
            {
                ScalarTypeHide/** hide */ ,
                ScalarTypeMag/** mag */ 
            };

            /** Complex Scalar Field Type */
            public: enum ComplexScalarType
            {
                ComplexScalarTypeMag/** mag */ ,
                ComplexScalarTypeReal/** real */ ,
                ComplexScalarTypeImaginary/** imaginary */ ,
                ComplexScalarTypePhase/** phase */ 
            };

            /** Complex Vector Field Type */
            public: enum ComplexVectorType
            {
                ComplexVectorTypeXReal/** xreal */ ,
                ComplexVectorTypeYReal/** yreal */ ,
                ComplexVectorTypeZReal/** zreal */ ,
                ComplexVectorTypeXImaginary/** ximaginary */ ,
                ComplexVectorTypeYImaginary/** yimaginary */ ,
                ComplexVectorTypeZImaginary/** zimaginary */ 
            };

            /** Vector Field Type */
            public: enum VectorType
            {
                VectorTypeX/** x */ ,
                VectorTypeY/** y */ ,
                VectorTypeZ/** z */ ,
                VectorTypeMag/** mag */ 
            };

            /** Legacy_3D Type */
            public: enum Legacy3DType
            {
                Legacy3DTypeX/** x */ ,
                Legacy3DTypeY/** y */ ,
                Legacy3DTypeZ/** z */ 
            };

            /** Tensor Field Type */
            public: enum TensorType
            {
                TensorTypeXx/** xx */ ,
                TensorTypeYy/** yy */ ,
                TensorTypeZz/** zz */ ,
                TensorTypeXy/** xy */ ,
                TensorTypeYz/** yz */ ,
                TensorTypeZx/** zx */ ,
                TensorTypeMean/** mean */ ,
                TensorTypeMidPrncpl/** mid prncpl */ ,
                TensorTypeMinPrncpl/** min prncpl */ ,
                TensorTypeMaxPrncpl/** max prncpl */ ,
                TensorTypeOctahedral/** octahedral */ ,
                TensorTypeVonMises/** von mises */ 
            };

            /** Balance Strain Field Type */
            public: enum BalStrainType
            {
                BalStrainTypeXx/** xx */ ,
                BalStrainTypeYy/** yy */ ,
                BalStrainTypeZz/** zz */ ,
                BalStrainTypeXy/** xy */ ,
                BalStrainTypeYz/** yz */ ,
                BalStrainTypeZx/** zx */ ,
                BalStrainTypeOffSetXX/** off set xx */ ,
                BalStrainTypeOffSetYY/** off set yy */ ,
                BalStrainTypeOffSetZZ/** off set zz */ ,
                BalStrainTypeOffSetXY/** off set xy */ ,
                BalStrainTypeOffSetYZ/** off set yz */ ,
                BalStrainTypeOffSetZX/** off set zx */ 
            };

            /** Field Quanity Type */
            public: enum FieldQuantityType
            {
                FieldQuantityTypeType0/** type0 */ ,
                FieldQuantityTypeType1/** type1 */ ,
                FieldQuantityTypeType2/** type2 */ ,
                FieldQuantityTypeType3/** type3 */ ,
                FieldQuantityTypeType4/** type4 */ ,
                FieldQuantityTypeType5/** type5 */ ,
                FieldQuantityTypeType6/** type6 */ ,
                FieldQuantityTypeType7/** type7 */ ,
                FieldQuantityTypeType8/** type8 */ ,
                FieldQuantityTypeType9/** type9 */ ,
                FieldQuantityTypeType10/** type10 */ ,
                FieldQuantityTypeType11/** type11 */ ,
                FieldQuantityTypeType12/** type12 */ ,
                FieldQuantityTypeType13/** type13 */ ,
                FieldQuantityTypeType14/** type14 */ ,
                FieldQuantityTypeType15/** type15 */ 
            };

            /** legend position */
            public: enum LegendPos
            {
                LegendPosHide/** hide */ ,
                LegendPosLeft/** left */ ,
                LegendPosRight/** right */ 
            };

            private: DisplayPropertiesBuilderImpl * m_displaypropertiesbuilder_impl;
            private: friend class  _DisplayPropertiesBuilderBuilder;
            protected: DisplayPropertiesBuilder();
            public: ~DisplayPropertiesBuilder();
            /**Returns  the layer 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: int Layer
            (
            );
            /**Sets  the layer 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetLayer
            (
                int layer /** layer */ 
            );
            /**Returns  the basic color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * BasicColor
            (
            );
            /**Sets  the basic color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetBasicColor
            (
                NXOpen::NXColor * basicColor /** basiccolor */ 
            );
            /**Returns  the line font 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::LineFontEnum LineFont
            (
            );
            /**Sets  the line font 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetLineFont
            (
                NXOpen::Fields::DisplayPropertiesBuilder::LineFontEnum lineFont /** linefont */ 
            );
            /**Returns  the line width 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::LineWidthEnum LineWidth
            (
            );
            /**Sets  the line width 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetLineWidth
            (
                NXOpen::Fields::DisplayPropertiesBuilder::LineWidthEnum lineWidth /** linewidth */ 
            );
            /**Returns  the translucency 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: int Translucency
            (
            );
            /**Sets  the translucency 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetTranslucency
            (
                int translucency /** translucency */ 
            );
            /**Returns  the partially shaded 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: bool PartiallyShaded
            (
            );
            /**Sets  the partially shaded 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetPartiallyShaded
            (
                bool partiallyShaded /** partiallyshaded */ 
            );
            /**Returns  the face analysis 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: bool FaceAnalysis
            (
            );
            /**Sets  the face analysis 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetFaceAnalysis
            (
                bool faceAnalysis /** faceanalysis */ 
            );
            /**Returns  the indep disp type 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::IndepDomDispType IndepDispType
            (
            );
            /**Sets  the indep disp type 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetIndepDispType
            (
                NXOpen::Fields::DisplayPropertiesBuilder::IndepDomDispType indepDispType /** indepdisptype */ 
            );
            /**Returns  the display resolution 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::DispResolutionEnum DisplayResolution
            (
            );
            /**Sets  the display resolution 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDisplayResolution
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DispResolutionEnum displayResolution /** displayresolution */ 
            );
            /**Returns  the axis color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * AxisColor
            (
            );
            /**Sets  the axis color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetAxisColor
            (
                NXOpen::NXColor * axisColor /** axiscolor */ 
            );
            /**Returns  the show axis 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: bool ShowAxis
            (
            );
            /**Sets  the show axis 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetShowAxis
            (
                bool showAxis /** showaxis */ 
            );
            /**Returns  the label color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * LabelColor
            (
            );
            /**Sets  the label color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetLabelColor
            (
                NXOpen::NXColor * labelColor /** labelcolor */ 
            );
            /**Returns  the show labels 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: bool ShowLabels
            (
            );
            /**Sets  the show labels 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetShowLabels
            (
                bool showLabels /** showlabels */ 
            );
            /**Returns  the show map topo 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: bool ShowMapTopo
            (
            );
            /**Sets  the show map topo 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetShowMapTopo
            (
                bool showMapTopo /** showmaptopo */ 
            );
            /**Returns  the dep label values 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::DepLabelValueEnum DepLabelValues
            (
            );
            /**Sets  the dep label values 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDepLabelValues
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DepLabelValueEnum depLabelValues /** deplabelvalues */ 
            );
            /**Returns  the heterogeneous table values display option 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::HeteroTblDispOptionEnum HeteroTblDispOption
            (
            );
            /**Sets  the heterogeneous table values display option 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetHeteroTblDispOption
            (
                NXOpen::Fields::DisplayPropertiesBuilder::HeteroTblDispOptionEnum hetTblValDispOption /** hettblvaldispoption */ 
            );
            /**Returns  the heterogeneous table value to display 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: double TblHetPrimaryValue
            (
            );
            /**Sets  the heterogeneous table value to display 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetTblHetPrimaryValue
            (
                double hetTblValue /** hettblvalue */ 
            );
            /**Returns  the dep disp type 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::DepDispTypeEnum DepDispType
            (
            );
            /**Sets  the dep disp type 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDepDispType
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DepDispTypeEnum depDispType /** depdisptype */ 
            );
            /**Returns  the dummy scale 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: double DummyScale
            (
            );
            /**Sets  the dummy scale 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDummyScale
            (
                double dummyScale /** dummyscale */ 
            );
            /**Returns  the dep symbol size 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: double DepSymbolSize
            (
            );
            /**Sets  the dep symbol size 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDepSymbolSize
            (
                double depSymbolSize /** depsymbolsize */ 
            );
            /**Returns  the surface offset 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: double SurfaceOffset
            (
            );
            /**Sets  the surface offset 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetSurfaceOffset
            (
                double surfaceOffset /** surfaceoffset */ 
            );
            /**Returns  the dep dom color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::DepDomColorEnum DepDomColor
            (
            );
            /**Sets  the dep dom color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDepDomColor
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DepDomColorEnum depDomColor /** depdomcolor */ 
            );
            /**Returns  the dep sel color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * DepSelColor
            (
            );
            /**Sets  the dep sel color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDepSelColor
            (
                NXOpen::NXColor * depSelColor /** depselcolor */ 
            );
            /**Returns  the spectrum levels 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: int SpectrumLevels
            (
            );
            /**Sets  the spectrum levels 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetSpectrumLevels
            (
                int spectrumLevels /** spectrumlevels */ 
            );
            /**Returns  the undef value color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * UndefValueColor
            (
            );
            /**Sets  the undef value color 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: void SetUndefValueColor
            (
                NXOpen::NXColor * undefValueColor /** undefvaluecolor */ 
            );
            /**Returns  the tbl indep pt type 
             <br>  @deprecated Deprecated in NX12.0.0.  Table independent domain display no longer modifies the file and is included only to enable old journals to function without modification @link NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals@endlink  can be used to control source table values, but independent table values display is deprecated. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Table independent domain display no longer modifies the file and is included only to enable old journals to function without modification NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals can be used to control source table values, but independent table values display is deprecated.") NXOpen::Fields::DisplayPropertiesBuilder::ValuesEnum TblIndepPtType
            (
            );
            /**Sets  the tbl indep pt type 
             <br>  @deprecated Deprecated in NX12.0.0.  Table Independent variable display no longer modifies the file and is included only to enable old journals to function without modification. @link NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals@endlink  can be used to show source table values, but independent table values display is deprecated. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Table Independent variable display no longer modifies the file and is included only to enable old journals to function without modification. NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals can be used to show source table values, but independent table values display is deprecated.") void SetTblIndepPtType
            (
                NXOpen::Fields::DisplayPropertiesBuilder::ValuesEnum tblIndepPtType /** tblindeppttype */ 
            );
            /**Returns  the tbl indep color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated. Table independent domain is no longer displayable so this property has no meaning. Dependent domain color can be obtained using @link NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor@endlink . <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated. Table independent domain is no longer displayable so this property has no meaning. Dependent domain color can be obtained using NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor.") NXOpen::NXColor * TblIndepColor
            (
            );
            /**Sets  the tbl indep color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated. Table independent domain is no longer displayable, so this function has no meaning. Table dependent domain color can be set using @link NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor@endlink . <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated. Table independent domain is no longer displayable, so this function has no meaning. Table dependent domain color can be set using NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor.") void SetTblIndepColor
            (
                NXOpen::NXColor * tblIndepColor /** tblindepcolor */ 
            );
            /**Returns  the tbl dep pt type 
             <br>  @deprecated Deprecated in NX12.0.0.  To show source table dependent values use @link NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals@endlink  to show source table values. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  To show source table dependent values use NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals to show source table values.") NXOpen::Fields::DisplayPropertiesBuilder::TblPointTypeEnum TblDepPtType
            (
            );
            /**Sets  the tbl dep pt type 
             <br>  @deprecated Deprecated in NX12.0.0.  Source table display no longer uses symbols, so this function has no meaning. Table values are only on or off; to show source table values use @link NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals@endlink  to show source table values. <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  Source table display no longer uses symbols, so this function has no meaning. Table values are only on or off; to show source table values use NXOpen::Fields::DisplayPropertiesBuilder::ShowSrcTblVals to show source table values.") void SetTblDepPtType
            (
                NXOpen::Fields::DisplayPropertiesBuilder::TblPointTypeEnum tblDepPtType /** tbldeppttype */ 
            );
            /**Returns  the table dependent symbol size 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: double TblDepSymbolSize
            (
            );
            /**Sets  the table dependent symbol size 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTblDepSymbolSize
            (
                double tblDepSymbolSize /** tbldepsymbolsize */ 
            );
            /**Returns  the table dependent domain color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be chosen using @link NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor@endlink . <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be chosen using NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor.") NXOpen::Fields::DisplayPropertiesBuilder::DepDomColorEnum TblDepDomColor
            (
            );
            /**Sets  the table dependent domain color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be chosen using @link NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor@endlink . <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be chosen using NXOpen::Fields::DisplayPropertiesBuilder::DepDomColor.") void SetTblDepDomColor
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DepDomColorEnum depDomColor /** depdomcolor */ 
            );
            /**Returns  the table dependent color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be obtained using @link NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor@endlink . <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be obtained using NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor.") NXOpen::NXColor * TblDepColor
            (
            );
            /**Sets  the table dependent color 
             <br>  @deprecated Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be set using @link NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor@endlink . <br>  

             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX12.0.0.  This function is deprecated, Tbl dependent Color can be set using NXOpen::Fields::DisplayPropertiesBuilder::DepSelColor.") void SetTblDepColor
            (
                NXOpen::NXColor * tblDepColor /** tbldepcolor */ 
            );
            /**Returns  the table dependent label values 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::DepLabelValueEnum TblDepLabelValues
            (
            );
            /**Sets  the table dependent label values 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetTblDepLabelValues
            (
                NXOpen::Fields::DisplayPropertiesBuilder::DepLabelValueEnum tblDepLabelValues /** tbldeplabelvalues */ 
            );
            /**Returns  the show name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowName
            (
            );
            /**Sets  the show name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowName
            (
                bool showName /** showname */ 
            );
            /**Returns  the show description 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowDescription
            (
            );
            /**Sets  the show description 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowDescription
            (
                bool showDescription /** showdescription */ 
            );
            /**Returns  the show default val 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowDefaultVal
            (
            );
            /**Sets  the show default val 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowDefaultVal
            (
                bool showDefaultVal /** showdefaultval */ 
            );
            /**Returns  the legend position 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::LegendPos LegendPosition
            (
            );
            /**Sets  the legend position 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLegendPosition
            (
                NXOpen::Fields::DisplayPropertiesBuilder::LegendPos legendPosition /** legendposition */ 
            );
            /**Returns  the range 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::ValueRange Range
            (
            );
            /**Sets  the range 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRange
            (
                NXOpen::Fields::DisplayPropertiesBuilder::ValueRange range /** range */ 
            );
            /**Returns  the legend range min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double RangeMin
            (
            );
            /**Sets  the legend range min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRangeMin
            (
                double rangeMin /** rangemin */ 
            );
            /**Returns  the legend range max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double RangeMax
            (
            );
            /**Sets  the legend range max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRangeMax
            (
                double rangeMax /** rangemax */ 
            );
            /**Returns  the show underflow 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowUnderflowValues
            (
            );
            /**Sets  the show underflow 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowUnderflowValues
            (
                bool showUnderflow /** showunderflow */ 
            );
            /**Returns  the underflow color 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * UnderflowColor
            (
            );
            /**Sets  the underflow color 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUnderflowColor
            (
                NXOpen::NXColor * underflowColor /** underflowcolor */ 
            );
            /**Returns  the overflow color 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * OverflowColor
            (
            );
            /**Sets  the overflow color 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOverflowColor
            (
                NXOpen::NXColor * overflowColor /** overflowcolor */ 
            );
            /**Returns  the show overflow 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowOverflowValues
            (
            );
            /**Sets  the show overflow 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowOverflowValues
            (
                bool showOverflow /** showoverflow */ 
            );
            /**Returns  the primary var name 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * PrimaryVar
            (
            );
            /**Returns  the x num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: int XNum
            (
            );
            /**Sets  the x num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXNum
            (
                int xNum /** xnum */ 
            );
            /**Returns  the x min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XMin
            (
            );
            /**Returns  the x max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XMax
            (
            );
            /**Returns  the y num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: int YNum
            (
            );
            /**Sets  the y num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetYNum
            (
                int yNum /** ynum */ 
            );
            /**Returns  the y min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * YMin
            (
            );
            /**Returns  the y max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * YMax
            (
            );
            /**Returns  the z num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: int ZNum
            (
            );
            /**Sets  the z num 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetZNum
            (
                int zNum /** znum */ 
            );
            /**Returns  the z min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ZMin
            (
            );
            /**Returns  the z max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * ZMax
            (
            );
            /**Returns  the field quantity type
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::DisplayPropertiesBuilder::FieldQuantityType FieldQuantity
            (
            );
            /**Sets  the field quantity type
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFieldQuantity
            (
                NXOpen::Fields::DisplayPropertiesBuilder::FieldQuantityType fieldQuantity /** fieldquantity */ 
            );
            /**Returns  the dep calc symbl size 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double DepCalcSymblSize
            (
            );
            /**Sets  the dep calc symbl size 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDepCalcSymblSize
            (
                double depCalcSymblSize /** depcalcsymblsize */ 
            );
            /**Returns  the show dep src tbl vals 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowSrcTblVals
            (
            );
            /**Sets  the show dep src tbl vals 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowSrcTblVals
            (
                bool showSrcTblVals /** showsrctblvals */ 
            );
            /**Returns  the dep range max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double DepRangeMax
            (
            );
            /**Sets  the dep range max 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDepRangeMax
            (
                double depRangeMax /** deprangemax */ 
            );
            /**Returns  the dependent range min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: double DepRangeMin
            (
            );
            /**Sets  the dependent range min 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDepRangeMin
            (
                double depRangeMin /** deprangemin */ 
            );
            /**Returns  the show new undefined values 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool ShowUndefValues
            (
            );
            /**Sets  the show new undefined values 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShowUndefValues
            (
                bool showUndefValues /** showundefvalues */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
