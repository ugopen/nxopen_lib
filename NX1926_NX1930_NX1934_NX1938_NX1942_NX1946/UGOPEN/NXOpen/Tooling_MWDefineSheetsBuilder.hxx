#ifndef NXOpen_TOOLING_MWDEFINESHEETSBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_MWDEFINESHEETSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_MWDefineSheetsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class MWDefineSheetsBuilder;
    }
    class BasePart;
    class Builder;
    class ScCollector;
    class SelectBodyList;
    namespace Tooling
    {
        class _MWDefineSheetsBuilderBuilder;
        class MWDefineSheetsBuilderImpl;
        /** Builder for defining sheets in Mold Wizard  <br> To create a new instance of this class, use @link NXOpen::Tooling::MWDefineSheetsCollection::CreateBuilder  NXOpen::Tooling::MWDefineSheetsCollection::CreateBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CheckGeometryToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CheckOverlappingToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DefineStep </term> <description> 
         
        CavityandCore </description> </item> 

        <item><term> 
         
        NoInteractionQueriesToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        RenameComponentPartToggle </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        SewTolerance </term> <description> 
         
        0.01 </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  MWDefineSheetsBuilder : public NXOpen::Builder
        {
            /** The types for defining Cavity and Core. */
            public: enum Types
            {
                TypesRegion/** region */ ,
                TypesSplitBody/** split body */ 
            };

            /** The define steps for defining Cavity and Core using the Split Body method. */
            public: enum DefineStepType
            {
                DefineStepTypeCutSolids/** cut solids */ ,
                DefineStepTypeCavityandCore/** cavityand core */ 
            };

            private: MWDefineSheetsBuilderImpl * m_mwdefinesheetsbuilder_impl;
            private: friend class  _MWDefineSheetsBuilderBuilder;
            protected: MWDefineSheetsBuilder();
            public: ~MWDefineSheetsBuilder();
            /**Returns  the select sheets is for selecting region, parting and patched sheets to form a new sheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * SelectSheetBodies
            (
            );
            /**Returns  the define step for defining Cavity and Core using the Split Body method
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::MWDefineSheetsBuilder::DefineStepType DefineStep
            (
            );
            /**Sets  the define step for defining Cavity and Core using the Split Body method
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDefineStep
            (
                NXOpen::Tooling::MWDefineSheetsBuilder::DefineStepType defineStep /** definestep */ 
            );
            /**Returns  the sheets for splitting the subtracted workpiece 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SplittingSheets
            (
            );
            /** Button for suppressing parting 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SuppressPartingButton
            (
            );
            /**Returns  the check geometry toggle for the final sewn sheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckGeometryToggle
            (
            );
            /**Sets  the check geometry toggle for the final sewn sheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCheckGeometryToggle
            (
                bool checkGeometryToggle /** checkgeometrytoggle */ 
            );
            /**Returns  the check overlapping toggle for the final sewn sheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool CheckOverlappingToggle
            (
            );
            /**Sets  the check overlapping toggle for the final sewn sheet 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCheckOverlappingToggle
            (
                bool checkOverlappingToggle /** checkoverlappingtoggle */ 
            );
            /**Returns  the "No Interaction Queries" toggle indicates that user interactions are not required 
                        so as to turn off user interactions during Journamation playback 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: bool NoInteractionQueriesToggle
            (
            );
            /**Sets  the "No Interaction Queries" toggle indicates that user interactions are not required 
                        so as to turn off user interactions during Journamation playback 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SetNoInteractionQueriesToggle
            (
                bool noInteractionQueriesToggle /** nointeractionqueriestoggle */ 
            );
            /**Returns  the  toggle for invoking rename dialog for creating new component part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: bool RenameComponentPartToggle
            (
            );
            /**Sets  the  toggle for invoking rename dialog for creating new component part 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRenameComponentPartToggle
            (
                bool renameComponentPartToggle /** renamecomponentparttoggle */ 
            );
            /**Returns  the sew tolerance for sewing sheets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: double SewTolerance
            (
            );
            /**Sets  the sew tolerance for sewing sheets 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSewTolerance
            (
                double sewTolerance /** sewtolerance */ 
            );
            /**Returns  the type for defining Cavity and Core 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Tooling::MWDefineSheetsBuilder::Types Type
            (
            );
            /**Sets  the type for defining Cavity and Core 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Tooling::MWDefineSheetsBuilder::Types type /** type */ 
            );
            /** Initialize the data for the "Define Sheets" builder 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void InitBuilderData
            (
            );
            /** Update the data for the "Define Sheets" builder 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void UpdateBuilderData
            (
            );
            /** Save the data for the "Define Sheets" builder 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SaveBuilderData
            (
            );
            /** Reset the data for the "Define Sheets" builder 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void ResetBuilderData
            (
            );
            /** Set the flag to indicate if the node for all the region UDOs in the tree list is selected 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SetAllRegionUdosSelected
            (
                int allRegionUDOsSelected /** Flag indicates if the tree node for all regions is selected */
            );
            /** Set the selected regions in the tree list 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SetSelectedRegions
            (
                std::vector<NXString> & regionNames /** an array of regions */
            );
            /** For suppressing parting, or delete existing sheets 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void DeleteExistingSheets
            (
            );
            /** Perform display and highlight for the selected region when there is only one selected 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void PerformDisplayAndHighlight
            (
            );
            /** Turn off all parting and patched sheets 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void TurnOffAllSheets
            (
            );
            /** Turn on or off the display for the region or sheet body for the selected regions 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void DisplayRegionOrSheetBody
            (
                int onOff /** 0 - Off, other - On */
            );
            /** Perform the display operations when the type of defining Cavity and Core is changed. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void PerformDisplayForTypeChange
            (
            );
            /** Create sewn sheet for the region 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void CreateRegionSewnSheet
            (
                const NXString & regionName /** region */
            );
            /** Create sewn sheet for the region 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            void CreateRegionSewnSheet
            (
                const char * regionName /** region */
            );
            /** Suppress the region sheet 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SuppressRegionSheet
            (
                const NXString & regionName /** region */
            );
            /** Suppress the region sheet 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            void SuppressRegionSheet
            (
                const char * regionName /** region */
            );
            /** Reverse the normal for the part 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void ReversePartNormal
            (
                NXOpen::BasePart * viewPart /** Part whose normal is to be reversed */
            );
            /** Set displayed part 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SetDisplayedPart
            (
                NXOpen::BasePart * displayedPart /** new displayed part */
            );
            /** Set work part 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void SetWorkPart
            (
                NXOpen::BasePart * workPart /** new work part */
            );
            /** Create linked body for region sheet other than the cavity or core sheet  @return  linked part for the region sewn sheet 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: NXOpen::BasePart * CreateAssemblyNodeForRegionSheet
            (
                const NXString & regionName /** region name */
            );
            /** Create linked body for region sheet other than the cavity or core sheet  @return  linked part for the region sewn sheet 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            NXOpen::BasePart * CreateAssemblyNodeForRegionSheet
            (
                const char * regionName /** region name */
            );
            /** Create all the selected sheets automatically with no user interaction queries 
             <br>  Created in NX6.0.3.  <br>  
             <br> License requirements : None */
            public: void AutoCreateSelectedSheets
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
