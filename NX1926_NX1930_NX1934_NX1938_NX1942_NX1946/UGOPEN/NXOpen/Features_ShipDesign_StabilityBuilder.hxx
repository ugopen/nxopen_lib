#ifndef NXOpen_FEATURES_SHIPDESIGN_STABILITYBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_STABILITYBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_StabilityBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class StabilityBuilder;
        }
    }
    class Builder;
    class Expression;
    class SelectBodyList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _StabilityBuilderBuilder;
            class StabilityBuilderImpl;
            /**  @brief 
                    Represents a stability builder for general arrangement.
                     

             
                    
                    This builder is used to define a stability.
                    
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateStabilityBuilder  NXOpen::Features::ShipCollection::CreateStabilityBuilder @endlink  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  StabilityBuilder : public NXOpen::Builder
            {
                /** The type used to calculate the hydrostatic. */
                public: enum SubdivisionType
                {
                    SubdivisionTypeDistance/** distance */ ,
                    SubdivisionTypeNumberOfSteps/** number of steps */ 
                };

                private: StabilityBuilderImpl * m_stabilitybuilder_impl;
                private: friend class  _StabilityBuilderBuilder;
                protected: StabilityBuilder();
                public: ~StabilityBuilder();
                /**Returns  the hull body to be calculated 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBodyList * Hull
                (
                );
                /**Returns  the value of hull plate thickness factor 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ThicknessFactor
                (
                );
                /**Returns  the value of after perpendicular 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * AftPerpendicular
                (
                );
                /**Returns  the value of forward perpendicular 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ForwardPerpendicular
                (
                );
                /**Returns  the value of minimum draught 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MinDraught
                (
                );
                /**Returns  the value of maximum draught 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MaxDraught
                (
                );
                /**Returns  the value of sea water density 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SeaWaterDensity
                (
                );
                /**Returns  the value of fresh water density 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FreshWaterDensity
                (
                );
                /**Returns  the type of subdivision 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StabilityBuilder::SubdivisionType Subdivision
                (
                );
                /**Sets  the type of subdivision 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetSubdivision
                (
                    NXOpen::Features::ShipDesign::StabilityBuilder::SubdivisionType subdivision /** subdivision */ 
                );
                /**Returns  the value of step number 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: int NumberOfSteps
                (
                );
                /**Sets  the value of step number 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetNumberOfSteps
                (
                    int numberOfSteps /** numberofsteps */ 
                );
                /**Returns  the value of distance 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Distance
                (
                );
                /**Returns  the structure EXCEL file name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ExportNativeFilename
                (
                );
                /**Sets  the structure EXCEL file name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetExportNativeFilename
                (
                    const NXString & filename /** filename */ 
                );
                /**Sets  the structure EXCEL file name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                void SetExportNativeFilename
                (
                    const char * filename /** filename */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
