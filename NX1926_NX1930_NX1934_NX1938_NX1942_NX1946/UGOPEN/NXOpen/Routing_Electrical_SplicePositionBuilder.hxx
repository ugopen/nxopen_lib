#ifndef NXOpen_ROUTING_ELECTRICAL_SPLICEPOSITIONBUILDER_HXX_INCLUDED
#define NXOpen_ROUTING_ELECTRICAL_SPLICEPOSITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_Electrical_SplicePositionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        namespace Electrical
        {
            class SplicePositionBuilder;
        }
    }
    class Builder;
    class Expression;
    class Point;
    namespace Routing
    {
        class ControlPoint;
    }
    namespace Routing
    {
        namespace Electrical
        {
            class _SplicePositionBuilderBuilder;
            class SplicePositionBuilderImpl;
            /** Represents @link NXOpen::Routing::Electrical::SplicePositionBuilder NXOpen::Routing::Electrical::SplicePositionBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::Routing::RouteManager::CreateSplicePositionBuilder  NXOpen::Routing::RouteManager::CreateSplicePositionBuilder @endlink  <br> 
             <br>  Created in NX1872.0.0.  <br>  
            */
            class NXOPENCPP_ROUTINGEXPORT  SplicePositionBuilder : public NXOpen::Builder
            {
                private: SplicePositionBuilderImpl * m_splicepositionbuilder_impl;
                private: friend class  _SplicePositionBuilderBuilder;
                protected: SplicePositionBuilder();
                public: ~SplicePositionBuilder();
                /** The automation user has to set the end route nodes of the route section in order to place splice on route section. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetEndRouteNodesOfRouteSection
                (
                    NXOpen::Routing::ControlPoint * startRouteNode /** startroutenode */ ,
                    NXOpen::Routing::ControlPoint * endRouteNode /** endroutenode */ 
                );
                /**Returns  the point on path/curve selected by user to position a splice 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: NXOpen::Point * PointOnPath
                (
                );
                /**Sets  the point on path/curve selected by user to position a splice 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetPointOnPath
                (
                    NXOpen::Point * pointOnPath /** pointonpath */ 
                );
                /**Returns  the distance for splice point from the inferred anchor node on route section. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: NXOpen::Expression * DistanceForSplicePoint
                (
                );
                /** The automation user has to set distance to place a splice on route section. The distance would be considered from the start node
                                of the route section. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetDistanceFromAnchorNode
                (
                    double distanceForSplicePoint /** distanceforsplicepoint */ 
                );
                /** The automation user has to set the total length of route section. This will be used for internal validations and to place splice correctly. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetTotalCurveLengthOfRouteSection
                (
                    double totalLengthOfRouteSection /** totallengthofroutesection */ 
                );
                /**Returns  the switch route node can be used by user to highlight and store the route node opposite to the inferred anchor node. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: bool SwitchRouteNode
                (
                );
                /**Sets  the switch route node can be used by user to highlight and store the route node opposite to the inferred anchor node. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetSwitchRouteNode
                (
                    bool switchRouteNode /** switchroutenode */ 
                );
                /**Returns  the splice name given by NX user or received from capital. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: NXString SpliceName
                (
                );
                /**Sets  the splice name given by NX user or received from capital. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetSpliceName
                (
                    const NXString & spliceName /** splicename */ 
                );
                /**Sets  the splice name given by NX user or received from capital. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                void SetSpliceName
                (
                    const char * spliceName /** splicename */ 
                );
                /**Returns  the additional length required for the wire for the fabrication of splice. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: double AdditionalLength
                (
                );
                /**Sets  the additional length required for the wire for the fabrication of splice. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : routing_advanced ("Routing Advanced") */
                public: void SetAdditionalLength
                (
                    double additionalLength /** additionallength */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
