#ifndef NXOpen_CAE_AEROSTRUCTURES_LOADFILTERINGCALCULATIONBUILDER_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_LOADFILTERINGCALCULATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_LoadFilteringCalculationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_BaseCalculation.hxx>
#include <NXOpen/CAE_AeroStructures_EasyAnnotOption.hxx>
#include <NXOpen/CAE_AeroStructures_ExtractionSourceSet.hxx>
#include <NXOpen/CAE_AeroStructures_LoadCaseSet.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadFilteringCalculationBuilder;
        }
    }
    namespace Annotations
    {
        class NoteBase;
    }
    class Builder;
    namespace CAE
    {
        namespace AeroStructures
        {
            class ExtractionSourceSet;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class LoadCaseSet;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class PropTable;
        }
    }
    class CoordinateSystem;
    class Point;
    namespace CAE
    {
        namespace AeroStructures
        {
            class _LoadFilteringCalculationBuilderBuilder;
            class LoadFilteringCalculationBuilderImpl;
            /** Represents a @link NXOpen::CAE::AeroStructures::LoadFilteringCalculation NXOpen::CAE::AeroStructures::LoadFilteringCalculation@endlink  builder.  <br> No support for KF  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LoadFilteringCalculationBuilder : public NXOpen::Builder
            {
                private: LoadFilteringCalculationBuilderImpl * m_loadfilteringcalculationbuilder_impl;
                private: friend class  _LoadFilteringCalculationBuilderBuilder;
                protected: LoadFilteringCalculationBuilder();
                public: ~LoadFilteringCalculationBuilder();
                /**Returns  the name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString Name
                (
                );
                /**Sets  the name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetName
                (
                    const NXString & name /** name */ 
                );
                /**Sets  the name. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetName
                (
                    const char * name /** name */ 
                );
                /**Returns  the calculation location as a single point.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Point * LocationPoint
                (
                );
                /**Sets  the calculation location as a single point.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetLocationPoint
                (
                    NXOpen::Point * location /** location */ 
                );
                /**Returns  the calculation location with direction as a coordinate system.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CoordinateSystem * LocationCoordinateSystem
                (
                );
                /**Sets  the calculation location with direction as a coordinate system.
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetLocationCoordinateSystem
                (
                    NXOpen::CoordinateSystem * location /** location */ 
                );
                /**Returns  the execution status
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::BaseCalculation::CalculationStatus Status
                (
                );
                /**Sets  the execution status
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetStatus
                (
                    NXOpen::CAE::AeroStructures::BaseCalculation::CalculationStatus cstatus /** cstatus */ 
                );
                /**Returns  the LoadCaseSet used by the calculation
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::LoadCaseSet * LoadCaseSet
                (
                );
                /**Sets  the LoadCaseSet used by the calculation
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetLoadCaseSet
                (
                    NXOpen::CAE::AeroStructures::LoadCaseSet * lcset /** lcset */ 
                );
                /**Returns  the description. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString Description
                (
                );
                /**Sets  the description. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetDescription
                (
                    const NXString & description /** description */ 
                );
                /**Sets  the description. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetDescription
                (
                    const char * description /** description */ 
                );
                /**Returns  the MethodKey. (This text contains non-printable ASCII characters.) 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString MethodKey
                (
                );
                /**Sets  the MethodKey. (This text contains non-printable ASCII characters.) 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetMethodKey
                (
                    const NXString & methodkey /** methodkey */ 
                );
                /**Sets  the MethodKey. (This text contains non-printable ASCII characters.) 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                void SetMethodKey
                (
                    const char * methodkey /** methodkey */ 
                );
                /**Returns  the Property Table 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::PropTable * PropertyTable
                (
                );
                /**Returns  the Annotation 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Annotations::NoteBase * Annotation
                (
                );
                /**Sets  the Annotation 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetAnnotation
                (
                    NXOpen::Annotations::NoteBase * annotation /** the annotation*/
                );
                /**Returns  the Extraction sources 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::ExtractionSourceSet * ExtractionSourceSet
                (
                );
                /** Replace the current edited calculation by a copy 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void DuplicateCalculation
                (
                );
                /** Set annotation data 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void SetAnnotationData
                (
                    const NXOpen::CAE::AeroStructures::AeroStructuresAnnotDataS & annotData /** annotdata */ 
                );
                /** Clear annotation data (no annotation will be generated)
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : sc_aero_environment ("Simcenter AeroStructures Environment"), sc_margin_safety ("Simcenter Margin Of Safety") */
                public: void ClearAnnotationData
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
