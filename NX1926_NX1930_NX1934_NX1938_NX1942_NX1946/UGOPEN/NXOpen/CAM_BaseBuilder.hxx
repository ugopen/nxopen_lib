#ifndef NXOpen_CAM_BASEBUILDER_HXX_INCLUDED
#define NXOpen_CAM_BASEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BaseBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BaseBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class TaggedObject;
    namespace CAM
    {
        class _BaseBuilderBuilder;
        class BaseBuilderImpl;
        /**
            Represents a @link NXOpen::CAM::BaseBuilder NXOpen::CAM::BaseBuilder@endlink 
            
         <br>  Created in NX11.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BaseBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: BaseBuilderImpl * m_basebuilder_impl;
            private: friend class  _BaseBuilderBuilder;
            protected: BaseBuilder();
            public: ~BaseBuilder();
            /** Returns the customizable item builder for given customizable item name 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * GetCustomizableItemBuilder
            (
                const NXString & name /** CI name */
            );
            /** Returns the customizable item builder for given customizable item name 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            NXOpen::TaggedObject * GetCustomizableItemBuilder
            (
                const char * name /** CI name */
            );
            /** Returns the names for all customizable item ids  @return  the ci names 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: std::vector<NXString> GetCustomizableItemNames
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
