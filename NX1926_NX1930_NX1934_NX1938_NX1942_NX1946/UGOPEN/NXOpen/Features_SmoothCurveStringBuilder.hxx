#ifndef NXOpen_FEATURES_SMOOTHCURVESTRINGBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SMOOTHCURVESTRINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SmoothCurveStringBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/GeometricUtilities_CurveOptions.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class SmoothCurveStringBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    namespace GeometricUtilities
    {
        class CurveOptions;
    }
    class ScCollector;
    class Section;
    class SelectCurveList;
    namespace Features
    {
        class _SmoothCurveStringBuilderBuilder;
        class SmoothCurveStringBuilderImpl;
        /**
            Represents a @link Features::SmoothCurveString Features::SmoothCurveString@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FreeformCurveCollection::CreateSmoothCurveStringBuilder  NXOpen::Features::FreeformCurveCollection::CreateSmoothCurveStringBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AddFillets </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        AngularThreshold.Value </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        CurveFitData.CurveJoinMethod </term> <description> 
         
        No </description> </item> 

        <item><term> 
         
        CurveFitData.Degree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveFitData.FitMethod </term> <description> 
         
        DegreeAndSegments </description> </item> 

        <item><term> 
         
        CurveFitData.IsAdvancedFit </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveFitData.IsAlignShape </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveFitData.MaximumDegree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveFitData.MaximumSegments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        CurveFitData.MinimumDegree </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        CurveFitData.Segments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        LevelType </term> <description> 
         
        G0 </description> </item> 

        <item><term> 
         
        MergeType </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        Radius.Value </term> <description> 
         
        5 (millimeters part), 0.2 (inches part) </description> </item> 

        <item><term> 
         
        Tolerance.Value </term> <description> 
         
        0.1 (millimeters part), 0.005 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  SmoothCurveStringBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** the type of input curves. */
            public: enum Types
            {
                TypesFreeCurves/** free curves */ ,
                TypesCurvesOnSurfaces/** curves on surfaces */ 
            };

            /** the smoothing levels. */
            public: enum LevelTypes
            {
                LevelTypesG0/** smoothing by position */,
                LevelTypesG1/** smoothing by tangent */,
                LevelTypesG2/** smoothing by curvature */
            };

            /** the options to merge curves after being made continuous. */
            public: enum MergeTypes
            {
                MergeTypesNone/** no merging of curves */,
                MergeTypesSameTypes/** merge only spline curves */,
                MergeTypesAllCurves/** merge all types of curves */
            };

            private: SmoothCurveStringBuilderImpl * m_smoothcurvestringbuilder_impl;
            private: friend class  _SmoothCurveStringBuilderBuilder;
            protected: SmoothCurveStringBuilder();
            public: ~SmoothCurveStringBuilder();
            /**Returns  the curves to be made continuous. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * Curves
            (
            );
            /**Returns  the optional support faces. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SupportFaces
            (
            );
            /**Returns  the optional curves which are to remain fixed. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectCurveList * FixedCurves
            (
            );
            /**Returns  the smoothing level of how continuous the output should be.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SmoothCurveStringBuilder::LevelTypes LevelType
            (
            );
            /**Sets  the smoothing level of how continuous the output should be.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetLevelType
            (
                NXOpen::Features::SmoothCurveStringBuilder::LevelTypes level /** level */ 
            );
            /**Returns  a flag to add transition fillets to sharp edges with a specified radius.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: bool AddFillets
            (
            );
            /**Sets  a flag to add transition fillets to sharp edges with a specified radius.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetAddFillets
            (
                bool addFillets /** addfillets */ 
            );
            /**Returns  the radius for transition fillets. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Radius
            (
            );
            /**Returns  the curve types if any to merge after they are made continuous.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SmoothCurveStringBuilder::MergeTypes MergeType
            (
            );
            /**Sets  the curve types if any to merge after they are made continuous.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetMergeType
            (
                NXOpen::Features::SmoothCurveStringBuilder::MergeTypes merge /** merge */ 
            );
            /**Returns  the curve options. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveOptions * CurveOptions
            (
            );
            /**Returns  the searching distance threshold when trying to connect curves. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * DistanceThreshold
            (
            );
            /**Returns  the angular threshold when trying to connect curves. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * AngularThreshold
            (
            );
            /**Returns  the curve fitting for curves if the user specifies merge curves.
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
            /**Returns  the maximum lateral deviation between input and output. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Tolerance
            (
            );
            /**Returns  the type of input curves whether free or on surface. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::SmoothCurveStringBuilder::Types Type
            (
            );
            /**Sets  the type of input curves whether free or on surface. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetType
            (
                NXOpen::Features::SmoothCurveStringBuilder::Types type /** type */ 
            );
            /** Updates when any expression in the function changes 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void UpdateOnExpressionChange
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
