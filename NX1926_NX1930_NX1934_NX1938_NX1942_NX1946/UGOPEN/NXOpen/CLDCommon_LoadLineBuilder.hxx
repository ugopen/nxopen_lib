#ifndef NXOpen_CLDCOMMON_LOADLINEBUILDER_HXX_INCLUDED
#define NXOpen_CLDCOMMON_LOADLINEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CLDCommon_LoadLineBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cldcommon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CLDCommon
    {
        class LoadLineBuilder;
    }
    class Builder;
    class TaggedObject;
    namespace CLDCommon
    {
        class _LoadLineBuilderBuilder;
        class LoadLineBuilderImpl;

        /// \cond NX_NO_DOC 
        /** Load Line in ALP or LD applications  <br> To create a new instance of this class, use @link NXOpen::CLDCommon::CLDCommonManager::CreateLoadLineBuilder  NXOpen::CLDCommon::CLDCommonManager::CreateLoadLineBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        LoadInEnum </term> <description> 
         
        AssemblyLinePlanner </description> </item> 

        <item><term> 
         
        SearchByEnum </term> <description> 
         
        Name </description> </item> 

        </list> 

         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CLDCOMMONEXPORT  LoadLineBuilder : public NXOpen::Builder
        {
            /** enum for search by type */
            public: enum SearchBy
            {
                SearchByName/** name */ ,
                SearchByFolder/** folder */ 
            };

            /** enum for load in application */
            public: enum ApplicationLoad
            {
                ApplicationLoadAssemblyLinePlanner/** assembly line planner */ ,
                ApplicationLoadLineDesigner/** line designer */ ,
                ApplicationLoadFixturePlanner/** fixture planner */ 
            };

            private: LoadLineBuilderImpl * m_loadlinebuilder_impl;
            private: friend class  _LoadLineBuilderBuilder;
            protected: LoadLineBuilder();
            public: ~LoadLineBuilder();
            /**Returns  the search by enum 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CLDCommon::LoadLineBuilder::SearchBy SearchByEnum
            (
            );
            /**Sets  the search by enum 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSearchByEnum
            (
                NXOpen::CLDCommon::LoadLineBuilder::SearchBy searchByEnum /** searchbyenum */ 
            );
            /**Returns  the search by name string 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SearchByNameString
            (
            );
            /**Sets  the search by name string 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSearchByNameString
            (
                const NXString & searchByNameString /** searchbynamestring */ 
            );
            /**Sets  the search by name string 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetSearchByNameString
            (
                const char * searchByNameString /** searchbynamestring */ 
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SearchButton
            (
            );
            /** TODO: fill in a description for this 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void ShowLinesButton
            (
            );
            /**Returns  the load in enum 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CLDCommon::LoadLineBuilder::ApplicationLoad LoadInEnum
            (
            );
            /**Sets  the load in enum 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLoadInEnum
            (
                NXOpen::CLDCommon::LoadLineBuilder::ApplicationLoad loadInEnum /** loadinenum */ 
            );
            /**Returns  a Recent Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * SelectedRecentLine
            (
            );
            /**Sets  a Recent Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedRecentLine
            (
                NXOpen::TaggedObject * selectedRecentLine /** selectedrecentline */ 
            );
            /**Returns  a Recent Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * SelectedCC
            (
            );
            /**Sets  a Recent Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedCC
            (
                NXOpen::TaggedObject * selectedCC /** selectedcc */ 
            );
            /**Returns  a Recent Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * LastSelectedCCForShowLines
            (
            );
            /**Returns  a  Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * SelectedLine
            (
            );
            /**Sets  a  Line 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSelectedLine
            (
                NXOpen::TaggedObject * selectedLine /** selectedline */ 
            );
            /**  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetSearchedCcByName
            (
            );
            /**  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetLinesFromSelectedCc
            (
            );
            /**  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::TaggedObject *> GetRecentLineHistory
            (
            );
            /**Returns   
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ErrorMessage
            (
            );
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
