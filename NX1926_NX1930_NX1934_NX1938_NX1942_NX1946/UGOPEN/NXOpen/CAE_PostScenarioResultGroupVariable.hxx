#ifndef NXOpen_CAE_POSTSCENARIORESULTGROUPVARIABLE_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIORESULTGROUPVARIABLE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioResultGroupVariable.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioTypes.hxx>
#include <NXOpen/CAE_PostScenarioVariableDomain.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioResultGroupVariable;
    }
    namespace CAE
    {
        class PostScenarioVariableDomain;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioResultGroupVariableImpl;

        /// \cond NX_NO_DOC 
        /**  @brief  This class represents a dimension and is part of a @link CAE::PostScenarioResultGroup CAE::PostScenarioResultGroup@endlink .  

         

                
                 <br> 
                These variables map to the slot variables defined in your scenario XML descriptor and are metadata that define a data set.
                 <br> 
                 <br> 
                A variable has a name, a data type (real number, complex number, string, coordinate system, etc), a unit measure (length,
                frequency, pressure, force, etc) and can have multiple components (most are scalar, but they can be 3D vectors, tensors, etc).
                 <br> 
                 <br> 
                Variables have data bound to them. If the values are bound by the user interactively, they are known as Selection Variables,
                and they are used to build up queries performed against @link CAE::DataSource CAE::DataSource@endlink  objects. If they represent higher
                dimensions of your data set (usually data sets are one dimensional) they are known as higher order independent variables.
                If they represent the primary dimension of your data set, they are known as the independent variable. If they provide metadata
                about your data points, they are called dependent variables.
                 <br> 
                 <br> 
                For each combination of scalar values bound to all selection and independent variables, there is one
                data point described by one dependent variable. Missing data points are not represented.
                 <br> 
                 <br> 
                Selection variables may have additional metadata (see @link CAE::PostScenarioMetadata CAE::PostScenarioMetadata@endlink ) called <tt>DisplayName</tt>
                or <tt>Alias</tt>. <tt>DisplayName</tt> can provide additional UI hints when it comes to @link CAE::ViewportSynchronizationOptions CAE::ViewportSynchronizationOptions@endlink . <tt>Alias</tt> is set as a result of variable aliasing performed on your
                selection variables in your scenario XML descriptor, such as <tt>Independent Aliasing</tt> or <tt>Aggregation</tt> to give you
                an idea how query variables map to your scenario variables.
                 <br> 
                 <br> 
                Selection and Independent Variables mentioned by name in your scenario XML descriptor will bear the same name in the @link CAE::PostScenarioResultGroup CAE::PostScenarioResultGroup@endlink . Those not mentioned by name in the scenario XML descriptor will not
                have a meaningful name, since they represent the users bound selection, mostly for synchronization purposes.
                 <br> 
                 <br> 
                Output @link CAE::PostScenarioQueryResults CAE::PostScenarioQueryResults@endlink  should pass-through as much variable metadata and @link CAE::PostScenarioMetadata CAE::PostScenarioMetadata@endlink 
                as makes sense in order to support advanced Scenario-based Data Visualization features such as "Create related
                Post Processing Scenario".
                 <br> 
                
              <br> No support for KF.  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioResultGroupVariable : public NXOpen::TransientObject
        {
            private: PostScenarioResultGroupVariableImpl * m_postscenarioresultgroupvariable_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioResultGroupVariable(void *ptr);
            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Dispose of this instance. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioResultGroupVariable();

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the name 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the data type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioVariantType DataType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the domain 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioVariableDomain * Domain
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the component dimensionality. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioComponentType ComponentType
            (
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
