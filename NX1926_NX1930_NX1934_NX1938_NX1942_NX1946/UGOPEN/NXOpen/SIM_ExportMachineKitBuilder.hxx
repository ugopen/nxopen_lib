#ifndef NXOpen_SIM_EXPORTMACHINEKITBUILDER_HXX_INCLUDED
#define NXOpen_SIM_EXPORTMACHINEKITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SIM_ExportMachineKitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_sim_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace SIM
    {
        class ExportMachineKitBuilder;
    }
    class Builder;
    namespace SIM
    {
        class _ExportMachineKitBuilderBuilder;
        class ExportMachineKitBuilderImpl;
        /** This class is used for the Export Machine Kit Dialog.
                Calling @link Builder::Commit Builder::Commit@endlink  on this
                builder will start the export machine kit process
                and return NULL.
              <br> Use  @link NXOpen::SIM::KinematicConfigurator::ExportMachineKitBuilder NXOpen::SIM::KinematicConfigurator::ExportMachineKitBuilder@endlink  class to obtain an instance of this class.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_SIMEXPORT  ExportMachineKitBuilder : public NXOpen::Builder
        {
            private: ExportMachineKitBuilderImpl * m_exportmachinekitbuilder_impl;
            private: friend class  _ExportMachineKitBuilderBuilder;
            protected: ExportMachineKitBuilder();
            public: ~ExportMachineKitBuilder();
            /**Returns  the kit name specify the name of the package. The name should be unique in the target directory.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: NXString KitName
            (
            );
            /**Sets  the kit name specify the name of the package. The name should be unique in the target directory.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetKitName
            (
                const NXString & kitName /** kit name */
            );
            /**Sets  the kit name specify the name of the package. The name should be unique in the target directory.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetKitName
            (
                const char * kitName /** kit name */
            );
            /**Returns  the machine kit output directory specify where the finished package will be stored.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: NXString OutputDirectory
            (
            );
            /**Sets  the machine kit output directory specify where the finished package will be stored.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetOutputDirectory
            (
                const NXString & outputDirectory /** machine kit output directory */
            );
            /**Sets  the machine kit output directory specify where the finished package will be stored.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void SetOutputDirectory
            (
                const char * outputDirectory /** machine kit output directory */
            );
            /**Returns  the machine kit print report checkbox specify if a report will be plotted while create the kit or not.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: bool PrintReport
            (
            );
            /**Sets  the machine kit print report checkbox specify if a report will be plotted while create the kit or not.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void SetPrintReport
            (
                bool onOff /** print report flag */
            );
            /** Returns a array of the the file paths that are already in the machine kit. If you want to modify what
                        will export with the kit, you need to specify the whole kit path. This function gives the opportunity. 
                        This function allocates the memory for kitPaths. The caller is responsible to deallocate the memory. @return  array of all files of the machine kit
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: std::vector<NXString> GetAllKitPaths
            (
            );
            /** Add a file to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void AddKitFile
            (
                const NXString & directory /** directory in kit*/,
                const NXString & file /** file path on the hrd drive*/
            );
            /** Add a file to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void AddKitFile
            (
                const char * directory /** directory in kit*/,
                const char * file /** file path on the hrd drive*/
            );
            /** Add a folder, all containing files and subfolder to the machine kit at the given directory. 
                        The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void AddKitFolder
            (
                const NXString & directory /** directory in kit*/,
                const NXString & folder /** folder path on the hrd drive*/
            );
            /** Add a folder, all containing files and subfolder to the machine kit at the given directory. 
                        The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void AddKitFolder
            (
                const char * directory /** directory in kit*/,
                const char * folder /** folder path on the hrd drive*/
            );
            /** Add a subdirectory to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void AddKitDirectory
            (
                const NXString & directory /** directory in kit*/,
                const NXString & subDirectory /** subdirectory name*/
            );
            /** Add a subdirectory to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void AddKitDirectory
            (
                const char * directory /** directory in kit*/,
                const char * subDirectory /** subdirectory name*/
            );
            /** Rename a directory to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void RenameKitDirectory
            (
                const NXString & directory /** directory path in kit*/,
                const NXString & newDirectoryName /** new name of the directory*/
            );
            /** Rename a directory to the machine kit at the given directory. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void RenameKitDirectory
            (
                const char * directory /** directory path in kit*/,
                const char * newDirectoryName /** new name of the directory*/
            );
            /** Removes the given file or directory in the machine kit. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            public: void RemovePathInKit
            (
                const NXString & directory /** directory in kit*/
            );
            /** Removes the given file or directory in the machine kit. The directory can be get in the function GetAllKitPaths.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : ug_isv_full ("Full functionality for Integrated Simulation and Verification") OR nx_isv_mtb ("Machine Tool Builder") */
            void RemovePathInKit
            (
                const char * directory /** directory in kit*/
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
