#ifndef NXOpen_JOIN_POINTJOINHARDWARE_HXX_INCLUDED
#define NXOpen_JOIN_POINTJOINHARDWARE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Join_PointJoinHardware.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libjoinopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Join
    {
        class PointJoinHardware;
    }
    namespace Join
    {
        class _PointJoinHardwareBuilder;
        class PointJoinHardwareImpl;
        /** Represents a @link NXOpen::Join::PointJoinHardware NXOpen::Join::PointJoinHardware@endlink .
            
         <br>  Created in NX1926.0.0.  <br>  
        */
        class JOINOPENCPPEXPORT  PointJoinHardware : public NXOpen::TaggedObject
        {
            /** the attribute data source type*/
            public: enum AttributeDataSourceType
            {
                AttributeDataSourceTypeUndefined/** undefined */ ,
                AttributeDataSourceTypeXmlDatabase/** xml database */ ,
                AttributeDataSourceTypeReuseLibraryExcel/** reuse library excel */ ,
                AttributeDataSourceTypeTeamcenterClassification/** teamcenter classification */ ,
                AttributeDataSourceTypeXmlDatabaseSpecification/** xml database specification */ 
            };

            private: PointJoinHardwareImpl * m_pointjoinhardware_impl;
            private: friend class  _PointJoinHardwareBuilder;
            protected: PointJoinHardware();
            public: ~PointJoinHardware();
            /**Returns  the name of the point join hardware.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase@endlink ,
                    name is used to look up the attributes from the XML database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString Name
            (
            );
            /**Sets  the name of the point join hardware.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase@endlink ,
                    name is used to look up the attributes from the XML database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name of the point join hardware.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeXmlDatabase@endlink ,
                    name is used to look up the attributes from the XML database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the specification of the point join hardware. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString Specification
            (
            );
            /**Sets  the specification of the point join hardware. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetSpecification
            (
                const NXString & spec /** spec */ 
            );
            /**Sets  the specification of the point join hardware. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetSpecification
            (
                const char * spec /** spec */ 
            );
            /**Returns  the path of the point join hardware part.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel@endlink ,
                    path is used to look up the attributes from the EXCEL database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString Path
            (
            );
            /**Sets  the path of the point join hardware part.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel@endlink ,
                    path is used to look up the attributes from the EXCEL database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetPath
            (
                const NXString & path /** path */ 
            );
            /**Sets  the path of the point join hardware part.
                    If the attribute data source is @link NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel NXOpen::Join::PointJoinHardware::AttributeDataSourceTypeReuseLibraryExcel@endlink ,
                    path is used to look up the attributes from the EXCEL database and the available PointJoinHardware attributes
                    are auto populated.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetPath
            (
                const char * path /** path */ 
            );
            /**Returns  the type of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString Type
            (
            );
            /**Sets  the type of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetType
            (
                const NXString & type /** type */ 
            );
            /**Sets  the type of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetType
            (
                const char * type /** type */ 
            );
            /**Returns  the orientation of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString Orientation
            (
            );
            /**Sets  the orientation of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetOrientation
            (
                const NXString & orientation /** orientation */ 
            );
            /**Sets  the orientation of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetOrientation
            (
                const char * orientation /** orientation */ 
            );
            /**Returns  the thickness of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: double Thickness
            (
            );
            /**Sets  the thickness of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetThickness
            (
                double thickness /** thickness */ 
            );
            /**Returns  the attribute data source of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXOpen::Join::PointJoinHardware::AttributeDataSourceType AttributeDataSource
            (
            );
            /**Sets  the attribute data source of the point join hardware part.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetAttributeDataSource
            (
                NXOpen::Join::PointJoinHardware::AttributeDataSourceType attributeDataSource /** attributedatasource */ 
            );
            /**Returns  the Teamcenter Classification Object Instance Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString ClassificationInstanceId
            (
            );
            /**Sets  the Teamcenter Classification Object Instance Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetClassificationInstanceId
            (
                const NXString & instanceId /** instanceid */ 
            );
            /**Sets  the Teamcenter Classification Object Instance Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetClassificationInstanceId
            (
                const char * instanceId /** instanceid */ 
            );
            /**Returns  the Teamcenter Classification Object Class Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: NXString ClassificationClassId
            (
            );
            /**Sets  the Teamcenter Classification Object Class Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            public: void SetClassificationClassId
            (
                const NXString & classId /** classid */ 
            );
            /**Sets  the Teamcenter Classification Object Class Id of the point join hardware part. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_join (" NX Join") */
            void SetClassificationClassId
            (
                const char * classId /** classid */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
