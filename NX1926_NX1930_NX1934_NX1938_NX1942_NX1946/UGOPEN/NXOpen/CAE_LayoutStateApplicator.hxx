#ifndef NXOpen_CAE_LAYOUTSTATEAPPLICATOR_HXX_INCLUDED
#define NXOpen_CAE_LAYOUTSTATEAPPLICATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_LayoutStateApplicator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_LayoutState.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class LayoutStateApplicator;
    }
    class Builder;
    namespace CAE
    {
        class LayoutState;
    }
    namespace CAE
    {
        class LayoutStateDataReferenceCollection;
    }
    namespace CAE
    {
        class _LayoutStateApplicatorBuilder;
        class LayoutStateApplicatorImpl;
        /**  @brief  Represents a @link NXOpen::CAE::LayoutStateApplicator NXOpen::CAE::LayoutStateApplicator@endlink  
            which can be used to visualize a layout state.  

           <br> Not support KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  LayoutStateApplicator : public NXOpen::Builder
        {
            private: LayoutStateApplicatorImpl * m_layoutstateapplicator_impl;
            private: friend class  _LayoutStateApplicatorBuilder;
            protected: LayoutStateApplicator();
            public: ~LayoutStateApplicator();
            /** Sets the layout state that will be applied. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLayoutState
            (
                NXOpen::CAE::LayoutState * layoutState /** layoutstate */ 
            );
            /** Sets the exported layout state that will be applied. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFile
            (
                const NXString & filePath /** filepath */ 
            );
            /** Sets the exported layout state that will be applied. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFile
            (
                const char * filePath /** filepath */ 
            );
            /** Sets the update layout state flag. If true, the layout state data references are 
                    updated during the commit method. Otherwise, the layout state data references remain unchanged. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetUpdateLayoutState
            (
                bool update /** update */ 
            );
            /** Gets the update layout state flag. If true, the layout state data references are 
                    updated during the commit method. Otherwise, the layout state data references remain unchanged. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetUpdateLayoutState
            (
            );


            /** Contains a @link NXOpen::CAE::LayoutStateDataReferenceCollection NXOpen::CAE::LayoutStateDataReferenceCollection@endlink . 
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::CAE::LayoutStateDataReferenceCollection *DataReferences();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
