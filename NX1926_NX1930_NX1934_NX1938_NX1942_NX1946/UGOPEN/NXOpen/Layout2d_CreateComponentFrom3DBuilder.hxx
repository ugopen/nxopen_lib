#ifndef NXOpen_LAYOUT2D_CREATECOMPONENTFROM3DBUILDER_HXX_INCLUDED
#define NXOpen_LAYOUT2D_CREATECOMPONENTFROM3DBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Layout2d_CreateComponentFrom3DBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Layout2d_CreateComponentFrom3DSettingsBuilder.hxx>
#include <NXOpen/Display_DynamicSectionBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_layout2d_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Layout2d
    {
        class CreateComponentFrom3DBuilder;
    }
    namespace Display
    {
        class DynamicSectionBuilder;
    }
    namespace Layout2d
    {
        class CreateComponentFrom3DSettingsBuilder;
    }
    class Part;
    class SelectTaggedObjectList;
    namespace Layout2d
    {
        class _CreateComponentFrom3DBuilderBuilder;
        class CreateComponentFrom3DBuilderImpl;
        /** Represents a Builder that creates @link NXOpen::Layout2d::Component NXOpen::Layout2d::Component@endlink  from Assembly <br> To create a new instance of this class, use @link NXOpen::Layout2d::ComponentCollection::CreateComponentFrom3dBuilder  NXOpen::Layout2d::ComponentCollection::CreateComponentFrom3dBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BoxExtentDelayUpdate </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        CapColorOption </term> <description> 
         
        Any </description> </item> 

        <item><term> 
         
        ClipType </term> <description> 
         
        Section </description> </item> 

        <item><term> 
         
        CurveColorOption </term> <description> 
         
        Any </description> </item> 

        <item><term> 
         
        LockPlanes </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        ShowCap </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        ShowClip </term> <description> 
         
        true </description> </item> 

        <item><term> 
         
        ShowCurves (deprecated) </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowGrid </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowInterference </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ShowViewer </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        Type </term> <description> 
         
        OnePlane </description> </item> 

        </list> 

         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_LAYOUT2DEXPORT  CreateComponentFrom3DBuilder : public NXOpen::Display::DynamicSectionBuilder
        {
            /** the method to use */
            public: enum CreateMethod
            {
                CreateMethodSection/** use section */,
                CreateMethodPlane/** use plane */
            };

            private: CreateComponentFrom3DBuilderImpl * m_createcomponentfrom3dbuilder_impl;
            private: friend class  _CreateComponentFrom3DBuilderBuilder;
            protected: CreateComponentFrom3DBuilder();
            public: ~CreateComponentFrom3DBuilder();
            /**Returns  the method to utilize in create Component from 3D
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Layout2d::CreateComponentFrom3DBuilder::CreateMethod Method
            (
            );
            /**Sets  the method to utilize in create Component from 3D
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetMethod
            (
                NXOpen::Layout2d::CreateComponentFrom3DBuilder::CreateMethod method /** method */ 
            );
            /**Returns  the selected objects of Solid body or Component type 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: NXOpen::SelectTaggedObjectList * SelectedObjects
            (
            );
            /**Returns  the component name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: NXString ComponentName
            (
            );
            /**Sets  the component name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetComponentName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the component name 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            void SetComponentName
            (
                const char * name /** name */ 
            );
            /** Sets the source part to create 2D component from. The part may be the current work part or other part loaded in session. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetSourcePart
            (
                NXOpen::Part * part /** part */ 
            );
            /** Returns the current source part 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: NXOpen::Part * GetSourcePart
            (
            );
            /** Sets the projection plane specified by origin, y and z vectors, where z is the plane normal and
                        the x vector is computed.
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void SetProjectionPlane
            (
                const NXOpen::Point3d & origin /** origin */ ,
                const NXOpen::Vector3d & yAxis /** yaxis */ ,
                const NXOpen::Vector3d & zAxis /** zaxis */ 
            );
            /** Gets the projection plane origin and orientation matrix 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_layout ("NX Layout") */
            public: void GetProjectionPlane
            (
                NXOpen::Point3d* origin /** origin */ ,
                NXOpen::Matrix3x3* orientation /** orientation */ 
            );
            /**Returns  the settings of create component from 3D 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Layout2d::CreateComponentFrom3DSettingsBuilder * Settings
            (
            );
            /**Sets  the settings of create component from 3D 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSettings
            (
                NXOpen::Layout2d::CreateComponentFrom3DSettingsBuilder * settings /** settings */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
