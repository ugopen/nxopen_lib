#ifndef NXOpen_PREFERENCES_PARTSKETCH_HXX_INCLUDED
#define NXOpen_PREFERENCES_PARTSKETCH_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Preferences_PartSketch.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_preferences_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Preferences
    {
        class PartSketch;
    }
    namespace Preferences
    {
        class PartPreferences;
    }
    class NXColor;
    namespace Preferences
    {
        class PartSketchImpl;
        /** Represents the set of Sketcher preferences applicable to entire part. Other Sketch preference 
        settings are available with @link NXOpen::Preferences::SessionSketch NXOpen::Preferences::SessionSketch@endlink  for settings applicable to session
        and with @link NXOpen::Preferences::SketchPreferences NXOpen::Preferences::SketchPreferences@endlink  for Sketch specific Preferences  <br> To obtain an instance of this class, refer to @link NXOpen::Preferences::PartPreferences  NXOpen::Preferences::PartPreferences @endlink  <br> 
         <br>  Created in NX4.0.0.  <br>  
        */
        class NXOPENCPP_PREFERENCESEXPORT  PartSketch
        {
            private: PartSketchImpl * m_partsketch_impl;
            private: NXOpen::Preferences::PartPreferences* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PartSketch(NXOpen::Preferences::PartPreferences *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartSketch();
            /**Returns  the sketch curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int CurveColor
            (
            );
            /**Sets  the sketch curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCurveColor
            (
                int sketchCurveColor /** sketch curve color */ 
            );
            /**Returns  the sketch dimension color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int DimensionColor
            (
            );
            /**Sets  the sketch dimension color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDimensionColor
            (
                int sketchDimensionColor /** sketch dimension color */ 
            );
            /**Returns  the sketch overconstrained color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int OverconstrainedColor
            (
            );
            /**Sets  the sketch overconstrained color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOverconstrainedColor
            (
                int sketchOverconstrainedColor /** sketch overconstrained color */ 
            );
            /**Returns  the sketch conflicting color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int ConflictingColor
            (
            );
            /**Sets  the sketch conflicting color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConflictingColor
            (
                int sketchConflictingColor /** sketch conflicting color */ 
            );
            /**Returns  the sketch partially defined constraint color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int PartiallyDefinedColor
            (
            );
            /**Sets  the sketch partially defined constraint color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPartiallyDefinedColor
            (
                int sketchPartialColor /** sketch partial color */ 
            );
            /**Returns  the sketch fully defined constraint color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int FullyDefinedColor
            (
            );
            /**Sets  the sketch fully defined constraint color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFullyDefinedColor
            (
                int sketchFullyColor /** sketch fully color */ 
            );
            /**Returns  the sketch reference curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int ReferenceCurveColor
            (
            );
            /**Sets  the sketch reference curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferenceCurveColor
            (
                int sketchReferenceCurveColor /** sketch reference curve color */ 
            );
            /**Returns  the sketch reference dimension color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int ReferenceDimensionColor
            (
            );
            /**Sets  the sketch reference dimension color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferenceDimensionColor
            (
                int sketchReferenceDimensionColor /** sketch reference dimension color */ 
            );
            /**Returns  the sketch out of date curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int OutOfDateColor
            (
            );
            /**Sets  the sketch out of date curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOutOfDateColor
            (
                int sketchOutOfDateColor /** sketch out of date color */ 
            );
            /**Returns  the sketch degree of freedom arrow color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int DOFColor
            (
            );
            /**Sets  the sketch degree of freedom arrow color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDOFColor
            (
                int sketchDOFColor /** sketch d o f color */ 
            );
            /**Returns  the inactive sketch color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int InactiveSketchColor
            (
            );
            /**Sets  the inactive sketch color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetInactiveSketchColor
            (
                int sketchInactiveColor /** sketch inactive color */ 
            );
            /**Returns  the sketch participating datum curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: int ParticipatingDatumColor
            (
            );
            /**Sets  the sketch participating datum curve color 
             <br>  Created in NX4.0.0.  <br>  
             <br> License requirements : None */
            public: void SetParticipatingDatumColor
            (
                int sketchParticipatingDatumColor /** sketch participating datum color */ 
            );
            /**Returns  the sketch automatic dimension color 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: int AutomaticDimensionColor
            (
            );
            /**Sets  the sketch automatic dimension color 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : None */
            public: void SetAutomaticDimensionColor
            (
                int sketchAutomaticDimensionColor /** sketch automatic dimension color */ 
            );
            /**Returns  the sketch unsolved curves color 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: int UnsolvedCurvesColor
            (
            );
            /**Sets  the sketch unsolved curves color 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: void SetUnsolvedCurvesColor
            (
                int sketchUnsolvedCurvesColor /** sketch unsolved curves color */ 
            );
            /**Returns  the sketch shaded region color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ShadedRegionColor
            (
            );
            /**Sets  the sketch shaded region color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetShadedRegionColor
            (
                NXOpen::NXColor * sketchShadedRegionColor /** sketchshadedregioncolor */ 
            );
            /**Returns  the sketch constant dimension color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * ConstantDimensionColor
            (
            );
            /**Sets  the sketch constant dimension color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetConstantDimensionColor
            (
                NXOpen::NXColor * sketchConstantDimensionColor /** sketchconstantdimensioncolor */ 
            );
            /**Returns  the sketch relation color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * RelationColor
            (
            );
            /**Sets  the sketch relation color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRelationColor
            (
                NXOpen::NXColor * sketchRelationColor /** sketchrelationcolor */ 
            );
            /**Returns  the sketch geometric constraint color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * GeometricConstraintColor
            (
            );
            /**Sets  the sketch geometric constraint color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetGeometricConstraintColor
            (
                NXOpen::NXColor * sketchGeometricConstraintColor /** sketchgeometricconstraintcolor */ 
            );
            /**Returns  the sketch preview dimension color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * PreviewDimensionColor
            (
            );
            /**Sets  the sketch preview dimension color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPreviewDimensionColor
            (
                NXOpen::NXColor * sketchPreviewDimensionColor /** sketchpreviewdimensioncolor */ 
            );
            /**Returns  the sketch unlocked object color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * LockedObjectColor
            (
            );
            /**Sets  the sketch unlocked object color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetLockedObjectColor
            (
                NXOpen::NXColor * sketchLockedObjectColor /** sketchlockedobjectcolor */ 
            );
            /**Returns  the sketch non-work region color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * NonWorkRegionColor
            (
            );
            /**Sets  the sketch non-work region color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetNonWorkRegionColor
            (
                NXOpen::NXColor * sketchNonWorkRegionColor /** sketchnonworkregioncolor */ 
            );
            /**Returns  the sketch movable curve color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * MovableCurveColor
            (
            );
            /**Sets  the sketch movable curve color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMovableCurveColor
            (
                NXOpen::NXColor * sketchMovableCurveColor /** sketchmovablecurvecolor */ 
            );
            /**Returns  the sketch persistent relation color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::NXColor * PersistentRelationColor
            (
            );
            /**Sets  the sketch persistent relation color 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPersistentRelationColor
            (
                NXOpen::NXColor * sketchPersistentRelationColor /** sketchpersistentrelationcolor */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
