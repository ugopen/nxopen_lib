#ifndef NXOpen_FEATURES_SHIPDESIGN_EDGECUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_EDGECUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_EdgeCutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_ManufacturingStockBuilder.hxx>
#include <NXOpen/Features_ShipDesign_SteelFeatureSpreadsheetBuilder.hxx>
#include <NXOpen/GeometricUtilities_OnPathDimensionBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class EdgeCutBuilder;
        }
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ManufacturingStockBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class SteelFeatureSpreadsheetBuilder;
        }
    }
    namespace GeometricUtilities
    {
        class OnPathDimensionBuilder;
    }
    class Section;
    class SelectDisplayableObjectList;
    class SelectFaceList;
    class SelectNXObject;
    class SelectTaggedObjectList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _EdgeCutBuilderBuilder;
            class EdgeCutBuilderImpl;
            /**
                Represents a @link NXOpen::Features::ShipDesign::EdgeCut NXOpen::Features::ShipDesign::EdgeCut@endlink  builder.  The Edge Cut creates a series of cuts with an offset from an edge or curve.
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateEdgeCutBuilder  NXOpen::Features::ShipCollection::CreateEdgeCutBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            CutCount </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            CutOrientationAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            GuideOffset.Value </term> <description> 
             
            50 (millimeters part), 2 (inches part) </description> </item> 

            <item><term> 
             
            SpaceBetweenCuts.Value </term> <description> 
             
            50 (millimeters part), 2 (inches part) </description> </item> 

            <item><term> 
             
            Spacing </term> <description> 
             
            EvenDistribution </description> </item> 

            <item><term> 
             
            SymmetricOffsets </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX8.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  EdgeCutBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** version identifiers for the different revisions of the edge cut feature.
                         */
                public: enum VersionID
                {
                    VersionIDNx85/** This feature builder is used to edit an existing NX85 - NX9 edge cut feature.  Use: SelectTargetFace and GuideCurve */,
                    VersionIDNx901/** This feature builder is used to create or edit an NX901 or beyond feature.   Use: PlacementGeometry, PathGeometry, ReferencePoint, ReferenceDirection, and if needed PathReverseDirection */
                };

                /** available methods used to define the spacing between the cuts
                         */
                public: enum ArraySpacing
                {
                    ArraySpacingEvenDistribution/** Cuts will automatically be spaced evenly along the length of the guide */,
                    ArraySpacingCustomDefined/** The user can specify a custom amount of space between the cuts */
                };

                private: EdgeCutBuilderImpl * m_edgecutbuilder_impl;
                private: friend class  _EdgeCutBuilderBuilder;
                protected: EdgeCutBuilder();
                public: ~EdgeCutBuilder();
                /**Returns  the placement geometry.  NOTE this is only used on features that were created in NX901 or later.  
                            If editing a feature created before NX9.0.1, use the select target face property instead. 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * PlacementGeometry
                (
                );
                /**Returns  the path geometry.  NOTE this is only used on features that were created in NX901 or later.  
                            If editing a feature created before NX9.0.1, use the guide curve property instead. 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * PathGeometry
                (
                );
                /**Returns  the path reverse direction flag.  NOTE this is only used on features that were created in NX901 or later.  
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: bool PathReverseDirection
                (
                );
                /**Sets  the path reverse direction flag.  NOTE this is only used on features that were created in NX901 or later.  
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetPathReverseDirection
                (
                    bool pathReverseDirection /** pathreversedirection */ 
                );
                /**Returns  the select target face.  NOTE this is only used on features that were created prior to NX901.  
                            If editing a feature created in NX9.0.1 or beyond, use the placement geometry property instead. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectFaceList * SelectTargetFace
                (
                );
                /**Returns  the guide curve used to place the cuts (may be made up of edges or curves).  
                            NOTE this is only used on features that were created prior to NX901.  
                            If editing a feature created in NX9.0.1 or beyond, use the path geometry property instead. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * GuideCurve
                (
                );
                /**Returns  the select start limit.  The start limit is used to trim the start of the guide curve.
                            NOTE features created before NX9.0.1 could use solid edges, lines, circles, splines, spcurves, datum planes, and planar faces as a limit object.
                            Any feature created in NX9.0.1 or beyond can use any of those limit objects as well as non-planar faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectStartLimit
                (
                );
                /**Returns  the select end limit.  The end limit is used to trim the end of the guide curve.  Note if the spacing is set to CustomDefined, 
                            you won't notice the end trim getting used, unless you try to place too many cuts between the start and end trim (including any offsets 
                            added by the Start and End positions on the guide).
                            NOTE features created before NX9.0.1 could use solid edges, lines, circles, splines, spcurves, datum planes, and planar faces as a limit object.
                            Any feature created in NX9.0.1 or beyond can use any of those limit objects as well as non-planar faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObject * SelectEndLimit
                (
                );
                /**Returns  the guide offset (how far away to place the cuts from the guide curve) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * GuideOffset
                (
                );
                /**Returns  the cut orientation angle.  Typically the x axis of the cut's cross section sketch is parallel to the guide curve, the orientation angle rotates the sketch away from the guide curve 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CutOrientationAngle
                (
                );
                /**Returns  the spacing (even distribution or custom defined) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EdgeCutBuilder::ArraySpacing Spacing
                (
                );
                /**Sets  the spacing (even distribution or custom defined) 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetSpacing
                (
                    NXOpen::Features::ShipDesign::EdgeCutBuilder::ArraySpacing spacing /** spacing */ 
                );
                /**Returns  the number of cuts 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: int CutCount
                (
                );
                /**Sets  the number of cuts 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetCutCount
                (
                    int cutCount /** cutcount */ 
                );
                /**Returns  the symmetric offsets toggle.  Note this is ignored if spacing is set to custom defined.  When symmetric offsets are used, the length of the 
                            guide is divided by the number of cuts to define the space between cuts, and half of the distance between each cut is applied as a start and end 
                            offset along the guide. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: bool SymmetricOffsets
                (
                );
                /**Sets  the symmetric offsets toggle.  Note this is ignored if spacing is set to custom defined.  When symmetric offsets are used, the length of the 
                            guide is divided by the number of cuts to define the space between cuts, and half of the distance between each cut is applied as a start and end 
                            offset along the guide. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetSymmetricOffsets
                (
                    bool symmetricOffsets /** symmetricoffsets */ 
                );
                /**Returns  the distance between each cut.  Note this is ignored if spacing is set to equal spacing. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * SpaceBetweenCuts
                (
                );
                /**Returns  the horizontal reference.  The horizontal reference is optional.
                        It is used to orient the cuts. 
                        If null, the guide tangent is used for the orientation reference at each cut.  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * HorizontalReference
                (
                );
                /**Sets  the horizontal reference.  The horizontal reference is optional.
                        It is used to orient the cuts. 
                        If null, the guide tangent is used for the orientation reference at each cut.  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetHorizontalReference
                (
                    NXOpen::Direction * horizontalReference /** horizontalreference */ 
                );
                /**Returns  the spacing reference direction.  The spacing reference direction is optional.  
                        It is used to measure the space between cuts in a linear distance.
                        If null, the spacing is measured via arc length along the guide. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * SpacingReference
                (
                );
                /**Sets  the spacing reference direction.  The spacing reference direction is optional.  
                        It is used to measure the space between cuts in a linear distance.
                        If null, the spacing is measured via arc length along the guide. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetSpacingReference
                (
                    NXOpen::Direction * spacingReference /** spacingreference */ 
                );
                /**Returns  the offset from the start of the guide curve (or start trim object) where cut placement will begin 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * StartPositionOnGuide
                (
                );
                /**Returns  the offset from the end of the guide curve (or end trim object) where cut placement will end.  Note if the spacing is set to CustomDefined, 
                            you won't notice the end trim getting used, unless you try to place too many cuts between along the guide (including any trim objects and 
                            offsets added by the Start and End positions on the guide). 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::GeometricUtilities::OnPathDimensionBuilder * EndPositionOnGuide
                (
                );
                /**Returns  the sketch block.
                             <br> 
                            Users can specify the hole shape using a single sketch. The sketch type and its parameters
                            are controlled by the @link NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder@endlink .
                             <br> 
                        
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::SteelFeatureSpreadsheetBuilder * SketchBlock
                (
                );
                /**Returns  the manufacturing stock builder that holds the manufacturing data. 
                 <br>  Created in NX8.5.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ManufacturingStockBuilder * ManufacturingInformation
                (
                );
                /**Returns  the reference point (part units) 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point3d ReferencePoint
                (
                );
                /**Sets  the reference point (part units) 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReferencePoint
                (
                    const NXOpen::Point3d & referencePoint /** referencepoint */ 
                );
                /**Returns  the reference direction 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Vector3d ReferenceDirection
                (
                );
                /**Sets  the reference direction 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReferenceDirection
                (
                    const NXOpen::Vector3d & referenceDirection /** referencedirection */ 
                );
                /**Returns  the version of the feature (used to determine which properties and methods are applicable) during edit.  The version of new features during create will be NX901 
                 <br>  Created in NX9.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EdgeCutBuilder::VersionID Version
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
