#ifndef NXOpen_COLLABORATIONAPPLICATION_SESSIONMANAGER_HXX_INCLUDED
#define NXOpen_COLLABORATIONAPPLICATION_SESSIONMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CollaborationApplication_SessionManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CollaborationApplication_SubscriptionMgr.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_collaborationapplication_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CollaborationApplication
    {
        class SessionManager;
    }
    class Session;
    namespace CollaborationApplication
    {
        class SubscriptionMgr;
    }
    namespace CollaborationApplication
    {
        class SessionManagerImpl;
        /**  @brief  Represents a Session Manager class  

           <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_COLLABORATIONAPPLICATIONEXPORT  SessionManager
        {
            private: SessionManagerImpl * m_sessionmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit SessionManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~SessionManager();
            /** Returns a new @link NXOpen::CollaborationApplication::SubscriptionMgr NXOpen::CollaborationApplication::SubscriptionMgr@endlink  object 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CollaborationApplication::SubscriptionMgr * GetSubscriptionManager
            (
            );

            /// \cond NX_NO_DOC 
            /** Publish mock collaboration event for testing purposes only 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMockCollaborationEvent
            (
                const NXString & userName /** user name */ ,
                const NXString & cliSpecNameFromPlmObject /** clispecnamefromplmobject */ ,
                int eventType /** eventtype */ ,
                const NXString & cliSpecEventBodyString /** clispeceventbodystring */ 
            );
            /** Publish mock collaboration event for testing purposes only 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetMockCollaborationEvent
            (
                const char * userName /** user name */ ,
                const char * cliSpecNameFromPlmObject /** clispecnamefromplmobject */ ,
                int eventType /** eventtype */ ,
                const char * cliSpecEventBodyString /** clispeceventbodystring */ 
            );

            /// \endcond 
            /** Update cards 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteCards
            (
                const std::vector<int> & cardIDs /** cardids */ 
            );
            /** Execute action 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void UpdateCards
            (
                int cardId /** cardid */ ,
                int spotId /** spotid */ ,
                const std::vector<int> & selectedCardIds /** selectedcardids */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
