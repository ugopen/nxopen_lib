#ifndef NXOpen_GEOMETRICANALYSIS_FACEANALYSISNORMALSBUILDER_HXX_INCLUDED
#define NXOpen_GEOMETRICANALYSIS_FACEANALYSISNORMALSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     GeometricAnalysis_FaceAnalysisNormalsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_geometricanalysis_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace GeometricAnalysis
    {
        class FaceAnalysisNormalsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    class SelectNXObject;
    namespace GeometricAnalysis
    {
        class _FaceAnalysisNormalsBuilderBuilder;
        class FaceAnalysisNormalsBuilderImpl;
        /** Represents reverse normal functions used by Face Analysis. 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_GEOMETRICANALYSISEXPORT  FaceAnalysisNormalsBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            private: FaceAnalysisNormalsBuilderImpl * m_faceanalysisnormalsbuilder_impl;
            private: friend class  _FaceAnalysisNormalsBuilderBuilder;
            protected: FaceAnalysisNormalsBuilder();
            public: ~FaceAnalysisNormalsBuilder();
            /**Returns  the face to reverse normal 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectNXObject * FaceToReverseNormal
            (
            );
            /**Returns  the point to redirect normals
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the point to redirect normals
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /** Restores all face normals. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: void RestoreAll
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not-yet-implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
