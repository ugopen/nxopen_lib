#ifndef NXOpen_VSA_PLANEFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_VSA_PLANEFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Vsa_PlaneFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_vsa_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Vsa
    {
        class PlaneFeatureBuilder;
    }
    class Builder;
    namespace Vsa
    {
        class _PlaneFeatureBuilderBuilder;
        class PlaneFeatureBuilderImpl;
        /**
            
             <br> To create a new instance of this class, use @link NXOpen::Vsa::VsaManager::CreatePlaneFeatureBuilder  NXOpen::Vsa::VsaManager::CreatePlaneFeatureBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DoubleKurtosisForm </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleKurtosisLoc </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleKurtosisSize </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleSkewnessForm </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleSkewnessLoc </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        DoubleSkewnessSize </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        EnumForm </term> <description> 
         
        Normal </description> </item> 

        <item><term> 
         
        EnumLoc </term> <description> 
         
        Normal </description> </item> 

        <item><term> 
         
        EnumSize </term> <description> 
         
        Normal </description> </item> 

        <item><term> 
         
        I </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        J </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        K </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        X </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        Y </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        Z </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Usable only on Windows <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_VSAEXPORT  PlaneFeatureBuilder : public NXOpen::Builder
        {
            /**
                     This enum is for Size distribution type.
                    */
            public: enum APIEnumSize
            {
                APIEnumSizeNormal/** normal */ ,
                APIEnumSizeUniform/** uniform */ ,
                APIEnumSizeExtreme/** extreme */ ,
                APIEnumSizePearson/** pearson */ ,
                APIEnumSizeTrapeziodal/** trapeziodal */ 
            };

            /**
                    This enum is for Location distribution type.
                    */
            public: enum APIEnumLoc
            {
                APIEnumLocNormal/** normal */ ,
                APIEnumLocUniform/** uniform */ ,
                APIEnumLocExtreme/** extreme */ ,
                APIEnumLocPearson/** pearson */ ,
                APIEnumLocTrapeziodal/** trapeziodal */ 
            };

            /**
                    This enum is for Form distribution type.
                    */
            public: enum APIEnumForm
            {
                APIEnumFormNormal/** normal */ ,
                APIEnumFormUniform/** uniform */ ,
                APIEnumFormExtreme/** extreme */ ,
                APIEnumFormPearson/** pearson */ ,
                APIEnumFormTrapeziodal/** trapeziodal */ 
            };

            private: PlaneFeatureBuilderImpl * m_planefeaturebuilder_impl;
            private: friend class  _PlaneFeatureBuilderBuilder;
            protected: PlaneFeatureBuilder();
            public: ~PlaneFeatureBuilder();
            /**Returns  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDescription
            (
                const NXString & stringDescription /** stringdescription */ 
            );
            /**Sets  the string description 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            void SetDescription
            (
                const char * stringDescription /** stringdescription */ 
            );
            /**Returns  the x 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double X
            (
            );
            /**Sets  the x 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetX
            (
                double x /** x */ 
            );
            /**Returns  the y 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double Y
            (
            );
            /**Sets  the y 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetY
            (
                double y /** y */ 
            );
            /**Returns  the z 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double Z
            (
            );
            /**Sets  the z 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetZ
            (
                double z /** z */ 
            );
            /**Returns  the i 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double I
            (
            );
            /**Sets  the i 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetI
            (
                double i /** i */ 
            );
            /**Returns  the j 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double J
            (
            );
            /**Sets  the j 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetJ
            (
                double j /** j */ 
            );
            /**Returns  the k 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double K
            (
            );
            /**Sets  the k 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetK
            (
                double k /** k */ 
            );
            /**Returns  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::PlaneFeatureBuilder::APIEnumSize EnumSize
            (
            );
            /**Sets  the enum size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumSize
            (
                NXOpen::Vsa::PlaneFeatureBuilder::APIEnumSize enumSize /** enumsize */ 
            );
            /**Returns  the double skewness size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessSize
            (
            );
            /**Sets  the double skewness size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessSize
            (
                double doubleSkewnessSize /** doubleskewnesssize */ 
            );
            /**Returns  the double kurtosis size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisSize
            (
            );
            /**Sets  the double kurtosis size 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisSize
            (
                double doubleKurtosisSize /** doublekurtosissize */ 
            );
            /**Returns  the enum loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::PlaneFeatureBuilder::APIEnumLoc EnumLoc
            (
            );
            /**Sets  the enum loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumLoc
            (
                NXOpen::Vsa::PlaneFeatureBuilder::APIEnumLoc enumLoc /** enumloc */ 
            );
            /**Returns  the double skewness loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessLoc
            (
            );
            /**Sets  the double skewness loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessLoc
            (
                double doubleSkewnessLoc /** doubleskewnessloc */ 
            );
            /**Returns  the double kurtosis loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisLoc
            (
            );
            /**Sets  the double kurtosis loc 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisLoc
            (
                double doubleKurtosisLoc /** doublekurtosisloc */ 
            );
            /**Returns  the enum form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Vsa::PlaneFeatureBuilder::APIEnumForm EnumForm
            (
            );
            /**Sets  the enum form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetEnumForm
            (
                NXOpen::Vsa::PlaneFeatureBuilder::APIEnumForm enumForm /** enumform */ 
            );
            /**Returns  the double skewness form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleSkewnessForm
            (
            );
            /**Sets  the double skewness form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleSkewnessForm
            (
                double doubleSkewnessForm /** doubleskewnessform */ 
            );
            /**Returns  the double kurtosis form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleKurtosisForm
            (
            );
            /**Sets  the double kurtosis form 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_vsa_build (" Building VSA model") */
            public: void SetDoubleKurtosisForm
            (
                double doubleKurtosisForm /** doublekurtosisform */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
