#ifndef NXOpen_FEATURES_SHIPDESIGN_DRAWINGANNOTATIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_DRAWINGANNOTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_DrawingAnnotationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class DrawingAnnotationBuilder;
        }
    }
    class Builder;
    namespace Drawings
    {
        class SelectDraftingViewList;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class _DrawingAnnotationBuilderBuilder;
            class DrawingAnnotationBuilderImpl;
            /** 
                    This builder allows you to define the drawing annotation information.
                    It represents @link NXOpen::Features::ShipDesign::DrawingAnnotationBuilder NXOpen::Features::ShipDesign::DrawingAnnotationBuilder@endlink 
                 <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateDrawingAnnotationBuilder  NXOpen::Features::ShipCollection::CreateDrawingAnnotationBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            ExistingAutomaticAnnotation </term> <description> 
             
            Preserve </description> </item> 

            <item><term> 
             
            IsCreateOpeningFillLines </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            IsCreateScantling </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            IsCreateScantlingTable </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            IsCreateStructureID </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  DrawingAnnotationBuilder : public NXOpen::Builder
            {
                /** Settings that indicate how to handle the exsiting annotation in the drawing.*/
                public: enum Annotation
                {
                    AnnotationPreserve/** preserve */ ,
                    AnnotationDelete/** delete */ 
                };

                private: DrawingAnnotationBuilderImpl * m_drawingannotationbuilder_impl;
                private: friend class  _DrawingAnnotationBuilderBuilder;
                protected: DrawingAnnotationBuilder();
                public: ~DrawingAnnotationBuilder();
                /**Returns  the drafting views to be annotated 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Drawings::SelectDraftingViewList * ViewList
                (
                );
                /**Returns  the option specify how to handle existing annotation 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::DrawingAnnotationBuilder::Annotation ExistingAutomaticAnnotation
                (
                );
                /**Sets  the option specify how to handle existing annotation 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetExistingAutomaticAnnotation
                (
                    NXOpen::Features::ShipDesign::DrawingAnnotationBuilder::Annotation existingAutomaticAnnotation /** existingautomaticannotation */ 
                );
                /**Returns  the setting that indicates whether the section symbol will be created for stiffeners 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateStiffenerSectionSymbol
                (
                );
                /**Sets  the setting that indicates whether the section symbol will be created for stiffeners 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateStiffenerSectionSymbol
                (
                    bool isCreateStiffenerSectionSymbol /** iscreatestiffenersectionsymbol */ 
                );
                /**Returns  the setting that indicates whether structure id will be created for ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateStructureID
                (
                );
                /**Sets  the setting that indicates whether structure id will be created for ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateStructureID
                (
                    bool isCreateStructureID /** iscreatestructureid */ 
                );
                /**Returns  the setting that indicates whether opening fill lines will be created for ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateOpeningFillLines
                (
                );
                /**Sets  the setting that indicates whether opening fill lines will be created for ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateOpeningFillLines
                (
                    bool isCreateOpeningFillLines /** iscreateopeningfilllines */ 
                );
                /**Returns  the setting that indicates whether scantling will be created for the ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateScantling
                (
                );
                /**Sets  the setting that indicates whether scantling will be created for the ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateScantling
                (
                    bool isCreateScantling /** iscreatescantling */ 
                );
                /**Returns  the setting that indicates whether the most common scantlings for stiffener and plate will be created for the view.
                            If yes, the stiffener and plate scantlings, other than the most common one, will not be created.
                         
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateScantlingTable
                (
                );
                /**Sets  the setting that indicates whether the most common scantlings for stiffener and plate will be created for the view.
                            If yes, the stiffener and plate scantlings, other than the most common one, will not be created.
                         
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateScantlingTable
                (
                    bool isCreateScantlingTable /** iscreatescantlingtable */ 
                );
                /**Returns  the setting that indicates whether continuity symbol on section stiffener will be created for the ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateContinuitySymbolOnSectionStiffener
                (
                );
                /**Sets  the setting that indicates whether continuity symbol on section stiffener will be created for the ship objects 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateContinuitySymbolOnSectionStiffener
                (
                    bool isCreateContinuitySymbolOnSectionStiffener /** iscreatecontinuitysymbolonsectionstiffener */ 
                );
                /**Returns  the setting that indicates whether the fire and safety plan symbol will be created for the ship objects or not. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : None */
                public: bool IsCreateFireAndSafetyPlan
                (
                );
                /**Sets  the setting that indicates whether the fire and safety plan symbol will be created for the ship objects or not. 
                 <br>  Created in NX12.0.2.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetCreateFireAndSafetyPlan
                (
                    bool isCreateFireAndSafetyPlan /** iscreatefireandsafetyplan */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
