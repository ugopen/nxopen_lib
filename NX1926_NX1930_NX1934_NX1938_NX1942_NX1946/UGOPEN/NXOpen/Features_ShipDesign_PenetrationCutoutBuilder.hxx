#ifndef NXOpen_FEATURES_SHIPDESIGN_PENETRATIONCUTOUTBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_PENETRATIONCUTOUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_PenetrationCutoutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationRequest.hxx>
#include <NXOpen/Features_ShipDesign_PenetrationRequestBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class PenetrationCutoutBuilder;
        }
    }
    class Body;
    class Builder;
    class Direction;
    class Expression;
    class Section;
    class Sketch;
    namespace Features
    {
        namespace ShipDesign
        {
            class _PenetrationCutoutBuilderBuilder;
            class PenetrationCutoutBuilderImpl;
            /** Represents a @link NXOpen::Features::ShipDesign::PenetrationRequest NXOpen::Features::ShipDesign::PenetrationRequest@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Features::ShipDesign::PenetrationRequestCollection::CreatePenetrationCutoutBuilder  NXOpen::Features::ShipDesign::PenetrationRequestCollection::CreatePenetrationCutoutBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            CornerRadius.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            CoutoutType </term> <description> 
             
            Circular </description> </item> 

            <item><term> 
             
            Diameter.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            DirectionType </term> <description> 
             
            PerpendiculartoStructure </description> </item> 

            <item><term> 
             
            Height.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Offset.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Radius.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Width.Value </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  PenetrationCutoutBuilder : public NXOpen::Builder
            {
                private: PenetrationCutoutBuilderImpl * m_penetrationcutoutbuilder_impl;
                private: friend class  _PenetrationCutoutBuilderBuilder;
                protected: PenetrationCutoutBuilder();
                public: ~PenetrationCutoutBuilder();
                /**Returns  the coutout type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PenetrationRequest::CoutoutType CoutoutType
                (
                );
                /**Sets  the coutout type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetCoutoutType
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest::CoutoutType enumCoutoutType /** enumcoutouttype */ 
                );
                /**Returns  the diameter expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Diameter
                (
                );
                /**Returns  the offset expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Offset
                (
                );
                /**Returns  the height expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Height
                (
                );
                /**Returns  the width expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Width
                (
                );
                /**Returns  the radius expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Radius
                (
                );
                /**Returns  the corner radius expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * CornerRadius
                (
                );
                /**Returns  the hole type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString HoleType
                (
                );
                /**Sets  the hole type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetHoleType
                (
                    const NXString & stringHoleType /** stringholetype */ 
                );
                /**Sets  the hole type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void SetHoleType
                (
                    const char * stringHoleType /** stringholetype */ 
                );
                /**Returns  the hole sub-type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXString HoleSubType
                (
                );
                /**Sets  the hole sub-type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetHoleSubType
                (
                    const NXString & stringHoleType /** stringholetype */ 
                );
                /**Sets  the hole sub-type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                void SetHoleSubType
                (
                    const char * stringHoleType /** stringholetype */ 
                );
                /**Returns  the sketch 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * Sketch
                (
                );
                /**Returns  the modified sketch 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Sketch * ModifiedSketch
                (
                );
                /**Sets  the modified sketch 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetModifiedSketch
                (
                    NXOpen::Sketch * modifiedSketch /** modifiedsketch */ 
                );
                /**Returns  the direction type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::PenetrationRequest::DirectionType DirectionType
                (
                );
                /**Sets  the direction type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetDirectionType
                (
                    NXOpen::Features::ShipDesign::PenetrationRequest::DirectionType enumDirection /** enumdirection */ 
                );
                /**Returns  the orientation 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * Orientation
                (
                );
                /**Sets  the orientation 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetOrientation
                (
                    NXOpen::Direction * vectorOrientation /** vectororientation */ 
                );
                /**Returns  the horizontal direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * HorizontalDirection
                (
                );
                /**Sets  the horizontal direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetHorizontalDirection
                (
                    NXOpen::Direction * vectorHorizontalDirection /** vectorhorizontaldirection */ 
                );
                /** Adds nonintersected structures 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void AddNonIntersectedStructure
                (
                    NXOpen::Body * structure /** structure */ 
                );
                /** Removes all nonintersected structures 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void RemoveNonIntersectedStructures
                (
                );
                /**Set the dialog type 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : nx_penetration_mgmt ("Penetration Management") */
                public: void SetDialogType
                (
                    NXOpen::Features::ShipDesign::PenetrationRequestBuilder::RequestDialogType dialogType /** dialogtype */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
