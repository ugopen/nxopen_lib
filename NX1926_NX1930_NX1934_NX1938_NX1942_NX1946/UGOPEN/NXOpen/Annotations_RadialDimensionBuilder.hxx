#ifndef NXOpen_ANNOTATIONS_RADIALDIMENSIONBUILDER_HXX_INCLUDED
#define NXOpen_ANNOTATIONS_RADIALDIMENSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Annotations_RadialDimensionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Annotations_DrivingValueBuilder.hxx>
#include <NXOpen/Annotations_ForeshorteningSymbolBuilder.hxx>
#include <NXOpen/Dimensions.hxx>
#include <NXOpen/Annotations_BaseRadialDimensionBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_annotations_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Annotations
    {
        class RadialDimensionBuilder;
    }
    namespace Annotations
    {
        class BaseRadialDimensionBuilder;
    }
    namespace Annotations
    {
        class Dimension;
    }
    namespace Annotations
    {
        class DrivingValueBuilder;
    }
    namespace Annotations
    {
        class ForeshorteningSymbolBuilder;
    }
    namespace Annotations
    {
        class _RadialDimensionBuilderBuilder;
        class RadialDimensionBuilderImpl;
        /** Represents a @link NXOpen::Annotations::Dimension NXOpen::Annotations::Dimension@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Annotations::DimensionCollection::CreateRadialDimensionBuilder  NXOpen::Annotations::DimensionCollection::CreateRadialDimensionBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_ANNOTATIONSEXPORT  RadialDimensionBuilder : public NXOpen::Annotations::BaseRadialDimensionBuilder
        {
            private: RadialDimensionBuilderImpl * m_radialdimensionbuilder_impl;
            private: friend class  _RadialDimensionBuilderBuilder;
            protected: RadialDimensionBuilder();
            public: ~RadialDimensionBuilder();
            /**Returns  the driving 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::DrivingValueBuilder * Driving
            (
            );
            /**Returns  the foreshortening symbol builder 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::ForeshorteningSymbolBuilder * ForeshorteningSymbol
            (
            );
            /** The origins for secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetNthSecondaryOrigin
            (
                int nth /** nth */ ,
                const NXOpen::Point3d & secondaryOrigin /** secondaryorigin */ 
            );
            /** The origins for secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point3d GetNthSecondaryOrigin
            (
                int nth /** nth */ 
            );
            /** The arrowhead orientation for nth secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetNthSecondaryArrowheadOrientation
            (
                int nth /** nth */ ,
                NXOpen::Annotations::TextPlacement secondaryArrowheadOrientation /** secondaryarrowheadorientation */ 
            );
            /** The arrowhead orientation for nth secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Annotations::TextPlacement GetNthSecondaryArrowheadOrientation
            (
                int nth /** nth */ 
            );
            /**Sets  a flag to indicate if auto placement turned on. This is used to compute origins for secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : geometric_tol ("GDT") OR drafting ("DRAFTING") */
            public: void SetAutoplaced
            (
                bool isAutoplaced /** isautoplaced */ 
            );
            /**Returns  a flag to indicate if auto placement turned on. This is used to compute origins for secondary dimensions 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: bool IsAutoplaced
            (
            );
            /** The secondary callouts 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Annotations::Dimension *> GetSecondaryCallouts
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
