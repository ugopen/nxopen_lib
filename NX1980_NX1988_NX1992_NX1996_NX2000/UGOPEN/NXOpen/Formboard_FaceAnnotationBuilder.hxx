#ifndef NXOpen_FORMBOARD_FACEANNOTATIONBUILDER_HXX_INCLUDED
#define NXOpen_FORMBOARD_FACEANNOTATIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Formboard_FaceAnnotationBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_formboard_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Formboard
    {
        class FaceAnnotationBuilder;
    }
    class Builder;
    class Point;
    class SelectNXObject;
    namespace Formboard
    {
        class _FaceAnnotationBuilderBuilder;
        class FaceAnnotationBuilderImpl;
        /** Builder for Face Annotation functionality used in formboard. It allows 
                 importing CGM or Pattern file geometry and placing it on a drawing sheet
                 or model view. As a result of this a group of dumb geometry is placed such
                 that defined origin is located at the lower left hand of the bounding box 
                 containing the group of geometry.
              <br> To create a new instance of this class, use @link NXOpen::Formboard::FormboardManager::CreateFaceAnnotationBuilder  NXOpen::Formboard::FormboardManager::CreateFaceAnnotationBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DestEnum </term> <description> 
         
        DrawingSheet </description> </item> 

        <item><term> 
         
        TogBlank </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_FORMBOARDEXPORT  FaceAnnotationBuilder : public NXOpen::Builder
        {
            /** Enum which defines the type to import CGM/Pattern file*/
            public: enum Types
            {
                TypesComponentAttribute/** Import CGM file by selecting a component*/,
                TypesCgmFileSelection/** Import CGM file by browsing a CGM file*/,
                TypesPatternFileSelection/** Import a pattern file */
            };

            /** Enum which defines where the geometry is to be placed. The geometry
                        can be placed either in model or drawing sheet.
                    */
            public: enum DrwDestination
            {
                DrwDestinationDrawingSheet/** Place geometry in drawing sheet */,
                DrwDestinationModel/** Place geometry in model */
            };

            private: FaceAnnotationBuilderImpl * m_faceannotationbuilder_impl;
            private: friend class  _FaceAnnotationBuilderBuilder;
            protected: FaceAnnotationBuilder();
            public: ~FaceAnnotationBuilder();
            /**Returns  the user selected component which has a CGM_FILE or PATTERN_FILE attribute defined. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::SelectNXObject * CompSel
            (
            );
            /**Returns  the browser which enables selection of CGM file when @link 
                       Formboard::FaceAnnotationBuilder::Types 
                       Formboard::FaceAnnotationBuilder::Types@endlink  is @link 
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection  
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection @endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXString CgmflBrsr
            (
            );
            /**Sets  the browser which enables selection of CGM file when @link 
                       Formboard::FaceAnnotationBuilder::Types 
                       Formboard::FaceAnnotationBuilder::Types@endlink  is @link 
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection  
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection @endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetCgmflBrsr
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the browser which enables selection of CGM file when @link 
                       Formboard::FaceAnnotationBuilder::Types 
                       Formboard::FaceAnnotationBuilder::Types@endlink  is @link 
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection  
                       Formboard::FaceAnnotationBuilder::TypesCgmFileSelection @endlink .
                    
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            void SetCgmflBrsr
            (
                const char * filename /** filename */ 
            );
            /**Returns  the string to display the name of Pattern file name selected by user. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXString StrAnnot
            (
            );
            /**Sets  the string to display the name of Pattern file name selected by user. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetStrAnnot
            (
                const NXString & strAnnot /** strannot */ 
            );
            /**Sets  the string to display the name of Pattern file name selected by user. 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            void SetStrAnnot
            (
                const char * strAnnot /** strannot */ 
            );
            /**Returns  the string to display the name of CGM name selected by user.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXString StrAnnotFileName
            (
            );
            /**Sets  the string to display the name of CGM name selected by user.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetStrAnnotFileName
            (
                const NXString & strAnnot /** strannot */ 
            );
            /**Sets  the string to display the name of CGM name selected by user.
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            void SetStrAnnotFileName
            (
                const char * strAnnot /** strannot */ 
            );
            /**Returns  the user selected point where geometry will be placed 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Point * PntOrigin
            (
            );
            /**Sets  the user selected point where geometry will be placed 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetPntOrigin
            (
                NXOpen::Point * pntOrigin /** pntorigin */ 
            );
            /**Returns  the @link  NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination   NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination @endlink  selected by
                        user to place the geometry 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination DestEnum
            (
            );
            /**Sets  the @link  NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination   NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination @endlink  selected by
                        user to place the geometry 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetDestEnum
            (
                NXOpen::Formboard::FaceAnnotationBuilder::DrwDestination destEnum /** destenum */ 
            );
            /**Returns  the toggle which defines whether the selected component is to be blanked or not 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: bool TogBlank
            (
            );
            /**Sets  the toggle which defines whether the selected component is to be blanked or not 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetTogBlank
            (
                bool togBlank /** togblank */ 
            );
            /**Returns  the @link  NXOpen::Formboard::FaceAnnotationBuilder::Types   NXOpen::Formboard::FaceAnnotationBuilder::Types @endlink 
                        selected by user 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: NXOpen::Formboard::FaceAnnotationBuilder::Types Type
            (
            );
            /**Sets  the @link  NXOpen::Formboard::FaceAnnotationBuilder::Types   NXOpen::Formboard::FaceAnnotationBuilder::Types @endlink 
                        selected by user 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : routing_harness ("Routing Harness") */
            public: void SetType
            (
                NXOpen::Formboard::FaceAnnotationBuilder::Types type /** type */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
