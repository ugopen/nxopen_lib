#ifndef NXOpen_FEATURES_SHIPDESIGN_STIFFENERBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_STIFFENERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_StiffenerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_ShipDesign_EndCutBuilder.hxx>
#include <NXOpen/Features_ShipDesign_FeatureParmsBuilder.hxx>
#include <NXOpen/Features_ShipDesign_OrientationDefinitionBuilder.hxx>
#include <NXOpen/Features_ShipDesign_ShipNamesBuilder.hxx>
#include <NXOpen/Features_ShipDesign_StiffenerBySupportPathBuilder.hxx>
#include <NXOpen/Features_ShipDesign_StiffenerLimitBuilder.hxx>
#include <NXOpen/Features_ShipDesign_StiffenerStockBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class StiffenerBuilder;
        }
    }
    class Body;
    class Direction;
    class DisplayableObject;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectDatumCsysList;
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class EndCutBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class OrientationDefinitionBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class ShipNamesBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class StiffenerBySupportPathBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class StiffenerLimitBuilder;
        }
    }
    namespace Features
    {
        namespace ShipDesign
        {
            class StiffenerStockBuilder;
        }
    }
    class NXObject;
    class NXObjectList;
    class ScCollector;
    class SelectDisplayableObject;
    class SelectDisplayableObjectList;
    class SelectTaggedObjectList;
    namespace Features
    {
        namespace ShipDesign
        {
            class _StiffenerBuilderBuilder;
            class StiffenerBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::Stiffener NXOpen::Features::ShipDesign::Stiffener@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateStiffenerBuilder  NXOpen::Features::ShipCollection::CreateStiffenerBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AddNeatTrim </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            AngularTolerance </term> <description> 
             
            0.5 </description> </item> 

            <item><term> 
             
            AttachmentPlateOption </term> <description> 
             
            Inferred </description> </item> 

            <item><term> 
             
            DistanceTolerance </term> <description> 
             
            0.0254 </description> </item> 

            <item><term> 
             
            EdgeReinforcementAlignment </term> <description> 
             
            Center </description> </item> 

            <item><term> 
             
            EndCutType </term> <description> 
             
            None </description> </item> 

            <item><term> 
             
            EndEndCut.ConnectionType </term> <description> 
             
            Connected </description> </item> 

            <item><term> 
             
            EndEndCut.DraftAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndEndCut.DraftOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            EndEndCut.DraftType </term> <description> 
             
            Trim </description> </item> 

            <item><term> 
             
            EndEndCut.EndFaceType </term> <description> 
             
            NeatTrim </description> </item> 

            <item><term> 
             
            EndEndCut.LimitType </term> <description> 
             
            Value </description> </item> 

            <item><term> 
             
            EndEndCut.Offset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            EndEndCut.SelectionType </term> <description> 
             
            FacesWithAttributes </description> </item> 

            <item><term> 
             
            EndEndCut.ShearAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndEndCut.TiltAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndLimit.LimitMethod </term> <description> 
             
            Value </description> </item> 

            <item><term> 
             
            EndLimit.LimitValue.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            FaceOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            IncludeRelief </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            KnuckleOption </term> <description> 
             
            None </description> </item> 

            <item><term> 
             
            MountingAngle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            MountingMethod </term> <description> 
             
            NoOffset </description> </item> 

            <item><term> 
             
            OrientType </term> <description> 
             
            FaceNormal </description> </item> 

            <item><term> 
             
            OrientationAngleRule </term> <description> 
             
            RightHand </description> </item> 

            <item><term> 
             
            OrientationDefinitionBuilder.MeasureAngles </term> <description> 
             
            NormaltoCurve </description> </item> 

            <item><term> 
             
            OrientationDefinitionBuilder.ShowSurfaceAngles </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            OrientationDefinitionBuilder.ShowTwistRate </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            OrientationDefinitionBuilder.ShowWebAngles </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            PathOffset.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            StiffenerBySupportPathData.LengthParams.Value </term> <description> 
             
            300 (millimeters part), 100 (inches part) </description> </item> 

            <item><term> 
             
            StiffenerBySupportPathData.OrientationBySupport </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            StockData.AnchorPoint </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            StockData.PlateHeight.Value </term> <description> 
             
            50 (millimeters part), 2 (inches part) </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.KnuckleRatio </term> <description> 
             
            3.0 </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.KnuckleSmoothAngle </term> <description> 
             
            3.0 </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.MaterialOption </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.OppositeThickness.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.RestrictThicknessToMaterial </term> <description> 
             
            true </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.ThickenOption </term> <description> 
             
            SingleSided </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.Thickness.Value </term> <description> 
             
            10 (millimeters part), 0.5 (inches part) </description> </item> 

            <item><term> 
             
            StockData.PlateStockData.ThicknessSourceOption </term> <description> 
             
            List </description> </item> 

            <item><term> 
             
            StockData.SectionType </term> <description> 
             
            Profile </description> </item> 

            </list> 

             <br>  Created in NX8.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  StiffenerBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** the feature type:  Stiffener or Edge Reinforcement */
                public: enum Types
                {
                    TypesStiffener/** Stiffener type */,
                    TypesEdgeReinforcement/** Edge Reinforcement type */,
                    TypesAdoptStiffener/** Adoption Stiffener type */,
                    TypesAdoptEdgeReinforcement/** Adoption Edge Reinforcement type */,
                    TypesStiffenerBySupport/** Stiffener By Support type */
                };

                /** the mounting method offset type */
                public: enum MountingMethods
                {
                    MountingMethodsNoOffset/** No mounting offset */,
                    MountingMethodsAlongWeb/** Offset stiffener along web direction */,
                    MountingMethodsFaceNormal/** Offset stiffener along placement face normal */
                };

                /** the edge reinforcement alignment method */
                public: enum EdgeReinforcementAlignmentMethod
                {
                    EdgeReinforcementAlignmentMethodCenter/** Center the Edge Reinforcement on the selected edge */,
                    EdgeReinforcementAlignmentMethodGuideEdge/** Place the end of the Edge Reinforcement on the selected edge */,
                    EdgeReinforcementAlignmentMethodOppositeGuide/** Place the end of the Edge Reinforcement on the edge opposite the selected edge */
                };

                /** this specifies how the end cuts are applied */
                public: enum EndCutTypes
                {
                    EndCutTypesNone/** No end cuts are applied */,
                    EndCutTypesSymmetric/** The same end cut is applied to both ends */,
                    EndCutTypesTwoSided/** Each end has different end cuts */
                };

                /** The stiffener orientation method */
                public: enum OrientationMethod
                {
                    OrientationMethodFaceNormal/** Align stiffener with face normal */,
                    OrientationMethodVector/** Align stiffener with vector */,
                    OrientationMethodDatumCSYS/** Align stiffener with one or more coordinate systems */
                };

                /** the knuckle option */
                public: enum KnuckleOptions
                {
                    KnuckleOptionsNone/** No special handling for knuckles */,
                    KnuckleOptionsSplit/** Split the stiffener at knuckle points */,
                    KnuckleOptionsBend/** Bend at the knuckle points */
                };

                /** The stiffener attachment plate option*/
                public: enum AttachmentOption
                {
                    AttachmentOptionInferred/** Infer the plate on which to attach the stiffener */,
                    AttachmentOptionOverride/** Use the selected attachment plate on which to attach the stiffener */
                };

                /** The edge reinforcement placement method */
                public: enum EdgeReinforcementPlacementMethods
                {
                    EdgeReinforcementPlacementMethodsOnEdge/** Attach the edge reinforcement to the edge */,
                    EdgeReinforcementPlacementMethodsOnFace/** Attach the edge reinforcement to the adajacent face */
                };

                private: StiffenerBuilderImpl * m_stiffenerbuilder_impl;
                private: friend class  _StiffenerBuilderBuilder;
                protected: StiffenerBuilder();
                public: ~StiffenerBuilder();
                /**Returns  the feature type:  Stiffener or Edge Reinforcement 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::Types Type
                (
                );
                /**Sets  the feature type:  Stiffener or Edge Reinforcement 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetType
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::Types type /** type */ 
                );
                /**Returns  the stock data 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerStockBuilder * StockData
                (
                );
                /**Returns  the placement geometry 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObjectList * PlacementGeometry
                (
                );
                /**Returns  the face offset expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * FaceOffset
                (
                );
                /**Returns  the face reverse direction flag 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool FaceReverseDirection
                (
                );
                /**Sets  the face reverse direction flag 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetFaceReverseDirection
                (
                    bool faceReverseDirection /** facereversedirection */ 
                );
                /**Returns  the mounting method 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::MountingMethods MountingMethod
                (
                );
                /**Sets  the mounting method 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetMountingMethod
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::MountingMethods mountingMethod /** mountingmethod */ 
                );
                /**Returns  the edge reinforcement alignment 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::EdgeReinforcementAlignmentMethod EdgeReinforcementAlignment
                (
                );
                /**Sets  the edge reinforcement alignment 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEdgeReinforcementAlignment
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::EdgeReinforcementAlignmentMethod edgeReinforcementAlignment /** edgereinforcementalignment */ 
                );
                /**Returns  the edge reinforcement placement method 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::EdgeReinforcementPlacementMethods EdgeReinforcementPlacementMethod
                (
                );
                /**Sets  the edge reinforcement placement method 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEdgeReinforcementPlacementMethod
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::EdgeReinforcementPlacementMethods edgeReinforcementPlacementMethod /** edgereinforcementplacementmethod */ 
                );
                /**Returns  the path geometry
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * PathGeometry
                (
                );
                /**Returns  the path offset expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * PathOffset
                (
                );
                /**Returns  the path reverse direction flag 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: bool PathReverseDirection
                (
                );
                /**Sets  the path reverse direction flag 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetPathReverseDirection
                (
                    bool pathReverseDirection /** pathreversedirection */ 
                );
                /**Returns  the start path limit 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerLimitBuilder * StartLimit
                (
                );
                /**Returns  the end path limit 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerLimitBuilder * EndLimit
                (
                );
                /**Returns  the number of end cuts to apply 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::EndCutTypes EndCutType
                (
                );
                /**Sets  the number of end cuts to apply 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetEndCutType
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::EndCutTypes endcutType /** endcuttype */ 
                );
                /**Returns  the start end cut 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * StartEndCut
                (
                );
                /**Returns  the end end cut 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::EndCutBuilder * EndEndCut
                (
                );
                /**Returns  the stiffener orientation type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::OrientationMethod OrientType
                (
                );
                /**Sets  the stiffener orientation type 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetOrientType
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::OrientationMethod orientType /** orienttype */ 
                );
                /**Returns  the orientation vector (when OrientType is Vector) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Direction * OrientVector
                (
                );
                /**Sets  the orientation vector (when OrientType is Vector) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetOrientVector
                (
                    NXOpen::Direction * orientVector /** orientvector */ 
                );
                /**Returns  the orientation coordinate systems (when OrientType is DatumCSys 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SelectDatumCsysList * OrientCsys
                (
                );
                /**Returns  the mounting angle expression 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * MountingAngle
                (
                );
                /**Returns  the distance tolerance (part units) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double DistanceTolerance
                (
                );
                /**Sets  the distance tolerance (part units) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetDistanceTolerance
                (
                    double distanceTolerance /** distancetolerance */ 
                );
                /**Returns  the angular tolerance (degrees) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: double AngularTolerance
                (
                );
                /**Sets  the angular tolerance (degrees) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAngularTolerance
                (
                    double angularTolerance /** angulartolerance */ 
                );
                /**Returns  the reference point (part units) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point3d ReferencePoint
                (
                );
                /**Sets  the reference point (part units) 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReferencePoint
                (
                    const NXOpen::Point3d & referencePoint /** referencepoint */ 
                );
                /**Returns  the reference direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Vector3d ReferenceDirection
                (
                );
                /**Sets  the reference direction 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetReferenceDirection
                (
                    const NXOpen::Vector3d & referenceDirection /** referencedirection */ 
                );
                /**Returns  the adoption bodies, which are used to create multiple adoption stiffeners. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectTaggedObjectList * AdoptionBodies
                (
                );
                /**Returns  the adoption mold faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionMoldFaces
                (
                );
                /**Returns  the adoption base faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionBaseFaces
                (
                );
                /**Returns  the adoption opposing mold faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionOpposingMoldFaces
                (
                );
                /**Returns  the adoption top faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionTopFaces
                (
                );
                /**Returns  the adoption end cut 1 faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionEndCutFaces1
                (
                );
                /**Returns  the adoption end cut 2 faces. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * AdoptionEndCutFaces2
                (
                );
                /**Returns  the adoption anchor point list. 
                 <br>  Created in NX8.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXObjectList * AdoptionAnchorPointList
                (
                );
                /** Gets the show migrated body flag. Reserved for administrator use only.
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : None */
                public: bool GetShowMigratedBody
                (
                );
                /** Sets the show migrated body flag. Reserved for administrator use only.
                 <br>  Created in NX8.5.3.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetShowMigratedBody
                (
                    bool showMigratedBody /** showmigratedbody */ 
                );
                /**Returns  the stiffener knuckle option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::KnuckleOptions KnuckleOption
                (
                );
                /**Sets  the stiffener knuckle option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetKnuckleOption
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::KnuckleOptions knuckleOption /** knuckleoption */ 
                );
                /**Returns  the include relief option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IncludeRelief
                (
                );
                /**Sets  the include relief option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetIncludeRelief
                (
                    bool includeRelief /** includerelief */ 
                );
                /**Returns  the path data used to define the support information of the stiffener.
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBySupportPathBuilder * StiffenerBySupportPathData
                (
                );
                /**Returns  the connect angle of stiffener by support in degrees, negative value is not allowed 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: double ConnectAngle
                (
                );
                /**Sets  the connect angle of stiffener by support in degrees, negative value is not allowed 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetConnectAngle
                (
                    double connectAngle /** connectangle */ 
                );
                /**Returns  the flange set back option for stiffener by support, which indicates if the flange set back should be applied or not 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ApplyFlangeSetback
                (
                );
                /**Sets  the flange set back option for stiffener by support, which indicates if the flange set back should be applied or not 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetApplyFlangeSetback
                (
                    bool applyFlangeSetback /** applyflangesetback */ 
                );
                /**Returns  the web set back option for stiffener by support, which indicates if the web set back should be applied or not 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ApplyWebSetback
                (
                );
                /**Sets  the web set back option for stiffener by support, which indicates if the web set back should be applied or not 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetApplyWebSetback
                (
                    bool applyWebSetback /** applywebsetback */ 
                );
                /**Returns  the attachment plate option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::StiffenerBuilder::AttachmentOption AttachmentPlateOption
                (
                );
                /**Sets  the attachment plate option 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAttachmentPlateOption
                (
                    NXOpen::Features::ShipDesign::StiffenerBuilder::AttachmentOption attachmentPlateOption /** attachmentplateoption */ 
                );
                /**Returns  the selected attachment plate 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDisplayableObject * AttachmentPlate
                (
                );
                /**Returns  the builder used to define the orientation for the stiffener. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::OrientationDefinitionBuilder * OrientationDefinitionBuilder
                (
                );
                /** Creates path curves for use by the orientation definition object 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: void CreatePath
                (
                    std::vector<NXOpen::NXObject *> & curves /** The curves defining the path of the profile that is being oriented. */,
                    std::vector<NXOpen::DisplayableObject *> & faces /** The faces/datums defining the placement of the profile that is being oriented. */
                );
                /**Returns  the angle rule to use when measuring angles. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::FeatureParmsBuilder::OrientationAngleRuleTypes OrientationAngleRule
                (
                );
                /**Sets  the angle rule to use when measuring angles. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetOrientationAngleRule
                (
                    NXOpen::Features::ShipDesign::FeatureParmsBuilder::OrientationAngleRuleTypes angleRule /** anglerule */ 
                );
                /** Destroy the path curves 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void DestroyPath
                (
                    const std::vector<NXOpen::NXObject *> & curves /** The curves defining the path of the profile that is being oriented. */
                );
                /**Returns  the option to add neat trim to plate edge reinforcements. Note this only applies to plates. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool AddNeatTrim
                (
                );
                /**Sets  the option to add neat trim to plate edge reinforcements. Note this only applies to plates. 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: void SetAddNeatTrim
                (
                    bool addNeatTrim /** addneattrim */ 
                );
                /**Returns   @brief  The ship name builder.  

                 
                            
                                The ship name builder is used to construct the part name of the structure.
                             
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ShipNamesBuilder * ShipNames
                (
                );
                /** Returns the plate body where the stiffener by support boundary is attached. 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : nx_ship_detail ("Ship Detail Design") */
                public: NXOpen::Body * GetStiffenerBySupportBoundaryAttachedPlate
                (
                    NXOpen::Body * boundary /** boundary */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
