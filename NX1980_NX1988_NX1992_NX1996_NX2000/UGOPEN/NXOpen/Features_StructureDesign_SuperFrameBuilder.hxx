#ifndef NXOpen_FEATURES_STRUCTUREDESIGN_SUPERFRAMEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_STRUCTUREDESIGN_SUPERFRAMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_StructureDesign_SuperFrameBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_StructureDesign_FeatureParmsBuilder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace StructureDesign
        {
            class SuperFrameBuilder;
        }
    }
    class Curve;
    class Expression;
    namespace Features
    {
        namespace StructureDesign
        {
            class FeatureParmsBuilder;
        }
    }
    class Point;
    namespace Features
    {
        namespace StructureDesign
        {
            class _SuperFrameBuilderBuilder;
            class SuperFrameBuilderImpl;
            /**
                Represents a builder which is used to create or edit a Structure Design SuperFrame feature.
                 <br> To create a new instance of this class, use @link NXOpen::Features::StructureDesignCollection::CreateStructureDesignSuperFrameBuilder  NXOpen::Features::StructureDesignCollection::CreateStructureDesignSuperFrameBuilder @endlink  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  SuperFrameBuilder : public NXOpen::Features::StructureDesign::FeatureParmsBuilder
            {
                /** the transform types */
                public: enum TransformTypes
                {
                    TransformTypesMove/** move */ ,
                    TransformTypesCopy/** copy */ 
                };

                /** the input mode types */
                public: enum InputModes
                {
                    InputModesCoordinates/** coordinates */ ,
                    InputModesParameters/** parameters */ 
                };

                /** the base types */
                public: enum BaseTypes
                {
                    BaseTypesNone/** none */ ,
                    BaseTypesCorners/** corners */ ,
                    BaseTypesTransform/** transform */ 
                };

                private: SuperFrameBuilderImpl * m_superframebuilder_impl;
                private: friend class  _SuperFrameBuilderBuilder;
                protected: SuperFrameBuilder();
                public: ~SuperFrameBuilder();
                /**Returns  the height dimension 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Height
                (
                );
                /**Returns  the width dimension 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Width
                (
                );
                /**Returns  the length dimension 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Length
                (
                );
                /**Returns  the first point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * Point0
                (
                );
                /**Sets  the first point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetPoint0
                (
                    NXOpen::Point * point0 /** point0 */ 
                );
                /**Returns  the second point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * Point1
                (
                );
                /**Sets  the second point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetPoint1
                (
                    NXOpen::Point * point1 /** point1 */ 
                );
                /**Returns  the third point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * Point2
                (
                );
                /**Sets  the third point 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetPoint2
                (
                    NXOpen::Point * point2 /** point2 */ 
                );
                /**Returns  the first point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes InputMode0
                (
                );
                /**Sets  the first point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetInputMode0
                (
                    NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes mode0 /** mode0 */ 
                );
                /**Returns  the second point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes InputMode1
                (
                );
                /**Sets  the second point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetInputMode1
                (
                    NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes mode1 /** mode1 */ 
                );
                /**Returns  the third point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes InputMode2
                (
                );
                /**Sets  the third point input mode
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void SetInputMode2
                (
                    NXOpen::Features::StructureDesign::SuperFrameBuilder::InputModes mode2 /** mode2 */ 
                );
                /**Returns  the first point x coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point0X
                (
                );
                /**Returns  the first point y coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point0Y
                (
                );
                /**Returns  the first point z coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point0Z
                (
                );
                /**Returns  the second point x coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point1X
                (
                );
                /**Returns  the second point y coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point1Y
                (
                );
                /**Returns  the third point z coordinate 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Point2Z
                (
                );
                /** Adds action to lists. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void AddAction
                (
                    const std::vector<NXOpen::Curve *> & sourceCurves /** sourcecurves */ ,
                    NXOpen::Features::StructureDesign::SuperFrameBuilder::TransformTypes actionType /** actiontype */ ,
                    const NXOpen::Vector3d & actionDirection /** actiondirection */ ,
                    double actionDistance /** actiondistance */ 
                );
                /** Removes last action from lists. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void UndoAction
                (
                );
                /** Creates the frame curves. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void CreateCurves
                (
                );
                /** Creates a copy of the curve. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: NXOpen::Curve * CopyCurve
                (
                    NXOpen::Curve * curveTag /** curvetag */ 
                );
                /** Changes the curve's start and end points. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void UpdateCurve
                (
                    NXOpen::Curve * curveTag /** curvetag */ ,
                    const NXOpen::Point3d & startPoint /** startpoint */ ,
                    const NXOpen::Point3d & endPoint /** endpoint */ 
                );
                /** Deletes the curve. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : nx_structure_design ("Structure Designer") */
                public: void DeleteCurve
                (
                    NXOpen::Curve * curveTag /** curvetag */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
