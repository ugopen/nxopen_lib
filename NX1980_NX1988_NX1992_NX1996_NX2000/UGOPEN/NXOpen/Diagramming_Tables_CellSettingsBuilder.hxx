#ifndef NXOpen_DIAGRAMMING_TABLES_CELLSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_TABLES_CELLSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_Tables_CellSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_Tables_Types.hxx>
#include <NXOpen/Diagramming_TextStyleBuilder.hxx>
#include <NXOpen/Diagramming_BaseTaggedObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        namespace Tables
        {
            class CellSettingsBuilder;
        }
    }
    namespace Diagramming
    {
        class BaseTaggedObjectBuilder;
    }
    namespace Diagramming
    {
        class TextStyleBuilder;
    }
    class NXColor;
    namespace Diagramming
    {
        namespace Tables
        {
            class _CellSettingsBuilderBuilder;
            class CellSettingsBuilderImpl;
            /**
                    Represents a CellSettingsBuilder.
                     <br> This is a sub-builder class and cannot be directly instantiated  <br> 
             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_DIAGRAMMINGEXPORT  CellSettingsBuilder : public NXOpen::Diagramming::BaseTaggedObjectBuilder
            {
                private: CellSettingsBuilderImpl * m_cellsettingsbuilder_impl;
                private: friend class  _CellSettingsBuilderBuilder;
                protected: CellSettingsBuilder();
                public: ~CellSettingsBuilder();
                /** Gets context text style . 
                 <br>  Created in NX11.0.1.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::TextStyleBuilder * GetContentTextStyle
                (
                );
                /**Returns  the content alignment of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::Tables::ContentAlignment ContentAlignment
                (
                );
                /**Sets  the content alignment of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetContentAlignment
                (
                    NXOpen::Diagramming::Tables::ContentAlignment contentAlignment /** contentalignment */ 
                );
                /**Returns  the overflow behavior of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::Tables::OverflowBehavior OverflowBehavior
                (
                );
                /**Sets  the overflow behavior of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetOverflowBehavior
                (
                    NXOpen::Diagramming::Tables::OverflowBehavior overflowBehavior /** overflowbehavior */ 
                );
                /**Returns  the zero display of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::Tables::ZeroDisplay ZeroDisplay
                (
                );
                /**Sets  the zero display of the cell settings. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetZeroDisplay
                (
                    NXOpen::Diagramming::Tables::ZeroDisplay zeroDisplay /** zerodisplay */ 
                );
                /**Returns  the fill color. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::NXColor * FillColor
                (
                );
                /**Sets  the fill color. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetFillColor
                (
                    NXOpen::NXColor * colorId /** colorid */ 
                );
                /**Returns  the fill opacity. The range of opacity is from 0.0 to 1.0. 0.0 is completely transparent and 1.0 is completely opaque. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: double FillOpacity
                (
                );
                /**Sets  the fill opacity. The range of opacity is from 0.0 to 1.0. 0.0 is completely transparent and 1.0 is completely opaque. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetFillOpacity
                (
                    double opacity /** opacity */ 
                );
                /**Returns  the text direction. The default text direction is 0 for horizontal left-reading text orientation. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Diagramming::Tables::TextDirection TextDirection
                (
                );
                /**Sets  the text direction. The default text direction is 0 for horizontal left-reading text orientation. 
                 <br>  Created in NX1872.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetTextDirection
                (
                    NXOpen::Diagramming::Tables::TextDirection textDirection /** textdirection */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
