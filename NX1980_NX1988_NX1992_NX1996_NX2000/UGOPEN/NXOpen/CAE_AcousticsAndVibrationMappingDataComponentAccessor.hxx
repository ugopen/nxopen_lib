#ifndef NXOpen_CAE_ACOUSTICSANDVIBRATIONMAPPINGDATACOMPONENTACCESSOR_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICSANDVIBRATIONMAPPINGDATACOMPONENTACCESSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticsAndVibrationMappingDataComponentAccessor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticsAndVibrationMappingDataComponentAccessor;
    }
    class NXObject;
    namespace CAE
    {
        class _AcousticsAndVibrationMappingDataComponentAccessorBuilder;
        class AcousticsAndVibrationMappingDataComponentAccessorImpl;
        /**
            Builds a @link NXOpen::CAE::AcousticsAndVibrationMappingDataComponentAccessor NXOpen::CAE::AcousticsAndVibrationMappingDataComponentAccessor@endlink  object
             <br> There is no kf creator for this.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticsAndVibrationMappingDataComponentAccessor : public NXOpen::NXObject
        {
            private: AcousticsAndVibrationMappingDataComponentAccessorImpl * m_acousticsandvibrationmappingdatacomponentaccessor_impl;
            private: friend class  _AcousticsAndVibrationMappingDataComponentAccessorBuilder;
            protected: AcousticsAndVibrationMappingDataComponentAccessor();
            public: ~AcousticsAndVibrationMappingDataComponentAccessor();
            /** Create automatic mapping. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateAutomaticMapping
            (
            );
            /** Create direct mapping with the specified parameters. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateMapping
            (
                const std::vector<int> & excitationNodeValues /** excitationnodevalues */ ,
                const std::vector<int> & responseNodeValues /** responsenodevalues */ ,
                const std::vector<int> & inputNodeValues /** inputnodevalues */ ,
                const std::vector<int> & outputNodeValues /** outputnodevalues */ 
            );
            /** Create indirect mapping with the specified parameters. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateIndirectMapping
            (
                const std::vector<int> & responseNodeValues /** responsenodevalues */ ,
                const std::vector<int> & vibrationNodeValues /** vibrationnodevalues */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
