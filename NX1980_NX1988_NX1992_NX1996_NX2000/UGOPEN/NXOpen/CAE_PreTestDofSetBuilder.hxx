#ifndef NXOpen_CAE_PRETESTDOFSETBUILDER_HXX_INCLUDED
#define NXOpen_CAE_PRETESTDOFSETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PreTestDofSetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PreTestDofSetBuilder;
    }
    class Builder;
    namespace CAE
    {
        class CaeDOFSet;
    }
    namespace CAE
    {
        class FENode;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    namespace CAE
    {
        class _PreTestDofSetBuilderBuilder;
        class PreTestDofSetBuilderImpl;
        /** Represents a @link NXOpen::CAE::PreTestDofSet NXOpen::CAE::PreTestDofSet@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::CAE::PreTestSolutionCollection::CreatePretestDofsetBuilder  NXOpen::CAE::PreTestSolutionCollection::CreatePretestDofsetBuilder @endlink  <br> 
         <br>  Created in NX7.5.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PreTestDofSetBuilder : public NXOpen::Builder
        {
            /** Conflict Resolution rules. */
            public: enum ConflictResolution
            {
                ConflictResolutionApplyFromDofSet/** apply from dof set */ ,
                ConflictResolutionApplyFromSelectedNodes/** apply from selected nodes */ 
            };

            private: PreTestDofSetBuilderImpl * m_pretestdofsetbuilder_impl;
            private: friend class  _PreTestDofSetBuilderBuilder;
            protected: PreTestDofSetBuilder();
            public: ~PreTestDofSetBuilder();
            /**Returns  the referenced @link NXOpen::CAE::CaeDOFSet NXOpen::CAE::CaeDOFSet@endlink  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::CaeDOFSet * DofSetSelect
            (
            );
            /**Sets  the referenced @link NXOpen::CAE::CaeDOFSet NXOpen::CAE::CaeDOFSet@endlink  
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDofSetSelect
            (
                NXOpen::CAE::CaeDOFSet * dofSetSelect /** dofsetselect */ 
            );
            /**Returns  the manual selection toggle value 
             <br>  @deprecated Deprecated in NX1872.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  This functionality is no longer supported.") bool NodesEnabled
            (
            );
            /**Sets  the manual selection toggle value 
             <br>  @deprecated Deprecated in NX1872.0.0.  This functionality is no longer supported. <br>  

             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  This functionality is no longer supported.") void SetNodesEnabled
            (
                bool nodesEnabled /** nodesenabled */ 
            );
            /**Returns  the selected nodes 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::SelectFENodeList * Nodes
            (
            );
            /**Returns  the Use Normal DOF value 
             <br>  @deprecated Deprecated in NX1899.0.0.  Use @link CAE::PreTestDofSetBuilder::GetUseNormalDofs CAE::PreTestDofSetBuilder::GetUseNormalDofs@endlink  instead. <br>  

             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NX_DEPRECATED("Deprecated in NX1899.0.0.  Use CAE::PreTestDofSetBuilder::GetUseNormalDofs instead.") bool UseNormalDof
            (
            );
            /**Sets  the Use Normal DOF value 
             <br>  @deprecated Deprecated in NX1899.0.0.  Use @link CAE::PreTestDofSetBuilder::SetUseNormalDofs CAE::PreTestDofSetBuilder::SetUseNormalDofs@endlink  instead. <br>  

             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NX_DEPRECATED("Deprecated in NX1899.0.0.  Use CAE::PreTestDofSetBuilder::SetUseNormalDofs instead.") void SetUseNormalDof
            (
                bool useNormalDof /** usenormaldof */ 
            );
            /** Gets the UseNormalDof flag values for the specified node 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void GetUseNormalDofs
            (
                std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ ,
                std::vector<bool> & useNormalDofs /** usenormaldofs */ 
            );
            /** Sets the UseNormalDof flag values for the specified node 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetUseNormalDofs
            (
                const std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ ,
                const std::vector<bool> & useNormalDofs /** usenormaldofs */ 
            );
            /**Returns  the Conflict Resolution Rule value 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::PreTestDofSetBuilder::ConflictResolution ConflictResolutionRule
            (
            );
            /**Sets  the Conflict Resolution Rule value 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetConflictResolutionRule
            (
                NXOpen::CAE::PreTestDofSetBuilder::ConflictResolution rule /** rule */ 
            );
            /** Gets the dof mask for the specified node 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void GetDofValues
            (
                std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ ,
                std::vector<int> & dofValues /** dofvalues */ 
            );
            /** Sets the dof mask values for the specified node 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDofValues
            (
                const std::vector<NXOpen::CAE::FENode *> & nodes /** nodes */ ,
                const std::vector<int> & dofValues /** dofvalues */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
