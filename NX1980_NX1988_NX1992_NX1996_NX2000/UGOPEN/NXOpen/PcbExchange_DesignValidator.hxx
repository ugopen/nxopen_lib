#ifndef NXOpen_PCBEXCHANGE_DESIGNVALIDATOR_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_DESIGNVALIDATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_DesignValidator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/PcbExchange_DesignInterference.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class DesignValidator;
    }
    namespace PcbExchange
    {
        class DesignInterference;
    }
    namespace PcbExchange
    {
        class DesignValidatorImpl;
        /** Performs validation of Pcb Exchange design.  <br> Use @link NXOpen::PcbExchange::Manager NXOpen::PcbExchange::Manager@endlink  to get an instance of this class.  <br> 
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  DesignValidator : public NXOpen::TransientObject
        {
            private: DesignValidatorImpl * m_designvalidator_impl;
            /// \cond NX_NO_DOC 
            public: explicit DesignValidator(void *ptr);
            /// \endcond 
            /** Gets the list of interferences. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::PcbExchange::DesignInterference *> GetInterferences
            (
            );
            /**Returns  the number of interferences. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: int InterferenceCount
            (
            );
            /** Performs design analysis. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") */
            public: void PerformAnalysis
            (
            );
            /** Clears the list of interferences and resets the analysis state. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") */
            public: void ResetAnalysis
            (
            );
            /** Exports the list of interferences to a file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: void ExportInterferences
            (
                const NXString & filename /** filename */ 
            );
            /** Exports the list of interferences to a file. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            void ExportInterferences
            (
                const char * filename /** filename */ 
            );
            /** Disposes of this instance. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~DesignValidator();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
