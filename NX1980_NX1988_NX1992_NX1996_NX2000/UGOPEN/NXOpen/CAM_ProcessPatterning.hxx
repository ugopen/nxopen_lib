#ifndef NXOpen_CAM_PROCESSPATTERNING_HXX_INCLUDED
#define NXOpen_CAM_PROCESSPATTERNING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_ProcessPatterning.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_BaseBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class ProcessPatterning;
    }
    namespace CAM
    {
        class BaseBuilder;
    }
    class Direction;
    namespace Features
    {
        class PatternFeature;
    }
    namespace CAM
    {
        class _ProcessPatterningBuilder;
        class ProcessPatterningImpl;
        /** Represets the process patterning builder for process patterning 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  ProcessPatterning : public NXOpen::CAM::BaseBuilder
        {
            /** the process patterning optimization types */
            public: enum OptimizationTypes
            {
                OptimizationTypesClosest/** optimization by closest */,
                OptimizationTypesShortest/** optimization by shortest */,
                OptimizationTypesDirection/** optimization by direction */
            };

            /** the process patterning optimization direction pattern type */
            public: enum DirectionPatternTypes
            {
                DirectionPatternTypesZig/** optimization by direction in zig pattern */,
                DirectionPatternTypesZigzag/** optimization by direction in zigzag pattern */
            };

            private: ProcessPatterningImpl * m_processpatterning_impl;
            private: friend class  _ProcessPatterningBuilder;
            protected: ProcessPatterning();
            public: ~ProcessPatterning();
            /**Returns  the selected pattern feature 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::PatternFeature * Feature
            (
            );
            /**Sets  the selected pattern feature 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFeature
            (
                NXOpen::Features::PatternFeature * feature /** the pattern feature */
            );
            /**Returns  the pattern mcs 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool PatternMcs
            (
            );
            /**Sets  the pattern mcs 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPatternMcs
            (
                bool patternMcs /** patternmcs */ 
            );
            /**Returns  the output for subroutines 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: bool OutputForSubroutines
            (
            );
            /**Sets  the output for subroutines 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOutputForSubroutines
            (
                bool outputForSubroutines /** outputforsubroutines */ 
            );

            /// \cond NX_NO_DOC 
            /**Returns  the optimization type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ProcessPatterning::OptimizationTypes OptimizationType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the optimization type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetOptimizationType
            (
                NXOpen::CAM::ProcessPatterning::OptimizationTypes optimizationType /** optimizationtype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the direction pattern type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::ProcessPatterning::DirectionPatternTypes DirectionPatternType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the direction pattern type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDirectionPatternType
            (
                NXOpen::CAM::ProcessPatterning::DirectionPatternTypes patternType /** patterntype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the direction vector 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * DirectionVector
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the direction vector 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetDirectionVector
            (
                NXOpen::Direction * csys /**the direction vector */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Reorder the sequence of pattern instances 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void Reorder
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Reverse the sequence of pattern instances 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void Reverse
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Reload the sequence of pattern instances 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void Reload
            (
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
