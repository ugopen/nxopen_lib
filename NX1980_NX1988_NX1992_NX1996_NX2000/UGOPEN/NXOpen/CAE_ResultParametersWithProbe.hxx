#ifndef NXOpen_CAE_RESULTPARAMETERSWITHPROBE_HXX_INCLUDED
#define NXOpen_CAE_RESULTPARAMETERSWITHPROBE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResultParametersWithProbe.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Result.hxx>
#include <NXOpen/CAE_SignalProcessingPlotData.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ResultParametersWithProbe;
    }
    namespace CAE
    {
        class BaseIteration;
    }
    namespace CAE
    {
        class BaseLoadcase;
    }
    namespace CAE
    {
        class ResultProbe;
    }
    class Unit;
    namespace CAE
    {
        class _ResultParametersWithProbeBuilder;
        class ResultParametersWithProbeImpl;
        /** 
             <br> To obtain an instance of this class use @link Session::ResultManager Session::ResultManager@endlink .  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ResultParametersWithProbe : public NXOpen::TaggedObject
        {
            private: ResultParametersWithProbeImpl * m_resultparameterswithprobe_impl;
            private: friend class  _ResultParametersWithProbeBuilder;
            protected: ResultParametersWithProbe();
            public: ~ResultParametersWithProbe();
            /** Ask Result Probe   @return   
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::ResultProbe * GetResultProbe
            (
            );
            /** Ask current loadcase   @return   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::BaseLoadcase * GetCurrentLoadcase
            (
            );
            /** Set current loadcase  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCurrentLoadcase
            (
                NXOpen::CAE::BaseLoadcase * loadcase /** loadcase */ 
            );
            /** Ask current iteration   @return   
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::BaseIteration * GetCurrentIteration
            (
            );
            /** Set current iteration  
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCurrentIteration
            (
                NXOpen::CAE::BaseIteration * iteration /** iteration */ 
            );
            /** Ask result unit  @return   
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Unit * GetUnit
            (
            );
            /** Set result unit 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetUnit
            (
                NXOpen::Unit * unit /** unit */ 
            );
            /** Ask interpolated iteration value  @return   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetIterationValue
            (
            );
            /** Set interpolated iteration value 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetIterationValue
            (
                double value /** value */ 
            );
            /** Ask if Probe is showing interpolated result  @return   
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetInterpolated
            (
            );
            /** Set interpolated 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetInterpolated
            (
                bool value /** value */ 
            );
            /** Ask result probe complex option  @return   
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::Complex GetComplexType
            (
            );
            /** Set result probe complex option 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetComplexType
            (
                NXOpen::CAE::Result::Complex complexType /** complextype */ 
            );
            /** Ask result probe complex option  @return   
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetPhaseAngle
            (
            );
            /** Set result probe complex option 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetPhaseAngle
            (
                double value /** value */ 
            );
            /** Ask whether dB Scaling is on or not  @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetDBScaling
            (
            );
            /** Set the dB Scaling on or off 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDBScaling
            (
                bool dBscaling /** dbscaling */ 
            );
            /** Ask the dB Reference value  @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetDBreference
            (
            );
            /** Set the dB Reference value
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDBReference
            (
                double dBreference /** dbreference */ 
            );
            /** Ask the dB Scale value @return  
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::Result::DbScale GetDBFormat
            (
            );
            /** Set the dB Scale value
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDBFormat
            (
                NXOpen::CAE::Result::DbScale dbScale /** db scale */ 
            );
            /** Set the acoustic spectrum scaling option.
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSpectrumScaling
            (
                NXOpen::CAE::SignalProcessingPlotData::ScalingType scaling /** scaling */ 
            );
            /** Get the acoustic spectrum scaling option  @return   
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SignalProcessingPlotData::ScalingType GetSpectrumScaling
            (
            );
            /** Set the acoustic weighting.
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAcousticWeighting
            (
                NXOpen::CAE::SignalProcessingPlotData::AcousticalWeighting weighting /** weighting */ 
            );
            /** Get the acoustic weighting  @return   
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SignalProcessingPlotData::AcousticalWeighting GetAcousticWeighting
            (
            );
            /** Ask load case value  @return   
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: double GetLcaseValue
            (
            );
            /** Set load case value 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetLcaseValue
            (
                double value /** value */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
