#ifndef NXOpen_CAE_AEROSTRUCTURES_MARGINRESULTTABLEROW_HXX_INCLUDED
#define NXOpen_CAE_AEROSTRUCTURES_MARGINRESULTTABLEROW_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AeroStructures_MarginResultTableRow.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AeroStructures_MarginCalculation.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableRow;
        }
    }
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginCalculation;
        }
    }
    class Unit;
    namespace CAE
    {
        namespace AeroStructures
        {
            class MarginResultTableRowImpl;
            /**  @brief  MarginResultTableRow represents one row in a result table and is returned by a query iterator  

              
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MarginResultTableRow : public NXOpen::TransientObject
            {
                private: MarginResultTableRowImpl * m_marginresulttablerow_impl;
                /// \cond NX_NO_DOC 
                public: explicit MarginResultTableRow(void *ptr);
                /// \endcond 
                /** Dispose 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~MarginResultTableRow();
                /**Returns  the calculation name for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString CalculationName
                (
                );
                /**Returns  the calculation object for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::CAE::AeroStructures::MarginCalculation * Calculation
                (
                );
                /**Returns  the failure mode name for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString FailureModeName
                (
                );
                /**Returns  the load case name for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString LoadCaseName
                (
                );
                /**Returns  the fem solution name for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString FemSolutionName
                (
                );
                /**Returns  the method name implementing the calculation for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString MethodName
                (
                );
                /**Returns  the margin of safety for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double MarginOfSafety
                (
                );
                /**Returns  the reserve factor for this row 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double ReserveFactor
                (
                );
                /**Returns  the global rank for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GlobalRank
                (
                );
                /**Returns  the rank by calculation for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int RankByCalculation
                (
                );
                /**Returns  the rank by failure_mode for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int RankByFailureMode
                (
                );
                /**Returns  the rank by load case for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int RankByLoadCase
                (
                );
                /** Get the value of an integer input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetInputIntegerValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of an integer input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetInputIntegerValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetInputScalarValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a scalar input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetInputScalarValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the unit of a scalar input parameter for this row  @return  the unit of the value returned by @link CAE::AeroStructures::MarginResultTableRow::GetInputScalarValue CAE::AeroStructures::MarginResultTableRow::GetInputScalarValue@endlink 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetInputScalarUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit of a scalar input parameter for this row  @return  the unit of the value returned by @link CAE::AeroStructures::MarginResultTableRow::GetInputScalarValue CAE::AeroStructures::MarginResultTableRow::GetInputScalarValue@endlink 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetInputScalarUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the measure of a scalar input parameter for this row. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetInputScalarMeasure
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the measure of a scalar input parameter for this row. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetInputScalarMeasure
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the aggregated or non aggregated load values of an input parameter for this row.
                                    If the load values were aggregated, the output will be an array with only one value.
                                    If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: std::vector<double> GetInputLoad
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the aggregated or non aggregated load values of an input parameter for this row.
                                    If the load values were aggregated, the output will be an array with only one value.
                                    If the values were not aggregated, the output will be an array with one value per element or node. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                std::vector<double> GetInputLoad
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetInputStringValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a string input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetInputStringValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetInputBooleanValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a boolean input parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                bool GetInputBooleanValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of an integer output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: int GetOutputIntegerValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of an integer output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                int GetOutputIntegerValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a scalar output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: double GetOutputScalarValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a scalar output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                double GetOutputScalarValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the unit of a scalar output parameter for this row.
                                An exception(code "3520027") will be thrown if no unit can be found with the given parameter.
                                An exception(code "3520046") will be thrown if the unit measure of the given parameter is Unitless,
                                this API returns NULL as well.
                                 @return  the unit of the value returned by @link CAE::AeroStructures::MarginResultTableRow::GetOutputScalarValue CAE::AeroStructures::MarginResultTableRow::GetOutputScalarValue@endlink 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXOpen::Unit * GetOutputScalarUnit
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the unit of a scalar output parameter for this row.
                                An exception(code "3520027") will be thrown if no unit can be found with the given parameter.
                                An exception(code "3520046") will be thrown if the unit measure of the given parameter is Unitless,
                                this API returns NULL as well.
                                 @return  the unit of the value returned by @link CAE::AeroStructures::MarginResultTableRow::GetOutputScalarValue CAE::AeroStructures::MarginResultTableRow::GetOutputScalarValue@endlink 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXOpen::Unit * GetOutputScalarUnit
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the measure of a scalar output parameter for this row. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetOutputScalarMeasure
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the measure of a scalar output parameter for this row. 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetOutputScalarMeasure
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a string output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: NXString GetOutputStringValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a string output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                NXString GetOutputStringValue
                (
                    const char * parameterName /** parametername */ 
                );
                /** Get the value of a boolean output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                public: bool GetOutputBooleanValue
                (
                    const NXString & parameterName /** parametername */ 
                );
                /** Get the value of a boolean output parameter for this row 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : sc_margin_safety ("Simcenter Margin Of Safety") */
                bool GetOutputBooleanValue
                (
                    const char * parameterName /** parametername */ 
                );
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
