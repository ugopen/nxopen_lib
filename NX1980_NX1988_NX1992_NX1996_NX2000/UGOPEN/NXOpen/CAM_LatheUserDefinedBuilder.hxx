#ifndef NXOpen_CAM_LATHEUSERDEFINEDBUILDER_HXX_INCLUDED
#define NXOpen_CAM_LATHEUSERDEFINEDBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_LatheUserDefinedBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_UserDefinedOprBuilder.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class LatheUserDefinedBuilder;
    }
    namespace CAM
    {
        class InheritableDoubleBuilder;
    }
    namespace CAM
    {
        class UserDefinedOprBuilder;
    }
    namespace CAM
    {
        class _LatheUserDefinedBuilderBuilder;
        class LatheUserDefinedBuilderImpl;
        /** Represents a LatheUserDefined Builder  <br> To create a new instance of this class, use @link NXOpen::CAM::OperationCollection::CreateLatheUserDefinedBuilder  NXOpen::CAM::OperationCollection::CreateLatheUserDefinedBuilder @endlink  <br> 
         <br>  Created in NX5.0.0.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  LatheUserDefinedBuilder : public NXOpen::CAM::UserDefinedOprBuilder
        {
            /** available types for tracking point */
            public: enum TrackingPointType
            {
                TrackingPointTypeFixed/** fixed */,
                TrackingPointTypeRotate/** rotate with holder */
            };

            private: LatheUserDefinedBuilderImpl * m_latheuserdefinedbuilder_impl;
            private: friend class  _LatheUserDefinedBuilderBuilder;
            protected: LatheUserDefinedBuilder();
            public: ~LatheUserDefinedBuilder();
            /**Returns  the Flip Tool Around Holder toggle
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: bool FlipToolAroundHolder
            (
            );
            /**Sets  the Flip Tool Around Holder toggle
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetFlipToolAroundHolder
            (
                bool machAAxis /** the machine's A-axis */
            );
            /**Returns  the Reorient Tool Holder toggle 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: bool ReorientToolHolder
            (
            );
            /**Sets  the Reorient Tool Holder toggle 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetReorientToolHolder
            (
                bool reorient /** Reorient Tool Holder */
            );
            /**Returns  the Tool Holder Angle
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::InheritableDoubleBuilder * ToolHolderAngle
            (
            );
            /**Returns  the Rotate Tracking Point toggle 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: bool RotateTrackingPoint
            (
            );
            /**Sets  the Rotate Tracking Point toggle 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetRotateTrackingPoint
            (
                bool rotate /** Rotate Tracking Point */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
