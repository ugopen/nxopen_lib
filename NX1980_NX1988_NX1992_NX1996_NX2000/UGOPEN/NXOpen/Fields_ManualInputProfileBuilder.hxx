#ifndef NXOpen_FIELDS_MANUALINPUTPROFILEBUILDER_HXX_INCLUDED
#define NXOpen_FIELDS_MANUALINPUTPROFILEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Fields_ManualInputProfileBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Fields_ProfileSolverOptionsBuilder.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_fields_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Fields
    {
        class ManualInputProfileBuilder;
    }
    class Expression;
    namespace Fields
    {
        class ProfileSolverOptionsBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Unit;
    namespace Fields
    {
        class _ManualInputProfileBuilderBuilder;
        class ManualInputProfileBuilderImpl;
        /**  @brief 
                    Represents a builder class for creating and editing an @link NXOpen::Fields::Field NXOpen::Fields::Field@endlink 
                    that is defined by manual input data.
                 

         
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_FIELDSEXPORT  ManualInputProfileBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /**  @brief 
                        the interpolation method used for the profile
                     

              */
            public: enum Interpolation
            {
                InterpolationLinear/** Linear */,
                InterpolationAkima/** Akima */,
                InterpolationAkima72/** Akima72 */,
                InterpolationCubic/** Cubic */
            };

            /**  @brief 
                        the extrapolation method used for the profile
                     

              */
            public: enum Extrapolation
            {
                ExtrapolationLinear/** Linear */,
                ExtrapolationParabolic/** Parabolic */
            };

            /**  @brief 
                        Defines if the profile is repeating cyclically in any direction.
                     

             
                    
                        This is overriding extrapolation, if not set to
                        @link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink .
                    */
            public: enum CyclicType
            {
                CyclicTypeNone/** not cyclic */,
                CyclicTypeXOnly/** cyclic in x direction */
            };

            private: ManualInputProfileBuilderImpl * m_manualinputprofilebuilder_impl;
            private: friend class  _ManualInputProfileBuilderBuilder;
            protected: ManualInputProfileBuilder();
            public: ~ManualInputProfileBuilder();
            /**Returns   @brief the unit type corresponding to the x axis. 

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * XUnitType
            (
            );
            /**Sets   @brief the unit type corresponding to the x axis. 

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetXUnitType
            (
                NXOpen::Unit * unitType /** unittype */ 
            );
            /**Returns   @brief 
                        the offset on the x axis.
                     

             
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XOffset
            (
            );
            /**Returns   @brief 
                        the scale on the x axis.
                     

             
                    The scale is unitless.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * XScale
            (
            );
            /**Returns   @brief the unit type corresponding to the ordinate axis. 

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * OrdinateUnitType
            (
            );
            /**Sets   @brief the unit type corresponding to the ordinate axis. 

              
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrdinateUnitType
            (
                NXOpen::Unit * unitType /** unittype */ 
            );
            /**Returns   @brief 
                        the offset on the ordinate axis.
                     

             
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OrdinateOffset
            (
            );
            /**Returns   @brief 
                        the scale on the ordinate axis.
                     

             
                    The scale is unitless.
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * OrdinateScale
            (
            );
            /**  @brief 
                        Sets the data point values.
                     

             
                    
                        The data points are listed as double values row after row.
                        e.g. 3 Curve points (1, 3.4), (2.5, 6.7), (4.25, -3.1)
                        appear as 1, 3.4, 2.5, 6.7, 4.25, -3.1
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDataPointValues
            (
                const std::vector<double> & dataPoints /** datapoints */ 
            );
            /**  @brief 
                        Sets the data point expressions.
                     

             
                    
                        Some or all data points can be overridden by expressions.
                        The cell ids for the cells to be defined by an expression need to be given in the form: row * numColumns + column.
                        For 2D curves numColumn = 2.
                        The expression is defined in a string. e.g. "1+2" or "3[m]"
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDataPointExpressions
            (
                const std::vector<int> & dataPointCellIds /** datapointcellids */ ,
                std::vector<NXString> & dataPointExpressions /** datapointexpressions */ 
            );
            /**Returns   @brief the solver options. 

             
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::ProfileSolverOptionsBuilder * SolverOptions
            (
            );
            /**Returns   @brief 
                        the interpolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationLinear NXOpen::Fields::ManualInputProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima72 NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationCubic NXOpen::Fields::ManualInputProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::XInterpolation NXOpen::Fields::ProfileSolverOptionsBuilder::XInterpolation@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::XInterpolation instead.") NXOpen::Fields::ManualInputProfileBuilder::Interpolation XInterpolation
            (
            );
            /**Sets   @brief 
                        the interpolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationLinear NXOpen::Fields::ManualInputProfileBuilder::InterpolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima72 NXOpen::Fields::ManualInputProfileBuilder::InterpolationAkima72@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::InterpolationCubic NXOpen::Fields::ManualInputProfileBuilder::InterpolationCubic@endlink </li>
                        </ul>
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::SetXInterpolation NXOpen::Fields::ProfileSolverOptionsBuilder::SetXInterpolation@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::SetXInterpolation instead.") void SetXInterpolation
            (
                NXOpen::Fields::ManualInputProfileBuilder::Interpolation interpolation /** interpolation */ 
            );
            /**Returns   @brief 
                        the extrapolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationLinear NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationParabolic@endlink </li>
                        </ul>
                         <br> 
                            This is only used when @link NXOpen::Fields::ManualInputProfileBuilder::CyclicType NXOpen::Fields::ManualInputProfileBuilder::CyclicType@endlink 
                            is set to @link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink 
                         <br> 
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::XExtrapolation NXOpen::Fields::ProfileSolverOptionsBuilder::XExtrapolation@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::XExtrapolation instead.") NXOpen::Fields::ManualInputProfileBuilder::Extrapolation XExtrapolation
            (
            );
            /**Sets   @brief 
                        the extrapolation in x direction.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationLinear NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationLinear@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationParabolic NXOpen::Fields::ManualInputProfileBuilder::ExtrapolationParabolic@endlink </li>
                        </ul>
                         <br> 
                            This is only used when @link NXOpen::Fields::ManualInputProfileBuilder::CyclicType NXOpen::Fields::ManualInputProfileBuilder::CyclicType@endlink 
                            is set to @link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink 
                         <br> 
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::SetXExtrapolation NXOpen::Fields::ProfileSolverOptionsBuilder::SetXExtrapolation@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::SetXExtrapolation instead.") void SetXExtrapolation
            (
                NXOpen::Fields::ManualInputProfileBuilder::Extrapolation extrapolation /** extrapolation */ 
            );
            /**Returns   @brief 
                        the cyclic type.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeXOnly@endlink </li>
                        </ul>
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::Cyclic NXOpen::Fields::ProfileSolverOptionsBuilder::Cyclic@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::Cyclic instead.") NXOpen::Fields::ManualInputProfileBuilder::CyclicType Cyclic
            (
            );
            /**Sets   @brief 
                        the cyclic type.
                     

             
                    
                        <ul>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink </li>
                          <li>@link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeXOnly NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeXOnly@endlink </li>
                        </ul>
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclic NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclic@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::SetCyclic instead.") void SetCyclic
            (
                NXOpen::Fields::ManualInputProfileBuilder::CyclicType cyclicType /** cyclictype */ 
            );
            /**Returns   @brief 
                        the left slope.
                     

             
                    
                        This is only used when @link NXOpen::Fields::ManualInputProfileBuilder::CyclicType NXOpen::Fields::ManualInputProfileBuilder::CyclicType@endlink 
                        is set to @link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink 
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeLeft NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeLeft@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeLeft instead.") NXOpen::Expression * SlopeLeft
            (
            );
            /**Returns   @brief 
                        the right slope.
                     

             
                    
                        This is only used when @link NXOpen::Fields::ManualInputProfileBuilder::CyclicType NXOpen::Fields::ManualInputProfileBuilder::CyclicType@endlink 
                        is set to @link NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone NXOpen::Fields::ManualInputProfileBuilder::CyclicTypeNone@endlink 
                    
             <br>  @deprecated Deprecated in NX1953.0.0.  Use @link NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeRight NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeRight@endlink  instead. <br>  

             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1953.0.0.  Use NXOpen::Fields::ProfileSolverOptionsBuilder::SlopeRight instead.") NXOpen::Expression * SlopeRight
            (
            );
            /**  @brief 
                        If the measures are marked as fixed and they are changed, the validation at commit will detect an error and fail.
                     

             
                    
                        It is recommended to call this method when editing a profile that is referenced by another object,
                        which depends on specific measures.
                    
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetMeasuresFixed
            (
                bool areMeasuresFixed /** true, if changed measures should prevent a commit */
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
