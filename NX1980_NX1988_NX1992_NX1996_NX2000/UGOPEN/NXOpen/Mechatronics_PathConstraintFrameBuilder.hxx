#ifndef NXOpen_MECHATRONICS_PATHCONSTRAINTFRAMEBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_PATHCONSTRAINTFRAMEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_PathConstraintFrameBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class PathConstraintFrameBuilder;
    }
    class CoordinateSystem;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class NXObject;
    namespace Mechatronics
    {
        class _PathConstraintFrameBuilderBuilder;
        class PathConstraintFrameBuilderImpl;
        /** Represents a frame that constrains the orientation along the path curve.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::PathConstraintJointBuilder::NewPathFrame  NXOpen::Mechatronics::PathConstraintJointBuilder::NewPathFrame @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  PathConstraintFrameBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** the curve types */
            public: enum CurveTypes
            {
                CurveTypesLine/** line */,
                CurveTypesSpline/** spline */
            };

            private: PathConstraintFrameBuilderImpl * m_pathconstraintframebuilder_impl;
            private: friend class  _PathConstraintFrameBuilderBuilder;
            protected: PathConstraintFrameBuilder();
            public: ~PathConstraintFrameBuilder();
            /**Returns  the path frame. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::CoordinateSystem * PathFrame
            (
            );
            /**Sets  the path frame. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPathFrame
            (
                NXOpen::CoordinateSystem * pathFrame /** pathframe */ 
            );
            /**Returns  the curve type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::PathConstraintFrameBuilder::CurveTypes CurveType
            (
            );
            /**Sets  the curve type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetCurveType
            (
                NXOpen::Mechatronics::PathConstraintFrameBuilder::CurveTypes curveType /** curvetype */ 
            );
            /**Returns  the path parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: double PathParameter
            (
            );
            /**Sets  the path parameter. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetPathParameter
            (
                double pathParameter /** pathparameter */ 
            );
            /**Returns  the associated curve. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::NXObject * AssociatedCurve
            (
            );
            /**Sets  the associated curve. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAssociatedCurve
            (
                NXOpen::NXObject * curve /** curve */ 
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
