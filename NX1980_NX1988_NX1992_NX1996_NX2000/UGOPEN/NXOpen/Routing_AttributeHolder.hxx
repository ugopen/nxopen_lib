#ifndef NXOpen_ROUTING_ATTRIBUTEHOLDER_HXX_INCLUDED
#define NXOpen_ROUTING_ATTRIBUTEHOLDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Routing_AttributeHolder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_routing_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Routing
    {
        class AttributeHolder;
    }
    class NXObject;
    namespace Routing
    {
        class _AttributeHolderBuilder;
        class AttributeHolderImpl;
        /**
            Represents a @link NXOpen::Routing::AttributeHolder NXOpen::Routing::AttributeHolder@endlink 
             <br> Use @link Routing::RouteManager::CreateAttributeHolder Routing::RouteManager::CreateAttributeHolder@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_ROUTINGEXPORT  AttributeHolder : public NXOpen::NXObject
        {
            private: AttributeHolderImpl * m_attributeholder_impl;
            private: friend class  _AttributeHolderBuilder;
            protected: AttributeHolder();
            public: ~AttributeHolder();
            /** Sets the Template Attributes to this object 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetAttributes
            (
            );
            /** Copies the Template Attributes of this object to a Routing Object 
             <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::Routing::AttributeHolder::CopyAttributesToObject2 NXOpen::Routing::AttributeHolder::CopyAttributesToObject2@endlink  instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::Routing::AttributeHolder::CopyAttributesToObject2 instead.") void CopyAttributesToObject
            (
                NXOpen::NXObject * object /** object */ 
            );
            /** Copies the Template Attributes of this object to a Routing Component.
                        Use this method to properly handle the journaling of copying attributes. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void CopyAttributesToObject2
            (
                NXOpen::NXObject * nxobject /** nxobject */ 
            );
            /** Sets the function type for which Template Attributes to be applied 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void SetFunctionType
            (
                const NXString & functionType /** function for which attribute holder is created Example: PlacePart */
            );
            /** Sets the function type for which Template Attributes to be applied 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            void SetFunctionType
            (
                const char * functionType /** function for which attribute holder is created Example: PlacePart */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
