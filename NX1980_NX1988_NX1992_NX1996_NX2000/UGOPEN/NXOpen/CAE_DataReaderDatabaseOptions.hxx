#ifndef NXOpen_CAE_DATAREADERDATABASEOPTIONS_HXX_INCLUDED
#define NXOpen_CAE_DATAREADERDATABASEOPTIONS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DataReaderDatabaseOptions.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DataReaderDatabaseOptions;
    }
    namespace CAE
    {
        class DataReaderOptionCollection;
    }
    namespace CAE
    {
        class _DataReaderDatabaseOptionsBuilder;
        class DataReaderDatabaseOptionsImpl;
        /**  @brief  Exposes the options that can be set when opening a database. All options inherit
            from @link NXOpen::CAE::DataReaderOptionBase NXOpen::CAE::DataReaderOptionBase@endlink  and can be cast to their proper type

             

          <br>   <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DataReaderDatabaseOptions : public NXOpen::TaggedObject
        {
            /** This enum defines the available option types */
            public: enum OptionType
            {
                OptionTypeInt/** Int option. Cast to @link NXOpen::CAE::DataReaderOptionInt NXOpen::CAE::DataReaderOptionInt@endlink  */,
                OptionTypeDouble/** Double option. Cast to @link NXOpen::CAE::DataReaderOptionDouble NXOpen::CAE::DataReaderOptionDouble@endlink  */,
                OptionTypeString/** String option. Cast to @link NXOpen::CAE::DataReaderOptionString NXOpen::CAE::DataReaderOptionString@endlink  */,
                OptionTypeEnum/** Enum option. Cast to @link NXOpen::CAE::DataReaderOptionEnum NXOpen::CAE::DataReaderOptionEnum@endlink  */,
                OptionTypeUnit/** Unit option. Cast to @link NXOpen::CAE::DataReaderOptionUnit NXOpen::CAE::DataReaderOptionUnit@endlink  */,
                OptionTypeUnknown/** Unknown option type */
            };

            private: DataReaderDatabaseOptionsImpl * m_datareaderdatabaseoptions_impl;
            private: friend class  _DataReaderDatabaseOptionsBuilder;
            protected: DataReaderDatabaseOptions();
            public: ~DataReaderDatabaseOptions();


            /** Contains a @link NXOpen::CAE::DataReaderOptionCollection NXOpen::CAE::DataReaderOptionCollection@endlink 
                    
             <br>  Created in NX1847.0.0.  <br>  
            */
            public: NXOpen::CAE::DataReaderOptionCollection *OptionCollection();
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
