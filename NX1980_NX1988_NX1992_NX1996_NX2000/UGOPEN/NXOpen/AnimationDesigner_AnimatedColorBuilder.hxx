#ifndef NXOpen_ANIMATIONDESIGNER_ANIMATEDCOLORBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_ANIMATEDCOLORBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_AnimatedColorBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class AnimatedColorBuilder;
    }
    class Builder;
    class NXColor;
    class SelectNXObjectList;
    namespace AnimationDesigner
    {
        class _AnimatedColorBuilderBuilder;
        class AnimatedColorBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::AnimatedColorBuilder NXOpen::AnimationDesigner::AnimatedColorBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::AnimatedColorCollection::CreateAnimatedColorBuilder  NXOpen::AnimationDesigner::AnimatedColorCollection::CreateAnimatedColorBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CreationType </term> <description> 
         
        CreateaSingleAnimatedColorEffect </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  AnimatedColorBuilder : public NXOpen::Builder
        {
            /** the enumeration types. */
            public: enum CreationTypes
            {
                CreationTypesCreateaSingleAnimatedColorEffect/** createa single animated color effect */ ,
                CreationTypesCreateanAnimatedColorEffectperObject/** createan animated color effectper object */ 
            };

            private: AnimatedColorBuilderImpl * m_animatedcolorbuilder_impl;
            private: friend class  _AnimatedColorBuilderBuilder;
            protected: AnimatedColorBuilder();
            public: ~AnimatedColorBuilder();
            /**Returns  the select object 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::SelectNXObjectList * SelectObject
            (
            );
            /**Returns  the creation type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::AnimationDesigner::AnimatedColorBuilder::CreationTypes CreationType
            (
            );
            /**Sets  the creation type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetCreationType
            (
                NXOpen::AnimationDesigner::AnimatedColorBuilder::CreationTypes creationType /** creationtype */ 
            );
            /** Creates a new bar. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void CreateBar
            (
                int index /** index */ 
            );
            /** Deletes the bars. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void DeleteBars
            (
                const std::vector<int> & bars /** bars */ 
            );
            /**Returns  the color. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::NXColor * Color
            (
            );
            /**Sets  the color. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetColor
            (
                NXOpen::NXColor * color /** color */ 
            );
            /** Sets the bar start . 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarStartColor
            (
                int index /** index */ ,
                NXOpen::NXColor * color /** color */ 
            );
            /** Sets the bar end color. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarEndColor
            (
                int index /** index */ ,
                NXOpen::NXColor * color /** color */ 
            );
            /**Returns  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
            /** Sets the bar name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarName
            (
                int index /** index */ ,
                const NXString & name /** name */ 
            );
            /** Sets the bar name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            void SetBarName
            (
                int index /** index */ ,
                const char * name /** name */ 
            );
            /** Sets the bar start time. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarStartTime
            (
                int index /** index */ ,
                double startTime /** start time */ 
            );
            /** Sets the bar end time. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetBarEndTime
            (
                int index /** index */ ,
                double endTime /** end time */ 
            );
            /** Mirrors the bars. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void MirrorBars
            (
                const std::vector<int> & bars /** bars */ ,
                double mirrorTime /** mirror time */ 
            );
            /** Splits the bar with the split time. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SplitBar
            (
                int index /** index */ ,
                double splitTime /** split time */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
