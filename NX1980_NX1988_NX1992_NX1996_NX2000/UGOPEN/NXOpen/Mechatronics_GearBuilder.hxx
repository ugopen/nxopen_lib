#ifndef NXOpen_MECHATRONICS_GEARBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GEARBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GearBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_CouplingBuilder.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GearBuilder;
    }
    class Expression;
    namespace Mechatronics
    {
        class CouplingBuilder;
    }
    namespace Mechatronics
    {
        class _GearBuilderBuilder;
        class GearBuilderImpl;
        /** Represents a @link NXOpen::Mechatronics::Gear NXOpen::Mechatronics::Gear@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Mechatronics::GearCollection::CreateGearBuilder  NXOpen::Mechatronics::GearCollection::CreateGearBuilder @endlink  <br> 
         <br>  Created in NX7.5.1.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GearBuilder : public NXOpen::Mechatronics::CouplingBuilder
        {
            /** the axis joint types. */
            public: enum AxisJointType
            {
                AxisJointTypeLinear/** Linear */,
                AxisJointTypeAngular/** Angular */
            };

            private: GearBuilderImpl * m_gearbuilder_impl;
            private: friend class  _GearBuilderBuilder;
            protected: GearBuilder();
            public: ~GearBuilder();
            /**Returns  the axis joint type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::GearBuilder::AxisJointType AxisType
            (
            );
            /**Sets  the axis joint type. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAxisType
            (
                NXOpen::Mechatronics::GearBuilder::AxisJointType axisType /** axistype */ 
            );
            /**Returns  the master multiple. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: double MasterMultiple
            (
            );
            /**Sets  the master multiple. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetMasterMultiple
            (
                double masterMultiple /** mastermultiple */ 
            );
            /**Returns  the slave multiple. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: double SlaveMultiple
            (
            );
            /**Sets  the slave multiple. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetSlaveMultiple
            (
                double slaveMultiple /** slavemultiple */ 
            );
            /**Returns  the master multiple expression. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * ExpressionMasterMultiple
            (
            );
            /**Returns  the slave multiple expression. 
             <br>  Created in NX7.5.1.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * ExpressionSlaveMultiple
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
