#ifndef NXOpen_CAE_NOTEPREFERENCESBUILDER_HXX_INCLUDED
#define NXOpen_CAE_NOTEPREFERENCESBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NotePreferencesBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NotePreferencesBuilder;
    }
    class Builder;
    namespace CAE
    {
        class _NotePreferencesBuilderBuilder;
        class NotePreferencesBuilderImpl;
        /**
            Represents a @link NXOpen::CAE::NotePreferencesBuilder NXOpen::CAE::NotePreferencesBuilder@endlink 
             <br> To create a new instance of this class, use @link NXOpen::CAE::NoteManager::CreateNotePreferencesBuilder  NXOpen::CAE::NoteManager::CreateNotePreferencesBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NotePreferencesBuilder : public NXOpen::Builder
        {
            private: NotePreferencesBuilderImpl * m_notepreferencesbuilder_impl;
            private: friend class  _NotePreferencesBuilderBuilder;
            protected: NotePreferencesBuilder();
            public: ~NotePreferencesBuilder();
            /**Returns  the CAE note text justification 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int TextJustification
            (
            );
            /**Sets  the CAE note text justification 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextJustification
            (
                int textJustification /** textjustification */ 
            );
            /**Returns  the CAE note text color 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int TextColor
            (
            );
            /**Sets  the CAE note text color 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextColor
            (
                int textColor /** textcolor */ 
            );
            /**Returns  the CAE note text font 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int TextFont
            (
            );
            /**Sets  the CAE note text font 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextFont
            (
                int textFont /** textfont */ 
            );
            /**Returns  the CAE note text width 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double TextWidth
            (
            );
            /**Sets  the CAE note text width 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextWidth
            (
                double textWidth /** textwidth */ 
            );
            /**Returns  the CAE note text height 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double TextHeight
            (
            );
            /**Sets  the CAE note text height 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextHeight
            (
                double textHeight /** textheight */ 
            );
            /**Returns  the CAE note font gap factor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double FontGapFactor
            (
            );
            /**Sets  the CAE note font gap factor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFontGapFactor
            (
                double fontGapFactor /** fontgapfactor */ 
            );
            /**Returns  the CAE note text aspect ratio 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double TextAspectRatio
            (
            );
            /**Sets  the CAE note text aspect ratio 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetTextAspectRatio
            (
                double textAspectRatio /** textaspectratio */ 
            );
            /**Returns  the CAE note line gap factor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double LineGapFactor
            (
            );
            /**Sets  the CAE note line gap factor 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLineGapFactor
            (
                double lineGapFactor /** linegapfactor */ 
            );
            /**Returns  the CAE note lettering angle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: double LetteringAngle
            (
            );
            /**Sets  the CAE note lettering angle 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLetteringAngle
            (
                double letteringAngle /** letteringangle */ 
            );
            /**Returns  the CAE note parallel to screen option 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ParallelToScreen
            (
            );
            /**Sets  the CAE note parallel to screen option 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetParallelToScreen
            (
                bool isParallelToScreen /** isparalleltoscreen */ 
            );
            /**Returns  the CAE note lock size and position option 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool LockSizeAndPosition
            (
            );
            /**Sets  the CAE note lock size and position option 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetLockSizeAndPosition
            (
                bool isLockSizeAndPos /** islocksizeandpos */ 
            );
            /**Returns  the CAE note background fill option 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableBackground
            (
            );
            /**Sets  the CAE note background fill option 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEnableBackground
            (
                bool enableBackground /** enablebackground */ 
            );
            /**Returns  the CAE note background fill color 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int BackgroundColor
            (
            );
            /**Sets  the CAE note background fill color 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetBackgroundColor
            (
                int backgroundColor /** backgroundcolor */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
