#ifndef NXOpen_CAE_AFUMATHFASTRMSOUTPUT_HXX_INCLUDED
#define NXOpen_CAE_AFUMATHFASTRMSOUTPUT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AfuMathFastRMSOutput.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AfuMathFastRMSOutput;
    }
    namespace CAE
    {
        class AfuMathFastRMSOutputImpl;
        /**  @brief  Represents the Fast RMS output information  

          
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AfuMathFastRMSOutput : public NXOpen::TransientObject
        {
            private: AfuMathFastRMSOutputImpl * m_afumathfastrmsoutput_impl;
            /// \cond NX_NO_DOC 
            public: explicit AfuMathFastRMSOutput(void *ptr);
            /// \endcond 
            /** The object destructor 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~AfuMathFastRMSOutput();
            /** Returns the rms error  @return  The PSD fitting rms error 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double GetRmsError
            (
            );
            /** Returns the rms error 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetRmsError
            (
                double rmsError /** The PSD fitting rms error */
            );
            /**  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPsdfitOriginalData
            (
                const std::vector<double> & psdfitOriginalX /** The Original PSD function x values */,
                const std::vector<double> & psdfitOriginalY /** The Original PSD function y values */
            );
            /** Returns PSD original data  @return  The Original PSD function y values 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<double> GetPsdfitOriginalData
            (
                std::vector<double> & psdfitOriginalX /** The Original PSD function x values */
            );
            /**  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetPsdfitFittedData
            (
                const std::vector<double> & psdfitFittedX /** The Fitted PSD X values */,
                const std::vector<double> & psdfitFittedY /** The Fitted PSD Y values */,
                const std::vector<double> & abcd /** abcd */ ,
                double psdfitFreqValue1 /** psdfit freq value1 */ ,
                double psdfitFreqValue2 /** psdfit freq value2 */ 
            );
            /** Returns fitted PSD data  @return  Frequency Value 2: Frequency Increment for Even Function 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: double GetPsdfitFittedData
            (
                std::vector<double> & psdfitFittedX /** the x values for the fitted PSD */,
                std::vector<double> & psdfitFittedY /** the y values for the fitted PSD */,
                std::vector<double> & abcd /** abcd */ ,
                double* psdfitFreqValue1 /** Frequency Value 1:  Minimum Freq for Even Function */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
