#ifndef NXOpen_CAE_SIMBCGROUP_HXX_INCLUDED
#define NXOpen_CAE_SIMBCGROUP_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimBcGroup.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimBcGroup;
    }
    namespace CAE
    {
        class SimGroupContainer;
    }
    class NXObject;
    namespace CAE
    {
        class _SimBcGroupBuilder;
        class SimBcGroupImpl;
        /**  @brief  Represents a BC group in a solution or solution step  

           <br> This is an abstract class.  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimBcGroup : public NXOpen::TaggedObject
        {
            private: SimBcGroupImpl * m_simbcgroup_impl;
            private: friend class  _SimBcGroupBuilder;
            protected: SimBcGroup();
            public: ~SimBcGroup();
            /**Returns  the solution or solution step owning this BC group 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::SimGroupContainer * GroupContainer
            (
            );
            /** Set the bolt load sequence 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetBoltLoadSequence
            (
                const std::vector<NXOpen::NXObject *> & objects /** bolt loads, bolt load sets, or folders */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
