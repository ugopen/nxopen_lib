#ifndef NXOpen_MOLDCOOLING_CIRCUIT_HXX_INCLUDED
#define NXOpen_MOLDCOOLING_CIRCUIT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MoldCooling_Circuit.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/MoldCooling_CircuitParams.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_moldcooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MoldCooling
    {
        class Circuit;
    }
    namespace MoldCooling
    {
        class CircuitParams;
    }
    class NXObject;
    namespace MoldCooling
    {
        class _CircuitBuilder;
        class CircuitImpl;
        /** Represents a mold cooling circuit  <br> Circuit are created manually thru the MoldCooling.CircuitCollection interface  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_MOLDCOOLINGEXPORT  Circuit : public NXOpen::NXObject
        {
            private: CircuitImpl * m_circuit_impl;
            private: friend class  _CircuitBuilder;
            protected: Circuit();
            public: ~Circuit();
            /** Assigns thermal parameters to the circuit. The circuit actually creates an internal reference
                        to the @link MoldCooling::CircuitParams MoldCooling::CircuitParams@endlink  object and you can assign the same 
                        parameter set to more than one circuit. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void AssignParams
            (
                NXOpen::MoldCooling::CircuitParams * params /** params */ 
            );
            /** Returns the @link MoldCooling::CircuitParams MoldCooling::CircuitParams@endlink  object assigned to that cooling circuit 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: NXOpen::MoldCooling::CircuitParams * GetAssignedParams
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
