#ifndef NXOpen_PCBEXCHANGE_ATTRIBUTEREMOVER_HXX_INCLUDED
#define NXOpen_PCBEXCHANGE_ATTRIBUTEREMOVER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PcbExchange_AttributeRemover.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pcbexchange_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PcbExchange
    {
        class AttributeRemover;
    }
    class Session;
    class TaggedObject;
    namespace PcbExchange
    {
        class AttributeRemoverImpl;
        /** Represents  a @link NXOpen::PcbExchange::AttributeRemover NXOpen::PcbExchange::AttributeRemover@endlink .  <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PCBEXCHANGEEXPORT  AttributeRemover
        {
            /** The remove attributes options. */
            public: enum Option
            {
                OptionBoard/** Remove board attributes */,
                OptionComponents/** Remove components attributes */,
                OptionAreas/** Remove areas attributes */,
                OptionHoles/** Remove drilled holes attributes */,
                OptionTraces/** Remove traces attributes */,
                OptionPads/** Remove pads attributes */,
                OptionAll/** Remove all pcbx attributes */
            };

            private: AttributeRemoverImpl * m_attributeremover_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit AttributeRemover(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static AttributeRemover* theAttributeRemover;
            /** Returns the AttributeRemover object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static AttributeRemover* GetAttributeRemover(NXOpen::Session *owner);
            public: ~AttributeRemover();
            /** Removes the attributes. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_pcbx_xpedition ("PCB Exchange for Xpedition") OR ug_pcb_modeler ("PCB Modeler") OR ug_pcbx_zuken ("PCB Exchange for Zuken") */
            public: void RemoveAttributes
            (
                NXOpen::PcbExchange::AttributeRemover::Option action /** action */ ,
                const std::vector<NXOpen::TaggedObject *> & objTags /** objtags */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
