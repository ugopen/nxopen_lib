#ifndef NXOpen_CAE_POSTPROCESSINGSESSIONAPPLICATOR_HXX_INCLUDED
#define NXOpen_CAE_POSTPROCESSINGSESSIONAPPLICATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostProcessingSessionApplicator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostProcessingSessionApplicator;
    }
    class Builder;
    namespace CAE
    {
        /** This enum represents the different loading action that can be performed by the applicator */
        enum CaePostProcessingSessionApplicatorLoadAction
        {
            CaePostProcessingSessionApplicatorLoadActionDoNothing/** Nothing to do: In case of conflict, keep the already loaded data source */,
            CaePostProcessingSessionApplicatorLoadActionLoadFromFile/** In case of conflict, load the data source from the file and remove the one already loaded */,
            CaePostProcessingSessionApplicatorLoadActionKeepBoth/** In case of conflict, load the data source from the file and rename it incrementaly */
        };

    }
    namespace CAE
    {
        class _PostProcessingSessionApplicatorBuilder;
        class PostProcessingSessionApplicatorImpl;
        /**  @brief  Represents a @link NXOpen::CAE::PostProcessingSessionApplicator NXOpen::CAE::PostProcessingSessionApplicator@endlink  
            which can be used to visualize a post processing pession.  

           <br> Not support KF.  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostProcessingSessionApplicator : public NXOpen::Builder
        {
            private: PostProcessingSessionApplicatorImpl * m_postprocessingsessionapplicator_impl;
            private: friend class  _PostProcessingSessionApplicatorBuilder;
            protected: PostProcessingSessionApplicator();
            public: ~PostProcessingSessionApplicator();
            /** Sets the exported post processing pession that will be applied. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFile
            (
                const NXString & filePath /** filepath */ 
            );
            /** Sets the exported post processing pession that will be applied. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFile
            (
                const char * filePath /** filepath */ 
            );
            /** Sets the apply active layout state flag. If true, the active layout state is applied
                    during the commit method. Saves a new layout state if the applying fails.
                    The default value is false. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetApplyActiveLayoutState
            (
                bool apply /** apply */ 
            );
            /** Gets the the apply active layout state flag. If true, the active layout state is applied
                    during the commit method. Saves a new layout state if the applying fails.
                    The default value is false. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetApplyActiveLayoutState
            (
            );
            /** Sets the file path of the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method. 
                    The DataSources are added when commit of the builder is called. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNthDataSourcePath
            (
                int dataSourceIndex /** datasourceindex */ ,
                const NXString & sourcePath /** sourcepath */ 
            );
            /** Sets the file path of the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method. 
                    The DataSources are added when commit of the builder is called. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetNthDataSourcePath
            (
                int dataSourceIndex /** datasourceindex */ ,
                const char * sourcePath /** sourcepath */ 
            );
            /** Gets the file path of the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method. 
                    The DataSources are added when commit of the builder is called. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString GetNthDataSourcePath
            (
                int dataSourceIndex /** datasourceindex */ 
            );
            /** Get the number of data sources found in the file previously loaded by a call to the 
                    @link NXOpen::CAE::PostProcessingSessionApplicator::SetFile NXOpen::CAE::PostProcessingSessionApplicator::SetFile@endlink  method.
                    The DataSources are added when commit of the builder is called. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: int GetNumDataSources
            (
            );
            /** Gets the file name of the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method.
                    The DataSources are added when commit of the builder is called. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString GetNthDataSourceName
            (
                int dataSourceIndex /** datasourceindex */ 
            );
            /** Configure the given applicator to perform a cleaning operation during the commit method. 
                    This operation makes sure the session only contains the data sources from the imported file, 
                    all the other data sources are removed if the doCleanDataSources is set to true.
                    By default doCleanDataSources is set to false. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCleanUpDataSources
            (
                bool doCleanDataSources /** docleandatasources */ 
            );
            /** Gets doCleanDataSources value, if doCleanDataSources is true the applicator will perform a cleaning operation during the commit method. 
                    See the description of @link  JA_CAE_POST_PROCESSING_SESSION_APPLICATOR_set_clean_up_data_sources  JA_CAE_POST_PROCESSING_SESSION_APPLICATOR_set_clean_up_data_sources@endlink . 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: bool GetCleanUpDataSources
            (
            );
            /** Sets the loading action to be performed for the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method.
                    The DataSources are added when commit of the builder is called.
                    The default value is JA_CAE_POST_PROCESSING_SESSION_APPLICATOR_load_action_do_nothing. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNthLoadingActions
            (
                int dataSourceIndex /** datasourceindex */ ,
                NXOpen::CAE::CaePostProcessingSessionApplicatorLoadAction action /** action */ 
            );
            /** Gets the loading action to be performed for the DataSource at given dataSourceIndex. That index needs to be in the [0..N-1] 
                    range, where N is the number returned by the @link NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources NXOpen::CAE::PostProcessingSessionApplicator::GetNumDataSources@endlink  method.
                    The DataSources are added when commit of the builder is called.
                    The default value is JA_CAE_POST_PROCESSING_SESSION_APPLICATOR_load_action_do_nothing. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::CaePostProcessingSessionApplicatorLoadAction GetNthLoadingActions
            (
                int dataSourceIndex /** datasourceindex */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
