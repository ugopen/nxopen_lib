#ifndef NXOpen_DEBUGUI_HXX_INCLUDED
#define NXOpen_DEBUGUI_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     DebugUI.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopendebuguicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class DebugUI;
    class BlockStylerDebugSession;
    class UITemplateTestManager;
    class _DebugUIBuilder;
    class DebugUIImpl;

    /// \cond NX_NO_DOC 
    /** Represents a class that is used for NX testing that depends on the UI.  This class should not
    be made available to customers 
     <br>  Created in NX7.5.0.  <br>  
    */
    class NXOPENDEBUGUICPPEXPORT  DebugUI : public NXOpen::TaggedObject
    {
        /** Enumeration for Validation Policy in UI Autotest*/

        /// \cond NX_NO_DOC 
        public: enum ValidationPolicy
        {
            ValidationPolicyStandard/** Standard Policy will have standard level of checking.
                        Users are adviced to use Standard Policy most of the time. Test with Standard Policy will rely more on macro replay
                        rather than checking each item in UI.*/,
            ValidationPolicyStrict/** Strict Policy will have strict checking while running UI Autotest.
                        Using Stricy Policy is not adviced until you are writing a specialized test, for example FPV. Strict Tests will
                        be slow and fregile in nature.*/
        };


        /// \endcond 
        private: DebugUIImpl * m_debugui_impl;
        private: static DebugUI *theDebugUI;
        public: static DebugUI *GetDebugUI();
        private: friend class  _DebugUIBuilder;
        protected: DebugUI();
        public: ~DebugUI();

        /// \cond NX_NO_DOC 
        /**This can only run certain macros.  This method is not for general use.  
            Use of it with out consultation is on a use at your own risk. 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        public: void ExecuteMacro
        (
            const NXString & fileName /** Name of file */
        );
        /**This can only run certain macros.  This method is not for general use.  
            Use of it with out consultation is on a use at your own risk. 
         <br>  Created in NX7.5.0.  <br>  
         <br> License requirements : None */
        void ExecuteMacro
        (
            const char * fileName /** Name of file */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /**Function specific to running macro in UI Autotest.
            This function is differentr from @link DebugUI::ExecuteMacro DebugUI::ExecuteMacro@endlink  as it ignores event loop escapes to run macro
            until it is finished or an exception occurs.
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void UIAutotestExecuteMacro
        (
            const NXString & fileName /** Name of the macro file */
        );
        /**Function specific to running macro in UI Autotest.
            This function is differentr from @link DebugUI::ExecuteMacro DebugUI::ExecuteMacro@endlink  as it ignores event loop escapes to run macro
            until it is finished or an exception occurs.
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        void UIAutotestExecuteMacro
        (
            const char * fileName /** Name of the macro file */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Journalling the "Expand All" functionality in the Assembly Navigator 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void AutotestExpandAllInAnav
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Journalling the "Expand All" functionality in the Constraint Navigator 
         <br>  Created in NX9.0.0.  <br>  
         <br> License requirements : None */
        public: void AutotestExpandAllInCnav
        (
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Function to set Validation Policy of a UI Autotest.
            Call this API before calling @link DebugUI::UIAutotestExecuteMacro DebugUI::UIAutotestExecuteMacro@endlink , 
            else value stored in registry will be considered as default.
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetValidationPolicy
        (
            NXOpen::DebugUI::ValidationPolicy policy /** Validation Policy for UI Autotest. See @link DebugUI::ValidationPolicy DebugUI::ValidationPolicy@endlink */
        );

        /// \endcond 

        /// \cond NX_NO_DOC 
        /** Function to set Dialog Memory Setting Policy of a UI Autotest.
            Call this API before calling @link DebugUI::UIAutotestExecuteMacro DebugUI::UIAutotestExecuteMacro@endlink , 
            else Dialog Memory Save option will be considered as default.
            Set True to save Dialog Memory. Set False to reset Dialog Memory.
         <br>  Created in NX12.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDialogMemorySaveOption
        (
            bool save /** save */ 
        );

        /// \endcond 


        /** Returns the UI Template Test Manager belonging to this debug session 
         <br>  Created in NX8.0.0.  <br>  
        */
        public: NXOpen::UITemplateTestManager *Templates();
        /** Returns the @link BlockStylerDebugSession BlockStylerDebugSession@endlink  object belonging to this debug session 
         <br>  Created in NX7.5.0.  <br>  
        */
        public: NXOpen::BlockStylerDebugSession *BlockStylerDebug();
    };

    /// \endcond 
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
