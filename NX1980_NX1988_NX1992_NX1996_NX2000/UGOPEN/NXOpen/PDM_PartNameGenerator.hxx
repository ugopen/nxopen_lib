#ifndef NXOpen_PDM_PARTNAMEGENERATOR_HXX_INCLUDED
#define NXOpen_PDM_PARTNAMEGENERATOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_PartNameGenerator.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class PartNameGenerator;
    }
    namespace PDM
    {
        class PdmSession;
    }
    namespace PDM
    {
        class PartNameGeneratorImpl;
        /** Represents the PartNameGenerator  <br> To obtain an instance of this class, refer to @link NXOpen::PDM::PdmSession  NXOpen::PDM::PdmSession @endlink  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  PartNameGenerator
        {
             /** PartAssignInputInfo struct for input to AutoAssignPartParametersForCreate 
             <br>  Created in NX1899.0.0.  <br>  
            */
            public:
            struct PartAssignInputInfo
            {
                public: /** itemtype */ NXString ItemType;
                public: /** modeltype */ NXString ModelType;
                public: /** basepartnumber */ NXString BasePartNumber;
                public: /** basepartrevision */ NXString BasePartRevision;
                public: /** basepartname */ NXString BasePartName;
                public: /** generatenextitemid */ bool GenerateNextItemId;
                public: PartAssignInputInfo() :
                    ItemType(),
                    ModelType(),
                    BasePartNumber(),
                    BasePartRevision(),
                    BasePartName(),
                    GenerateNextItemId()
                {
                }
                /** Constructor for the PartAssignInputInfo struct. */ 
                public: PartAssignInputInfo(const NXString &itemTypeInitial /** itemtype */ , 
                        const NXString &modelTypeInitial /** modeltype */ , 
                        const NXString &basePartNumberInitial /** basepartnumber */ , 
                        const NXString &basePartRevisionInitial /** basepartrevision */ , 
                        const NXString &basePartNameInitial /** basepartname */ , 
                        bool generateNextItemIdInitial /** generatenextitemid */ ) :
                    ItemType(itemTypeInitial),
                    ModelType(modelTypeInitial),
                    BasePartNumber(basePartNumberInitial),
                    BasePartRevision(basePartRevisionInitial),
                    BasePartName(basePartNameInitial),
                    GenerateNextItemId(generateNextItemIdInitial)
                {
                }
            };

            private: PartNameGeneratorImpl * m_partnamegenerator_impl;
            private: NXOpen::PDM::PdmSession* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit PartNameGenerator(NXOpen::PDM::PdmSession *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            public: ~PartNameGenerator();
            /**
                        This Method will auto assign the required parameters for creating new part in managed mode.
                        It will error out if part type is not fully auto assignable. i.e. If part type has key identifiers / create descriptors
                        which are required but cannot be auto-assigned.
                    
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString AutoAssignPartParametersForCreate
            (
                const NXOpen::PDM::PartNameGenerator::PartAssignInputInfo & inputInfoPtr /** inputinfoptr */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
