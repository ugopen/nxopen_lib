#ifndef NXOpen_MOLDCOOLING_FLOWCIRCUITBUILDER_HXX_INCLUDED
#define NXOpen_MOLDCOOLING_FLOWCIRCUITBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MoldCooling_FlowCircuitBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_moldcooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MoldCooling
    {
        class FlowCircuitBuilder;
    }
    class Builder;
    class Expression;
    class SelectBodyList;
    class SelectFaceList;
    namespace MoldCooling
    {
        class _FlowCircuitBuilderBuilder;
        class FlowCircuitBuilderImpl;
        /** Represents a @link MoldCooling::Circuit MoldCooling::Circuit@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::MoldCooling::Manager::CreateFlowCircuitBuilder  NXOpen::MoldCooling::Manager::CreateFlowCircuitBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        RoughnessHeight.Value </term> <description> 
         
        0 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        WallFriction </term> <description> 
         
        Smooth </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_MOLDCOOLINGEXPORT  FlowCircuitBuilder : public NXOpen::Builder
        {
            /** The type of thermal simulation */
            public: enum WallFrictionType
            {
                WallFrictionTypeSmooth/** Smooth */,
                WallFrictionTypeRough/** Rough */
            };

            private: FlowCircuitBuilderImpl * m_flowcircuitbuilder_impl;
            private: friend class  _FlowCircuitBuilderBuilder;
            protected: FlowCircuitBuilder();
            public: ~FlowCircuitBuilder();
            /**Returns  the cooling circuit name 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the cooling circuit name 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the cooling circuit name 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the cooling circuit channel bodies 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectBodyList * CircuitBodies
            (
            );
            /**Returns  the cooling circuit inlet faces 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * Inlets
            (
            );
            /**Returns  the cooling circuit outlet faces 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::SelectFaceList * Outlets
            (
            );
            /**Returns  the cooling circuit wall friction type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::MoldCooling::FlowCircuitBuilder::WallFrictionType WallFriction
            (
            );
            /**Sets  the cooling circuit wall friction type 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mold_cool_basic (" NX Mold Cooling Application") */
            public: void SetWallFriction
            (
                NXOpen::MoldCooling::FlowCircuitBuilder::WallFrictionType wallFriction /** wallfriction */ 
            );
            /**Returns  the cooling circuit roughness height 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * RoughnessHeight
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
