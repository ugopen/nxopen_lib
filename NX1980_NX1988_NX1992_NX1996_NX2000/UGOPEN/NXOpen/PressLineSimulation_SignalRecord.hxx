#ifndef NXOpen_PRESSLINESIMULATION_SIGNALRECORD_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_SIGNALRECORD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_SignalRecord.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class SignalRecord;
    }
    class NXObject;
    namespace PressLineSimulation
    {
        class _SignalRecordBuilder;
        class SignalRecordImpl;
        /** Represents the signal record class in press line simulation.  <br> Use the @link NXOpen::PressLineSimulation::ControlItemManager NXOpen::PressLineSimulation::ControlItemManager@endlink  class to obtain objects of this class.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  SignalRecord : public NXOpen::NXObject
        {
            private: SignalRecordImpl * m_signalrecord_impl;
            private: friend class  _SignalRecordBuilder;
            protected: SignalRecord();
            public: ~SignalRecord();
            /**Returns  the signal record name. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString DisplayName
            (
            );
            /**Returns  the on angle of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double OnAngle
            (
            );
            /**Sets  the on angle of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetOnAngle
            (
                double onAngle /** onangle */ 
            );
            /**Returns  the off angle of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: double OffAngle
            (
            );
            /**Sets  the off angle of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetOffAngle
            (
                double offAngle /** offangle */ 
            );
            /**Returns  the external status of the signal record 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool External
            (
            );
            /**Sets  the external status of the signal record 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetExternal
            (
                bool external /** external */ 
            );
            /**Returns  the user editablity of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: bool UserEditable
            (
            );
            /**Sets  the user editablity of the signal record. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetUserEditable
            (
                bool userEditable /** usereditable */ 
            );
            /** Use this method to set the off angle of the signal with a synchronization of the dependend signals. 
                    After using this method, the @link PressLineSimulation::SignalRecord PressLineSimulation::SignalRecord@endlink  object is logged for update and an update needs to be performed."
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetOffAngleSynchronized
            (
                double offAngle /** offangle */ 
            );
            /** Use this method to set the on angle of the signal with a synchronization of the dependend signals. 
                    After using this method, the @link PressLineSimulation::SignalRecord PressLineSimulation::SignalRecord@endlink  object is logged for update and an update needs to be performed."
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetOnAngleSynchronized
            (
                double onAngle /** onangle */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
