#ifndef NXOpen_CAE_CAECORESERVICE_HXX_INCLUDED
#define NXOpen_CAE_CAECORESERVICE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_CAECoreService.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class CAECoreService;
    }
    class BasePart;
    namespace CAE
    {
    }
    namespace CAE
    {
        class CAECoreServiceImpl;
        /**  @brief  Contains CAE related core methods on TC side.  

          
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  CAECoreService : public NXOpen::TransientObject
        {
            private: CAECoreServiceImpl * m_caecoreservice_impl;
            /// \cond NX_NO_DOC 
            public: explicit CAECoreService(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~CAECoreService();
            /** Given a part and structuremap revision or datamap domain, structure map or data map is executed on the part accordingly. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ExecuteStructureDataMap
            (
                NXOpen::BasePart * part /** part */ ,
                const NXString & smSpec /** smspec */ ,
                const NXString & domain /** domain */ 
            );
            /** Given a part and structuremap revision or datamap domain, structure map or data map is executed on the part accordingly. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            NXString ExecuteStructureDataMap
            (
                NXOpen::BasePart * part /** part */ ,
                const char * smSpec /** smspec */ ,
                const char * domain /** domain */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
