#ifndef NXOpen_LINEDESIGNER_COLUMNFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_LINEDESIGNER_COLUMNFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     LineDesigner_ColumnFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/liblinedesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace LineDesigner
    {
        class ColumnFeatureBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    class Section;
    namespace LineDesigner
    {
        class _ColumnFeatureBuilderBuilder;
        class ColumnFeatureBuilderImpl;
        /**
            Represents a @link LineDesigner::ColumnFeature LineDesigner::ColumnFeature@endlink  Features.FeatureBuilder
             <br> To create a new instance of this class, use @link NXOpen::LineDesigner::LineDesignerManager::CreateColumnFeatureBuilder  NXOpen::LineDesigner::LineDesignerManager::CreateColumnFeatureBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        BaseDepth.Value </term> <description> 
         
        800 (millimeters part), 32 (inches part) </description> </item> 

        <item><term> 
         
        BaseDiameter.Value </term> <description> 
         
        800 (millimeters part), 32 (inches part) </description> </item> 

        <item><term> 
         
        BaseHeight.Value </term> <description> 
         
        900 (millimeters part), 35 (inches part) </description> </item> 

        <item><term> 
         
        BaseLowerDiameter.Value </term> <description> 
         
        900 (millimeters part), 35 (inches part) </description> </item> 

        <item><term> 
         
        BaseStyleEnum </term> <description> 
         
        None </description> </item> 

        <item><term> 
         
        BaseUpperDiameter.Value </term> <description> 
         
        800 (millimeters part), 32 (inches part) </description> </item> 

        <item><term> 
         
        BaseWidth.Value </term> <description> 
         
        800 (millimeters part), 32 (inches part) </description> </item> 

        <item><term> 
         
        ColumnDepth.Value </term> <description> 
         
        600 (millimeters part), 25 (inches part) </description> </item> 

        <item><term> 
         
        ColumnDiameter.Value </term> <description> 
         
        300 (millimeters part), 12 (inches part) </description> </item> 

        <item><term> 
         
        ColumnHeight.Value </term> <description> 
         
        3000 (millimeters part), 120 (inches part) </description> </item> 

        <item><term> 
         
        ColumnStyleEnum </term> <description> 
         
        IBeam </description> </item> 

        <item><term> 
         
        ColumnThickness.Value </term> <description> 
         
        30 (millimeters part), 2 (inches part) </description> </item> 

        <item><term> 
         
        ColumnWidth.Value </term> <description> 
         
        600 (millimeters part), 25 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class LINEDESIGNEROPENCPPEXPORT  ColumnFeatureBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** This enum is providing possible column types    */
            public: enum ColumnType
            {
                ColumnTypeIBeam/** ibeam */ ,
                ColumnTypeTBeam/** tbeam */ ,
                ColumnTypeRectangle/** rectangle */ ,
                ColumnTypeCircle/** circle */ ,
                ColumnTypeUserDefine/** user define */ 
            };

            /** This enum is providing possible column base types   */
            public: enum ColumnBaseType
            {
                ColumnBaseTypeNone/** none */ ,
                ColumnBaseTypeRectangle/** rectangle */ ,
                ColumnBaseTypeCircle/** circle */ ,
                ColumnBaseTypeCone/** cone */ ,
                ColumnBaseTypeUserDefined/** user defined */ 
            };

            private: ColumnFeatureBuilderImpl * m_columnfeaturebuilder_impl;
            private: friend class  _ColumnFeatureBuilderBuilder;
            protected: ColumnFeatureBuilder();
            public: ~ColumnFeatureBuilder();
            /**Returns  the column origin point is returns where colums is created
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Point * ColumnOriginPoint
            (
            );
            /**Sets  the column origin point is returns where colums is created
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetColumnOriginPoint
            (
                NXOpen::Point * columnOriginPoint /** columnoriginpoint */ 
            );
            /**Returns  the column style of column feature  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ColumnFeatureBuilder::ColumnType ColumnStyleEnum
            (
            );
            /**Sets  the column style of column feature  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetColumnStyleEnum
            (
                NXOpen::LineDesigner::ColumnFeatureBuilder::ColumnType columnStyleEnum /** columnstyleenum */ 
            );
            /**Returns  the user defined cross section of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Section * ColumnUserDefineSuperSection
            (
            );
            /**Returns  the column height of column feature  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * ColumnHeight
            (
            );
            /**Returns  the column depth of column feature  
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * ColumnDepth
            (
            );
            /**Returns  the column width  of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * ColumnWidth
            (
            );
            /**Returns  the column diameter of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * ColumnDiameter
            (
            );
            /**Returns  the column thickness of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * ColumnThickness
            (
            );
            /**Returns  the base cross section type of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::LineDesigner::ColumnFeatureBuilder::ColumnBaseType BaseStyleEnum
            (
            );
            /**Sets  the base cross section type of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetBaseStyleEnum
            (
                NXOpen::LineDesigner::ColumnFeatureBuilder::ColumnBaseType baseStyleEnum /** basestyleenum */ 
            );
            /**Returns  the user define cross section for base of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Section * BaseUserDefineSuperSection
            (
            );
            /**Returns  the base height of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseHeight
            (
            );
            /**Returns  the base depth of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseDepth
            (
            );
            /**Returns  the base width of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseWidth
            (
            );
            /**Returns  the base diameter of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseDiameter
            (
            );
            /**Returns  the base upper diameter of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseUpperDiameter
            (
            );
            /**Returns  the base lower diameter of column feature 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: NXOpen::Expression * BaseLowerDiameter
            (
            );

            /// \cond NX_NO_DOC 
            /**Sets   
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetShouldCopySketchColumn
            (
                bool shouldCopySketchColumn /** shouldcopysketchcolumn */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets   
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: void SetShouldCopySketchBase
            (
                bool shouldCopySketchBase /** shouldcopysketchbase */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns   
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool ShouldCopySketchColumn
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns   
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : ld_line_designer ("FULL LINE DESIGNER") */
            public: bool ShouldCopySketchBase
            (
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
