#ifndef NXOpen_PDM_DATABASEOBJECTMANAGER_HXX_INCLUDED
#define NXOpen_PDM_DATABASEOBJECTMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PDM_DatabaseObjectManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/PDM_DatabaseObject.hxx>
#include <NXOpen/PDM_DatabaseObjects.hxx>
#include <NXOpen/PDM_FindCriteria.hxx>
#include <NXOpen/libnxopencpp_pdm_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PDM
    {
        class DatabaseObjectManager;
    }
    namespace PDM
    {
        class DatabaseObject;
    }
    namespace PDM
    {
        class DatabaseObjects;
    }
    namespace PDM
    {
        class FindCriteria;
    }
    namespace PDM
    {
    }
    namespace PDM
    {
        class DatabaseObjectManagerImpl;
        /**  @brief  This class is used for retrieving PDM database objects.  

           <br> Use @link PDM::PdmSession::GetDatabaseObjectManager PDM::PdmSession::GetDatabaseObjectManager@endlink  to get the instance of this class.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_PDMEXPORT  DatabaseObjectManager : public NXOpen::TransientObject
        {
            private: DatabaseObjectManagerImpl * m_databaseobjectmanager_impl;
            /// \cond NX_NO_DOC 
            public: explicit DatabaseObjectManager(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~DatabaseObjectManager();
            /** This API constructs an array of empty @link NXOpen::PDM::FindCriteria NXOpen::PDM::FindCriteria@endlink  objects.  @return  Find criteria 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::PDM::FindCriteria *> NewFindcriteria
            (
                int nCriteria /** ncriteria */ 
            );
            /** This API constructs a new @link NXOpen::PDM::DatabaseObjects NXOpen::PDM::DatabaseObjects@endlink  object.  @return  Database objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::DatabaseObjects * NewDatabaseobjects
            (
            );
            /** This API finds database objects in the Teamcenter database using a Teamcenter saved query.  @return  Database objects 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::PDM::DatabaseObjects *> FindObjects
            (
                const std::vector<NXOpen::PDM::FindCriteria *> & findCriterias /** Find critieria */
            );
            /** Gets a database object from UID  @return  Database object 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PDM::DatabaseObject * GetDatabaseObjectFromAppSessionUid
            (
                const NXString & uId /** UID of the database identifier */
            );
            /** Gets a database object from UID  @return  Database object 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::PDM::DatabaseObject * GetDatabaseObjectFromAppSessionUid
            (
                const char * uId /** UID of the database identifier */
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
