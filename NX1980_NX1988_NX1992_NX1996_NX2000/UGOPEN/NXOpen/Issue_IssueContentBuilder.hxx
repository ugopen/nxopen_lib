#ifndef NXOpen_ISSUE_ISSUECONTENTBUILDER_HXX_INCLUDED
#define NXOpen_ISSUE_ISSUECONTENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Issue_IssueContentBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Issue_IssueAttachment.hxx>
#include <NXOpen/Issue_IssueProperty.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_issue_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Issue
    {
        class IssueContentBuilder;
    }
    class Builder;
    namespace Issue
    {
        class IssueAttachment;
    }
    namespace Issue
    {
        class IssueProperty;
    }
    namespace Issue
    {
        class _IssueContentBuilderBuilder;
        class IssueContentBuilderImpl;
        /** Represents a @link NXOpen::Issue::IssueContent NXOpen::Issue::IssueContent@endlink  builder  <br> To create a new instance of this class, use @link NXOpen::Issue::IssueManager::CreateIssueContentBuilder  NXOpen::Issue::IssueManager::CreateIssueContentBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Title </term> <description> 
         
        New Issue </description> </item> 

        </list> 

         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_ISSUEEXPORT  IssueContentBuilder : public NXOpen::Builder
        {
            private: IssueContentBuilderImpl * m_issuecontentbuilder_impl;
            private: friend class  _IssueContentBuilderBuilder;
            protected: IssueContentBuilder();
            public: ~IssueContentBuilder();
            /**Returns  the issue title 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString Title
            (
            );
            /**Sets  the issue title 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetTitle
            (
                const NXString & title /** title */ 
            );
            /**Sets  the issue title 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetTitle
            (
                const char * title /** title */ 
            );
            /**Returns  the issue comment 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString Comment
            (
            );
            /**Sets  the issue comment 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetComment
            (
                const NXString & comment /** comment */ 
            );
            /**Sets  the issue comment 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetComment
            (
                const char * comment /** comment */ 
            );
            /**Returns  the assigned user 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString AssignedUser
            (
            );
            /**Sets  the assigned user 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetAssignedUser
            (
                const NXString & assignedUser /** assigneduser */ 
            );
            /**Sets  the assigned user 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetAssignedUser
            (
                const char * assignedUser /** assigneduser */ 
            );
            /**Returns  the issue status 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString Status
            (
            );
            /**Sets  the issue status 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetStatus
            (
                const NXString & status /** status */ 
            );
            /**Sets  the issue status 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetStatus
            (
                const char * status /** status */ 
            );
            /**Returns  the issue priority 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString Priority
            (
            );
            /**Sets  the issue priority 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetPriority
            (
                const NXString & priority /** priority */ 
            );
            /**Sets  the issue priority 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetPriority
            (
                const char * priority /** priority */ 
            );
            /**Returns  the due date 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString DueDate
            (
            );
            /**Sets  the due date 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetDueDate
            (
                const NXString & dueDate /** duedate */ 
            );
            /**Sets  the due date 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetDueDate
            (
                const char * dueDate /** duedate */ 
            );
            /** Returns the editable user defined @link NXOpen::Issue::IssueProperty NXOpen::Issue::IssueProperty@endlink s 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: std::vector<NXOpen::Issue::IssueProperty *> GetEditableUserProperties
            (
            );
            /** Sets the value of @link NXOpen::Issue::IssueProperty NXOpen::Issue::IssueProperty@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetPropertyValue
            (
                const NXString & propertyName /** propertyname */ ,
                const NXString & propertyValue /** propertyvalue */ 
            );
            /** Sets the value of @link NXOpen::Issue::IssueProperty NXOpen::Issue::IssueProperty@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            void SetPropertyValue
            (
                const char * propertyName /** propertyname */ ,
                const char * propertyValue /** propertyvalue */ 
            );
            /** Returns the value of @link NXOpen::Issue::IssueProperty NXOpen::Issue::IssueProperty@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXString GetPropertyValue
            (
                const NXString & propertyName /** propertyname */ 
            );
            /** Returns the value of @link NXOpen::Issue::IssueProperty NXOpen::Issue::IssueProperty@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            NXString GetPropertyValue
            (
                const char * propertyName /** propertyname */ 
            );
            /** Returns all the @link NXOpen::Issue::IssueAttachment NXOpen::Issue::IssueAttachment@endlink s 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: std::vector<NXOpen::Issue::IssueAttachment *> GetAllAttachments
            (
            );
            /** Returns the @link NXOpen::Issue::IssueAttachment NXOpen::Issue::IssueAttachment@endlink  with this attachment name 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: NXOpen::Issue::IssueAttachment * GetAttachment
            (
                const NXString & attachmentName /** attachmentname */ 
            );
            /** Returns the @link NXOpen::Issue::IssueAttachment NXOpen::Issue::IssueAttachment@endlink  with this attachment name 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            NXOpen::Issue::IssueAttachment * GetAttachment
            (
                const char * attachmentName /** attachmentname */ 
            );
            /** Adds an @link NXOpen::Issue::IssueAttachment NXOpen::Issue::IssueAttachment@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void AddAttachment
            (
                NXOpen::Issue::IssueAttachment * attachment /** attachment */ 
            );
            /** Removes an @link NXOpen::Issue::IssueAttachment NXOpen::Issue::IssueAttachment@endlink  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void RemoveAttachment
            (
                NXOpen::Issue::IssueAttachment * attachment /** attachment */ 
            );
            /** Sets preview image 
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : nx_issue_mgmt ("NX Issue Tracking") */
            public: void SetPreviewImage
            (
                NXOpen::Issue::IssueAttachment * attachment /** attachment */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
