#ifndef NXOpen_CAE_GRAPHRECIPE_HXX_INCLUDED
#define NXOpen_CAE_GRAPHRECIPE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_GraphRecipe.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ProbeOutputRecipe.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class GraphRecipe;
    }
    namespace CAE
    {
        class ProbeOutputRecipe;
    }
    class CoordinateSystem;
    class Direction;
    class Unit;
    namespace CAE
    {
        class _GraphRecipeBuilder;
        class GraphRecipeImpl;
        /**
                Represents a @link NXOpen::CAE::GraphRecipe NXOpen::CAE::GraphRecipe@endlink 
             <br> To obtain the object of this class use @link NXOpen::CAE::ResultProbe::GetOutputRecipe NXOpen::CAE::ResultProbe::GetOutputRecipe@endlink   <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  GraphRecipe : public NXOpen::CAE::ProbeOutputRecipe
        {
            /** GraphRecipe X-Axis Definition*/
            public: enum XAxisoption
            {
                XAxisoptionPathlength/** pathlength */ ,
                XAxisoptionLengthalongdirection/** lengthalongdirection */ ,
                XAxisoptionCsysaxis/** csysaxis */ ,
                XAxisoptionIteration/** iteration */ ,
                XAxisoptionFormula/** formula */ ,
                XAxisoptionRpm/** rpm */ 
            };

            /** GraphRecipe CSYS Type*/
            public: enum CsysType
            {
                CsysTypeGlobalCyclicAnalysis/** global cyclic csys */,
                CsysTypeGlobal/** global csys - defaults to cartesian */,
                CsysTypeCartesian/** cartesian csys */,
                CsysTypeCylindrical/** cylindrical csys */,
                CsysTypeSpherical/** spherical csys */
            };

            /** GraphRecipe CSYS Axis*/
            public: enum CsysAxis
            {
                CsysAxisFirst/** X, R, R */,
                CsysAxisSecond/** Y, T, T */,
                CsysAxisThird/** Z, Z, P */
            };

            private: GraphRecipeImpl * m_graphrecipe_impl;
            private: friend class  _GraphRecipeBuilder;
            protected: GraphRecipe();
            public: ~GraphRecipe();
            /** Get X-Axis Option of graph recipe @return  X-Axis Option
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::GraphRecipe::XAxisoption GetXaxisoption
            (
            );
            /** Set X-Axis Option of graph recipe
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetXaxisoption
            (
                NXOpen::CAE::GraphRecipe::XAxisoption xaxis /** X-Axis Option*/
            );
            /** Get Direction Vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Direction * GetDirection
            (
            );
            /** Set Direction Vector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetDirection
            (
                NXOpen::Direction * direction /** direction */ 
            );
            /** Get CSYS Type @return  X-Axis Option
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::GraphRecipe::CsysType GetCsystype
            (
            );
            /** Set CSYS Type
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCsystype
            (
                NXOpen::CAE::GraphRecipe::CsysType csystype /** X-Axis Option*/
            );
            /** Get CSYS 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CoordinateSystem * GetCsys
            (
            );
            /** Set CSYS 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /** Get CSYS Axis 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::CAE::GraphRecipe::CsysAxis GetCsysaxis
            (
            );
            /** Set CSYS Axis 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCsysaxis
            (
                NXOpen::CAE::GraphRecipe::CsysAxis axis /** axis */ 
            );
            /** Get Formula  @return  X-Axis Option
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXString GetFormula
            (
            );
            /** Set Formula 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFormula
            (
                const NXString & formula /** X-Axis Option*/
            );
            /** Set Formula 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetFormula
            (
                const char * formula /** X-Axis Option*/
            );
            /** Get the unit for formula
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Unit * GetUnit
            (
            );
            /** Set the unit for formula
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetUnit
            (
                NXOpen::Unit * unit /** unit */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
