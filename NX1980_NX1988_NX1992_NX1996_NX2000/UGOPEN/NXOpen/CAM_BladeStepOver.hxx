#ifndef NXOpen_CAM_BLADESTEPOVER_HXX_INCLUDED
#define NXOpen_CAM_BLADESTEPOVER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_BladeStepOver.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class BladeStepOver;
    }
    namespace CAM
    {
        class _BladeStepOverBuilder;
        class BladeStepOverImpl;
        /** Represents a blade stepover builder 
         <br>  Created in NX12.0.2.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  BladeStepOver : public NXOpen::TaggedObject
        {
            /** types for passes type */
            public: enum BladePassesType
            {
                BladePassesTypeOnFirstCut/** on first cut */,
                BladePassesTypeOnTwoCuts/** on two cuts */,
                BladePassesTypeOnMultipleCuts/** on multiple cuts */,
                BladePassesTypeOnNone/** on none */
            };

            private: BladeStepOverImpl * m_bladestepover_impl;
            private: friend class  _BladeStepOverBuilder;
            protected: BladeStepOver();
            public: ~BladeStepOver();
            /**Returns  the passes type 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::BladeStepOver::BladePassesType PassesType
            (
            );
            /**Sets  the passes type 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPassesType
            (
                NXOpen::CAM::BladeStepOver::BladePassesType passesType /** the passes type */
            );
            /**Returns  the number of intermediate depths 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: int NumberOfIntermediateDepths
            (
            );
            /**Sets  the number of intermediate depths 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumberOfIntermediateDepths
            (
                int noOfIntermDepths /** the number of intermediate depths */
            );
            /**Returns  the number of cuts per depth 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: int NumberOfCutsPerDepth
            (
            );
            /**Sets  the number of cuts per depth 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetNumberOfCutsPerDepth
            (
                int noOfCutsPerDepth /** the number of cuts per depth */
            );
            /**Returns  the percent of infill step over 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: double PercentOfInfillStepOver
            (
            );
            /**Sets  the percent of infill step over 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : cam_base ("CAM BASE") */
            public: void SetPercentOfInfillStepOver
            (
                double percOfInfillStepOver /** the percent of infill step over */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
