#ifndef NXOpen_DRAWINGS_EDITVIEWSETTINGSBUILDER_HXX_INCLUDED
#define NXOpen_DRAWINGS_EDITVIEWSETTINGSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Drawings_EditViewSettingsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Drawings_ViewDetailLabelBuilder.hxx>
#include <NXOpen/Drawings_ViewLabelBuilder.hxx>
#include <NXOpen/Drawings_ViewProjectedLabelBuilder.hxx>
#include <NXOpen/Drawings_ViewSectionLabelBuilder.hxx>
#include <NXOpen/Drawings_ViewStyleBuilder.hxx>
#include <NXOpen/Drafting_BaseEditSettingsBuilder.hxx>
#include <NXOpen/libnxopencpp_drawings_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Drawings
    {
        class EditViewSettingsBuilder;
    }
    namespace Drafting
    {
        class BaseEditSettingsBuilder;
    }
    namespace Drawings
    {
        class DraftingView;
    }
    namespace Drawings
    {
        class ViewDetailLabelBuilder;
    }
    namespace Drawings
    {
        class ViewLabelBuilder;
    }
    namespace Drawings
    {
        class ViewProjectedLabelBuilder;
    }
    namespace Drawings
    {
        class ViewSectionLabelBuilder;
    }
    namespace Drawings
    {
        class ViewStyleBuilder;
    }
    namespace Drawings
    {
        class _EditViewSettingsBuilderBuilder;
        class EditViewSettingsBuilderImpl;
        /** Represents a @link NXOpen::Drawings::EditViewSettingsBuilder NXOpen::Drawings::EditViewSettingsBuilder@endlink  builder.
                It provides an interface for editing view style settings.
                This can be used to change one specific view or all views.  <br> To create a new instance of this class, use @link NXOpen::Drafting::SettingsManager::CreateDrawingEditViewSettingsBuilder  NXOpen::Drafting::SettingsManager::CreateDrawingEditViewSettingsBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.Angle.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.Associative </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleGeneral.AngleSetting.EvaluationPlane </term> <description> 
         
        DrawingSheet </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleGeneral.Scale.Denominator </term> <description> 
         
        1.0 </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleGeneral.Scale.Numerator </term> <description> 
         
        1.0 </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleGeneral.Scale.ScaleType </term> <description> 
         
        Ratio </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleOrientation.HingeLine.ReverseDirection </term> <description> 
         
        false </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleOrientation.HingeLine.VectorOption </term> <description> 
         
        Inferred </description> </item> 

        <item><term> 
         
        ViewStyle.ViewStyleOrientation.Ovt.AssociativeOrientation </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX9.0.0.  <br>  
        */
        class NXOPENCPP_DRAWINGSEXPORT  EditViewSettingsBuilder : public NXOpen::Drafting::BaseEditSettingsBuilder
        {
            private: EditViewSettingsBuilderImpl * m_editviewsettingsbuilder_impl;
            private: friend class  _EditViewSettingsBuilderBuilder;
            protected: EditViewSettingsBuilder();
            public: ~EditViewSettingsBuilder();
            /**Returns  the view style builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewStyleBuilder * ViewStyle
            (
            );
            /**Returns  the view label builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewLabelBuilder * ViewLabel
            (
            );
            /**Returns  the view detail label builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewDetailLabelBuilder * ViewDetailLabel
            (
            );
            /**Returns  the view section label builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewSectionLabelBuilder * ViewSectionLabel
            (
            );
            /**Returns  the view projected label builder 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Drawings::ViewProjectedLabelBuilder * ViewProjectedLabel
            (
            );
            /** Inherit Settings From Selected Objects 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromSelectedObjects
            (
                NXOpen::Drawings::DraftingView * selectedObject /** The selected drafting view instance object. 
                                                                                            NULL is not allowed. */
            );
            /** Inherit Settings From Customer Default 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromCustomerDefault
            (
            );
            /** Inherit Settings From Preference 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : drafting ("DRAFTING") */
            public: void InheritSettingsFromPreferences
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
