#ifndef NXOpen_AME_MANAGEDIMENSIONPOINTSBUILDER_HXX_INCLUDED
#define NXOpen_AME_MANAGEDIMENSIONPOINTSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ManageDimensionPointsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ManageDimensionPointsBuilder;
    }
    class Builder;
    namespace AME
    {
        class _ManageDimensionPointsBuilderBuilder;
        class ManageDimensionPointsBuilderImpl;
        /** Represents a Manage Dimension Points class Builder   <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateManageDimensionPointsBuilder  NXOpen::AME::AMEManager::CreateManageDimensionPointsBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        Type </term> <description> 
         
        Automatic </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ManageDimensionPointsBuilder : public NXOpen::Builder
        {
            /** Represents the type of dimension points */
            public: enum Types
            {
                TypesAutomatic/** automatic */ ,
                TypesManual/** manual */ 
            };

            private: ManageDimensionPointsBuilderImpl * m_managedimensionpointsbuilder_impl;
            private: friend class  _ManageDimensionPointsBuilderBuilder;
            protected: ManageDimensionPointsBuilder();
            public: ~ManageDimensionPointsBuilder();
            /**Returns  the symbol type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: NXOpen::AME::ManageDimensionPointsBuilder::Types Type
            (
            );
            /**Sets  the symbol type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: void SetType
            (
                NXOpen::AME::ManageDimensionPointsBuilder::Types type /** type */ 
            );
            /** Gets the dimension point location 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: NXOpen::Point2d GetDimensionPointLocation
            (
                const NXString & dimensionPtID /** dimensionptid */ 
            );
            /** Gets the dimension point location 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            NXOpen::Point2d GetDimensionPointLocation
            (
                const char * dimensionPtID /** dimensionptid */ 
            );
            /** Sets the dimension point location 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: void SetDimensionPointLocation
            (
                const NXString & dimensionPtID /** dimensionptid */ ,
                const NXOpen::Point2d & dimensionPtLocation /** dimensionptlocation */ 
            );
            /** Sets the dimension point location 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            void SetDimensionPointLocation
            (
                const char * dimensionPtID /** dimensionptid */ ,
                const NXOpen::Point2d & dimensionPtLocation /** dimensionptlocation */ 
            );
            /** Deletes the dimension point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: void DeleteDimensionPoint
            (
                const NXString & dimensionPtID /** dimensionptid */ 
            );
            /** Deletes the dimension point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            void DeleteDimensionPoint
            (
                const char * dimensionPtID /** dimensionptid */ 
            );
            /** Creates a new dimension point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : ad_electrical_design ("AUTOMATION DESIGNER ELECTRICAL DESIGN") */
            public: NXString CreateDimensionPoint
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
