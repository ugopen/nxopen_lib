#ifndef NXOpen_CAE_XYPLOT_MARKERSTYLESETTING_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_MARKERSTYLESETTING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_MarkerStyleSetting.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_XyplotDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_TextStyleSetting.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class MarkerStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class TextStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class _MarkerStyleSettingBuilder;
            class MarkerStyleSettingImpl;
            /** Represents the marker display style. Call @link CAE::Xyplot::BaseDisplayStyleSetting::CommitChange CAE::Xyplot::BaseDisplayStyleSetting::CommitChange@endlink 
                        to apply style changes to corresponding plot after it's modified.
                     <br> Not support KF.  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  MarkerStyleSetting : public NXOpen::CAE::Xyplot::TextStyleSetting
            {
                private: MarkerStyleSettingImpl * m_markerstylesetting_impl;
                private: friend class  _MarkerStyleSettingBuilder;
                protected: MarkerStyleSetting();
                public: ~MarkerStyleSetting();
                /**Returns  the attachment type for associative marker 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::AnchorType AttachmentType
                (
                );
                /**Sets  the attachment type for associative marker 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAttachmentType
                (
                    NXOpen::CAE::Xyplot::AnchorType anchorType /** attachment type */
                );
                /**Returns  the option specifies whether just to search source data when creating associative marker 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool SnapToData
                (
                );
                /**Sets  the option specifies whether just to search source data when creating associative marker 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetSnapToData
                (
                    bool isSnapToData /** snap to data */
                );
                /**Returns  the scale of abscissa percentage setting, just for attachment type: Abscissa Percentage, and the value shuould be limited in [0.0, 1.0] 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: double AbsPercentage
                (
                );
                /**Sets  the scale of abscissa percentage setting, just for attachment type: Abscissa Percentage, and the value shuould be limited in [0.0, 1.0] 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAbsPercentage
                (
                    double absPercentage /** abscissa percentage */
                );
                /**Returns  the option specifies whether to show number text 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool NumberTextVisibility
                (
                );
                /**Sets  the option specifies whether to show number text 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetNumberTextVisibility
                (
                    bool isNumberTextVisible /** number text */
                );
                /**Returns  the option specifies whether to show note text 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: bool NoteTextVisibility
                (
                );
                /**Sets  the option specifies whether to show note text 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetNoteTextVisibility
                (
                    bool isNoteTextVisible /** note text */
                );
                /** Gets the note texts  @return  Note Texts 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetNoteTexts
                (
                );
                /** Sets the note texts 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetNoteTexts
                (
                    const std::vector<NXString> & noteTexts /** Note Texts */
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
