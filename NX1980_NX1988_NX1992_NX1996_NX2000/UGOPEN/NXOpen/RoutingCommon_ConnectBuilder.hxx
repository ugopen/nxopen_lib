#ifndef NXOpen_ROUTINGCOMMON_CONNECTBUILDER_HXX_INCLUDED
#define NXOpen_ROUTINGCOMMON_CONNECTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     RoutingCommon_ConnectBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_routingcommon_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace RoutingCommon
    {
        class ConnectBuilder;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace RoutingCommon
    {
        class _ConnectBuilderBuilder;
        class ConnectBuilderImpl;
        /** the Builder for Connect Path  <br> To create a new instance of this class, use @link NXOpen::RoutingCommon::BuilderFactory::CreateConnectBuilder  NXOpen::RoutingCommon::BuilderFactory::CreateConnectBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_ROUTINGCOMMONEXPORT  ConnectBuilder : public NXOpen::Builder
        {
            private: ConnectBuilderImpl * m_connectbuilder_impl;
            private: friend class  _ConnectBuilderBuilder;
            protected: ConnectBuilder();
            public: ~ConnectBuilder();
            /**Returns  the selected components  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: NXOpen::Assemblies::SelectComponentList * ComponentsCollector
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
