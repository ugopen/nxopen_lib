#ifndef NXOpen_REPORT_ENUMERATIONARGUMENT_HXX_INCLUDED
#define NXOpen_REPORT_ENUMERATIONARGUMENT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Report_EnumerationArgument.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Report_BaseArgument.hxx>
#include <NXOpen/libnxopencpp_report_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Report
    {
        class EnumerationArgument;
    }
    namespace Report
    {
        class BaseArgument;
    }
    namespace Report
    {
        class _EnumerationArgumentBuilder;
        class EnumerationArgumentImpl;
        /** Represents an argument for enumeration type data.  <br> Not support KF.  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_REPORTEXPORT  EnumerationArgument : public NXOpen::Report::BaseArgument
        {
            private: EnumerationArgumentImpl * m_enumerationargument_impl;
            private: friend class  _EnumerationArgumentBuilder;
            protected: EnumerationArgument();
            public: ~EnumerationArgument();
            /** Gets the enumeration options. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void GetEnumerationOptions
            (
                std::vector<NXString> & enumerationOptions /** enumerationoptions */ 
            );
            /** Sets the enumeration options. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetEnumerationOptions
            (
                std::vector<NXString> & enumerationOptions /** enumerationoptions */ 
            );
            /**Returns  the argument default value. The default value index is between 0 and options count queried
                        by @link NXOpen::Report::EnumerationArgument::GetEnumerationOptions NXOpen::Report::EnumerationArgument::GetEnumerationOptions@endlink , 0 is inclusive. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int DefaultValue
            (
            );
            /**Sets  the argument default value. The default value index is between 0 and options count queried
                        by @link NXOpen::Report::EnumerationArgument::GetEnumerationOptions NXOpen::Report::EnumerationArgument::GetEnumerationOptions@endlink , 0 is inclusive. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDefaultValue
            (
                int defaultValueIndex /** defaultvalueindex */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
