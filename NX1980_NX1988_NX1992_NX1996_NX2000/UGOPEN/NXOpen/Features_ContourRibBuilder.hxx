#ifndef NXOpen_FEATURES_CONTOURRIBBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_CONTOURRIBBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ContourRibBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class ContourRibBuilder;
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class ProjectionOptions;
    }
    class ScCollector;
    class Section;
    namespace Features
    {
        class _ContourRibBuilderBuilder;
        class ContourRibBuilderImpl;
        /**
            Represents a @link Features::ContourRib Features::ContourRib@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateContourRibBuilder  NXOpen::Features::FeatureCollection::CreateContourRibBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        HeightDim.Value </term> <description> 
         
        25 (millimeters part), 1 (inches part) </description> </item> 

        <item><term> 
         
        HeightDimensionType </term> <description> 
         
        Value </description> </item> 

        <item><term> 
         
        WidthDim.Value </term> <description> 
         
        2 (millimeters part), 0.1 (inches part) </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  ContourRibBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** */
            public: enum HeightLimit
            {
                HeightLimitValue/** value */ ,
                HeightLimitSymmetricValue/** symmetric value */ ,
                HeightLimitToSelected/** to selected */ 
            };

            private: ContourRibBuilderImpl * m_contourribbuilder_impl;
            private: friend class  _ContourRibBuilderBuilder;
            protected: ContourRibBuilder();
            public: ~ContourRibBuilder();
            /**Returns  the skin face 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * SelectFace
            (
            );
            /**Returns  the guide curve 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Section * SelectCurve
            (
            );
            /**Returns  the project direction 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::GeometricUtilities::ProjectionOptions * ProjectDirection
            (
            );
            /**Returns  the height dimension type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::ContourRibBuilder::HeightLimit HeightDimensionType
            (
            );
            /**Sets  the height dimension type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetHeightDimensionType
            (
                NXOpen::Features::ContourRibBuilder::HeightLimit heightDimensionType /** heightdimensiontype */ 
            );
            /**Returns  the height dim 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HeightDim
            (
            );
            /**Returns  the reverse height direction flag 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: bool ReverseHeightDirection
            (
            );
            /**Sets  the reverse height direction flag 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: void SetReverseHeightDirection
            (
                bool reverseHeightDirection /** reverseheightdirection */ 
            );
            /**Returns  the height face 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::ScCollector * HeightFace
            (
            );
            /**Returns  the width dim 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * WidthDim
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
