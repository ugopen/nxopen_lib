#ifndef NXOpen_GATEWAY_MASSPARTSPECIFICOPTIONSBUILDER_HXX_INCLUDED
#define NXOpen_GATEWAY_MASSPARTSPECIFICOPTIONSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Gateway_MassPartSpecificOptionsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_gateway_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Gateway
    {
        class MassPartSpecificOptionsBuilder;
    }
    class Builder;
    namespace Gateway
    {
        class _MassPartSpecificOptionsBuilderBuilder;
        class MassPartSpecificOptionsBuilderImpl;
        /** Represents a @link NXOpen::Gateway::MassPartSpecificOptionsBuilder NXOpen::Gateway::MassPartSpecificOptionsBuilder@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Gateway::MassCollection::CreatePartSpecificOptionsBuilder  NXOpen::Gateway::MassCollection::CreatePartSpecificOptionsBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class NXOPENCPP_GATEWAYEXPORT  MassPartSpecificOptionsBuilder : public NXOpen::Builder
        {
            private: MassPartSpecificOptionsBuilderImpl * m_masspartspecificoptionsbuilder_impl;
            private: friend class  _MassPartSpecificOptionsBuilderBuilder;
            protected: MassPartSpecificOptionsBuilder();
            public: ~MassPartSpecificOptionsBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the name of reference set 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ReferenceSetName
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the name of reference set 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void SetReferenceSetName
            (
                const NXString & referenceSetName /** referencesetname */ 
            );
            /**Sets  the name of reference set 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            void SetReferenceSetName
            (
                const char * referenceSetName /** referencesetname */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Remove the reference set setting from this builder. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: void RemovePartSpecificSetting
            (
            );

            /// \endcond 
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
