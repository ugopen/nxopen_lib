#ifndef NXOpen_FEATURES_SHIPDESIGN_EXCESSMATERIALBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_EXCESSMATERIALBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ExcessMaterialBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ExcessMaterialBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class SelectFace;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ExcessMaterialBuilderBuilder;
            class ExcessMaterialBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::ExcessMaterial NXOpen::Features::ShipDesign::ExcessMaterial@endlink  builder.
                    The Excess Material feature adds excess manufacturing material to the end of plate.
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateExcessMaterialBuilder  NXOpen::Features::ShipCollection::CreateExcessMaterialBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            EndOffset.Value </term> <description> 
             
            10 (millimeters part), 10 (inches part) </description> </item> 

            <item><term> 
             
            ExtendEndFace </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            ExtendStartFace </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            OffsetDistance.Value (deprecated) </term> <description> 
             
            10 (millimeters part), 10 (inches part) </description> </item> 

            <item><term> 
             
            OffsetType </term> <description> 
             
            Constant </description> </item> 

            <item><term> 
             
            StartOffset.Value </term> <description> 
             
            10 (millimeters part), 10 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ExcessMaterialBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** version identifiers for the different revisions of the excess material feature.
                             */
                public: enum VersionID
                {
                    VersionIDOriginal/** This feature builder is used to edit an existing NX75 - NX901 excess material feature. */,
                    VersionIDNx902/** This feature builder is used to create or edit an NX902 or beyond feature. */
                };

                /** The feature type */
                public: enum Types
                {
                    TypesExcessMaterial/** excess material placement method */,
                    TypesFitUp/** fit up placement method (added in NX902) */
                };

                /** The offset type (only applicable for excess material, fitup will ignore the offset type) */
                public: enum Offset
                {
                    OffsetConstant/** constant offset */,
                    OffsetLinearVarying/** linear varying */ 
                };

                private: ExcessMaterialBuilderImpl * m_excessmaterialbuilder_impl;
                private: friend class  _ExcessMaterialBuilderBuilder;
                protected: ExcessMaterialBuilder();
                public: ~ExcessMaterialBuilder();
                /**Returns  the selection face.  The selected face will be offset by the specified distance. 
                 <br>  @deprecated Deprecated in NX8.0.0.  Use @link NXOpen::Features::ShipDesign::ExcessMaterialBuilder::SelectFaces NXOpen::Features::ShipDesign::ExcessMaterialBuilder::SelectFaces@endlink  instead. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX8.0.0.  Use NXOpen::Features::ShipDesign::ExcessMaterialBuilder::SelectFaces instead.") NXOpen::SelectFace * SelectFace
                (
                );
                /**Returns  the faces that need to have excess material. 
                 <br>  Created in NX8.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * SelectFaces
                (
                );
                /**Returns  the offset distance 
                 <br>  @deprecated Deprecated in NX9.0.2.  Use @link NXOpen::Features::ShipDesign::ExcessMaterialBuilder::StartOffset NXOpen::Features::ShipDesign::ExcessMaterialBuilder::StartOffset@endlink  instead. <br>  

                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NX_DEPRECATED("Deprecated in NX9.0.2.  Use NXOpen::Features::ShipDesign::ExcessMaterialBuilder::StartOffset instead.") NXOpen::Expression * OffsetDistance
                (
                );
                /**Returns  the offset type (only applicable for excess material, fitup will ignore the offset type) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ExcessMaterialBuilder::Offset OffsetType
                (
                );
                /**Sets  the offset type (only applicable for excess material, fitup will ignore the offset type) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetOffsetType
                (
                    NXOpen::Features::ShipDesign::ExcessMaterialBuilder::Offset offsetType /** offsettype */ 
                );
                /**Returns  the start offset (replaces the legacy offset distance property, and is used for both excess material and fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StartOffset
                (
                );
                /**Returns  the end offset (only applicable for excess material with variable offsets, fitup and constant offset excess material will ignore this value) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * EndOffset
                (
                );
                /**Returns  the extend start side face option (not applicable for fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: bool ExtendStartFace
                (
                );
                /**Sets  the extend start side face option (not applicable for fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetExtendStartFace
                (
                    bool extendStartFace /** extendstartface */ 
                );
                /**Returns  the extend end side face option (not applicable for fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: bool ExtendEndFace
                (
                );
                /**Sets  the extend end side face option (not applicable for fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetExtendEndFace
                (
                    bool extendEndFace /** extendendface */ 
                );
                /**Returns  the feature type (ie excess material or fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ExcessMaterialBuilder::Types Type
                (
                );
                /**Sets  the feature type (ie excess material or fitup) 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_mfg_prep ("Ship Manufacturing") */
                public: void SetType
                (
                    NXOpen::Features::ShipDesign::ExcessMaterialBuilder::Types type /** type */ 
                );
                /**Returns  the version of the feature (used to determine which properties and methods are applicable) during edit.  The version of new features during create will be NX902 
                 <br>  Created in NX9.0.2.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::ExcessMaterialBuilder::VersionID Version
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
