#ifndef NXOpen_FEATURES_FEATURECOLORMANAGER_HXX_INCLUDED
#define NXOpen_FEATURES_FEATURECOLORMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_FeatureColorManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class FeatureColorManager;
    }
    class Session;
    namespace Features
    {
        class FeatureColorManagerImpl;
        /** Represents the Feature Color Manager class. <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  FeatureColorManager
        {
            private: FeatureColorManagerImpl * m_featurecolormanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit FeatureColorManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static FeatureColorManager* theFeatureColorManager;
            /** Returns the FeatureColorManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static FeatureColorManager* GetFeatureColorManager(NXOpen::Session *owner);
            public: ~FeatureColorManager();
            /** Starts or stops assigning color to newly created features
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAssignColorToNewFeature
            (
                bool assignColor /** assigncolor */ 
            );
            /** Gets state of assign color to newly created features
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: bool GetAssignColorToNewFeature
            (
            );
            /** Sets a color that will be applied to newly created feature
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetColorForNewFeature
            (
                int color /** color */ 
            );
            /** Gets a color that will be applied to newly created feature
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: int GetColorForNewFeature
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
