#ifndef NXOpen_CAE_RESPONSESIMULATION_RSEVENTPARAMETERS_HXX_INCLUDED
#define NXOpen_CAE_RESPONSESIMULATION_RSEVENTPARAMETERS_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ResponseSimulation_RSEventParameters.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_ResponseSimulation_RSEvent.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class RSEventParameters;
        }
    }
    namespace CAE
    {
        class ModelingObjectPropertyTable;
    }
    namespace CAE
    {
        namespace ResponseSimulation
        {
            class _RSEventParametersBuilder;
            class RSEventParametersImpl;
            /** Reprensents the parameters of the random base excitation event 
             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  RSEventParameters : public NXOpen::TaggedObject
            {
                private: RSEventParametersImpl * m_rseventparameters_impl;
                private: friend class  _RSEventParametersBuilder;
                protected: RSEventParameters();
                public: ~RSEventParameters();
                /**Returns  the confidence level option 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RSEvent::ConfidenceLevelOption ConfidenceLevelOption
                (
                );
                /**Sets  the confidence level option 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetConfidenceLevelOption
                (
                    NXOpen::CAE::ResponseSimulation::RSEvent::ConfidenceLevelOption confidenceLevelOption /** confidence level option */ 
                );
                /**Returns  the confidence level value 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: double ConfidenceLevel
                (
                );
                /**Sets  the confidence level value 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetConfidenceLevel
                (
                    double confidenceLevel /** confidence level */ 
                );
                /**Returns  the standard deviation value 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: double StandardDeviation
                (
                );
                /**Sets  the standard deviation value 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetStandardDeviation
                (
                    double standardDeviation /** standard deviation */ 
                );
                /**Returns  the confidence level option 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ResponseSimulation::RSEvent::ReferenceType ReferenceType
                (
                );
                /**Sets  the confidence level option 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetReferenceType
                (
                    NXOpen::CAE::ResponseSimulation::RSEvent::ReferenceType referenceType /** reference type */ 
                );
                /**Returns  the residual vector static contribution 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: bool StaticContributions
                (
                );
                /**Sets  the residual vector static contribution 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetStaticContributions
                (
                    bool staticOntributions /** static ontributions */ 
                );
                /**Returns  the Random output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ModelingObjectPropertyTable * RandomOutputRequestObject
                (
                );
                /**Sets  the Random output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetRandomOutputRequestObject
                (
                    NXOpen::CAE::ModelingObjectPropertyTable * ssmo /** ssmo */ 
                );
                /**Returns  the output request modeling object 
                 <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject@endlink  instead. <br>  

                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject instead.") NXOpen::CAE::ModelingObjectPropertyTable * OutputRequestObject
                (
                );
                /**Sets  the output request modeling object 
                 <br>  @deprecated Deprecated in NX1980.0.0.  Use @link NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject@endlink  instead. <br>  

                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NX_DEPRECATED("Deprecated in NX1980.0.0.  Use NXOpen::CAE::ResponseSimulation::RSEventParameters::RandomOutputRequestObject instead.") void SetOutputRequestObject
                (
                    NXOpen::CAE::ModelingObjectPropertyTable * ssmo /** ssmo */ 
                );
                /**Returns  the Sine output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ModelingObjectPropertyTable * SineOutputRequestObject
                (
                );
                /**Sets  the Sine output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetSineOutputRequestObject
                (
                    NXOpen::CAE::ModelingObjectPropertyTable * ssmo /** ssmo */ 
                );
                /**Returns  the Frequency output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: NXOpen::CAE::ModelingObjectPropertyTable * FrequencyOutputRequestObject
                (
                );
                /**Sets  the Frequency output request modeling object 
                 <br>  Created in NX1980.0.0.  <br>  
                 <br> License requirements : nx_response_anlys ("NX Response Analysis") */
                public: void SetFrequencyOutputRequestObject
                (
                    NXOpen::CAE::ModelingObjectPropertyTable * ssmo /** ssmo */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
