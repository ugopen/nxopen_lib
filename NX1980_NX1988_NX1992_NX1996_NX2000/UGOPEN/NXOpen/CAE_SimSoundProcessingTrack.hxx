#ifndef NXOpen_CAE_SIMSOUNDPROCESSINGTRACK_HXX_INCLUDED
#define NXOpen_CAE_SIMSOUNDPROCESSINGTRACK_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_SimSoundProcessingTrack.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SimSoundProcessingImpulseResponse.hxx>
#include <NXOpen/CAE_SimSoundProcessingSource.hxx>
#include <NXOpen/CAE_SimSoundProcessingTreatment.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class SimSoundProcessingTrack;
    }
    namespace CAE
    {
        class SimSoundProcessingImpulseResponse;
    }
    namespace CAE
    {
        class SimSoundProcessingSource;
    }
    namespace CAE
    {
        class SimSoundProcessingTreatment;
    }
    class NXObject;
    namespace CAE
    {
        class _SimSoundProcessingTrackBuilder;
        class SimSoundProcessingTrackImpl;
        /**  @brief  Represents a Sound Processing track object  

         
         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  SimSoundProcessingTrack : public NXOpen::NXObject
        {
            private: SimSoundProcessingTrackImpl * m_simsoundprocessingtrack_impl;
            private: friend class  _SimSoundProcessingTrackBuilder;
            protected: SimSoundProcessingTrack();
            public: ~SimSoundProcessingTrack();
            /**Returns  the source. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimSoundProcessingSource * Source
            (
            );
            /**Sets  the source. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetSource
            (
                NXOpen::CAE::SimSoundProcessingSource * source /** source */ 
            );
            /**Returns  the treatment. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimSoundProcessingTreatment * Treatment
            (
            );
            /**Sets  the treatment. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetTreatment
            (
                NXOpen::CAE::SimSoundProcessingTreatment * treatment /** treatment */ 
            );
            /**Returns  the impulse response. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::SimSoundProcessingImpulseResponse * ImpulseResponse
            (
            );
            /**Sets  the impulse response. 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetImpulseResponse
            (
                NXOpen::CAE::SimSoundProcessingImpulseResponse * impulseResponse /** impulseresponse */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
