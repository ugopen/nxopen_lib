#ifndef NXOpen_CAE_CONNECTIONS_LMIEERROR_HXX_INCLUDED
#define NXOpen_CAE_CONNECTIONS_LMIEERROR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Connections_LMIEError.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Connections
        {
            class LMIEError;
        }
    }
    class NXObject;
    namespace CAE
    {
        namespace Connections
        {
            class _LMIEErrorBuilder;
            class LMIEErrorImpl;
            /**  LMIEError   <br> No creator  <br> 
             <br>  Created in NX1847.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  LMIEError : public NXOpen::NXObject
            {
                private: LMIEErrorImpl * m_lmieerror_impl;
                private: friend class  _LMIEErrorBuilder;
                protected: LMIEError();
                public: ~LMIEError();
                /** The error messages  @return  The error messages 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetErrorMessages
                (
                );
                /** The error codes  @return  The error codes 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetErrorCodes
                (
                );
                /** The error values for an error  @return  The error values for an error 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetErrorValues
                (
                    int errorIndex /** errorindex */ 
                );
                /** Has errors 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: bool HasErrors
                (
                );
                /** The warning codes  @return  The warning codes 
                 <br>  Created in NX1847.0.0.  <br>  
                 <br> License requirements : None */
                public: std::vector<NXString> GetWarningCodes
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
