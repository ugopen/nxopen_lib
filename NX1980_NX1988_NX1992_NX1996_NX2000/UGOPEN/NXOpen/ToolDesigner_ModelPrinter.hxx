#ifndef NXOpen_TOOLDESIGNER_MODELPRINTER_HXX_INCLUDED
#define NXOpen_TOOLDESIGNER_MODELPRINTER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     ToolDesigner_ModelPrinter.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/BasePart.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libtooldesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace ToolDesigner
    {
        class ModelPrinter;
    }
    class Session;
    class Part;
    namespace ToolDesigner
    {
        class ModelPrinterImpl;

        /// \cond NX_NO_DOC 
        /** Represents a class that is used for NX testing.  This class should not
            be made available to customers  <br> Use the static method in this class to obtain an instance.  <br> 
         <br>  Created in NX1851.0.0.  <br>  
        */
        class TOOLDESIGNEROPENCPPEXPORT  ModelPrinter
        {
            private: ModelPrinterImpl * m_modelprinter_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit ModelPrinter(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static ModelPrinter* theModelPrinter;
            /** Returns the ModelPrinter object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static ModelPrinter* GetModelPrinter(NXOpen::Session *owner);
            public: ~ModelPrinter();

            /// \cond NX_NO_DOC 
            /** Print fixture root node to the xml. 
             <br>  Created in NX1851.0.0.  <br>  
             <br> License requirements : None */
            public: void FixtureRootNode
            (
                NXOpen::Part * part /** the part with the dbnode */
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /** Print all unit designs and state. 
             <br>  Created in NX1851.0.0.  <br>  
             <br> License requirements : None */
            public: void UnitDesignDetails
            (
                NXOpen::Part * part /** the part with the units */
            );

            /// \endcond 
        }; //lint !e1712 default constructor not defined for class  


        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
