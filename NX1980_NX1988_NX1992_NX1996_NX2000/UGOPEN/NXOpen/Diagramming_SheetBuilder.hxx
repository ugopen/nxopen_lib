#ifndef NXOpen_DIAGRAMMING_SHEETBUILDER_HXX_INCLUDED
#define NXOpen_DIAGRAMMING_SHEETBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Diagramming_SheetBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Diagramming_DataType.hxx>
#include <NXOpen/Diagramming_SheetElement.hxx>
#include <NXOpen/Diagramming_BaseObjectBuilder.hxx>
#include <NXOpen/libnxopencpp_diagramming_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Diagramming
    {
        class SheetBuilder;
    }
    namespace Diagramming
    {
        class BaseObjectBuilder;
    }
    namespace Diagramming
    {
        class SheetElement;
    }
    class Unit;
    namespace Diagramming
    {
        class _SheetBuilderBuilder;
        class SheetBuilderImpl;
        /**
            Represents a SheetBuilder.
             <br> To create a new instance of this class, use @link NXOpen::Diagramming::SheetCollection::CreateSheetBuilder  NXOpen::Diagramming::SheetCollection::CreateSheetBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_DIAGRAMMINGEXPORT  SheetBuilder : public NXOpen::Diagramming::BaseObjectBuilder
        {
            private: SheetBuilderImpl * m_sheetbuilder_impl;
            private: friend class  _SheetBuilderBuilder;
            protected: SheetBuilder();
            public: ~SheetBuilder();
            /**Returns  the flag if jumpers are allowed to use where connections cross. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: bool AllowJumpers
            (
            );
            /**Sets  the flag if jumpers are allowed to use where connections cross. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetAllowJumpers
            (
                bool allowJumper /** allowjumper */ 
            );
            /**Returns  the jumper type of the sheet. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Diagramming::DiagrammingJumpertype JumperType
            (
            );
            /**Sets  the jumper type of the sheet. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetJumperType
            (
                NXOpen::Diagramming::DiagrammingJumpertype jumperType /** jumpertype */ 
            );
            /** Gets all features. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Diagramming::SheetElement *> GetFeatures
            (
            );
            /**Returns  the opacity of sheet. 0.0 is completely transparent and 1.0 is completely opaque
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: double Opacity
            (
            );
            /**Sets  the opacity of sheet. 0.0 is completely transparent and 1.0 is completely opaque
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOpacity
            (
                double opacity /** opacity */ 
            );
            /** Gets all sheet elements. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: std::vector<NXOpen::Diagramming::SheetElement *> GetSheetElements
            (
            );
            /** Gets the height and width of this sheet. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void GetSize
            (
                double* height /** height */ ,
                double* width /** width */ 
            );
            /** Sets the height and width of this sheet. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetSize
            (
                double height /** height */ ,
                double width /** width */ 
            );
            /**Returns  the units of the sheet. It could be either "meters" or "inches". 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Unit * Units
            (
            );
            /**Sets  the units of the sheet. It could be either "meters" or "inches". 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: void SetUnits
            (
                NXOpen::Unit * unit /** unit */ 
            );
            /**Returns  the flag to update pax file or not.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: bool UpdatePAXFile
            (
            );
            /**Sets  the flag to update pax file or not.
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetUpdatePAXFile
            (
                bool updatePAXFile /** updatepaxfile */ 
            );
            /**Returns  the presentation name that will be visible in the "Presentation" column of the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString PresentationName
            (
            );
            /**Sets  the presentation name that will be visible in the "Presentation" column of the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetPresentationName
            (
                const NXString & presentationName /** presentationname */ 
            );
            /**Sets  the presentation name that will be visible in the "Presentation" column of the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SetPresentationName
            (
                const char * presentationName /** presentationname */ 
            );
            /**Returns  the description that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the tooltip that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString ToolTip
            (
            );
            /**Sets  the tooltip that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetToolTip
            (
                const NXString & toolTip /** tooltip */ 
            );
            /**Sets  the tooltip that will be visible when a template is selected in the Item Rev dialog. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SetToolTip
            (
                const char * toolTip /** tooltip */ 
            );
            /**Returns  the path name of the PAX file to which the template will be written to. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: NXString PaxFileName
            (
            );
            /**Sets  the path name of the PAX file to which the template will be written to. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            public: void SetPaxFileName
            (
                const NXString & paxFileName /** paxfilename */ 
            );
            /**Sets  the path name of the PAX file to which the template will be written to. 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : None */
            void SetPaxFileName
            (
                const char * paxFileName /** paxfilename */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
