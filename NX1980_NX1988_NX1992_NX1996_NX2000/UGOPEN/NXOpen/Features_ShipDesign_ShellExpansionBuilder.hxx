#ifndef NXOpen_FEATURES_SHIPDESIGN_SHELLEXPANSIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_SHELLEXPANSIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_ShellExpansionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/Section.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class ShellExpansionBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    class ScCollector;
    class Section;
    class SelectDatumPlane;
    namespace Features
    {
        namespace ShipDesign
        {
            class _ShellExpansionBuilderBuilder;
            class ShellExpansionBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::ShipDesign::ShellExpansion NXOpen::Features::ShipDesign::ShellExpansion@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateShellExpansionBuilder  NXOpen::Features::ShipCollection::CreateShellExpansionBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            AdditionalPlanesPerFrame </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Associative </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            MapFaceEdges </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            MapTransverseFrames </term> <description> 
             
            1 </description> </item> 

            <item><term> 
             
            Tolerance </term> <description> 
             
            1.0 </description> </item> 

            </list> 

             <br>  Created in NX7.5.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ShellExpansionBuilder : public NXOpen::Features::FeatureBuilder
            {
                private: ShellExpansionBuilderImpl * m_shellexpansionbuilder_impl;
                private: friend class  _ShellExpansionBuilderBuilder;
                protected: ShellExpansionBuilder();
                public: ~ShellExpansionBuilder();
                /**Returns  the faces to flatten 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * FacesToFlatten
                (
                );
                /**Returns  the base plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDatumPlane * BasePlane
                (
                );
                /**Returns  the upper limit plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDatumPlane * UpperLimitPlane
                (
                );
                /**Returns  the fore limit plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDatumPlane * ForeLimitPlane
                (
                );
                /**Returns  the aft limit plane 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectDatumPlane * AftLimitPlane
                (
                );
                /**Returns  the curves to map 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Section * CurvesToMap
                (
                );
                /**Returns  the map face edges 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool MapFaceEdges
                (
                );
                /**Sets  the map face edges 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetMapFaceEdges
                (
                    bool mapFaceEdges /** mapfaceedges */ 
                );
                /**Returns  the map transverse frames 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool MapTransverseFrames
                (
                );
                /**Sets  the map transverse frames 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetMapTransverseFrames
                (
                    bool mapTransverseFrames /** maptransverseframes */ 
                );
                /**Returns  a flag that determines if output is associative (only used during creation). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: bool Associative
                (
                );
                /**Sets  a flag that determines if output is associative (only used during creation). 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAssociative
                (
                    bool associative /** associative */ 
                );
                /**Returns  the additional planes per frame 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: int AdditionalPlanesPerFrame
                (
                );
                /**Sets  the additional planes per frame 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetAdditionalPlanesPerFrame
                (
                    int additionalPlanesPerFrame /** additionalplanesperframe */ 
                );
                /**Returns  the tolerance 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : None */
                public: double Tolerance
                (
                );
                /**Sets  the tolerance 
                 <br>  Created in NX7.5.0.  <br>  
                 <br> License requirements : nx_ship_concept ("Ship Concept") OR nx_ship_basic ("Ship Basic Design") OR nx_ship_detail ("Ship Detail Design") */
                public: void SetTolerance
                (
                    double tolerance /** tolerance */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
