#ifndef NXOpen_NXMESSAGEBOX_HXX_INCLUDED
#define NXOpen_NXMESSAGEBOX_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     NXMessageBox.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopenuicpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class NXMessageBox;
    class UI;
    class NXMessageBoxImpl;
    /** Displays message box. 
    Note: The number of lines displayed in the message box can vary based on Operating System and
          Screen Resolution  <br> To obtain an instance of this class, refer to @link NXOpen::UI  NXOpen::UI @endlink  <br> 
     <br>  Created in NX5.0.0.  <br>  
    */
    class NXOPENUICPPEXPORT  NXMessageBox
    {
        /** Describes type of message box. */
        public: enum DialogType
        {
            DialogTypeError/** Error */,
            DialogTypeWarning/** Warning */,
            DialogTypeInformation/** Informattion */,
            DialogTypeQuestion/** Question */
        };

        private: NXMessageBoxImpl * m_nxmessagebox_impl;
        private: NXOpen::UI* m_owner;
        /// \cond NX_NO_DOC 
        public: explicit NXMessageBox(NXOpen::UI *owner);


        /// \endcond 
        public: 
        /**Returns the tag of this object.  */
        tag_t Tag() const; 
        public: ~NXMessageBox();
        /** Show message box.
            Note: User input into message box will not be translated as there is no guaranteed the input is translatable. @return  Return value from Message Box.  If of type @link NXMessageBox::DialogTypeQuestion NXMessageBox::DialogTypeQuestion@endlink  
            then the value will be 1 for yes or 2 for no.  Otherwise the returned value will be -2.  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: int Show
        (
            const NXString & title /** Title */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            const NXString & message /** Message */
        );
        /** Show message box.
            Note: User input into message box will not be translated as there is no guaranteed the input is translatable. @return  Return value from Message Box.  If of type @link NXMessageBox::DialogTypeQuestion NXMessageBox::DialogTypeQuestion@endlink  
            then the value will be 1 for yes or 2 for no.  Otherwise the returned value will be -2.  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        int Show
        (
            const char * title /** Title */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            const char * message /** Message */
        );
        /** Show message box. 
            Note: User input into message box will not be translated as there is no guaranteed the input is translatable. @return   Return value from Message Box.  If of type @link NXMessageBox::DialogTypeQuestion NXMessageBox::DialogTypeQuestion@endlink  
            then the value will be 1 for yes or 2 for no.  Otherwise the returned value will be -2.  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        public: int Show
        (
            const NXString & title /** Title */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            std::vector<NXString> & messages /** Multi-line message */
        );
        /** Show message box. 
            Note: User input into message box will not be translated as there is no guaranteed the input is translatable. @return   Return value from Message Box.  If of type @link NXMessageBox::DialogTypeQuestion NXMessageBox::DialogTypeQuestion@endlink  
            then the value will be 1 for yes or 2 for no.  Otherwise the returned value will be -2.  
         <br>  Created in NX5.0.0.  <br>  
         <br> License requirements : None */
        int Show
        (
            const char * title /** Title */,
            NXOpen::NXMessageBox::DialogType msgboxType /** Message box type */,
            std::vector<NXString> & messages /** Multi-line message */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
