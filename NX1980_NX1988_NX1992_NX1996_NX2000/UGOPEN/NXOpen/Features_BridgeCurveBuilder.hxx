#ifndef NXOpen_FEATURES_BRIDGECURVEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_BRIDGECURVEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_BridgeCurveBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/GeometricUtilities_CurveFitData.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class BridgeCurveBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace GeometricUtilities
    {
        class CurveFitData;
    }
    class Point;
    class ScCollector;
    class SelectObject;
    namespace Features
    {
        class _BridgeCurveBuilderBuilder;
        class BridgeCurveBuilderImpl;
        /**
            Represents a @link NXOpen::Features::BridgeCurve NXOpen::Features::BridgeCurve@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::FeatureCollection::CreateBridgeCurveBuilder  NXOpen::Features::FeatureCollection::CreateBridgeCurveBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        CurveFitData.CurveJoinMethod </term> <description> 
         
        No </description> </item> 

        <item><term> 
         
        CurveFitData.Degree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveFitData.FitMethod </term> <description> 
         
        DegreeAndSegments </description> </item> 

        <item><term> 
         
        CurveFitData.IsAdvancedFit </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveFitData.IsAlignShape </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        CurveFitData.MaximumDegree </term> <description> 
         
        7 </description> </item> 

        <item><term> 
         
        CurveFitData.MaximumSegments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        CurveFitData.MinimumDegree </term> <description> 
         
        5 </description> </item> 

        <item><term> 
         
        CurveFitData.Segments </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        Depth.Value </term> <description> 
         
        50 </description> </item> 

        <item><term> 
         
        EndDirectionAngle.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        EndTangentMagnitude.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        IsAssociative </term> <description> 
         
        True </description> </item> 

        <item><term> 
         
        MinimumRadiusValue.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        ReverseEndDirection </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        ReverseStartDirection </term> <description> 
         
        False </description> </item> 

        <item><term> 
         
        Rho.Value </term> <description> 
         
        0.5 </description> </item> 

        <item><term> 
         
        Skew.Value </term> <description> 
         
        50 </description> </item> 

        <item><term> 
         
        StartDirectionAngle.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        StartTangentMagnitude.Value </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        UPercentEnd.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        UPercentStart.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        VPercentEnd.Value </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        VPercentStart.Value </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

         <br>  Created in NX5.0.0.  <br>  
        */
        class NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOPENCPP_FEATURESEXPORT  BridgeCurveBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** This enum represents the current selected end object types for the bridge curve */
            public: enum EndObjectTypes
            {
                EndObjectTypesObject/** allowed end object type except a vector object*/,
                EndObjectTypesVector/** vector object */
            };

            /** This enum represents the current selected object for the bridge curve */
            public: enum SelectedObject
            {
                SelectedObjectOne/** input object 1 selected */,
                SelectedObjectTwo/** input object 2 selected */
            };

            /** This enum represents the end continuity constraint types for the bridge curve */
            public: enum ConstraintTypes
            {
                ConstraintTypesG0/** G0 continuity */,
                ConstraintTypesG1/** G1 continuity */,
                ConstraintTypesG2/** G2 continuity */,
                ConstraintTypesG3/** G3 continuity*/
            };

            /** This enum represents the direction type for input curves */
            public: enum CurveDirectionTypes
            {
                CurveDirectionTypesTangent/** bridge direction takes the tangent direction 
                                                                                               of the base curve at the selected point */,
                CurveDirectionTypesPerpendicular/** bridge direction takes the direction that is 
                                                                                               perpendicular to the tangent direction 
                                                                                               of the base curve at the selected point */
            };

            /** This enum represents the direction type for input surfaces */
            public: enum SurfaceDirectionTypes
            {
                SurfaceDirectionTypesSectional/** bridge direction takes non-isoparametric direction 
                                                                                              of the base surface at the selected point */,
                SurfaceDirectionTypesIsoU/** bridge direction takes u-isoparametric direction 
                                                                                              of the base surface at the selected point */,
                SurfaceDirectionTypesIsoV/** bridge direction takes v-isoparametric direction 
                                                                                              of the base surface at the selected point */
            };

            /** This enum represents the minimum radius types for the bridge curve */
            public: enum MinRadiusTypes
            {
                MinRadiusTypesNone/** no minimum radius */,
                MinRadiusTypesMinimum/** regular */,
                MinRadiusTypesPeak/** peak */
            };

            /** This enum represents the shape control types for the bridge curve */
            public: enum ShapeControlTypes
            {
                ShapeControlTypesEndPoint/** end point conditions */,
                ShapeControlTypesPeakPoint/** peak point conditions */,
                ShapeControlTypesConic/** conic parameter */,
                ShapeControlTypesShapeCurve/** shape curve*/
            };

            /** This enum represents the curve fit types for the bridge curve */
            public: enum CurveFitTypes
            {
                CurveFitTypesCubic/** fit curve with 3 degrees */,
                CurveFitTypesQuintic/** fit curve with 5 degrees */,
                CurveFitTypesAdvanced/** general fit curve */
            };

            private: BridgeCurveBuilderImpl * m_bridgecurvebuilder_impl;
            private: friend class  _BridgeCurveBuilderBuilder;
            protected: BridgeCurveBuilder();
            public: ~BridgeCurveBuilder();
            /**Returns  the start object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::SelectObject * StartObject
            (
            );
            /**Returns  the object selection option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::EndObjectTypes EndObjectOption
            (
            );
            /**Sets  the object selection option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndObjectOption
            (
                NXOpen::Features::BridgeCurveBuilder::EndObjectTypes endObjectOption /** endobjectoption */ 
            );
            /**Returns  the end object 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::SelectObject * EndObject
            (
            );
            /**Returns  the start point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Direction * EndVectorObject
            (
            );
            /**Sets  the start point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndVectorObject
            (
                NXOpen::Direction * endVectorObject /** endvectorobject */ 
            );
            /**Returns  the object selection option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::SelectedObject ObjectSelectionOption
            (
            );
            /**Sets  the object selection option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetObjectSelectionOption
            (
                NXOpen::Features::BridgeCurveBuilder::SelectedObject objectSelectionOption /** objectselectionoption */ 
            );
            /**Returns  the start continuity option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::ConstraintTypes StartContinuityOption
            (
            );
            /**Sets  the start continuity option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetStartContinuityOption
            (
                NXOpen::Features::BridgeCurveBuilder::ConstraintTypes startContinuityOption /** startcontinuityoption */ 
            );
            /**Returns  the end continuity option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::ConstraintTypes EndContinuityOption
            (
            );
            /**Sets  the end continuity option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndContinuityOption
            (
                NXOpen::Features::BridgeCurveBuilder::ConstraintTypes endContinuityOption /** endcontinuityoption */ 
            );
            /**Returns  the u percent start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * UPercentStart
            (
            );
            /**Returns  the v percent start 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * VPercentStart
            (
            );
            /**Returns  the u percent end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * UPercentEnd
            (
            );
            /**Returns  the v percent end 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * VPercentEnd
            (
            );
            /**Returns  the start curve direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::CurveDirectionTypes StartCurveDirectionOption
            (
            );
            /**Sets  the start curve direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetStartCurveDirectionOption
            (
                NXOpen::Features::BridgeCurveBuilder::CurveDirectionTypes startCurveDirectionOption /** startcurvedirectionoption */ 
            );
            /**Returns  the end curve direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::CurveDirectionTypes EndCurveDirectionOption
            (
            );
            /**Sets  the end curve direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndCurveDirectionOption
            (
                NXOpen::Features::BridgeCurveBuilder::CurveDirectionTypes endCurveDirectionOption /** endcurvedirectionoption */ 
            );
            /**Returns  the start perpendicular face 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::SelectObject * StartPerpendicularFace
            (
            );
            /**Returns  the end perpendicular face 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::SelectObject * EndPerpendicularFace
            (
            );
            /**Returns  the start surface direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::SurfaceDirectionTypes StartSurfaceDirectionOption
            (
            );
            /**Sets  the start surface direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetStartSurfaceDirectionOption
            (
                NXOpen::Features::BridgeCurveBuilder::SurfaceDirectionTypes startSurfaceDirectionOption /** startsurfacedirectionoption */ 
            );
            /**Returns  the end surface direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::SurfaceDirectionTypes EndSurfaceDirectionOption
            (
            );
            /**Sets  the end surface direction option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndSurfaceDirectionOption
            (
                NXOpen::Features::BridgeCurveBuilder::SurfaceDirectionTypes endSurfaceDirectionOption /** endsurfacedirectionoption */ 
            );
            /**Returns  the start direction angle 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * StartDirectionAngle
            (
            );
            /**Returns  the end direction angle 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * EndDirectionAngle
            (
            );
            /**Returns  the start point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Direction * StartPointDirection
            (
            );
            /**Sets  the start point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetStartPointDirection
            (
                NXOpen::Direction * startPointDirection /** startpointdirection */ 
            );
            /**Returns  the end point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Direction * EndPointDirection
            (
            );
            /**Sets  the end point direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndPointDirection
            (
                NXOpen::Direction * endPointDirection /** endpointdirection */ 
            );
            /**Returns  the reverse start direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") bool ReverseStartDirection
            (
            );
            /**Sets  the reverse start direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetReverseStartDirection
            (
                bool reverseStartDirection /** reversestartdirection */ 
            );
            /**Returns  the reverse end direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") bool ReverseEndDirection
            (
            );
            /**Sets  the reverse end direction 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetReverseEndDirection
            (
                bool reverseEndDirection /** reverseenddirection */ 
            );
            /**Returns  the constraint faces 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::ScCollector * ConstraintFaces
            (
            );
            /**Returns  the minimum radius option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::MinRadiusTypes MinimumRadiusOption
            (
            );
            /**Sets  the minimum radius option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetMinimumRadiusOption
            (
                NXOpen::Features::BridgeCurveBuilder::MinRadiusTypes minimumRadiusOption /** minimumradiusoption */ 
            );
            /**Returns  the minimum radius value 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * MinimumRadiusValue
            (
            );
            /**Returns  the shape control option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::ShapeControlTypes ShapeControlOption
            (
            );
            /**Sets  the shape control option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetShapeControlOption
            (
                NXOpen::Features::BridgeCurveBuilder::ShapeControlTypes shapeControlOption /** shapecontroloption */ 
            );
            /**Returns  the start tangent magnitude for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesEndPoint NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesEndPoint@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * StartTangentMagnitude
            (
            );
            /**Returns  the end tangent magnitude for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesEndPoint NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesEndPoint@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * EndTangentMagnitude
            (
            );
            /**Returns  the depth value for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesPeakPoint NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesPeakPoint@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * Depth
            (
            );
            /**Returns  the skew value for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesPeakPoint NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesPeakPoint@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * Skew
            (
            );
            /**Returns  the rho value for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesConic NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesConic@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Expression * Rho
            (
            );
            /**Returns  the shape curve for shape control option of @link NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesShapeCurve NXOpen::Features::BridgeCurveBuilder::ShapeControlTypesShapeCurve@endlink  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::SelectObject * ShapeCurve
            (
            );
            /**Returns  whether the bridge curve is associative 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") bool IsAssociative
            (
            );
            /**Sets  whether the bridge curve is associative 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetAssociative
            (
                bool associative /** associative */ 
            );
            /**Returns  the curve fit option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Features::BridgeCurveBuilder::CurveFitTypes CurveFitOption
            (
            );
            /**Sets  the curve fit option 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetCurveFitOption
            (
                NXOpen::Features::BridgeCurveBuilder::CurveFitTypes curveFitOption /** curvefitoption */ 
            );
            /**Returns  the maximum degree 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") int MaximumDegree
            (
            );
            /**Sets  the maximum degree 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetMaximumDegree
            (
                int maximumDegree /** maximumdegree */ 
            );
            /**Returns  the maximum segment 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") int MaximumSegment
            (
            );
            /**Sets  the maximum segment 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetMaximumSegment
            (
                int maximumSegment /** maximumsegment */ 
            );
            /**Returns  the tolerance 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") double Tolerance
            (
            );
            /**Sets  the tolerance 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetTolerance
            (
                double tolerance /** tolerance */ 
            );
            /**Returns  the start reference point 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Point * StartReferencePoint
            (
            );
            /**Sets  the start reference point 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetStartReferencePoint
            (
                NXOpen::Point * startReferencePoint /** startreferencepoint */ 
            );
            /**Returns  the start reference point 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::Point * EndReferencePoint
            (
            );
            /**Sets  the start reference point 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX5.0.0.  <br>  
             <br> License requirements : nx_freeform_1 ("basic freeform modeling"), solid_modeling ("SOLIDS MODELING") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") void SetEndReferencePoint
            (
                NXOpen::Point * endReferencePoint /** endreferencepoint */ 
            );
            /**Returns  the curve fitting parameters  
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link NXOpen::Features::BridgeCurveBuilderEx NXOpen::Features::BridgeCurveBuilderEx@endlink  instead. <br>  

             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use NXOpen::Features::BridgeCurveBuilderEx instead.") NXOpen::GeometricUtilities::CurveFitData * CurveFitData
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
