#ifndef NXOpen_CAE_XYPLOT_BASEDISPLAYSTYLESETTING_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_BASEDISPLAYSTYLESETTING_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_BaseDisplayStyleSetting.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Xyplot_IDisplayStyle.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseDisplayStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class IDisplayStyle;
        }
    }
    class TaggedObject;
    namespace CAE
    {
        namespace Xyplot
        {
            class _BaseDisplayStyleSettingBuilder;
            class BaseDisplayStyleSettingImpl;
            /** Represent an abstract object on display style.  <br> not support KF.  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  BaseDisplayStyleSetting : public NXOpen::TaggedObject, public virtual NXOpen::CAE::Xyplot::IDisplayStyle
            {
                private: BaseDisplayStyleSettingImpl * m_basedisplaystylesetting_impl;
                private: friend class  _BaseDisplayStyleSettingBuilder;
                protected: BaseDisplayStyleSetting();
                public: ~BaseDisplayStyleSetting();
                /** Finds the @link  NXOpen::TaggedObject   NXOpen::TaggedObject @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::TaggedObject * Find
                (
                    const NXString & journalIdentifier /** Journal identifier of the object */
                );
                /** Finds the @link  NXOpen::TaggedObject   NXOpen::TaggedObject @endlink  with the given identifier as recorded in a journal. 
                            An object may not return the same value as its JournalIdentifier in different versions of 
                            the software. However newer versions of the software should find the same object when 
                            FindObject is passed older versions of its journal identifier. In general, this method 
                            should not be used in handwritten code and exists to support record and playback of journals.

                            An exception will be thrown if no object can be found with the given journal identifier.  @return  
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                NXOpen::TaggedObject * Find
                (
                    const char * journalIdentifier /** Journal identifier of the object */
                );
                /**Returns  the identifier that would be recorded in a journal for this object. 
                            This may not be the same across different releases of the software. 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString JournalIdentifier
                (
                );
                /** Commits any edits that have been applied to the display style.
                                Triggers the corresponding plot to update graph. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual void CommitChange
                (
                );
                /**Returns  the owner style 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual NXOpen::CAE::Xyplot::IDisplayStyle * Owner
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
