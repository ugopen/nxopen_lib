#ifndef NXOpen_FEATURES_TESTFEATUREBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TESTFEATUREBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TestFeatureBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnewappopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class TestFeatureBuilder;
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class _TestFeatureBuilderBuilder;
        class TestFeatureBuilderImpl;
        /** Represents a Features.Newapp.TestFeature builder.  <br> To create a new instance of this class, use @link NXOpen::Newapp::ApplicationManager::CreateTestFeatureBuilder  NXOpen::Newapp::ApplicationManager::CreateTestFeatureBuilder @endlink  <br> 
         <br>  Created in NX9.0.0.  <br>  
        */
        class NEWAPPOPENCPPEXPORT  TestFeatureBuilder : public NXOpen::Features::FeatureBuilder
        {
            private: TestFeatureBuilderImpl * m_testfeaturebuilder_impl;
            private: friend class  _TestFeatureBuilderBuilder;
            protected: TestFeatureBuilder();
            public: ~TestFeatureBuilder();
            /**Returns  the string value stored in the feature. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: NXString StringField
            (
            );
            /**Sets  the string value stored in the feature. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetStringField
            (
                const NXString & name /** name */ 
            );
            /**Sets  the string value stored in the feature. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            void SetStringField
            (
                const char * name /** name */ 
            );
            /**Returns  the double value stored in the feature. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: double DoubleField
            (
            );
            /**Sets  the double value stored in the feature. 
             <br>  Created in NX9.0.0.  <br>  
             <br> License requirements : None */
            public: void SetDoubleField
            (
                double doubleField /** doublefield */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
