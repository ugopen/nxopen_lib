#ifndef NXOpen_CAE_ASSYFEMODEL_HXX_INCLUDED
#define NXOpen_CAE_ASSYFEMODEL_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AssyFEModel.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_BaseFEModel.hxx>
#include <NXOpen/CAE_IHierarchicalFEModel.hxx>
#include <NXOpen/CAE_IPostScenarioDataSource.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AssyFEModel;
    }
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace CAE
    {
        class BaseFEModel;
    }
    namespace CAE
    {
        class BaseFemPart;
    }
    namespace CAE
    {
        class FEModelOccurrence;
    }
    namespace CAE
    {
        class IFEModel;
    }
    namespace CAE
    {
        class IHierarchicalFEModel;
    }
    namespace CAE
    {
        class IPostScenarioDataSource;
    }
    class CartesianCoordinateSystem;
    class INXObject;
    class TaggedObject;
    namespace CAE
    {
        class _AssyFEModelBuilder;
        class AssyFEModelImpl;
        /**  @brief  This class represents an Assembly Finite Element Model.
                          This class will act as the gateway to the 
                          Finite Element Nodes (@link NXOpen::CAE::FENode NXOpen::CAE::FENode@endlink ) and Elements (@link NXOpen::CAE::FEElement NXOpen::CAE::FEElement@endlink ) in the model. 
                          Only one instance of this class will exist in each assyfem part file 

          
         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AssyFEModel : public NXOpen::CAE::BaseFEModel, public virtual NXOpen::CAE::IHierarchicalFEModel, public virtual NXOpen::CAE::IPostScenarioDataSource
        {
            /** the reposition types */
            public: enum RepositionType
            {
                RepositionTypeAlwaysReposition/**always reposition */,
                RepositionTypeNeverReposition/**never reposition */,
                RepositionTypePrompt/**prompt */
            };

            /** the unmap types */
            public: enum MappedComponentRemovalType
            {
                MappedComponentRemovalTypeKeepAsUnmapped/**keep unmapped */,
                MappedComponentRemovalTypeRemove/**remove */
            };

            private: AssyFEModelImpl * m_assyfemodel_impl;
            private: friend class  _AssyFEModelBuilder;
            protected: AssyFEModel();
            public: ~AssyFEModel();
            /** Finds the @link  NXOpen::NXObject   NXOpen::NXObject @endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::TaggedObject * Find
            (
                const NXString & journalIdentifier /** Journal identifier of the object */
            );
            /** Finds the @link  NXOpen::NXObject   NXOpen::NXObject @endlink  with the given identifier as recorded in a journal. 
                    An object may not return the same value as its JournalIdentifier in different versions of 
                    the software. However newer versions of the software should find the same object when 
                    FindObject is passed older versions of its journal identifier. In general, this method 
                    should not be used in handwritten code and exists to support record and playback of journals.

                    An exception will be thrown if no object can be found with the given journal identifier.  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::TaggedObject * Find
            (
                const char * journalIdentifier /** Journal identifier of the object */
            );
            /** Map a fem part to an assembly component in an assembly fem. 
                      When a FEM component in an Assembly FEM is mapped to an Assembly Component in another CAD Assembly, 
                      the mapped FEM component will use the same orientation as the CAD component and will update 
                      accordingly when the orientation of the CAD component is modified.
                      @return  fem model occurrence that represents the fem part in the assembly FEM 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::FEModelOccurrence * MapFemToAssemblyComponent
            (
                NXOpen::CAE::BaseFemPart * femPart /** base fem part */,
                NXOpen::Assemblies::Component * cadPartOcc /** component in an assembly */,
                bool workLayer /** true = Work layer or false = Original fem layer */
            );
            /** Map a fem part to multiple assembly components in an assembly fem. 
                        When a FEM component in an Assembly FEM is mapped to an Assembly Component in another CAD Assembly, 
                        the mapped FEM component will use the same orientation as the CAD component and will update 
                        accordingly when the orientation of the CAD component is modified.
                      @return  fem model occurrences that represents the fem part in the assembly FEM 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: std::vector<NXOpen::CAE::FEModelOccurrence *> MapFemToMultiAssemblyComponents
            (
                NXOpen::CAE::BaseFemPart * femPart /** base fem part */,
                const std::vector<NXOpen::Assemblies::Component *> & pCadPartOccs /** components in cad assembly to map to */,
                bool workLayer /** true = Work layer or false = Original fem layer */
            );
            /** Returns the @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink  in this assembly fem that corresponds to an @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink .  
                        This relationship would have been originally established through a call to @link CAE::AssyFEModel::MapFemToAssemblyComponent CAE::AssyFEModel::MapFemToAssemblyComponent@endlink .
                      @return  fem occurrence 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::FEModelOccurrence * GetMappedFemOccForAssemblyComponent
            (
                NXOpen::Assemblies::Component * cadPartOcc /** component in an assembly */
            );
            /** Returns the @link NXOpen::Assemblies::Component NXOpen::Assemblies::Component@endlink  in the Cad assembly fem that corresponds to an @link NXOpen::CAE::FEModelOccurrence NXOpen::CAE::FEModelOccurrence@endlink .  
                        This relationship would have been originally established through a call to @link CAE::AssyFEModel::MapFemToAssemblyComponent CAE::AssyFEModel::MapFemToAssemblyComponent@endlink .
                      @return  component in an assembly 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Assemblies::Component * GetAssemblyComponentForMappedFemOcc
            (
                NXOpen::CAE::FEModelOccurrence * femOcc /** fem occurrence */
            );
            /** Unmap a fem part from an assembly component in an assembly fem 
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void UnmapFemFromAssemblyComponent
            (
                NXOpen::Assemblies::Component * cadPartOcc /** component in an assembly */
            );
            /** Remove fem component mapped to assembly component in an assembly fem
                     
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void RemoveFemMappedToAssemblyComponent
            (
                NXOpen::Assemblies::Component * cadPartOcc /** component in an assembly */
            );
            /** Unmap a fem part from an assembly component in an assembly fem and preseve the occurence of the fempart in the assembly 
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void UnmapAndPreserveFemFromAssemblyComponent
            (
                NXOpen::CAE::FEModelOccurrence * femOcc /** fem occurrence */
            );
            /** Get reposition update option
                      @return  reposition option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::AssyFEModel::RepositionType GetRepositionOption
            (
            );
            /** Sets reposition update option
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetRepositionOption
            (
                NXOpen::CAE::AssyFEModel::RepositionType reposOption /** reposition option */
            );
            /** Get unmap update option
                      @return  removal option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::AssyFEModel::MappedComponentRemovalType GetMappedComponentRemovalOption
            (
            );
            /** Sets unmap update option
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetMappedComponentRemovalOption
            (
                NXOpen::CAE::AssyFEModel::MappedComponentRemovalType remOption /** removal option */
            );
            /** Get freeze option
                      @return  freeze option 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: bool GetFreezeOption
            (
            );
            /** Sets freeze option
                     
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetFreezeOption
            (
                bool freezeOption /** freeze option */
            );
            /** Delete any Model Edits that exist on this Assembly FEM. 
                        For example, merging coincident nodes at the assembly level may combine two nodes from different
                        components as a single node. This method will remove these model level edits and revert the model
                        to its original state.
                    
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void DeleteModelEdits
            (
            );
            /** Position a component within an assembly FE Model by a coordinate system. If the @link CAE::AssyFEModel CAE::AssyFEModel@endlink  object
                         on which this method is called is not the work part an error will be thrown. If @link CAE::FEModelOccurrence CAE::FEModelOccurrence@endlink  input is not an immidiate child
                         of the work part in the assembly hierarchy an error will be thrown. If the @link CartesianCoordinateSystem CartesianCoordinateSystem@endlink  argument is not passed in then one will be created in the workpart
                         at the current location of the @link CAE::FEModelOccurrence CAE::FEModelOccurrence@endlink  in the work part. If the @link CartesianCoordinateSystem CartesianCoordinateSystem@endlink  argument is passed
                         in then it will need to be contained within the work part or an error will be thrown. Positioning a component by a Coordinate System is only allowed if the component 
                         has not been previously mapped using @link CAE::AssyFEModel::MapFemToAssemblyComponent CAE::AssyFEModel::MapFemToAssemblyComponent@endlink  or a similar method. If the component has been previously mapped,
                         an error will be thrown.
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void PositionComponentByCoordinateSystem
            (
                NXOpen::CAE::FEModelOccurrence * femOcc /** FE model occurrence of a fem part in the assembly FEM whose position will be controlled by a coordinate system */,
                NXOpen::CartesianCoordinateSystem * csys /** coordinate system that will drive the position of the component within the assembly FE model */
            );
            /** Remove the positioning of a component within as assembly FE Model by a coordinate system.
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void RemovePositioningOfComponentByCoordinateSystem
            (
                NXOpen::CAE::FEModelOccurrence * femOcc /** FE model occurrence of a fem part in the assembly FEM whose position will be controlled by a coordinate system */
            );
            /** Locate the coordinate system that drives the positioning of a component within as assembly FE Model if one exists.
                      @return  coordinate system that drives the position of the component within the assembly FE model 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CartesianCoordinateSystem * LocateCoordinateSystemThatControlsComponentPositioning
            (
                NXOpen::CAE::FEModelOccurrence * femOcc /** FE model occurrence of a fem part in the assembly FEM whose position will be controlled by a coordinate system */
            );
            /** Position immidiate child components within an assembly FE Model by coordinate systems. The child components positioned by coordinate system are all of the immidiate child components that are not mapped to a CAD part.
                        A seperate coordinate system is created for each component.
                        The coordinate systems are created at the current locations of the components. They are labeled sequentially starting with the start label.
                        Valid inputs for the start label are labels higher than 0. If an invalid value is passed in (for example 0), labels assigned will start with 1 higher than the current highest csys label in the part. 
                        The coordinate systems can be queried by @link CAE::AssyFEModel::LocateCoordinateSystemThatControlsComponentPositioning CAE::AssyFEModel::LocateCoordinateSystemThatControlsComponentPositioning@endlink .
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void PositionAllComponentsByCoordinateSystems
            (
                int startLabel /** starting label number to sequentially label the coordinate systems being created*/
            );
            /** Position immidiate child components within an assembly FE Model by coordinate systems.
                        The child components positioned by coordinate system are all of the immidiate child components that are not mapped to a CAD part and are passed into this method.
                        A seperate coordinate system is created for each component.
                        The coordinate systems are created at the current locations of the components. They are labeled sequentially starting with the start label.
                        Valid inputs for the start label are labels higher than 0. If an invalid value is passed in (for example 0), labels assigned will start with 1 higher than the current highest csys label in the part. 
                        The coordinate systems can be queried by @link CAE::AssyFEModel::LocateCoordinateSystemThatControlsComponentPositioning CAE::AssyFEModel::LocateCoordinateSystemThatControlsComponentPositioning@endlink .
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void PositionComponentsByCoordinateSystems
            (
                const std::vector<NXOpen::CAE::FEModelOccurrence *> & femOccs /** FE model occurrences of fem parts in the assembly FEM whose position will be controlled by a coordinate system */,
                int startLabel /** starting label number to sequentially label the coordinate systems being created*/
            );
            /** Remove the positioning (by a coordinate system) of immidiate child components within an assembly FE Model.
                     
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void RemovePositioningOfComponentsByCoordinateSystem
            (
            );
            /**Returns  the parent fem of this object, can be NULL 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual NXOpen::CAE::IFEModel * Parent
            (
            );
            /** Returns the child components of this component  @return  
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : None */
            public: virtual std::vector<NXOpen::CAE::FEModelOccurrence *> GetChildren
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
