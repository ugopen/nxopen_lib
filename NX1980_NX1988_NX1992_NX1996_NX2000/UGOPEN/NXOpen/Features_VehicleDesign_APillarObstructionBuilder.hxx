#ifndef NXOpen_FEATURES_VEHICLEDESIGN_APILLAROBSTRUCTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VEHICLEDESIGN_APILLAROBSTRUCTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VehicleDesign_APillarObstructionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_VehicleDesign_ConfigurationBuilder.hxx>
#include <NXOpen/Features_VehicleDesign_EyeDefinitionBuilder.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace VehicleDesign
        {
            class APillarObstructionBuilder;
        }
    }
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class ConfigurationBuilder;
        }
    }
    namespace Features
    {
        namespace VehicleDesign
        {
            class EyeDefinitionBuilder;
        }
    }
    class Point;
    class ScCollector;
    class SelectNXObjectList;
    namespace Features
    {
        namespace VehicleDesign
        {
            class _APillarObstructionBuilderBuilder;
            class APillarObstructionBuilderImpl;
            /**
                    Represents a @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder NXOpen::Features::VehicleDesign::APillarObstructionBuilder@endlink  used to create or edit
                    a vehicle design @link NXOpen::Features::VehicleDesign::APillarObstruction NXOpen::Features::VehicleDesign::APillarObstruction@endlink  feature.
                     <br> To create a new instance of this class, use @link NXOpen::Features::VehicleDesignCollection::CreateApillarObstructionBuilder  NXOpen::Features::VehicleDesignCollection::CreateApillarObstructionBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            APillarSide </term> <description> 
             
            LeftSide </description> </item> 

            <item><term> 
             
            AnalysisMethod </term> <description> 
             
            APillarGeometry </description> </item> 

            <item><term> 
             
            Configuration.UseStandardLoading </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EyeDefinition.EyeDefinitionType </term> <description> 
             
            EyeFeature </description> </item> 

            <item><term> 
             
            EyeDefinition.EyellipsePercentile </term> <description> 
             
            Per95 </description> </item> 

            <item><term> 
             
            EyeRotationAngle </term> <description> 
             
            30 </description> </item> 

            <item><term> 
             
            GenerateValidationLogFile </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            HeadTurnAngle </term> <description> 
             
            30 </description> </item> 

            <item><term> 
             
            PositionType </term> <description> 
             
            OuterPointofAPillarSection </description> </item> 

            <item><term> 
             
            TargetObstructionAngle </term> <description> 
             
            6 </description> </item> 

            <item><term> 
             
            ViewValidationResults </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  APillarObstructionBuilder : public NXOpen::Features::FeatureBuilder
            {
                /** Represents options of the analysis type and A-pillar obstruction geometry. */
                public: enum AnalysisType
                {
                    AnalysisTypeAPillarGeometry/** Represents calculating and checking obstruction angle by A-Pillar geometry */,
                    AnalysisTypeCreateCriteriaGeometry/** Represents creating criteria geometry by target obstruction angle */
                };

                /** Represents options to create the criteria A-pillar geometry if the option of the analysis method is to create criteria geometry. */
                public: enum Position
                {
                    PositionOuterPointofAPillarSection/** Represents specifying the position criteria geometry by outer point of A-Pillar Section */,
                    PositionOuterEdgeofAPillar/** Represents specifying the position criteria geometry by outer edge of A-Pillar */,
                    PositionEyeHeadTurnAngle/** Represents specifying the position criteria geometry by eye rotation angle or head turn angle */
                };

                /** Represents options to specify the A-pillar geometry location on the left or right side of the driver. */
                public: enum APillarSideType
                {
                    APillarSideTypeLeftSide/** Represents the A-Pillar location on the left side of the driver */,
                    APillarSideTypeRightSide/** Represents the A-Pillar location on the right side of the driver */
                };

                private: APillarObstructionBuilderImpl * m_apillarobstructionbuilder_impl;
                private: friend class  _APillarObstructionBuilderBuilder;
                protected: APillarObstructionBuilder();
                public: ~APillarObstructionBuilder();
                /**Returns  the Vehicle Design Configuration builder to be referenced in the A-Pillar Obstruction Area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::ConfigurationBuilder * Configuration
                (
                );
                /**Sets  the Vehicle Design Configuration builder to be referenced in the A-Pillar Obstruction Area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetConfiguration
                (
                    NXOpen::Features::VehicleDesign::ConfigurationBuilder * configuration /** configuration */ 
                );
                /**Returns  the Vehicle Design Eye Definition builder to be referenced in the A-Pillar Obstruction Area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::EyeDefinitionBuilder * EyeDefinition
                (
                );
                /**Sets  the Vehicle Design Eye Definition builder to be referenced in the A-Pillar Obstruction Area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetEyeDefinition
                (
                    NXOpen::Features::VehicleDesign::EyeDefinitionBuilder * eyeDefinition /** eyedefinition */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType@endlink  
                                for the analysis method to be used in the A-pillar Obstruction area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType AnalysisMethod
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType@endlink  
                                for the analysis method to be used in the A-pillar Obstruction area. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAnalysisMethod
                (
                    NXOpen::Features::VehicleDesign::APillarObstructionBuilder::AnalysisType analysisMethod /** analysismethod */ 
                );
                /** Displays an illustration of A-pillar obstruction analysis method. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void Illustration
                (
                );
                /**Returns  the A-pillar geometry specified by the user. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * APillarGeometry
                (
                );
                /**Sets  the A-pillar geometry specified by the user. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAPillarGeometry
                (
                    NXOpen::ScCollector * aPillarGeometry /** apillargeometry */ 
                );
                /**Returns  the additional geometry specified by the user in the A-pillar obstruction analysis. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectNXObjectList * AdditionalGeometry
                (
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position@endlink  for
                                the position type of the criteria geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position PositionType
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position@endlink  for
                                the position type of the criteria geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetPositionType
                (
                    NXOpen::Features::VehicleDesign::APillarObstructionBuilder::Position positionType /** positiontype */ 
                );
                /**Returns  the outer point of the A-pillar geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point * OuterPoint
                (
                );
                /**Sets  the outer point of the A-pillar geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetOuterPoint
                (
                    NXOpen::Point * outerPoint /** outerpoint */ 
                );
                /**Returns  the outer edge of the A-pillar geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * OuterEdge
                (
                );
                /**Sets  the outer edge of the A-pillar geometry for use in the A-pillar obstruction analysis. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetOuterEdge
                (
                    NXOpen::ScCollector * outerEdge /** outeredge */ 
                );
                /**Returns  the target obstruction angle for use in the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double TargetObstructionAngle
                (
                );
                /**Sets  the target obstruction angle for use in the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetTargetObstructionAngle
                (
                    double targetObstructionAngle /** targetobstructionangle */ 
                );
                /**Returns  the eye rotation angle calculated from the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double EyeRotationAngle
                (
                );
                /**Sets  the eye rotation angle calculated from the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetEyeRotationAngle
                (
                    double eyeRotationAngle1 /** eyerotationangle1 */ 
                );
                /**Returns  the head turn angle calculated from the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: double HeadTurnAngle
                (
                );
                /**Sets  the head turn angle calculated from the A-pillar obstruction analysis given the criteria geometry. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetHeadTurnAngle
                (
                    double headTurnAngle /** headturnangle */ 
                );
                /**Returns  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType@endlink  for the
                                A-pillar side indicates the A-pillar geometry location on the left or right side of the driver. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType APillarSide
                (
                );
                /**Sets  the @link NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType@endlink  for the
                                A-pillar side indicates the A-pillar geometry location on the left or right side of the driver. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetAPillarSide
                (
                    NXOpen::Features::VehicleDesign::APillarObstructionBuilder::APillarSideType aPillarSide /** apillarside */ 
                );
                /** Validates the A-Pillar obstruction analysis and shows the validation results. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void ValidationButton
                (
                );
                /**Returns  the indication if the packaging validation gadget is invoked to view the results. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ViewValidationResults
                (
                );
                /**Sets  the indication if the packaging validation gadget is invoked to view the results. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetViewValidationResults
                (
                    bool viewValidationResults /** viewvalidationresults */ 
                );
                /**Returns  the indication if the validation log file is generated. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool GenerateValidationLogFile
                (
                );
                /**Sets  the indication if the validation log file is generated. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_general_packaging ("NX General Packaging") */
                public: void SetGenerateValidationLogFile
                (
                    bool generateValidationLogFile /** generatevalidationlogfile */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
