#ifndef NXOpen_ASSYCLONENAMINGFAILURES_HXX_INCLUDED
#define NXOpen_ASSYCLONENAMINGFAILURES_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AssyCloneNamingFailures.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class AssyCloneNamingFailures;
    class AssyCloneNamingFailuresImpl;
    /** Represents a list of part names with associated status codes. The status
    codes serve to communicate why these parts were not able to export during
    export operation. 

     <br>  Created in NX1926.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  AssyCloneNamingFailures : public NXOpen::TransientObject
    {
        private: AssyCloneNamingFailuresImpl * m_assyclonenamingfailures_impl;
        /// \cond NX_NO_DOC 
        public: explicit AssyCloneNamingFailures(void *ptr);
        /// \endcond 
        /** Free the resources associated with the instance of this class.
            Note: After this method is called, please avoid using the instance passed as an argument to this method.
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~AssyCloneNamingFailures();
        /** This API will return the number of naming failures that occurred during Export operation. 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: int GetNumberOfFailures
        (
        );
        /** Returns the initial name of a particular part the failures apply to. 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetInputPartName
        (
            int partListIndex /** Index into list of input part names */
        );
        /** Returns the final name of a particular part that failures apply to.
            (may be null, since the part name may not have been generated correctly) 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: NXString GetOutputPartName
        (
            int partListIndex /** Index into list of output part names */
        );
        /** Returns the status code for a particular part that failures apply to. 
         <br>  Created in NX1926.0.0.  <br>  
         <br> License requirements : None */
        public: int GetStatus
        (
            int partListIndex /** Index into list of parts */
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
