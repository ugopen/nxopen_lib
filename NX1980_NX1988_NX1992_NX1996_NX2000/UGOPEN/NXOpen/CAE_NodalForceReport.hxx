#ifndef NXOpen_CAE_NODALFORCEREPORT_HXX_INCLUDED
#define NXOpen_CAE_NODALFORCEREPORT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_NodalForceReport.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class NodalForceReport;
    }
    class NXObject;
    namespace CAE
    {
        class _NodalForceReportBuilder;
        class NodalForceReportImpl;
        /**  @brief  Free Body Object.  

          <br> To obtain a instance of this class use an appropriate application data provider.  <br> 
         <br>  Created in NX11.0.2.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  NodalForceReport : public NXOpen::NXObject
        {
            /** Free Body solution subcase selection options*/
            public: enum SubcaseOption
            {
                SubcaseOptionUseSingle/** use single */ ,
                SubcaseOptionUseAll/** use all */ 
            };

            /** Free Body Force Components*/
            public: enum ForceComponent
            {
                ForceComponentGridPointForce/** grid point force */ ,
                ForceComponentGridPointReactionForce/** grid point reaction force */ ,
                ForceComponentGridPointAppliedForce/** grid point applied force */ ,
                ForceComponentGridPointReactionForceMPC/** grid point reaction force mpc */ ,
                ForceComponentReaction/** reaction */ ,
                ForceComponentMpc/** mpc */ ,
                ForceComponentApplied/** applied */ ,
                ForceComponentGlue/** glue */ ,
                ForceComponentContact/** contact */ 
            };

            private: NodalForceReportImpl * m_nodalforcereport_impl;
            private: friend class  _NodalForceReportBuilder;
            protected: NodalForceReport();
            public: ~NodalForceReport();
            /**  Information of the free body results.
             <br>  Created in NX11.0.2.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void Information
            (
            );
            /**To Plot the graph accross iterations for the selected NFR 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void CreateGraphAcrossIterations
            (
                bool forceTogglevalue /** forcetogglevalue */ ,
                bool momentToggleValue /** momenttogglevalue */ ,
                const NXString & graphNamePrefix /** graphnameprefix */ 
            );
            /**To Plot the graph accross iterations for the selected NFR 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void CreateGraphAcrossIterations
            (
                bool forceTogglevalue /** forcetogglevalue */ ,
                bool momentToggleValue /** momenttogglevalue */ ,
                const char * graphNamePrefix /** graphnameprefix */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
