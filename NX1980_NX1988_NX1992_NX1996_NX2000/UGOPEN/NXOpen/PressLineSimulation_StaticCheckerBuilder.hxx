#ifndef NXOpen_PRESSLINESIMULATION_STATICCHECKERBUILDER_HXX_INCLUDED
#define NXOpen_PRESSLINESIMULATION_STATICCHECKERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     PressLineSimulation_StaticCheckerBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libpresslinesimulopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace PressLineSimulation
    {
        class StaticCheckerBuilder;
    }
    class Builder;
    namespace PressLineSimulation
    {
        class _StaticCheckerBuilderBuilder;
        class StaticCheckerBuilderImpl;
        /** This builder allows to start static collision checking in the NX Press applications.  <br> To create a new instance of this class, use @link NXOpen::PressLineSimulation::ApplicationManager::CreateCollisionStaticCheckerBuilder  NXOpen::PressLineSimulation::ApplicationManager::CreateCollisionStaticCheckerBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ValidationType </term> <description> 
         
        Die </description> </item> 

        </list> 

         <br>  Created in NX1953.0.0.  <br>  
        */
        class PRESSLINESIMULOPENCPPEXPORT  StaticCheckerBuilder : public NXOpen::Builder
        {
            /** the validation type of the static collision checking*/
            public: enum Validation
            {
                ValidationExternal/** external */ ,
                ValidationDie/** die */ 
            };

            private: StaticCheckerBuilderImpl * m_staticcheckerbuilder_impl;
            private: friend class  _StaticCheckerBuilderBuilder;
            protected: StaticCheckerBuilder();
            public: ~StaticCheckerBuilder();
            /**Returns  the validation type property of the static collision checking
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::PressLineSimulation::StaticCheckerBuilder::Validation ValidationType
            (
            );
            /**Sets  the validation type property of the static collision checking
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") OR nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetValidationType
            (
                NXOpen::PressLineSimulation::StaticCheckerBuilder::Validation validationType /** validationtype */ 
            );
            /** Method to start the static collision checking
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") OR nx_pls_line_setup (" NX Press Line Setup") */
            public: void CollisionCheck
            (
            );
            /**Returns  the faceting tolerance used to create the facet model for the collision
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: double FacetingTolerance
            (
            );
            /**Sets  the faceting tolerance used to create the facet model for the collision
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_pls_die_checker (" NX Press Die Checker") OR nx_pls_line_setup (" NX Press Line Setup") */
            public: void SetFacetingTolerance
            (
                double facetingTolerance /** facetingtolerance */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
