#ifndef NXOpen_OPENXML_IMAGEGROUPDOCUMENTDATA_HXX_INCLUDED
#define NXOpen_OPENXML_IMAGEGROUPDOCUMENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     OpenXml_ImageGroupDocumentData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/OpenXml_DocumentData.hxx>
#include <NXOpen/OpenXml_ImageDocumentData.hxx>
#include <NXOpen/libnxopencpp_openxml_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace OpenXml
    {
        class ImageGroupDocumentData;
    }
    namespace OpenXml
    {
        class DocumentData;
    }
    namespace OpenXml
    {
        class ImageDocumentData;
    }
    namespace OpenXml
    {
    }
    namespace OpenXml
    {
        class ImageGroupDocumentDataImpl;
        /** Represents the group of images to be exported to the speific Open XML file. 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_OPENXMLEXPORT  ImageGroupDocumentData : public NXOpen::OpenXml::DocumentData
        {
            private: ImageGroupDocumentDataImpl * m_imagegroupdocumentdata_impl;
            /// \cond NX_NO_DOC 
            public: explicit ImageGroupDocumentData(void *ptr);
            /// \endcond 
            /** Frees the object from memory.  After this method is called,
                    it is illegal to use the object.  In .NET, this method is automatically
                    called when the object is deleted by the garbage collector.  
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~ImageGroupDocumentData();
            /** Creates a new @link NXOpen::OpenXml::ImageDocumentData NXOpen::OpenXml::ImageDocumentData@endlink  object. @return  the image data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::ImageDocumentData * AddImage
            (
                const NXString & fileName /** the file name of the image data*/,
                const NXString & caption /** the caption of the image data*/
            );
            /** Creates a new @link NXOpen::OpenXml::ImageDocumentData NXOpen::OpenXml::ImageDocumentData@endlink  object. @return  the image data 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::OpenXml::ImageDocumentData * AddImage
            (
                const char * fileName /** the file name of the image data*/,
                const char * caption /** the caption of the image data*/
            );
            /** Gets the number of images  @return  number of images
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: int GetImagesCount
            (
            );
            /** Gets the nth image data @return  the image data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::OpenXml::ImageDocumentData * GetNthImage
            (
                int index /** the index of image data*/
            );
            /** Deletes the nth image data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteNthImage
            (
                int index /** the index of image*/
            );
            /** Deletes all images data
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void DeleteAllImages
            (
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
