#ifndef NXOpen_CAE_DPREXCITERCONFIG_HXX_INCLUDED
#define NXOpen_CAE_DPREXCITERCONFIG_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DprExciterConfig.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PreTestExciterConfig.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DprExciterConfig;
    }
    namespace CAE
    {
        class PreTestExciterConfig;
    }
    namespace CAE
    {
        class _DprExciterConfigBuilder;
        class DprExciterConfigImpl;
        /** Represent DPR Exciter Config  <br> Not support KF.  <br> 
         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DprExciterConfig : public NXOpen::CAE::PreTestExciterConfig
        {
            /** the sorting method type.*/
            public: enum SortingMethod
            {
                SortingMethodWeightedAverage/** weighted average */ ,
                SortingMethodAverage/** average */ ,
                SortingMethodMaximum/** maximum */ ,
                SortingMethodMinimum/** minimum */ 
            };

            private: DprExciterConfigImpl * m_dprexciterconfig_impl;
            private: friend class  _DprExciterConfigBuilder;
            protected: DprExciterConfig();
            public: ~DprExciterConfig();
            /**Returns  the Sorting Method for DPR 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: NXOpen::CAE::DprExciterConfig::SortingMethod DprSortingMode
            (
            );
            /**Sets  the Sorting Method for DPR 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDprSortingMode
            (
                NXOpen::CAE::DprExciterConfig::SortingMethod sortingMethod /** sortingmethod */ 
            );
            /**Returns  the Number of Driving Points for DPR 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: int DprNumDrivingPoints
            (
            );
            /**Sets  the Number of Driving Points for DPR 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_correl_base ("FE Correlation") */
            public: void SetDprNumDrivingPoints
            (
                int numDrivingPoints /** numdrivingpoints */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
