#ifndef NXOpen_MOTION_DISCRETEDRIVETRAINLAYOUTBUILDER_HXX_INCLUDED
#define NXOpen_MOTION_DISCRETEDRIVETRAINLAYOUTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_DiscreteDrivetrainLayoutBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Motion_LinkAttachmentData.hxx>
#include <NXOpen/Motion_MotionBuilder.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class DiscreteDrivetrainLayoutBuilder;
    }
    class Direction;
    class Expression;
    namespace Motion
    {
        class LinkAttachmentData;
    }
    namespace Motion
    {
        class MotionBuilder;
    }
    class Point;
    class SelectNXObject;
    namespace Motion
    {
        class _DiscreteDrivetrainLayoutBuilderBuilder;
        class DiscreteDrivetrainLayoutBuilderImpl;
        /** Represents a @link Motion::DiscreteDrivetrainLayout Motion::DiscreteDrivetrainLayout@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::Motion::DiscreteDrivetrainBuilder::CreateDiscreteDrivetrainLayoutBuilder  NXOpen::Motion::DiscreteDrivetrainBuilder::CreateDiscreteDrivetrainLayoutBuilder @endlink  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  DiscreteDrivetrainLayoutBuilder : public NXOpen::Motion::MotionBuilder
        {
            /** Discrete drivetrain layout type. */
            public: enum LayoutTypeOption
            {
                LayoutTypeOptionSprocket/** sprocket */ ,
                LayoutTypeOptionWheel/** wheel */ ,
                LayoutTypeOptionGuide/** guide */ ,
                LayoutTypeOptionVibrationDamper/** vibration damper */ 
            };

            /** Discrete drivetrain path side option. */
            public: enum PathSideOption
            {
                PathSideOptionInside/** inside */ ,
                PathSideOptionOutside/** outside */ 
            };

            /** Discrete drivetrain tensioner type. */
            public: enum TensionerTypeOption
            {
                TensionerTypeOptionPivot/** pivot */ ,
                TensionerTypeOptionSlider/** slider */ 
            };

            private: DiscreteDrivetrainLayoutBuilderImpl * m_discretedrivetrainlayoutbuilder_impl;
            private: friend class  _DiscreteDrivetrainLayoutBuilderBuilder;
            protected: DiscreteDrivetrainLayoutBuilder();
            public: ~DiscreteDrivetrainLayoutBuilder();
            /**Returns  the discrete drivetrain layout name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXString Name
            (
            );
            /**Sets  the discrete drivetrain layout name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the discrete drivetrain layout name. Must be unique across all motion elements. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the type of discrete drivetrain layout element. Sprocket is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::LayoutTypeOption LayoutType
            (
            );
            /**Sets  the type of discrete drivetrain layout element. Sprocket is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetLayoutType
            (
                NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::LayoutTypeOption layoutType /** layouttype */ 
            );
            /**Returns  the discrete drivetrain layout attachment. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::LinkAttachmentData * Attachment
            (
            );
            /**Returns  the discrete drivetrain layout sketch. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::SelectNXObject * Sketch
            (
            );
            /**Returns  the side of discrete drivetrain layout element is located on. Inside is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::PathSideOption PathSide
            (
            );
            /**Sets  the side of discrete drivetrain layout element is located on. Inside is the default value. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPathSide
            (
                NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::PathSideOption pathSide /** pathside */ 
            );
            /**Returns  the number of teeth there are on the discrete drivetrain sprocket layout. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * NumTeeth
            (
            );
            /**Returns  the radius of the discrete drivetrain wheel layout. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Expression * Radius
            (
            );
            /**Returns  the add tensioner flag. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: bool AddTensioner
            (
            );
            /**Sets  the add tensioner flag. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetAddTensioner
            (
                bool addTensioner /** addtensioner */ 
            );
            /**Returns  the type of tensioner. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::TensionerTypeOption TensionerType
            (
            );
            /**Sets  the type of tensioner. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetTensionerType
            (
                NXOpen::Motion::DiscreteDrivetrainLayoutBuilder::TensionerTypeOption tensionerType /** tensionertype */ 
            );
            /**Returns  the selection of pivot point. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Point * PivotPoint
            (
            );
            /**Sets  the selection of pivot point. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetPivotPoint
            (
                NXOpen::Point * pivotPoint /** pivotpoint */ 
            );
            /**Returns  the selection of slider direction. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: NXOpen::Direction * SliderDirection
            (
            );
            /**Sets  the selection of slider direction. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetSliderDirection
            (
                NXOpen::Direction * sliderDirection /** sliderdirection */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
