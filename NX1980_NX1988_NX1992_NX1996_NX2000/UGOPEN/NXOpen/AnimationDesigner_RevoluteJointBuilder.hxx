#ifndef NXOpen_ANIMATIONDESIGNER_REVOLUTEJOINTBUILDER_HXX_INCLUDED
#define NXOpen_ANIMATIONDESIGNER_REVOLUTEJOINTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AnimationDesigner_RevoluteJointBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/AnimationDesigner_PhysicsJointBuilder.hxx>
#include <NXOpen/libanimationdesigneropencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AnimationDesigner
    {
        class RevoluteJointBuilder;
    }
    namespace AnimationDesigner
    {
        class PhysicsJointBuilder;
    }
    class Direction;
    class Expression;
    class Point;
    namespace AnimationDesigner
    {
        class _RevoluteJointBuilderBuilder;
        class RevoluteJointBuilderImpl;
        /** Represents a @link NXOpen::AnimationDesigner::RevoluteJointBuilder NXOpen::AnimationDesigner::RevoluteJointBuilder@endlink .  <br> To create a new instance of this class, use @link NXOpen::AnimationDesigner::RevoluteJointCollection::CreateRevoluteJointBuilder  NXOpen::AnimationDesigner::RevoluteJointCollection::CreateRevoluteJointBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class ANIMATIONDESIGNEROPENCPPEXPORT  RevoluteJointBuilder : public NXOpen::AnimationDesigner::PhysicsJointBuilder
        {
            private: RevoluteJointBuilderImpl * m_revolutejointbuilder_impl;
            private: friend class  _RevoluteJointBuilderBuilder;
            protected: RevoluteJointBuilder();
            public: ~RevoluteJointBuilder();
            /**Returns  the axis vector. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Direction * AxisVector
            (
            );
            /**Sets  the axis vector. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetAxisVector
            (
                NXOpen::Direction * axisVector /** axisvector */ 
            );
            /**Returns  the origin point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Point * Point
            (
            );
            /**Sets  the origin point. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetPoint
            (
                NXOpen::Point * point /** point */ 
            );
            /**Returns  the start angle. 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * StartAngle
            (
            );
            /**Returns  the upper limit option. If the enable is true, then the joint will be 
                        applied an upper limit in movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool EnableUpperLimit
            (
            );
            /**Sets  the upper limit option. If the enable is true, then the joint will be 
                        applied an upper limit in movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetEnableUpperLimit
            (
                bool enable /** enable */ 
            );
            /**Returns  the lower limit option. If the enable is true, then the joint will be 
                        applied a lower limit in movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: bool EnableLowerLimit
            (
            );
            /**Sets  the lower limit option. If the enable is true, then the joint will be 
                        applied a lower limit in movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: void SetEnableLowerLimit
            (
                bool enable /** enable */ 
            );
            /**Returns  the upper limit. The upper limit setup for joint movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * UpperLimit
            (
            );
            /**Returns  the lower limit. The lower limit setup for joint movement. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : nx_animationdesigner (" NX Animation Designer") */
            public: NXOpen::Expression * LowerLimit
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
