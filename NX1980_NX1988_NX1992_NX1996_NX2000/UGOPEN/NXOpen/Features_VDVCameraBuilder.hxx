#ifndef NXOpen_FEATURES_VDVCAMERABUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_VDVCAMERABUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_VDVCameraBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class VDVCameraBuilder;
    }
    class Direction;
    class Expression;
    namespace Features
    {
        class FeatureBuilder;
    }
    class Point;
    namespace Features
    {
        class _VDVCameraBuilderBuilder;
        class VDVCameraBuilderImpl;

        /// \cond NX_NO_DOC 
        /**
            Represents a @link Features::VDVCamera Features::VDVCamera@endlink  builder
             <br> To create a new instance of this class, use @link NXOpen::Features::AVDACollection::CreateVdvcameraBuilder  NXOpen::Features::AVDACollection::CreateVdvcameraBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DefinitionType </term> <description> 
         
        AnglesofView </description> </item> 

        <item><term> 
         
        FocalLength.Value </term> <description> 
         
        10 (millimeters part), 0.394 (inches part) </description> </item> 

        <item><term> 
         
        HorizontalAngle.Value </term> <description> 
         
        30 </description> </item> 

        <item><term> 
         
        SensorHeight.Value </term> <description> 
         
        5 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        SensorWidth.Value </term> <description> 
         
        5 (millimeters part), 0 (inches part) </description> </item> 

        <item><term> 
         
        VerticalAngle.Value </term> <description> 
         
        30 </description> </item> 

        </list> 

         <br>  Created in NX1980.0.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  VDVCameraBuilder : public NXOpen::Features::FeatureBuilder
        {
            /**  The enum specifies the type of camera definition */
            public: enum DefinitionTypes
            {
                DefinitionTypesAnglesofView/** This types takes in the horizontal and vertical angles of view */,
                DefinitionTypesSensorDimensions/** This type takes in the focal length and sensor dimensions */
            };

            private: VDVCameraBuilderImpl * m_vdvcamerabuilder_impl;
            private: friend class  _VDVCameraBuilderBuilder;
            protected: VDVCameraBuilder();
            public: ~VDVCameraBuilder();

            /// \cond NX_NO_DOC 
            /**Returns  the camera lens point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * CameraLensPoint
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the camera lens point 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetCameraLensPoint
            (
                NXOpen::Point * cameraLensPoint /** cameralenspoint */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the camera direction 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * CameraDirection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the camera direction 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetCameraDirection
            (
                NXOpen::Direction * cameraDirection /** cameradirection */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the up direction 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * UpDirection
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the up direction 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetUpDirection
            (
                NXOpen::Direction * upDirection /** updirection */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the definition type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Features::VDVCameraBuilder::DefinitionTypes DefinitionType
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Sets  the definition type 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : vehicle_des_val (" Vehicle Design and Validation") */
            public: void SetDefinitionType
            (
                NXOpen::Features::VDVCameraBuilder::DefinitionTypes definitionType /** definitiontype */ 
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the focal length 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * FocalLength
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the sensor width 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SensorWidth
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the sensor height 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * SensorHeight
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the horizontal angle 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * HorizontalAngle
            (
            );

            /// \endcond 

            /// \cond NX_NO_DOC 
            /**Returns  the vertical angle 
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * VerticalAngle
            (
            );

            /// \endcond 
        };

        /// \endcond 
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
