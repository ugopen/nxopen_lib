#ifndef NXOpen_CAM_REGIONMARKER_HXX_INCLUDED
#define NXOpen_CAM_REGIONMARKER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAM_RegionMarker.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAM_PathData.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cam_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAM
    {
        class RegionMarker;
    }
    namespace CAM
    {
        class RegionMarkerImpl;
        /** This class represents the data of a region marker
         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_CAMEXPORT  RegionMarker : public NXOpen::TransientObject
        {
            /** region marker location*/
            public: enum Location
            {
                LocationStart/** start */ ,
                LocationEnd/** end */ 
            };

            private: RegionMarkerImpl * m_regionmarker_impl;
            /// \cond NX_NO_DOC 
            public: explicit RegionMarker(void *ptr);
            /// \endcond 
            /** Free resources associated with the instance. After this method
                    is called, it is illegal to use the object.  In .NET, this method
                    is automatically called when the object is deleted by the garbage
                    collector. 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: virtual ~RegionMarker();
            /**Returns  the marker location
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAM::RegionMarker::Location MarkerLocation
            (
            );
            /**Sets  the marker location
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: void SetMarkerLocation
            (
                NXOpen::CAM::RegionMarker::Location markerLocation /** markerlocation */ 
            );
            /**Returns  the time
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double Time
            (
            );
            /**Sets  the time
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: void SetTime
            (
                double time /** time */ 
            );
            /**Returns  the delay time
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double DelayTime
            (
            );
            /**Sets  the delay time
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: void SetDelayTime
            (
                double delayTime /** delaytime */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
