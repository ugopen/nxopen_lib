#ifndef NXOpen_TOOLING_CONCEPTDIEBASEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_CONCEPTDIEBASEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_ConceptDieBaseBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class ConceptDieBaseBuilder;
    }
    class Builder;
    class Point;
    namespace Tooling
    {
        class _ConceptDieBaseBuilderBuilder;
        class ConceptDieBaseBuilderImpl;
        /** Creates concept die_base builder for progressive die. No entity is returned.  <br> To create a new instance of this class, use @link NXOpen::Tooling::ProgressiveDieManager::CreateConceptDieBaseBuilder  NXOpen::Tooling::ProgressiveDieManager::CreateConceptDieBaseBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        DistanceToDieBaseEdge </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        LengthPL </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        SubDieBaseNumber </term> <description> 
         
        1 </description> </item> 

        <item><term> 
         
        UpdateDieBasePositionAccordingToStrip </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        WidthPW </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        XEndDistance </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        XStartDistance </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        YDistanceFirst </term> <description> 
         
        0 </description> </item> 

        <item><term> 
         
        YDistanceSecond </term> <description> 
         
        0 </description> </item> 

        </list> 

         <br>  Created in NX12.0.1.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  ConceptDieBaseBuilder : public NXOpen::Builder
        {
            private: ConceptDieBaseBuilderImpl * m_conceptdiebasebuilder_impl;
            private: friend class  _ConceptDieBaseBuilderBuilder;
            protected: ConceptDieBaseBuilder();
            public: ~ConceptDieBaseBuilder();
            /**Returns  the reference point 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ReferencePoint
            (
            );
            /**Sets  the reference point 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetReferencePoint
            (
                NXOpen::Point * referencePoint /** referencepoint */ 
            );
            /**Returns  the index string list 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString IndexStringList
            (
            );
            /**Sets  the index string list 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetIndexStringList
            (
                const NXString & indexStringList /** indexstringlist */ 
            );
            /**Sets  the index string list 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetIndexStringList
            (
                const char * indexStringList /** indexstringlist */ 
            );
            /**Returns  the distance to die base edge 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double DistanceToDieBaseEdge
            (
            );
            /**Sets  the distance to die base edge 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetDistanceToDieBaseEdge
            (
                double distanceToDieBaseEdge /** distancetodiebaseedge */ 
            );
            /**Returns  the length pl 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double LengthPL
            (
            );
            /**Sets  the length pl 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetLengthPL
            (
                double lengthPL /** lengthpl */ 
            );
            /**Returns  the width pw 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double WidthPW
            (
            );
            /**Sets  the width pw 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetWidthPW
            (
                double widthPW /** widthpw */ 
            );
            /**Returns  the x start distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double XStartDistance
            (
            );
            /**Sets  the x start distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetXStartDistance
            (
                double xStartDistance /** xstartdistance */ 
            );
            /**Returns  the x end distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double XEndDistance
            (
            );
            /**Sets  the x end distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetXEndDistance
            (
                double xEndDistance /** xenddistance */ 
            );
            /**Returns  the first Y distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double YDistanceFirst
            (
            );
            /**Sets  the first Y distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetYDistanceFirst
            (
                double yDistanceFirst /** ydistancefirst */ 
            );
            /**Returns  the second Y distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: double YDistanceSecond
            (
            );
            /**Sets  the second Y distance 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetYDistanceSecond
            (
                double yDistanceSecond /** ydistancesecond */ 
            );
            /**Returns  the sub die base number 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: int SubDieBaseNumber
            (
            );
            /**Sets  the sub die base number 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSubDieBaseNumber
            (
                int subDieBaseNumber /** subdiebasenumber */ 
            );
            /** Get the expression value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: NXString GetExpressionValue
            (
                const NXString & expName /** expname */ 
            );
            /** Get the expression value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            NXString GetExpressionValue
            (
                const char * expName /** expname */ 
            );
            /** Set the expression value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetExpressionValue
            (
                const NXString & expName /** expname */ ,
                const NXString & expressionValue /** expressionvalue */ 
            );
            /** Set the expression value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetExpressionValue
            (
                const char * expName /** expname */ ,
                const char * expressionValue /** expressionvalue */ 
            );
            /**Returns  the update die base position according to strip 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : None */
            public: bool UpdateDieBasePositionAccordingToStrip
            (
            );
            /**Sets  the update die base position according to strip 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetUpdateDieBasePositionAccordingToStrip
            (
                bool updateDieBasePositionAccordingToStrip /** updatediebasepositionaccordingtostrip */ 
            );
            /** Set the base point y value 
             <br>  Created in NX12.0.1.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetBasePointYValue
            (
            );
            /**Returns  the wizard type 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : None */
            public: int WizardType
            (
            );
            /**Sets  the wizard type 
             <br>  Created in NX12.0.2.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetWizardType
            (
                int wizardType /** wizardtype */ 
            );
            /**Returns  the select concept die base spreadsheet 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString SelectConceptDieBaseSpreadsheet
            (
            );
            /**Sets  the select concept die base spreadsheet 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            public: void SetSelectConceptDieBaseSpreadsheet
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the select concept die base spreadsheet 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : prog_die_wizard ("UG/Progressive Die Wizard") */
            void SetSelectConceptDieBaseSpreadsheet
            (
                const char * filename /** filename */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
