#ifndef NXOpen_CAE_POSTSCENARIOCONFIGURATIONVARIABLECALLBACKCONTEXT_HXX_INCLUDED
#define NXOpen_CAE_POSTSCENARIOCONFIGURATIONVARIABLECALLBACKCONTEXT_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_PostScenarioConfigurationVariableCallbackContext.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_PostScenarioDataMatch.hxx>
#include <NXOpen/CAE_PostScenarioInputDefinition.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class PostScenarioConfigurationVariableCallbackContext;
    }
    namespace CAE
    {
        class PostScenarioDataMatch;
    }
    namespace CAE
    {
        class PostScenarioInputDefinition;
    }
    namespace CAE
    {
    }
    namespace CAE
    {
        class PostScenarioConfigurationVariableCallbackContextImpl;
        /**  @brief  This class represents the context which configuration variable callbacks are called in.  

         

                
                 <br> 
                The context is represented by:<ul>
                <li>The selected @link CAE::PostScenarioInputDefinition CAE::PostScenarioInputDefinition@endlink </li>
                <li>Which @link CAE::DataSource CAE::DataSource@endlink  and @link CAE::PostScenarioDefinition CAE::PostScenarioDefinition@endlink  were selected for each @link CAE::PostScenarioBuilderSlot CAE::PostScenarioBuilderSlot@endlink </li>
                </ul>
                 <br> 
                 <br> 
                See also: @link CAE::PostScenarioDescriptorBuilder CAE::PostScenarioDescriptorBuilder@endlink , particularily the Choice Provider and Sensitivity callbacks.
                 <br> 
                
              <br> No support for KF.  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  PostScenarioConfigurationVariableCallbackContext : public NXOpen::TransientObject
        {
            private: PostScenarioConfigurationVariableCallbackContextImpl * m_postscenarioconfigurationvariablecallbackcontext_impl;
            /// \cond NX_NO_DOC 
            public: explicit PostScenarioConfigurationVariableCallbackContext(void *ptr);
            /// \endcond 
            /** Dispose of this instance. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: virtual ~PostScenarioConfigurationVariableCallbackContext();
            /**Returns  the selected input definition. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioInputDefinition * InputDefinition
            (
            );
            /**  @brief Returns the bound data source and data definition for a given slot. 

             
                    
                        The slot name corresponds to one of the declared data slots from your Scenario XML descriptor in the context of the @link CAE::PostScenarioConfigurationVariableCallbackContext::InputDefinition CAE::PostScenarioConfigurationVariableCallbackContext::InputDefinition@endlink .
                      
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::PostScenarioDataMatch * GetSlotDataMatch
            (
                const NXString & slotName /** slotname */ 
            );
            /**  @brief Returns the bound data source and data definition for a given slot. 

             
                    
                        The slot name corresponds to one of the declared data slots from your Scenario XML descriptor in the context of the @link CAE::PostScenarioConfigurationVariableCallbackContext::InputDefinition CAE::PostScenarioConfigurationVariableCallbackContext::InputDefinition@endlink .
                      
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            NXOpen::CAE::PostScenarioDataMatch * GetSlotDataMatch
            (
                const char * slotName /** slotname */ 
            );
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
