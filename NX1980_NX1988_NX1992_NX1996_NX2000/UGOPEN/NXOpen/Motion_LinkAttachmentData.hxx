#ifndef NXOpen_MOTION_LINKATTACHMENTDATA_HXX_INCLUDED
#define NXOpen_MOTION_LINKATTACHMENTDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Motion_LinkAttachmentData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Motion.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_motion_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Motion
    {
        class LinkAttachmentData;
    }
    class CoordinateSystem;
    class Direction;
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    namespace Motion
    {
        class SelectLink;
    }
    class Point;
    namespace Motion
    {
        class _LinkAttachmentDataBuilder;
        class LinkAttachmentDataImpl;
        /** Represents a @link Motion::LinkAttachmentData Motion::LinkAttachmentData@endlink . 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MOTIONEXPORT  LinkAttachmentData : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Defines the orientation types of motion body attachment */
            public: enum OrientationTypes
            {
                OrientationTypesNone/** No orientation type */,
                OrientationTypesVector/** Vector orientation type */,
                OrientationTypesCsys/** CSYS orientation type*/
            };

            private: LinkAttachmentDataImpl * m_linkattachmentdata_impl;
            private: friend class  _LinkAttachmentDataBuilder;
            protected: LinkAttachmentData();
            public: ~LinkAttachmentData();
            /**Returns  the motion body 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::SelectLink * Link
            (
            );
            /**Returns  the override state of the link, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState LinkOvrCtrl
            (
            );
            /**Sets  the override state of the link, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetLinkOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the origin 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * Origin
            (
            );
            /**Sets  the origin 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetOrigin
            (
                NXOpen::Point * origin /** origin */ 
            );
            /**Returns  the override state of the origin, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState OriginOvrCtrl
            (
            );
            /**Sets  the override state of the origin, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOriginOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the orientation type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::LinkAttachmentData::OrientationTypes OrientationType
            (
            );
            /**Sets  the orientation type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOrientationType
            (
                NXOpen::Motion::LinkAttachmentData::OrientationTypes orientationType /** orientationtype */ 
            );
            /**Returns  the override state of the orientation type, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState OrientationTypeOvrCtrl
            (
            );
            /**Sets  the override state of the orientation type, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetOrientationTypeOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the vector - if the selected type is Vector, use this method to access it. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Direction * Vector
            (
            );
            /**Sets  the vector - if the selected type is Vector, use this method to access it. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetVector
            (
                NXOpen::Direction * vector /** vector */ 
            );
            /**Returns  the override state of the vector, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState VectorOvrCtrl
            (
            );
            /**Sets  the override state of the vector, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetVectorOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /**Returns  the csys - if the selected type is CSYS, use this method to access it. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CoordinateSystem * Csys
            (
            );
            /**Sets  the csys - if the selected type is CSYS, use this method to access it. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: void SetCsys
            (
                NXOpen::CoordinateSystem * csys /** csys */ 
            );
            /**Returns  the override state of the csys, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Motion::ParamOverrideState CsysOvrCtrl
            (
            );
            /**Sets  the override state of the csys, which should only be used for occurrence. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : mechanisms ("MECHANISMS") */
            public: void SetCsysOvrCtrl
            (
                NXOpen::Motion::ParamOverrideState overrideState /** overridestate */ 
            );
            /** The orientation matrix  
                        @return Matrix3x3 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Matrix3x3 GetOrientation
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
