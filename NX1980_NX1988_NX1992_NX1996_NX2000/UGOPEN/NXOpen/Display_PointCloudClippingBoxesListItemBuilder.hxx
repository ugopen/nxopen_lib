#ifndef NXOpen_DISPLAY_POINTCLOUDCLIPPINGBOXESLISTITEMBUILDER_HXX_INCLUDED
#define NXOpen_DISPLAY_POINTCLOUDCLIPPINGBOXESLISTITEMBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Display_PointCloudClippingBoxesListItemBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/GeometricUtilities_IComponentBuilder.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_display_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Display
    {
        class PointCloudClippingBoxesListItemBuilder;
    }
    namespace GeometricUtilities
    {
        class IComponentBuilder;
    }
    class Point;
    namespace Display
    {
        class _PointCloudClippingBoxesListItemBuilderBuilder;
        class PointCloudClippingBoxesListItemBuilderImpl;
        /** Represents a @link NXOpen::Display::PointCloudClippingBoxesListItemBuilder NXOpen::Display::PointCloudClippingBoxesListItemBuilder@endlink  
            to create clipping regions for @link NXOpen::Display::PointCloud NXOpen::Display::PointCloud@endlink . 
              <br> To create a new instance of this class, use @link NXOpen::Display::PointCloudBuilder::CreateClippingBoxesListItemBuilder  NXOpen::Display::PointCloudBuilder::CreateClippingBoxesListItemBuilder @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_DISPLAYEXPORT  PointCloudClippingBoxesListItemBuilder : public NXOpen::TaggedObject, public virtual NXOpen::GeometricUtilities::IComponentBuilder
        {
            /** Specifies clipping side options used for defined clipping box. */
            public: enum ClippingSides
            {
                ClippingSidesInside/** inside */,
                ClippingSidesOutside/** outside */,
                ClippingSidesNone/** none */
            };

            private: PointCloudClippingBoxesListItemBuilderImpl * m_pointcloudclippingboxeslistitembuilder_impl;
            private: friend class  _PointCloudClippingBoxesListItemBuilderBuilder;
            protected: PointCloudClippingBoxesListItemBuilder();
            public: ~PointCloudClippingBoxesListItemBuilder();
            /**Returns  the start point of the clipping box diagonal. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ClippingStartPoint
            (
            );
            /**Sets  the start point of the clipping box diagonal. 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetClippingStartPoint
            (
                NXOpen::Point * clippingStartPoint /** clippingstartpoint */ 
            );
            /**Returns  the end point of the clipping box diagonal 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Point * ClippingEndPoint
            (
            );
            /**Sets  the end point of the clipping box diagonal 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetClippingEndPoint
            (
                NXOpen::Point * clippingEndPoint /** clippingendpoint */ 
            );
            /**Returns  the clipping side of the defined clipping box 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Display::PointCloudClippingBoxesListItemBuilder::ClippingSides ClippingSide
            (
            );
            /**Sets  the clipping side of the defined clipping box 
             <br>  Created in NX11.0.0.  <br>  
             <br> License requirements : nx_point_cloud_view ("NX Point Cloud Viewer") */
            public: void SetClippingSide
            (
                NXOpen::Display::PointCloudClippingBoxesListItemBuilder::ClippingSides clippingSide /** clippingside */ 
            );
            /**Returns  the orientation of clipping box 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Matrix3x3 Orientation
            (
            );
            /** Validate whether the inputs to the component are sufficient for 
                        commit to be called.  If the component is not in a state to commit
                        then an exception is thrown.  For example, if the component requires
                        you to set some property, this method will throw an exception if
                        you haven't set it.  This method throws a not yet implemented
                        NXException for some components.
                     @return  Was self validation successful 
             <br>  Created in NX3.0.1.  <br>  
             <br> License requirements : None */
            public: virtual bool Validate
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
