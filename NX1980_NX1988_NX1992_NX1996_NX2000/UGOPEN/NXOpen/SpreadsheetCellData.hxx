#ifndef NXOpen_SPREADSHEETCELLDATA_HXX_INCLUDED
#define NXOpen_SPREADSHEETCELLDATA_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     SpreadsheetCellData.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    class SpreadsheetCellData;
    class SpreadsheetCellDataImpl;
    /** Represents a class for Spreadsheet cell data. The data type held in the cell can be obtained from the @link NXOpen::SpreadsheetCellData::Type NXOpen::SpreadsheetCellData::Type@endlink . 
    And then the value can obtained from the correct accessor. The value and type of the cell will be changed when calling the set methods. That is if a cell was a formula, 
    but the @link NXOpen::SpreadsheetCellData::SetDoubleValue NXOpen::SpreadsheetCellData::SetDoubleValue@endlink  is called, the type will be changed as well. 

    It should be noted the cell value on the sheet will not updated, by calling a set method on this class. The object must then be passed into the appropriate 
    method on @link NXOpen::SpreadsheetManager NXOpen::SpreadsheetManager@endlink . 
     <br>  Usable only on Windows <br> 
     <br>  Created in NX11.0.0.  <br>  
    */
    class NXOPENCPPEXPORT  SpreadsheetCellData : public NXOpen::TransientObject
    {
        /** Data types enum */
        public: enum Types
        {
            TypesInt/** int */ ,
            TypesDouble/** double */ ,
            TypesString/** string */ ,
            TypesLogical/** logical */ ,
            TypesFormula/** formula */ 
        };

        private: SpreadsheetCellDataImpl * m_spreadsheetcelldata_impl;
        /// \cond NX_NO_DOC 
        public: explicit SpreadsheetCellData(void *ptr);
        /// \endcond 
        /** Free resources associated with the instance. After this method
            is called, it is illegal to use the object.  In .NET, this method
            is automatically called when the object is deleted by the garbage
            collector.  
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: virtual ~SpreadsheetCellData();
        /**Returns  the type of data in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXOpen::SpreadsheetCellData::Types Type
        (
        );
        /**Sets  the type of data in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetType
        (
            NXOpen::SpreadsheetCellData::Types cellType /** celltype */ 
        );
        /**Returns  the double value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: double DoubleValue
        (
        );
        /**Sets  the double value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetDoubleValue
        (
            double doubleValue /** double value */ 
        );
        /**Returns  the integer value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: int IntValue
        (
        );
        /**Sets  the integer value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetIntValue
        (
            int intValue /** int value */ 
        );
        /**Returns  the formula stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString FormulaValue
        (
        );
        /**Sets  the formula stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetFormulaValue
        (
            const NXString & formulaValue /** formula value */ 
        );
        /**Sets  the formula stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetFormulaValue
        (
            const char * formulaValue /** formula value */ 
        );
        /**Returns  the string value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: NXString StringValue
        (
        );
        /**Sets  the string value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetStringValue
        (
            const NXString & stringValue /** string value */ 
        );
        /**Sets  the string value stored in the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        void SetStringValue
        (
            const char * stringValue /** string value */ 
        );
        /**Returns  the logical value stored the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: bool LogicalValue
        (
        );
        /**Sets  the logical value stored the cell.
         <br>  Usable only on Windows <br> 
         <br>  Created in NX11.0.0.  <br>  
         <br> License requirements : None */
        public: void SetLogicalValue
        (
            bool logicalValue /** logical value */ 
        );
    }; //lint !e1712 default constructor not defined for class  

}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
