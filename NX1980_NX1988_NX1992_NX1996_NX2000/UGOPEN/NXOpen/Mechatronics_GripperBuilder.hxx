#ifndef NXOpen_MECHATRONICS_GRIPPERBUILDER_HXX_INCLUDED
#define NXOpen_MECHATRONICS_GRIPPERBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mechatronics_GripperBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Mechatronics_ZoneBuilder.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ObjectList.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_mechatronics_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mechatronics
    {
        class GripperBuilder;
    }
    class Builder;
    class CoordinateSystem;
    class Expression;
    namespace Mechatronics
    {
        class GripperFingerBuilderList;
    }
    namespace Mechatronics
    {
        class ZoneBuilder;
    }
    class SelectNXObject;
    class SelectNXObjectList;
    namespace Mechatronics
    {
        class _GripperBuilderBuilder;
        class GripperBuilderImpl;
        /**  @brief  Represents a @link NXOpen::Mechatronics::Gripper NXOpen::Mechatronics::Gripper@endlink  builder.  

           <br> To create a new instance of this class, use @link NXOpen::Mechatronics::GripperCollection::CreateGrippeBuilder  NXOpen::Mechatronics::GripperCollection::CreateGrippeBuilder @endlink  <br> 
         <br>  Created in NX1953.0.0.  <br>  
        */
        class NXOPENCPP_MECHATRONICSEXPORT  GripperBuilder : public NXOpen::Builder
        {
            /**  @brief  the gripper types  

              */
            public: enum Types
            {
                TypesFixture/** gripper with fingers that can move.*/,
                TypesVacuum/** gripper with vacuum chuck. */
            };

            /**  @brief  the finger types  

              */
            public: enum FingeTypes
            {
                FingeTypesLinear/** fingers with linear movement.*/,
                FingeTypesRotary/** fingers with rotary movement. */
            };

            private: GripperBuilderImpl * m_gripperbuilder_impl;
            private: friend class  _GripperBuilderBuilder;
            protected: GripperBuilder();
            public: ~GripperBuilder();
            /**Returns   @brief  the type  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GripperBuilder::Types Type
            (
            );
            /**Sets   @brief  the type  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetType
            (
                NXOpen::Mechatronics::GripperBuilder::Types type /** type */ 
            );
            /**Returns   @brief  the gripper base body  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObjectList * BaseBody
            (
            );
            /**Returns   @brief  the dectection sensor body  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::ZoneBuilder * DectectionSensor
            (
            );
            /**Returns   @brief  the enable alignment flag  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool EnableAlignment
            (
            );
            /**Sets   @brief  the enable alignment flag  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetEnableAlignment
            (
                bool enableAlignment /** enablealignment */ 
            );
            /**Returns   @brief  the aligned csys  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::CoordinateSystem * AlignCSYS
            (
            );
            /**Sets   @brief  the aligned csys  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetAlignCSYS
            (
                NXOpen::CoordinateSystem * alignCSYS /** aligncsys */ 
            );
            /**Returns   @brief  the action duration  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * ActionDuration
            (
            );
            /**Returns   @brief  the finger type  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Mechatronics::GripperBuilder::FingeTypes FingerType
            (
            );
            /**Sets   @brief  the finger type  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: void SetFingerType
            (
                NXOpen::Mechatronics::GripperBuilder::FingeTypes fingerType /** fingertype */ 
            );
            /**Returns   @brief  the list containing the defined fingers.  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Mechatronics::GripperFingerBuilderList * FingerList
            (
            );
            /**Returns   @brief  the finger init position  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * InitPosition
            (
            );
            /**Returns   @brief  the finger max position  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * MaxPosition
            (
            );
            /**Returns   @brief  the finger moving speed  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::Expression * Speed
            (
            );
            /**Returns   @brief  the stop on collision flag  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: bool StopOnCollision
            (
            );
            /**Sets   @brief  the stop on collision flag  

              
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetStopOnCollision
            (
                bool stopOnCollision /** stoponcollision */ 
            );
            /**Returns  the finger Collision. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXOpen::SelectNXObject * FingerCollision
            (
            );
            /**Returns  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : nx_mcd_core ("Mechatronics Concept Designer") */
            void SetName
            (
                const char * name /** name */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
