#ifndef NXOpen_AME_SELECTCONDITIONBUILDER_HXX_INCLUDED
#define NXOpen_AME_SELECTCONDITIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_SelectConditionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/AME_AMEEngObject.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class SelectConditionBuilder;
    }
    namespace AME
    {
        class AMEEngObject;
    }
    class Builder;
    class Expression;
    namespace AME
    {
        class _SelectConditionBuilderBuilder;
        class SelectConditionBuilderImpl;
        /** Defines conditions by using expressions for engineering objects  <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateAssignAspectBuilder  NXOpen::AME::AMEManager::CreateAssignAspectBuilder @endlink  <br> 
         <br>  Created in NX1926.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  SelectConditionBuilder : public NXOpen::Builder
        {
            private: SelectConditionBuilderImpl * m_selectconditionbuilder_impl;
            private: friend class  _SelectConditionBuilderBuilder;
            protected: SelectConditionBuilder();
            public: ~SelectConditionBuilder();
            /**Returns  the string value of the property name  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString PropertyName
            (
            );
            /**Sets  the string value of the property name  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetPropertyName
            (
                const NXString & propertyName /** propertyname */ 
            );
            /**Sets  the string value of the property name  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetPropertyName
            (
                const char * propertyName /** propertyname */ 
            );
            /**Returns  the selected engineering object 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::AMEEngObject * SelectedEngObject
            (
            );
            /**Sets  the selected engineering object 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetSelectedEngObject
            (
                NXOpen::AME::AMEEngObject * selectedEngObject /** selectedengobject */ 
            );
            /** Set the condition for the value set 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetCondition
            (
                NXOpen::Expression * exp /** exp */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
