#ifndef NXOpen_FEATURES_ICONTAINERFEATURE_HXX_INCLUDED
#define NXOpen_FEATURES_ICONTAINERFEATURE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_IContainerFeature.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/INXObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        class IContainerFeature;
    }
    class Body;
    class DisplayableObject;
    class Edge;
    class Face;
    namespace Features
    {
        class Feature;
    }
    class INXObject;
    namespace Features
    {
        /** Represents a container feature on a part. A container feature contains and maintains other features
         which produce or modify geometry.The container feature does not operate on any geometry directly. Feature 
         such as @link NXOpen::Features::PatternFeature NXOpen::Features::PatternFeature@endlink  is an example of container feature. 
         <br>  Created in NX8.5.0.  <br>  
        */
        class NXOPENCPP_FEATURESEXPORT  IContainerFeature : public virtual NXOpen::INXObject
        {
            public: virtual ~IContainerFeature() {}
            /** Returns the Immediate Contained features within the container feature  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Features::Feature *> GetImmediateContainedFeatures
            (
            ) = 0;
            /** Returns all the features contained in this container feature. This method will cycle through any container features contained by this container feature to return the complete set of contained features.  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Features::Feature *> GetAllContainedFeatures
            (
            ) = 0;
            /** Returns all the bodies created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Body *> GetAssociatedBodies
            (
            ) = 0;
            /** Returns all the faces created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Face *> GetAssociatedFaces
            (
            ) = 0;
            /** Returns all the edges created, modified and split by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::Edge *> GetAssociatedEdges
            (
            ) = 0;
            /** Returns all the entities(curves,points and datums) created by the container feature's "contained" features  @return  
             <br>  Created in NX8.5.0.  <br>  
             <br> License requirements : solid_modeling ("SOLIDS MODELING") */
            public: virtual std::vector<NXOpen::DisplayableObject *> GetAssociatedCurvesPointsDatums
            (
            ) = 0;
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
