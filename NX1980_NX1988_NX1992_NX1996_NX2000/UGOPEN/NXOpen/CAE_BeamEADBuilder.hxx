#ifndef NXOpen_CAE_BEAMEADBUILDER_HXX_INCLUDED
#define NXOpen_CAE_BEAMEADBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_BeamEADBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_SelectElementsBuilder.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class BeamEADBuilder;
    }
    class Builder;
    namespace CAE
    {
        class PhysicalPropertyTable;
    }
    namespace CAE
    {
        class SelectElementsBuilder;
    }
    namespace CAE
    {
        class SelectFENodeList;
    }
    class Direction;
    class Expression;
    namespace CAE
    {
        class _BeamEADBuilderBuilder;
        class BeamEADBuilderImpl;
        /** This class provides Beam/Bar Associated Data Support  <br> To create a new instance of this class, use @link NXOpen::CAE::NodeElementManager::CreateBeamEadBuilder  NXOpen::CAE::NodeElementManager::CreateBeamEadBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        EndReleaseAState </term> <description> 
         
        Ignore </description> </item> 

        <item><term> 
         
        EndReleaseBState </term> <description> 
         
        Ignore </description> </item> 

        <item><term> 
         
        OrientationState </term> <description> 
         
        Ignore </description> </item> 

        <item><term> 
         
        PhysicalPropertyTableState </term> <description> 
         
        Ignore </description> </item> 

        </list> 

         <br>  Created in NX6.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  BeamEADBuilder : public NXOpen::Builder
        {
            /** indicates to ignore, apply or clear the state property upon commit */
            public: enum State
            {
                StateIgnore/** ignore the property */,
                StateApply/** apply the property */,
                StateClear/** clear the property */
            };

            /** indicates which orientation method to use */
            public: enum OrientationMethod
            {
                OrientationMethodVector/** use a vector to orient the element */,
                OrientationMethodNode/** use a node to orient the element */
            };

            /** indicates which orientation csys type to use */
            public: enum OrientationCsys
            {
                OrientationCsysAbsolute/** orientation coordinate system is absolute */,
                OrientationCsysNodal/** orientation coordinate system is nodal */
            };

            /** indicates which vector choice to use */
            public: enum VectorChoiceType
            {
                VectorChoiceTypeHorizontal/** the vector is defined to be horizontal */,
                VectorChoiceTypeVertical/** the vector is defined to be vertical */
            };

            /** indicates which coordindate system to be used to define beam section offsets */
            public: enum OffsetCsysChoice
            {
                OffsetCsysChoiceNodalDisplacement/** The section offset coordindate system is nodal displacement. */,
                OffsetCsysChoiceElemental/** The section offset coordindate system is elemental */
            };

            /** indicates which end release setting to use */
            public: enum EndReleaseSetting
            {
                EndReleaseSettingOff/** end release set to off */,
                EndReleaseSettingOn/** end release set to on */
            };

            private: BeamEADBuilderImpl * m_beameadbuilder_impl;
            private: friend class  _BeamEADBuilderBuilder;
            protected: BeamEADBuilder();
            public: ~BeamEADBuilder();
            /**Returns  the select element operator selects elements 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectElementsBuilder * Elements
            (
            );
            /**Returns  the get selection ori operator gets section orientaion value in global vector mode
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Direction * SelectSectionOri
            (
            );
            /**Sets  the get selection ori operator gets section orientaion value in global vector mode
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetSelectSectionOri
            (
                NXOpen::Direction * selectSectionOri /** selectsectionori */ 
            );
            /**Returns  the state drives the commit action 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State OrientationState
            (
            );
            /**Sets  the state drives the commit action 
             <br>  Created in NX6.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientationState
            (
                NXOpen::CAE::BeamEADBuilder::State orientationState /** orientation state */ 
            );
            /**Returns  the method to get the element orientation method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::OrientationMethod OriMethod
            (
            );
            /**Sets  the method to get the element orientation method 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOriMethod
            (
                NXOpen::CAE::BeamEADBuilder::OrientationMethod oriMethod /** orimethod */ 
            );
            /**Returns  the method to get the orientation vector choice 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::VectorChoiceType VectorChoice
            (
            );
            /**Sets  the method to get the orientation vector choice 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetVectorChoice
            (
                NXOpen::CAE::BeamEADBuilder::VectorChoiceType vectorChoice /** vectorchoice */ 
            );
            /**Returns  the coordinate system of orientation which is only avaliable when the orientation method is vector. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::OrientationCsys OrientationCsysType
            (
            );
            /**Sets  the coordinate system of orientation which is only avaliable when the orientation method is vector. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientationCsysType
            (
                NXOpen::CAE::BeamEADBuilder::OrientationCsys orientationCsysType /** orientationcsystype */ 
            );
            /**Returns  the orientation vector in nodal displacement coordindate system 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Vector3d OrientationNodalDisplacementVector
            (
            );
            /**Sets  the orientation vector in nodal displacement coordindate system 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetOrientationNodalDisplacementVector
            (
                const NXOpen::Vector3d & orientationVector /** orientationvector */ 
            );
            /**Returns  the method to get the state of end release A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State EndReleaseAState
            (
            );
            /**Returns  the method to get the state of end release B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State EndReleaseBState
            (
            );
            /**Sets  the method to get the state of end release A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseAState
            (
                NXOpen::CAE::BeamEADBuilder::State endReleaseAState /** endreleaseastate */ 
            );
            /**Sets  the method to get the state of end release B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseBState
            (
                NXOpen::CAE::BeamEADBuilder::State endReleaseBState /** endreleasebstate */ 
            );
            /**Sets  the get end release setting turns on or off the DOF 1 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA1
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 1 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA1
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 2 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA2
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 2 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA2
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 3 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA3
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 3 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA3
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 4 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA4
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 4 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA4
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 5 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA5
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 5 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA5
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 6 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseA6
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 6 for end A 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseA6
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 1 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB1
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 1 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB1
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 2 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB2
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 2 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB2
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 3 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB3
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 3 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB3
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 4 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB4
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 4 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB4
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 5 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB5
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 5 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB5
            (
            );
            /**Sets  the get end release setting turns on or off the DOF 6 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndReleaseB6
            (
                NXOpen::CAE::BeamEADBuilder::EndReleaseSetting endReleaseSetting /** endreleasesetting */ 
            );
            /**Returns  the get end release setting turns on or off the DOF 6 for end B 
             <br>  Created in NX6.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::EndReleaseSetting EndReleaseB6
            (
            );
            /**Returns  the get node operator selects an orientation node 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::SelectFENodeList * Node
            (
            );
            /**Returns  the offset definition coordindate system of the element at End A 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::OffsetCsysChoice EndAOffsetCSYS
            (
            );
            /**Sets  the offset definition coordindate system of the element at End A 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndAOffsetCSYS
            (
                NXOpen::CAE::BeamEADBuilder::OffsetCsysChoice endAOffsetCSYS /** endaoffsetcsys */ 
            );
            /**Returns  the end A offset component 1 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetA1
            (
            );
            /**Returns  the end A offset component 2 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetA2
            (
            );
            /**Returns  the end A offset component 3 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetA3
            (
            );
            /**Returns  the offset definition coordindate system of the element at End B 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::OffsetCsysChoice EndBOffsetCSYS
            (
            );
            /**Sets  the offset definition coordindate system of the element at End B 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndBOffsetCSYS
            (
                NXOpen::CAE::BeamEADBuilder::OffsetCsysChoice endBOffsetCSYS /** endboffsetcsys */ 
            );
            /**Returns  the end B offset component 1 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetB1
            (
            );
            /**Returns  the end B offset component 2 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetB2
            (
            );
            /**Returns  the end B offset component 3 expression of the element 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::Expression * EndOffsetB3
            (
            );
            /**Returns  the state drives the commit action 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State EndOffsetAState
            (
            );
            /**Sets  the state drives the commit action 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndOffsetAState
            (
                NXOpen::CAE::BeamEADBuilder::State endOffsetAState /** endoffsetastate */ 
            );
            /**Returns  the state drives the commit action 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State EndOffsetBState
            (
            );
            /**Sets  the state drives the commit action 
             <br>  Created in NX7.5.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetEndOffsetBState
            (
                NXOpen::CAE::BeamEADBuilder::State endOffsetBState /** endoffsetbstate */ 
            );
            /**Returns  the physical property table state state drives the action upon commit 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::BeamEADBuilder::State PhysicalPropertyTableState
            (
            );
            /**Sets  the physical property table state state drives the action upon commit 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPhysicalPropertyTableState
            (
                NXOpen::CAE::BeamEADBuilder::State physicalPropertyTableState /** physicalpropertytablestate */ 
            );
            /**Returns  the physical property table of the beam element 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: NXOpen::CAE::PhysicalPropertyTable * PhysicalPropertyTable
            (
            );
            /**Sets  the physical property table of the beam element 
             <br>  Created in NX11.0.1.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") */
            public: void SetPhysicalPropertyTable
            (
                NXOpen::CAE::PhysicalPropertyTable * physicalPropertyTable /** physicalpropertytable */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
