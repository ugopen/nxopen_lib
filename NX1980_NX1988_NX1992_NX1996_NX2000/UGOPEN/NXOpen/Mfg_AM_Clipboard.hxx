#ifndef NXOpen_MFG_AM_CLIPBOARD_HXX_INCLUDED
#define NXOpen_MFG_AM_CLIPBOARD_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Mfg_AM_Clipboard.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/ugmath.hxx>
#include <NXOpen/libmfgamopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Mfg
    {
        namespace AM
        {
            class Clipboard;
        }
    }
    class NXObject;
    class TaggedObject;
    namespace Mfg
    {
        namespace AM
        {
            class _ClipboardBuilder;
            class ClipboardImpl;
            /**  CopyPaste Clipboard  <br> To obtain an instance of this class use @link NXOpen::Mfg::AM::ApplicationManager NXOpen::Mfg::AM::ApplicationManager@endlink .  <br> 
             <br>  Created in NX1926.0.0.  <br>  
            */
            class MFGAMOPENCPPEXPORT  Clipboard : public NXOpen::NXObject
            {
                private: ClipboardImpl * m_clipboard_impl;
                private: friend class  _ClipboardBuilder;
                protected: Clipboard();
                public: ~Clipboard();
                /** Copy 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: void Copy
                (
                    const std::vector<NXOpen::NXObject *> & objectsToCopy /** objectstocopy */ 
                );
                /** Checks if there is anything to paste 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: bool IsEmpty
                (
                );
                /** Paste
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: std::vector<NXOpen::NXObject *> Paste
                (
                    NXOpen::TaggedObject * target /** target */ 
                );
                /** Paste Special
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: std::vector<NXOpen::NXObject *> PasteSpecial
                (
                    NXOpen::TaggedObject * target /** target */ ,
                    const NXOpen::Matrix4x4 & xform /** xform */ 
                );
                /** Empties the clipboard 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : am_pb_cam_basic ("Basic NX Powder Bed Additive Manufacturing Application") */
                public: void Clear
                (
                );
                /** The point of origin of the clipboard objects 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Point3d GetReferencePoint
                (
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
