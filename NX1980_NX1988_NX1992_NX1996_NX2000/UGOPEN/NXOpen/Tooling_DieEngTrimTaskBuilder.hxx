#ifndef NXOpen_TOOLING_DIEENGTRIMTASKBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_DIEENGTRIMTASKBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_DieEngTrimTaskBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Features_FeatureBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class DieEngTrimTaskBuilder;
    }
    class Direction;
    namespace Features
    {
        class FeatureBuilder;
    }
    namespace Features
    {
        class SelectFeature;
    }
    class Plane;
    class ScCollector;
    class SelectIBasePlaneList;
    namespace Tooling
    {
        class _DieEngTrimTaskBuilderBuilder;
        class DieEngTrimTaskBuilderImpl;
        /** Die Engineer trim task management builder, create a trim task by selected die tip, trim bounds,
                start plane and end plane. <br> To create a new instance of this class, use @link NXOpen::Tooling::AutoDieCollection::CreateDieEngTrimTaskBuilder  NXOpen::Tooling::AutoDieCollection::CreateDieEngTrimTaskBuilder @endlink  <br> 
         <br>  Created in NX10.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  DieEngTrimTaskBuilder : public NXOpen::Features::FeatureBuilder
        {
            /** the trim task cam type.*/
            public: enum TrimTaskCamType
            {
                TrimTaskCamTypeAerialCam/** aerial cam */ ,
                TrimTaskCamTypeBaseMountedCam/** base mounted cam */ ,
                TrimTaskCamTypeDirect/** direct */ 
            };

            /** the trim task match cut type.*/
            public: enum TrimTaskMatchCutType
            {
                TrimTaskMatchCutTypeNone/** none */ ,
                TrimTaskMatchCutTypeStart/** start */ ,
                TrimTaskMatchCutTypeEnd/** end */ ,
                TrimTaskMatchCutTypeBoth/** both */ 
            };

            private: DieEngTrimTaskBuilderImpl * m_dieengtrimtaskbuilder_impl;
            private: friend class  _DieEngTrimTaskBuilderBuilder;
            protected: DieEngTrimTaskBuilder();
            public: ~DieEngTrimTaskBuilder();
            /**Returns  the selected die tip. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Features::SelectFeature * SelectDieTip
            (
            );
            /**Returns  the selected trim bounds. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::ScCollector * SelectTrimBounds
            (
            );
            /**Returns  the trim direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool TrimDirection
            (
            );
            /**Sets  the trim direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetTrimDirection
            (
                bool trimDirection /** trimdirection */ 
            );
            /**Returns  the selected start plane. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Plane * SelectStartPlane
            (
            );
            /**Sets  the selected start plane. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetSelectStartPlane
            (
                NXOpen::Plane * selectStartPlane /** selectstartplane */ 
            );
            /**Returns  the selected end plane. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Plane * SelectEndPlane
            (
            );
            /**Sets  the selected end plane. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetSelectEndPlane
            (
                NXOpen::Plane * selectEndPlane /** selectendplane */ 
            );
            /**Returns  the selected cam direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Direction * SelectCamDirection
            (
            );
            /**Sets  the selected cam direction. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetSelectCamDirection
            (
                NXOpen::Direction * selectCamDirection /** selectcamdirection */ 
            );
            /**Returns  the cam type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Tooling::DieEngTrimTaskBuilder::TrimTaskCamType CamType
            (
            );
            /**Sets  the cam type. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetCamType
            (
                NXOpen::Tooling::DieEngTrimTaskBuilder::TrimTaskCamType camType /** camtype */ 
            );
            /**Returns  the selected scrap cutters. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::SelectIBasePlaneList * SelectScrapCutters
            (
            );
            /** Switch trim side. When trim profile and trim planes are selected, there will be a default trim side,
                        if the other side want to be trimmed out, should call this to switch it.
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SwitchTrimSide
            (
            );
            /**Returns  the finish operation. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool FinishOperation
            (
            );
            /**Sets  the finish operation. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetFinishOperation
            (
                bool finishOperation /** if set to true, trim task will be finish operation, or else it is not finish operation. */
            );
            /**Returns  the layout flange. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool LayoutFlange
            (
            );
            /**Sets  the layout flange. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetLayoutFlange
            (
                bool layoutFlange /** if set to true, trim task will layout flange, or else not layout flange. */
            );
            /**Returns  the create scrap. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool CreateScrap
            (
            );
            /**Sets  the create scrap. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetCreateScrap
            (
                bool createScrap /** if set to true, trim task will create scrap, or else not create scrap. */
            );
            /**Returns  the trim task tolerance. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: double TrimTolerance
            (
            );
            /**Sets  the trim task tolerance. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetTrimTolerance
            (
                double trimTolerance /** trimtolerance */ 
            );
            /**Returns  the match cut. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: NXOpen::Tooling::DieEngTrimTaskBuilder::TrimTaskMatchCutType MatchCut
            (
            );
            /**Sets  the match cut. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCut
            (
                NXOpen::Tooling::DieEngTrimTaskBuilder::TrimTaskMatchCutType matchCut /** matchcut */ 
            );
            /**Sets the match cut dimension notch offset value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutNotchOffset
            (
                double notchOffset /** notchoffset */ 
            );
            /**Sets the match cut dimension first radius value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutFirstRadius
            (
                double firstRadius /** firstradius */ 
            );
            /**Sets the match cut dimension second radius value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutSecondRadius
            (
                double secondRadius /** secondradius */ 
            );
            /**Sets the match cut dimension third radius value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutThirdRadius
            (
                double thirdRadius /** thirdradius */ 
            );
            /**Sets the match cut dimension offset length value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutOffsetLength
            (
                double offsetLength /** offsetlength */ 
            );
            /**Sets the match cut dimension angle value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutAngle
            (
                double angle /** angle */ 
            );
            /**Sets the match cut dimension scrap cutter length value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutScrapCutterLength
            (
                double scrapCutterLength /** scrapcutterlength */ 
            );
            /**Sets the match cut dimension offset from plane value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetMatchCutOffsetFromPlane
            (
                double offsetFromPlane /** offsetfromplane */ 
            );
            /**Sets the match cut dimension use plane offset value. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetUsePlaneOffset
            (
                bool useOffset /** useoffset */ 
            );
            /**Returns  the start plane selected. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool StartPlaneSelected
            (
            );
            /**Sets  the start plane selected. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetStartPlaneSelected
            (
                bool startPlaneSelected /** if set to true, hints that start plane is selected, or else not selected. */
            );
            /**Returns  the end plane selected. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool EndPlaneSelected
            (
            );
            /**Sets  the end plane selected. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetEndPlaneSelected
            (
                bool endPlaneSelected /** if set to true, hints that end plane is selected, or else not selected. */
            );
            /**Returns  the trim new die face, from NX10.0 new stamping output can import one new die face to die engineer process.
                        If this trim task will trim this new die face, set trimNewDieFace to true, or else set it to false. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: bool TrimNewDieFace
            (
            );
            /**Sets  the trim new die face, from NX10.0 new stamping output can import one new die face to die engineer process.
                        If this trim task will trim this new die face, set trimNewDieFace to true, or else set it to false. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : die_engineering ("DIE ENGINEERING") */
            public: void SetTrimNewDieFace
            (
                bool trimNewDieFace /** if set to true, pierce task performs on new die face, or else it will perform on original die face. */
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
