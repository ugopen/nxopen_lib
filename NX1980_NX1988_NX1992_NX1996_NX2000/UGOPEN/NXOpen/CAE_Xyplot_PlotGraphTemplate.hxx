#ifndef NXOpen_CAE_XYPLOT_PLOTGRAPHTEMPLATE_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_PLOTGRAPHTEMPLATE_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_PlotGraphTemplate.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_Xyplot_DiagramDisplayStyles.hxx>
#include <NXOpen/CAE_Xyplot_GeneralDisplayStyles.hxx>
#include <NXOpen/CAE_Xyplot_WallDisplayStyles.hxx>
#include <NXOpen/CAE_Xyplot_BaseDisplayStyleSetting.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class PlotGraphTemplate;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BaseDisplayStyleSetting;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class DiagramDisplayStyles;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class GeneralDisplayStyles;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class WallDisplayStyles;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class _PlotGraphTemplateBuilder;
            class PlotGraphTemplateImpl;
            /** Manages the plot graph template.  <br> Not support KF.  <br> 
             <br>  Created in NX10.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  PlotGraphTemplate : public NXOpen::CAE::Xyplot::BaseDisplayStyleSetting
            {
                private: PlotGraphTemplateImpl * m_plotgraphtemplate_impl;
                private: friend class  _PlotGraphTemplateBuilder;
                protected: PlotGraphTemplate();
                public: ~PlotGraphTemplate();
                /**Returns  the general display styles. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::GeneralDisplayStyles * GeneralDisplayStyles
                (
                );
                /**Returns  the diagram display styles. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::DiagramDisplayStyles * DiagramDisplayStyles
                (
                );
                /**Returns  the wall display styles. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::WallDisplayStyles * WallDisplayStyles
                (
                );
                /** Resets the graph template to default values 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void ResetToDefault
                (
                );
                /** Updates current graph template setting from a template xml file 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void ImportTemplate
                (
                    const NXString & strXmlFile /** Template xml file name */
                );
                /** Updates current graph template setting from a template xml file 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                void ImportTemplate
                (
                    const char * strXmlFile /** Template xml file name */
                );
                /** Exports current graph template setting to a template xml file,
                                it will override the template file if it is existing. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                public: void ExportTemplate
                (
                    const NXString & strXmlFile /** Template xml file name */
                );
                /** Exports current graph template setting to a template xml file,
                                it will override the template file if it is existing. 
                 <br>  Created in NX10.0.0.  <br>  
                 <br> License requirements : None */
                void ExportTemplate
                (
                    const char * strXmlFile /** Template xml file name */
                );
                /**Returns  the abscissa custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString AbscissaCustomMarkerLabel
                (
                );
                /**Sets  the abscissa custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetAbscissaCustomMarkerLabel
                (
                    const NXString & xCustomMarkerLabel /** xcustommarkerlabel */ 
                );
                /**Sets  the abscissa custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                void SetAbscissaCustomMarkerLabel
                (
                    const char * xCustomMarkerLabel /** xcustommarkerlabel */ 
                );
                /**Returns  the ordinate custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString OrdinateCustomMarkerLabel
                (
                );
                /**Sets  the ordinate custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetOrdinateCustomMarkerLabel
                (
                    const NXString & yCustomMarkerLabel /** ycustommarkerlabel */ 
                );
                /**Sets  the ordinate custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                void SetOrdinateCustomMarkerLabel
                (
                    const char * yCustomMarkerLabel /** ycustommarkerlabel */ 
                );
                /**Returns  the z custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ZCustomMarkerLabel
                (
                );
                /**Sets  the z custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: void SetZCustomMarkerLabel
                (
                    const NXString & zCustomMarkerLabel /** zcustommarkerlabel */ 
                );
                /**Sets  the z custom marker label 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                void SetZCustomMarkerLabel
                (
                    const char * zCustomMarkerLabel /** zcustommarkerlabel */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
