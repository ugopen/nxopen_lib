#ifndef NXOpen_MECHANICALROUTING_ROUTINGMANAGER_HXX_INCLUDED
#define NXOpen_MECHANICALROUTING_ROUTINGMANAGER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     MechanicalRouting_RoutingManager.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/TaggedObject.hxx>
#include <NXOpen/libnxopencpp_mechanicalrouting_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace MechanicalRouting
    {
        class RoutingManager;
    }
    class Session;
    namespace Assemblies
    {
        class Component;
    }
    class BasePart;
    namespace MechanicalRouting
    {
        class BuilderFactory;
    }
    namespace MechanicalRouting
    {
        class ConnectivityService;
    }
    namespace MechanicalRouting
    {
        class LogicalDesignService;
    }
    namespace MechanicalRouting
    {
        class RunAssembliesService;
    }
    namespace MechanicalRouting
    {
        class RunsAssignmentManager;
    }
    namespace MechanicalRouting
    {
        class RunsManager;
    }
    namespace Routing
    {
        class Port;
    }
    namespace MechanicalRouting
    {
        class RoutingManagerImpl;
        /** Represents an @link NXOpen::MechanicalRouting::RoutingManager NXOpen::MechanicalRouting::RoutingManager@endlink  object.
              <br> To obtain an instance of this class, refer to @link NXOpen::Session  NXOpen::Session @endlink  <br> 
         <br>  Created in NX11.0.0.  <br>  
        */
        class NXOPENCPP_MECHANICALROUTINGEXPORT  RoutingManager
        {
            /** Specifies what type of Cableway data to export.
                        For use in @link MechanicalRouting::RoutingManager::ExportCablewayToFile MechanicalRouting::RoutingManager::ExportCablewayToFile@endlink .
                    */
            public: enum DataType
            {
                DataTypeAll/** Export everything (segments, nodes, and devices).                */,
                DataTypeNetwork/** Export the segments and nodes that make up the cableway network. */,
                DataTypeDevices/** Export the devices that connect to the cableway network.         */
            };

            private: RoutingManagerImpl * m_routingmanager_impl;
            private: NXOpen::Session* m_owner;
            /// \cond NX_NO_DOC 
            public: explicit RoutingManager(NXOpen::Session *owner);


            /// \endcond 
            public: 
            /**Returns the tag of this object.  */
            tag_t Tag() const; 
            private: static RoutingManager* theRoutingManager;
            /** Returns the RoutingManager object for the running session which serves as the 'gateway' class for the application API.  
                References to all other objects in this API are obtained either directly or indirectly via methods and properties on this class.  
                Platform Session should be initialized using 'GetSession' method from NXOpen API prior to this call.  
            */
            public: static RoutingManager* GetRoutingManager(NXOpen::Session *owner);
            public: ~RoutingManager();
            /**  Gets port occurrences from given fitting component.
                         One of the ports returned may not be from the part of that component and may be a prototype port if the
                         component is a cut elbow.
                    
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : routing_base ("Routing Basic") */
            public: void GetPortsFromFitting
            (
                NXOpen::Assemblies::Component * fittingComponent /** The component whose ports are queried. */,
                std::vector<NXOpen::Routing::Port *> & ports /** ports */ 
            );
            /** Exports all of the NX Routing cableway information from the given part
                        to the given XML file in a format the Capital Marine Router can read.

                        Returns an error if
                        <ul>
                            <li>Unable to write to the file</li>
                            <li>There is no Routing data in the part</li>
                        </ul>
                    
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            public: void ExportCablewayToFile
            (
                NXOpen::BasePart * part /** The part from which to export Routing cableway data. */,
                const NXString & xmlFileName /** The file name in which to write the cableway data. */,
                const NXString & action /** Reserved for future use. */,
                NXOpen::MechanicalRouting::RoutingManager::DataType dataTypeToExport /** The type of data to export (e.g. cableways, devices, or both). */,
                int maxSearchLevels /** The maximum number of levels down the assembly tree to search for cableway data. */
            );
            /** Exports all of the NX Routing cableway information from the given part
                        to the given XML file in a format the Capital Marine Router can read.

                        Returns an error if
                        <ul>
                            <li>Unable to write to the file</li>
                            <li>There is no Routing data in the part</li>
                        </ul>
                    
             <br>  Created in NX1980.0.0.  <br>  
             <br> License requirements : routing_cabling ("Routing Cabling") */
            void ExportCablewayToFile
            (
                NXOpen::BasePart * part /** The part from which to export Routing cableway data. */,
                const char * xmlFileName /** The file name in which to write the cableway data. */,
                const char * action /** Reserved for future use. */,
                NXOpen::MechanicalRouting::RoutingManager::DataType dataTypeToExport /** The type of data to export (e.g. cableways, devices, or both). */,
                int maxSearchLevels /** The maximum number of levels down the assembly tree to search for cableway data. */
            );


            /**  Returns a @link NXOpen::MechanicalRouting::BuilderFactory NXOpen::MechanicalRouting::BuilderFactory@endlink  object.  Use this object
                         to create specific routing mechanical builders.
                    
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::BuilderFactory *BuilderFactory();
            /**  Returns a @link NXOpen::MechanicalRouting::ConnectivityService NXOpen::MechanicalRouting::ConnectivityService@endlink  object.  Use this object
                         for specific Routing Mechanical Connectivity Service.
                    
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::ConnectivityService *ConnectivityService();
            /**  Returns a @link NXOpen::MechanicalRouting::LogicalDesignService NXOpen::MechanicalRouting::LogicalDesignService@endlink  object.  Use this object
                         for specific Routing Mechanical Logical Design to Physical Design Service.
                    
             <br>  Created in NX11.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::LogicalDesignService *LogicalDesignService();

            /// \cond NX_NO_DOC 
            /**  Returns a @link NXOpen::MechanicalRouting::RunAssembliesService NXOpen::MechanicalRouting::RunAssembliesService@endlink  object. Use this object
                         for specific Routing Mechanical Run Service.
                    
             <br>  Created in NX1872.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::RunAssembliesService *RunAssembliesService();

            /// \endcond 
            /**  Returns a @link NXOpen::MechanicalRouting::RunsManager NXOpen::MechanicalRouting::RunsManager@endlink  object. Use this object
                         for specific Routing Mechanical Runs Manager.
                    
             <br>  Created in NX1953.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::RunsManager *RunsManager();
            /**  Returns a @link NXOpen::MechanicalRouting::RunsAssignmentManager NXOpen::MechanicalRouting::RunsAssignmentManager@endlink  object. Use this object
                         for specific Routing Mechanical Runs Assignment Manager.
                    
             <br>  Created in NX1953.0.0.  <br>  
            */
            public: NXOpen::MechanicalRouting::RunsAssignmentManager *RunsAssignmentManager();
        }; //lint !e1712 default constructor not defined for class  

    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
