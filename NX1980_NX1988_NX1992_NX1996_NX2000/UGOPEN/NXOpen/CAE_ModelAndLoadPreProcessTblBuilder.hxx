#ifndef NXOpen_CAE_MODELANDLOADPREPROCESSTBLBUILDER_HXX_INCLUDED
#define NXOpen_CAE_MODELANDLOADPREPROCESSTBLBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_ModelAndLoadPreProcessTblBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_AcousticsAndVibrationTblModelParametersAccessor.hxx>
#include <NXOpen/CAE_ModelAndLoadPreProcessFrequencyOptions.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/CAE_ModelAndLoadPreProcessOperationBuilder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class ModelAndLoadPreProcessTblBuilder;
    }
    namespace CAE
    {
        class AcousticsAndVibrationTblModelParametersAccessor;
    }
    namespace CAE
    {
        class ModelAndLoadPreProcessFrequencyOptions;
    }
    namespace CAE
    {
        class ModelAndLoadPreProcessOperationBuilder;
    }
    class Expression;
    namespace Fields
    {
        class FieldWrapper;
    }
    class SelectTaggedObjectList;
    namespace CAE
    {
        class _ModelAndLoadPreProcessTblBuilderBuilder;
        class ModelAndLoadPreProcessTblBuilderImpl;
        /**
            Builds a @link NXOpen::CAE::ModelAndLoadPreProcessTbl NXOpen::CAE::ModelAndLoadPreProcessTbl@endlink  object which 
            represets an operation.
             <br> There is no kf creator for this.  <br> 
         <br>  Created in NX1847.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  ModelAndLoadPreProcessTblBuilder : public NXOpen::CAE::ModelAndLoadPreProcessOperationBuilder
        {
            /** Correlation spectrum type 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the enum contained in @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the enum contained in AcousticsAndVibrationTblModelParametersAccessor instead.") CsType
            {
                CsTypeCorcos/** corcos */ ,
                CsTypeEfimtsov/** efimtsov */ ,
                CsTypeChase/** chase */ ,
                CsTypeUserDefined/** user defined */ 
            };

            /** Auto-spectrum type 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the enum contained in @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  
            */
            public: enum NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the enum contained in AcousticsAndVibrationTblModelParametersAccessor instead.") AsType
            {
                AsTypeRobertCorcos/** robert corcos */ ,
                AsTypeEfimtsov/** efimtsov */ ,
                AsTypeGoody/** goody */ ,
                AsTypeSmolyakov/** smolyakov */ ,
                AsTypeCockburnRobertson/** cockburn robertson */ ,
                AsTypeSmolyakovTkachenko/** smolyakov tkachenko */ ,
                AsTypeChaseHowe/** chase howe */ ,
                AsTypeUserDefined/** user defined */ 
            };

            /** Formulation type */
            public: enum Formulation
            {
                FormulationWaveNumberDomain/** wave number domain */ ,
                FormulationSpatialCholesky/** spatial cholesky */ 
            };

            private: ModelAndLoadPreProcessTblBuilderImpl * m_modelandloadpreprocesstblbuilder_impl;
            private: friend class  _ModelAndLoadPreProcessTblBuilderBuilder;
            protected: ModelAndLoadPreProcessTblBuilder();
            public: ~ModelAndLoadPreProcessTblBuilder();
            /**Returns  the region selector 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::SelectTaggedObjectList * RegionSelector
            (
            );
            /**Returns  the formulation type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::Formulation FormulationType
            (
            );
            /**Sets  the formulation type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetFormulationType
            (
                NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::Formulation formulationType /** formulationtype */ 
            );
            /**Returns  the enable random sampling 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool EnableRandomSampling
            (
            );
            /**Sets  the enable random sampling 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetEnableRandomSampling
            (
                bool enableRandomSampling /** enablerandomsampling */ 
            );
            /**Returns  the number of random samples
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int NumRandomSamples
            (
            );
            /**Sets  the number of random samples
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetNumRandomSamples
            (
                int numRandomSamples /** numrandomsamples */ 
            );
            /**Returns  the min kx 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * MinKx
            (
            );
            /**Returns  the max kx 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * MaxKx
            (
            );
            /**Returns  the min ky 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * MinKy
            (
            );
            /**Returns  the max ky 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * MaxKy
            (
            );
            /**Returns  the delta kx 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * DeltaKx
            (
            );
            /**Returns  the delta ky 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * DeltaKy
            (
            );
            /**Returns  the scale loads option
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: bool ScaleLoads
            (
            );
            /**Sets  the scale loads option
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetScaleLoads
            (
                bool scaleLoads /** scaleloads */ 
            );
            /**Returns  the frequency options param 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModelAndLoadPreProcessFrequencyOptions * FrequencyOptions
            (
            );
            /**Returns  the tbl selection accessor. 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor * TblModel
            (
            );
            /**Returns  the correlation spectrum 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::CsType CorrelationSpectrumType
            (
            );
            /**Sets  the correlation spectrum 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") void SetCorrelationSpectrumType
            (
                NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::CsType correlationSpectrumType /** correlationspectrumtype */ 
            );
            /**Returns  the correlation spectrum user dll 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXString CorrelationSpectrumUserDLL
            (
            );
            /**Sets  the correlation spectrum user dll 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") void SetCorrelationSpectrumUserDLL
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the correlation spectrum user dll 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetCorrelationSpectrumUserDLL
            (
                const char * filename /** filename */ 
            );
            /** User params. 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") void GetUserParameters
            (
                std::vector<NXString> & userParamNames /** userparamnames */ ,
                std::vector<NXOpen::Expression *> & userParameters /** userparameters */ 
            );
            /**Returns  the auto spectrum 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::AsType AutoSpectrumType
            (
            );
            /**Sets  the auto spectrum 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") void SetAutoSpectrumType
            (
                NXOpen::CAE::ModelAndLoadPreProcessTblBuilder::AsType correlationSpectrum /** correlationspectrum */ 
            );
            /**Returns  the auto spectrum field 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Fields::FieldWrapper * AutoSpectrumField
            (
            );
            /**Sets  the auto spectrum field 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") void SetAutoSpectrumField
            (
                NXOpen::Fields::FieldWrapper * fieldTag /** fieldtag */ 
            );
            /**Returns  the fluid outer velocity parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * FluidOuterVelocityParam
            (
            );
            /**Returns  the convective velocity X parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * ConvectiveVelocityXParam
            (
            );
            /**Returns  the convective velocity Y parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * ConvectiveVelocityYParam
            (
            );
            /**Returns  the convective velocity Z parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * ConvectiveVelocityZParam
            (
            );
            /**Returns  the sound speed parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * SoundSpeedParam
            (
            );
            /**Returns  the fluid density parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * FluidDensityParam
            (
            );
            /**Returns  the wall friction velocity parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * WallFrictionVelocityParam
            (
            );
            /**Returns  the fluid viscosity parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * FluidViscosityParam
            (
            );
            /**Returns  the boundary layer thickness parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * BoundaryLayerThicknessParam
            (
            );
            /**Returns  the displacement thickness parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * DisplacementThicknessParam
            (
            );
            /**Returns  the momentum thickness parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * MomentumThicknessParam
            (
            );
            /**Returns  the wall shear stress parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * WallShearStressParam
            (
            );
            /**Returns  the correlation decay rate (alpha) parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * CorrelationDecayRateAlphaParam
            (
            );
            /**Returns  the correlation decay rate (beta) parameter 
             <br>  @deprecated Deprecated in NX1872.0.0.  Use the accessors in the contained @link AcousticsAndVibrationTblModelParametersAccessor AcousticsAndVibrationTblModelParametersAccessor@endlink  instead. <br>  

             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NX_DEPRECATED("Deprecated in NX1872.0.0.  Use the accessors in the contained AcousticsAndVibrationTblModelParametersAccessor instead.") NXOpen::Expression * CorrelationDecayRateBetaParam
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
