#ifndef NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_CONNECTIONBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_TOPOLOGYOPTIMIZATION_CONNECTIONBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_TopologyOptimization_ConnectionBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/SelectObject.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace TopologyOptimization
        {
            class ConnectionBuilder;
        }
    }
    class Builder;
    class Expression;
    class ScCollector;
    class SelectBody;
    namespace Features
    {
        namespace TopologyOptimization
        {
            class _ConnectionBuilderBuilder;
            class ConnectionBuilderImpl;

            /// \cond NX_NO_DOC 
            /**
                    Represents a @link Features::TopologyOptimization::Connection Features::TopologyOptimization::Connection@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::TopologyOptimization::Study::CreateConnectionBuilder  NXOpen::Features::TopologyOptimization::Study::CreateConnectionBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            ShellOffset1.Value </term> <description> 
             
            5 (millimeters part), 0.02 (inches part) </description> </item> 

            <item><term> 
             
            ShellOffset2.Value </term> <description> 
             
            5 (millimeters part), 0.02 (inches part) </description> </item> 

            </list> 

             <br>  Created in NX1953.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  ConnectionBuilder : public NXOpen::Builder
            {
                /** define connection types */
                public: enum Types
                {
                    TypesBodyToBody/** body to body */ ,
                    TypesFaceToFace/** face to face */ 
                };

                private: ConnectionBuilderImpl * m_connectionbuilder_impl;
                private: friend class  _ConnectionBuilderBuilder;
                protected: ConnectionBuilder();
                public: ~ConnectionBuilder();

                /// \cond NX_NO_DOC 
                /**Returns  the connection name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXString ConnectionName
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the connection name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetConnectionName
                (
                    const NXString & connectionName /** connectionname */ 
                );
                /**Sets  the connection name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                void SetConnectionName
                (
                    const char * connectionName /** connectionname */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the select faces1 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * SelectFaces1
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the shell offset for faces1 or body1 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ShellOffset1
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the select faces2 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * SelectFaces2
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the shell offset for faces2 or body2 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * ShellOffset2
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the select body1 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBody * SelectBody1
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the select body2 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::SelectBody * SelectBody2
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::TopologyOptimization::ConnectionBuilder::Types Type
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the type 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetType
                (
                    NXOpen::Features::TopologyOptimization::ConnectionBuilder::Types type /** type */ 
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Returns  the flag indicating whether the object uses an user-defined name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool UserSetName
                (
                );

                /// \endcond 

                /// \cond NX_NO_DOC 
                /**Sets  the flag indicating whether the object uses an user-defined name 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : des_top_opt ("TOPOLOGY OPTIMIZATION FOR DESIGNERS") */
                public: void SetUserSetName
                (
                    bool userSetName /** usersetname */ 
                );

                /// \endcond 
            };

            /// \endcond 
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
