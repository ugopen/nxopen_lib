#ifndef NXOpen_CAE_XYPLOT_RESULTACCESSOR_HXX_INCLUDED
#define NXOpen_CAE_XYPLOT_RESULTACCESSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_Xyplot_ResultAccessor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_XyplotDataTypes.hxx>
#include <NXOpen/CAE_Xyplot_Argand3DFunctionDataAccessor.hxx>
#include <NXOpen/CAE_Xyplot_BarChartFunctionDataAccessor.hxx>
#include <NXOpen/CAE_Xyplot_CampbellFunctionDataAccessor.hxx>
#include <NXOpen/CAE_Xyplot_Graph.hxx>
#include <NXOpen/CAE_Xyplot_MatrixFunctionDataAccessor.hxx>
#include <NXOpen/CAE_Xyplot_Plot.hxx>
#include <NXOpen/CAE_Xyplot_XYFunctionDataAccessor.hxx>
#include <NXOpen/CAE_Xyplot_XYZFunctionDataAccessor.hxx>
#include <NXOpen/TransientObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        namespace Xyplot
        {
            class ResultAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Argand3DFunctionDataAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class BarChartFunctionDataAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class CampbellFunctionDataAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Graph;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class MatrixFunctionDataAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class Plot;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class XYFunctionDataAccessor;
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class XYZFunctionDataAccessor;
        }
    }
    class TaggedObject;
    namespace CAE
    {
        namespace Xyplot
        {
        }
    }
    namespace CAE
    {
        namespace Xyplot
        {
            class ResultAccessorImpl;
            /**  @brief  Represents a data accessor to retrieve data from Function Plot.  

              
             <br>  Created in NX1899.0.0.  <br>  
            */
            class NXOPENCPP_CAEEXPORT  ResultAccessor : public NXOpen::TransientObject
            {
                private: ResultAccessorImpl * m_resultaccessor_impl;
                /// \cond NX_NO_DOC 
                public: explicit ResultAccessor(void *ptr);
                /// \endcond 
                /** Asks function data accessor type. Then choose correct method to get data accessor according to the accessor type returned 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::FunctionDataAccessor AskFunctionDataAccessorType
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks XY function data accessor. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::XYFunctionDataAccessor * AskXYFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks argand 3D function data accessor. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::Argand3DFunctionDataAccessor * AskArgand3DFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks XYZ function data accessor. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::XYZFunctionDataAccessor * AskXYZFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks BarChart function data accessor. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::BarChartFunctionDataAccessor * AskBarChartFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks matrix function data accessor. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::MatrixFunctionDataAccessor * AskMatrixFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks campbell function data accessor. 
                 <br>  Created in NX1926.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::CampbellFunctionDataAccessor * AskCampbellFunctionDataAccessor
                (
                    int graphIndex /** The graph index starts form 0 to graph count -1. Get graph count from <ja_property>ResultAccessor.GraphCount</ja_property> */,
                    int recordIndex /** The record index starts form 0 to record count -1. Get record count from <ja_property>ResultAccessor.RecordCount</ja_property> */
                );
                /** Asks post environment settings. 
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::TaggedObject * AskPostEnvironment
                (
                );
                /**Returns  the canvas index this object was created for. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: int CanvasIndex
                (
                );
                /**Returns  the plot this object was created for. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::Plot * Plot
                (
                );
                /**Returns  the number of graphs on this canvas. 
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: int GraphCount
                (
                );
                /**  @brief Retrieve a Graph from this Canvas. 

                 
                            
                                
                                 <br> This method is useful to retrieve @link NXOpen::CAE::Xyplot::Graph NXOpen::CAE::Xyplot::Graph@endlink  objects in the context of a canvas. <br> 
                                 <br> This method raises an error if this object was not constructed with a canvas index. <br> 
                                 <br> Graphs can also be retrieved globally from @link NXOpen::CAE::Xyplot::Plot NXOpen::CAE::Xyplot::Plot@endlink  via @link NXOpen::NXObject::FindObject NXOpen::NXObject::FindObject@endlink . <br> 
                                 <br> See @link NXOpen::CAE::Xyplot::XYPlotManager::CreateResultAccessorOnCanvas NXOpen::CAE::Xyplot::XYPlotManager::CreateResultAccessorOnCanvas@endlink . <br> 
                                
                              
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::CAE::Xyplot::Graph * GetNthGraph
                (
                    int graphIdx /** the index of the graph on this canvas */
                );
                /**Returns  the number of records this object can access. 
                            
                                If <ja_property>NXOpen.CAE.Xyplot.ResultAccessor.OnCanvas</ja_property> is true,
                                then you can retrieve records specific to the canvas this object was created on.

                                If <ja_property>NXOpen.CAE.Xyplot.ResultAccessor.OnCanvas</ja_property> is false,
                                then you can retrieve records all records in this plot.
                              
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: int RecordCount
                (
                );
                /**Returns  the result access mode.
                            
                                If true, this object retrieves data from a specific canvas.

                                If false, this object retrieves data from the entire plot.
                              
                 <br>  Created in NX1953.0.0.  <br>  
                 <br> License requirements : None */
                public: bool OnCanvas
                (
                );
                /** Destroys the object. 
                 <br>  Created in NX9.0.0.  <br>  
                 <br> License requirements : None */
                public: virtual ~ResultAccessor();
            }; //lint !e1712 default constructor not defined for class  

        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
