#ifndef NXOpen_CAE_DURSPECIALISTVIBRATIONDATASOURCEBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTVIBRATIONDATASOURCEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistVibrationDataSourceBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistCorrelationInputDefinition.hxx>
#include <NXOpen/CAE_DurSpecialistDataSources.hxx>
#include <NXOpen/CAE_DurSpecialistEvent.hxx>
#include <NXOpen/CAE_DurSpecialistVibrationInputDefinition.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistVibrationDataSourceBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistCorrelationInputDefinition;
    }
    namespace CAE
    {
        class DurSpecialistMpfSubcaseLink;
    }
    namespace CAE
    {
        class DurSpecialistVibrationInputDefinition;
    }
    namespace CAE
    {
        class ModeSet;
    }
    namespace CAE
    {
        class SimSolution;
    }
    class Expression;
    namespace CAE
    {
        class _DurSpecialistVibrationDataSourceBuilderBuilder;
        class DurSpecialistVibrationDataSourceBuilderImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistVibrationDataSource NXOpen::CAE::DurSpecialistVibrationDataSource@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistVibrationDataSourceCollection::CreateVibrationDataSourceBuilder  NXOpen::CAE::DurSpecialistVibrationDataSourceCollection::CreateVibrationDataSourceBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        ModeSelection </term> <description> 
         
        ByIndex </description> </item> 

        <item><term> 
         
        StaticLoadSourceType </term> <description> 
         
        Solution </description> </item> 

        </list> 

         <br>  Created in NX1899.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistVibrationDataSourceBuilder : public NXOpen::Builder
        {
            /** the Mode Set modes */
            public: enum ModeType
            {
                ModeTypeFree/** use free-free mode */,
                ModeTypeFixed/** use fixed-fixed mode */,
                ModeTypeReadMpf/** read mpf */
            };

            /** the Modal Participation Factors source */
            public: enum Source
            {
                SourceFile/** use selected file */,
                SourceModeSet/** use mode set */
            };

            /** the type static loads source */
            public: enum StaticLoadSource
            {
                StaticLoadSourceFile/** use selected file */,
                StaticLoadSourceSolution/** use solution */
            };

            private: DurSpecialistVibrationDataSourceBuilderImpl * m_durspecialistvibrationdatasourcebuilder_impl;
            private: friend class  _DurSpecialistVibrationDataSourceBuilderBuilder;
            protected: DurSpecialistVibrationDataSourceBuilder();
            public: ~DurSpecialistVibrationDataSourceBuilder();
            /**Returns  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the file type. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::ModeSet * ModeSet
            (
            );
            /**Sets  the file type. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetModeSet
            (
                NXOpen::CAE::ModeSet * theModeSet /** themodeset */ 
            );
            /**Returns  the mode of the mode set. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType Mode
            (
            );
            /**Sets  the mode of the mode set. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetMode
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType mode /** mode */ 
            );
            /**Returns  the modal participation factors read flag. 
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType@endlink  instead. <br>  

             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType instead.") bool ReadMpf
            (
            );
            /**Sets  the modal participation factors read flag. 
             <br>  @deprecated Deprecated in NX1926.0.0.  Use @link NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType@endlink  instead. <br>  

             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NX_DEPRECATED("Deprecated in NX1926.0.0.  Use NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::ModeType instead.") void SetReadMpf
            (
                bool flag /** flag */ 
            );
            /**Returns  the modal participation factors source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::Source MpfSource
            (
            );
            /**Sets  the modal participation factors source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetMpfSource
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::Source source /** source */ 
            );
            /**Returns  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXString FilePath
            (
            );
            /**Sets  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFilePath
            (
                const NXString & filePath /** filepath */ 
            );
            /**Sets  the file path to mpf file. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetFilePath
            (
                const char * filePath /** filepath */ 
            );
            /**Returns  the step for the forcing frequencies. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * Step
            (
            );
            /**Sets  the step for the forcing frequencies. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetStep
            (
                NXOpen::Expression * stepTag /** steptag */ 
            );
            /** Add a vibration input definition. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void AddVibrationInputDefinition
            (
                NXOpen::CAE::DurSpecialistVibrationInputDefinition * vid /** The vibration input definition. */
            );
            /** Add a correlation input definition. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void AddCorrelationInputDefinition
            (
                NXOpen::CAE::DurSpecialistCorrelationInputDefinition * cid /** The correlation input definition. */
            );
            /** Get the number of Mpf subcases.  @return  Number of Mpf subcases. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: int GetNumberMPFSubcases
            (
            );
            /** Get the global index of the nth subcase.  @return  Get the global index of the nth subcase. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: int GetNthMPFSubcaseIndex
            (
                int nth /** Zero-based subcase index */
            );
            /** Get the nth subcase.  @return  the nth subcase. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXOpen::CAE::DurSpecialistMpfSubcaseLink * GetNthMPFSubcase
            (
                int nth /** Zero-based subcase index */
            );
            /** Get the name of the nth subcase.  @return  The name of the nth subcase 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: NXString GetNthMPFSubcaseName
            (
                int nth /** Zero-based subcase index */
            );
            /**Returns  the static loads source 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::StaticLoadSource StaticLoadSourceType
            (
            );
            /**Sets  the static loads source 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetStaticLoadSourceType
            (
                NXOpen::CAE::DurSpecialistVibrationDataSourceBuilder::StaticLoadSource source /** source */ 
            );
            /** Gets the file name.  @return  
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetFileName
            (
            );
            /** Sets file name and type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFile
            (
                const NXString & fileName /** filename */ ,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /** Sets file name and type 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetFile
            (
                const char * fileName /** filename */ ,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /** Sets solution 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSolution
            (
                NXOpen::CAE::SimSolution * sol /** sol */ 
            );
            /**Returns  the file type. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistDataSources::FileFormat DataSourceType
            (
            );
            /**Sets  the file type. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDataSourceType
            (
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /** Sets the unit system. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetUnitSystem
            (
                NXOpen::CAE::DurSpecialistDataSources::UnitSystem unitSystem /** unitsystem */ 
            );
            /**Returns  the selection criterion for update. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistEvent::UpdateCriterionType ModeSelection
            (
            );
            /**Sets  the selection criterion for update. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetModeSelection
            (
                NXOpen::CAE::DurSpecialistEvent::UpdateCriterionType type /** type */ 
            );
            /**Returns  the number of static load scales. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : None */
            public: int NumStaticLoadScales
            (
            );
            /**Sets  the number of static load scales. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetNumStaticLoadScales
            (
                int numModes /** nummodes */ 
            );
            /** Set the static loads and their scale factors 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetStaticLoad
            (
                const std::vector<int> & modeIndex /** modeindex */ ,
                const std::vector<double> & scaleFactor /** scalefactor */ 
            );
            /** Updates vibration input definition based on the modal participation factors defined in file 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void UpdateMpfVibrationInputDefinitionByFile
            (
                const NXString & mpfFilePath /** the full file path for modal participation factors */
            );
            /** Updates vibration input definition based on the modal participation factors defined in file 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void UpdateMpfVibrationInputDefinitionByFile
            (
                const char * mpfFilePath /** the full file path for modal participation factors */
            );
            /** Updates vibration input definition based on the modal participation factors defined in mode set 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void UpdateMpfVibrationInputDefinitionByModeSet
            (
                NXOpen::CAE::ModeSet * modeSet /** the mode set source for modal participation factors */
            );
            /** Adjusts the fixed boundary condition types specified in vibration input definition to free as reading modal participation factors is specified  @return  Indicates boundary conditions changed at a few degree of freedom. 
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: int AdjustMpfVibrationInputDefinitionBCTypes
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
