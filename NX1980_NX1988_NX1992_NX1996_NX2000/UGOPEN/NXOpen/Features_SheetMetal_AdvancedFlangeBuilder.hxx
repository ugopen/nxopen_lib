#ifndef NXOpen_FEATURES_SHEETMETAL_ADVANCEDFLANGEBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHEETMETAL_ADVANCEDFLANGEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_SheetMetal_AdvancedFlangeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Features_SheetMetal_BendOptions.hxx>
#include <NXOpen/Features_SheetMetal_SheetmetalBaseBuilder.hxx>
#include <NXOpen/ScCollector.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace SheetMetal
        {
            class AdvancedFlangeBuilder;
        }
    }
    class Expression;
    namespace Features
    {
        namespace SheetMetal
        {
            class BendOptions;
        }
    }
    namespace Features
    {
        namespace SheetMetal
        {
            class SheetmetalBaseBuilder;
        }
    }
    class Plane;
    class ScCollector;
    namespace Features
    {
        namespace SheetMetal
        {
            class _AdvancedFlangeBuilderBuilder;
            class AdvancedFlangeBuilderImpl;
            /** Represents a @link Features::SheetMetal::AdvancedFlangeBuilder Features::SheetMetal::AdvancedFlangeBuilder@endlink   <br> To create a new instance of this class, use @link NXOpen::Features::SheetMetal::SheetmetalManager::CreateAdvancedFlangeBuilder  NXOpen::Features::SheetMetal::SheetmetalManager::CreateAdvancedFlangeBuilder @endlink  <br> 
            Default values.
            <list type="table"> 
             
            <listheader><term> 
            Property</term>  <description> 
            Value</description> </listheader>
            <item><term> 
             
            Angle.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            EndAdjustment.Value </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            FlatPatternCompensationAtEnd </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            FlatPatternCompensationAtStart </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            InferLength </term> <description> 
             
            0 </description> </item> 

            <item><term> 
             
            Inset </term> <description> 
             
            MaterialInside </description> </item> 

            <item><term> 
             
            Length.Value </term> <description> 
             
            0 (millimeters part), 0 (inches part) </description> </item> 

            <item><term> 
             
            LengthReference </term> <description> 
             
            Inside </description> </item> 

            <item><term> 
             
            StartAdjustment.Value </term> <description> 
             
            0 </description> </item> 

            </list> 

             <br>  Created in NX11.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  AdvancedFlangeBuilder : public NXOpen::Features::SheetMetal::SheetmetalBaseBuilder
            {
                /** This enum defines the  type options.*/
                public: enum Types
                {
                    TypesByValue/** by value */ ,
                    TypesToReference/** to reference */ 
                };

                /** This enum defines the flange length dimension types */
                public: enum LengthReferences
                {
                    LengthReferencesInside/** inside */ ,
                    LengthReferencesOutside/** outside */ ,
                    LengthReferencesWeb/** web */ ,
                    LengthReferencesDin6935/** This represents 'Tangent' option on Advanced Flange dialog from nx12.0.2 onwards*/
                };

                /** This enum defines the material types */
                public: enum Insets
                {
                    InsetsMaterialInside/** material inside */ ,
                    InsetsMaterialOutside/** material outside */ ,
                    InsetsBendOutside/** bend outside */ ,
                    InsetsMaterialInsideOML/** material inside oml */ 
                };

                private: AdvancedFlangeBuilderImpl * m_advancedflangebuilder_impl;
                private: friend class  _AdvancedFlangeBuilderBuilder;
                protected: AdvancedFlangeBuilder();
                public: ~AdvancedFlangeBuilder();
                /**Returns  the base edge for the advanced flange.
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * Edges
                (
                );
                /**Returns  the  reference face for advanced flange 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::ScCollector * Faces
                (
                );
                /**Returns  the infer length option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool InferLength
                (
                );
                /**Sets  the infer length option 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetInferLength
                (
                    bool inferLength /** inferlength */ 
                );
                /**Returns  the length 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Length
                (
                );
                /**Returns  the option to reverse length direction 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseDirection
                (
                );
                /**Sets  the option to reverse length direction 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetReverseDirection
                (
                    bool reverseDirection /** reversedirection */ 
                );
                /**Returns  the option to reverse trim side 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool ReverseTrimSide
                (
                );
                /**Sets  the option to reverse trim side 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetReverseTrimSide
                (
                    bool reverseTrimSide /** reversetrimside */ 
                );
                /**Returns  the angle 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * Angle
                (
                );
                /**Returns  the length reference 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::LengthReferences LengthReference
                (
                );
                /**Sets  the length reference 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetLengthReference
                (
                    NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::LengthReferences lengthReference /** lengthreference */ 
                );
                /**Returns  the inset type 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::Insets Inset
                (
                );
                /**Sets  the inset type 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetInset
                (
                    NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::Insets inset /** inset */ 
                );
                /**Returns  the first plane for the end limits 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * Plane1
                (
                );
                /**Sets  the first plane for the end limits 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetPlane1
                (
                    NXOpen::Plane * plane1 /** plane1 */ 
                );
                /**Returns  the second plane for the end limits 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Plane * Plane2
                (
                );
                /**Sets  the second plane for the end limits 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetPlane2
                (
                    NXOpen::Plane * plane2 /** plane2 */ 
                );
                /**Returns  the  Sheet Metal Bend Options 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::BendOptions * BendOptions
                (
                );
                /**Returns  the  option to apply flat pattern compensation at start of the flange
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool FlatPatternCompensationAtStart
                (
                );
                /**Sets  the  option to apply flat pattern compensation at start of the flange
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetFlatPatternCompensationAtStart
                (
                    bool flatPatternCompensationAtStart /** flatpatterncompensationatstart */ 
                );
                /**Returns  the flat pattern compensation adjustment at start of the flange 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * StartAdjustment
                (
                );
                /**Returns  the  option to apply flat pattern compensation at end of the flange 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: bool FlatPatternCompensationAtEnd
                (
                );
                /**Sets  the  option to apply flat pattern compensation at end of the flange 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetFlatPatternCompensationAtEnd
                (
                    bool flatPatternCompensationAtEnd /** flatpatterncompensationatend */ 
                );
                /**Returns  the flat pattern compensation adjustment at end of the flange 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Expression * EndAdjustment
                (
                );
                /**Returns  the advanced flange type 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::Types Type
                (
                );
                /**Sets  the advanced flange type 
                 <br>  Created in NX11.0.0.  <br>  
                 <br> License requirements : adv_sheet_metal_dsgn ("ADVANCED SHEET METAL DESIGN") OR nx_flexible_pcb ("NX Flexible PCB") */
                public: void SetType
                (
                    NXOpen::Features::SheetMetal::AdvancedFlangeBuilder::Types type /** type */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
