#ifndef NXOpen_CAE_ACOUSTICSANDVIBRATIONTBLMODELPARAMETERSACCESSOR_HXX_INCLUDED
#define NXOpen_CAE_ACOUSTICSANDVIBRATIONTBLMODELPARAMETERSACCESSOR_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_AcousticsAndVibrationTblModelParametersAccessor.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/NXObject.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class AcousticsAndVibrationTblModelParametersAccessor;
    }
    class Expression;
    namespace Fields
    {
        class FieldWrapper;
    }
    class NXObject;
    namespace CAE
    {
        class _AcousticsAndVibrationTblModelParametersAccessorBuilder;
        class AcousticsAndVibrationTblModelParametersAccessorImpl;
        /**
            Builds a @link NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor@endlink  object which 
            allow TBL Model definition.
             <br> There is no kf creator for this.  <br> 
         <br>  Created in NX1872.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  AcousticsAndVibrationTblModelParametersAccessor : public NXOpen::NXObject
        {
            /** Correlation spectrum type */
            public: enum CsType
            {
                CsTypeCorcos/** corcos */ ,
                CsTypeEfimtsov/** efimtsov */ ,
                CsTypeChase/** chase */ ,
                CsTypeUserDefined/** user defined */ 
            };

            /** Auto-spectrum type */
            public: enum AsType
            {
                AsTypeRobertCorcos/** robert corcos */ ,
                AsTypeEfimtsov/** efimtsov */ ,
                AsTypeGoody/** goody */ ,
                AsTypeSmolyakov/** smolyakov */ ,
                AsTypeCockburnRobertson/** cockburn robertson */ ,
                AsTypeSmolyakovTkachenko/** smolyakov tkachenko */ ,
                AsTypeChaseHowe/** chase howe */ ,
                AsTypeUserDefined/** user defined */ 
            };

            private: AcousticsAndVibrationTblModelParametersAccessorImpl * m_acousticsandvibrationtblmodelparametersaccessor_impl;
            private: friend class  _AcousticsAndVibrationTblModelParametersAccessorBuilder;
            protected: AcousticsAndVibrationTblModelParametersAccessor();
            public: ~AcousticsAndVibrationTblModelParametersAccessor();
            /**Returns  the correlation spectrum 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor::CsType CorrelationSpectrumType
            (
            );
            /**Sets  the correlation spectrum 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCorrelationSpectrumType
            (
                NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor::CsType correlationSpectrumType /** correlationspectrumtype */ 
            );
            /**Returns  the auto spectrum 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor::AsType AutoSpectrumType
            (
            );
            /**Sets  the auto spectrum 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAutoSpectrumType
            (
                NXOpen::CAE::AcousticsAndVibrationTblModelParametersAccessor::AsType correlationSpectrum /** correlationspectrum */ 
            );
            /**Returns  the auto spectrum field 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Fields::FieldWrapper * AutoSpectrumField
            (
            );
            /**Sets  the auto spectrum field 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetAutoSpectrumField
            (
                NXOpen::Fields::FieldWrapper * fieldTag /** fieldtag */ 
            );
            /**Returns  the correlation spectrum user dll 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: NXString CorrelationSpectrumUserDLL
            (
            );
            /**Sets  the correlation spectrum user dll 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void SetCorrelationSpectrumUserDLL
            (
                const NXString & filename /** filename */ 
            );
            /**Sets  the correlation spectrum user dll 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            void SetCorrelationSpectrumUserDLL
            (
                const char * filename /** filename */ 
            );
            /**Returns  the fluid outer velocity parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * FluidOuterVelocityParam
            (
            );
            /**Returns  the convective velocity X parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * ConvectiveVelocityXParam
            (
            );
            /**Returns  the convective velocity Y parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * ConvectiveVelocityYParam
            (
            );
            /**Returns  the convective velocity Z parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * ConvectiveVelocityZParam
            (
            );
            /**Returns  the sound speed parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * SoundSpeedParam
            (
            );
            /**Returns  the fluid density parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * FluidDensityParam
            (
            );
            /**Returns  the wall friction velocity parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * WallFrictionVelocityParam
            (
            );
            /**Returns  the fluid viscosity parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * FluidViscosityParam
            (
            );
            /**Returns  the boundary layer thickness parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * BoundaryLayerThicknessParam
            (
            );
            /**Returns  the displacement thickness parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * DisplacementThicknessParam
            (
            );
            /**Returns  the momentum thickness parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * MomentumThicknessParam
            (
            );
            /**Returns  the wall shear stress parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * WallShearStressParam
            (
            );
            /**Returns  the correlation decay rate (alpha) parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * CorrelationDecayRateAlphaParam
            (
            );
            /**Returns  the correlation decay rate (beta) parameter 
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: NXOpen::Expression * CorrelationDecayRateBetaParam
            (
            );
            /** The number of user defined expressions when a user defined DLL is provided.
                        If there is no user defined DLL then this returns 0.
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : None */
            public: int GetNumUserDefinedExpressions
            (
            );
            /** The nth user defined expressions from the provided DLL.
                        If there is no provided DLL or the expresson index is out of range then a NULL expressions is provided.
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void GetNthUserDefinedExpression
            (
                int expressionIndex /** expressionindex */ ,
                NXString* expressionName /** expressionname */ ,
                NXOpen::Expression ** userExpression /** userexpression */ 
            );
            /** Load the user defined DLL that provides custom parameters for the TBL Model
                    
             <br>  Created in NX1872.0.0.  <br>  
             <br> License requirements : nx_masterfem ("Finite Element Modeling") OR nx_design_sim ("NX Design Simulation") */
            public: void LoadUserDefinedDll
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
