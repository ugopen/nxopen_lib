#ifndef NXOpen_AME_IMPORTECLASSMAPPINGBUILDER_HXX_INCLUDED
#define NXOpen_AME_IMPORTECLASSMAPPINGBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     AME_ImportEClassMappingBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libameopencpp_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace AME
    {
        class ImportEClassMappingBuilder;
    }
    class Builder;
    namespace AME
    {
        /**
                enum for import eClass mapping mode.
                These are 2 modes of import eClass mapping.This modes will be applicable for all eClass objects which are importing.
            */
        enum ImportEclassMappingMode
        {
            ImportEclassMappingModeOverride/** override */ ,
            ImportEclassMappingModeDontOverride/** dont override */ 
        };

        /**
                enum for import mapping file.
                These can be two import mapping files: 1)eCl@ss mapping and 2)BMEcat mapping
            */
        enum ImportMappingType
        {
            ImportMappingTypeEclass/** eclass */ ,
            ImportMappingTypeBmecat/** bmecat */ 
        };

    }
    namespace AME
    {
        class _ImportEClassMappingBuilderBuilder;
        class ImportEClassMappingBuilderImpl;
        /** Import eClass mapping <br> To create a new instance of this class, use @link NXOpen::AME::AMEManager::CreateImportEclassMappingBuilder  NXOpen::AME::AMEManager::CreateImportEclassMappingBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class AMEOPENCPPEXPORT  ImportEClassMappingBuilder : public NXOpen::Builder
        {
            private: ImportEClassMappingBuilderImpl * m_importeclassmappingbuilder_impl;
            private: friend class  _ImportEClassMappingBuilderBuilder;
            protected: ImportEClassMappingBuilder();
            public: ~ImportEClassMappingBuilder();
            /**Returns  the eClass mapping file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXString FilePath
            (
            );
            /**Sets  the eClass mapping file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetFilePath
            (
                const NXString & filePath /** filepath */ 
            );
            /**Sets  the eClass mapping file
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            void SetFilePath
            (
                const char * filePath /** filepath */ 
            );
            /**Returns  the enum for import eClass mapping mode
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ImportEclassMappingMode ImportMode
            (
            );
            /**Sets  the enum for import eClass mapping mode
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetImportMode
            (
                NXOpen::AME::ImportEclassMappingMode importEClassMappingMode /** importeclassmappingmode */ 
            );
            /** Validate import eClass xml file path
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateFilePath
            (
            );
            /** Validate import eClass xml format
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void ValidateXmlFormat
            (
            );
            /**Returns  the enum for import mapping type
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: NXOpen::AME::ImportMappingType ImportMappingType
            (
            );
            /**Sets  the enum for import mapping type
             <br>  Created in NX1926.0.0.  <br>  
             <br> License requirements : ad_automation_design ("FULL AUTOMATION DESIGNER") */
            public: void SetImportMappingType
            (
                NXOpen::AME::ImportMappingType importMappingType /** importmappingtype */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
