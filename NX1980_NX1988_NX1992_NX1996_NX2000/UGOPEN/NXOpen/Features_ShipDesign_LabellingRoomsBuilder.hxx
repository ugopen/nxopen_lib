#ifndef NXOpen_FEATURES_SHIPDESIGN_LABELLINGROOMSBUILDER_HXX_INCLUDED
#define NXOpen_FEATURES_SHIPDESIGN_LABELLINGROOMSBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Features_ShipDesign_LabellingRoomsBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_features_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Features
    {
        namespace ShipDesign
        {
            class LabellingRoomsBuilder;
        }
    }
    namespace Annotations
    {
        class PmiNote;
    }
    namespace Assemblies
    {
        class SelectComponentList;
    }
    class Builder;
    namespace Features
    {
        namespace ShipDesign
        {
            class _LabellingRoomsBuilderBuilder;
            class LabellingRoomsBuilderImpl;
            /**
                       Represents a @link Features::ShipDesign::LabellingRoomsBuilder Features::ShipDesign::LabellingRoomsBuilder@endlink  builder
                     <br> To create a new instance of this class, use @link NXOpen::Features::ShipCollection::CreateLabellingRoomsBuilder  NXOpen::Features::ShipCollection::CreateLabellingRoomsBuilder @endlink  <br> 
             <br>  Created in NX12.0.0.  <br>  
            */
            class NXOPENCPP_FEATURESEXPORT  LabellingRoomsBuilder : public NXOpen::Builder
            {
                /** Settings that indicate how to handle the exsiting label.*/
                public: enum ExisingLabelOptions
                {
                    ExisingLabelOptionsPreserve/** preserve */ ,
                    ExisingLabelOptionsDelete/** delete */ 
                };

                private: LabellingRoomsBuilderImpl * m_labellingroomsbuilder_impl;
                private: friend class  _LabellingRoomsBuilderBuilder;
                protected: LabellingRoomsBuilder();
                public: ~LabellingRoomsBuilder();
                /**Returns  the rooms or equipment selection 
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Assemblies::SelectComponentList * RoomsSelection
                (
                );
                /** Get rooms pmi notes
                 <br>  Created in NX12.0.0.  <br>  
                 <br> License requirements : None */
                public: void GetPmiNoteTags
                (
                    std::vector<NXOpen::Annotations::PmiNote *> & pmiNoteTags /** pminotetags */ 
                );
                /**Returns the option to specify how to handle existing label
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: NXOpen::Features::ShipDesign::LabellingRoomsBuilder::ExisingLabelOptions ExsitingLabelOption
                (
                );
                /**Sets the option to specify how to handle existing label
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetExsitingLabelOption
                (
                    NXOpen::Features::ShipDesign::LabellingRoomsBuilder::ExisingLabelOptions existingLabel /** existinglabel */ 
                );
                /**Returns  the setting that indicates whether pmi note  will be associative with room or equipment
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : None */
                public: bool Associativity
                (
                );
                /**Sets  the setting that indicates whether pmi note  will be associative with room or equipment
                 <br>  Created in NX1899.0.0.  <br>  
                 <br> License requirements : nx_ship_gen_arrange ("Ship General Arrangement") */
                public: void SetAssociativity
                (
                    bool isAssociativity /** isassociativity */ 
                );
            };
        }
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
