#ifndef NXOpen_TOOLING_FACEATTRIBUTEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_FACEATTRIBUTEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_FaceAttributeBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class FaceAttributeBuilder;
    }
    class Builder;
    namespace Tooling
    {
        class _FaceAttributeBuilderBuilder;
        class FaceAttributeBuilderImpl;
        /** Represents a builder to be used to create face attribute. <br> To create a new instance of this class, use @link NXOpen::Tooling::ManufacturingGeometryCollection::CreateFaceAttributeBuilder  NXOpen::Tooling::ManufacturingGeometryCollection::CreateFaceAttributeBuilder @endlink  <br> 
         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  FaceAttributeBuilder : public NXOpen::Builder
        {
            private: FaceAttributeBuilderImpl * m_faceattributebuilder_impl;
            private: friend class  _FaceAttributeBuilderBuilder;
            protected: FaceAttributeBuilder();
            public: ~FaceAttributeBuilder();
            /** Delete an attribute item.
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") OR prog_die_wizard ("UG/Progressive Die Wizard") OR die_engineering ("DIE ENGINEERING") OR ug_die_design ("Die Design") OR nx_electrode_wizard ("NX Electrode Wizard") OR nx_engineering_die_wizard ("NX Engineering Die Wizard") */
            public: void DeleteItem
            (
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
