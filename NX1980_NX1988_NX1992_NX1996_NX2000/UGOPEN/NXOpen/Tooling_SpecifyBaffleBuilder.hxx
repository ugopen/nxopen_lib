#ifndef NXOpen_TOOLING_SPECIFYBAFFLEBUILDER_HXX_INCLUDED
#define NXOpen_TOOLING_SPECIFYBAFFLEBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     Tooling_SpecifyBaffleBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/SelectObjectList.hxx>
#include <NXOpen/libnxopencpp_tooling_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace Tooling
    {
        class SpecifyBaffleBuilder;
    }
    class Builder;
    class NXColor;
    class SelectBodyList;
    namespace Tooling
    {
        class _SpecifyBaffleBuilderBuilder;
        class SpecifyBaffleBuilderImpl;
        /** Represents a builder to be used to create specify baffle.  <br> To create a new instance of this class, use @link NXOpen::Tooling::SpecifyBaffleCollection::CreateBuilder  NXOpen::Tooling::SpecifyBaffleCollection::CreateBuilder @endlink  <br> 
        Default values.
        <list type="table"> 
         
        <listheader><term> 
        Property</term>  <description> 
        Value</description> </listheader>
        <item><term> 
         
        AttributeType </term> <description> 
         
        BodyAsChannel </description> </item> 

        <item><term> 
         
        Layer </term> <description> 
         
        1 </description> </item> 

        </list> 

         <br>  Created in NX8.0.0.  <br>  
        */
        class NXOPENCPP_TOOLINGEXPORT  SpecifyBaffleBuilder : public NXOpen::Builder
        {
            /** Types to specify how to assign attributes to the selected body. */
            public: enum AttributeTypes
            {
                AttributeTypesBodyAsChannel/**Cooling channel attributes assigned to the selected body.*/,
                AttributeTypesBodyAsBaffle/**Cooling baffle attributes assigned to the selected body.*/
            };

            private: SpecifyBaffleBuilderImpl * m_specifybafflebuilder_impl;
            private: friend class  _SpecifyBaffleBuilderBuilder;
            protected: SpecifyBaffleBuilder();
            public: ~SpecifyBaffleBuilder();
            /**Returns  the type of attributes conversion type values. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::Tooling::SpecifyBaffleBuilder::AttributeTypes AttributeType
            (
            );
            /**Sets  the type of attributes conversion type values. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetAttributeType
            (
                NXOpen::Tooling::SpecifyBaffleBuilder::AttributeTypes attrType /** attrtype */ 
            );
            /**Returns  the channel or body to assign new attributes. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::SelectBodyList * Channels
            (
            );
            /**Returns  the type to specify the Cooling fittings types: oil, air or water. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : None */
            public: NXString ChannelType
            (
            );
            /**Sets  the type to specify the Cooling fittings types: oil, air or water. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetChannelType
            (
                const NXString & channelType /** channeltype */ 
            );
            /**Sets  the type to specify the Cooling fittings types: oil, air or water. 
             <br>  Created in NX10.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            void SetChannelType
            (
                const char * channelType /** channeltype */ 
            );
            /**Returns  the layer value for the selected channels. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: int Layer
            (
            );
            /**Sets  the layer value for the selected channels. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetLayer
            (
                int layer /** layer */ 
            );
            /**Returns  the selected channel body color. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NXOpen::NXColor * ChannelColor
            (
            );
            /**Sets  the selected channel body color. 
             <br>  Created in NX8.0.1.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetChannelColor
            (
                NXOpen::NXColor * channelColor /** channelcolor */ 
            );
            /** Returns color value for the selected channels. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Tooling::SpecifyBaffleBuilder::ChannelColor Tooling::SpecifyBaffleBuilder::ChannelColor@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use Tooling::SpecifyBaffleBuilder::ChannelColor instead.") void GetChannelColor
            (
                double* redValue /** red value between 0 and 1 */,
                double* greenValue /** green value between 0 and 1 */,
                double* blueValue /** blue value between 0 and 1 */
            );
            /** Sets the channel color. 
             <br>  @deprecated Deprecated in NX8.5.0.  Use @link Tooling::SpecifyBaffleBuilder::SetChannelColor Tooling::SpecifyBaffleBuilder::SetChannelColor@endlink  instead. <br>  

             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: NX_DEPRECATED("Deprecated in NX8.5.0.  Use Tooling::SpecifyBaffleBuilder::SetChannelColor instead.") void SetChannelColor
            (
                double redValue /** red value between 0 and 1 */,
                double greenValue /** green value between 0 and 1 */,
                double blueValue /** blue value between 0 and 1 */
            );
            /** Sets the color value modified or not. 
             <br>  Created in NX8.0.0.  <br>  
             <br> License requirements : ug_mold_design ("UG MOLD") */
            public: void SetColorModified
            (
                bool modified /** modified */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
