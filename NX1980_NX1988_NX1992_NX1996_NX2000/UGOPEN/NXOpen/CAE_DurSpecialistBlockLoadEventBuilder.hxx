#ifndef NXOpen_CAE_DURSPECIALISTBLOCKLOADEVENTBUILDER_HXX_INCLUDED
#define NXOpen_CAE_DURSPECIALISTBLOCKLOADEVENTBUILDER_HXX_INCLUDED
//--------------------------------------------------------------------------
//  Header for C++ interface to JA API
//--------------------------------------------------------------------------
//
//  Source File:
//     CAE_DurSpecialistBlockLoadEventBuilder.ja
//
//  Generated by:
//     apiwrap
//
//  WARNING:
//    This file is automatically generated - do not edit by hand
//
#ifdef _MSC_VER
#pragma once
#endif

#include <NXOpen/NXDeprecation.hxx>
#include <vector>
#include <NXOpen/NXString.hxx>
#include <NXOpen/Callback.hxx>
#include <NXOpen/CAE_DurSpecialistDataSources.hxx>
#include <NXOpen/CAE_DurSpecialistEvent.hxx>
#include <NXOpen/CAE_DurSpecialistLoadLengthBuilder.hxx>
#include <NXOpen/CAE_SimSolution.hxx>
#include <NXOpen/Expression.hxx>
#include <NXOpen/Builder.hxx>
#include <NXOpen/libnxopencpp_cae_exports.hxx>

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable:4996)
#endif
#ifdef __GNUC__
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

namespace NXOpen
{
    namespace CAE
    {
        class DurSpecialistBlockLoadEventBuilder;
    }
    class Builder;
    namespace CAE
    {
        class DurSpecialistLoadLengthBuilder;
    }
    namespace CAE
    {
        class DurSpecialistTemperatureSource;
    }
    namespace CAE
    {
        class SimSolution;
    }
    class Expression;
    namespace CAE
    {
        class _DurSpecialistBlockLoadEventBuilderBuilder;
        class DurSpecialistBlockLoadEventBuilderImpl;
        /** Represents a @link NXOpen::CAE::DurSpecialistBlockLoadEvent NXOpen::CAE::DurSpecialistBlockLoadEvent@endlink  builder.  <br> To create a new instance of this class, use @link NXOpen::CAE::DurSpecialistEventCollection::CreateBlockLoadEventBuilder  NXOpen::CAE::DurSpecialistEventCollection::CreateBlockLoadEventBuilder @endlink  <br> 
         <br>  Created in NX12.0.0.  <br>  
        */
        class NXOPENCPP_CAEEXPORT  DurSpecialistBlockLoadEventBuilder : public NXOpen::Builder
        {
            /** the Results source */
            public: enum ResultSource
            {
                ResultSourceSolution/** use solution */,
                ResultSourceFile/** use selected file */
            };

            /** Represents the pattern of the block load */
            public: enum PatternType
            {
                PatternTypeSwelling/** between 0 and value */,
                PatternTypeAlternating/** between value and -value */,
                PatternTypeFree/** between two values */
            };

            private: DurSpecialistBlockLoadEventBuilderImpl * m_durspecialistblockloadeventbuilder_impl;
            private: friend class  _DurSpecialistBlockLoadEventBuilderBuilder;
            protected: DurSpecialistBlockLoadEventBuilder();
            public: ~DurSpecialistBlockLoadEventBuilder();
            /**Returns  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Name
            (
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetName
            (
                const NXString & name /** name */ 
            );
            /**Sets  the name. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetName
            (
                const char * name /** name */ 
            );
            /**Returns  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString Description
            (
            );
            /**Sets  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDescription
            (
                const NXString & description /** description */ 
            );
            /**Sets  the description. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetDescription
            (
                const char * description /** description */ 
            );
            /**Returns  the pattern. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistBlockLoadEventBuilder::PatternType Pattern
            (
            );
            /**Sets  the pattern. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetPattern
            (
                NXOpen::CAE::DurSpecialistBlockLoadEventBuilder::PatternType type /** type */ 
            );
            /**Returns  the upper value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * UpperValue
            (
            );
            /**Returns  the lower value. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::Expression * LowerValue
            (
            );
            /**Returns  the start with lower value flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: bool StartWithLower
            (
            );
            /**Sets  the start with lower value flag. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetStartWithLower
            (
                bool startWithLower /** startwithlower */ 
            );
            /**Returns  the load length. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistLoadLengthBuilder * LoadLength
            (
            );
            /**Returns  the selection criterion for update. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistEvent::UpdateCriterionType ModeSelection
            (
            );
            /**Sets  the selection criterion for update. 
             <br>  Created in NX12.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetModeSelection
            (
                NXOpen::CAE::DurSpecialistEvent::UpdateCriterionType type /** type */ 
            );
            /**Returns  the selected subcase (index starting with 1). 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: int Subcase
            (
            );
            /**Sets  the selected subcase (index starting with 1). 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSubcase
            (
                int subcaseIndex /** starts with 1 */
            );
            /** Get the unit system.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistDataSources::UnitSystem GetUnitSystem
            (
            );
            /** Set the unit system. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetUnitSystem
            (
                NXOpen::CAE::DurSpecialistDataSources::UnitSystem unitSystem /** unitsystem */ 
            );
            /** Get the file name.  @return  
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXString GetFileName
            (
            );
            /** Set file name and type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetFile
            (
                const NXString & fileName /** filename */ ,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /** Set file name and type 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            void SetFile
            (
                const char * fileName /** filename */ ,
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /**Returns  the file type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistDataSources::FileFormat DataSourceType
            (
            );
            /**Sets  the file type. 
             <br>  Created in NX1847.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetDataSourceType
            (
                NXOpen::CAE::DurSpecialistDataSources::FileFormat type /** type */ 
            );
            /** Set solution 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSolution
            (
                NXOpen::CAE::SimSolution * sol /** sol */ 
            );
            /**Returns  the result source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistBlockLoadEventBuilder::ResultSource Source
            (
            );
            /**Sets  the result source. 
             <br>  Created in NX1899.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetSource
            (
                NXOpen::CAE::DurSpecialistBlockLoadEventBuilder::ResultSource source /** source */ 
            );
            /**Returns  the temperature data source. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : None */
            public: NXOpen::CAE::DurSpecialistTemperatureSource * TemperatureSource
            (
            );
            /**Sets  the temperature data source. 
             <br>  Created in NX1953.0.0.  <br>  
             <br> License requirements : sc_dur_specialist ("Simcenter Specialist Durability") */
            public: void SetTemperatureSource
            (
                NXOpen::CAE::DurSpecialistTemperatureSource * theTemperatureSource /** thetemperaturesource */ 
            );
        };
    }
}

#ifdef _MSC_VER
#pragma warning(pop)
#endif
#ifdef __GNUC__
#ifndef NX_NO_GCC_DEPRECATION_WARNINGS
#pragma GCC diagnostic warning "-Wdeprecated-declarations"
#endif
#endif

#undef EXPORTLIBRARY
#endif
